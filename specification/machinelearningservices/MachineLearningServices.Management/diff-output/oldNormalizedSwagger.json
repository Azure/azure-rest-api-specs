{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Services",
    "version": "2025-07-01-preview",
    "description": "These APIs allow end users to operate on Azure Machine Learning Workspace resources."
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/providers/microsoft.MachineLearningServices/operations": {
      "get": {
        "operationId": "Operations_List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/Workspace/operationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.MachineLearningServices/locations/{location}/availableQuota": {
      "get": {
        "operationId": "PTUQuota_ListAvailable",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AvailableQuotaArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List available MaaS PTU quota.": {
            "$ref": "./examples/PTUQuota/listAvailable.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.MachineLearningServices/locations/{location}/availableQuota/default": {
      "get": {
        "operationId": "PTUQuota_GetAvailable",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AvailableQuota"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get available MaaS PTU quota.": {
            "$ref": "./examples/PTUQuota/getAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.MachineLearningServices/locations/{location}/quotaAndUsage": {
      "get": {
        "operationId": "PTUQuota_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/UsageAndQuotaDetailsArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List MaaS PTU usage and quota.": {
            "$ref": "./examples/PTUQuota/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.MachineLearningServices/locations/{location}/quotas": {
      "get": {
        "operationId": "Quotas_List",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ListWorkspaceQuotas"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List workspace quotas by VMFamily": {
            "$ref": "./examples/Quota/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.MachineLearningServices/locations/{location}/updateQuotas": {
      "post": {
        "operationId": "Quotas_Update",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuotaUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/UpdateWorkspaceQuotasResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "update quotas": {
            "$ref": "./examples/Quota/update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.MachineLearningServices/locations/{location}/usages": {
      "get": {
        "operationId": "Usages_List",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ListUsagesResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Usages": {
            "$ref": "./examples/Usage/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.MachineLearningServices/locations/{location}/vmSizes": {
      "get": {
        "operationId": "VirtualMachineSizes_List",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/VirtualMachineSizeListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List VM Sizes": {
            "$ref": "./examples/VirtualMachineSize/list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.MachineLearningServices/registries": {
      "get": {
        "operationId": "Registries_ListBySubscription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List registries by subscription.": {
            "$ref": "./examples/Registries/listBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.MachineLearningServices/workspaces": {
      "get": {
        "operationId": "Workspaces_ListBySubscription",
        "parameters": [
          {
            "name": "kind",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "type": "string"
          },
          {
            "name": "aiCapabilities",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspaces by subscription": {
            "$ref": "./examples/Workspace/listBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries": {
      "get": {
        "operationId": "Registries_List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List registries with system created accounts.": {
            "$ref": "./examples/Registries/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}": {
      "get": {
        "operationId": "Registries_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry with system created accounts.": {
            "$ref": "./examples/Registries/get.json"
          }
        }
      },
      "put": {
        "operationId": "Registries_CreateOrUpdate",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry with system created accounts.": {
            "$ref": "./examples/Registries/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Registries_Update",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialRegistryPartialTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Registry with system created accounts.": {
            "$ref": "./examples/Registries/update.json"
          }
        }
      },
      "delete": {
        "operationId": "Registries_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry.": {
            "$ref": "./examples/Registries/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/codes": {
      "get": {
        "operationId": "RegistryCodeContainers_List",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Code Container.": {
            "$ref": "./examples/Registry/CodeContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/codes/{codeName}": {
      "get": {
        "operationId": "RegistryCodeContainers_Get",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "codeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Code Container.": {
            "$ref": "./examples/Registry/CodeContainer/get.json"
          }
        }
      },
      "put": {
        "operationId": "RegistryCodeContainers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "codeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Code Container.": {
            "$ref": "./examples/Registry/CodeContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistryCodeContainers_Delete",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "codeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Code Container.": {
            "$ref": "./examples/Registry/CodeContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/codes/{codeName}/versions": {
      "get": {
        "operationId": "RegistryCodeVersions_List",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "codeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Code Version.": {
            "$ref": "./examples/Registry/CodeVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/codes/{codeName}/versions/{version}": {
      "get": {
        "operationId": "RegistryCodeVersions_Get",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "codeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Code Version.": {
            "$ref": "./examples/Registry/CodeVersion/get.json"
          }
        }
      },
      "put": {
        "operationId": "RegistryCodeVersions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "codeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Code Version.": {
            "$ref": "./examples/Registry/CodeVersion/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistryCodeVersions_Delete",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "codeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Code Version.": {
            "$ref": "./examples/Registry/CodeVersion/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/codes/{codeName}/versions/{version}/startPendingUpload": {
      "post": {
        "operationId": "RegistryCodeVersions_CreateOrGetStartPendingUpload",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "codeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PendingUploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PendingUploadResponseDto"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrGetStartPendingUpload Registry Code Version.": {
            "$ref": "./examples/Registry/CodeVersion/createOrGetStartPendingUpload.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/components": {
      "get": {
        "operationId": "RegistryComponentContainers_List",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Component Container.": {
            "$ref": "./examples/Registry/ComponentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/components/{componentName}": {
      "get": {
        "operationId": "RegistryComponentContainers_Get",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Component Container.": {
            "$ref": "./examples/Registry/ComponentContainer/get.json"
          }
        }
      },
      "put": {
        "operationId": "RegistryComponentContainers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Component Container.": {
            "$ref": "./examples/Registry/ComponentContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistryComponentContainers_Delete",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Component Container.": {
            "$ref": "./examples/Registry/ComponentContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/components/{componentName}/versions": {
      "get": {
        "operationId": "RegistryComponentVersions_List",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Component Version.": {
            "$ref": "./examples/Registry/ComponentVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/components/{componentName}/versions/{version}": {
      "get": {
        "operationId": "RegistryComponentVersions_Get",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Component Version.": {
            "$ref": "./examples/Registry/ComponentVersion/get.json"
          }
        }
      },
      "put": {
        "operationId": "RegistryComponentVersions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Component Version.": {
            "$ref": "./examples/Registry/ComponentVersion/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistryComponentVersions_Delete",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "componentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Component Version.": {
            "$ref": "./examples/Registry/ComponentVersion/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/data": {
      "get": {
        "operationId": "RegistryDataContainers_List",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryList Registry Data Container.": {
            "$ref": "./examples/Registry/DataContainer/registryList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/data/{name}": {
      "get": {
        "operationId": "RegistryDataContainers_Get",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Data Container.": {
            "$ref": "./examples/Registry/DataContainer/get.json"
          }
        }
      },
      "put": {
        "operationId": "RegistryDataContainers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Data Container.": {
            "$ref": "./examples/Registry/DataContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistryDataContainers_Delete",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Data Container.": {
            "$ref": "./examples/Registry/DataContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/data/{name}/versions": {
      "get": {
        "operationId": "RegistryDataVersions_List",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "$tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryList Registry Data Version Base.": {
            "$ref": "./examples/Registry/DataVersionBase/registryList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/data/{name}/versions/{version}": {
      "get": {
        "operationId": "RegistryDataVersions_Get",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Data Version Base.": {
            "$ref": "./examples/Registry/DataVersionBase/get.json"
          }
        }
      },
      "put": {
        "operationId": "RegistryDataVersions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Data Version Base.": {
            "$ref": "./examples/Registry/DataVersionBase/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistryDataVersions_Delete",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Data Version Base.": {
            "$ref": "./examples/Registry/DataVersionBase/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/data/{name}/versions/{version}/startPendingUpload": {
      "post": {
        "operationId": "RegistryDataVersions_CreateOrGetStartPendingUpload",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PendingUploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PendingUploadResponseDto"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrGetStartPendingUpload Registry Data Version Base.": {
            "$ref": "./examples/Registry/DataVersionBase/createOrGetStartPendingUpload.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/datareferences/{name}/versions/{version}": {
      "post": {
        "operationId": "RegistryDataReferences_GetBlobReferenceSAS",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetBlobReferenceSASRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/GetBlobReferenceSASResponseDto"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetBlobReferenceSAS Data Reference.": {
            "$ref": "./examples/DataReference/getBlobReferenceSAS.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/environments": {
      "get": {
        "operationId": "RegistryEnvironmentContainers_List",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Environment Container.": {
            "$ref": "./examples/Registry/EnvironmentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/environments/{environmentName}": {
      "get": {
        "operationId": "RegistryEnvironmentContainers_Get",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Environment Container.": {
            "$ref": "./examples/Registry/EnvironmentContainer/get.json"
          }
        }
      },
      "put": {
        "operationId": "RegistryEnvironmentContainers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Environment Container.": {
            "$ref": "./examples/Registry/EnvironmentContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistryEnvironmentContainers_Delete",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Environment Container.": {
            "$ref": "./examples/Registry/EnvironmentContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/environments/{environmentName}/versions": {
      "get": {
        "operationId": "RegistryEnvironmentVersions_List",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Environment Version.": {
            "$ref": "./examples/Registry/EnvironmentVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/environments/{environmentName}/versions/{version}": {
      "get": {
        "operationId": "RegistryEnvironmentVersions_Get",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Environment Version.": {
            "$ref": "./examples/Registry/EnvironmentVersion/get.json"
          }
        }
      },
      "put": {
        "operationId": "RegistryEnvironmentVersions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Environment Version.": {
            "$ref": "./examples/Registry/EnvironmentVersion/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistryEnvironmentVersions_Delete",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Environment Version.": {
            "$ref": "./examples/Registry/EnvironmentVersion/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/models": {
      "get": {
        "operationId": "RegistryModelContainers_List",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Model Container.": {
            "$ref": "./examples/Registry/ModelContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}": {
      "get": {
        "operationId": "RegistryModelContainers_Get",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "modelName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Model Container.": {
            "$ref": "./examples/Registry/ModelContainer/get.json"
          }
        }
      },
      "put": {
        "operationId": "RegistryModelContainers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "modelName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Model Container.": {
            "$ref": "./examples/Registry/ModelContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistryModelContainers_Delete",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "modelName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Model Container.": {
            "$ref": "./examples/Registry/ModelContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}/versions": {
      "get": {
        "operationId": "RegistryModelVersions_List",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "modelName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "query",
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Registry Model Version.": {
            "$ref": "./examples/Registry/ModelVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}/versions/{version}": {
      "get": {
        "operationId": "RegistryModelVersions_Get",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "modelName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Registry Model Version.": {
            "$ref": "./examples/Registry/ModelVersion/get.json"
          }
        }
      },
      "put": {
        "operationId": "RegistryModelVersions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "modelName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Registry Model Version.": {
            "$ref": "./examples/Registry/ModelVersion/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistryModelVersions_Delete",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "modelName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Registry Model Version.": {
            "$ref": "./examples/Registry/ModelVersion/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/models/{modelName}/versions/{version}/startPendingUpload": {
      "post": {
        "operationId": "RegistryModelVersions_CreateOrGetStartPendingUpload",
        "parameters": [
          {
            "$ref": "registries.json#/parameters/RegistryNameParameter"
          },
          {
            "name": "modelName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PendingUploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PendingUploadResponseDto"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrGetStartPendingUpload Registry Model Version.": {
            "$ref": "./examples/Registry/ModelVersion/createOrGetStartPendingUpload.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/registries/{registryName}/removeRegions": {
      "post": {
        "operationId": "Registries_RemoveRegions",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryTrackedResource"
            }
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Remove regions from registry": {
            "$ref": "./examples/Registries/removeRegions.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces": {
      "get": {
        "operationId": "Workspaces_ListByResourceGroup",
        "parameters": [
          {
            "name": "kind",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$skip",
            "in": "query",
            "type": "string"
          },
          {
            "name": "aiCapabilities",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspaces by Resource Group": {
            "$ref": "./examples/Workspace/listByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}": {
      "get": {
        "operationId": "Workspaces_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace": {
            "$ref": "./examples/Workspace/get.json"
          }
        }
      },
      "put": {
        "operationId": "Workspaces_CreateOrUpdate",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Workspace": {
            "$ref": "./examples/Workspace/create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Workspaces_Update",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace": {
            "$ref": "./examples/Workspace/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Workspaces_Delete",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "forceToPurge",
            "in": "query",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace": {
            "$ref": "./examples/Workspace/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints": {
      "get": {
        "operationId": "BatchEndpoints_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "count",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Batch Endpoint.": {
            "$ref": "./examples/Workspace/BatchEndpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}": {
      "get": {
        "operationId": "BatchEndpoints_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Batch Endpoint.": {
            "$ref": "./examples/Workspace/BatchEndpoint/get.json"
          }
        }
      },
      "put": {
        "operationId": "BatchEndpoints_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Batch Endpoint.": {
            "$ref": "./examples/Workspace/BatchEndpoint/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "BatchEndpoints_Update",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithIdentity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BatchEndpointTrackedResource"
            }
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace Batch Endpoint.": {
            "$ref": "./examples/Workspace/BatchEndpoint/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BatchEndpoints_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Batch Endpoint.": {
            "$ref": "./examples/Workspace/BatchEndpoint/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments": {
      "get": {
        "operationId": "BatchDeployments_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Batch Deployment.": {
            "$ref": "./examples/Workspace/BatchDeployment/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/deployments/{deploymentName}": {
      "get": {
        "operationId": "BatchDeployments_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Batch Deployment.": {
            "$ref": "./examples/Workspace/BatchDeployment/get.json"
          }
        }
      },
      "put": {
        "operationId": "BatchDeployments_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Batch Deployment.": {
            "$ref": "./examples/Workspace/BatchDeployment/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "BatchDeployments_Update",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BatchDeploymentTrackedResource"
            }
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace Batch Deployment.": {
            "$ref": "./examples/Workspace/BatchDeployment/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BatchDeployments_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Batch Deployment.": {
            "$ref": "./examples/Workspace/BatchDeployment/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/batchEndpoints/{endpointName}/listkeys": {
      "post": {
        "operationId": "BatchEndpoints_ListKeys",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Workspace Batch Endpoint.": {
            "$ref": "./examples/Workspace/BatchEndpoint/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/capabilityHosts/{name}": {
      "get": {
        "operationId": "CapabilityHosts_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CapabilityHostResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get CapabilityHost.": {
            "$ref": "./examples/CapabilityHost/get.json"
          }
        }
      },
      "put": {
        "operationId": "CapabilityHosts_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CapabilityHostResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CapabilityHostResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CapabilityHostResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate CapabilityHost.": {
            "$ref": "./examples/CapabilityHost/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CapabilityHosts_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete CapabilityHost.": {
            "$ref": "./examples/CapabilityHost/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/codes": {
      "get": {
        "operationId": "CodeContainers_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Code Container.": {
            "$ref": "./examples/Workspace/CodeContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}": {
      "get": {
        "operationId": "CodeContainers_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Code Container.": {
            "$ref": "./examples/Workspace/CodeContainer/get.json"
          }
        }
      },
      "put": {
        "operationId": "CodeContainers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Code Container.": {
            "$ref": "./examples/Workspace/CodeContainer/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "CodeContainers_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Code Container.": {
            "$ref": "./examples/Workspace/CodeContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions": {
      "get": {
        "operationId": "CodeVersions_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "hash",
            "in": "query",
            "type": "string"
          },
          {
            "name": "hashVersion",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Code Version.": {
            "$ref": "./examples/Workspace/CodeVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}": {
      "get": {
        "operationId": "CodeVersions_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Code Version.": {
            "$ref": "./examples/Workspace/CodeVersion/get.json"
          }
        }
      },
      "put": {
        "operationId": "CodeVersions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CodeVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Code Version.": {
            "$ref": "./examples/Workspace/CodeVersion/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "CodeVersions_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Code Version.": {
            "$ref": "./examples/Workspace/CodeVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}/publish": {
      "post": {
        "operationId": "CodeVersions_Publish",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DestinationAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Publish Workspace Code Version.": {
            "$ref": "./examples/Workspace/CodeVersion/publish.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/codes/{name}/versions/{version}/startPendingUpload": {
      "post": {
        "operationId": "CodeVersions_CreateOrGetStartPendingUpload",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PendingUploadRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PendingUploadResponseDto"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrGetStartPendingUpload Workspace Code Version.": {
            "$ref": "./examples/Workspace/CodeVersion/createOrGetStartPendingUpload.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/components": {
      "get": {
        "operationId": "ComponentContainers_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Component Container.": {
            "$ref": "./examples/Workspace/ComponentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}": {
      "get": {
        "operationId": "ComponentContainers_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Component Container.": {
            "$ref": "./examples/Workspace/ComponentContainer/get.json"
          }
        }
      },
      "put": {
        "operationId": "ComponentContainers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Component Container.": {
            "$ref": "./examples/Workspace/ComponentContainer/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "ComponentContainers_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Component Container.": {
            "$ref": "./examples/Workspace/ComponentContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions": {
      "get": {
        "operationId": "ComponentVersions_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Component Version.": {
            "$ref": "./examples/Workspace/ComponentVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions/{version}": {
      "get": {
        "operationId": "ComponentVersions_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Component Version.": {
            "$ref": "./examples/Workspace/ComponentVersion/get.json"
          }
        }
      },
      "put": {
        "operationId": "ComponentVersions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComponentVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Component Version.": {
            "$ref": "./examples/Workspace/ComponentVersion/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "ComponentVersions_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Component Version.": {
            "$ref": "./examples/Workspace/ComponentVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/components/{name}/versions/{version}/publish": {
      "post": {
        "operationId": "ComponentVersions_Publish",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DestinationAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Publish Workspace Component Version.": {
            "$ref": "./examples/Workspace/ComponentVersion/publish.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/computes": {
      "get": {
        "operationId": "Compute_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "$skip",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PaginatedComputeResourcesList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Computes": {
            "$ref": "./examples/Compute/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}": {
      "get": {
        "operationId": "Compute_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a AKS Compute": {
            "$ref": "./examples/Compute/get/AKSCompute.json"
          },
          "Get a AML Compute": {
            "$ref": "./examples/Compute/get/AmlCompute.json"
          },
          "Get a Kubernetes Compute": {
            "$ref": "./examples/Compute/get/KubernetesCompute.json"
          },
          "Get an ComputeInstance": {
            "$ref": "./examples/Compute/get/ComputeInstance.json"
          }
        }
      },
      "put": {
        "operationId": "Compute_CreateOrUpdate",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Attach a Kubernetes Compute": {
            "$ref": "./examples/Compute/createOrUpdate/KubernetesCompute.json"
          },
          "Create a AML Compute": {
            "$ref": "./examples/Compute/createOrUpdate/BasicAmlCompute.json"
          },
          "Create a DataFactory Compute": {
            "$ref": "./examples/Compute/createOrUpdate/BasicDataFactoryCompute.json"
          },
          "Create an AKS Compute": {
            "$ref": "./examples/Compute/createOrUpdate/BasicAKSCompute.json"
          },
          "Create an ComputeInstance Compute": {
            "$ref": "./examples/Compute/createOrUpdate/ComputeInstance.json"
          },
          "Create an ComputeInstance Compute with Schedules": {
            "$ref": "./examples/Compute/createOrUpdate/ComputeInstanceWithSchedules.json"
          },
          "Create an ComputeInstance Compute with minimal inputs": {
            "$ref": "./examples/Compute/createOrUpdate/ComputeInstanceMinimal.json"
          },
          "Update a AML Compute": {
            "$ref": "./examples/Compute/createOrUpdate/AmlCompute.json"
          },
          "Update an AKS Compute": {
            "$ref": "./examples/Compute/createOrUpdate/AKSCompute.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Compute_Update",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComputeResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a AmlCompute Compute": {
            "$ref": "./examples/Compute/patch.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Compute_Delete",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          },
          {
            "name": "underlyingResourceAction",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "Delete",
              "Detach"
            ],
            "x-ms-enum": {
              "name": "UnderlyingResourceAction",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Compute": {
            "$ref": "./examples/Compute/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/customServices": {
      "post": {
        "operationId": "Compute_UpdateCustomServices",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          },
          {
            "name": "customServices",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomService"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Custom Services": {
            "$ref": "./examples/Compute/updateCustomServices.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/getAllowedVmSizesForResize": {
      "post": {
        "operationId": "Compute_getAllowedResizeSizes",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/VirtualMachineSizeListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List VM Sizes": {
            "$ref": "./examples/Compute/getAllowedVMSizesForResize.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listKeys": {
      "post": {
        "operationId": "Compute_ListKeys",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ComputeSecrets"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List AKS Compute Keys": {
            "$ref": "./examples/Compute/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listNodes": {
      "post": {
        "operationId": "Compute_ListNodes",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AmlComputeNodesInformation"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get compute nodes information for a compute": {
            "$ref": "./examples/Compute/listNodes.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "nodes"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/resize": {
      "post": {
        "operationId": "Compute_Resize",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResizeSchema"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List VM Sizes": {
            "$ref": "./examples/Compute/resize.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/restart": {
      "post": {
        "operationId": "Compute_Restart",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Restart ComputeInstance Compute": {
            "$ref": "./examples/Compute/restart.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/start": {
      "post": {
        "operationId": "Compute_Start",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start ComputeInstance Compute": {
            "$ref": "./examples/Compute/start.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/stop": {
      "post": {
        "operationId": "Compute_Stop",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop ComputeInstance Compute": {
            "$ref": "./examples/Compute/stop.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/updateDataMounts": {
      "post": {
        "operationId": "Compute_UpdateDataMounts",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          },
          {
            "name": "dataMounts",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ComputeInstanceDataMount"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Data Mounts": {
            "$ref": "./examples/Compute/updateDataMounts.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/updateIdleShutdownSetting": {
      "post": {
        "operationId": "Compute_UpdateIdleShutdownSetting",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "computeName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z](?![a-zA-Z0-9-]*-\\d+$)[a-zA-Z0-9\\-]{2,23}$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdleShutdownSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update idle shutdown setting of ComputeInstance": {
            "$ref": "./examples/Compute/updateIdleShutdownSetting.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections": {
      "get": {
        "operationId": "WorkspaceConnections_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "target",
            "in": "query",
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeAll",
            "in": "query",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListWorkspaceConnections": {
            "$ref": "./examples/WorkspaceConnection/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}": {
      "get": {
        "operationId": "WorkspaceConnections_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/get.json"
          }
        }
      },
      "put": {
        "operationId": "WorkspaceConnections_Create",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/create.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkspaceConnections_Update",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionUpdateParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UpdateWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/update.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkspaceConnections_Delete",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeleteWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/deployments": {
      "get": {
        "operationId": "Connection_ListDeployments",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Azure OpenAI Connection Deployments": {
            "$ref": "./examples/WorkspaceConnection/listDeployments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/deployments/{deploymentName}": {
      "get": {
        "operationId": "Connection_GetDeployment",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure OpenAI Connection Deployment": {
            "$ref": "./examples/WorkspaceConnection/getDeployment.json"
          }
        }
      },
      "put": {
        "operationId": "Connection_CreateOrUpdateDeployment",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Azure OpenAI Connection Deployment": {
            "$ref": "./examples/WorkspaceConnection/createDeployment.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Connection_DeleteDeployment",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Azure OpenAI Connection Deployment": {
            "$ref": "./examples/WorkspaceConnection/deleteDeployment.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/listsecrets": {
      "post": {
        "operationId": "WorkspaceConnections_ListSecrets",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/listSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/models": {
      "get": {
        "operationId": "Connection_GetModels",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointModels"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure OpenAI Connection Models": {
            "$ref": "./examples/WorkspaceConnection/getModels.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiBlocklists": {
      "get": {
        "operationId": "ConnectionRaiBlocklists_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistPropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Rai Blocklist": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklist/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiBlocklists/{raiBlocklistName}": {
      "get": {
        "operationId": "ConnectionRaiBlocklist_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "raiBlocklistName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistPropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Rai Blocklist": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklist/get.json"
          }
        }
      },
      "put": {
        "operationId": "ConnectionRaiBlocklist_Create",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "raiBlocklistName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RaiBlocklistPropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistPropertiesBasicResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistPropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Rai Blocklist": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklist/create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ConnectionRaiBlocklist_Delete",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "raiBlocklistName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Rai Blocklist": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklist/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiBlocklists/{raiBlocklistName}/addRaiBlocklistItems": {
      "post": {
        "operationId": "ConnectionRaiBlocklistItem_AddBulk",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "raiBlocklistName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RaiBlocklistItemsBulkAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResource"
              }
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Bulk Rai Blocklist Items": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklistItem/addBulk.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiBlocklists/{raiBlocklistName}/deleteRaiBlocklistItems": {
      "post": {
        "operationId": "ConnectionRaiBlocklistItem_DeleteBulk",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "raiBlocklistName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RaiBlocklistItemsBulkDeleteRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Bulk Rai Blocklist Items": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklistItem/deleteBulk.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiBlocklists/{raiBlocklistName}/raiBlocklistItems": {
      "get": {
        "operationId": "ConnectionRaiBlocklistItems_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "raiBlocklistName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List RaiBlocklist Items": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklistItem/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiBlocklists/{raiBlocklistName}/raiBlocklistItems/{raiBlocklistItemName}": {
      "get": {
        "operationId": "ConnectionRaiBlocklistItem_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "raiBlocklistName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "raiBlocklistItemName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Rai RaiBlocklist Item": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklistItem/get.json"
          }
        }
      },
      "put": {
        "operationId": "ConnectionRaiBlocklistItem_Create",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "raiBlocklistName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "raiBlocklistItemName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create RaiBlocklist Item": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklistItem/create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ConnectionRaiBlocklistItem_Delete",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "raiBlocklistName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "raiBlocklistItemName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete RaiBlocklist Item": {
            "$ref": "./examples/WorkspaceConnection/RaiBlocklistItem/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiPolicies": {
      "get": {
        "operationId": "ConnectionRaiPolicies_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Rai policy": {
            "$ref": "./examples/WorkspaceConnection/RaiPolicy/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/raiPolicies/{raiPolicyName}": {
      "get": {
        "operationId": "ConnectionRaiPolicy_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "raiPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Rai policy": {
            "$ref": "./examples/WorkspaceConnection/RaiPolicy/get.json"
          }
        }
      },
      "put": {
        "operationId": "ConnectionRaiPolicy_Create",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "raiPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Rai policy": {
            "$ref": "./examples/WorkspaceConnection/RaiPolicy/create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ConnectionRaiPolicy_Delete",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "raiPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Rai policy": {
            "$ref": "./examples/WorkspaceConnection/RaiPolicy/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/connections/{connectionName}/testconnection": {
      "post": {
        "operationId": "WorkspaceConnections_TestConnection",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TestWorkspaceConnection": {
            "$ref": "./examples/WorkspaceConnection/testConnection.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/data": {
      "get": {
        "operationId": "DataContainers_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Data Container.": {
            "$ref": "./examples/Workspace/DataContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}": {
      "get": {
        "operationId": "DataContainers_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Data Container.": {
            "$ref": "./examples/Workspace/DataContainer/get.json"
          }
        }
      },
      "put": {
        "operationId": "DataContainers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Data Container.": {
            "$ref": "./examples/Workspace/DataContainer/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "DataContainers_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Data Container.": {
            "$ref": "./examples/Workspace/DataContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions": {
      "get": {
        "operationId": "DataVersions_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "$tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Data Version Base.": {
            "$ref": "./examples/Workspace/DataVersionBase/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}": {
      "get": {
        "operationId": "DataVersions_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Data Version Base.": {
            "$ref": "./examples/Workspace/DataVersionBase/get.json"
          }
        }
      },
      "put": {
        "operationId": "DataVersions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DataVersionBaseResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Data Version Base.": {
            "$ref": "./examples/Workspace/DataVersionBase/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "DataVersions_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Data Version Base.": {
            "$ref": "./examples/Workspace/DataVersionBase/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/data/{name}/versions/{version}/publish": {
      "post": {
        "operationId": "DataVersions_Publish",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DestinationAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Publish Workspace Data Version Base.": {
            "$ref": "./examples/Workspace/DataVersionBase/publish.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores": {
      "get": {
        "operationId": "Datastores_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "count",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "default": 30
          },
          {
            "name": "isDefault",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "names",
            "in": "query",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "searchText",
            "in": "query",
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "orderByAsc",
            "in": "query",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DatastoreResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List datastores.": {
            "$ref": "./examples/Datastore/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}": {
      "get": {
        "operationId": "Datastores_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DatastoreResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore.": {
            "$ref": "./examples/Datastore/get.json"
          }
        }
      },
      "put": {
        "operationId": "Datastores_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "skipValidation",
            "in": "query",
            "type": "boolean",
            "default": false
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatastoreResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DatastoreResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DatastoreResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate datastore (Azure Data Lake Gen1 w/ ServicePrincipal).": {
            "$ref": "./examples/Datastore/AzureDataLakeGen1WServicePrincipal/createOrUpdate.json"
          },
          "CreateOrUpdate datastore (Azure Data Lake Gen2 w/ Service Principal).": {
            "$ref": "./examples/Datastore/AzureDataLakeGen2WServicePrincipal/createOrUpdate.json"
          },
          "CreateOrUpdate datastore (Azure File store w/ AccountKey).": {
            "$ref": "./examples/Datastore/AzureFileWAccountKey/createOrUpdate.json"
          },
          "CreateOrUpdate datastore (AzureBlob w/ AccountKey).": {
            "$ref": "./examples/Datastore/AzureBlobWAccountKey/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Datastores_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete datastore.": {
            "$ref": "./examples/Datastore/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/datastores/{name}/listSecrets": {
      "post": {
        "operationId": "Datastores_ListSecrets",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SecretExpiry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DatastoreSecrets",
              "description": "Base definition for datastore secrets."
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get datastore secrets.": {
            "$ref": "./examples/Datastore/listSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/deployments": {
      "get": {
        "operationId": "EndpointDeployment_GetInWorkspace",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointType",
            "in": "query",
            "type": "string",
            "enum": [
              "Azure.OpenAI",
              "Azure.Speech",
              "Azure.ContentSafety",
              "Azure.Llama",
              "managedOnlineEndpoint"
            ],
            "x-ms-enum": {
              "name": "EndpointType",
              "modelAsString": true
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Endpoint Deployments In Workspace": {
            "$ref": "./examples/Endpoint/Deployment/getInWorkspace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/diagnose": {
      "post": {
        "operationId": "Workspaces_Diagnose",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DiagnoseWorkspaceParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DiagnoseResponseResult"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Diagnose Workspace": {
            "$ref": "./examples/Workspace/diagnose.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints": {
      "get": {
        "operationId": "Endpoint_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointType",
            "in": "query",
            "type": "string",
            "enum": [
              "Azure.OpenAI",
              "Azure.Speech",
              "Azure.ContentSafety",
              "Azure.Llama",
              "managedOnlineEndpoint"
            ],
            "x-ms-enum": {
              "name": "EndpointType",
              "modelAsString": true
            }
          },
          {
            "name": "includeOnlineEndpoints",
            "in": "query",
            "type": "boolean",
            "default": false
          },
          {
            "name": "includeServerlessEndpoints",
            "in": "query",
            "type": "boolean",
            "default": false
          },
          {
            "name": "includeConnections",
            "in": "query",
            "type": "boolean",
            "default": false
          },
          {
            "name": "$skip",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointResourcePropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Endpoint": {
            "$ref": "./examples/Endpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}": {
      "get": {
        "operationId": "Endpoint_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointResourcePropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Endpoint": {
            "$ref": "./examples/Endpoint/get.json"
          }
        }
      },
      "put": {
        "operationId": "Endpoint_CreateOrUpdate",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointResourcePropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointResourcePropertiesBasicResource"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Endpoint": {
            "$ref": "./examples/Endpoint/create.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/deployments": {
      "get": {
        "operationId": "EndpointDeployment_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Endpoint Deployments": {
            "$ref": "./examples/Endpoint/Deployment/getDeployments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/deployments/{deploymentName}": {
      "get": {
        "operationId": "EndpointDeployment_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Endpoint Deployment": {
            "$ref": "./examples/Endpoint/Deployment/get.json"
          }
        }
      },
      "put": {
        "operationId": "EndpointDeployment_CreateOrUpdate",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Endpoint Deployment": {
            "$ref": "./examples/Endpoint/Deployment/create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "EndpointDeployment_Delete",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Endpoint Deployment": {
            "$ref": "./examples/Endpoint/Deployment/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/listKeys": {
      "post": {
        "operationId": "Endpoint_ListKeys",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointKeys"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Endpoint Keys": {
            "$ref": "./examples/Endpoint/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/models": {
      "get": {
        "operationId": "Endpoint_GetModels",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointModels"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Endpoint Models": {
            "$ref": "./examples/Endpoint/getModels.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/raiPolicies": {
      "get": {
        "operationId": "RaiPolicies_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Rai policies": {
            "$ref": "./examples/Endpoint/RaiPolicy/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/raiPolicies/{raiPolicyName}": {
      "get": {
        "operationId": "RaiPolicy_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          },
          {
            "name": "raiPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Rai policy": {
            "$ref": "./examples/Endpoint/RaiPolicy/get.json"
          }
        }
      },
      "put": {
        "operationId": "RaiPolicy_Create",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          },
          {
            "name": "raiPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Rai policy": {
            "$ref": "./examples/Endpoint/RaiPolicy/create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RaiPolicy_Delete",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          },
          {
            "name": "raiPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "proxy-api-version",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Rai policy": {
            "$ref": "./examples/Endpoint/RaiPolicy/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/endpoints/{endpointName}/regenerateKey": {
      "post": {
        "operationId": "Endpoint_RegenerateKeys",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateServiceAccountKeyContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AccountApiKeys"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Regenerate Endpoint Keys": {
            "$ref": "./examples/Endpoint/regenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/environments": {
      "get": {
        "operationId": "EnvironmentContainers_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Environment Container.": {
            "$ref": "./examples/Workspace/EnvironmentContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}": {
      "get": {
        "operationId": "EnvironmentContainers_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Environment Container.": {
            "$ref": "./examples/Workspace/EnvironmentContainer/get.json"
          }
        }
      },
      "put": {
        "operationId": "EnvironmentContainers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Environment Container.": {
            "$ref": "./examples/Workspace/EnvironmentContainer/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "EnvironmentContainers_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Environment Container.": {
            "$ref": "./examples/Workspace/EnvironmentContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions": {
      "get": {
        "operationId": "EnvironmentVersions_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Environment Version.": {
            "$ref": "./examples/Workspace/EnvironmentVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}": {
      "get": {
        "operationId": "EnvironmentVersions_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Environment Version.": {
            "$ref": "./examples/Workspace/EnvironmentVersion/get.json"
          }
        }
      },
      "put": {
        "operationId": "EnvironmentVersions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EnvironmentVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Environment Version.": {
            "$ref": "./examples/Workspace/EnvironmentVersion/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "EnvironmentVersions_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Environment Version.": {
            "$ref": "./examples/Workspace/EnvironmentVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/environments/{name}/versions/{version}/publish": {
      "post": {
        "operationId": "EnvironmentVersions_Publish",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DestinationAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Publish Workspace Environment Version.": {
            "$ref": "./examples/Workspace/EnvironmentVersion/publish.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/features": {
      "get": {
        "operationId": "WorkspaceFeatures_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ListAmlUserFeatureResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace features": {
            "$ref": "./examples/WorkspaceFeature/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets": {
      "get": {
        "operationId": "FeaturesetContainers_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "createdBy",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturesetContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Featureset Container.": {
            "$ref": "./examples/Workspace/FeaturesetContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}": {
      "get": {
        "operationId": "FeaturesetContainers_GetEntity",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturesetContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetEntity Workspace Featureset Container.": {
            "$ref": "./examples/Workspace/FeaturesetContainer/getEntity.json"
          }
        }
      },
      "put": {
        "operationId": "FeaturesetContainers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeaturesetContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturesetContainerResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturesetContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Featureset Container.": {
            "$ref": "./examples/Workspace/FeaturesetContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FeaturesetContainers_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Featureset Container.": {
            "$ref": "./examples/Workspace/FeaturesetContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}/versions": {
      "get": {
        "operationId": "FeaturesetVersions_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "versionName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "createdBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "stage",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Featureset Version.": {
            "$ref": "./examples/Workspace/FeaturesetVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}/versions/{version}": {
      "get": {
        "operationId": "FeaturesetVersions_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Featureset Version.": {
            "$ref": "./examples/Workspace/FeaturesetVersion/get.json"
          }
        }
      },
      "put": {
        "operationId": "FeaturesetVersions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Featureset Version.": {
            "$ref": "./examples/Workspace/FeaturesetVersion/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FeaturesetVersions_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Featureset Version.": {
            "$ref": "./examples/Workspace/FeaturesetVersion/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{name}/versions/{version}/backfill": {
      "post": {
        "operationId": "FeaturesetVersions_Backfill",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionBackfillRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturesetVersionBackfillResponse"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Backfill Workspace Featureset Version.": {
            "$ref": "./examples/Workspace/FeaturesetVersion/backfill.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{featuresetName}/versions/{featuresetVersion}/features": {
      "get": {
        "operationId": "Features_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "featuresetName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "featuresetVersion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "featureName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeatureResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Feature.": {
            "$ref": "./examples/Feature/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/featuresets/{featuresetName}/versions/{featuresetVersion}/features/{featureName}": {
      "get": {
        "operationId": "Features_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "featuresetName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "featuresetVersion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "featureName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeatureResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Feature.": {
            "$ref": "./examples/Feature/get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/featurestoreEntities": {
      "get": {
        "operationId": "FeaturestoreEntityContainers_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "createdBy",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Featurestore Entity Container.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/featurestoreEntities/{name}": {
      "get": {
        "operationId": "FeaturestoreEntityContainers_GetEntity",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetEntity Workspace Featurestore Entity Container.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityContainer/getEntity.json"
          }
        }
      },
      "put": {
        "operationId": "FeaturestoreEntityContainers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityContainerResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityContainerResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Featurestore Entity Container.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityContainer/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FeaturestoreEntityContainers_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Featurestore Entity Container.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityContainer/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/featurestoreEntities/{name}/versions": {
      "get": {
        "operationId": "FeaturestoreEntityVersions_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "versionName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "createdBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "stage",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Featurestore Entity Version.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/featurestoreEntities/{name}/versions/{version}": {
      "get": {
        "operationId": "FeaturestoreEntityVersions_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Featurestore Entity Version.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityVersion/get.json"
          }
        }
      },
      "put": {
        "operationId": "FeaturestoreEntityVersions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityVersionResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/FeaturestoreEntityVersionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Featurestore Entity Version.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityVersion/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FeaturestoreEntityVersions_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Featurestore Entity Version.": {
            "$ref": "./examples/Workspace/FeaturestoreEntityVersion/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/inferencePools": {
      "get": {
        "operationId": "InferencePools_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "count",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "query",
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "type": "string",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ],
            "x-ms-enum": {
              "name": "OrderString",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferencePoolTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Inference Pool.": {
            "$ref": "./examples/Workspace/InferencePool/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/inferencePools/{inferencePoolName}": {
      "get": {
        "operationId": "InferencePools_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "inferencePoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferencePoolTrackedResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Inference Pool.": {
            "$ref": "./examples/Workspace/InferencePool/get.json"
          }
        }
      },
      "put": {
        "operationId": "InferencePools_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "inferencePoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InferencePoolTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferencePoolTrackedResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferencePoolTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Inference Pool.": {
            "$ref": "./examples/Workspace/InferencePool/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "InferencePools_Update",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "inferencePoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithSkuAndIdentity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferencePoolTrackedResource"
            }
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace Inference Pool.": {
            "$ref": "./examples/Workspace/InferencePool/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "InferencePools_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "inferencePoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Inference Pool.": {
            "$ref": "./examples/Workspace/InferencePool/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/inferencePools/{poolName}/endpoints": {
      "get": {
        "operationId": "InferenceEndpoints_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "count",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "query",
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "type": "string",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ],
            "x-ms-enum": {
              "name": "OrderString",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Inference Endpoint.": {
            "$ref": "./examples/Workspace/InferenceEndpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/inferencePools/{poolName}/endpoints/{endpointName}": {
      "get": {
        "operationId": "InferenceEndpoints_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointTrackedResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Inference Endpoint.": {
            "$ref": "./examples/Workspace/InferenceEndpoint/get.json"
          }
        }
      },
      "put": {
        "operationId": "InferenceEndpoints_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InferenceEndpointTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointTrackedResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Inference Endpoint.": {
            "$ref": "./examples/Workspace/InferenceEndpoint/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "InferenceEndpoints_Update",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Strictly used in update requests."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferenceEndpointTrackedResource"
            }
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace Inference Endpoint.": {
            "$ref": "./examples/Workspace/InferenceEndpoint/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "InferenceEndpoints_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Inference Endpoint.": {
            "$ref": "./examples/Workspace/InferenceEndpoint/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/inferencePools/{poolName}/groups": {
      "get": {
        "operationId": "InferenceGroups_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "count",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "query",
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "type": "string",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ],
            "x-ms-enum": {
              "name": "OrderString",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferenceGroupTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Inference Group.": {
            "$ref": "./examples/Workspace/InferenceGroup/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/inferencePools/{poolName}/groups/{groupName}": {
      "get": {
        "operationId": "InferenceGroups_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferenceGroupTrackedResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Inference Group.": {
            "$ref": "./examples/Workspace/InferenceGroup/get.json"
          }
        }
      },
      "put": {
        "operationId": "InferenceGroups_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InferenceGroupTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferenceGroupTrackedResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferenceGroupTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Inference Group.": {
            "$ref": "./examples/Workspace/InferenceGroup/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "InferenceGroups_Update",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithSku"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/InferenceGroupTrackedResource"
            }
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace Inference Group.": {
            "$ref": "./examples/Workspace/InferenceGroup/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "InferenceGroups_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Inference Group.": {
            "$ref": "./examples/Workspace/InferenceGroup/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/inferencePools/{poolName}/groups/{groupName}/deltaModels/getStatus": {
      "post": {
        "operationId": "InferenceGroups_GetDeltaModelsStatusAsync",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeltaModelStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DeltaModelStatusResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetDeltaModelsStatusAsync Inference Group.": {
            "$ref": "./examples/InferenceGroup/getDeltaModelsStatusAsync.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/inferencePools/{poolName}/groups/{groupName}/deltaModels/list": {
      "post": {
        "operationId": "InferenceGroups_ListDeltaModelsAsync",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeltaModelListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/StringArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListDeltaModelsAsync Inference Group.": {
            "$ref": "./examples/InferenceGroup/listDeltaModelsAsync.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/inferencePools/{poolName}/groups/{groupName}/deltaModels/modify": {
      "post": {
        "operationId": "InferenceGroups_ModifyDeltaModelsAsync",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeltaModelModifyRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ModifyDeltaModelsAsync Inference Group.": {
            "$ref": "./examples/InferenceGroup/modifyDeltaModelsAsync.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/inferencePools/{poolName}/groups/{groupName}/getStatus": {
      "post": {
        "operationId": "InferenceGroups_GetStatus",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/GroupStatus"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetStatus Workspace Inference Group.": {
            "$ref": "./examples/Workspace/InferenceGroup/getStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/inferencePools/{poolName}/groups/{groupName}/skus": {
      "get": {
        "operationId": "InferenceGroups_ListSkus",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "poolName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "count",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/SkuResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListSkus Workspace Inference Group.": {
            "$ref": "./examples/Workspace/InferenceGroup/listSkus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs": {
      "get": {
        "operationId": "Jobs_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "jobType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          },
          {
            "name": "properties",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/JobBaseResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List AutoML Job.": {
            "$ref": "./examples/Job/AutoMLJob/list.json"
          },
          "List Command Job.": {
            "$ref": "./examples/Job/CommandJob/list.json"
          },
          "List Distillation Job.": {
            "$ref": "./examples/Job/DistillationJob/list.json"
          },
          "List FineTuning Job.": {
            "$ref": "./examples/Job/FineTuningJob/list.json"
          },
          "List Pipeline Job.": {
            "$ref": "./examples/Job/PipelineJob/list.json"
          },
          "List Sweep Job.": {
            "$ref": "./examples/Job/SweepJob/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}": {
      "get": {
        "operationId": "Jobs_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get AutoML Job.": {
            "$ref": "./examples/Job/AutoMLJob/get.json"
          },
          "Get Command Job.": {
            "$ref": "./examples/Job/CommandJob/get.json"
          },
          "Get Distillation Job.": {
            "$ref": "./examples/Job/DistillationJob/get.json"
          },
          "Get FineTuning Job.": {
            "$ref": "./examples/Job/FineTuningJob/get.json"
          },
          "Get Pipeline Job.": {
            "$ref": "./examples/Job/PipelineJob/get.json"
          },
          "Get Sweep Job.": {
            "$ref": "./examples/Job/SweepJob/get.json"
          }
        }
      },
      "put": {
        "operationId": "Jobs_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/JobBaseResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate AutoML Job.": {
            "$ref": "./examples/Job/AutoMLJob/createOrUpdate.json"
          },
          "CreateOrUpdate Command Job.": {
            "$ref": "./examples/Job/CommandJob/createOrUpdate.json"
          },
          "CreateOrUpdate Distillation Job.": {
            "$ref": "./examples/Job/DistillationJob/createOrUpdate.json"
          },
          "CreateOrUpdate FineTuning Job.": {
            "$ref": "./examples/Job/FineTuningJob/createOrUpdate.json"
          },
          "CreateOrUpdate Pipeline Job.": {
            "$ref": "./examples/Job/PipelineJob/createOrUpdate.json"
          },
          "CreateOrUpdate Sweep Job.": {
            "$ref": "./examples/Job/SweepJob/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Jobs_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Job.": {
            "$ref": "./examples/Job/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/jobs/{id}/cancel": {
      "post": {
        "operationId": "Jobs_Cancel",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Cancel Job.": {
            "$ref": "./examples/Job/cancel.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/listConnectionModels": {
      "post": {
        "operationId": "Connection_GetAllModels",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointModels"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get models under the Azure ML workspace for all Azure OpenAI connections that the user can deploy": {
            "$ref": "./examples/WorkspaceConnection/listConnectionModels.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/listKeys": {
      "post": {
        "operationId": "Workspaces_ListKeys",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ListWorkspaceKeysResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Workspace/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookAccessToken": {
      "post": {
        "operationId": "Workspaces_ListNotebookAccessToken",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NotebookAccessTokenResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Workspace/listNotebookAccessToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/listNotebookKeys": {
      "post": {
        "operationId": "Workspaces_ListNotebookKeys",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ListNotebookKeysResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Notebook/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/listStorageAccountKeys": {
      "post": {
        "operationId": "Workspaces_ListStorageAccountKeys",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ListStorageAccountKeysResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/Workspace/listStorageAccountKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/managedNetworks": {
      "get": {
        "operationId": "ManagedNetworkSettings_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List ManagedNetworkSettings": {
            "$ref": "./examples/ManagedNetwork/listManagedNetworkV2.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/managedNetworks/{managedNetworkName}": {
      "get": {
        "operationId": "ManagedNetworkSettings_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "managedNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkSettingsPropertiesBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ManagedNetworkSettings": {
            "$ref": "./examples/ManagedNetwork/getManagedNetworkV2.json"
          }
        }
      },
      "put": {
        "operationId": "ManagedNetworkSettings_Put",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "managedNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedNetworkSettingsPropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkSettingsPropertiesBasicResource"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put ManagedNetworkSettings": {
            "$ref": "./examples/ManagedNetwork/createOrUpdateManagedNetworkV2.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ManagedNetworkSettings_Patch",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "managedNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkSettingsPropertiesBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkSettingsPropertiesBasicResource"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch ManagedNetworkSettings": {
            "$ref": "./examples/ManagedNetwork/patchManagedNetworkV2.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/managedNetworks/{managedNetworkName}/batchOutboundRules": {
      "post": {
        "operationId": "OutboundRules_Post",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "managedNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedNetworkSettingsBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OutboundRuleListResult"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Post OutboundRules": {
            "$ref": "./examples/ManagedNetwork/postOutboundRulesV2.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/managedNetworks/{managedNetworkName}/outboundRules": {
      "get": {
        "operationId": "OutboundRule_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "managedNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OutboundRuleListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List OutboundRules": {
            "$ref": "./examples/ManagedNetwork/listRuleV2.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/managedNetworks/{managedNetworkName}/outboundRules/{ruleName}": {
      "get": {
        "operationId": "OutboundRule_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "managedNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get OutboundRule": {
            "$ref": "./examples/ManagedNetwork/getRuleV2.json"
          }
        }
      },
      "put": {
        "operationId": "OutboundRule_CreateOrUpdate",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "managedNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate OutboundRule": {
            "$ref": "./examples/ManagedNetwork/createOrUpdateRuleV2.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "OutboundRule_Delete",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "managedNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete OutboundRule": {
            "$ref": "./examples/ManagedNetwork/deleteRuleV2.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/marketplaceSubscriptions": {
      "get": {
        "operationId": "MarketplaceSubscriptions_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MarketplaceSubscriptionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Marketplace Subscription.": {
            "$ref": "./examples/Workspace/MarketplaceSubscription/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/marketplaceSubscriptions/{name}": {
      "get": {
        "operationId": "MarketplaceSubscriptions_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MarketplaceSubscriptionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Marketplace Subscription.": {
            "$ref": "./examples/Workspace/MarketplaceSubscription/get.json"
          }
        }
      },
      "put": {
        "operationId": "MarketplaceSubscriptions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarketplaceSubscriptionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MarketplaceSubscriptionResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MarketplaceSubscriptionResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Marketplace Subscription.": {
            "$ref": "./examples/Workspace/MarketplaceSubscription/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MarketplaceSubscriptions_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Marketplace Subscription.": {
            "$ref": "./examples/Workspace/MarketplaceSubscription/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/models": {
      "get": {
        "operationId": "ModelContainers_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "count",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelContainerResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Model Container.": {
            "$ref": "./examples/Workspace/ModelContainer/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}": {
      "get": {
        "operationId": "ModelContainers_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Model Container.": {
            "$ref": "./examples/Workspace/ModelContainer/get.json"
          }
        }
      },
      "put": {
        "operationId": "ModelContainers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelContainerResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Model Container.": {
            "$ref": "./examples/Workspace/ModelContainer/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "ModelContainers_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Model Container.": {
            "$ref": "./examples/Workspace/ModelContainer/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions": {
      "get": {
        "operationId": "ModelVersions_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "query",
            "type": "string"
          },
          {
            "name": "feed",
            "in": "query",
            "type": "string"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "ActiveOnly",
            "enum": [
              "ActiveOnly",
              "ArchivedOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelVersionResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Model Version.": {
            "$ref": "./examples/Workspace/ModelVersion/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}": {
      "get": {
        "operationId": "ModelVersions_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Model Version.": {
            "$ref": "./examples/Workspace/ModelVersion/get.json"
          }
        }
      },
      "put": {
        "operationId": "ModelVersions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ModelVersionResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Model Version.": {
            "$ref": "./examples/Workspace/ModelVersion/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "ModelVersions_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Model Version.": {
            "$ref": "./examples/Workspace/ModelVersion/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/models/{name}/versions/{version}/publish": {
      "post": {
        "operationId": "ModelVersions_Publish",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DestinationAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Publish Workspace Model Version.": {
            "$ref": "./examples/Workspace/ModelVersion/publish.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints": {
      "get": {
        "operationId": "OnlineEndpoints_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "computeType",
            "in": "query",
            "type": "string",
            "enum": [
              "Managed",
              "Kubernetes",
              "AzureMLCompute"
            ],
            "x-ms-enum": {
              "name": "EndpointComputeType",
              "modelAsString": true
            }
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "query",
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "type": "string",
            "enum": [
              "CreatedAtDesc",
              "CreatedAtAsc",
              "UpdatedAtDesc",
              "UpdatedAtAsc"
            ],
            "x-ms-enum": {
              "name": "OrderString",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}": {
      "get": {
        "operationId": "OnlineEndpoints_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/get.json"
          }
        }
      },
      "put": {
        "operationId": "OnlineEndpoints_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "OnlineEndpoints_Update",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithIdentity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OnlineEndpointTrackedResource"
            }
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "OnlineEndpoints_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments": {
      "get": {
        "operationId": "OnlineDeployments_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "$orderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Online Deployments.": {
            "$ref": "./examples/OnlineDeployment/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}": {
      "get": {
        "operationId": "OnlineDeployments_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Kubernetes Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/KubernetesOnlineDeployment/get.json"
          },
          "Get Managed Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/ManagedOnlineDeployment/get.json"
          }
        }
      },
      "put": {
        "operationId": "OnlineDeployments_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Kubernetes Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/KubernetesOnlineDeployment/createOrUpdate.json"
          },
          "CreateOrUpdate Managed Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/ManagedOnlineDeployment/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "OnlineDeployments_Update",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithSku"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OnlineDeploymentTrackedResource"
            }
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Kubernetes Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/KubernetesOnlineDeployment/update.json"
          },
          "Update Managed Online Deployment.": {
            "$ref": "./examples/OnlineDeployment/ManagedOnlineDeployment/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "OnlineDeployments_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Online Deployment.": {
            "$ref": "./examples/Workspace/OnlineDeployment/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/getLogs": {
      "post": {
        "operationId": "OnlineDeployments_GetLogs",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentLogsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/DeploymentLogs"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Online Deployment Logs.": {
            "$ref": "./examples/OnlineDeployment/getLogs.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/deployments/{deploymentName}/skus": {
      "get": {
        "operationId": "OnlineDeployments_ListSkus",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/SkuResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Kubernetes Online Deployment Skus.": {
            "$ref": "./examples/OnlineDeployment/KubernetesOnlineDeployment/listSkus.json"
          },
          "List Managed Online Deployment Skus.": {
            "$ref": "./examples/OnlineDeployment/ManagedOnlineDeployment/listSkus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/listKeys": {
      "post": {
        "operationId": "OnlineEndpoints_ListKeys",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/regenerateKeys": {
      "post": {
        "operationId": "OnlineEndpoints_RegenerateKeys",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateEndpointKeysRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegenerateKeys Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/regenerateKeys.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/onlineEndpoints/{endpointName}/token": {
      "post": {
        "operationId": "OnlineEndpoints_GetToken",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "endpointName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointAuthToken"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetToken Workspace Online Endpoint.": {
            "$ref": "./examples/Workspace/OnlineEndpoint/getToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "operationId": "Workspaces_ListOutboundNetworkDependenciesEndpoints",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ExternalFQDNResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListOutboundNetworkDependenciesEndpoints": {
            "$ref": "./examples/ExternalFQDN/get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundRules": {
      "get": {
        "operationId": "ManagedNetworkSettingsRule_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OutboundRuleListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/listRule.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/outboundRules/{ruleName}": {
      "get": {
        "operationId": "ManagedNetworkSettingsRule_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/getRule.json"
          }
        }
      },
      "put": {
        "operationId": "ManagedNetworkSettingsRule_CreateOrUpdate",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OutboundRuleBasicResource"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/createOrUpdateRule.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ManagedNetworkSettingsRule_Delete",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "ruleName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete ManagedNetworkSettingsRule": {
            "$ref": "./examples/ManagedNetwork/deleteRule.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/prepareNotebook": {
      "post": {
        "operationId": "Workspaces_PrepareNotebook",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NotebookResourceInfo"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Prepare Notebook": {
            "$ref": "./examples/Notebook/prepare.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountListPrivateEndpointConnections": {
            "$ref": "./examples/PrivateEndpointConnection/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkspaceGetPrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnection/get.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkspacePutPrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnection/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkspacePutPrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnection/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_List",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WorkspaceListPrivateLinkResources": {
            "$ref": "./examples/PrivateLinkResource/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/provisionManagedNetwork": {
      "post": {
        "operationId": "ManagedNetworkProvisions_ProvisionManagedNetwork",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkProvisionOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ManagedNetworkProvisionStatus"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Provision ManagedNetwork": {
            "$ref": "./examples/ManagedNetwork/provision.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/resyncKeys": {
      "post": {
        "operationId": "Workspaces_ResyncKeys",
        "parameters": [
          {
            "name": "workspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Resync Workspace Keys": {
            "$ref": "./examples/Workspace/resyncKeys.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/schedules": {
      "get": {
        "operationId": "Schedules_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          },
          {
            "name": "listViewType",
            "in": "query",
            "type": "string",
            "default": "EnabledOnly",
            "enum": [
              "EnabledOnly",
              "DisabledOnly",
              "All"
            ],
            "x-ms-enum": {
              "name": "ScheduleListViewType",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ScheduleResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Schedules.": {
            "$ref": "./examples/Schedule/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/schedules/{name}": {
      "get": {
        "operationId": "Schedules_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ScheduleResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Schedule.": {
            "$ref": "./examples/Schedule/get.json"
          }
        }
      },
      "put": {
        "operationId": "Schedules_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ScheduleResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ScheduleResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Schedule.": {
            "$ref": "./examples/Schedule/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Schedules_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Schedule.": {
            "$ref": "./examples/Schedule/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/serverlessEndpoints": {
      "get": {
        "operationId": "ServerlessEndpoints_List",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "machineLearningServices.json#/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ServerlessEndpointTrackedResourceArmPaginatedResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/serverlessEndpoints/{name}": {
      "get": {
        "operationId": "ServerlessEndpoints_Get",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ServerlessEndpointTrackedResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/get.json"
          }
        }
      },
      "put": {
        "operationId": "ServerlessEndpoints_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{0,51}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerlessEndpointTrackedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ServerlessEndpointTrackedResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ServerlessEndpointTrackedResource"
            },
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/createOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ServerlessEndpoints_Update",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartialMinimalTrackedResourceWithSkuAndIdentity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ServerlessEndpointTrackedResource"
            }
          },
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ServerlessEndpoints_Delete",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore",
            "headers": {
              "x-ms-async-operation-timeout": {
                "type": "string",
                "format": "duration",
                "description": "Timeout for the client to use when polling the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/serverlessEndpoints/{name}/listKeys": {
      "post": {
        "operationId": "ServerlessEndpoints_ListKeys",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListKeys Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.MachineLearningServices/workspaces/{workspaceName}/serverlessEndpoints/{name}/regenerateKeys": {
      "post": {
        "operationId": "ServerlessEndpoints_RegenerateKeys",
        "parameters": [
          {
            "$ref": "machineLearningServices.json#/parameters/WorkspaceNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateEndpointKeysRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EndpointAuthKeys"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegenerateKeys Workspace Serverless Endpoint.": {
            "$ref": "./examples/Workspace/ServerlessEndpoint/regenerateKeys.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AADAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "AAD"
    },
    "AKS": {
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/AKSSchema"
        }
      ],
      "x-ms-discriminator-value": "AKS"
    },
    "AKSSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "clusterFqdn": {
              "type": "string",
              "description": "Cluster full qualified domain name",
              "x-nullable": true
            },
            "systemServices": {
              "type": "array",
              "description": "System services",
              "x-nullable": true,
              "items": {
                "$ref": "#/definitions/SystemService"
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "publicIpAddress"
              ]
            },
            "agentCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of agents",
              "minimum": 0,
              "x-nullable": true
            },
            "agentVmSize": {
              "type": "string",
              "description": "Agent virtual machine size",
              "x-nullable": true
            },
            "clusterPurpose": {
              "type": "string",
              "description": "Intended usage of the cluster",
              "default": "FastProd",
              "enum": [
                "FastProd",
                "DenseProd",
                "DevTest"
              ],
              "x-ms-enum": {
                "name": "ClusterPurpose",
                "modelAsString": true
              }
            },
            "sslConfiguration": {
              "$ref": "#/definitions/SslConfiguration",
              "description": "SSL configuration",
              "x-nullable": true
            },
            "aksNetworkingConfiguration": {
              "$ref": "#/definitions/AksNetworkingConfiguration",
              "description": "AKS networking configuration for vnet",
              "x-nullable": true
            },
            "loadBalancerType": {
              "type": "string",
              "description": "Load Balancer Type",
              "default": "PublicIp",
              "enum": [
                "PublicIp",
                "InternalLoadBalancer"
              ],
              "x-ms-enum": {
                "name": "LoadBalancerType",
                "modelAsString": true
              }
            },
            "loadBalancerSubnet": {
              "type": "string",
              "description": "Load Balancer Subnet",
              "x-nullable": true
            }
          }
        }
      }
    },
    "AccessKeyAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionAccessKey"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "AccessKey"
    },
    "AccountApiKeys": {
      "type": "object",
      "properties": {
        "key1": {
          "type": "string",
          "x-ms-secret": true
        },
        "key2": {
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "AccountKeyAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionAccountKey"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "AccountKey"
    },
    "AccountKeyDatastoreCredentials": {
      "type": "object",
      "properties": {
        "secrets": {
          "$ref": "#/definitions/AccountKeyDatastoreSecrets",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "required": [
        "secrets"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "x-ms-discriminator-value": "AccountKey"
    },
    "AccountKeyDatastoreSecrets": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        }
      ],
      "x-ms-discriminator-value": "AccountKey"
    },
    "AcrDetails": {
      "type": "object",
      "properties": {
        "systemCreatedAcrAccount": {
          "$ref": "#/definitions/SystemCreatedAcrAccount",
          "x-nullable": true
        }
      }
    },
    "ActualCapacityInfo": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "succeeded": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "failed": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "outdatedSucceeded": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "outdatedFailed": {
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "AksComputeSecrets": {
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "$ref": "#/definitions/AksComputeSecretsProperties"
        }
      ],
      "x-ms-discriminator-value": "AKS"
    },
    "AksComputeSecretsProperties": {
      "type": "object",
      "properties": {
        "userKubeConfig": {
          "type": "string"
        },
        "adminKubeConfig": {
          "type": "string"
        },
        "imagePullSecretName": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "AksNetworkingConfiguration": {
      "type": "object",
      "properties": {
        "subnetId": {
          "type": "string"
        },
        "serviceCidr": {
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
        },
        "dnsServiceIP": {
          "type": "string",
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
        },
        "dockerBridgeCidr": {
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
        }
      }
    },
    "AllFeatures": {
      "type": "object",
      "required": [
        "filterType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringFeatureFilterBase"
        }
      ],
      "x-ms-discriminator-value": "AllFeatures"
    },
    "AllNodes": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Nodes"
        }
      ],
      "x-ms-discriminator-value": "All"
    },
    "AmlCompute": {
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/AmlComputeSchema"
        }
      ],
      "x-ms-discriminator-value": "AmlCompute"
    },
    "AmlComputeNodeInformation": {
      "type": "object",
      "properties": {
        "nodeId": {
          "type": "string",
          "title": "Node ID.",
          "readOnly": true
        },
        "privateIpAddress": {
          "type": "string",
          "title": "Private IP address.",
          "x-nullable": true,
          "readOnly": true
        },
        "publicIpAddress": {
          "type": "string",
          "title": "Public IP address.",
          "x-nullable": true,
          "readOnly": true
        },
        "port": {
          "type": "number",
          "format": "int32",
          "title": "Port.",
          "readOnly": true
        },
        "nodeState": {
          "type": "string",
          "enum": [
            "idle",
            "running",
            "preparing",
            "unusable",
            "leaving",
            "preempted"
          ],
          "x-ms-enum": {
            "name": "NodeState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "runId": {
          "type": "string",
          "title": "Run ID.",
          "x-nullable": true,
          "readOnly": true
        }
      }
    },
    "AmlComputeNodesInformation": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmlComputeNodeInformation"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "nodeId"
          ]
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AmlComputeProperties": {
      "type": "object",
      "properties": {
        "osType": {
          "type": "string",
          "default": "Linux",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true
          }
        },
        "vmSize": {
          "type": "string"
        },
        "vmPriority": {
          "type": "string",
          "enum": [
            "Dedicated",
            "LowPriority"
          ],
          "x-ms-enum": {
            "name": "VmPriority",
            "modelAsString": true
          }
        },
        "virtualMachineImage": {
          "$ref": "#/definitions/VirtualMachineImage",
          "x-nullable": true
        },
        "isolatedNetwork": {
          "type": "boolean"
        },
        "scaleSettings": {
          "$ref": "#/definitions/ScaleSettings"
        },
        "userAccountCredentials": {
          "$ref": "#/definitions/UserAccountCredentials",
          "title": "User account credentials.",
          "x-nullable": true
        },
        "subnet": {
          "$ref": "#/definitions/ResourceId",
          "title": "Subnet.",
          "x-nullable": true
        },
        "remoteLoginPortPublicAccess": {
          "type": "string",
          "title": "Close remote Login Access Port",
          "default": "NotSpecified",
          "enum": [
            "Enabled",
            "Disabled",
            "NotSpecified"
          ],
          "x-ms-enum": {
            "name": "RemoteLoginPortPublicAccess",
            "modelAsString": true
          }
        },
        "allocationState": {
          "type": "string",
          "title": "Allocation state.",
          "enum": [
            "Steady",
            "Resizing"
          ],
          "x-ms-enum": {
            "name": "AllocationState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "allocationStateTransitionTime": {
          "type": "string",
          "format": "date-time",
          "title": "Allocation state transition time.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "title": "Errors.",
          "x-nullable": true,
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "/error/code"
          ]
        },
        "currentNodeCount": {
          "type": "integer",
          "format": "int32",
          "title": "Current node count.",
          "x-nullable": true,
          "readOnly": true
        },
        "targetNodeCount": {
          "type": "integer",
          "format": "int32",
          "title": "Target node count.",
          "x-nullable": true,
          "readOnly": true
        },
        "nodeStateCounts": {
          "$ref": "#/definitions/NodeStateCounts",
          "title": "Node state counts.",
          "x-nullable": true,
          "readOnly": true
        },
        "enableNodePublicIp": {
          "type": "boolean",
          "title": "Enable node public IP.",
          "default": true,
          "x-nullable": true
        },
        "propertyBag": {
          "type": "object",
          "x-nullable": true
        }
      }
    },
    "AmlComputeSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AmlComputeProperties"
        }
      }
    },
    "AmlToken": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "x-ms-discriminator-value": "AMLToken"
    },
    "AmlTokenComputeIdentity": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitorComputeIdentityBase"
        }
      ],
      "x-ms-discriminator-value": "AmlToken"
    },
    "AmlUserFeature": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AnonymousAccessCredential": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataReferenceCredential"
        }
      ],
      "x-ms-discriminator-value": "NoCredentials"
    },
    "ApiKeyAuthWorkspaceConnectionProperties": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionApiKey"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "ApiKey"
    },
    "ArmResourceId": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "AssetBase": {
      "type": "object",
      "properties": {
        "isAnonymous": {
          "type": "boolean",
          "default": false,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isArchived": {
          "type": "boolean",
          "default": false,
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ]
    },
    "AssetContainer": {
      "type": "object",
      "properties": {
        "isArchived": {
          "type": "boolean",
          "default": false,
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "latestVersion": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "nextVersion": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ]
    },
    "AssetJobInput": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "default": "ReadOnlyMount",
          "enum": [
            "ReadOnlyMount",
            "ReadWriteMount",
            "Download",
            "Direct",
            "EvalMount",
            "EvalDownload"
          ],
          "x-ms-enum": {
            "name": "InputDeliveryMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "uri": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        }
      },
      "required": [
        "uri"
      ]
    },
    "AssetJobOutput": {
      "type": "object",
      "properties": {
        "assetName": {
          "type": "string",
          "x-nullable": true
        },
        "mode": {
          "type": "string",
          "default": "ReadWriteMount",
          "enum": [
            "ReadWriteMount",
            "Upload",
            "Direct"
          ],
          "x-ms-enum": {
            "name": "OutputDeliveryMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "uri": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "AssetReferenceBase": {
      "type": "object",
      "properties": {
        "referenceType": {
          "type": "string",
          "enum": [
            "Id",
            "DataPath",
            "OutputPath"
          ],
          "x-ms-enum": {
            "name": "ReferenceType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "referenceType",
      "required": [
        "referenceType"
      ]
    },
    "AssignedUser": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        }
      },
      "required": [
        "objectId",
        "tenantId"
      ]
    },
    "AutoForecastHorizon": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ForecastHorizon"
        }
      ],
      "x-ms-discriminator-value": "Auto"
    },
    "AutoMLJob": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentVariables": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "outputs": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/JobOutput",
            "description": "Job output definition container information on where to find job output/logs.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "queueSettings": {
          "$ref": "#/definitions/QueueSettings",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "resources": {
          "$ref": "#/definitions/JobResourceConfiguration",
          "default": "{}",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "taskDetails": {
          "$ref": "#/definitions/AutoMLVertical"
        }
      },
      "required": [
        "taskDetails"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "x-ms-discriminator-value": "AutoML"
    },
    "AutoMLVertical": {
      "type": "object",
      "properties": {
        "logVerbosity": {
          "type": "string",
          "default": "Info",
          "enum": [
            "NotSet",
            "Debug",
            "Info",
            "Warning",
            "Error",
            "Critical"
          ],
          "x-ms-enum": {
            "name": "LogVerbosity",
            "modelAsString": true
          }
        },
        "targetColumnName": {
          "type": "string",
          "x-nullable": true
        },
        "taskType": {
          "type": "string",
          "enum": [
            "Classification",
            "Regression",
            "Forecasting",
            "ImageClassification",
            "ImageClassificationMultilabel",
            "ImageObjectDetection",
            "ImageInstanceSegmentation",
            "TextClassification",
            "TextClassificationMultilabel",
            "TextNER"
          ],
          "x-ms-enum": {
            "name": "TaskType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "trainingData": {
          "$ref": "#/definitions/MLTableJobInput"
        }
      },
      "discriminator": "taskType",
      "required": [
        "taskType",
        "trainingData"
      ]
    },
    "AutoNCrossValidations": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NCrossValidations"
        }
      ],
      "x-ms-discriminator-value": "Auto"
    },
    "AutoPauseProperties": {
      "type": "object",
      "properties": {
        "delayInMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "AutoScaleProperties": {
      "type": "object",
      "properties": {
        "minNodeCount": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean"
        },
        "maxNodeCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AutoSeasonality": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Seasonality"
        }
      ],
      "x-ms-discriminator-value": "Auto"
    },
    "AutoTargetLags": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TargetLags"
        }
      ],
      "x-ms-discriminator-value": "Auto"
    },
    "AutoTargetRollingWindowSize": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TargetRollingWindowSize"
        }
      ],
      "x-ms-discriminator-value": "Auto"
    },
    "AvailableQuota": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AvailableQuotaProperties",
          "x-nullable": true
        }
      }
    },
    "AvailableQuotaArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/AvailableQuota"
          }
        }
      }
    },
    "AvailableQuotaProperties": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AzureBlobDatastore": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "containerName": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "type": "string",
          "x-nullable": true,
          "example": "core.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "protocol": {
          "type": "string",
          "x-nullable": true,
          "example": "https",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serviceDataAccessAuthIdentity": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "WorkspaceSystemAssignedIdentity",
            "WorkspaceUserAssignedIdentity"
          ],
          "x-ms-enum": {
            "name": "ServiceDataAccessAuthIdentity",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AzureDatastore"
        },
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "x-ms-discriminator-value": "AzureBlob"
    },
    "AzureDataLakeGen1Datastore": {
      "type": "object",
      "properties": {
        "serviceDataAccessAuthIdentity": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "WorkspaceSystemAssignedIdentity",
            "WorkspaceUserAssignedIdentity"
          ],
          "x-ms-enum": {
            "name": "ServiceDataAccessAuthIdentity",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "storeName": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "storeName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AzureDatastore"
        },
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "x-ms-discriminator-value": "AzureDataLakeGen1"
    },
    "AzureDataLakeGen2Datastore": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "type": "string",
          "x-nullable": true,
          "example": "core.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "filesystem": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "protocol": {
          "type": "string",
          "x-nullable": true,
          "example": "https",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serviceDataAccessAuthIdentity": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "WorkspaceSystemAssignedIdentity",
            "WorkspaceUserAssignedIdentity"
          ],
          "x-ms-enum": {
            "name": "ServiceDataAccessAuthIdentity",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "accountName",
        "filesystem"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AzureDatastore"
        },
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "x-ms-discriminator-value": "AzureDataLakeGen2"
    },
    "AzureDatastore": {
      "type": "object",
      "properties": {
        "resourceGroup": {
          "type": "string",
          "x-nullable": true
        },
        "subscriptionId": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "AzureDevOpsWebhook": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Webhook"
        }
      ],
      "x-ms-discriminator-value": "AzureDevOps"
    },
    "AzureFileDatastore": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "type": "string",
          "x-nullable": true,
          "example": "core.windows.net",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "fileShareName": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "protocol": {
          "type": "string",
          "x-nullable": true,
          "example": "https",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serviceDataAccessAuthIdentity": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "WorkspaceSystemAssignedIdentity",
            "WorkspaceUserAssignedIdentity"
          ],
          "x-ms-enum": {
            "name": "ServiceDataAccessAuthIdentity",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "accountName",
        "fileShareName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AzureDatastore"
        },
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "x-ms-discriminator-value": "AzureFile"
    },
    "AzureOpenAiFineTuning": {
      "type": "object",
      "properties": {
        "hyperParameters": {
          "$ref": "#/definitions/AzureOpenAiHyperParameters",
          "x-nullable": true
        }
      },
      "required": [
        "modelProvider"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FineTuningVertical"
        }
      ],
      "x-ms-discriminator-value": "AzureOpenAI"
    },
    "AzureOpenAiHyperParameters": {
      "type": "object",
      "properties": {
        "batchSize": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "learningRateMultiplier": {
          "type": "number",
          "format": "double",
          "x-nullable": true
        },
        "nEpochs": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        }
      }
    },
    "BanditPolicy": {
      "type": "object",
      "properties": {
        "slackAmount": {
          "type": "number",
          "format": "float",
          "default": 0
        },
        "slackFactor": {
          "type": "number",
          "format": "float",
          "default": 0
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicy"
        }
      ],
      "x-ms-discriminator-value": "Bandit"
    },
    "BatchDeployment": {
      "type": "object",
      "properties": {
        "compute": {
          "type": "string",
          "x-nullable": true
        },
        "deploymentConfiguration": {
          "$ref": "#/definitions/BatchDeploymentConfiguration",
          "x-nullable": true
        },
        "errorThreshold": {
          "type": "integer",
          "format": "int32",
          "default": -1
        },
        "loggingLevel": {
          "type": "string",
          "default": "Info",
          "enum": [
            "Info",
            "Warning",
            "Debug"
          ],
          "x-ms-enum": {
            "name": "BatchLoggingLevel",
            "modelAsString": true
          }
        },
        "maxConcurrencyPerInstance": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "miniBatchSize": {
          "type": "integer",
          "format": "int64",
          "default": 10
        },
        "model": {
          "$ref": "#/definitions/AssetReferenceBase",
          "x-nullable": true
        },
        "outputAction": {
          "type": "string",
          "default": "AppendRow",
          "enum": [
            "SummaryOnly",
            "AppendRow"
          ],
          "x-ms-enum": {
            "name": "BatchOutputAction",
            "modelAsString": true
          }
        },
        "outputFileName": {
          "type": "string",
          "default": "predictions.csv"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Deleting",
            "Scaling",
            "Updating",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "DeploymentProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "resources": {
          "$ref": "#/definitions/DeploymentResourceConfiguration",
          "x-nullable": true
        },
        "retrySettings": {
          "$ref": "#/definitions/BatchRetrySettings",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EndpointDeploymentPropertiesBase"
        }
      ],
      "x-ms-client-name": "BatchDeploymentProperties"
    },
    "BatchDeploymentConfiguration": {
      "type": "object",
      "properties": {
        "deploymentConfigurationType": {
          "type": "string",
          "enum": [
            "Model",
            "PipelineComponent"
          ],
          "x-ms-enum": {
            "name": "BatchDeploymentConfigurationType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "deploymentConfigurationType",
      "required": [
        "deploymentConfigurationType"
      ]
    },
    "BatchDeploymentTrackedResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/BatchDeployment"
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-client-name": "BatchDeployment"
    },
    "BatchDeploymentTrackedResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/BatchDeploymentTrackedResource"
          }
        }
      }
    },
    "BatchEndpoint": {
      "type": "object",
      "properties": {
        "defaults": {
          "$ref": "#/definitions/BatchEndpointDefaults",
          "x-nullable": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Updating",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "EndpointProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EndpointPropertiesBase"
        }
      ],
      "x-ms-client-name": "BatchEndpointProperties"
    },
    "BatchEndpointDefaults": {
      "type": "object",
      "properties": {
        "deploymentName": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "BatchEndpointTrackedResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/BatchEndpoint"
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-client-name": "BatchEndpoint"
    },
    "BatchEndpointTrackedResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/BatchEndpointTrackedResource"
          }
        }
      }
    },
    "BatchPipelineComponentDeploymentConfiguration": {
      "type": "object",
      "properties": {
        "componentId": {
          "$ref": "#/definitions/IdAssetReference",
          "x-nullable": true
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "settings": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "tags": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BatchDeploymentConfiguration"
        }
      ],
      "x-ms-discriminator-value": "PipelineComponent"
    },
    "BatchRetrySettings": {
      "type": "object",
      "properties": {
        "maxRetries": {
          "type": "integer",
          "format": "int32",
          "default": 3
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "default": "PT30S"
        }
      }
    },
    "BayesianSamplingAlgorithm": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SamplingAlgorithm"
        }
      ],
      "x-ms-discriminator-value": "Bayesian"
    },
    "BindOptions": {
      "type": "object",
      "properties": {
        "propagation": {
          "type": "string",
          "x-nullable": true
        },
        "createHostPath": {
          "type": "boolean",
          "x-nullable": true
        },
        "selinux": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "BlobReferenceForConsumptionDto": {
      "type": "object",
      "properties": {
        "blobUri": {
          "type": "string",
          "format": "uri",
          "x-nullable": true
        },
        "credential": {
          "$ref": "#/definitions/PendingUploadCredentialDto",
          "x-nullable": true
        },
        "storageAccountArmId": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "BuildContext": {
      "type": "object",
      "properties": {
        "contextUri": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "example": "https://storage-account.blob.core.windows.net/azureml/DockerBuildContext/95ddede6b9b8c4e90472db3acd0a8d28/",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dockerfilePath": {
          "type": "string",
          "default": "Dockerfile",
          "example": "prod/Dockerfile",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "contextUri"
      ]
    },
    "CapabilityHost": {
      "type": "object",
      "properties": {
        "aiServicesConnections": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "capabilityHostKind": {
          "type": "string",
          "default": "Agents",
          "enum": [
            "Agents"
          ],
          "x-ms-enum": {
            "name": "CapabilityHostKind",
            "modelAsString": true
          }
        },
        "customerSubnet": {
          "type": "string",
          "x-nullable": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "CapabilityHostProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "storageConnections": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "threadStorageConnections": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "vectorStoreConnections": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "x-ms-client-name": "CapabilityHostProperties"
    },
    "CapabilityHostResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CapabilityHost"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "CapabilityHost"
    },
    "CapacityConfig": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32"
        },
        "maximum": {
          "type": "integer",
          "format": "int32"
        },
        "step": {
          "type": "integer",
          "format": "int32"
        },
        "default": {
          "type": "integer",
          "format": "int32"
        },
        "allowedValues": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "CategoricalDataDriftMetricThreshold": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "enum": [
            "JensenShannonDistance",
            "PopulationStabilityIndex",
            "PearsonsChiSquaredTest"
          ],
          "x-ms-enum": {
            "name": "CategoricalDataDriftMetric",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "metric"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataDriftMetricThresholdBase"
        }
      ],
      "x-ms-discriminator-value": "Categorical"
    },
    "CategoricalDataQualityMetricThreshold": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "enum": [
            "NullValueRate",
            "DataTypeErrorRate",
            "OutOfBoundsRate"
          ],
          "x-ms-enum": {
            "name": "CategoricalDataQualityMetric",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "metric"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataQualityMetricThresholdBase"
        }
      ],
      "x-ms-discriminator-value": "Categorical"
    },
    "CategoricalPredictionDriftMetricThreshold": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "enum": [
            "JensenShannonDistance",
            "PopulationStabilityIndex",
            "PearsonsChiSquaredTest"
          ],
          "x-ms-enum": {
            "name": "CategoricalPredictionDriftMetric",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "metric"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PredictionDriftMetricThresholdBase"
        }
      ],
      "x-ms-discriminator-value": "Categorical"
    },
    "CertificateDatastoreCredentials": {
      "type": "object",
      "properties": {
        "authorityUrl": {
          "type": "string",
          "x-nullable": true
        },
        "clientId": {
          "type": "string",
          "format": "uuid"
        },
        "resourceUrl": {
          "type": "string",
          "x-nullable": true
        },
        "secrets": {
          "$ref": "#/definitions/CertificateDatastoreSecrets",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid"
        },
        "thumbprint": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        }
      },
      "required": [
        "clientId",
        "secrets",
        "tenantId",
        "thumbprint"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "x-ms-discriminator-value": "Certificate"
    },
    "CertificateDatastoreSecrets": {
      "type": "object",
      "properties": {
        "certificate": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        }
      ],
      "x-ms-discriminator-value": "Certificate"
    },
    "Classification": {
      "type": "object",
      "properties": {
        "positiveLabel": {
          "type": "string",
          "x-nullable": true
        },
        "primaryMetric": {
          "type": "string",
          "default": "AUCWeighted",
          "enum": [
            "AUCWeighted",
            "Accuracy",
            "NormMacroRecall",
            "AveragePrecisionScoreWeighted",
            "PrecisionScoreWeighted"
          ],
          "x-ms-enum": {
            "name": "ClassificationPrimaryMetrics",
            "modelAsString": true
          }
        },
        "trainingSettings": {
          "$ref": "#/definitions/ClassificationTrainingSettings",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TableVertical"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "x-ms-discriminator-value": "Classification"
    },
    "ClassificationTrainingSettings": {
      "type": "object",
      "properties": {
        "allowedTrainingAlgorithms": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string",
            "enum": [
              "LogisticRegression",
              "SGD",
              "MultinomialNaiveBayes",
              "BernoulliNaiveBayes",
              "SVM",
              "LinearSVM",
              "KNN",
              "DecisionTree",
              "RandomForest",
              "ExtremeRandomTrees",
              "LightGBM",
              "GradientBoosting",
              "XGBoostClassifier"
            ],
            "x-ms-enum": {
              "name": "ClassificationModels",
              "modelAsString": true
            }
          }
        },
        "blockedTrainingAlgorithms": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string",
            "enum": [
              "LogisticRegression",
              "SGD",
              "MultinomialNaiveBayes",
              "BernoulliNaiveBayes",
              "SVM",
              "LinearSVM",
              "KNN",
              "DecisionTree",
              "RandomForest",
              "ExtremeRandomTrees",
              "LightGBM",
              "GradientBoosting",
              "XGBoostClassifier"
            ],
            "x-ms-enum": {
              "name": "ClassificationModels",
              "modelAsString": true
            }
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrainingSettings"
        }
      ]
    },
    "ClusterUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClusterUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ClusterUpdateProperties": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScaleSettingsInformation"
        }
      }
    },
    "CodeConfiguration": {
      "type": "object",
      "properties": {
        "codeId": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "scoringScript": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "scoringScript"
      ]
    },
    "CodeContainer": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "AssetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "x-ms-client-name": "CodeContainerProperties"
    },
    "CodeContainerResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CodeContainer"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "CodeContainer"
    },
    "CodeContainerResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/CodeContainerResource"
          }
        }
      }
    },
    "CodeVersion": {
      "type": "object",
      "properties": {
        "codeUri": {
          "type": "string",
          "x-nullable": true,
          "example": "https://blobStorage/folderName"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "AssetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "x-ms-client-name": "CodeVersionProperties"
    },
    "CodeVersionResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CodeVersion"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "CodeVersion"
    },
    "CodeVersionResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/CodeVersionResource"
          }
        }
      }
    },
    "CognitiveServiceEndpointDeploymentResourceProperties": {
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/EndpointDeploymentModel"
        },
        "raiPolicyName": {
          "type": "string"
        },
        "sku": {
          "$ref": "#/definitions/CognitiveServicesSku"
        },
        "versionUpgradeOption": {
          "type": "string",
          "enum": [
            "OnceNewDefaultVersionAvailable",
            "OnceCurrentVersionExpired",
            "NoAutoUpgrade"
          ],
          "x-ms-enum": {
            "name": "DeploymentModelVersionUpgradeOption",
            "modelAsString": true
          }
        }
      },
      "required": [
        "model"
      ]
    },
    "CognitiveServicesSku": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "family": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "tier": {
          "type": "string"
        }
      }
    },
    "Collection": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "x-nullable": true
        },
        "dataCollectionMode": {
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DataCollectionMode",
            "modelAsString": true
          }
        },
        "dataId": {
          "type": "string",
          "x-nullable": true
        },
        "samplingRate": {
          "type": "number",
          "format": "double",
          "default": 1
        }
      }
    },
    "ColumnTransformer": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "parameters": {
          "type": "object",
          "x-nullable": true
        }
      }
    },
    "CommandJob": {
      "type": "object",
      "properties": {
        "codeId": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "command": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "distribution": {
          "$ref": "#/definitions/DistributionConfiguration",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentId": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentVariables": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "inputs": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/JobInput",
            "description": "Command job definition.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "limits": {
          "$ref": "#/definitions/CommandJobLimits",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "outputs": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/JobOutput",
            "description": "Job output definition container information on where to find job output/logs.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "parameters": {
          "type": "object",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "queueSettings": {
          "$ref": "#/definitions/QueueSettings",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "resources": {
          "$ref": "#/definitions/JobResourceConfiguration",
          "default": "{}",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "command",
        "environmentId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "x-ms-discriminator-value": "Command"
    },
    "CommandJobLimits": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobLimits"
        }
      ],
      "x-ms-discriminator-value": "Command"
    },
    "ComponentContainer": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "AssetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "x-ms-client-name": "ComponentContainerProperties"
    },
    "ComponentContainerResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ComponentContainer"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "ComponentContainer"
    },
    "ComponentContainerResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ComponentContainerResource"
          }
        }
      }
    },
    "ComponentVersion": {
      "type": "object",
      "properties": {
        "componentSpec": {
          "type": "object",
          "x-nullable": true,
          "example": {
            "code": "azureml:/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/codes/mycode/versions/1",
            "command": "python hello.py",
            "display_name": "Hello_Python_World",
            "environment": "azureml:/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/environments/AzureML-Tutorial/versions/1",
            "name": "Hello_Python_World",
            "type": "command",
            "version": 1
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "AssetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "x-ms-client-name": "ComponentVersionProperties"
    },
    "ComponentVersionResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ComponentVersion"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "ComponentVersion"
    },
    "ComponentVersionResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ComponentVersionResource"
          }
        }
      }
    },
    "Compute": {
      "type": "object",
      "properties": {
        "computeType": {
          "type": "string",
          "enum": [
            "AKS",
            "Kubernetes",
            "AmlCompute",
            "ComputeInstance",
            "DataFactory",
            "VirtualMachine",
            "HDInsight",
            "Databricks",
            "DataLakeAnalytics",
            "SynapseSpark"
          ],
          "x-ms-enum": {
            "name": "ComputeType",
            "modelAsString": true
          }
        },
        "computeLocation": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "createdOn": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "x-nullable": true
        },
        "provisioningErrors": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "/error/code"
          ]
        },
        "isAttachedCompute": {
          "type": "boolean",
          "readOnly": true
        },
        "disableLocalAuth": {
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "computeType",
      "required": [
        "computeType"
      ]
    },
    "ComputeInstance": {
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/ComputeInstanceSchema"
        }
      ],
      "x-ms-discriminator-value": "ComputeInstance"
    },
    "ComputeInstanceApplication": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "endpointUri": {
          "type": "string"
        }
      }
    },
    "ComputeInstanceAutologgerSettings": {
      "type": "object",
      "properties": {
        "mlflowAutologger": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "MlflowAutologger",
            "modelAsString": true
          }
        }
      }
    },
    "ComputeInstanceConnectivityEndpoints": {
      "type": "object",
      "properties": {
        "publicIpAddress": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true
        },
        "privateIpAddress": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "ComputeInstanceContainer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "autosave": {
          "type": "string",
          "enum": [
            "None",
            "Local",
            "Remote"
          ],
          "x-ms-enum": {
            "name": "Autosave",
            "modelAsString": true
          }
        },
        "gpu": {
          "type": "string"
        },
        "network": {
          "type": "string",
          "enum": [
            "Bridge",
            "Host"
          ],
          "x-ms-enum": {
            "name": "Network",
            "modelAsString": true
          }
        },
        "environment": {
          "$ref": "#/definitions/ComputeInstanceEnvironmentInfo"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "readOnly": true
        }
      }
    },
    "ComputeInstanceCreatedBy": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true
        },
        "userOrgId": {
          "type": "string",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "ComputeInstanceDataDisk": {
      "type": "object",
      "properties": {
        "caching": {
          "type": "string",
          "enum": [
            "None",
            "ReadOnly",
            "ReadWrite"
          ],
          "x-ms-enum": {
            "name": "Caching",
            "modelAsString": true
          }
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "title": "The initial disk size in gigabytes."
        },
        "lun": {
          "type": "integer",
          "format": "int32",
          "title": "The logical unit number."
        },
        "storageAccountType": {
          "type": "string",
          "default": "Standard_LRS",
          "enum": [
            "Standard_LRS",
            "Premium_LRS"
          ],
          "x-ms-enum": {
            "name": "StorageAccountType",
            "modelAsString": true
          }
        }
      }
    },
    "ComputeInstanceDataMount": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string"
        },
        "sourceType": {
          "type": "string",
          "enum": [
            "Dataset",
            "Datastore",
            "URI"
          ],
          "x-ms-enum": {
            "name": "SourceType",
            "modelAsString": true
          }
        },
        "mountName": {
          "type": "string"
        },
        "mountAction": {
          "type": "string",
          "enum": [
            "Mount",
            "Unmount"
          ],
          "x-ms-enum": {
            "name": "MountAction",
            "modelAsString": true
          }
        },
        "mountMode": {
          "type": "string",
          "enum": [
            "ReadOnly",
            "ReadWrite"
          ],
          "x-ms-enum": {
            "name": "MountMode",
            "modelAsString": true
          }
        },
        "createdBy": {
          "type": "string"
        },
        "mountPath": {
          "type": "string"
        },
        "mountState": {
          "type": "string",
          "enum": [
            "MountRequested",
            "Mounted",
            "MountFailed",
            "UnmountRequested",
            "UnmountFailed",
            "Unmounted"
          ],
          "x-ms-enum": {
            "name": "MountState",
            "modelAsString": true
          }
        },
        "mountedOn": {
          "type": "string",
          "format": "date-time",
          "title": "Mounted time."
        },
        "error": {
          "type": "string"
        }
      }
    },
    "ComputeInstanceEnvironmentInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ComputeInstanceLastOperation": {
      "type": "object",
      "properties": {
        "operationName": {
          "type": "string",
          "enum": [
            "Create",
            "Start",
            "Stop",
            "Restart",
            "Resize",
            "Reimage",
            "Delete"
          ],
          "x-ms-enum": {
            "name": "OperationName",
            "modelAsString": true
          }
        },
        "operationTime": {
          "type": "string",
          "format": "date-time"
        },
        "operationStatus": {
          "type": "string",
          "enum": [
            "InProgress",
            "Succeeded",
            "CreateFailed",
            "StartFailed",
            "StopFailed",
            "RestartFailed",
            "ResizeFailed",
            "ReimageFailed",
            "DeleteFailed"
          ],
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": true
          }
        },
        "operationTrigger": {
          "type": "string",
          "enum": [
            "User",
            "Schedule",
            "IdleShutdown"
          ],
          "x-ms-enum": {
            "name": "OperationTrigger",
            "modelAsString": true
          }
        }
      }
    },
    "ComputeInstanceProperties": {
      "type": "object",
      "properties": {
        "vmSize": {
          "type": "string"
        },
        "subnet": {
          "$ref": "#/definitions/ResourceId",
          "title": "Subnet.",
          "x-nullable": true
        },
        "applicationSharingPolicy": {
          "type": "string",
          "title": "Sharing policy for applications on this compute instance",
          "default": "Shared",
          "enum": [
            "Personal",
            "Shared"
          ],
          "x-ms-enum": {
            "name": "ApplicationSharingPolicy",
            "modelAsString": true
          }
        },
        "autologgerSettings": {
          "$ref": "#/definitions/ComputeInstanceAutologgerSettings",
          "x-nullable": true
        },
        "sshSettings": {
          "$ref": "#/definitions/ComputeInstanceSshSettings",
          "x-nullable": true
        },
        "customServices": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/CustomService"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "osImageMetadata": {
          "$ref": "#/definitions/ImageMetadata",
          "readOnly": true
        },
        "connectivityEndpoints": {
          "$ref": "#/definitions/ComputeInstanceConnectivityEndpoints",
          "readOnly": true
        },
        "applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputeInstanceApplication"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "displayName"
          ]
        },
        "createdBy": {
          "$ref": "#/definitions/ComputeInstanceCreatedBy",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "title": "Errors.",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "/error/code"
          ]
        },
        "state": {
          "type": "string",
          "enum": [
            "Creating",
            "CreateFailed",
            "Deleting",
            "Running",
            "Restarting",
            "Resizing",
            "JobRunning",
            "SettingUp",
            "SetupFailed",
            "Starting",
            "Stopped",
            "Stopping",
            "UserSettingUp",
            "UserSetupFailed",
            "Unknown",
            "Unusable"
          ],
          "x-ms-enum": {
            "name": "ComputeInstanceState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "computeInstanceAuthorizationType": {
          "type": "string",
          "title": "Compute Instance Authorization type.",
          "default": "personal",
          "enum": [
            "personal"
          ],
          "x-ms-enum": {
            "name": "ComputeInstanceAuthorizationType",
            "modelAsString": true
          },
          "x-nullable": true
        },
        "enableOSPatching": {
          "type": "boolean",
          "title": "Enable Auto OS Patching.",
          "default": false,
          "x-nullable": true
        },
        "enableRootAccess": {
          "type": "boolean",
          "title": "Enable root access.",
          "default": true,
          "x-nullable": true
        },
        "enableSSO": {
          "type": "boolean",
          "title": "Enable SSO (single sign on).",
          "default": true,
          "x-nullable": true
        },
        "releaseQuotaOnStop": {
          "type": "boolean",
          "title": "Release quota if compute instance stopped.",
          "default": false,
          "x-nullable": true
        },
        "personalComputeInstanceSettings": {
          "$ref": "#/definitions/PersonalComputeInstanceSettings",
          "title": "Personal Compute Instance settings.",
          "x-nullable": true
        },
        "setupScripts": {
          "$ref": "#/definitions/SetupScripts",
          "x-nullable": true
        },
        "lastOperation": {
          "$ref": "#/definitions/ComputeInstanceLastOperation",
          "x-nullable": true,
          "readOnly": true
        },
        "schedules": {
          "$ref": "#/definitions/ComputeSchedules",
          "x-nullable": true
        },
        "idleTimeBeforeShutdown": {
          "type": "string"
        },
        "enableNodePublicIp": {
          "type": "boolean",
          "title": "Enable node public IP.",
          "x-nullable": true
        },
        "containers": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ComputeInstanceContainer"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "dataDisks": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ComputeInstanceDataDisk"
          },
          "readOnly": true
        },
        "dataMounts": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ComputeInstanceDataMount"
          },
          "readOnly": true
        },
        "versions": {
          "$ref": "#/definitions/ComputeInstanceVersion",
          "readOnly": true
        }
      }
    },
    "ComputeInstanceSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ComputeInstanceProperties"
        }
      }
    },
    "ComputeInstanceSshSettings": {
      "type": "object",
      "properties": {
        "sshPublicAccess": {
          "type": "string",
          "title": "Access policy for SSH",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SshPublicAccess",
            "modelAsString": true
          }
        },
        "adminUserName": {
          "type": "string",
          "readOnly": true
        },
        "sshPort": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "adminPublicKey": {
          "type": "string"
        }
      }
    },
    "ComputeInstanceVersion": {
      "type": "object",
      "properties": {
        "runtime": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "ComputeRecurrenceSchedule": {
      "type": "object",
      "properties": {
        "hours": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "minutes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "monthDays": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "weekDays": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string",
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "x-ms-enum": {
              "name": "ComputeWeekDay",
              "modelAsString": true
            }
          }
        }
      },
      "required": [
        "hours",
        "minutes"
      ]
    },
    "ComputeResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "location": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        },
        {
          "$ref": "#/definitions/ComputeResourceSchema"
        }
      ]
    },
    "ComputeResourceSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Compute"
        }
      }
    },
    "ComputeRuntimeDto": {
      "type": "object",
      "properties": {
        "sparkRuntimeVersion": {
          "type": "string"
        }
      }
    },
    "ComputeSchedules": {
      "type": "object",
      "properties": {
        "computeStartStop": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComputeStartStopSchedule"
          }
        }
      }
    },
    "ComputeSecrets": {
      "type": "object",
      "properties": {
        "computeType": {
          "type": "string",
          "enum": [
            "AKS",
            "Kubernetes",
            "AmlCompute",
            "ComputeInstance",
            "DataFactory",
            "VirtualMachine",
            "HDInsight",
            "Databricks",
            "DataLakeAnalytics",
            "SynapseSpark"
          ],
          "x-ms-enum": {
            "name": "ComputeType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "computeType",
      "required": [
        "computeType"
      ]
    },
    "ComputeStartStopSchedule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true
        },
        "provisioningStatus": {
          "type": "string",
          "enum": [
            "Completed",
            "Provisioning",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ScheduleStatus",
            "modelAsString": true
          }
        },
        "action": {
          "type": "string",
          "enum": [
            "Start",
            "Stop"
          ],
          "x-ms-enum": {
            "name": "ComputePowerAction",
            "modelAsString": true
          }
        },
        "triggerType": {
          "type": "string",
          "enum": [
            "Recurrence",
            "Cron"
          ],
          "x-ms-enum": {
            "name": "ComputeTriggerType",
            "modelAsString": true
          }
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence"
        },
        "cron": {
          "$ref": "#/definitions/Cron"
        },
        "schedule": {
          "$ref": "#/definitions/ScheduleBase"
        }
      }
    },
    "ContainerResourceRequirements": {
      "type": "object",
      "properties": {
        "containerResourceLimits": {
          "$ref": "#/definitions/ContainerResourceSettings",
          "x-nullable": true
        },
        "containerResourceRequests": {
          "$ref": "#/definitions/ContainerResourceSettings",
          "x-nullable": true
        }
      }
    },
    "ContainerResourceSettings": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string",
          "x-nullable": true,
          "example": "1"
        },
        "gpu": {
          "type": "string",
          "x-nullable": true,
          "example": "1"
        },
        "memory": {
          "type": "string",
          "x-nullable": true,
          "example": "2Gi"
        }
      }
    },
    "ContentSafety": {
      "type": "object",
      "properties": {
        "contentSafetyLevel": {
          "type": "string",
          "default": "Blocking",
          "enum": [
            "Blocking",
            "Deferred"
          ],
          "x-ms-enum": {
            "name": "ContentSafetyLevel",
            "modelAsString": true
          }
        },
        "contentSafetyStatus": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ContentSafetyStatus",
            "modelAsString": true
          }
        }
      },
      "required": [
        "contentSafetyStatus"
      ]
    },
    "ContentSafetyEndpointDeploymentResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CognitiveServiceEndpointDeploymentResourceProperties"
        },
        {
          "$ref": "#/definitions/EndpointDeploymentResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Azure.ContentSafety"
    },
    "ContentSafetyEndpointResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Azure.ContentSafety"
    },
    "CosmosDbSettings": {
      "type": "object",
      "properties": {
        "collectionsThroughput": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CreateMonitorAction": {
      "type": "object",
      "properties": {
        "monitorDefinition": {
          "$ref": "#/definitions/MonitorDefinition",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "monitorDefinition"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScheduleActionBase"
        }
      ],
      "x-ms-discriminator-value": "CreateMonitor"
    },
    "Cron": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "x-nullable": true
        },
        "timeZone": {
          "type": "string",
          "default": "UTC"
        },
        "expression": {
          "type": "string"
        }
      }
    },
    "CronTrigger": {
      "type": "object",
      "properties": {
        "expression": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        }
      },
      "required": [
        "expression"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TriggerBase"
        }
      ],
      "x-ms-discriminator-value": "Cron"
    },
    "CustomForecastHorizon": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ForecastHorizon"
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "CustomKeys": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CustomKeysWorkspaceConnectionProperties": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/CustomKeys"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "CustomKeys"
    },
    "CustomMetricThreshold": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "threshold": {
          "$ref": "#/definitions/MonitoringThreshold",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "metric"
      ]
    },
    "CustomModelFineTuning": {
      "type": "object",
      "properties": {
        "hyperParameters": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      },
      "required": [
        "modelProvider"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FineTuningVertical"
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "CustomModelJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "custom_model"
    },
    "CustomModelJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "custom_model"
    },
    "CustomMonitoringSignal": {
      "type": "object",
      "properties": {
        "componentId": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "inputAssets": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/MonitoringInputDataBase",
            "description": "Monitoring input data base definition.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "inputs": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/JobInput",
            "description": "Command job definition.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "metricThresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomMetricThreshold"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "componentId",
        "metricThresholds"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringSignalBase"
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "CustomNCrossValidations": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/NCrossValidations"
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "CustomSeasonality": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Seasonality"
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "CustomService": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/Image"
        },
        "environmentVariables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EnvironmentVariable"
          }
        },
        "docker": {
          "$ref": "#/definitions/Docker",
          "x-nullable": true
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Endpoint"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeDefinition"
          },
          "x-ms-identifiers": [
            "source",
            "target"
          ]
        },
        "kernel": {
          "$ref": "#/definitions/JupyterKernelConfig"
        }
      },
      "additionalProperties": true
    },
    "CustomTargetLags": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "values"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetLags"
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "CustomTargetRollingWindowSize": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetRollingWindowSize"
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "DataCollector": {
      "type": "object",
      "properties": {
        "collections": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Collection",
            "x-nullable": true
          }
        },
        "requestLogging": {
          "$ref": "#/definitions/RequestLogging",
          "x-nullable": true
        },
        "rollingRate": {
          "type": "string",
          "default": "Hour",
          "enum": [
            "Year",
            "Month",
            "Day",
            "Hour",
            "Minute"
          ],
          "x-ms-enum": {
            "name": "RollingRateType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "collections"
      ]
    },
    "DataContainer": {
      "type": "object",
      "properties": {
        "dataType": {
          "type": "string",
          "enum": [
            "uri_file",
            "uri_folder",
            "mltable"
          ],
          "x-ms-enum": {
            "name": "DataType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "dataType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "x-ms-client-name": "DataContainerProperties"
    },
    "DataContainerResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataContainer"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "DataContainer"
    },
    "DataContainerResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/DataContainerResource"
          }
        }
      }
    },
    "DataDriftMetricThresholdBase": {
      "type": "object",
      "properties": {
        "dataType": {
          "type": "string",
          "enum": [
            "Numerical",
            "Categorical"
          ],
          "x-ms-enum": {
            "name": "MonitoringFeatureDataType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "threshold": {
          "$ref": "#/definitions/MonitoringThreshold",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "dataType",
      "required": [
        "dataType"
      ]
    },
    "DataDriftMonitoringSignal": {
      "type": "object",
      "properties": {
        "featureDataTypeOverride": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/MonitoringFeatureDataType"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "featureImportanceSettings": {
          "$ref": "#/definitions/FeatureImportanceSettings",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "features": {
          "$ref": "#/definitions/MonitoringFeatureFilterBase",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "metricThresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataDriftMetricThresholdBase"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "productionData": {
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "referenceData": {
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "metricThresholds",
        "productionData",
        "referenceData"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringSignalBase"
        }
      ],
      "x-ms-discriminator-value": "DataDrift"
    },
    "DataFactory": {
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        }
      ],
      "x-ms-discriminator-value": "DataFactory"
    },
    "DataGenerationVertical": {
      "type": "object",
      "properties": {
        "dataGenerationTaskType": {
          "type": "string",
          "enum": [
            "Conversation",
            "Math",
            "Nli",
            "NluQa",
            "Summarization"
          ],
          "x-ms-enum": {
            "name": "DataGenerationTaskType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataGenerationType": {
          "type": "string",
          "enum": [
            "LabelGeneration",
            "DataGeneration"
          ],
          "x-ms-enum": {
            "name": "DataGenerationType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "promptSettings": {
          "$ref": "#/definitions/PromptSettings",
          "x-nullable": true
        },
        "teacherModelEndpoint": {
          "$ref": "#/definitions/TeacherModelEndpoint",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "teacherModelSettings": {
          "$ref": "#/definitions/TeacherModelSettings",
          "x-nullable": true
        }
      },
      "discriminator": "dataGenerationType",
      "required": [
        "dataGenerationTaskType",
        "dataGenerationType",
        "teacherModelEndpoint"
      ]
    },
    "DataLakeAnalytics": {
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/DataLakeAnalyticsSchema"
        }
      ],
      "x-ms-discriminator-value": "DataLakeAnalytics"
    },
    "DataLakeAnalyticsSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "dataLakeStoreAccountName": {
              "type": "string",
              "description": "DataLake Store Account Name"
            }
          }
        }
      }
    },
    "DataPathAssetReference": {
      "type": "object",
      "properties": {
        "datastoreId": {
          "type": "string",
          "x-nullable": true
        },
        "path": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        }
      ],
      "x-ms-discriminator-value": "DataPath"
    },
    "DataQualityMetricThresholdBase": {
      "type": "object",
      "properties": {
        "dataType": {
          "type": "string",
          "enum": [
            "Numerical",
            "Categorical"
          ],
          "x-ms-enum": {
            "name": "MonitoringFeatureDataType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "threshold": {
          "$ref": "#/definitions/MonitoringThreshold",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "dataType",
      "required": [
        "dataType"
      ]
    },
    "DataQualityMonitoringSignal": {
      "type": "object",
      "properties": {
        "featureDataTypeOverride": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/MonitoringFeatureDataType"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "featureImportanceSettings": {
          "$ref": "#/definitions/FeatureImportanceSettings",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "features": {
          "$ref": "#/definitions/MonitoringFeatureFilterBase",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "metricThresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataQualityMetricThresholdBase"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "productionData": {
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "referenceData": {
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "metricThresholds",
        "productionData",
        "referenceData"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringSignalBase"
        }
      ],
      "x-ms-discriminator-value": "DataQuality"
    },
    "DataReferenceCredential": {
      "type": "object",
      "properties": {
        "credentialType": {
          "type": "string",
          "enum": [
            "SAS",
            "DockerCredentials",
            "ManagedIdentity",
            "NoCredentials"
          ],
          "x-ms-enum": {
            "name": "DataReferenceCredentialType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "credentialType",
      "required": [
        "credentialType"
      ]
    },
    "DataVersionBase": {
      "type": "object",
      "properties": {
        "dataType": {
          "type": "string",
          "enum": [
            "uri_file",
            "uri_folder",
            "mltable"
          ],
          "x-ms-enum": {
            "name": "DataType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataUri": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "dataType",
      "required": [
        "dataType",
        "dataUri"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "x-ms-client-name": "DataVersionBaseProperties"
    },
    "DataVersionBaseResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataVersionBase"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "DataVersionBase"
    },
    "DataVersionBaseResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/DataVersionBaseResource"
          }
        }
      }
    },
    "Databricks": {
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/DatabricksSchema"
        }
      ],
      "x-ms-discriminator-value": "Databricks"
    },
    "DatabricksComputeSecrets": {
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "$ref": "#/definitions/DatabricksComputeSecretsProperties"
        }
      ],
      "x-ms-discriminator-value": "Databricks"
    },
    "DatabricksComputeSecretsProperties": {
      "type": "object",
      "properties": {
        "databricksAccessToken": {
          "type": "string"
        }
      }
    },
    "DatabricksProperties": {
      "type": "object",
      "properties": {
        "databricksAccessToken": {
          "type": "string"
        },
        "workspaceUrl": {
          "type": "string"
        }
      }
    },
    "DatabricksSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabricksProperties"
        }
      }
    },
    "DatasetReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Datastore": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/DatastoreCredentials"
        },
        "datastoreType": {
          "type": "string",
          "enum": [
            "AzureBlob",
            "AzureDataLakeGen1",
            "AzureDataLakeGen2",
            "AzureFile",
            "OneLake"
          ],
          "x-ms-enum": {
            "name": "DatastoreType",
            "modelAsString": true
          }
        },
        "isDefault": {
          "type": "boolean",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "discriminator": "datastoreType",
      "required": [
        "credentials",
        "datastoreType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "x-ms-client-name": "DatastoreProperties"
    },
    "DatastoreCredentials": {
      "type": "object",
      "properties": {
        "credentialsType": {
          "type": "string",
          "enum": [
            "AccountKey",
            "Certificate",
            "None",
            "Sas",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "CredentialsType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "credentialsType",
      "required": [
        "credentialsType"
      ]
    },
    "DatastoreResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Datastore"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "Datastore"
    },
    "DatastoreResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/DatastoreResource"
          }
        }
      }
    },
    "DatastoreSecrets": {
      "type": "object",
      "properties": {
        "secretsType": {
          "type": "string",
          "enum": [
            "AccountKey",
            "Certificate",
            "Sas",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "SecretsType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "secretsType",
      "required": [
        "secretsType"
      ]
    },
    "DefaultScaleSettings": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OnlineScaleSettings"
        }
      ],
      "x-ms-discriminator-value": "Default"
    },
    "DeltaModelCurrentState": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "sampleInstanceID": {
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "DeltaModelListRequest": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "default": -1
        },
        "skipToken": {
          "type": "string",
          "x-nullable": true
        },
        "targetBaseModel": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "DeltaModelModifyRequest": {
      "type": "object",
      "properties": {
        "addDeltaModels": {
          "type": "array",
          "uniqueItems": true,
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "removeDeltaModels": {
          "type": "array",
          "uniqueItems": true,
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "targetBaseModel": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "DeltaModelStatusRequest": {
      "type": "object",
      "properties": {
        "deltaModels": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "targetBaseModel": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "DeltaModelStatusResponse": {
      "type": "object",
      "properties": {
        "actualInstanceCount": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "deltaModels": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/DeltaModelCurrentState"
            },
            "type": "array",
            "x-nullable": true
          }
        },
        "expectedInstanceCount": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "revisionId": {
          "type": "string",
          "x-nullable": true
        },
        "targetBaseModel": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "DeploymentLogs": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "DeploymentLogsRequest": {
      "type": "object",
      "properties": {
        "containerType": {
          "type": "string",
          "default": "InferenceServer",
          "enum": [
            "StorageInitializer",
            "InferenceServer"
          ],
          "x-ms-enum": {
            "name": "ContainerType",
            "modelAsString": true
          }
        },
        "tail": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        }
      }
    },
    "DeploymentResourceConfiguration": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceConfiguration"
        }
      ]
    },
    "DestinationAsset": {
      "type": "object",
      "properties": {
        "destinationName": {
          "type": "string",
          "x-nullable": true
        },
        "destinationVersion": {
          "type": "string",
          "x-nullable": true
        },
        "registryName": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "DiagnoseRequestProperties": {
      "type": "object",
      "properties": {
        "applicationInsights": {
          "type": "object",
          "additionalProperties": {}
        },
        "containerRegistry": {
          "type": "object",
          "additionalProperties": {}
        },
        "dnsResolution": {
          "type": "object",
          "additionalProperties": {}
        },
        "keyVault": {
          "type": "object",
          "additionalProperties": {}
        },
        "nsg": {
          "type": "object",
          "additionalProperties": {}
        },
        "others": {
          "type": "object",
          "additionalProperties": {}
        },
        "requiredResourceProviders": {
          "type": "object",
          "additionalProperties": {}
        },
        "resourceLock": {
          "type": "object",
          "additionalProperties": {}
        },
        "storageAccount": {
          "type": "object",
          "additionalProperties": {}
        },
        "udr": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "DiagnoseResponseResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "properties": {
            "userDefinedRouteResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "networkSecurityRuleResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "resourceLockResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "dnsResolutionResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "storageAccountResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "keyVaultResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "containerRegistryResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "applicationInsightsResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            },
            "otherResults": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnoseResult"
              },
              "x-ms-identifiers": [
                "message"
              ]
            }
          }
        }
      }
    },
    "DiagnoseResult": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "level": {
          "type": "string",
          "enum": [
            "Warning",
            "Error",
            "Information"
          ],
          "x-ms-enum": {
            "name": "DiagnoseResultLevel",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "DiagnoseWorkspaceParameters": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/DiagnoseRequestProperties"
        }
      }
    },
    "DistillationJob": {
      "type": "object",
      "properties": {
        "dataGenerationDetails": {
          "$ref": "#/definitions/DataGenerationVertical"
        },
        "finetuningDetails": {
          "$ref": "#/definitions/FinetuningDetails"
        },
        "outputs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JobOutput",
            "description": "Job output definition container information on where to find job output/logs.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "queueSettings": {
          "$ref": "#/definitions/QueueSettings",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "resources": {
          "$ref": "#/definitions/JobResources",
          "default": "{}",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "dataGenerationDetails",
        "finetuningDetails",
        "jobType",
        "outputs"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "x-ms-discriminator-value": "Distillation"
    },
    "DistributionConfiguration": {
      "type": "object",
      "properties": {
        "distributionType": {
          "type": "string",
          "enum": [
            "PyTorch",
            "TensorFlow",
            "Mpi"
          ],
          "x-ms-enum": {
            "name": "DistributionType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "distributionType",
      "required": [
        "distributionType"
      ]
    },
    "Docker": {
      "type": "object",
      "properties": {
        "privileged": {
          "type": "boolean",
          "x-nullable": true
        }
      },
      "additionalProperties": true
    },
    "DockerCredential": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "x-nullable": true
        },
        "userName": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataReferenceCredential"
        }
      ],
      "x-ms-discriminator-value": "DockerCredentials"
    },
    "EarlyTerminationPolicy": {
      "type": "object",
      "properties": {
        "delayEvaluation": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "evaluationInterval": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "policyType": {
          "type": "string",
          "enum": [
            "Bandit",
            "MedianStopping",
            "TruncationSelection"
          ],
          "x-ms-enum": {
            "name": "EarlyTerminationPolicyType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "policyType",
      "required": [
        "policyType"
      ]
    },
    "EncryptionKeyVaultUpdateProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        }
      },
      "required": [
        "keyIdentifier"
      ]
    },
    "EncryptionProperty": {
      "type": "object",
      "properties": {
        "cosmosDbResourceId": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/IdentityForCmk"
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties"
        },
        "searchAccountResourceId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "storageAccountResourceId": {
          "type": "string"
        }
      },
      "required": [
        "keyVaultProperties",
        "status"
      ]
    },
    "EncryptionUpdateProperties": {
      "type": "object",
      "properties": {
        "keyVaultProperties": {
          "$ref": "#/definitions/EncryptionKeyVaultUpdateProperties"
        }
      },
      "required": [
        "keyVaultProperties"
      ]
    },
    "Endpoint": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string",
          "title": "Endpoint Communication Protocol",
          "default": "tcp",
          "enum": [
            "tcp",
            "udp",
            "http"
          ],
          "x-ms-enum": {
            "name": "Protocol",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string"
        },
        "target": {
          "type": "integer",
          "format": "int32"
        },
        "published": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "hostIp": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "EndpointAuthKeys": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "secondaryKey": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "EndpointAuthToken": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "x-nullable": true
        },
        "expiryTimeUtc": {
          "type": "integer",
          "format": "int64",
          "default": 0
        },
        "refreshAfterTimeUtc": {
          "type": "integer",
          "format": "int64",
          "default": 0
        },
        "tokenType": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "EndpointDeploymentModel": {
      "type": "object",
      "properties": {
        "format": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "EndpointDeploymentPropertiesBase": {
      "type": "object",
      "properties": {
        "codeConfiguration": {
          "$ref": "#/definitions/CodeConfiguration",
          "x-nullable": true
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "environmentId": {
          "type": "string",
          "x-nullable": true
        },
        "environmentVariables": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "properties": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      }
    },
    "EndpointDeploymentResourceProperties": {
      "type": "object",
      "properties": {
        "failureReason": {
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "NotStarted",
            "Failed",
            "Creating",
            "Updating",
            "Succeeded",
            "Deleting",
            "Accepted",
            "Canceled",
            "Scaling",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DefaultResourceProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "type": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "EndpointDeploymentResourcePropertiesBasicResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EndpointDeploymentResourceProperties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EndpointDeploymentResourcePropertiesBasicResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
          }
        }
      }
    },
    "EndpointKeys": {
      "type": "object",
      "properties": {
        "keys": {
          "$ref": "#/definitions/AccountApiKeys",
          "x-ms-secret": true
        }
      }
    },
    "EndpointModelDeprecationProperties": {
      "type": "object",
      "properties": {
        "fineTune": {
          "type": "string",
          "format": "date-time"
        },
        "inference": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "EndpointModelProperties": {
      "type": "object",
      "properties": {
        "capabilities": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deprecation": {
          "$ref": "#/definitions/EndpointModelDeprecationProperties"
        },
        "finetuneCapabilities": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "format": {
          "type": "string"
        },
        "isDefaultVersion": {
          "type": "boolean"
        },
        "lifecycleStatus": {
          "type": "string",
          "enum": [
            "GenerallyAvailable",
            "Preview"
          ],
          "x-ms-enum": {
            "name": "ModelLifecycleStatus",
            "modelAsString": true
          }
        },
        "maxCapacity": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "skus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointModelSkuProperties"
          }
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "EndpointModelSkuCapacityProperties": {
      "type": "object",
      "properties": {
        "default": {
          "type": "integer",
          "format": "int32"
        },
        "maximum": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EndpointModelSkuProperties": {
      "type": "object",
      "properties": {
        "capacity": {
          "$ref": "#/definitions/EndpointModelSkuCapacityProperties"
        },
        "connectionIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "arm-id"
          }
        },
        "deprecationDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "rateLimits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointModelSkuRateLimitProperties"
          }
        },
        "usageName": {
          "type": "string"
        }
      }
    },
    "EndpointModelSkuRateLimitProperties": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "format": "float"
        },
        "renewalPeriod": {
          "type": "number",
          "format": "float"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointModelSkuRateLimitRuleProperties"
          }
        }
      }
    },
    "EndpointModelSkuRateLimitRulePatternProperties": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "EndpointModelSkuRateLimitRuleProperties": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "format": "float"
        },
        "dynamicThrottlingEnabled": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "matchPatterns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointModelSkuRateLimitRulePatternProperties"
          }
        },
        "minCount": {
          "type": "number",
          "format": "float"
        },
        "renewalPeriod": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "EndpointModels": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/EndpointModelProperties"
          }
        }
      }
    },
    "EndpointPropertiesBase": {
      "type": "object",
      "properties": {
        "authMode": {
          "type": "string",
          "enum": [
            "AMLToken",
            "Key",
            "AADToken"
          ],
          "x-ms-enum": {
            "name": "EndpointAuthMode",
            "modelAsString": true
          }
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "keys": {
          "$ref": "#/definitions/EndpointAuthKeys",
          "x-nullable": true,
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true
        },
        "properties": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "scoringUri": {
          "type": "string",
          "format": "uri",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "swaggerUri": {
          "type": "string",
          "format": "uri",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "required": [
        "authMode"
      ]
    },
    "EndpointResourceProperties": {
      "type": "object",
      "properties": {
        "associatedResourceId": {
          "type": "string",
          "format": "arm-id"
        },
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointDeploymentResourcePropertiesBasicResource"
          }
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "Azure.OpenAI",
            "Azure.Speech",
            "Azure.ContentSafety",
            "Azure.Llama",
            "managedOnlineEndpoint",
            "serverlessEndpoint"
          ],
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          }
        },
        "endpointUri": {
          "type": "string",
          "format": "url"
        },
        "failureReason": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "NotStarted",
            "Failed",
            "Creating",
            "Updating",
            "Succeeded",
            "Deleting",
            "Accepted",
            "Canceled",
            "Scaling",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DefaultResourceProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "shouldCreateAiServicesEndpoint": {
          "type": "boolean"
        }
      },
      "discriminator": "endpointType",
      "required": [
        "endpointType"
      ]
    },
    "EndpointResourcePropertiesBasicResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EndpointResourceProperties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EndpointResourcePropertiesBasicResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/EndpointResourcePropertiesBasicResource"
          }
        }
      }
    },
    "EndpointScheduleAction": {
      "type": "object",
      "properties": {
        "endpointInvocationDefinition": {
          "type": "object",
          "example": {
            "endpoint": "azureml:/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/resourceGroup-1234/providers/Microsoft.MachineLearningServices/workspaces/testworkspace/batchEndpoints/hello-pipeline",
            "inputs": {
              "create_time": "${{creation_context.trigger_time}}"
            }
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "required": [
        "actionType",
        "endpointInvocationDefinition"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScheduleActionBase"
        }
      ],
      "x-ms-discriminator-value": "InvokeBatchEndpoint"
    },
    "EnvironmentContainer": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "AssetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "x-ms-client-name": "EnvironmentContainerProperties"
    },
    "EnvironmentContainerResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnvironmentContainer"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "EnvironmentContainer"
    },
    "EnvironmentContainerResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/EnvironmentContainerResource"
          }
        }
      }
    },
    "EnvironmentVariable": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type of Environment Variable",
          "default": "local",
          "enum": [
            "local"
          ],
          "x-ms-enum": {
            "name": "EnvironmentVariableType",
            "modelAsString": true
          }
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": true
    },
    "EnvironmentVersion": {
      "type": "object",
      "properties": {
        "autoRebuild": {
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Disabled",
            "OnBaseImageUpdate"
          ],
          "x-ms-enum": {
            "name": "AutoRebuildSetting",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "build": {
          "$ref": "#/definitions/BuildContext",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "condaFile": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentType": {
          "type": "string",
          "enum": [
            "Curated",
            "UserCreated"
          ],
          "x-ms-enum": {
            "name": "EnvironmentType",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "image": {
          "type": "string",
          "example": "docker.io/tensorflow/serving:latest",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "imageDetails": {
          "$ref": "#/definitions/ImageDetails"
        },
        "inferenceConfig": {
          "$ref": "#/definitions/InferenceContainerProperties",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "osType": {
          "type": "string",
          "default": "Linux",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "OperatingSystemType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "AssetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "stage": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "x-ms-client-name": "EnvironmentVersionProperties"
    },
    "EnvironmentVersionResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnvironmentVersion"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "EnvironmentVersion"
    },
    "EnvironmentVersionResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/EnvironmentVersionResource"
          }
        }
      }
    },
    "EstimatedVMPrice": {
      "type": "object",
      "properties": {
        "retailPrice": {
          "type": "number",
          "format": "double",
          "title": "Retail price"
        },
        "osType": {
          "type": "string",
          "title": "OS type",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "VMPriceOSType",
            "modelAsString": true
          }
        },
        "vmTier": {
          "type": "string",
          "title": "VM tier",
          "enum": [
            "Standard",
            "LowPriority",
            "Spot"
          ],
          "x-ms-enum": {
            "name": "VMTier",
            "modelAsString": true
          }
        }
      },
      "required": [
        "osType",
        "retailPrice",
        "vmTier"
      ]
    },
    "EstimatedVMPrices": {
      "type": "object",
      "properties": {
        "billingCurrency": {
          "type": "string",
          "title": "Billing currency",
          "enum": [
            "USD"
          ],
          "x-ms-enum": {
            "name": "BillingCurrency",
            "modelAsString": true
          }
        },
        "unitOfMeasure": {
          "type": "string",
          "title": "Unit of time measure",
          "enum": [
            "OneHour"
          ],
          "x-ms-enum": {
            "name": "UnitOfMeasure",
            "modelAsString": true
          }
        },
        "values": {
          "type": "array",
          "title": "List of estimated VM prices.",
          "items": {
            "$ref": "#/definitions/EstimatedVMPrice"
          }
        }
      },
      "required": [
        "billingCurrency",
        "unitOfMeasure",
        "values"
      ]
    },
    "ExternalFQDNResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FQDNEndpointsPropertyBag"
          },
          "x-ms-identifiers": [
            "/properties/category"
          ]
        }
      }
    },
    "FQDNEndpoint": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string"
        },
        "endpointDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FQDNEndpointDetail"
          },
          "x-ms-identifiers": [
            "port"
          ]
        }
      }
    },
    "FQDNEndpointDetail": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FQDNEndpoints": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FQDNEndpoint"
          },
          "x-ms-identifiers": [
            "domainName"
          ]
        }
      }
    },
    "FQDNEndpointsPropertyBag": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FQDNEndpoints"
        }
      }
    },
    "Feature": {
      "type": "object",
      "properties": {
        "dataType": {
          "type": "string",
          "default": "String",
          "enum": [
            "String",
            "Integer",
            "Long",
            "Float",
            "Double",
            "Binary",
            "Datetime",
            "Boolean"
          ],
          "x-ms-enum": {
            "name": "FeatureDataType",
            "modelAsString": true
          }
        },
        "featureName": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "x-ms-client-name": "FeatureProperties"
    },
    "FeatureAttributionDriftMonitoringSignal": {
      "type": "object",
      "properties": {
        "featureDataTypeOverride": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/MonitoringFeatureDataType"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "featureImportanceSettings": {
          "$ref": "#/definitions/FeatureImportanceSettings",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "metricThreshold": {
          "$ref": "#/definitions/FeatureAttributionMetricThreshold",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "productionData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoringInputDataBase"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "referenceData": {
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "featureImportanceSettings",
        "metricThreshold",
        "productionData",
        "referenceData"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringSignalBase"
        }
      ],
      "x-ms-discriminator-value": "FeatureAttributionDrift"
    },
    "FeatureAttributionMetricThreshold": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "enum": [
            "NormalizedDiscountedCumulativeGain"
          ],
          "x-ms-enum": {
            "name": "FeatureAttributionMetric",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "threshold": {
          "$ref": "#/definitions/MonitoringThreshold",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "metric"
      ]
    },
    "FeatureImportanceSettings": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "FeatureImportanceMode",
            "modelAsString": true
          }
        },
        "targetColumn": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "FeatureResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Feature"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "Feature"
    },
    "FeatureResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/FeatureResource"
          }
        }
      }
    },
    "FeatureStoreSettings": {
      "type": "object",
      "properties": {
        "computeRuntime": {
          "$ref": "#/definitions/ComputeRuntimeDto"
        },
        "offlineStoreConnectionName": {
          "type": "string"
        },
        "onlineStoreConnectionName": {
          "type": "string"
        }
      }
    },
    "FeatureSubset": {
      "type": "object",
      "properties": {
        "features": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "features",
        "filterType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringFeatureFilterBase"
        }
      ],
      "x-ms-discriminator-value": "FeatureSubset"
    },
    "FeatureWindow": {
      "type": "object",
      "properties": {
        "featureWindowEnd": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "featureWindowStart": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "FeaturesetContainer": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "AssetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "x-ms-client-name": "FeaturesetContainerProperties"
    },
    "FeaturesetContainerResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FeaturesetContainer"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "FeaturesetContainer"
    },
    "FeaturesetContainerResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/FeaturesetContainerResource"
          }
        }
      }
    },
    "FeaturesetSpecification": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "FeaturesetVersion": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "materializationSettings": {
          "$ref": "#/definitions/MaterializationSettings",
          "x-nullable": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "AssetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "specification": {
          "$ref": "#/definitions/FeaturesetSpecification",
          "x-nullable": true
        },
        "stage": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "x-ms-client-name": "FeaturesetVersionProperties"
    },
    "FeaturesetVersionBackfillRequest": {
      "type": "object",
      "properties": {
        "dataAvailabilityStatus": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "None",
              "Pending",
              "Incomplete",
              "Complete"
            ],
            "x-ms-enum": {
              "name": "DataAvailabilityStatus",
              "modelAsString": true
            }
          }
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "featureWindow": {
          "$ref": "#/definitions/FeatureWindow",
          "x-nullable": true
        },
        "jobId": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "resource": {
          "$ref": "#/definitions/MaterializationComputeResource"
        },
        "sparkConfiguration": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      }
    },
    "FeaturesetVersionBackfillResponse": {
      "type": "object",
      "properties": {
        "jobIds": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FeaturesetVersionResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FeaturesetVersion"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "FeaturesetVersion"
    },
    "FeaturesetVersionResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/FeaturesetVersionResource"
          }
        }
      }
    },
    "FeaturestoreEntityContainer": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "AssetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "x-ms-client-name": "FeaturestoreEntityContainerProperties"
    },
    "FeaturestoreEntityContainerResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FeaturestoreEntityContainer"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "FeaturestoreEntityContainer"
    },
    "FeaturestoreEntityContainerResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/FeaturestoreEntityContainerResource"
          }
        }
      }
    },
    "FeaturestoreEntityVersion": {
      "type": "object",
      "properties": {
        "indexColumns": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/IndexColumn"
          }
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "AssetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "stage": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "x-ms-client-name": "FeaturestoreEntityVersionProperties"
    },
    "FeaturestoreEntityVersionResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FeaturestoreEntityVersion"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "FeaturestoreEntityVersion"
    },
    "FeaturestoreEntityVersionResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/FeaturestoreEntityVersionResource"
          }
        }
      }
    },
    "FeaturizationSettings": {
      "type": "object",
      "properties": {
        "datasetLanguage": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "FineTuningJob": {
      "type": "object",
      "properties": {
        "fineTuningDetails": {
          "$ref": "#/definitions/FineTuningVertical"
        },
        "outputs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JobOutput",
            "description": "Job output definition container information on where to find job output/logs.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "queueSettings": {
          "$ref": "#/definitions/QueueSettings",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "resources": {
          "$ref": "#/definitions/JobResources",
          "default": "{}",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "fineTuningDetails",
        "jobType",
        "outputs"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "x-ms-discriminator-value": "FineTuning"
    },
    "FineTuningVertical": {
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/JobInput"
        },
        "modelProvider": {
          "type": "string",
          "enum": [
            "AzureOpenAI",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "ModelProvider",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "taskType": {
          "type": "string",
          "enum": [
            "ChatCompletion",
            "TextCompletion",
            "TextClassification",
            "QuestionAnswering",
            "TextSummarization",
            "TokenClassification",
            "TextTranslation",
            "ImageClassification",
            "ImageInstanceSegmentation",
            "ImageObjectDetection",
            "VideoMultiObjectTracking"
          ],
          "x-ms-enum": {
            "name": "FineTuningTaskType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "trainingData": {
          "$ref": "#/definitions/JobInput"
        },
        "validationData": {
          "$ref": "#/definitions/JobInput",
          "x-nullable": true
        }
      },
      "discriminator": "modelProvider",
      "required": [
        "model",
        "modelProvider",
        "taskType",
        "trainingData"
      ]
    },
    "FinetuningDetails": {
      "type": "object",
      "properties": {
        "hyperParameters": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "studentModel": {
          "$ref": "#/definitions/JobInput"
        }
      },
      "required": [
        "studentModel"
      ]
    },
    "FixedInputData": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringInputDataBase"
        }
      ],
      "x-ms-discriminator-value": "Fixed"
    },
    "FlavorData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      }
    },
    "ForecastHorizon": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "Auto",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "ForecastHorizonMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mode",
      "required": [
        "mode"
      ]
    },
    "Forecasting": {
      "type": "object",
      "properties": {
        "forecastingSettings": {
          "$ref": "#/definitions/ForecastingSettings",
          "x-nullable": true
        },
        "primaryMetric": {
          "type": "string",
          "default": "NormalizedRootMeanSquaredError",
          "enum": [
            "SpearmanCorrelation",
            "NormalizedRootMeanSquaredError",
            "R2Score",
            "NormalizedMeanAbsoluteError"
          ],
          "x-ms-enum": {
            "name": "ForecastingPrimaryMetrics",
            "modelAsString": true
          }
        },
        "trainingSettings": {
          "$ref": "#/definitions/ForecastingTrainingSettings",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TableVertical"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "x-ms-discriminator-value": "Forecasting"
    },
    "ForecastingSettings": {
      "type": "object",
      "properties": {
        "countryOrRegionForHolidays": {
          "type": "string",
          "x-nullable": true
        },
        "cvStepSize": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "featureLags": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "Auto"
          ],
          "x-ms-enum": {
            "name": "FeatureLags",
            "modelAsString": true
          }
        },
        "forecastHorizon": {
          "$ref": "#/definitions/ForecastHorizon",
          "default": "{\"Mode\": \"Custom\", \"Value\": 1}"
        },
        "frequency": {
          "type": "string",
          "x-nullable": true
        },
        "seasonality": {
          "$ref": "#/definitions/Seasonality",
          "default": "{\"Mode\": \"Auto\"}"
        },
        "shortSeriesHandlingConfig": {
          "type": "string",
          "default": "Auto",
          "enum": [
            "None",
            "Auto",
            "Pad",
            "Drop"
          ],
          "x-ms-enum": {
            "name": "ShortSeriesHandlingConfiguration",
            "modelAsString": true
          }
        },
        "targetAggregateFunction": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "Sum",
            "Max",
            "Min",
            "Mean"
          ],
          "x-ms-enum": {
            "name": "TargetAggregationFunction",
            "modelAsString": true
          }
        },
        "targetLags": {
          "$ref": "#/definitions/TargetLags",
          "x-nullable": true
        },
        "targetRollingWindowSize": {
          "$ref": "#/definitions/TargetRollingWindowSize",
          "x-nullable": true
        },
        "timeColumnName": {
          "type": "string",
          "x-nullable": true
        },
        "timeSeriesIdColumnNames": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "useStl": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "Season",
            "SeasonTrend"
          ],
          "x-ms-enum": {
            "name": "UseStl",
            "modelAsString": true
          }
        }
      }
    },
    "ForecastingTrainingSettings": {
      "type": "object",
      "properties": {
        "allowedTrainingAlgorithms": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string",
            "enum": [
              "AutoArima",
              "Prophet",
              "Naive",
              "SeasonalNaive",
              "Average",
              "SeasonalAverage",
              "ExponentialSmoothing",
              "Arimax",
              "TCNForecaster",
              "ElasticNet",
              "GradientBoosting",
              "DecisionTree",
              "KNN",
              "LassoLars",
              "SGD",
              "RandomForest",
              "ExtremeRandomTrees",
              "LightGBM",
              "XGBoostRegressor"
            ],
            "x-ms-enum": {
              "name": "ForecastingModels",
              "modelAsString": true
            }
          }
        },
        "blockedTrainingAlgorithms": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string",
            "enum": [
              "AutoArima",
              "Prophet",
              "Naive",
              "SeasonalNaive",
              "Average",
              "SeasonalAverage",
              "ExponentialSmoothing",
              "Arimax",
              "TCNForecaster",
              "ElasticNet",
              "GradientBoosting",
              "DecisionTree",
              "KNN",
              "LassoLars",
              "SGD",
              "RandomForest",
              "ExtremeRandomTrees",
              "LightGBM",
              "XGBoostRegressor"
            ],
            "x-ms-enum": {
              "name": "ForecastingModels",
              "modelAsString": true
            }
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrainingSettings"
        }
      ]
    },
    "FqdnOutboundRule": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OutboundRule"
        }
      ],
      "x-ms-discriminator-value": "FQDN"
    },
    "GetBlobReferenceForConsumptionDto": {
      "type": "object",
      "properties": {
        "blobUri": {
          "type": "string",
          "format": "uri",
          "x-nullable": true
        },
        "credential": {
          "$ref": "#/definitions/DataReferenceCredential",
          "x-nullable": true
        },
        "storageAccountArmId": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "GetBlobReferenceSASRequestDto": {
      "type": "object",
      "properties": {
        "assetId": {
          "type": "string",
          "x-nullable": true
        },
        "blobUri": {
          "type": "string",
          "format": "uri",
          "x-nullable": true
        }
      }
    },
    "GetBlobReferenceSASResponseDto": {
      "type": "object",
      "properties": {
        "blobReferenceForConsumption": {
          "$ref": "#/definitions/GetBlobReferenceForConsumptionDto",
          "x-nullable": true
        }
      }
    },
    "GridSamplingAlgorithm": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SamplingAlgorithm"
        }
      ],
      "x-ms-discriminator-value": "Grid"
    },
    "GroupEnvironmentConfiguration": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "x-nullable": true
        },
        "environmentVariables": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/StringStringKeyValuePair"
          }
        },
        "livenessProbe": {
          "$ref": "#/definitions/ProbeSettings",
          "x-nullable": true
        },
        "readinessProbe": {
          "$ref": "#/definitions/ProbeSettings",
          "x-nullable": true
        },
        "startupProbe": {
          "$ref": "#/definitions/ProbeSettings",
          "x-nullable": true
        }
      }
    },
    "GroupModelConfiguration": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "GroupStatus": {
      "type": "object",
      "properties": {
        "actualCapacityInfo": {
          "$ref": "#/definitions/ActualCapacityInfo",
          "x-nullable": true
        },
        "endpointCount": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "requestedCapacity": {
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      }
    },
    "HDInsight": {
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/HDInsightSchema"
        }
      ],
      "x-ms-discriminator-value": "HDInsight"
    },
    "HDInsightProperties": {
      "type": "object",
      "properties": {
        "sshPort": {
          "type": "integer",
          "format": "int32"
        },
        "address": {
          "type": "string"
        },
        "administratorAccount": {
          "$ref": "#/definitions/VirtualMachineSshCredentials",
          "x-nullable": true
        }
      }
    },
    "HDInsightSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HDInsightProperties"
        }
      }
    },
    "IPRule": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "IdAssetReference": {
      "type": "object",
      "properties": {
        "assetId": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        }
      },
      "required": [
        "assetId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        }
      ],
      "x-ms-discriminator-value": "Id"
    },
    "IdentityConfiguration": {
      "type": "object",
      "properties": {
        "identityType": {
          "type": "string",
          "enum": [
            "Managed",
            "AMLToken",
            "UserIdentity"
          ],
          "x-ms-enum": {
            "name": "IdentityConfigurationType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "identityType",
      "required": [
        "identityType"
      ]
    },
    "IdentityForCmk": {
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "type": "string"
        }
      }
    },
    "IdleShutdownSetting": {
      "type": "object",
      "properties": {
        "idleTimeBeforeShutdown": {
          "type": "string"
        }
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type of the image",
          "default": "docker",
          "enum": [
            "docker",
            "azureml"
          ],
          "x-ms-enum": {
            "name": "ImageType",
            "modelAsString": true
          }
        },
        "reference": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "additionalProperties": true
    },
    "ImageClassification": {
      "type": "object",
      "properties": {
        "primaryMetric": {
          "type": "string",
          "default": "Accuracy",
          "enum": [
            "AUCWeighted",
            "Accuracy",
            "NormMacroRecall",
            "AveragePrecisionScoreWeighted",
            "PrecisionScoreWeighted"
          ],
          "x-ms-enum": {
            "name": "ClassificationPrimaryMetrics",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageClassificationBase"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "x-ms-discriminator-value": "ImageClassification"
    },
    "ImageClassificationBase": {
      "type": "object",
      "properties": {
        "modelSettings": {
          "$ref": "#/definitions/ImageModelSettingsClassification",
          "x-nullable": true
        },
        "searchSpace": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ImageModelDistributionSettingsClassification"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageVertical"
        }
      ]
    },
    "ImageClassificationMultilabel": {
      "type": "object",
      "properties": {
        "primaryMetric": {
          "type": "string",
          "default": "IOU",
          "enum": [
            "AUCWeighted",
            "Accuracy",
            "NormMacroRecall",
            "AveragePrecisionScoreWeighted",
            "PrecisionScoreWeighted",
            "IOU"
          ],
          "x-ms-enum": {
            "name": "ClassificationMultilabelPrimaryMetrics",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageClassificationBase"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "x-ms-discriminator-value": "ImageClassificationMultilabel"
    },
    "ImageDetails": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        },
        "image": {
          "$ref": "#/definitions/ImageInfo",
          "x-nullable": true
        },
        "vulnerabilityFindings": {
          "$ref": "#/definitions/VulnerabilityFindings",
          "x-nullable": true
        }
      }
    },
    "ImageInfo": {
      "type": "object",
      "properties": {
        "digest": {
          "type": "string",
          "x-nullable": true
        },
        "hostname": {
          "type": "string",
          "x-nullable": true
        },
        "repository": {
          "type": "string",
          "x-nullable": true
        },
        "tag": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "ImageInstanceSegmentation": {
      "type": "object",
      "properties": {
        "primaryMetric": {
          "type": "string",
          "default": "MeanAveragePrecision",
          "enum": [
            "MeanAveragePrecision"
          ],
          "x-ms-enum": {
            "name": "InstanceSegmentationPrimaryMetrics",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageObjectDetectionBase"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "x-ms-discriminator-value": "ImageInstanceSegmentation"
    },
    "ImageLimitSettings": {
      "type": "object",
      "properties": {
        "maxConcurrentTrials": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "maxTrials": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "default": "P7D"
        }
      }
    },
    "ImageMetadata": {
      "type": "object",
      "properties": {
        "currentImageVersion": {
          "type": "string"
        },
        "latestImageVersion": {
          "type": "string"
        },
        "isLatestOsImageVersion": {
          "type": "boolean"
        },
        "osPatchingStatus": {
          "$ref": "#/definitions/OsPatchingStatus",
          "readOnly": true
        }
      }
    },
    "ImageModelDistributionSettings": {
      "type": "object",
      "properties": {
        "amsGradient": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(true, false)"
        },
        "augmentations": {
          "type": "string",
          "x-nullable": true,
          "example": "choice('hflip;mosaic;random_crop', 'mosaic')"
        },
        "beta1": {
          "type": "string",
          "x-nullable": true,
          "example": "uniform(0, 1)"
        },
        "beta2": {
          "type": "string",
          "x-nullable": true,
          "example": "uniform(0, 1)"
        },
        "distributed": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(true, false)"
        },
        "earlyStopping": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(true, false)"
        },
        "earlyStoppingDelay": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(1, 5)"
        },
        "earlyStoppingPatience": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(1, 5)"
        },
        "enableOnnxNormalization": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(true, false)"
        },
        "evaluationFrequency": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(1, 5)"
        },
        "gradientAccumulationStep": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(1, 5)"
        },
        "layersToFreeze": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(1, 2)"
        },
        "learningRate": {
          "type": "string",
          "x-nullable": true,
          "example": "uniform(0.0005, 0.005)"
        },
        "learningRateScheduler": {
          "type": "string",
          "x-nullable": true,
          "example": "choice('warmup_cosine', 'step')"
        },
        "modelName": {
          "type": "string",
          "x-nullable": true,
          "example": "choice('seresnext', 'resnest50')"
        },
        "momentum": {
          "type": "string",
          "x-nullable": true,
          "example": "quniform(0, 1)"
        },
        "nesterov": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(true, false)"
        },
        "numberOfEpochs": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(15, 30)"
        },
        "numberOfWorkers": {
          "type": "string",
          "x-nullable": true,
          "example": "uniform(8, 16)"
        },
        "optimizer": {
          "type": "string",
          "x-nullable": true,
          "example": "choice('sgd', 'adam', 'adamw')"
        },
        "randomSeed": {
          "type": "string",
          "x-nullable": true,
          "example": "loguniform(0, 1)"
        },
        "stepLRGamma": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(0.1, 0.2, 0.25)"
        },
        "stepLRStepSize": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(1, 2, 3)"
        },
        "trainingBatchSize": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(1, 2, 3)"
        },
        "validationBatchSize": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(1, 2, 3)"
        },
        "warmupCosineLRCycles": {
          "type": "string",
          "x-nullable": true,
          "example": "uniform(0, 1)"
        },
        "warmupCosineLRWarmupEpochs": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(1, 2, 3)"
        },
        "weightDecay": {
          "type": "string",
          "x-nullable": true,
          "example": "uniform(0, 1)"
        }
      }
    },
    "ImageModelDistributionSettingsClassification": {
      "type": "object",
      "properties": {
        "trainingCropSize": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(224, 360)"
        },
        "validationCropSize": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(224, 360)"
        },
        "validationResizeSize": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(128, 256)"
        },
        "weightedLoss": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(0, 1, 2)"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageModelDistributionSettings"
        }
      ]
    },
    "ImageModelDistributionSettingsObjectDetection": {
      "type": "object",
      "properties": {
        "boxDetectionsPerImage": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(50, 100)"
        },
        "boxScoreThreshold": {
          "type": "string",
          "x-nullable": true,
          "example": "uniform(0.1, 0.2)"
        },
        "imageSize": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(224, 640)"
        },
        "maxSize": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(640, 1333)"
        },
        "minSize": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(300, 600)"
        },
        "modelSize": {
          "type": "string",
          "x-nullable": true,
          "example": "choice('small', 'medium', 'large', 'xlarge')"
        },
        "multiScale": {
          "type": "string",
          "x-nullable": true,
          "example": "choice(true, false)"
        },
        "nmsIouThreshold": {
          "type": "string",
          "x-nullable": true,
          "example": "uniform(0.1, 0.2)"
        },
        "tileGridSize": {
          "type": "string",
          "x-nullable": true,
          "example": "choice('3x2', '2x2')"
        },
        "tileOverlapRatio": {
          "type": "string",
          "x-nullable": true,
          "example": "uniform(0.1, 0.2)"
        },
        "tilePredictionsNmsThreshold": {
          "type": "string",
          "x-nullable": true,
          "example": "uniform(0.2, 0.3)"
        },
        "validationIouThreshold": {
          "type": "string",
          "x-nullable": true,
          "example": "uniform(0.2, 0.3)"
        },
        "validationMetricType": {
          "type": "string",
          "x-nullable": true,
          "example": "choice('none', 'coco', 'voc', 'coco_voc')"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageModelDistributionSettings"
        }
      ]
    },
    "ImageModelSettings": {
      "type": "object",
      "properties": {
        "advancedSettings": {
          "type": "string",
          "x-nullable": true,
          "example": "key1:val1;key2;key3:val3;key4"
        },
        "amsGradient": {
          "type": "boolean",
          "x-nullable": true
        },
        "augmentations": {
          "type": "string",
          "x-nullable": true,
          "example": "hflip;mosaic;random_crop"
        },
        "beta1": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "beta2": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "checkpointFrequency": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "checkpointModel": {
          "$ref": "#/definitions/MLFlowModelJobInput",
          "x-nullable": true
        },
        "checkpointRunId": {
          "type": "string",
          "x-nullable": true
        },
        "distributed": {
          "type": "boolean",
          "x-nullable": true
        },
        "earlyStopping": {
          "type": "boolean",
          "x-nullable": true
        },
        "earlyStoppingDelay": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "earlyStoppingPatience": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "enableOnnxNormalization": {
          "type": "boolean",
          "x-nullable": true
        },
        "evaluationFrequency": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "gradientAccumulationStep": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "layersToFreeze": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "learningRate": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "learningRateScheduler": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "WarmupCosine",
            "Step"
          ],
          "x-ms-enum": {
            "name": "LearningRateScheduler",
            "modelAsString": true
          }
        },
        "modelName": {
          "type": "string",
          "x-nullable": true
        },
        "momentum": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "nesterov": {
          "type": "boolean",
          "x-nullable": true
        },
        "numberOfEpochs": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "numberOfWorkers": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "optimizer": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "Sgd",
            "Adam",
            "Adamw"
          ],
          "x-ms-enum": {
            "name": "StochasticOptimizer",
            "modelAsString": true
          }
        },
        "randomSeed": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "stepLRGamma": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "stepLRStepSize": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "trainingBatchSize": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "validationBatchSize": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "warmupCosineLRCycles": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "warmupCosineLRWarmupEpochs": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "weightDecay": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        }
      }
    },
    "ImageModelSettingsClassification": {
      "type": "object",
      "properties": {
        "trainingCropSize": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "validationCropSize": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "validationResizeSize": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "weightedLoss": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageModelSettings"
        }
      ]
    },
    "ImageModelSettingsObjectDetection": {
      "type": "object",
      "properties": {
        "boxDetectionsPerImage": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "boxScoreThreshold": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "imageSize": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "maxSize": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "minSize": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "modelSize": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "Small",
            "Medium",
            "Large",
            "ExtraLarge"
          ],
          "x-ms-enum": {
            "name": "ModelSize",
            "modelAsString": true
          }
        },
        "multiScale": {
          "type": "boolean",
          "x-nullable": true
        },
        "nmsIouThreshold": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "tileGridSize": {
          "type": "string",
          "x-nullable": true,
          "example": "3x2"
        },
        "tileOverlapRatio": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "tilePredictionsNmsThreshold": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "validationIouThreshold": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "validationMetricType": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "Coco",
            "Voc",
            "CocoVoc"
          ],
          "x-ms-enum": {
            "name": "ValidationMetricType",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageModelSettings"
        }
      ]
    },
    "ImageObjectDetection": {
      "type": "object",
      "properties": {
        "primaryMetric": {
          "type": "string",
          "default": "MeanAveragePrecision",
          "enum": [
            "MeanAveragePrecision"
          ],
          "x-ms-enum": {
            "name": "ObjectDetectionPrimaryMetrics",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageObjectDetectionBase"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "x-ms-discriminator-value": "ImageObjectDetection"
    },
    "ImageObjectDetectionBase": {
      "type": "object",
      "properties": {
        "modelSettings": {
          "$ref": "#/definitions/ImageModelSettingsObjectDetection",
          "x-nullable": true
        },
        "searchSpace": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ImageModelDistributionSettingsObjectDetection"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageVertical"
        }
      ]
    },
    "ImageSweepSettings": {
      "type": "object",
      "properties": {
        "earlyTermination": {
          "$ref": "#/definitions/EarlyTerminationPolicy",
          "x-nullable": true
        },
        "samplingAlgorithm": {
          "type": "string",
          "enum": [
            "Grid",
            "Random",
            "Bayesian"
          ],
          "x-ms-enum": {
            "name": "SamplingAlgorithmType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "samplingAlgorithm"
      ]
    },
    "ImageVertical": {
      "type": "object",
      "properties": {
        "limitSettings": {
          "$ref": "#/definitions/ImageLimitSettings"
        },
        "sweepSettings": {
          "$ref": "#/definitions/ImageSweepSettings",
          "x-nullable": true
        },
        "validationData": {
          "$ref": "#/definitions/MLTableJobInput",
          "x-nullable": true
        },
        "validationDataSize": {
          "type": "number",
          "format": "double",
          "x-nullable": true
        }
      },
      "required": [
        "limitSettings"
      ]
    },
    "IndexColumn": {
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string",
          "x-nullable": true
        },
        "dataType": {
          "type": "string",
          "default": "String",
          "enum": [
            "String",
            "Integer",
            "Long",
            "Float",
            "Double",
            "Binary",
            "Datetime",
            "Boolean"
          ],
          "x-ms-enum": {
            "name": "FeatureDataType",
            "modelAsString": true
          }
        }
      }
    },
    "InferenceContainerProperties": {
      "type": "object",
      "properties": {
        "livenessRoute": {
          "$ref": "#/definitions/Route"
        },
        "readinessRoute": {
          "$ref": "#/definitions/Route"
        },
        "scoringRoute": {
          "$ref": "#/definitions/Route"
        },
        "startupRoute": {
          "$ref": "#/definitions/Route",
          "x-nullable": true
        }
      }
    },
    "InferenceEndpoint": {
      "type": "object",
      "properties": {
        "authMode": {
          "type": "string",
          "enum": [
            "AAD"
          ],
          "x-ms-enum": {
            "name": "AuthMode",
            "modelAsString": true
          }
        },
        "endpointUri": {
          "type": "string",
          "format": "uri",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "groupName": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Updating",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "PoolProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "requestConfiguration": {
          "$ref": "#/definitions/RequestConfiguration",
          "x-nullable": true
        }
      },
      "required": [
        "authMode",
        "groupName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PropertiesBase"
        }
      ],
      "x-ms-client-name": "InferenceEndpointProperties"
    },
    "InferenceEndpointTrackedResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/InferenceEndpoint"
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-client-name": "InferenceEndpoint"
    },
    "InferenceEndpointTrackedResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/InferenceEndpointTrackedResource"
          }
        }
      }
    },
    "InferenceGroup": {
      "type": "object",
      "properties": {
        "environmentConfiguration": {
          "$ref": "#/definitions/GroupEnvironmentConfiguration",
          "x-nullable": true
        },
        "modelConfiguration": {
          "$ref": "#/definitions/GroupModelConfiguration",
          "x-nullable": true
        },
        "nodeSkuType": {
          "type": "string",
          "x-nullable": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Updating",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "PoolProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "scaleUnitSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PropertiesBase"
        }
      ],
      "x-ms-client-name": "InferenceGroupProperties"
    },
    "InferenceGroupTrackedResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/InferenceGroup"
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-client-name": "InferenceGroup"
    },
    "InferenceGroupTrackedResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/InferenceGroupTrackedResource"
          }
        }
      }
    },
    "InferencePool": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Updating",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "PoolProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "scaleUnitConfiguration": {
          "$ref": "#/definitions/ScaleUnitConfiguration",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PropertiesBase"
        }
      ],
      "x-ms-client-name": "InferencePoolProperties"
    },
    "InferencePoolTrackedResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/InferencePool"
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-client-name": "InferencePool"
    },
    "InferencePoolTrackedResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/InferencePoolTrackedResource"
          }
        }
      }
    },
    "InstanceResourceSchema": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "InstanceTypeSchema": {
      "type": "object",
      "properties": {
        "nodeSelector": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "resources": {
          "type": "object",
          "properties": {
            "requests": {
              "$ref": "#/definitions/InstanceResourceSchema",
              "description": "Resource requests for this instance type"
            },
            "limits": {
              "$ref": "#/definitions/InstanceResourceSchema",
              "description": "Resource limits for this instance type"
            }
          }
        }
      }
    },
    "JobBase": {
      "type": "object",
      "properties": {
        "componentId": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "computeId": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "displayName": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "experimentName": {
          "type": "string",
          "default": "Default",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "identity": {
          "$ref": "#/definitions/IdentityConfiguration",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isArchived": {
          "type": "boolean",
          "default": false,
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "jobType": {
          "type": "string",
          "enum": [
            "AutoML",
            "Command",
            "Sweep",
            "Pipeline",
            "Spark",
            "FineTuning",
            "Distillation"
          ],
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "notificationSetting": {
          "$ref": "#/definitions/NotificationSetting",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "parentJobName": {
          "type": "string",
          "x-nullable": true
        },
        "services": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/JobService",
            "x-nullable": true
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "NotStarted",
            "Starting",
            "Provisioning",
            "Preparing",
            "Queued",
            "Running",
            "Finalizing",
            "CancelRequested",
            "Completed",
            "Failed",
            "Canceled",
            "NotResponding",
            "Paused",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "discriminator": "jobType",
      "required": [
        "jobType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "x-ms-client-name": "JobBaseProperties"
    },
    "JobBaseResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobBase"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "JobBase"
    },
    "JobBaseResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/JobBaseResource"
          }
        }
      }
    },
    "JobInput": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "jobInputType": {
          "type": "string",
          "enum": [
            "literal",
            "uri_file",
            "uri_folder",
            "mltable",
            "custom_model",
            "mlflow_model",
            "triton_model"
          ],
          "x-ms-enum": {
            "name": "JobInputType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "jobInputType",
      "required": [
        "jobInputType"
      ]
    },
    "JobLimits": {
      "type": "object",
      "properties": {
        "jobLimitsType": {
          "type": "string",
          "enum": [
            "Command",
            "Sweep"
          ],
          "x-ms-enum": {
            "name": "JobLimitsType",
            "modelAsString": true
          }
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "x-nullable": true
        }
      },
      "discriminator": "jobLimitsType",
      "required": [
        "jobLimitsType"
      ]
    },
    "JobOutput": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "jobOutputType": {
          "type": "string",
          "enum": [
            "uri_file",
            "uri_folder",
            "mltable",
            "custom_model",
            "mlflow_model",
            "triton_model"
          ],
          "x-ms-enum": {
            "name": "JobOutputType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "jobOutputType",
      "required": [
        "jobOutputType"
      ]
    },
    "JobResourceConfiguration": {
      "type": "object",
      "properties": {
        "dockerArgs": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dockerArgsList": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "shmSize": {
          "type": "string",
          "default": "2g",
          "pattern": "\\d+[bBkKmMgG]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceConfiguration"
        }
      ]
    },
    "JobResources": {
      "type": "object",
      "properties": {
        "instanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "JobScheduleAction": {
      "type": "object",
      "properties": {
        "jobDefinition": {
          "$ref": "#/definitions/JobBase",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "required": [
        "actionType",
        "jobDefinition"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScheduleActionBase"
        }
      ],
      "x-ms-discriminator-value": "CreateJob"
    },
    "JobService": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "errorMessage": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "jobServiceType": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "nodes": {
          "$ref": "#/definitions/Nodes",
          "x-nullable": true
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "status": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "JupyterKernelConfig": {
      "type": "object",
      "properties": {
        "argv": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string"
        },
        "language": {
          "type": "string"
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "identityClientId": {
          "type": "string"
        },
        "keyIdentifier": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        },
        "keyVaultArmId": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        }
      },
      "required": [
        "keyIdentifier",
        "keyVaultArmId"
      ]
    },
    "Kubernetes": {
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/KubernetesSchema"
        }
      ],
      "x-ms-discriminator-value": "Kubernetes"
    },
    "KubernetesOnlineDeployment": {
      "type": "object",
      "properties": {
        "containerResourceRequirements": {
          "$ref": "#/definitions/ContainerResourceRequirements",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OnlineDeployment"
        }
      ],
      "x-ms-discriminator-value": "Kubernetes"
    },
    "KubernetesProperties": {
      "type": "object",
      "properties": {
        "relayConnectionString": {
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "serviceBusConnectionString": {
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "extensionPrincipalId": {
          "type": "string",
          "x-nullable": true
        },
        "extensionInstanceReleaseTrain": {
          "type": "string"
        },
        "vcName": {
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "default": "default"
        },
        "defaultInstanceType": {
          "type": "string"
        },
        "instanceTypes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/InstanceTypeSchema"
          }
        }
      }
    },
    "KubernetesSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/KubernetesProperties"
        }
      }
    },
    "LabelGeneration": {
      "type": "object",
      "properties": {
        "trainingData": {
          "$ref": "#/definitions/JobInput",
          "x-nullable": true
        },
        "validationData": {
          "$ref": "#/definitions/JobInput",
          "x-nullable": true
        }
      },
      "required": [
        "dataGenerationType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataGenerationVertical"
        }
      ],
      "x-ms-discriminator-value": "LabelGeneration"
    },
    "LakeHouseArtifact": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OneLakeArtifact"
        }
      ],
      "x-ms-discriminator-value": "LakeHouse"
    },
    "ListAmlUserFeatureResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/AmlUserFeature"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "ListNotebookKeysResult": {
      "type": "object",
      "properties": {
        "primaryAccessKey": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        },
        "secondaryAccessKey": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        }
      }
    },
    "ListStorageAccountKeysResult": {
      "type": "object",
      "properties": {
        "userStorageKey": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        }
      }
    },
    "ListUsagesResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "ListWorkspaceKeysResult": {
      "type": "object",
      "properties": {
        "appInsightsInstrumentationKey": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        },
        "containerRegistryCredentials": {
          "$ref": "#/definitions/RegistryListCredentialsResult"
        },
        "notebookAccessKeys": {
          "$ref": "#/definitions/ListNotebookKeysResult"
        },
        "userStorageArmId": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "userStorageKey": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        }
      }
    },
    "ListWorkspaceQuotas": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ResourceQuota"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "LiteralJobInput": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        }
      },
      "required": [
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "literal"
    },
    "MLFlowModelJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "mlflow_model"
    },
    "MLFlowModelJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "mlflow_model"
    },
    "MLTableData": {
      "type": "object",
      "properties": {
        "referencedUris": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataVersionBase"
        }
      ],
      "x-ms-discriminator-value": "mltable"
    },
    "MLTableJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "mltable"
    },
    "MLTableJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "mltable"
    },
    "ManagedComputeIdentity": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/MonitorComputeIdentityBase"
        }
      ],
      "x-ms-discriminator-value": "ManagedIdentity"
    },
    "ManagedIdentity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "objectId": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "resourceId": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "x-ms-discriminator-value": "Managed"
    },
    "ManagedIdentityAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionManagedIdentity"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "ManagedIdentity"
    },
    "ManagedIdentityCredential": {
      "type": "object",
      "properties": {
        "managedIdentityType": {
          "type": "string",
          "x-nullable": true
        },
        "userManagedIdentityClientId": {
          "type": "string",
          "x-nullable": true
        },
        "userManagedIdentityPrincipalId": {
          "type": "string",
          "x-nullable": true
        },
        "userManagedIdentityResourceId": {
          "type": "string",
          "x-nullable": true
        },
        "userManagedIdentityTenantId": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataReferenceCredential"
        }
      ],
      "x-ms-discriminator-value": "ManagedIdentity"
    },
    "ManagedNetworkListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ManagedNetworkSettingsPropertiesBasicResource"
          }
        }
      }
    },
    "ManagedNetworkProvisionOptions": {
      "type": "object",
      "properties": {
        "includeSpark": {
          "type": "boolean"
        }
      }
    },
    "ManagedNetworkProvisionStatus": {
      "type": "object",
      "properties": {
        "sparkReady": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "Inactive",
            "Active"
          ],
          "x-ms-enum": {
            "name": "ManagedNetworkStatus",
            "modelAsString": true
          }
        }
      }
    },
    "ManagedNetworkSettings": {
      "type": "object",
      "properties": {
        "enableNetworkMonitor": {
          "type": "boolean",
          "default": false
        },
        "isolationMode": {
          "type": "string",
          "enum": [
            "Disabled",
            "AllowInternetOutbound",
            "AllowOnlyApprovedOutbound"
          ],
          "x-ms-enum": {
            "name": "IsolationMode",
            "modelAsString": true
          }
        },
        "networkId": {
          "type": "string",
          "readOnly": true
        },
        "outboundRules": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/OutboundRule",
            "description": "Outbound Rule for the managed network of a machine learning workspace."
          }
        },
        "status": {
          "$ref": "#/definitions/ManagedNetworkProvisionStatus"
        },
        "firewallSku": {
          "type": "string",
          "enum": [
            "Standard",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "FirewallSku",
            "modelAsString": true
          }
        },
        "managedNetworkKind": {
          "type": "string",
          "enum": [
            "V1",
            "V2"
          ],
          "x-ms-enum": {
            "name": "ManagedNetworkKind",
            "modelAsString": true
          }
        },
        "firewallPublicIpAddress": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true
        }
      }
    },
    "ManagedNetworkSettingsBasicResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedNetworkSettings"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ManagedNetworkSettingsEx": {
      "type": "object",
      "properties": {
        "changeableIsolationModes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Disabled",
              "AllowInternetOutbound",
              "AllowOnlyApprovedOutbound"
            ],
            "x-ms-enum": {
              "name": "IsolationMode",
              "modelAsString": true
            }
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ManagedNetworkSettings"
        }
      ]
    },
    "ManagedNetworkSettingsProperties": {
      "type": "object",
      "properties": {
        "managedNetwork": {
          "$ref": "#/definitions/ManagedNetworkSettingsEx"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Deferred",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "ManagedNetworkProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "ManagedNetworkSettingsPropertiesBasicResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedNetworkSettingsProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ManagedOnlineDeployment": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OnlineDeployment"
        }
      ],
      "x-ms-discriminator-value": "Managed"
    },
    "ManagedOnlineEndpointDeploymentResourceProperties": {
      "type": "object",
      "properties": {
        "endpointComputeType": {
          "type": "string",
          "enum": [
            "Managed",
            "Kubernetes",
            "AzureMLCompute"
          ],
          "x-ms-enum": {
            "name": "EndpointComputeType",
            "modelAsString": true
          }
        },
        "model": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EndpointDeploymentResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "managedOnlineEndpoint"
    },
    "ManagedOnlineEndpointResourceProperties": {
      "type": "object",
      "properties": {
        "authMode": {
          "type": "string",
          "enum": [
            "AMLToken",
            "Key",
            "AADToken"
          ],
          "x-ms-enum": {
            "name": "EndpointAuthMode",
            "modelAsString": true
          }
        },
        "compute": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "mirrorTraffic": {
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "scoringUri": {
          "type": "string",
          "format": "uri"
        },
        "traffic": {
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EndpointResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "managedOnlineEndpoint"
    },
    "ManagedResourceGroupAssignedIdentities": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "format": "uuid",
          "x-nullable": false,
          "readOnly": true
        }
      }
    },
    "ManagedResourceGroupSettings": {
      "type": "object",
      "properties": {
        "assignedIdentities": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/ManagedResourceGroupAssignedIdentities"
          }
        }
      }
    },
    "MarketplacePlan": {
      "type": "object",
      "properties": {
        "offerId": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "planId": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "publisherId": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "MarketplaceSubscription": {
      "type": "object",
      "properties": {
        "marketplacePlan": {
          "$ref": "#/definitions/MarketplacePlan",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "marketplaceSubscriptionStatus": {
          "type": "string",
          "enum": [
            "Subscribed",
            "Suspended",
            "Unsubscribed"
          ],
          "x-ms-enum": {
            "name": "MarketplaceSubscriptionStatus",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "modelId": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Updating",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "MarketplaceSubscriptionProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "required": [
        "modelId"
      ],
      "x-ms-client-name": "MarketplaceSubscriptionProperties"
    },
    "MarketplaceSubscriptionResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MarketplaceSubscription"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "MarketplaceSubscription"
    },
    "MarketplaceSubscriptionResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/MarketplaceSubscriptionResource"
          }
        }
      }
    },
    "MaterializationComputeResource": {
      "type": "object",
      "properties": {
        "instanceType": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "MaterializationSettings": {
      "type": "object",
      "properties": {
        "notification": {
          "$ref": "#/definitions/NotificationSetting",
          "x-nullable": true
        },
        "resource": {
          "$ref": "#/definitions/MaterializationComputeResource",
          "x-nullable": true
        },
        "schedule": {
          "$ref": "#/definitions/RecurrenceTrigger",
          "x-nullable": true
        },
        "sparkConfiguration": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "storeType": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "Online",
            "Offline",
            "OnlineAndOffline"
          ],
          "x-ms-enum": {
            "name": "MaterializationStoreType",
            "modelAsString": true
          }
        }
      }
    },
    "MedianStoppingPolicy": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicy"
        }
      ],
      "x-ms-discriminator-value": "MedianStopping"
    },
    "ModelContainer": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "AssetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetContainer"
        }
      ],
      "x-ms-client-name": "ModelContainerProperties"
    },
    "ModelContainerResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ModelContainer"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "ModelContainer"
    },
    "ModelContainerResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ModelContainerResource"
          }
        }
      }
    },
    "ModelSettings": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "ModelVersion": {
      "type": "object",
      "properties": {
        "flavors": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/FlavorData",
            "x-nullable": true
          }
        },
        "jobName": {
          "type": "string",
          "x-nullable": true
        },
        "modelType": {
          "type": "string",
          "x-nullable": true
        },
        "modelUri": {
          "type": "string",
          "x-nullable": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "AssetProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "stage": {
          "type": "string",
          "x-nullable": true
        },
        "datasets": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/DatasetReference"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetBase"
        }
      ],
      "x-ms-client-name": "ModelVersionProperties"
    },
    "ModelVersionResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ModelVersion"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "ModelVersion"
    },
    "ModelVersionResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ModelVersionResource"
          }
        }
      }
    },
    "MonitorComputeConfigurationBase": {
      "type": "object",
      "properties": {
        "computeType": {
          "type": "string",
          "enum": [
            "ServerlessSpark"
          ],
          "x-ms-enum": {
            "name": "MonitorComputeType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "computeType",
      "required": [
        "computeType"
      ]
    },
    "MonitorComputeIdentityBase": {
      "type": "object",
      "properties": {
        "computeIdentityType": {
          "type": "string",
          "enum": [
            "AmlToken",
            "ManagedIdentity"
          ],
          "x-ms-enum": {
            "name": "MonitorComputeIdentityType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "computeIdentityType",
      "required": [
        "computeIdentityType"
      ]
    },
    "MonitorDefinition": {
      "type": "object",
      "properties": {
        "alertNotificationSettings": {
          "$ref": "#/definitions/MonitorNotificationSettings",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "computeConfiguration": {
          "$ref": "#/definitions/MonitorComputeConfigurationBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "monitoringTarget": {
          "$ref": "#/definitions/MonitoringTarget",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "signals": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MonitoringSignalBase",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "computeConfiguration",
        "signals"
      ]
    },
    "MonitorEmailNotificationSettings": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "MonitorNotificationSettings": {
      "type": "object",
      "properties": {
        "emailNotificationSettings": {
          "$ref": "#/definitions/MonitorEmailNotificationSettings",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "MonitorServerlessSparkCompute": {
      "type": "object",
      "properties": {
        "computeIdentity": {
          "$ref": "#/definitions/MonitorComputeIdentityBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "instanceType": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "runtimeVersion": {
          "type": "string",
          "minLength": 1,
          "pattern": "^[0-9]+\\.[0-9]+$",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "computeIdentity",
        "instanceType",
        "runtimeVersion"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MonitorComputeConfigurationBase"
        }
      ],
      "x-ms-discriminator-value": "ServerlessSpark"
    },
    "MonitoringFeatureFilterBase": {
      "type": "object",
      "properties": {
        "filterType": {
          "type": "string",
          "enum": [
            "AllFeatures",
            "TopNByAttribution",
            "FeatureSubset"
          ],
          "x-ms-enum": {
            "name": "MonitoringFeatureFilterType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "filterType",
      "required": [
        "filterType"
      ]
    },
    "MonitoringInputDataBase": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataContext": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "inputDataType": {
          "type": "string",
          "enum": [
            "Static",
            "Rolling",
            "Fixed"
          ],
          "x-ms-enum": {
            "name": "MonitoringInputDataType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "jobInputType": {
          "type": "string",
          "enum": [
            "literal",
            "uri_file",
            "uri_folder",
            "mltable",
            "custom_model",
            "mlflow_model",
            "triton_model"
          ],
          "x-ms-enum": {
            "name": "JobInputType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "uri": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "inputDataType",
      "required": [
        "inputDataType",
        "jobInputType",
        "uri"
      ]
    },
    "MonitoringSignalBase": {
      "type": "object",
      "properties": {
        "notificationTypes": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string",
            "enum": [
              "AmlNotification"
            ],
            "x-ms-enum": {
              "name": "MonitoringNotificationType",
              "modelAsString": true
            }
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "signalType": {
          "type": "string",
          "enum": [
            "DataDrift",
            "PredictionDrift",
            "DataQuality",
            "FeatureAttributionDrift",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "MonitoringSignalType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "signalType",
      "required": [
        "signalType"
      ]
    },
    "MonitoringTarget": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "modelId": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "taskType": {
          "type": "string",
          "enum": [
            "Classification",
            "Regression"
          ],
          "x-ms-enum": {
            "name": "ModelTaskType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "taskType"
      ]
    },
    "MonitoringThreshold": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "Mpi": {
      "type": "object",
      "properties": {
        "processCountPerInstance": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "x-ms-discriminator-value": "Mpi"
    },
    "NCrossValidations": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "Auto",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "NCrossValidationsMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mode",
      "required": [
        "mode"
      ]
    },
    "NetworkAcls": {
      "type": "object",
      "properties": {
        "defaultAction": {
          "type": "string",
          "enum": [
            "Deny",
            "Allow"
          ],
          "x-ms-enum": {
            "name": "DefaultActionType",
            "modelAsString": true
          }
        },
        "ipRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPRule"
          }
        }
      }
    },
    "NlpVertical": {
      "type": "object",
      "properties": {
        "featurizationSettings": {
          "$ref": "#/definitions/NlpVerticalFeaturizationSettings",
          "x-nullable": true
        },
        "limitSettings": {
          "$ref": "#/definitions/NlpVerticalLimitSettings",
          "x-nullable": true
        },
        "validationData": {
          "$ref": "#/definitions/MLTableJobInput",
          "x-nullable": true
        }
      }
    },
    "NlpVerticalFeaturizationSettings": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FeaturizationSettings"
        }
      ]
    },
    "NlpVerticalLimitSettings": {
      "type": "object",
      "properties": {
        "maxConcurrentTrials": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "maxTrials": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "default": "P7D"
        }
      }
    },
    "NodeStateCounts": {
      "type": "object",
      "properties": {
        "idleNodeCount": {
          "type": "integer",
          "format": "int32",
          "title": "Idle node count.",
          "readOnly": true
        },
        "runningNodeCount": {
          "type": "integer",
          "format": "int32",
          "title": "Running node count.",
          "readOnly": true
        },
        "preparingNodeCount": {
          "type": "integer",
          "format": "int32",
          "title": "Preparing node count.",
          "readOnly": true
        },
        "unusableNodeCount": {
          "type": "integer",
          "format": "int32",
          "title": "Unusable node count.",
          "readOnly": true
        },
        "leavingNodeCount": {
          "type": "integer",
          "format": "int32",
          "title": "Leaving node count.",
          "readOnly": true
        },
        "preemptedNodeCount": {
          "type": "integer",
          "format": "int32",
          "title": "Preempted node count.",
          "readOnly": true
        }
      }
    },
    "Nodes": {
      "type": "object",
      "properties": {
        "nodesValueType": {
          "type": "string",
          "enum": [
            "All"
          ],
          "x-ms-enum": {
            "name": "NodesValueType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "nodesValueType",
      "required": [
        "nodesValueType"
      ]
    },
    "NoneAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "None"
    },
    "NoneDatastoreCredentials": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "x-ms-discriminator-value": "None"
    },
    "NotebookAccessTokenResult": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "hostName": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "notebookResourceId": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "publicDns": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "refreshToken": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        },
        "scope": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "tokenType": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "NotebookPreparationError": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "statusCode": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NotebookResourceInfo": {
      "type": "object",
      "properties": {
        "fqdn": {
          "type": "string"
        },
        "isPrivateLinkEnabled": {
          "type": "boolean"
        },
        "notebookPreparationError": {
          "$ref": "#/definitions/NotebookPreparationError"
        },
        "resourceId": {
          "type": "string"
        }
      }
    },
    "NotificationSetting": {
      "type": "object",
      "properties": {
        "emailOn": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string",
            "enum": [
              "JobCompleted",
              "JobFailed",
              "JobCancelled"
            ],
            "x-ms-enum": {
              "name": "EmailNotificationEnableType",
              "modelAsString": true
            }
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "emails": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "webhooks": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/Webhook",
            "description": "Webhook base",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      }
    },
    "NumericalDataDriftMetricThreshold": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "enum": [
            "JensenShannonDistance",
            "PopulationStabilityIndex",
            "NormalizedWassersteinDistance",
            "TwoSampleKolmogorovSmirnovTest"
          ],
          "x-ms-enum": {
            "name": "NumericalDataDriftMetric",
            "modelAsString": true
          }
        }
      },
      "required": [
        "metric"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataDriftMetricThresholdBase"
        }
      ],
      "x-ms-discriminator-value": "Numerical"
    },
    "NumericalDataQualityMetricThreshold": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "enum": [
            "NullValueRate",
            "DataTypeErrorRate",
            "OutOfBoundsRate"
          ],
          "x-ms-enum": {
            "name": "NumericalDataQualityMetric",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "metric"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataQualityMetricThresholdBase"
        }
      ],
      "x-ms-discriminator-value": "Numerical"
    },
    "NumericalPredictionDriftMetricThreshold": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string",
          "enum": [
            "JensenShannonDistance",
            "PopulationStabilityIndex",
            "NormalizedWassersteinDistance",
            "TwoSampleKolmogorovSmirnovTest"
          ],
          "x-ms-enum": {
            "name": "NumericalPredictionDriftMetric",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "metric"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PredictionDriftMetricThresholdBase"
        }
      ],
      "x-ms-discriminator-value": "Numerical"
    },
    "OAuth2AuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionOAuth2"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "OAuth2"
    },
    "Objective": {
      "type": "object",
      "properties": {
        "goal": {
          "type": "string",
          "enum": [
            "Minimize",
            "Maximize"
          ],
          "x-ms-enum": {
            "name": "Goal",
            "modelAsString": true
          }
        },
        "primaryMetric": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        }
      },
      "required": [
        "goal",
        "primaryMetric"
      ]
    },
    "OneLakeArtifact": {
      "type": "object",
      "properties": {
        "artifactName": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "artifactType": {
          "type": "string",
          "enum": [
            "LakeHouse"
          ],
          "x-ms-enum": {
            "name": "OneLakeArtifactType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "artifactType",
      "required": [
        "artifactName",
        "artifactType"
      ]
    },
    "OneLakeDatastore": {
      "type": "object",
      "properties": {
        "artifact": {
          "$ref": "#/definitions/OneLakeArtifact",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "endpoint": {
          "type": "string",
          "x-nullable": true,
          "example": "data.microsoft.com",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "oneLakeWorkspaceName": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serviceDataAccessAuthIdentity": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "WorkspaceSystemAssignedIdentity",
            "WorkspaceUserAssignedIdentity"
          ],
          "x-ms-enum": {
            "name": "ServiceDataAccessAuthIdentity",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "artifact",
        "oneLakeWorkspaceName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Datastore"
        }
      ],
      "x-ms-discriminator-value": "OneLake"
    },
    "OnlineDeployment": {
      "type": "object",
      "properties": {
        "appInsightsEnabled": {
          "type": "boolean",
          "default": false
        },
        "dataCollector": {
          "$ref": "#/definitions/DataCollector",
          "x-nullable": true
        },
        "egressPublicNetworkAccess": {
          "type": "string",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EgressPublicNetworkAccessType",
            "modelAsString": true
          }
        },
        "endpointComputeType": {
          "type": "string",
          "enum": [
            "Managed",
            "Kubernetes",
            "AzureMLCompute"
          ],
          "x-ms-enum": {
            "name": "EndpointComputeType",
            "modelAsString": true
          }
        },
        "instanceType": {
          "type": "string",
          "default": "Standard_F4s_v2",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "livenessProbe": {
          "$ref": "#/definitions/ProbeSettings",
          "x-nullable": true
        },
        "model": {
          "type": "string",
          "x-nullable": true
        },
        "modelMountPath": {
          "type": "string",
          "x-nullable": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Deleting",
            "Scaling",
            "Updating",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "DeploymentProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "readinessProbe": {
          "$ref": "#/definitions/ProbeSettings",
          "x-nullable": true
        },
        "requestSettings": {
          "$ref": "#/definitions/OnlineRequestSettings",
          "x-nullable": true
        },
        "scaleSettings": {
          "$ref": "#/definitions/OnlineScaleSettings",
          "x-nullable": true
        },
        "startupProbe": {
          "$ref": "#/definitions/ProbeSettings",
          "x-nullable": true
        }
      },
      "discriminator": "endpointComputeType",
      "required": [
        "endpointComputeType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EndpointDeploymentPropertiesBase"
        }
      ],
      "x-ms-client-name": "OnlineDeploymentProperties"
    },
    "OnlineDeploymentTrackedResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OnlineDeployment"
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-client-name": "OnlineDeployment"
    },
    "OnlineDeploymentTrackedResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/OnlineDeploymentTrackedResource"
          }
        }
      }
    },
    "OnlineEndpoint": {
      "type": "object",
      "properties": {
        "compute": {
          "type": "string",
          "x-nullable": true
        },
        "mirrorTraffic": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Updating",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "EndpointProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "publicNetworkAccess": {
          "type": "string",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccessType",
            "modelAsString": true
          }
        },
        "traffic": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EndpointPropertiesBase"
        }
      ],
      "x-ms-client-name": "OnlineEndpointProperties"
    },
    "OnlineEndpointTrackedResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OnlineEndpoint"
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-client-name": "OnlineEndpoint"
    },
    "OnlineEndpointTrackedResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/OnlineEndpointTrackedResource"
          }
        }
      }
    },
    "OnlineRequestSettings": {
      "type": "object",
      "properties": {
        "maxConcurrentRequestsPerInstance": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "maxQueueWait": {
          "type": "string",
          "format": "duration",
          "default": "PT0.5S"
        },
        "requestTimeout": {
          "type": "string",
          "format": "duration",
          "default": "PT5S"
        }
      }
    },
    "OnlineScaleSettings": {
      "type": "object",
      "properties": {
        "scaleType": {
          "type": "string",
          "enum": [
            "Default",
            "TargetUtilization"
          ],
          "x-ms-enum": {
            "name": "ScaleType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "scaleType",
      "required": [
        "scaleType"
      ]
    },
    "OpenAIEndpointDeploymentResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CognitiveServiceEndpointDeploymentResourceProperties"
        },
        {
          "$ref": "#/definitions/EndpointDeploymentResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Azure.OpenAI"
    },
    "OpenAIEndpointResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Azure.OpenAI"
    },
    "OsPatchingStatus": {
      "type": "object",
      "properties": {
        "patchStatus": {
          "type": "string",
          "enum": [
            "CompletedWithWarnings",
            "Failed",
            "InProgress",
            "Succeeded",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "PatchStatus",
            "modelAsString": true
          }
        },
        "latestPatchTime": {
          "type": "string"
        },
        "rebootPending": {
          "type": "boolean"
        },
        "scheduledRebootTime": {
          "type": "string"
        },
        "osPatchingErrors": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          },
          "x-ms-identifiers": [
            "/error/code"
          ]
        }
      }
    },
    "OutboundRule": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "enum": [
            "Required",
            "Recommended",
            "UserDefined",
            "Dependency"
          ],
          "x-ms-enum": {
            "name": "RuleCategory",
            "modelAsString": true
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "Inactive",
            "Active",
            "Provisioning",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "RuleStatus",
            "modelAsString": true
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "FQDN",
            "PrivateEndpoint",
            "ServiceTag"
          ],
          "x-ms-enum": {
            "name": "RuleType",
            "modelAsString": true
          }
        },
        "errorInformation": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "parentRuleNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OutboundRuleBasicResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OutboundRule"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OutboundRuleListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/OutboundRuleBasicResource"
          }
        }
      }
    },
    "OutputPathAssetReference": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "string",
          "x-nullable": true
        },
        "path": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetReferenceBase"
        }
      ],
      "x-ms-discriminator-value": "OutputPath"
    },
    "PATAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionPersonalAccessToken"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "PAT"
    },
    "PTUDeploymentUsage": {
      "type": "object",
      "properties": {
        "collectionQuotaUsage": {
          "type": "integer",
          "format": "int64"
        },
        "deploymentName": {
          "type": "string",
          "x-nullable": true
        },
        "resourceGroup": {
          "type": "string",
          "x-nullable": true
        },
        "usage": {
          "type": "integer",
          "format": "int64"
        },
        "workspaceName": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "PackageDetails": {
      "type": "object",
      "properties": {
        "installPath": {
          "type": "string",
          "x-nullable": true
        },
        "installedVersion": {
          "type": "string",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "x-nullable": true
        },
        "patchedVersion": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "PaginatedComputeResourcesList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ComputeResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "PartialBatchDeployment": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "PartialBatchDeploymentPartialMinimalTrackedResourceWithProperties": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PartialBatchDeployment"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      }
    },
    "PartialManagedServiceIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentityType"
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PartialUserAssignedIdentity"
          }
        }
      }
    },
    "PartialMinimalTrackedResource": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      }
    },
    "PartialMinimalTrackedResourceWithIdentity": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/PartialManagedServiceIdentity"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PartialMinimalTrackedResource"
        }
      ]
    },
    "PartialMinimalTrackedResourceWithSku": {
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/PartialSku"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PartialMinimalTrackedResource"
        }
      ]
    },
    "PartialMinimalTrackedResourceWithSkuAndIdentity": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/PartialManagedServiceIdentity"
        },
        "sku": {
          "$ref": "#/definitions/PartialSku"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PartialMinimalTrackedResource"
        }
      ]
    },
    "PartialRegistry": {
      "type": "object"
    },
    "PartialRegistryPartialTrackedResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/RegistryPartialManagedServiceIdentity"
        },
        "sku": {
          "$ref": "#/definitions/PartialSku"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      }
    },
    "PartialSku": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "family": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "tier": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/SkuTier"
        }
      }
    },
    "PartialUserAssignedIdentity": {
      "type": "object"
    },
    "Password": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        },
        "value": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-secret": true
        }
      }
    },
    "PendingUploadCredentialDto": {
      "type": "object",
      "properties": {
        "credentialType": {
          "type": "string",
          "enum": [
            "SAS"
          ],
          "x-ms-enum": {
            "name": "PendingUploadCredentialType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "credentialType",
      "required": [
        "credentialType"
      ]
    },
    "PendingUploadRequestDto": {
      "type": "object",
      "properties": {
        "pendingUploadId": {
          "type": "string",
          "x-nullable": true
        },
        "pendingUploadType": {
          "type": "string",
          "default": "TemporaryBlobReference",
          "enum": [
            "None",
            "TemporaryBlobReference"
          ],
          "x-ms-enum": {
            "name": "PendingUploadType",
            "modelAsString": true
          }
        }
      }
    },
    "PendingUploadResponseDto": {
      "type": "object",
      "properties": {
        "blobReferenceForConsumption": {
          "$ref": "#/definitions/BlobReferenceForConsumptionDto",
          "x-nullable": true
        },
        "pendingUploadId": {
          "type": "string",
          "x-nullable": true
        },
        "pendingUploadType": {
          "type": "string",
          "default": "TemporaryBlobReference",
          "enum": [
            "None",
            "TemporaryBlobReference"
          ],
          "x-ms-enum": {
            "name": "PendingUploadType",
            "modelAsString": true
          }
        }
      }
    },
    "PersonalComputeInstanceSettings": {
      "type": "object",
      "properties": {
        "assignedUser": {
          "$ref": "#/definitions/AssignedUser",
          "title": "Assigned User."
        }
      }
    },
    "PipelineJob": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/JobInput",
            "description": "Command job definition.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "jobs": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "object",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "outputs": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/JobOutput",
            "description": "Job output definition container information on where to find job output/logs.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "settings": {
          "type": "object",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "sourceJobId": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "x-ms-discriminator-value": "Pipeline"
    },
    "PredictionDriftMetricThresholdBase": {
      "type": "object",
      "properties": {
        "dataType": {
          "type": "string",
          "enum": [
            "Numerical",
            "Categorical"
          ],
          "x-ms-enum": {
            "name": "MonitoringFeatureDataType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "threshold": {
          "$ref": "#/definitions/MonitoringThreshold",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "dataType",
      "required": [
        "dataType"
      ]
    },
    "PredictionDriftMonitoringSignal": {
      "type": "object",
      "properties": {
        "featureDataTypeOverride": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/MonitoringFeatureDataType"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "metricThresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PredictionDriftMetricThresholdBase"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "productionData": {
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "referenceData": {
          "$ref": "#/definitions/MonitoringInputDataBase",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "metricThresholds",
        "productionData",
        "referenceData"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringSignalBase"
        }
      ],
      "x-ms-discriminator-value": "PredictionDrift"
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "location": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/WorkspacePrivateEndpointResource"
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Creating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "PrivateEndpointConnectionProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "PrivateEndpointDestination": {
      "type": "object",
      "properties": {
        "serviceResourceId": {
          "type": "string",
          "format": "arm-id"
        },
        "sparkEnabled": {
          "type": "boolean"
        },
        "sparkStatus": {
          "type": "string",
          "enum": [
            "Inactive",
            "Active",
            "Provisioning",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "RuleStatus",
            "modelAsString": true
          }
        },
        "subresourceTarget": {
          "type": "string"
        }
      }
    },
    "PrivateEndpointOutboundRule": {
      "type": "object",
      "properties": {
        "destination": {
          "$ref": "#/definitions/PrivateEndpointDestination"
        },
        "fqdns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OutboundRule"
        }
      ],
      "x-ms-discriminator-value": "PrivateEndpoint"
    },
    "PrivateEndpointResource": {
      "type": "object",
      "properties": {
        "subnetArmId": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/privatelinks.json#/definitions/PrivateEndpoint"
        }
      ]
    },
    "PrivateLinkResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "location": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "requiredMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "actionsRequired": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Approved",
            "Pending",
            "Rejected",
            "Disconnected",
            "Timeout"
          ],
          "x-ms-enum": {
            "name": "EndpointServiceConnectionStatus",
            "modelAsString": true
          }
        }
      }
    },
    "ProbeSettings": {
      "type": "object",
      "properties": {
        "failureThreshold": {
          "type": "integer",
          "format": "int32",
          "default": 30
        },
        "initialDelay": {
          "type": "string",
          "format": "duration",
          "x-nullable": true
        },
        "period": {
          "type": "string",
          "format": "duration",
          "default": "PT10S"
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "default": "PT2S"
        }
      }
    },
    "PromptSettings": {
      "type": "object",
      "properties": {
        "enableChainOfDensity": {
          "type": "boolean"
        },
        "enableChainOfThought": {
          "type": "boolean"
        },
        "maxLenSummary": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PropertiesBase": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "properties": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/StringStringKeyValuePair"
          }
        }
      }
    },
    "PyTorch": {
      "type": "object",
      "properties": {
        "processCountPerInstance": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "x-ms-discriminator-value": "PyTorch"
    },
    "QueueSettings": {
      "type": "object",
      "properties": {
        "jobTier": {
          "type": "string",
          "default": "Null",
          "enum": [
            "Null",
            "Spot",
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "JobTier",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "QuotaBaseProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "Limit."
        },
        "unit": {
          "type": "string",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "QuotaUnit",
            "modelAsString": true
          }
        }
      }
    },
    "QuotaUpdateParameters": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotaBaseProperties"
          }
        },
        "location": {
          "type": "string"
        }
      }
    },
    "RaiBlocklistConfig": {
      "type": "object",
      "properties": {
        "blocking": {
          "type": "boolean"
        },
        "blocklistName": {
          "type": "string"
        }
      }
    },
    "RaiBlocklistItemBulkRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/RaiBlocklistItemProperties"
        }
      }
    },
    "RaiBlocklistItemProperties": {
      "type": "object",
      "properties": {
        "isRegex": {
          "type": "boolean"
        },
        "pattern": {
          "type": "string"
        }
      }
    },
    "RaiBlocklistItemPropertiesBasicResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RaiBlocklistItemProperties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RaiBlocklistItemPropertiesBasicResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/RaiBlocklistItemPropertiesBasicResource"
          }
        }
      }
    },
    "RaiBlocklistItemsBulkAddRequest": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RaiBlocklistItemBulkRequest"
      },
      "x-ms-identifiers": [
        "name"
      ]
    },
    "RaiBlocklistItemsBulkDeleteRequest": {
      "type": "object",
      "items": {
        "type": "string"
      }
    },
    "RaiBlocklistProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "RaiBlocklistPropertiesBasicResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RaiBlocklistProperties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RaiBlocklistPropertiesBasicResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/RaiBlocklistPropertiesBasicResource"
          }
        }
      }
    },
    "RaiPolicyContentFilter": {
      "type": "object",
      "properties": {
        "allowedContentLevel": {
          "type": "string",
          "enum": [
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "AllowedContentLevel",
            "modelAsString": true
          }
        },
        "blocking": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "source": {
          "type": "string",
          "enum": [
            "Prompt",
            "Completion"
          ],
          "x-ms-enum": {
            "name": "RaiPolicyContentSource",
            "modelAsString": true
          }
        }
      }
    },
    "RaiPolicyProperties": {
      "type": "object",
      "properties": {
        "basePolicyName": {
          "type": "string"
        },
        "completionBlocklists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RaiBlocklistConfig"
          }
        },
        "contentFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RaiPolicyContentFilter"
          }
        },
        "mode": {
          "type": "string",
          "enum": [
            "Default",
            "Deferred",
            "Blocking"
          ],
          "x-ms-enum": {
            "name": "RaiPolicyMode",
            "modelAsString": true
          }
        },
        "promptBlocklists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RaiBlocklistConfig"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "UserManaged",
            "SystemManaged"
          ],
          "x-ms-enum": {
            "name": "RaiPolicyType",
            "modelAsString": true
          }
        }
      }
    },
    "RaiPolicyPropertiesBasicResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RaiPolicyProperties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RaiPolicyPropertiesBasicResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/RaiPolicyPropertiesBasicResource"
          }
        }
      }
    },
    "RandomSamplingAlgorithm": {
      "type": "object",
      "properties": {
        "rule": {
          "type": "string",
          "default": "Random",
          "enum": [
            "Random",
            "Sobol"
          ],
          "x-ms-enum": {
            "name": "RandomSamplingAlgorithmRule",
            "modelAsString": true
          }
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SamplingAlgorithm"
        }
      ],
      "x-ms-discriminator-value": "Random"
    },
    "Recurrence": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "enum": [
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "x-ms-enum": {
            "name": "ComputeRecurrenceFrequency",
            "modelAsString": true
          }
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "x-nullable": true
        },
        "timeZone": {
          "type": "string",
          "default": "UTC"
        },
        "schedule": {
          "$ref": "#/definitions/ComputeRecurrenceSchedule"
        }
      }
    },
    "RecurrenceSchedule": {
      "type": "object",
      "properties": {
        "hours": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "minutes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "monthDays": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "weekDays": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string",
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "x-ms-enum": {
              "name": "WeekDay",
              "modelAsString": true
            }
          }
        }
      },
      "required": [
        "hours",
        "minutes"
      ]
    },
    "RecurrenceTrigger": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "enum": [
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "x-ms-enum": {
            "name": "RecurrenceFrequency",
            "modelAsString": true
          }
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        },
        "schedule": {
          "$ref": "#/definitions/RecurrenceSchedule",
          "x-nullable": true
        }
      },
      "required": [
        "frequency",
        "interval"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TriggerBase"
        }
      ],
      "x-ms-discriminator-value": "Recurrence"
    },
    "RegenerateEndpointKeysRequest": {
      "type": "object",
      "properties": {
        "keyType": {
          "type": "string",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": true
          },
          "example": "Primary"
        },
        "keyValue": {
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "keyType"
      ]
    },
    "RegenerateServiceAccountKeyContent": {
      "type": "object",
      "properties": {
        "keyName": {
          "type": "string",
          "enum": [
            "Key1",
            "Key2"
          ],
          "x-ms-enum": {
            "name": "ServiceAccountKeyName",
            "modelAsString": true
          }
        }
      }
    },
    "Registry": {
      "type": "object",
      "properties": {
        "discoveryUrl": {
          "type": "string",
          "x-nullable": true
        },
        "intellectualPropertyPublisher": {
          "type": "string",
          "x-nullable": true
        },
        "managedResourceGroup": {
          "$ref": "#/definitions/ArmResourceId",
          "x-nullable": true
        },
        "managedResourceGroupSettings": {
          "$ref": "#/definitions/ManagedResourceGroupSettings",
          "x-nullable": true
        },
        "mlFlowRegistryUri": {
          "type": "string",
          "x-nullable": true
        },
        "registryPrivateEndpointConnections": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/RegistryPrivateEndpointConnection"
          }
        },
        "publicNetworkAccess": {
          "type": "string",
          "x-nullable": true
        },
        "regionDetails": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/RegistryRegionArmDetails"
          }
        }
      },
      "x-ms-client-name": "RegistryProperties"
    },
    "RegistryListCredentialsResult": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "passwords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Password"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "username": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "RegistryPartialManagedServiceIdentity": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      ]
    },
    "RegistryPrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "location": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "$ref": "#/definitions/RegistryPrivateEndpointConnectionProperties",
          "x-nullable": true,
          "x-ms-client-flatten": true
        }
      }
    },
    "RegistryPrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "groupIds": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpointResource",
          "x-nullable": true
        },
        "registryPrivateLinkServiceConnectionState": {
          "$ref": "#/definitions/RegistryPrivateLinkServiceConnectionState",
          "x-nullable": true
        },
        "provisioningState": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "RegistryPrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "actionsRequired": {
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "type": "string",
          "enum": [
            "Approved",
            "Pending",
            "Rejected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "EndpointServiceConnectionStatus",
            "modelAsString": true
          }
        }
      }
    },
    "RegistryRegionArmDetails": {
      "type": "object",
      "properties": {
        "acrDetails": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/AcrDetails"
          }
        },
        "location": {
          "type": "string",
          "x-nullable": true
        },
        "storageAccountDetails": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/StorageAccountDetails"
          }
        }
      }
    },
    "RegistryTrackedResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/Registry",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-client-name": "Registry"
    },
    "RegistryTrackedResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/RegistryTrackedResource"
          }
        }
      }
    },
    "Regression": {
      "type": "object",
      "properties": {
        "primaryMetric": {
          "type": "string",
          "default": "NormalizedRootMeanSquaredError",
          "enum": [
            "SpearmanCorrelation",
            "NormalizedRootMeanSquaredError",
            "R2Score",
            "NormalizedMeanAbsoluteError"
          ],
          "x-ms-enum": {
            "name": "RegressionPrimaryMetrics",
            "modelAsString": true
          }
        },
        "trainingSettings": {
          "$ref": "#/definitions/RegressionTrainingSettings",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TableVertical"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "x-ms-discriminator-value": "Regression"
    },
    "RegressionTrainingSettings": {
      "type": "object",
      "properties": {
        "allowedTrainingAlgorithms": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string",
            "enum": [
              "ElasticNet",
              "GradientBoosting",
              "DecisionTree",
              "KNN",
              "LassoLars",
              "SGD",
              "RandomForest",
              "ExtremeRandomTrees",
              "LightGBM",
              "XGBoostRegressor"
            ],
            "x-ms-enum": {
              "name": "RegressionModels",
              "modelAsString": true
            }
          }
        },
        "blockedTrainingAlgorithms": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string",
            "enum": [
              "ElasticNet",
              "GradientBoosting",
              "DecisionTree",
              "KNN",
              "LassoLars",
              "SGD",
              "RandomForest",
              "ExtremeRandomTrees",
              "LightGBM",
              "XGBoostRegressor"
            ],
            "x-ms-enum": {
              "name": "RegressionModels",
              "modelAsString": true
            }
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrainingSettings"
        }
      ]
    },
    "RequestConfiguration": {
      "type": "object",
      "properties": {
        "maxConcurrentRequestsPerInstance": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "requestTimeout": {
          "type": "string",
          "format": "duration",
          "default": "PT5S"
        }
      }
    },
    "RequestLogging": {
      "type": "object",
      "properties": {
        "captureHeaders": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResizeSchema": {
      "type": "object",
      "properties": {
        "targetVMSize": {
          "type": "string"
        }
      }
    },
    "ResourceBase": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "properties": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "tags": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      }
    },
    "ResourceConfiguration": {
      "type": "object",
      "properties": {
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "default": 1,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "instanceType": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "object",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "ResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "ResourceName": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "readOnly": true
        },
        "localizedValue": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceQuota": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "amlWorkspaceLocation": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "$ref": "#/definitions/ResourceName",
          "readOnly": true
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "Limit.",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "QuotaUnit",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "RollingInputData": {
      "type": "object",
      "properties": {
        "preprocessingComponentId": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "windowOffset": {
          "type": "string",
          "format": "duration",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "windowSize": {
          "type": "string",
          "format": "duration",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "windowOffset",
        "windowSize"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringInputDataBase"
        }
      ],
      "x-ms-discriminator-value": "Rolling"
    },
    "Route": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "path",
        "port"
      ]
    },
    "SASAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionSharedAccessSignature"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "SAS"
    },
    "SASCredential": {
      "type": "object",
      "properties": {
        "sasUri": {
          "type": "string",
          "format": "uri",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataReferenceCredential"
        }
      ],
      "x-ms-discriminator-value": "SAS"
    },
    "SASCredentialDto": {
      "type": "object",
      "properties": {
        "sasUri": {
          "type": "string",
          "format": "uri",
          "x-nullable": true,
          "x-ms-secret": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PendingUploadCredentialDto"
        }
      ],
      "x-ms-discriminator-value": "SAS"
    },
    "SamplingAlgorithm": {
      "type": "object",
      "properties": {
        "samplingAlgorithmType": {
          "type": "string",
          "enum": [
            "Grid",
            "Random",
            "Bayesian"
          ],
          "x-ms-enum": {
            "name": "SamplingAlgorithmType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "samplingAlgorithmType",
      "required": [
        "samplingAlgorithmType"
      ]
    },
    "SasDatastoreCredentials": {
      "type": "object",
      "properties": {
        "secrets": {
          "$ref": "#/definitions/SasDatastoreSecrets",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      },
      "required": [
        "secrets"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "x-ms-discriminator-value": "Sas"
    },
    "SasDatastoreSecrets": {
      "type": "object",
      "properties": {
        "sasToken": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        }
      ],
      "x-ms-discriminator-value": "Sas"
    },
    "ScaleSettings": {
      "type": "object",
      "properties": {
        "maxNodeCount": {
          "type": "integer",
          "format": "int32"
        },
        "minNodeCount": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "nodeIdleTimeBeforeScaleDown": {
          "type": "string",
          "format": "duration"
        }
      },
      "required": [
        "maxNodeCount"
      ]
    },
    "ScaleSettingsInformation": {
      "type": "object",
      "properties": {
        "scaleSettings": {
          "$ref": "#/definitions/ScaleSettings",
          "title": "Scale settings."
        }
      }
    },
    "ScaleUnitConfiguration": {
      "type": "object",
      "properties": {
        "disablePublicEgress": {
          "type": "boolean",
          "default": false
        },
        "registries": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Schedule": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/ScheduleActionBase",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "displayName": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isEnabled": {
          "type": "boolean",
          "default": true,
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ScheduleProvisioningStatus",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "trigger": {
          "$ref": "#/definitions/TriggerBase",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "required": [
        "action",
        "trigger"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBase"
        }
      ],
      "x-ms-client-name": "ScheduleProperties"
    },
    "ScheduleActionBase": {
      "type": "object",
      "properties": {
        "actionType": {
          "type": "string",
          "enum": [
            "CreateJob",
            "InvokeBatchEndpoint",
            "CreateMonitor"
          ],
          "x-ms-enum": {
            "name": "ScheduleActionType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "discriminator": "actionType",
      "required": [
        "actionType"
      ]
    },
    "ScheduleBase": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-nullable": true
        },
        "provisioningStatus": {
          "type": "string",
          "enum": [
            "Completed",
            "Provisioning",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ScheduleProvisioningState",
            "modelAsString": true
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ScheduleStatus",
            "modelAsString": true
          }
        }
      }
    },
    "ScheduleResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Schedule"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "x-ms-client-name": "Schedule"
    },
    "ScheduleResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ScheduleResource"
          }
        }
      }
    },
    "ScriptReference": {
      "type": "object",
      "properties": {
        "scriptSource": {
          "type": "string"
        },
        "scriptData": {
          "type": "string"
        },
        "scriptArguments": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        }
      }
    },
    "ScriptsToExecute": {
      "type": "object",
      "properties": {
        "startupScript": {
          "$ref": "#/definitions/ScriptReference"
        },
        "creationScript": {
          "$ref": "#/definitions/ScriptReference"
        }
      }
    },
    "Seasonality": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "Auto",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "SeasonalityMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mode",
      "required": [
        "mode"
      ]
    },
    "SecretExpiry": {
      "type": "object",
      "properties": {
        "expirableSecret": {
          "type": "boolean",
          "default": false
        },
        "expireAfterHours": {
          "type": "integer",
          "format": "int32",
          "default": 1
        }
      }
    },
    "ServerlessComputeSettings": {
      "type": "object",
      "properties": {
        "serverlessComputeCustomSubnet": {
          "type": "string",
          "format": "arm-id"
        },
        "serverlessComputeNoPublicIP": {
          "type": "boolean"
        }
      }
    },
    "ServerlessEndpoint": {
      "type": "object",
      "properties": {
        "authMode": {
          "type": "string",
          "enum": [
            "Key",
            "AAD",
            "KeyAndAAD"
          ],
          "x-ms-enum": {
            "name": "ServerlessInferenceEndpointAuthMode",
            "modelAsString": true
          }
        },
        "contentSafety": {
          "$ref": "#/definitions/ContentSafety",
          "x-nullable": true
        },
        "endpointState": {
          "type": "string",
          "enum": [
            "Unknown",
            "Creating",
            "Deleting",
            "Suspending",
            "Reinstating",
            "Online",
            "Suspended",
            "CreationFailed",
            "DeletionFailed"
          ],
          "x-ms-enum": {
            "name": "ServerlessEndpointState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "inferenceEndpoint": {
          "$ref": "#/definitions/ServerlessInferenceEndpoint",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "marketplaceSubscriptionId": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "modelSettings": {
          "$ref": "#/definitions/ModelSettings",
          "x-nullable": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Updating",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "EndpointProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "required": [
        "authMode"
      ],
      "x-ms-client-name": "ServerlessEndpointProperties"
    },
    "ServerlessEndpointCapacityReservation": {
      "type": "object",
      "properties": {
        "capacityReservationGroupId": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        },
        "endpointReservedCapacity": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "capacityReservationGroupId"
      ]
    },
    "ServerlessEndpointContentSafety": {
      "type": "object",
      "properties": {
        "contentSafetyStatus": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ContentSafetyStatus",
            "modelAsString": true
          }
        }
      },
      "required": [
        "contentSafetyStatus"
      ]
    },
    "ServerlessEndpointInferenceEndpoint": {
      "type": "object",
      "properties": {
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "uri": {
          "type": "string",
          "format": "uri",
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "required": [
        "uri"
      ]
    },
    "ServerlessEndpointModelSettings": {
      "type": "object",
      "properties": {
        "modelId": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        }
      },
      "required": [
        "modelId"
      ]
    },
    "ServerlessEndpointResourceProperties": {
      "type": "object",
      "properties": {
        "authMode": {
          "type": "string",
          "enum": [
            "Key",
            "AAD",
            "KeyAndAAD"
          ],
          "x-ms-enum": {
            "name": "ServerlessInferenceEndpointAuthMode",
            "modelAsString": true
          }
        },
        "capacityReservation": {
          "$ref": "#/definitions/ServerlessEndpointCapacityReservation"
        },
        "contentSafety": {
          "$ref": "#/definitions/ServerlessEndpointContentSafety"
        },
        "endpointState": {
          "type": "string",
          "enum": [
            "Unknown",
            "Creating",
            "Deleting",
            "Suspending",
            "Reinstating",
            "Online",
            "Suspended",
            "CreationFailed",
            "DeletionFailed"
          ],
          "x-ms-enum": {
            "name": "ServerlessEndpointState",
            "modelAsString": true
          }
        },
        "inferenceEndpoint": {
          "$ref": "#/definitions/ServerlessEndpointInferenceEndpoint"
        },
        "marketplaceSubscriptionId": {
          "type": "string"
        },
        "metadata": {},
        "modelSettings": {
          "$ref": "#/definitions/ServerlessEndpointModelSettings"
        },
        "offer": {
          "$ref": "#/definitions/ServerlessOffer"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EndpointResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "serverlessEndpoint"
    },
    "ServerlessEndpointTrackedResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/ServerlessEndpoint"
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-client-name": "ServerlessEndpoint"
    },
    "ServerlessEndpointTrackedResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ServerlessEndpointTrackedResource"
          }
        }
      }
    },
    "ServerlessInferenceEndpoint": {
      "type": "object",
      "properties": {
        "headers": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "uri": {
          "type": "string",
          "format": "uri",
          "x-ms-mutability": [
            "read"
          ]
        }
      },
      "required": [
        "uri"
      ]
    },
    "ServerlessOffer": {
      "type": "object",
      "properties": {
        "offerName": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        },
        "publisher": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        }
      },
      "required": [
        "offerName",
        "publisher"
      ]
    },
    "ServiceManagedResourcesSettings": {
      "type": "object",
      "properties": {
        "cosmosDb": {
          "$ref": "#/definitions/CosmosDbSettings"
        }
      }
    },
    "ServicePrincipalAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionServicePrincipal"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "ServicePrincipal"
    },
    "ServicePrincipalDatastoreCredentials": {
      "type": "object",
      "properties": {
        "authorityUrl": {
          "type": "string",
          "x-nullable": true
        },
        "clientId": {
          "type": "string",
          "format": "uuid"
        },
        "resourceUrl": {
          "type": "string",
          "x-nullable": true
        },
        "secrets": {
          "$ref": "#/definitions/ServicePrincipalDatastoreSecrets",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid"
        }
      },
      "required": [
        "clientId",
        "secrets",
        "tenantId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreCredentials"
        }
      ],
      "x-ms-discriminator-value": "ServicePrincipal"
    },
    "ServicePrincipalDatastoreSecrets": {
      "type": "object",
      "properties": {
        "clientSecret": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DatastoreSecrets"
        }
      ],
      "x-ms-discriminator-value": "ServicePrincipal"
    },
    "ServiceTagDestination": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "RuleAction",
            "modelAsString": true
          }
        },
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "portRanges": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "serviceTag": {
          "type": "string"
        }
      }
    },
    "ServiceTagOutboundRule": {
      "type": "object",
      "properties": {
        "destination": {
          "$ref": "#/definitions/ServiceTagDestination"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OutboundRule"
        }
      ],
      "x-ms-discriminator-value": "ServiceTag"
    },
    "SetupScripts": {
      "type": "object",
      "properties": {
        "scripts": {
          "$ref": "#/definitions/ScriptsToExecute"
        }
      }
    },
    "SharedPrivateLinkResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SharedPrivateLinkResourceProperty",
          "x-ms-client-flatten": true
        }
      }
    },
    "SharedPrivateLinkResourceProperty": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "privateLinkResourceId": {
          "type": "string"
        },
        "requestMessage": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Approved",
            "Pending",
            "Rejected",
            "Disconnected",
            "Timeout"
          ],
          "x-ms-enum": {
            "name": "EndpointServiceConnectionStatus",
            "modelAsString": true
          }
        }
      }
    },
    "SkuCapacity": {
      "type": "object",
      "properties": {
        "default": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "minimum": {
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "scaleType": {
          "type": "string",
          "default": "Automatic",
          "enum": [
            "Automatic",
            "Manual",
            "None"
          ],
          "x-ms-enum": {
            "name": "SkuScaleType",
            "modelAsString": true
          }
        }
      }
    },
    "SkuResource": {
      "type": "object",
      "properties": {
        "capacity": {
          "$ref": "#/definitions/SkuCapacity",
          "x-nullable": true
        },
        "resourceType": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "sku": {
          "$ref": "#/definitions/SkuSetting",
          "x-nullable": true
        }
      }
    },
    "SkuResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/SkuResource"
          }
        }
      }
    },
    "SkuSetting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        },
        "tier": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/SkuTier",
          "default": "Basic"
        }
      },
      "required": [
        "name"
      ]
    },
    "SparkJob": {
      "type": "object",
      "properties": {
        "archives": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "args": {
          "type": "string",
          "x-nullable": true,
          "example": " --input abfss://blob-container@testgen2.dfs.core.windows.net/mltable",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "codeId": {
          "type": "string",
          "format": "arm-id",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "conf": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "example": [
            {
              "spark.driver.memory": "2g"
            }
          ],
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "entry": {
          "$ref": "#/definitions/SparkJobEntry",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentId": {
          "type": "string",
          "format": "arm-id",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentVariables": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "files": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "inputs": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/JobInput",
            "description": "Command job definition.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "jars": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "outputs": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/JobOutput",
            "description": "Job output definition container information on where to find job output/logs.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "pyFiles": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "queueSettings": {
          "$ref": "#/definitions/QueueSettings",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "resources": {
          "$ref": "#/definitions/SparkResourceConfiguration",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "codeId",
        "entry"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "x-ms-discriminator-value": "Spark"
    },
    "SparkJobEntry": {
      "type": "object",
      "properties": {
        "sparkJobEntryType": {
          "type": "string",
          "enum": [
            "SparkJobPythonEntry",
            "SparkJobScalaEntry"
          ],
          "x-ms-enum": {
            "name": "SparkJobEntryType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "sparkJobEntryType",
      "required": [
        "sparkJobEntryType"
      ]
    },
    "SparkJobPythonEntry": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "example": "train.py",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "file"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SparkJobEntry"
        }
      ],
      "x-ms-discriminator-value": "SparkJobPythonEntry"
    },
    "SparkJobScalaEntry": {
      "type": "object",
      "properties": {
        "className": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "example": "microsoft.aml.sample.myapp",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "className"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SparkJobEntry"
        }
      ],
      "x-ms-discriminator-value": "SparkJobScalaEntry"
    },
    "SparkResourceConfiguration": {
      "type": "object",
      "properties": {
        "instanceType": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "runtimeVersion": {
          "type": "string",
          "default": "3.1",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "SpeechEndpointDeploymentResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CognitiveServiceEndpointDeploymentResourceProperties"
        },
        {
          "$ref": "#/definitions/EndpointDeploymentResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Azure.Speech"
    },
    "SpeechEndpointResourceProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Azure.Speech"
    },
    "SslConfiguration": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled",
            "Auto"
          ],
          "x-ms-enum": {
            "name": "SslConfigStatus",
            "modelAsString": true
          }
        },
        "cert": {
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "key": {
          "type": "string",
          "x-nullable": true,
          "x-ms-secret": true
        },
        "cname": {
          "type": "string",
          "x-nullable": true
        },
        "leafDomainLabel": {
          "type": "string",
          "x-nullable": true
        },
        "overwriteExistingDomain": {
          "type": "boolean"
        }
      }
    },
    "StackEnsembleSettings": {
      "type": "object",
      "properties": {
        "stackMetaLearnerKWargs": {
          "type": "object",
          "x-nullable": true
        },
        "stackMetaLearnerTrainPercentage": {
          "type": "number",
          "format": "double",
          "default": 0.2
        },
        "stackMetaLearnerType": {
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "LogisticRegression",
            "LogisticRegressionCV",
            "LightGBMClassifier",
            "ElasticNet",
            "ElasticNetCV",
            "LightGBMRegressor",
            "LinearRegression"
          ],
          "x-ms-enum": {
            "name": "StackMetaLearnerType",
            "modelAsString": true
          }
        }
      }
    },
    "StaticInputData": {
      "type": "object",
      "properties": {
        "preprocessingComponentId": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "windowEnd": {
          "type": "string",
          "format": "date-time",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "windowStart": {
          "type": "string",
          "format": "date-time",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "windowEnd",
        "windowStart"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringInputDataBase"
        }
      ],
      "x-ms-discriminator-value": "Static"
    },
    "StorageAccountDetails": {
      "type": "object",
      "properties": {
        "systemCreatedStorageAccount": {
          "$ref": "#/definitions/SystemCreatedStorageAccount",
          "x-nullable": true
        }
      }
    },
    "StringArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StringStringKeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "SweepJob": {
      "type": "object",
      "properties": {
        "earlyTermination": {
          "$ref": "#/definitions/EarlyTerminationPolicy",
          "x-nullable": true
        },
        "inputs": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/JobInput",
            "description": "Command job definition.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "limits": {
          "$ref": "#/definitions/SweepJobLimits",
          "default": "{}",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "objective": {
          "$ref": "#/definitions/Objective"
        },
        "outputs": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "$ref": "#/definitions/JobOutput",
            "description": "Job output definition container information on where to find job output/logs.",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "queueSettings": {
          "$ref": "#/definitions/QueueSettings",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "samplingAlgorithm": {
          "$ref": "#/definitions/SamplingAlgorithm"
        },
        "searchSpace": {
          "type": "object"
        },
        "trial": {
          "$ref": "#/definitions/TrialComponent"
        }
      },
      "required": [
        "objective",
        "samplingAlgorithm",
        "searchSpace",
        "trial"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/JobBase"
        }
      ],
      "x-ms-discriminator-value": "Sweep"
    },
    "SweepJobLimits": {
      "type": "object",
      "properties": {
        "maxConcurrentTrials": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "maxTotalTrials": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true
        },
        "trialTimeout": {
          "type": "string",
          "format": "duration",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/JobLimits"
        }
      ],
      "x-ms-discriminator-value": "Sweep"
    },
    "SynapseSpark": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "autoScaleProperties": {
              "$ref": "#/definitions/AutoScaleProperties",
              "description": "Auto scale properties."
            },
            "autoPauseProperties": {
              "$ref": "#/definitions/AutoPauseProperties",
              "description": "Auto pause properties."
            },
            "sparkVersion": {
              "type": "string",
              "description": "Spark version."
            },
            "nodeCount": {
              "type": "integer",
              "format": "int32",
              "description": "The number of compute nodes currently assigned to the compute."
            },
            "nodeSize": {
              "type": "string",
              "description": "Node size."
            },
            "nodeSizeFamily": {
              "type": "string",
              "description": "Node size family."
            },
            "subscriptionId": {
              "type": "string",
              "description": "Azure subscription identifier."
            },
            "resourceGroup": {
              "type": "string",
              "description": "Name of the resource group in which workspace is located."
            },
            "workspaceName": {
              "type": "string",
              "description": "Name of Azure Machine Learning workspace."
            },
            "poolName": {
              "type": "string",
              "description": "Pool name."
            }
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        }
      ],
      "x-ms-discriminator-value": "SynapseSpark"
    },
    "SystemCreatedAcrAccount": {
      "type": "object",
      "properties": {
        "acrAccountName": {
          "type": "string",
          "x-nullable": true
        },
        "acrAccountSku": {
          "type": "string",
          "x-nullable": true
        },
        "armResourceId": {
          "$ref": "#/definitions/ArmResourceId",
          "x-nullable": true
        }
      }
    },
    "SystemCreatedStorageAccount": {
      "type": "object",
      "properties": {
        "allowBlobPublicAccess": {
          "type": "boolean"
        },
        "armResourceId": {
          "$ref": "#/definitions/ArmResourceId",
          "x-nullable": true
        },
        "storageAccountHnsEnabled": {
          "type": "boolean"
        },
        "storageAccountName": {
          "type": "string",
          "x-nullable": true
        },
        "storageAccountType": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "SystemService": {
      "type": "object",
      "properties": {
        "systemServiceType": {
          "type": "string",
          "readOnly": true
        },
        "publicIpAddress": {
          "type": "string",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TableVertical": {
      "type": "object",
      "properties": {
        "cvSplitColumnNames": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string"
          }
        },
        "featurizationSettings": {
          "$ref": "#/definitions/TableVerticalFeaturizationSettings",
          "x-nullable": true
        },
        "limitSettings": {
          "$ref": "#/definitions/TableVerticalLimitSettings",
          "x-nullable": true
        },
        "nCrossValidations": {
          "$ref": "#/definitions/NCrossValidations",
          "x-nullable": true
        },
        "testData": {
          "$ref": "#/definitions/MLTableJobInput",
          "x-nullable": true
        },
        "testDataSize": {
          "type": "number",
          "format": "double",
          "x-nullable": true
        },
        "validationData": {
          "$ref": "#/definitions/MLTableJobInput",
          "x-nullable": true
        },
        "validationDataSize": {
          "type": "number",
          "format": "double",
          "x-nullable": true
        },
        "weightColumnName": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "TableVerticalFeaturizationSettings": {
      "type": "object",
      "properties": {
        "blockedTransformers": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "type": "string",
            "enum": [
              "TextTargetEncoder",
              "OneHotEncoder",
              "CatTargetEncoder",
              "TfIdf",
              "WoETargetEncoder",
              "LabelEncoder",
              "WordEmbedding",
              "NaiveBayes",
              "CountVectorizer",
              "HashOneHotEncoder"
            ],
            "x-ms-enum": {
              "name": "BlockedTransformers",
              "modelAsString": true
            }
          }
        },
        "columnNameAndTypes": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        },
        "enableDnnFeaturization": {
          "type": "boolean",
          "default": false
        },
        "mode": {
          "type": "string",
          "default": "Auto",
          "enum": [
            "Auto",
            "Custom",
            "Off"
          ],
          "x-ms-enum": {
            "name": "FeaturizationMode",
            "modelAsString": true
          }
        },
        "transformerParams": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "items": {
              "$ref": "#/definitions/ColumnTransformer"
            },
            "type": "array",
            "x-ms-identifiers": [],
            "x-nullable": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FeaturizationSettings"
        }
      ]
    },
    "TableVerticalLimitSettings": {
      "type": "object",
      "properties": {
        "enableEarlyTermination": {
          "type": "boolean",
          "default": true
        },
        "exitScore": {
          "type": "number",
          "format": "double",
          "x-nullable": true
        },
        "maxConcurrentTrials": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "maxCoresPerTrial": {
          "type": "integer",
          "format": "int32",
          "default": -1
        },
        "maxTrials": {
          "type": "integer",
          "format": "int32",
          "default": 1000
        },
        "timeout": {
          "type": "string",
          "format": "duration",
          "default": "PT6H"
        },
        "trialTimeout": {
          "type": "string",
          "format": "duration",
          "default": "PT30M"
        }
      }
    },
    "TargetLags": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "Auto",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "TargetLagsMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mode",
      "required": [
        "mode"
      ]
    },
    "TargetRollingWindowSize": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "Auto",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "TargetRollingWindowSizeMode",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "mode",
      "required": [
        "mode"
      ]
    },
    "TargetUtilizationScaleSettings": {
      "type": "object",
      "properties": {
        "maxInstances": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "minInstances": {
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "pollingInterval": {
          "type": "string",
          "format": "duration",
          "default": "PT1S"
        },
        "targetUtilizationPercentage": {
          "type": "integer",
          "format": "int32",
          "default": 70
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OnlineScaleSettings"
        }
      ],
      "x-ms-discriminator-value": "TargetUtilization"
    },
    "TeacherModelEndpoint": {
      "type": "object",
      "properties": {
        "endpointName": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "TeacherModelEndpointRequestSettings": {
      "type": "object",
      "properties": {
        "minEndpointSuccessRatio": {
          "type": "number",
          "format": "double"
        },
        "requestBatchSize": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TeacherModelSettings": {
      "type": "object",
      "properties": {
        "teacherModelEndpointRequestSettings": {
          "$ref": "#/definitions/TeacherModelEndpointRequestSettings",
          "x-nullable": true
        },
        "teacherModelInferenceParameters": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          }
        }
      }
    },
    "TensorFlow": {
      "type": "object",
      "properties": {
        "parameterServerCount": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "workerCount": {
          "type": "integer",
          "format": "int32",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DistributionConfiguration"
        }
      ],
      "x-ms-discriminator-value": "TensorFlow"
    },
    "TextClassification": {
      "type": "object",
      "properties": {
        "primaryMetric": {
          "type": "string",
          "default": "Accuracy",
          "enum": [
            "AUCWeighted",
            "Accuracy",
            "NormMacroRecall",
            "AveragePrecisionScoreWeighted",
            "PrecisionScoreWeighted"
          ],
          "x-ms-enum": {
            "name": "ClassificationPrimaryMetrics",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/NlpVertical"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "x-ms-discriminator-value": "TextClassification"
    },
    "TextClassificationMultilabel": {
      "type": "object",
      "properties": {
        "primaryMetric": {
          "type": "string",
          "enum": [
            "AUCWeighted",
            "Accuracy",
            "NormMacroRecall",
            "AveragePrecisionScoreWeighted",
            "PrecisionScoreWeighted",
            "IOU"
          ],
          "x-ms-enum": {
            "name": "ClassificationMultilabelPrimaryMetrics",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/NlpVertical"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "x-ms-discriminator-value": "TextClassificationMultilabel"
    },
    "TextNer": {
      "type": "object",
      "properties": {
        "primaryMetric": {
          "type": "string",
          "enum": [
            "AUCWeighted",
            "Accuracy",
            "NormMacroRecall",
            "AveragePrecisionScoreWeighted",
            "PrecisionScoreWeighted"
          ],
          "x-ms-enum": {
            "name": "ClassificationPrimaryMetrics",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/NlpVertical"
        },
        {
          "$ref": "#/definitions/AutoMLVertical"
        }
      ],
      "x-ms-discriminator-value": "TextNER"
    },
    "TmpfsOptions": {
      "type": "object",
      "properties": {
        "size": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TopNFeaturesByAttribution": {
      "type": "object",
      "properties": {
        "top": {
          "type": "integer",
          "format": "int32",
          "default": 10,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "filterType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MonitoringFeatureFilterBase"
        }
      ],
      "x-ms-discriminator-value": "TopNByAttribution"
    },
    "TrainingSettings": {
      "type": "object",
      "properties": {
        "enableDnnTraining": {
          "type": "boolean",
          "default": false
        },
        "enableModelExplainability": {
          "type": "boolean",
          "default": true
        },
        "enableOnnxCompatibleModels": {
          "type": "boolean",
          "default": false
        },
        "enableStackEnsemble": {
          "type": "boolean",
          "default": true
        },
        "enableVoteEnsemble": {
          "type": "boolean",
          "default": true
        },
        "ensembleModelDownloadTimeout": {
          "type": "string",
          "format": "duration",
          "default": "PT5M"
        },
        "stackEnsembleSettings": {
          "$ref": "#/definitions/StackEnsembleSettings",
          "x-nullable": true
        }
      }
    },
    "TrialComponent": {
      "type": "object",
      "properties": {
        "codeId": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "command": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "distribution": {
          "$ref": "#/definitions/DistributionConfiguration",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "environmentId": {
          "type": "string",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]"
        },
        "environmentVariables": {
          "type": "object",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string",
            "x-nullable": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "resources": {
          "$ref": "#/definitions/JobResourceConfiguration",
          "default": "{}",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "command",
        "environmentId"
      ]
    },
    "TriggerBase": {
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "x-nullable": true
        },
        "startTime": {
          "type": "string",
          "x-nullable": true
        },
        "timeZone": {
          "type": "string",
          "default": "UTC"
        },
        "triggerType": {
          "type": "string",
          "enum": [
            "Recurrence",
            "Cron"
          ],
          "x-ms-enum": {
            "name": "TriggerType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ]
        }
      },
      "discriminator": "triggerType",
      "required": [
        "triggerType"
      ]
    },
    "TritonModelJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "triton_model"
    },
    "TritonModelJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "triton_model"
    },
    "TruncationSelectionPolicy": {
      "type": "object",
      "properties": {
        "truncationPercentage": {
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EarlyTerminationPolicy"
        }
      ],
      "x-ms-discriminator-value": "TruncationSelection"
    },
    "UpdateWorkspaceQuotas": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "Limit."
        },
        "unit": {
          "type": "string",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "QuotaUnit",
            "modelAsString": true
          },
          "readOnly": true
        },
        "status": {
          "type": "string",
          "title": "Update Workspace Quota Status.",
          "enum": [
            "Undefined",
            "Success",
            "Failure",
            "InvalidQuotaBelowClusterMinimum",
            "InvalidQuotaExceedsSubscriptionLimit",
            "InvalidVMFamilyName",
            "OperationNotSupportedForSku",
            "OperationNotEnabledForRegion"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true
          },
          "readOnly": false
        }
      }
    },
    "UpdateWorkspaceQuotasResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/UpdateWorkspaceQuotas"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "UriFileDataVersion": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataVersionBase"
        }
      ],
      "x-ms-discriminator-value": "uri_file"
    },
    "UriFileJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "uri_file"
    },
    "UriFileJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "uri_file"
    },
    "UriFolderDataVersion": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataVersionBase"
        }
      ],
      "x-ms-discriminator-value": "uri_folder"
    },
    "UriFolderJobInput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobInput"
        },
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "x-ms-discriminator-value": "uri_folder"
    },
    "UriFolderJobOutput": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AssetJobOutput"
        },
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "x-ms-discriminator-value": "uri_folder"
    },
    "Usage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "amlWorkspaceLocation": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "UsageUnit",
            "modelAsString": true
          },
          "readOnly": true
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "name": {
          "$ref": "#/definitions/UsageName",
          "readOnly": true
        }
      }
    },
    "UsageAndQuotaDetails": {
      "type": "object",
      "properties": {
        "modelCollection": {
          "type": "string",
          "x-nullable": true
        },
        "quota": {
          "type": "integer",
          "format": "int64"
        },
        "usageDetails": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/PTUDeploymentUsage"
          }
        }
      }
    },
    "UsageAndQuotaDetailsArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/UsageAndQuotaDetails"
          }
        }
      }
    },
    "UsageName": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "readOnly": true
        },
        "localizedValue": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserAccountCredentials": {
      "type": "object",
      "properties": {
        "adminUserName": {
          "type": "string",
          "title": "User name."
        },
        "adminUserSshPublicKey": {
          "type": "string",
          "title": "SSH public key.",
          "x-ms-secret": true
        },
        "adminUserPassword": {
          "type": "string",
          "title": "Password.",
          "x-ms-secret": true
        }
      },
      "required": [
        "adminUserName"
      ]
    },
    "UserIdentity": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IdentityConfiguration"
        }
      ],
      "x-ms-discriminator-value": "UserIdentity"
    },
    "UsernamePasswordAuthTypeWorkspaceConnectionProperties": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/WorkspaceConnectionUsernamePassword"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      ],
      "x-ms-discriminator-value": "UsernamePassword"
    },
    "VirtualMachine": {
      "allOf": [
        {
          "$ref": "#/definitions/Compute"
        },
        {
          "$ref": "#/definitions/VirtualMachineSchema"
        }
      ],
      "x-ms-discriminator-value": "VirtualMachine"
    },
    "VirtualMachineImage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "VirtualMachineSchema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "virtualMachineSize": {
              "type": "string",
              "description": "Virtual Machine size"
            },
            "sshPort": {
              "type": "integer",
              "format": "int32",
              "description": "Port open for ssh connections."
            },
            "notebookServerPort": {
              "type": "integer",
              "format": "int32",
              "description": "Notebook server port open for ssh connections."
            },
            "address": {
              "type": "string",
              "description": "Public IP address of the virtual machine."
            },
            "administratorAccount": {
              "$ref": "#/definitions/VirtualMachineSshCredentials",
              "description": "Admin credentials for virtual machine"
            },
            "isNotebookInstanceCompute": {
              "type": "boolean",
              "description": "Indicates whether this compute will be used for running notebooks."
            }
          }
        }
      }
    },
    "VirtualMachineSecrets": {
      "allOf": [
        {
          "$ref": "#/definitions/ComputeSecrets"
        },
        {
          "$ref": "#/definitions/VirtualMachineSecretsSchema"
        }
      ],
      "x-ms-discriminator-value": "VirtualMachine"
    },
    "VirtualMachineSecretsSchema": {
      "type": "object",
      "properties": {
        "administratorAccount": {
          "$ref": "#/definitions/VirtualMachineSshCredentials"
        }
      }
    },
    "VirtualMachineSize": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Virtual Machine size name",
          "readOnly": true
        },
        "family": {
          "type": "string",
          "title": "Virtual Machine family name",
          "readOnly": true
        },
        "vCPUs": {
          "type": "integer",
          "format": "int32",
          "title": "Number of vPUs",
          "readOnly": true
        },
        "gpus": {
          "type": "integer",
          "format": "int32",
          "title": "Number of gPUs",
          "readOnly": true
        },
        "osVhdSizeMB": {
          "type": "integer",
          "format": "int32",
          "title": "OS VHD Disk size",
          "readOnly": true
        },
        "maxResourceVolumeMB": {
          "type": "integer",
          "format": "int32",
          "title": "Resource volume size",
          "readOnly": true
        },
        "memoryGB": {
          "type": "number",
          "format": "double",
          "title": "Memory size",
          "readOnly": true
        },
        "lowPriorityCapable": {
          "type": "boolean",
          "title": "Low priority capable",
          "readOnly": true
        },
        "premiumIO": {
          "type": "boolean",
          "title": "Premium IO supported",
          "readOnly": true
        },
        "estimatedVMPrices": {
          "$ref": "#/definitions/EstimatedVMPrices",
          "title": "Estimated VM prices"
        },
        "supportedComputeTypes": {
          "type": "array",
          "title": "Supported Compute Types",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VirtualMachineSizeListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineSize"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "VirtualMachineSshCredentials": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "publicKeyData": {
          "type": "string",
          "x-ms-secret": true
        },
        "privateKeyData": {
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "VolumeDefinition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type of Volume Definition",
          "default": "bind",
          "enum": [
            "bind",
            "volume",
            "tmpfs",
            "npipe"
          ],
          "x-ms-enum": {
            "name": "VolumeDefinitionType",
            "modelAsString": true
          }
        },
        "readOnly": {
          "type": "boolean",
          "x-nullable": true
        },
        "source": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "consistency": {
          "type": "string",
          "x-nullable": true
        },
        "bind": {
          "$ref": "#/definitions/BindOptions",
          "x-nullable": true
        },
        "volume": {
          "$ref": "#/definitions/VolumeOptions",
          "x-nullable": true
        },
        "tmpfs": {
          "$ref": "#/definitions/TmpfsOptions",
          "x-nullable": true
        }
      }
    },
    "VolumeOptions": {
      "type": "object",
      "properties": {
        "nocopy": {
          "type": "boolean",
          "x-nullable": true
        }
      }
    },
    "VulnerabilityDetails": {
      "type": "object",
      "properties": {
        "cve": {
          "type": "string",
          "x-nullable": true
        },
        "cveUrl": {
          "type": "string",
          "x-nullable": true
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "x-nullable": true,
          "readOnly": true
        },
        "packageDetails": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/PackageDetails"
          }
        },
        "patchable": {
          "type": "boolean"
        },
        "providerId": {
          "type": "string",
          "x-nullable": true
        },
        "publishDate": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "risk": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "CRITICAL",
            "HIGH",
            "MEDIUM",
            "LOW"
          ],
          "x-ms-enum": {
            "name": "VulnerabilityRisk",
            "modelAsString": true
          }
        },
        "solution": {
          "type": "string",
          "x-nullable": true
        },
        "title": {
          "type": "string",
          "x-nullable": true
        },
        "vendorId": {
          "type": "string",
          "x-nullable": true
        },
        "vendorUrl": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "VulnerabilityFindings": {
      "type": "object",
      "properties": {
        "assetId": {
          "type": "string",
          "x-nullable": true
        },
        "criticalFindingsCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/VulnerabilityDetails"
          }
        },
        "generatedTime": {
          "type": "string",
          "format": "date-time"
        },
        "highFindingsCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "lastScanDate": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "scanner": {
          "type": "string",
          "x-nullable": true
        },
        "source": {
          "type": "string",
          "x-nullable": true
        },
        "totalFindingsCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "Webhook": {
      "type": "object",
      "properties": {
        "eventType": {
          "type": "string",
          "x-nullable": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "webhookType": {
          "type": "string",
          "enum": [
            "AzureDevOps"
          ],
          "x-ms-enum": {
            "name": "WebhookType",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "webhookType",
      "required": [
        "webhookType"
      ]
    },
    "Workspace": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "kind": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkspaceConnectionAccessKey": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionAccountKey": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionApiKey": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionManagedIdentity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionOAuth2": {
      "type": "object",
      "properties": {
        "authUrl": {
          "type": "string",
          "format": "url"
        },
        "clientId": {
          "type": "string",
          "format": "uuid"
        },
        "clientSecret": {
          "type": "string",
          "x-ms-secret": true
        },
        "developerToken": {
          "type": "string",
          "x-ms-secret": true
        },
        "password": {
          "type": "string",
          "x-ms-secret": true
        },
        "refreshToken": {
          "type": "string",
          "x-ms-secret": true
        },
        "tenantId": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionPersonalAccessToken": {
      "type": "object",
      "properties": {
        "pat": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionPropertiesV2": {
      "type": "object",
      "properties": {
        "authType": {
          "type": "string",
          "enum": [
            "PAT",
            "ManagedIdentity",
            "UsernamePassword",
            "None",
            "SAS",
            "AccountKey",
            "ServicePrincipal",
            "AccessKey",
            "ApiKey",
            "CustomKeys",
            "OAuth2",
            "AAD"
          ],
          "x-ms-enum": {
            "name": "ConnectionAuthType",
            "modelAsString": true
          }
        },
        "category": {
          "type": "string",
          "enum": [
            "PythonFeed",
            "ContainerRegistry",
            "Git",
            "S3",
            "Snowflake",
            "AzureSqlDb",
            "AzureSynapseAnalytics",
            "AzureMySqlDb",
            "AzurePostgresDb",
            "ADLSGen2",
            "Redis",
            "ApiKey",
            "AzureOpenAI",
            "AIServices",
            "CognitiveSearch",
            "CognitiveService",
            "CustomKeys",
            "AzureBlob",
            "AzureOneLake",
            "CosmosDb",
            "CosmosDbMongoDbApi",
            "AzureDataExplorer",
            "AzureMariaDb",
            "AzureDatabricksDeltaLake",
            "AzureSqlMi",
            "AzureTableStorage",
            "AmazonRdsForOracle",
            "AmazonRdsForSqlServer",
            "AmazonRedshift",
            "Db2",
            "Drill",
            "GoogleBigQuery",
            "Greenplum",
            "Hbase",
            "Hive",
            "Impala",
            "Informix",
            "MariaDb",
            "MicrosoftAccess",
            "MySql",
            "Netezza",
            "Oracle",
            "Phoenix",
            "PostgreSql",
            "Presto",
            "SapOpenHub",
            "SapBw",
            "SapHana",
            "SapTable",
            "Spark",
            "SqlServer",
            "Sybase",
            "Teradata",
            "Vertica",
            "Pinecone",
            "Cassandra",
            "Couchbase",
            "MongoDbV2",
            "MongoDbAtlas",
            "AmazonS3Compatible",
            "FileServer",
            "FtpServer",
            "GoogleCloudStorage",
            "Hdfs",
            "OracleCloudStorage",
            "Sftp",
            "GenericHttp",
            "ODataRest",
            "Odbc",
            "GenericRest",
            "AmazonMws",
            "Concur",
            "Dynamics",
            "DynamicsAx",
            "DynamicsCrm",
            "GoogleAdWords",
            "Hubspot",
            "Jira",
            "Magento",
            "Marketo",
            "Office365",
            "Eloqua",
            "Responsys",
            "OracleServiceCloud",
            "PayPal",
            "QuickBooks",
            "Salesforce",
            "SalesforceServiceCloud",
            "SalesforceMarketingCloud",
            "SapCloudForCustomer",
            "SapEcc",
            "ServiceNow",
            "SharePointOnlineList",
            "Shopify",
            "Square",
            "WebTable",
            "Xero",
            "Zoho",
            "GenericContainerRegistry",
            "Elasticsearch",
            "OpenAI",
            "Serp",
            "BingLLMSearch",
            "Serverless",
            "ManagedOnlineEndpoint"
          ],
          "x-ms-enum": {
            "name": "ConnectionCategory",
            "modelAsString": true
          }
        },
        "createdByWorkspaceArmId": {
          "type": "string",
          "format": "arm-id",
          "readOnly": true
        },
        "error": {
          "type": "string"
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time"
        },
        "group": {
          "type": "string",
          "enum": [
            "Azure",
            "AzureAI",
            "Database",
            "NoSQL",
            "File",
            "GenericProtocol",
            "ServicesAndApps"
          ],
          "x-ms-enum": {
            "name": "ConnectionGroup",
            "modelAsString": true
          },
          "readOnly": true
        },
        "isSharedToAll": {
          "type": "boolean"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "peRequirement": {
          "type": "string",
          "enum": [
            "Required",
            "NotRequired",
            "NotApplicable"
          ],
          "x-ms-enum": {
            "name": "ManagedPERequirement",
            "modelAsString": true
          }
        },
        "peStatus": {
          "type": "string",
          "enum": [
            "Inactive",
            "Active",
            "NotApplicable"
          ],
          "x-ms-enum": {
            "name": "ManagedPEStatus",
            "modelAsString": true
          }
        },
        "sharedUserList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "target": {
          "type": "string"
        },
        "useWorkspaceManagedIdentity": {
          "type": "boolean"
        }
      },
      "discriminator": "authType",
      "required": [
        "authType"
      ]
    },
    "WorkspaceConnectionPropertiesV2BasicResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkspaceConnectionPropertiesV2BasicResourceArmPaginatedResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/WorkspaceConnectionPropertiesV2BasicResource"
          }
        }
      }
    },
    "WorkspaceConnectionServicePrincipal": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string",
          "x-ms-secret": true
        },
        "tenantId": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionSharedAccessSignature": {
      "type": "object",
      "properties": {
        "sas": {
          "type": "string"
        }
      }
    },
    "WorkspaceConnectionUpdateParameter": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
        }
      }
    },
    "WorkspaceConnectionUsernamePassword": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "securityToken": {
          "type": "string",
          "x-ms-secret": true
        },
        "username": {
          "type": "string"
        }
      }
    },
    "WorkspaceHubConfig": {
      "type": "object",
      "properties": {
        "additionalWorkspaceStorageAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultWorkspaceResourceGroup": {
          "type": "string"
        }
      }
    },
    "WorkspaceListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        },
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        }
      }
    },
    "WorkspacePrivateEndpointResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "subnetArmId": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "WorkspaceProperties": {
      "type": "object",
      "properties": {
        "agentsEndpointUri": {
          "type": "string",
          "format": "url",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "allowPublicAccessWhenBehindVnet": {
          "type": "boolean"
        },
        "allowRoleAssignmentOnRG": {
          "type": "boolean"
        },
        "applicationInsights": {
          "type": "string"
        },
        "associatedWorkspaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containerRegistries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containerRegistry": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "discoveryUrl": {
          "type": "string"
        },
        "enableDataIsolation": {
          "type": "boolean"
        },
        "enableServiceSideCMKEncryption": {
          "type": "boolean"
        },
        "enableSimplifiedCmk": {
          "type": "boolean"
        },
        "enableSoftwareBillOfMaterials": {
          "type": "boolean"
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperty"
        },
        "existingWorkspaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "featureStoreSettings": {
          "$ref": "#/definitions/FeatureStoreSettings"
        },
        "friendlyName": {
          "type": "string"
        },
        "hbiWorkspace": {
          "type": "boolean"
        },
        "hubResourceId": {
          "type": "string"
        },
        "imageBuildCompute": {
          "type": "string"
        },
        "ipAllowlist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keyVault": {
          "type": "string"
        },
        "keyVaults": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "managedNetwork": {
          "$ref": "#/definitions/ManagedNetworkSettings"
        },
        "mlFlowTrackingUri": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkAcls"
        },
        "notebookInfo": {
          "$ref": "#/definitions/NotebookResourceInfo",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "primaryUserAssignedIdentity": {
          "type": "string"
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ],
          "x-ms-mutability": [
            "read"
          ]
        },
        "privateLinkCount": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "provisionNetworkNow": {
          "type": "boolean"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "publicNetworkAccess": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccessType",
            "modelAsString": true
          }
        },
        "serverlessComputeSettings": {
          "$ref": "#/definitions/ServerlessComputeSettings"
        },
        "serviceManagedResourcesSettings": {
          "$ref": "#/definitions/ServiceManagedResourcesSettings"
        },
        "serviceProvisionedResourceGroup": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "sharedPrivateLinkResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedPrivateLinkResource"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "softDeleteRetentionInDays": {
          "type": "integer",
          "format": "int32"
        },
        "storageAccount": {
          "type": "string"
        },
        "storageAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "storageHnsEnabled": {
          "type": "boolean",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "systemDatastoresAuthMode": {
          "type": "string",
          "enum": [
            "AccessKey",
            "Identity",
            "UserDelegationSAS"
          ],
          "x-ms-enum": {
            "name": "SystemDatastoresAuthMode",
            "modelAsString": true
          }
        },
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "v1LegacyMode": {
          "type": "boolean"
        },
        "workspaceHubConfig": {
          "$ref": "#/definitions/WorkspaceHubConfig"
        },
        "workspaceId": {
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        }
      }
    },
    "WorkspacePropertiesUpdateParameters": {
      "type": "object",
      "properties": {
        "allowRoleAssignmentOnRG": {
          "type": "boolean"
        },
        "applicationInsights": {
          "type": "string"
        },
        "containerRegistry": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enableDataIsolation": {
          "type": "boolean"
        },
        "enableSoftwareBillOfMaterials": {
          "type": "boolean"
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionUpdateProperties"
        },
        "featureStoreSettings": {
          "$ref": "#/definitions/FeatureStoreSettings"
        },
        "friendlyName": {
          "type": "string"
        },
        "imageBuildCompute": {
          "type": "string"
        },
        "ipAllowlist": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "managedNetwork": {
          "$ref": "#/definitions/ManagedNetworkSettings"
        },
        "networkAcls": {
          "$ref": "#/definitions/NetworkAcls"
        },
        "primaryUserAssignedIdentity": {
          "type": "string"
        },
        "publicNetworkAccess": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccessType",
            "modelAsString": true
          }
        },
        "serverlessComputeSettings": {
          "$ref": "#/definitions/ServerlessComputeSettings"
        },
        "serviceManagedResourcesSettings": {
          "$ref": "#/definitions/ServiceManagedResourcesSettings"
        },
        "softDeleteRetentionInDays": {
          "type": "integer",
          "format": "int32"
        },
        "systemDatastoresAuthMode": {
          "type": "string",
          "enum": [
            "AccessKey",
            "Identity",
            "UserDelegationSAS"
          ],
          "x-ms-enum": {
            "name": "SystemDatastoresAuthMode",
            "modelAsString": true
          }
        },
        "v1LegacyMode": {
          "type": "boolean"
        }
      }
    },
    "WorkspaceUpdateParameters": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "properties": {
          "$ref": "#/definitions/WorkspacePropertiesUpdateParameters",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {}
}