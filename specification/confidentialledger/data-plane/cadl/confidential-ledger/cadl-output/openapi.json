{
  "openapi": "3.0.0",
  "info": {
    "title": "Confidential Ledger Service",
    "version": "2022-05-13"
  },
  "tags": [],
  "paths": {
    "/app/collections": {
      "get": {
        "operationId": "listCollections",
        "summary": "Retrieves a list of collection ids present in the Confidential Ledger",
        "description": "Collection ids are user-created collections of ledger entries",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionArray"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.Core.Foundations.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/enclaveQuotes": {
      "get": {
        "operationId": "getEnclaveQuotes",
        "summary": "Gets quotes for all nodes of the Confidential Ledger.",
        "description": "A quote is an SGX enclave measurement that can be used to verify the validity of a node and its enclave.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.Core.Foundations.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/governance/constitution": {
      "get": {
        "operationId": "getConstitution",
        "summary": "Gets the constitution used for governance.",
        "description": "The constitution is a script that assesses and applies proposals from consortium members.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.Core.Foundations.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/governance/members": {
      "get": {
        "operationId": "getConsortiumMembers",
        "summary": "Gets the consortium members.",
        "description": "Consortium members can manage the Confidential Ledger.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.Core.Foundations.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/transactions": {
      "post": {
        "operationId": "postLedgerEntry",
        "summary": "Writes a ledger entry.",
        "description": "A collection id may optionally be specified.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/CollectionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.Core.Foundations.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerEntry"
              }
            }
          }
        }
      }
    },
    "/app/transactions/{transactionId}": {
      "get": {
        "operationId": "getLedgerEntry",
        "summary": "Gets the ledger entry at the specified transaction id. A collection id may optionally be specified to indicate the collection from which to fetch the value.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/CollectionIdParameter"
          },
          {
            "$ref": "#/components/parameters/TransactionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.Core.Foundations.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/transactions/{transactionId}/receipt": {
      "get": {
        "operationId": "getReceipt",
        "summary": "Gets a receipt certifying ledger contents at a particular transaction id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/TransactionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.Core.Foundations.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/transactions/{transactionId}/status": {
      "get": {
        "operationId": "getTransactionStatus",
        "summary": "Gets the status of an entry identified by a transaction id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/TransactionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.Core.Foundations.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/transactions/current": {
      "get": {
        "operationId": "getCurrentLedgerEntry",
        "summary": "Gets the current value available in the ledger.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/CollectionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.Core.Foundations.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/app/users/{userId}": {
      "delete": {
        "operationId": "deleteUser",
        "summary": "Deletes a user from the Confidential Ledger.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/UserIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.Core.Foundations.ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getUser",
        "summary": "Gets a user.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/UserIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.Core.Foundations.ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "createOrUpdateUser",
        "summary": "Adds a user or updates a user's fields.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/UserIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.Core.Foundations.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Details about a Confidential Ledger user.",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerUser"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "Azure.Core.Foundations.ApiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "required": true,
        "description": "The API version to use for this operation.",
        "schema": {
          "type": "string",
          "minLength": 1
        }
      },
      "CollectionIdParameter": {
        "name": "collectionId",
        "in": "query",
        "required": false,
        "description": "The collection id.",
        "schema": {
          "type": "string"
        }
      },
      "TransactionIdParameter": {
        "name": "transactionId",
        "in": "path",
        "required": true,
        "description": "Identifies a write transaction.",
        "schema": {
          "type": "string"
        }
      },
      "UserIdParameter": {
        "name": "userId",
        "in": "path",
        "required": true,
        "description": "The user id, either an AAD object ID or certificate fingerprint.",
        "x-ms-skip-url-encoding": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "CollectionArray": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Collection"
            },
            "x-cadl-name": "Collection[]"
          }
        },
        "description": "A list of identifiers for ledger collections.",
        "required": [
          "items"
        ]
      },
      "Azure.Core.Foundations.ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Azure.Core.Foundations.Error"
              }
            ],
            "description": "The error object."
          }
        },
        "description": "A response containing error details.",
        "required": [
          "error"
        ]
      },
      "LedgerEntry": {
        "type": "object",
        "properties": {
          "contents": {
            "type": "string"
          },
          "collectionId": {
            "type": "string"
          },
          "transactionId": {
            "type": "string"
          }
        },
        "required": [
          "contents",
          "collectionId",
          "transactionId"
        ]
      },
      "LedgerUser": {
        "type": "object",
        "properties": {
          "assignedRole": {
            "$ref": "#/components/schemas/ConfidentialLedgerUserRoleName"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "assignedRole",
          "userId"
        ]
      },
      "Collection": {
        "type": "object",
        "properties": {
          "collectionId": {
            "type": "string"
          }
        },
        "description": "Identifier for collections.",
        "required": [
          "collectionId"
        ]
      },
      "Azure.Core.Foundations.Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "One of a server-defined set of error codes."
          },
          "message": {
            "type": "string",
            "description": "A human-readable representation of the error."
          },
          "target": {
            "type": "string",
            "description": "The target of the error."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Azure.Core.Foundations.Error"
            },
            "x-cadl-name": "Azure.Core.Foundations.Error[]",
            "description": "An array of details about specific errors that led to this reported error."
          },
          "innererror": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Azure.Core.Foundations.InnerError"
              }
            ],
            "description": "An object containing more specific information than the current object about the error."
          }
        },
        "description": "The error object.",
        "required": [
          "code",
          "message",
          "details"
        ]
      },
      "ConfidentialLedgerUserRoleName": {
        "type": "string",
        "description": "Represents an assignable role",
        "enum": [
          "Administrator",
          "Contributor",
          "Reader"
        ]
      },
      "Azure.Core.Foundations.InnerError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "One of a server-defined set of error codes."
          },
          "innererror": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Azure.Core.Foundations.InnerError"
              }
            ],
            "description": "Inner error."
          }
        },
        "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
        "required": [
          "code"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "{ledgerUri}",
      "description": "Confidential Ledger Service",
      "variables": {
        "ledgerUri": {
          "default": ""
        }
      }
    }
  ]
}
