/**
 * PLEASE DO NOT REMOVE - USED FOR CONVERTER METRICS
 * Generated by package: @autorest/openapi-to-typespec
 * Parameters used:
 *   isFullCompatible: false
 *   guessResourceKey: false
 * Version: 0.11.2-dev.2
 * Date: 2025-06-24T03:13:48.170Z
 */
import "@typespec/rest";
import "@typespec/http";
import "./common.tsp";

using TypeSpec.Http;
using TypeSpec.Versioning;

/**
 * The Confidential Ledger Certificate endpoint is used to retrieve the TLS certificate
 * required for connecting to a Confidential Ledger.
 */
#suppress "@azure-tools/typespec-azure-core/auth-required" "This is the authentication service endpoint"
@service(#{ title: "Confidential Ledger Certificate" })
@versioned(Versions)
@server(
  "{certificateEndpoint}",
  "The Confidential Ledger Certificate endpoint is used to retrieve the TLS certificate required for connecting to a Confidential Ledger.",
  {
    /** The certificate endpoint (or "Identity Service Endpoint" in the Azure portal), for example https://identity.confidential-ledger.core.azure.com. */
    #suppress "@azure-tools/typespec-autorest/unsupported-optional-path-param" "Default value for certificate endpoint"
    certificateEndpoint?: url = "https://identity.confidential-ledger.core.azure.com",
  }
)
namespace ConfidentialLedgerCertificate;

/**
 * The available API versions.
 */
enum Versions {
  /**
   * The 2024-12-09-preview API version.
   */
  v2024_12_09_preview: "2024-12-09-preview",
}

/**
 * Contains the information about a Confidential Ledger.
 */
model LedgerIdentityInformation {
  /**
   * Id for the ledger.
   */
  @visibility(Lifecycle.Read)
  ledgerId?: string;

  /**
   * PEM-encoded certificate used for TLS by the Confidential Ledger.
   */
  ledgerTlsCertificate: string;
}

/**
 * Gets identity information for a Confidential Ledger instance.
 */
#suppress "@azure-tools/typespec-azure-core/use-standard-operations" "Existing API contract"
@summary("Gets identity information for a Confidential Ledger instance.")
@route("/ledgerIdentity/{ledgerId}")
@get
op getLedgerIdentity is ConfidentialLedgerCommon.LedgerOperation<
  {
    /**
     * Id of the Confidential Ledger instance to get information for
     */
    @path
    ledgerId: string;
  },
  LedgerIdentityInformation
>;
