{
  "swagger": "2.0",
  "info": {
    "title": "ConfidentialLedger",
    "version": "2023-01-26-preview",
    "description": "Microsoft Azure Confidential Compute Ledger Control Plane REST API version 2020-12-01-preview.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ConfidentialLedgers"
    },
    {
      "name": "ManagedCcfs"
    }
  ],
  "paths": {
    "/providers/Azure.ResourceManager.ConfidentialLedger/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.ConfidentialLedger/ledgers": {
      "get": {
        "operationId": "ConfidentialLedgers_ListBySubscription",
        "tags": [
          "ConfidentialLedgers"
        ],
        "description": "Retrieves the properties of all Confidential Ledgers.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfidentialLedgerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.ConfidentialLedger/managedCCFs": {
      "get": {
        "operationId": "ManagedCcfs_ListBySubscription",
        "tags": [
          "ManagedCcfs"
        ],
        "description": "Retrieves the properties of all Managed CCF.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedCcfListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConfidentialLedger/checkNameAvailability": {
      "post": {
        "operationId": "CheckNameAvailability",
        "description": "To check whether a resource name is available.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "nameAvailabilityRequest",
            "in": "body",
            "description": "Name availability request payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ConfidentialLedger/ledgers": {
      "get": {
        "operationId": "ConfidentialLedgers_ListByResourceGroup",
        "tags": [
          "ConfidentialLedgers"
        ],
        "description": "Retrieves the properties of all Confidential Ledgers.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the list operation. eg. $filter=ledgerType eq 'Public'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfidentialLedgerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ConfidentialLedger/ledgers/{ledgerName}": {
      "get": {
        "operationId": "ConfidentialLedgers_Get",
        "tags": [
          "ConfidentialLedgers"
        ],
        "description": "Retrieves the properties of a Confidential Ledger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ledgerName",
            "in": "path",
            "description": "Name of the Confidential Ledger",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfidentialLedger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ConfidentialLedgers_Create",
        "tags": [
          "ConfidentialLedgers"
        ],
        "description": "Creates a  Confidential Ledger with the specified ledger parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ledgerName",
            "in": "path",
            "description": "Name of the Confidential Ledger",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfidentialLedger"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConfidentialLedger' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConfidentialLedger"
            }
          },
          "201": {
            "description": "Resource 'ConfidentialLedger' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConfidentialLedger"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ConfidentialLedgers_Update",
        "tags": [
          "ConfidentialLedgers"
        ],
        "description": "Updates properties of Confidential Ledger",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ledgerName",
            "in": "path",
            "description": "Name of the Confidential Ledger",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfidentialLedgerUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConfidentialLedger"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ConfidentialLedgers_Delete",
        "tags": [
          "ConfidentialLedgers"
        ],
        "description": "Deletes an existing Confidential Ledger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ledgerName",
            "in": "path",
            "description": "Name of the Confidential Ledger",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ConfidentialLedger/managedCCFs": {
      "get": {
        "operationId": "ManagedCcfs_ListByResourceGroup",
        "tags": [
          "ManagedCcfs"
        ],
        "description": "Retrieves the properties of all Managed CCF apps.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the list operation. eg. $filter=ledgerType eq 'Public'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedCcfListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.ConfidentialLedger/managedCCFs/{appName}": {
      "get": {
        "operationId": "ManagedCcfs_Get",
        "tags": [
          "ManagedCcfs"
        ],
        "description": "Retrieves the properties of a Managed CCF app.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "Name of the Managed CCF",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedCcf"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ManagedCcfs_Create",
        "tags": [
          "ManagedCcfs"
        ],
        "description": "Creates a Managed CCF with the specified Managed CCF parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "Name of the Managed CCF",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedCcf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ManagedCcf' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ManagedCcf"
            }
          },
          "201": {
            "description": "Resource 'ManagedCcf' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ManagedCcf"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ManagedCcfs_Update",
        "tags": [
          "ManagedCcfs"
        ],
        "description": "Updates properties of Managed CCF",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "Name of the Managed CCF",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedCcfUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedCcf"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ManagedCcfs_Delete",
        "tags": [
          "ManagedCcfs"
        ],
        "description": "Deletes an existing Managed CCF.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "Name of the Managed CCF",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AADBasedSecurityPrincipal": {
      "type": "object",
      "description": "AAD based security principal with associated Ledger RoleName",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "UUID/GUID based Principal Id of the Security Principal"
        },
        "tenantId": {
          "type": "string",
          "description": "UUID/GUID based Tenant Id of the Security Principal"
        },
        "ledgerRoleName": {
          "$ref": "#/definitions/LedgerRoleName",
          "description": "LedgerRole associated with the Security Principal of Ledger"
        }
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "CertBasedSecurityPrincipal": {
      "type": "object",
      "description": "Cert based security principal with Ledger RoleName",
      "properties": {
        "cert": {
          "type": "string",
          "description": "Public key of the user cert (.pem or .cer)"
        },
        "ledgerRoleName": {
          "$ref": "#/definitions/LedgerRoleName",
          "description": "LedgerRole associated with the Security Principal of Ledger"
        }
      }
    },
    "CertificateTags": {
      "type": "object",
      "description": "Tags for Managed CCF Certificates",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Additional tags for Managed CCF Certificates",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CheckNameAvailabilityReason": {
      "type": "string",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "CheckNameAvailabilityReason",
        "modelAsString": true
      }
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "$ref": "#/definitions/CheckNameAvailabilityReason",
          "description": "The reason why the given name is not available."
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ConfidentialLedger": {
      "type": "object",
      "description": "Confidential Ledger. Contains the properties of Confidential Ledger Resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LedgerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ConfidentialLedgerListResult": {
      "type": "object",
      "description": "The response of a ConfidentialLedger list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConfidentialLedger items on this page",
          "items": {
            "$ref": "#/definitions/ConfidentialLedger"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConfidentialLedgerUpdate": {
      "type": "object",
      "description": "The type used for update operations of the ConfidentialLedger.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ConfidentialLedgerUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ConfidentialLedgerUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the ConfidentialLedger.",
      "properties": {
        "runningState": {
          "$ref": "#/definitions/RunningState",
          "description": "Object representing RunningState for Ledger."
        },
        "ledgerType": {
          "$ref": "#/definitions/LedgerType",
          "description": "Type of Confidential Ledger"
        },
        "aadBasedSecurityPrincipals": {
          "type": "array",
          "description": "Array of all AAD based Security Principals.",
          "items": {
            "$ref": "#/definitions/AADBasedSecurityPrincipal"
          },
          "x-ms-identifiers": []
        },
        "certBasedSecurityPrincipals": {
          "type": "array",
          "description": "Array of all cert based Security Principals.",
          "items": {
            "$ref": "#/definitions/CertBasedSecurityPrincipal"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "DeploymentType": {
      "type": "object",
      "description": "Object representing DeploymentType for Managed CCF.",
      "properties": {
        "languageRuntime": {
          "$ref": "#/definitions/LanguageRuntime",
          "description": "Unique name for the Managed CCF."
        },
        "appSourceUri": {
          "type": "string",
          "description": "Source Uri containing ManagedCCF code"
        }
      }
    },
    "LanguageRuntime": {
      "type": "string",
      "enum": [
        "CPP",
        "JS"
      ],
      "x-ms-enum": {
        "name": "LanguageRuntime",
        "modelAsString": true
      }
    },
    "LedgerProperties": {
      "type": "object",
      "description": "Additional Confidential Ledger properties.",
      "properties": {
        "ledgerName": {
          "type": "string",
          "description": "Unique name for the Confidential Ledger.",
          "readOnly": true
        },
        "ledgerUri": {
          "type": "string",
          "description": "Endpoint for calling Ledger Service.",
          "readOnly": true
        },
        "identityServiceUri": {
          "type": "string",
          "description": "Endpoint for accessing network identity.",
          "readOnly": true
        },
        "ledgerInternalNamespace": {
          "type": "string",
          "description": "Internal namespace for the Ledger",
          "readOnly": true
        },
        "runningState": {
          "$ref": "#/definitions/RunningState",
          "description": "Object representing RunningState for Ledger."
        },
        "ledgerType": {
          "$ref": "#/definitions/LedgerType",
          "description": "Type of Confidential Ledger"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of Ledger Resource",
          "readOnly": true
        },
        "aadBasedSecurityPrincipals": {
          "type": "array",
          "description": "Array of all AAD based Security Principals.",
          "items": {
            "$ref": "#/definitions/AADBasedSecurityPrincipal"
          },
          "x-ms-identifiers": []
        },
        "certBasedSecurityPrincipals": {
          "type": "array",
          "description": "Array of all cert based Security Principals.",
          "items": {
            "$ref": "#/definitions/CertBasedSecurityPrincipal"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "LedgerRoleName": {
      "type": "string",
      "enum": [
        "Reader",
        "Contributor",
        "Administrator"
      ],
      "x-ms-enum": {
        "name": "LedgerRoleName",
        "modelAsString": true
      }
    },
    "LedgerType": {
      "type": "string",
      "enum": [
        "Unknown",
        "Public",
        "Private"
      ],
      "x-ms-enum": {
        "name": "LedgerType",
        "modelAsString": true
      }
    },
    "ManagedCCFProperties": {
      "type": "object",
      "description": "Additional Managed CCF properties.",
      "properties": {
        "appName": {
          "type": "string",
          "description": "Unique name for the Managed CCF.",
          "readOnly": true
        },
        "appUri": {
          "type": "string",
          "description": "Endpoint for calling Managed CCF Service.",
          "readOnly": true
        },
        "identityServiceUri": {
          "type": "string",
          "description": "Endpoint for accessing network identity.",
          "readOnly": true
        },
        "memberIdentityCertificates": {
          "type": "array",
          "description": "List of member identity certificates for  Managed CCF",
          "items": {
            "$ref": "#/definitions/MemberIdentityCertificate"
          },
          "x-ms-identifiers": []
        },
        "deploymentType": {
          "$ref": "#/definitions/DeploymentType",
          "description": "Deployment Type of Managed CCF"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of Ledger Resource",
          "readOnly": true
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of CCF nodes in the Managed CCF."
        }
      }
    },
    "ManagedCcf": {
      "type": "object",
      "description": "Managed CCF. Contains the properties of Managed CCF Resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedCCFProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ManagedCcfListResult": {
      "type": "object",
      "description": "The response of a ManagedCcf list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ManagedCcf items on this page",
          "items": {
            "$ref": "#/definitions/ManagedCcf"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ManagedCcfUpdate": {
      "type": "object",
      "description": "The type used for update operations of the ManagedCcf.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ManagedCcfUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ManagedCcfUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the ManagedCcf.",
      "properties": {
        "memberIdentityCertificates": {
          "type": "array",
          "description": "List of member identity certificates for  Managed CCF",
          "items": {
            "$ref": "#/definitions/MemberIdentityCertificate"
          },
          "x-ms-identifiers": []
        },
        "deploymentType": {
          "$ref": "#/definitions/DeploymentType",
          "description": "Deployment Type of Managed CCF"
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of CCF nodes in the Managed CCF."
        }
      }
    },
    "MemberIdentityCertificate": {
      "type": "object",
      "description": "Object representing MemberIdentityCertificate for Managed CCF.",
      "properties": {
        "certificate": {
          "type": "string",
          "description": "Member Identity Certificate"
        },
        "encryptionkey": {
          "type": "string",
          "description": "Member Identity Certificate Encryption Key"
        },
        "tags": {
          "description": "Anything"
        }
      }
    },
    "PagedResourceProviderOperationDefinition": {
      "type": "object",
      "description": "List containing this Resource Provider's available operations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ResourceProviderOperationDefinition items on this page",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperationDefinition"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Unknown",
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ResourceProviderOperationDefinition": {
      "type": "object",
      "description": "Describes the Resource Provider Operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource provider operation name."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is data action or not."
        },
        "display": {
          "$ref": "#/definitions/ResourceProviderOperationDisplay",
          "description": "Details about the operations"
        }
      }
    },
    "ResourceProviderOperationDisplay": {
      "type": "object",
      "description": "Describes the properties of the Operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Name of the resource provider."
        },
        "resource": {
          "type": "string",
          "description": "Name of the resource type."
        },
        "operation": {
          "type": "string",
          "description": "Name of the resource provider operation."
        },
        "description": {
          "type": "string",
          "description": "Description of the resource provider operation."
        }
      }
    },
    "RunningState": {
      "type": "string",
      "enum": [
        "Active",
        "Paused",
        "Unknown",
        "Pausing",
        "Resuming"
      ],
      "x-ms-enum": {
        "name": "RunningState",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-01-26-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_01_26_preview",
            "value": "2023-01-26-preview"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
