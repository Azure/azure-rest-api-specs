{
  "swagger": "2.0",
  "info": {
    "title": "AttestationManagementClient",
    "description": "Various APIs for managing resources in attestation service. This primarily encompasses per-provider management.",
    "version": "2020-10-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.Attestation/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists all of the available Azure attestation operations.",
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List all the operations.",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}": {
      "get": {
        "tags": [
          "AttestationProviders"
        ],
        "operationId": "AttestationProviders_Get",
        "description": "Get the status of Attestation Provider.",
        "x-ms-examples": {
          "AttestationProviders_Get": {
            "$ref": "./examples/Get_AttestationProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attestation provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The status of the specified attestation provider",
            "schema": {
              "$ref": "#/definitions/AttestationProvider"
            }
          },
          "default": {
            "description": "Error result from Attestation service",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AttestationProviders"
        ],
        "operationId": "AttestationProviders_Create",
        "description": "Creates a new Attestation Provider.",
        "x-ms-examples": {
          "AttestationProviders_Create": {
            "$ref": "./examples/Create_AttestationProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attestation provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "creationParams",
            "in": "body",
            "required": true,
            "description": "Client supplied parameters.",
            "schema": {
              "$ref": "#/definitions/AttestationServiceCreationParams"
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Created or updated attestation service",
            "schema": {
              "$ref": "#/definitions/AttestationProvider"
            }
          },
          "201": {
            "description": "Created or updated attestation service",
            "schema": {
              "$ref": "#/definitions/AttestationProvider"
            }
          },
          "default": {
            "description": "Error result from Attestation service",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AttestationProviders"
        ],
        "operationId": "AttestationProviders_Update",
        "description": "Updates the Attestation Provider.",
        "x-ms-examples": {
          "AttestationProviders_Update": {
            "$ref": "./examples/Update_AttestationProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attestation provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "updateParams",
            "in": "body",
            "required": true,
            "description": "Client supplied parameters.",
            "schema": {
              "$ref": "#/definitions/AttestationServicePatchParams"
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated attestation service",
            "schema": {
              "$ref": "#/definitions/AttestationProvider"
            }
          },
          "default": {
            "description": "Error result from Attestation service",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AttestationProviders"
        ],
        "operationId": "AttestationProviders_Delete",
        "description": "Delete Attestation Service.",
        "x-ms-examples": {
          "AttestationProviders_Delete": {
            "$ref": "./examples/Delete_AttestationProvider.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the attestation service"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource exists and was deleted successfully"
          },
          "202": {
            "description": "Request accepted for deletion of attestation service"
          },
          "204": {
            "description": "Resource does not exist"
          },
          "default": {
            "description": "Error result from Attestation service",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Attestation/attestationProviders": {
      "get": {
        "tags": [
          "AttestationProviders"
        ],
        "operationId": "AttestationProviders_List",
        "description": "Returns a list of attestation providers in a subscription.",
        "x-ms-examples": {
          "AttestationProviders_List": {
            "$ref": "./examples/Get_AttestationProvidersList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttestationProviderListResult"
            }
          },
          "default": {
            "description": "Attestation service error result",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders": {
      "get": {
        "tags": [
          "AttestationProviders"
        ],
        "operationId": "AttestationProviders_ListByResourceGroup",
        "description": "Returns attestation providers list in a resource group.",
        "x-ms-examples": {
          "AttestationProviders_ListByResourceGroup": {
            "$ref": "./examples/Get_AttestationProvidersListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AttestationProviderListResult"
            }
          },
          "default": {
            "description": "Attestation service error result",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Attestation/defaultProviders": {
      "get": {
        "tags": [
          "AttestationProviders"
        ],
        "operationId": "AttestationProviders_ListDefault",
        "description": "Get the default provider",
        "x-ms-examples": {
          "AttestationProviders_GetDefault": {
            "$ref": "./examples/Get_DefaultProviders.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved information about the default provider.",
            "schema": {
              "$ref": "#/definitions/AttestationProviderListResult"
            }
          },
          "default": {
            "description": "Attestation service error result",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Attestation/locations/{location}/defaultProvider": {
      "get": {
        "tags": [
          "AttestationProviders"
        ],
        "operationId": "AttestationProviders_GetDefaultByLocation",
        "description": "Get the default provider by location.",
        "x-ms-examples": {
          "AttestationProviders_GetDefaultWithLocation": {
            "$ref": "./examples/Get_DefaultProviderByLocation.json"
          }
        },
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "description": "The location of the default provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved information about the default provider.",
            "schema": {
              "$ref": "#/definitions/AttestationProvider"
            }
          },
          "default": {
            "description": "Attestation service error result",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "description": "Gets the specified private endpoint connection associated with the attestation provider.",
        "x-ms-examples": {
          "AttestationProviderGetPrivateEndpointConnection": {
            "$ref": "./examples/getPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProviderName"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Private endpoint connection successfully returned.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Put",
        "description": "Updates the specified private endpoint connection associated with the attestation provider.",
        "x-ms-examples": {
          "AttestationProviderPutPrivateEndpointConnection": {
            "$ref": "./examples/putPrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProviderName"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "description": "The intended state of private endpoint connection."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The state of private endpoint connection was updated successfully.",
            "headers": {
              "Retry-After": {
                "description": "(specified only if operation does not finish synchronously) The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.",
                "format": "int32",
                "type": "integer"
              },
              "Azure-AsyncOperation": {
                "description": "(specified only if operation does not finish synchronously) The URI to poll for completion status. The response of this URI may be synchronous or asynchronous.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "description": "Deletes the specified private endpoint connection associated with the attestation provider.",
        "x-ms-examples": {
          "AttestationProviderDeletePrivateEndpointConnection": {
            "$ref": "./examples/deletePrivateEndpointConnection.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProviderName"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The private endpoint connection was successfully deleted.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "The private endpoint connection is being deleted.",
            "headers": {
              "Retry-After": {
                "description": "The recommended number of seconds to wait before calling the URI specified in the location header.",
                "format": "int32",
                "type": "integer"
              },
              "Location": {
                "description": "The URI to poll for completion status.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_ListByProvider",
        "description": "Gets the private link resources supported for the provider.",
        "x-ms-examples": {
          "AttestationProviderListPrivateLinkResources": {
            "$ref": "./examples/listPrivateLinkResources.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProviderName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_ListByProvider",
        "description": "Gets the private link resources supported for the provider.",
        "x-ms-examples": {
          "AttestationProviderListPrivateEndpointConnections": {
            "$ref": "./examples/listPrivateEndpointConnections.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ProviderName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "OperationList": {
      "properties": {
        "systemData": {
          "readOnly": true,
          "description": "The system metadata relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
        },
        "value": {
          "type": "array",
          "description": "List of supported operations.",
          "items": {
            "$ref": "#/definitions/OperationsDefinition"
          }
        }
      },
      "description": "List of supported operations."
    },
    "OperationsDefinition": {
      "type": "object",
      "description": "Definition object with the name and properties of an operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation."
        },
        "display": {
          "$ref": "#/definitions/OperationsDisplayDefinition",
          "description": "Display object with properties of the operation."
        }
      }
    },
    "OperationsDisplayDefinition": {
      "type": "object",
      "description": "Display object with properties of the operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Resource provider of the operation."
        },
        "resource": {
          "type": "string",
          "description": "Resource for the operation."
        },
        "operation": {
          "type": "string",
          "description": "Short description of the operation."
        },
        "description": {
          "type": "string",
          "description": "Description of the operation."
        }
      }
    },
    "AttestationProvider": {
      "description": "Attestation service response message.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "systemData": {
          "readOnly": true,
          "description": "The system metadata relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
        },
        "properties": {
          "type": "object",
          "$ref": "#/definitions/StatusResult",
          "description": "Describes Attestation service status.",
          "x-ms-client-flatten": true
        }
      }
    },
    "StatusResult": {
      "type": "object",
      "description": "Status of attestation service.",
      "properties": {
        "trustModel": {
          "type": "string",
          "description": "Trust model for the attestation provider."
        },
        "status": {
          "type": "string",
          "description": "Status of attestation service.",
          "enum": [
            "Ready",
            "NotReady",
            "Error"
          ],
          "x-ms-enum": {
            "name": "AttestationServiceStatus",
            "modelAsString": true
          }
        },
        "attestUri": {
          "type": "string",
          "description": "Gets the uri of attestation service"
        },
        "privateEndpointConnections": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnectionItem"
          },
          "description": "List of private endpoint connections associated with the attestation provider."
        }
      }
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "description": "An error response from Attestation."
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for displaying in a user interface."
        }
      },
      "description": "An error response from Attestation."
    },
    "AttestationProviderListResult": {
      "description": "Attestation Providers List.",
      "properties": {
        "systemData": {
          "readOnly": true,
          "description": "The system metadata relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData"
        },
        "value": {
          "type": "array",
          "description": "Attestation Provider array.",
          "items": {
            "$ref": "#/definitions/AttestationProvider"
          }
        }
      }
    },
    "AttestationServicePatchParams": {
      "description": "Parameters for patching an attestation provider",
      "x-ms-azure-resource": true,
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags that will be assigned to the attestation provider."
        }
      }
    },
    "AttestationServiceCreationParams": {
      "description": "Parameters for creating an attestation provider",
      "required": [
        "location",
        "properties"
      ],
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "description": "The supported Azure location where the attestation provider should be created."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags that will be assigned to the attestation provider."
        },
        "properties": {
          "$ref": "#/definitions/AttestationServiceCreationSpecificParams",
          "description": "Properties of the attestation provider"
        }
      }
    },
    "AttestationServiceCreationSpecificParams": {
      "description": "Client supplied parameters used to create a new attestation provider.",
      "properties": {
        "policySigningCertificates": {
          "description": "JSON Web Key Set defining a set of X.509 Certificates that will represent the parent certificate for the signing certificate used for policy operations",
          "$ref": "../../../../../common-types/rfcs/rfc7517.json#/definitions/JSONWebKeySet"
        }
      }
    },
    "PrivateEndpointConnection": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Private endpoint connection resource.",
      "x-ms-azure-resource": true
    },
    "PrivateEndpointConnectionProperties": {
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "Properties of the private endpoint object."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "Approval state of the private link connection."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "Provisioning state of the private endpoint connection."
        }
      },
      "description": "Properties of the private endpoint connection resource."
    },
    "PrivateEndpoint": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Full identifier of the private endpoint resource."
        }
      },
      "description": "Private endpoint object properties."
    },
    "PrivateEndpointConnectionItem": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the connection item."
        },
        "properties": {
          "$ref": "#/definitions/PrivateLinkConnectionItemProperties"
        }
      },
      "description": "Private endpoint connection item."
    },
    "PrivateLinkConnectionItemProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState"
        },
        "privateEndpoint": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier for the endpoint"
            }
          }
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState"
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState"
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider."
    },
    "PrivateEndpointConnectionsListResult": {
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      },
      "description": "A list of private endpoint connections"
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "PrivateLinkResourceListResult": {
      "properties": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "description": "Array of private link resources",
            "items": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          }
        }
      },
      "description": "A list of private link resources"
    },
    "PrivateLinkResource": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A private link resource"
    },
    "PrivateLinkResourceProperties": {
      "properties": {
        "groupId": {
          "description": "Group identifier of private link resource.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "Required member names of private link resource.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required DNS zone names of the the private link resource."
        }
      },
      "description": "Properties of a private link resource."
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified identifier of the attestation provider."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the attestation provider."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type of the attestation provider."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "Azure location of the attestation provider."
        }
      },
      "description": "Attestation resource",
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version. Current version is 2020-10-01"
    },
    "PrivateEndpointConnectionName": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the private endpoint connection associated with the attestation providers.",
      "x-ms-parameter-location": "method"
    },
    "ProviderName": {
      "name": "providerName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z0-9-]{3,24}$",
      "description": "The name of the attestation provider.",
      "x-ms-parameter-location": "method"
    }
  }
}
