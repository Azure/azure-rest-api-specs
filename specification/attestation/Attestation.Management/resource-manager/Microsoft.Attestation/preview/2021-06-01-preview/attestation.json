{
  "swagger": "2.0",
  "info": {
    "title": "AttestationManagementClient",
    "version": "2021-06-01-preview",
    "description": "Various APIs for managing resources in attestation service. This primarily encompasses per-provider management.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "AttestationProviders"
    },
    {
      "name": "PrivateEndpointConnections"
    }
  ],
  "paths": {
    "/providers/Microsoft.Attestation/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders": {
      "get": {
        "operationId": "AttestationProviders_ListByResourceGroup",
        "tags": [
          "AttestationProviders"
        ],
        "description": "Returns attestation providers list in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AttestationProviderListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttestationProviders_ListByResourceGroup": {
            "$ref": "./examples/AttestationProviders_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}": {
      "get": {
        "operationId": "AttestationProviders_Get",
        "tags": [
          "AttestationProviders"
        ],
        "description": "Get the status of Attestation Provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Name of the attestation provider.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AttestationProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttestationProviders_Get": {
            "$ref": "./examples/AttestationProviders_Get.json"
          }
        }
      },
      "put": {
        "operationId": "AttestationProviders_Create",
        "tags": [
          "AttestationProviders"
        ],
        "description": "Creates a new Attestation Provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Name of the attestation provider.",
            "required": true,
            "type": "string"
          },
          {
            "name": "creationParams",
            "in": "body",
            "description": "Client supplied parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttestationProvider"
            },
            "x-ms-client-name": "creationParams"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AttestationProvider' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AttestationProvider"
            }
          },
          "201": {
            "description": "Resource 'AttestationProvider' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AttestationProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttestationProviders_Create": {
            "$ref": "./examples/AttestationProviders_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "AttestationProviders_Update",
        "tags": [
          "AttestationProviders"
        ],
        "description": "Updates the Attestation Provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Name of the attestation provider.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateParams",
            "in": "body",
            "description": "Client supplied parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttestationServicePatchParams"
            },
            "x-ms-client-name": "updateParams"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AttestationProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttestationProviders_Update": {
            "$ref": "./examples/AttestationProviders_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "AttestationProviders_Delete",
        "tags": [
          "AttestationProviders"
        ],
        "description": "Delete Attestation Service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Name of the attestation provider.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttestationProviders_Delete": {
            "$ref": "./examples/AttestationProviders_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_List",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "List all the private endpoint connections associated with the attestation provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Name of the attestation provider.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttestationProviderListPrivateEndpointConnections": {
            "$ref": "./examples/PrivateEndpointConnections_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the specified private endpoint connection associated with the attestation provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Name of the attestation provider.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttestationProviderGetPrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnections_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_Create",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Update the state of specified private endpoint connection associated with the attestation provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Name of the attestation provider.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The private endpoint connection properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "x-ms-client-name": "properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttestationProviderPutPrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnections_Create.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes the specified private endpoint connection associated with the attestation provider.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Name of the attestation provider.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AttestationProviderDeletePrivateEndpointConnection": {
            "$ref": "./examples/PrivateEndpointConnections_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}/privateLinkResources/{resourceGroupName}/{providerName}/{subscriptionId}": {
      "get": {
        "operationId": "PrivateLinkResources_ListByProvider",
        "tags": [
          "AttestationProviders"
        ],
        "description": "Gets the private link resources supported for the attestation provider.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "The name of the attestation provider.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "AttestationProviderListPrivateLinkResources": {
            "$ref": "./examples/PrivateLinkResources_ListByProvider.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AttestationProvider": {
      "type": "object",
      "description": "Attestation service response message.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StatusResult",
          "description": "Describes Attestation service status.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AttestationProviderListResult": {
      "type": "object",
      "description": "The response of a AttestationProvider list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AttestationProvider items on this page",
          "items": {
            "$ref": "#/definitions/AttestationProvider"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AttestationServiceCreationParams": {
      "type": "object",
      "description": "Parameters for creating an attestation provider",
      "properties": {
        "location": {
          "type": "string",
          "description": "The supported Azure location where the attestation provider should be created."
        },
        "tags": {
          "type": "object",
          "description": "The tags that will be assigned to the attestation provider.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AttestationServiceCreationSpecificParams",
          "description": "Properties of the attestation provider"
        }
      },
      "required": [
        "location",
        "properties"
      ]
    },
    "AttestationServiceCreationSpecificParams": {
      "type": "object",
      "description": "Client supplied parameters used to create a new attestation provider.",
      "properties": {
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccessType",
          "description": "Controls whether traffic from the public network is allowed to access the Attestation Provider APIs.",
          "default": "Enabled"
        },
        "policySigningCertificates": {
          "$ref": "#/definitions/JsonWebKeySet",
          "description": "JSON Web Key Set defining a set of X.509 Certificates that will represent the parent certificate for the signing certificate used for policy operations"
        }
      }
    },
    "AttestationServicePatchParams": {
      "type": "object",
      "description": "Parameters for patching an attestation provider",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags that will be assigned to the attestation provider.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AttestationServicePatchSpecificParams",
          "description": "Properties of the attestation provider"
        }
      }
    },
    "AttestationServicePatchSpecificParams": {
      "type": "object",
      "description": "Client supplied parameters used to patch an existing attestation provider.",
      "properties": {
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccessType",
          "description": "Controls whether traffic from the public network is allowed to access the Attestation Provider APIs.",
          "default": "Enabled"
        }
      }
    },
    "AttestationServiceStatus": {
      "type": "string",
      "description": "Status of attestation service.",
      "enum": [
        "Ready",
        "NotReady",
        "Error"
      ],
      "x-ms-enum": {
        "name": "AttestationServiceStatus",
        "modelAsString": true
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "CloudError": {
      "type": "object",
      "description": "An error response from Attestation.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "An error response from Attestation."
        }
      }
    },
    "CloudErrorBody": {
      "type": "object",
      "description": "An error response from Attestation.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for displaying in a user interface."
        }
      }
    },
    "JsonWebKey": {
      "type": "object",
      "properties": {
        "alg": {
          "type": "string",
          "description": "The \"alg\" (algorithm) parameter identifies the algorithm intended for\nuse with the key.  The values used should either be registered in the\nIANA \"JSON Web Signature and Encryption Algorithms\" registry\nestablished by [JWA] or be a value that contains a Collision-\nResistant Name."
        },
        "crv": {
          "type": "string",
          "description": "The \"crv\" (curve) parameter identifies the curve type"
        },
        "d": {
          "type": "string",
          "description": "RSA private exponent or ECC private key"
        },
        "dp": {
          "type": "string",
          "description": "RSA Private Key Parameter"
        },
        "dq": {
          "type": "string",
          "description": "RSA Private Key Parameter"
        },
        "e": {
          "type": "string",
          "description": "RSA public exponent, in Base64"
        },
        "k": {
          "type": "string",
          "description": "Symmetric key"
        },
        "kid": {
          "type": "string",
          "description": "The \"kid\" (key ID) parameter is used to match a specific key.  This\nis used, for instance, to choose among a set of keys within a JWK Set\nduring key rollover.  The structure of the \"kid\" value is\nunspecified.  When \"kid\" values are used within a JWK Set, different\nkeys within the JWK Set SHOULD use distinct \"kid\" values.  (One\nexample in which different keys might use the same \"kid\" value is if\nthey have different \"kty\" (key type) values but are considered to be\nequivalent alternatives by the application using them.)  The \"kid\"\nvalue is a case-sensitive string."
        },
        "kty": {
          "type": "string",
          "description": "The \"kty\" (key type) parameter identifies the cryptographic algorithm\nfamily used with the key, such as \"RSA\" or \"EC\". \"kty\" values should\neither be registered in the IANA \"JSON Web Key Types\" registry\nestablished by [JWA] or be a value that contains a Collision-\nResistant Name.  The \"kty\" value is a case-sensitive string."
        },
        "n": {
          "type": "string",
          "description": "RSA modulus, in Base64"
        },
        "p": {
          "type": "string",
          "description": "RSA secret prime"
        },
        "q": {
          "type": "string",
          "description": "RSA secret prime, with p < q"
        },
        "qi": {
          "type": "string",
          "description": "RSA Private Key Parameter"
        },
        "use": {
          "type": "string",
          "description": "Use (\"public key use\") identifies the intended use of\nthe public key. The \"use\" parameter is employed to indicate whether\na public key is used for encrypting data or verifying the signature\non data. Values are commonly \"sig\" (signature) or \"enc\" (encryption)."
        },
        "x": {
          "type": "string",
          "description": "X coordinate for the Elliptic Curve point"
        },
        "x5c": {
          "type": "array",
          "description": "The \"x5c\" (X.509 certificate chain) parameter contains a chain of one\nor more PKIX certificates [RFC5280].  The certificate chain is\nrepresented as a JSON array of certificate value strings.  Each\nstring in the array is a base64-encoded (Section 4 of [RFC4648] --\nnot base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.\nThe PKIX certificate containing the key value MUST be the first\ncertificate.",
          "items": {
            "type": "string"
          },
          "x-ms-client-name": "x5C"
        },
        "y": {
          "type": "string",
          "description": "Y coordinate for the Elliptic Curve point"
        }
      },
      "required": [
        "kty"
      ]
    },
    "JsonWebKeySet": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "description": "The value of the \"keys\" parameter is an array of JWK values.  By\ndefault, the order of the JWK values within the array does not imply\nan order of preference among them, although applications of JWK Sets\ncan choose to assign a meaning to the order for their purposes, if\ndesired.",
          "items": {
            "$ref": "#/definitions/JsonWebKey"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "OperationsDefinition": {
      "type": "object",
      "description": "Definition object with the name and properties of an operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation."
        },
        "display": {
          "$ref": "#/definitions/OperationsDisplayDefinition",
          "description": "Display object with properties of the operation."
        }
      }
    },
    "OperationsDisplayDefinition": {
      "type": "object",
      "description": "Display object with properties of the operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Resource provider of the operation."
        },
        "resource": {
          "type": "string",
          "description": "Resource for the operation."
        },
        "operation": {
          "type": "string",
          "description": "Short description of the operation."
        },
        "description": {
          "type": "string",
          "description": "Description of the operation."
        }
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "The Private Endpoint resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM identifier for Private Endpoint",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "The Private Endpoint Connection resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource.",
          "readOnly": true
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A private link resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "A list of private link resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id.",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      }
    },
    "PublicNetworkAccessType": {
      "type": "string",
      "description": "The public network access type for API calls to the Attestation Provider.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccessType",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Enables public network connectivity to the Attestation Provider REST APIs."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Disables public network connectivity to the Attestation Provider REST APIs."
          }
        ]
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        }
      }
    },
    "StatusResult": {
      "type": "object",
      "description": "Status of attestation service.",
      "properties": {
        "trustModel": {
          "type": "string",
          "description": "Trust model for the attestation provider."
        },
        "status": {
          "$ref": "#/definitions/AttestationServiceStatus",
          "description": "Status of attestation service."
        },
        "attestUri": {
          "type": "string",
          "description": "Gets the uri of attestation service"
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccessType",
          "description": "Controls whether traffic from the public network is allowed to access the Attestation Provider APIs.",
          "default": "Enabled"
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connections associated with the attestation provider.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2021-06-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2021_06_01_preview",
            "value": "2021-06-01-preview",
            "description": "The 2021-06-01-preview API version."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
