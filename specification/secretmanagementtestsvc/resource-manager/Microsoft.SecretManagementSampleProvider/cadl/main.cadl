//---------------------------------------------------------------------------------------------
// <copyright file="Main.cadl" company="Microsoft">
// Copyright (c) Microsoft.  All rights reserved.
// </copyright>
//---------------------------------------------------------------------------------------------
import "@cadl-lang/rest";
import "@cadl-lang/openapi3";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-providerhub-controller";
import "@azure-tools/cadl-azure-resource-manager";

// Documentation: https://github.com/Azure/cadl-azure/blob/main/packages/cadl-azure-resource-manager/README.md
@armNamespace
@serviceTitle("Secret Management Test Service")
@serviceVersion("2022-08-01-preview")
namespace Microsoft.SecretManagementSampleProvider;

using Cadl.Http;
using Cadl.Rest;
using Azure.ResourceManager;
using OpenAPI;

@doc("The properties of WeatherForecast")
model WeatherForecastProperties {
  @doc("City name for the forecast")
  city: string;

  @doc("Date of the forecast")
  date: string; // Workaround for github issue https://github.com/Azure/cadl-azure/issues/1834 with plainDate CADL type.

  @doc("High temperature in Fahrenheit")
  highTemperatureF: int32;

  @doc("Low temperature in Fahrenheit")
  lowTemperatureF: int32;

  @doc("Summary of the weather")
  summary?: string;
}

@doc("Provisioning state of the resource")
@knownValues(ProvisioningStateKV)
model ProvisioningState is string {}
enum ProvisioningStateKV {
  Succeeded,
  Failed,
  Canceled,
  Accepted,
  Creating,
  Updating,
  Deleting
}

@doc("The properties of WeatherForecastResource")
model WeatherForecastResourceProperties {
  @doc("Provisioning state of the resource")
  @visibility("read")
  provisioningState?: ProvisioningState;

  @extension("x-ms-identifiers", ["city"])
  @doc("Collection of weather forecasts")
  weatherForecastProperties: WeatherForecastProperties[];
}

@doc("A WeatherForecastResource")
model WeatherForecastResource is TrackedResource<WeatherForecastResourceProperties> {
  @doc("Weather forecast resource name")
  @key("weatherForecastResourceName")

  @doc("Forecasts resource type")
  @segment("forecasts")
  
  @doc("Name of the resource")
  @visibility("read")
  @path
  name: string;
}

@armResourceOperations
interface Forecasts extends ResourceOperations<WeatherForecastResource, WeatherForecastResourceProperties> {}