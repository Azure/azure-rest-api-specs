{
  "swagger": "2.0",
  "info": {
    "title": "Secret Management Test Service",
    "version": "2022-08-01-preview",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Forecasts"
    },
    {
      "name": "Operations"
    }
  ],
  "paths": {
    "/providers/Microsoft.SecretManagementSampleProvider/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet": {
            "$ref": "./examples/Operations_List_MaximumSet.json"
          },
          "Operations_List_MinimumSet": {
            "$ref": "./examples/Operations_List_MinimumSet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.SecretManagementSampleProvider/forecasts": {
      "get": {
        "tags": [
          "Forecasts"
        ],
        "operationId": "Forecasts_ListBySubscription",
        "description": "List WeatherForecastResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WeatherForecastResourceListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Forecasts_ListBySub_MaximumSet": {
            "$ref": "./examples/Forecasts_ListBySub_MaximumSet.json"
          },
          "Forecasts_ListBySub_MinimumSet": {
            "$ref": "./examples/Forecasts_ListBySub_MinimumSet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecretManagementSampleProvider/forecasts": {
      "get": {
        "tags": [
          "Forecasts"
        ],
        "operationId": "Forecasts_ListByResourceGroup",
        "description": "List WeatherForecastResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WeatherForecastResourceListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Forecasts_ListByRG_MaximumSet": {
            "$ref": "./examples/Forecasts_ListByRG_MaximumSet.json"
          },
          "Forecasts_ListByRG_MinimumSet": {
            "$ref": "./examples/Forecasts_ListByRG_MinimumSet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecretManagementSampleProvider/forecasts/{weatherForecastResourceName}": {
      "get": {
        "tags": [
          "Forecasts"
        ],
        "operationId": "Forecasts_Get",
        "description": "Get a WeatherForecastResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WeatherForecastResource.weatherForecastResourceName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WeatherForecastResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Forecasts_Get_MaximumSet": {
            "$ref": "./examples/Forecasts_Get_MaximumSet.json"
          },
          "Forecasts_Get_MinimumSet": {
            "$ref": "./examples/Forecasts_Get_MinimumSet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Forecasts"
        ],
        "operationId": "Forecasts_CreateOrUpdate",
        "description": "Create a WeatherForecastResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WeatherForecastResource.weatherForecastResourceName"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/WeatherForecastResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WeatherForecastResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/WeatherForecastResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Forecasts_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/Forecasts_CreateOrUpdate_MaximumSet.json"
          },
          "Forecasts_CreateOrUpdate_MinimumSet": {
            "$ref": "./examples/Forecasts_CreateOrUpdate_MinimumSet.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Forecasts"
        ],
        "operationId": "Forecasts_Update",
        "description": "Update a WeatherForecastResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WeatherForecastResource.weatherForecastResourceName"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/WeatherForecastResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WeatherForecastResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Forecasts_Update_MaximumSet": {
            "$ref": "./examples/Forecasts_Update_MaximumSet.json"
          },
          "Forecasts_Update_MinimumSet": {
            "$ref": "./examples/Forecasts_Update_MinimumSet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Forecasts"
        ],
        "operationId": "Forecasts_Delete",
        "description": "Delete a WeatherForecastResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WeatherForecastResource.weatherForecastResourceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Forecasts_Delete_MaximumSet": {
            "$ref": "./examples/Forecasts_Delete_MaximumSet.json"
          },
          "Forecasts_Delete_MinimumSet": {
            "$ref": "./examples/Forecasts_Delete_MinimumSet.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the resource",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "WeatherForecastProperties": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string",
          "description": "City name for the forecast"
        },
        "date": {
          "type": "string",
          "description": "Date of the forecast"
        },
        "highTemperatureF": {
          "type": "integer",
          "format": "int32",
          "description": "High temperature in Fahrenheit"
        },
        "lowTemperatureF": {
          "type": "integer",
          "format": "int32",
          "description": "Low temperature in Fahrenheit"
        },
        "summary": {
          "type": "string",
          "description": "Summary of the weather"
        }
      },
      "description": "The properties of WeatherForecast",
      "required": [
        "city",
        "date",
        "highTemperatureF",
        "lowTemperatureF"
      ]
    },
    "WeatherForecastResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WeatherForecastResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        }
      },
      "description": "A WeatherForecastResource",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WeatherForecastResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeatherForecastResource"
          },
          "x-cadl-name": "WeatherForecastResource[]",
          "description": "The WeatherForecastResource items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a WeatherForecastResource list operation.",
      "required": [
        "value"
      ]
    },
    "WeatherForecastResourceProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource",
          "readOnly": true
        },
        "weatherForecastProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeatherForecastProperties"
          },
          "x-ms-identifiers": [
            "city"
          ],
          "x-cadl-name": "WeatherForecastProperties[]",
          "description": "Collection of weather forecasts"
        }
      },
      "description": "The properties of WeatherForecastResource",
      "required": [
        "weatherForecastProperties"
      ]
    },
    "WeatherForecastResourceUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/WeatherForecastResourceUpdateProperties"
        }
      },
      "description": "The type used for update operations of the WeatherForecastResource."
    },
    "WeatherForecastResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "weatherForecastProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeatherForecastProperties"
          },
          "x-ms-identifiers": [
            "city"
          ],
          "x-cadl-name": "WeatherForecastProperties[]",
          "description": "Collection of weather forecasts"
        }
      },
      "description": "The updatable properties of the WeatherForecastResource."
    }
  },
  "parameters": {
    "WeatherForecastResource.weatherForecastResourceName": {
      "name": "weatherForecastResourceName",
      "in": "path",
      "required": true,
      "description": "Weather forecast resource name",
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
