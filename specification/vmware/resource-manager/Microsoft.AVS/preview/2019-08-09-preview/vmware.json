{
  "swagger": "2.0",
  "info": {
    "title": "Azure VMware Solution API",
    "description": "Azure VMware Solution API",
    "version": "2019-08-09-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "PrivateClouds",
      "description": ""
    },
    {
      "name": "Clusters",
      "description": ""
    },
    {
      "name": "Operations",
      "description": ""
    },
    {
      "name": "Locations",
      "description": ""
    }
  ],
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Unique identifier for the Azure subscription"
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the resource group within the Azure subscription",
      "x-ms-parameter-location": "method"
    },
    "apiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of Azure VMware Solution API to be used with the client request"
    },
    "privateCloudName": {
      "name": "privateCloudName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the private cloud",
      "x-ms-parameter-location": "method"
    },
    "clusterName": {
      "name": "clusterName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the cluster in the private cloud",
      "x-ms-parameter-location": "method"
    }
  },
  "paths": {
    "/providers/Microsoft.AVS/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available operations",
        "operationId": "Operations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/locations/{location}/checkTrialAvailability": {
      "post": {
        "tags": [
          "Locations"
        ],
        "description": "Return trial status for subscription by region",
        "operationId": "Locations_CheckTrialAvailability",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Azure region"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded",
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "CheckQuotaAvailability": {
            "$ref": "./examples/Locations_CheckTrialAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/locations/{location}/checkQuotaAvailability": {
      "post": {
        "tags": [
          "Locations"
        ],
        "description": "Return quota for subscription by region",
        "operationId": "Locations_CheckQuotaAvailability",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Azure region"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded",
            "schema": {
              "$ref": "#/definitions/Quota"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "CheckQuotaAvailability": {
            "$ref": "./examples/Locations_CheckQuotaAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds": {
      "get": {
        "operationId": "PrivateClouds_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "PrivateClouds"
        ],
        "summary": "List private clouds in a resource group",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloudList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_List": {
            "$ref": "./examples/PrivateClouds_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/privateClouds": {
      "get": {
        "operationId": "PrivateClouds_ListInSubscription",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "PrivateClouds"
        ],
        "summary": "List private clouds in a subscription",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloudList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_List": {
            "$ref": "./examples/PrivateClouds_ListInSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}": {
      "get": {
        "operationId": "PrivateClouds_Get",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "Get a private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_Get": {
            "$ref": "./examples/PrivateClouds_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateClouds_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "tags": [
          "PrivateClouds"
        ],
        "summary": "Create or update a private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "name": "privateCloud",
            "description": "The private cloud",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_CreateOrUpdate": {
            "$ref": "./examples/PrivateClouds_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "PrivateClouds_Update",
        "x-ms-long-running-operation": true,
        "tags": [
          "PrivateClouds"
        ],
        "summary": "Update a private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "name": "privateCloud",
            "description": "The private cloud",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_Update": {
            "$ref": "./examples/PrivateClouds_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateClouds_Delete",
        "x-ms-long-running-operation": true,
        "tags": [
          "PrivateClouds"
        ],
        "summary": "Delete a private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No private cloud to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_Delete": {
            "$ref": "./examples/PrivateClouds_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters": {
      "get": {
        "operationId": "Clusters_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "Clusters"
        ],
        "summary": "List clusters in a private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_List": {
            "$ref": "./examples/Clusters_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}": {
      "get": {
        "operationId": "Clusters_Get",
        "tags": [
          "Clusters"
        ],
        "summary": "Get a cluster by name in a private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/clusterName"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_Get": {
            "$ref": "./examples/Clusters_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Clusters_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "tags": [
          "Clusters"
        ],
        "summary": "Create or update a cluster in a private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "$ref": "#/parameters/clusterName"
          },
          {
            "name": "cluster",
            "description": "A cluster in the private cloud",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_CreateOrUpdate": {
            "$ref": "./examples/Clusters_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "Clusters_Update",
        "x-ms-long-running-operation": true,
        "tags": [
          "Clusters"
        ],
        "summary": "Update a cluster in a private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/clusterName"
          },
          {
            "name": "cluster",
            "description": "A cluster in a private cloud",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_Update": {
            "$ref": "./examples/Clusters_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "Clusters_Delete",
        "x-ms-long-running-operation": true,
        "tags": [
          "Clusters"
        ],
        "summary": "Delete a cluster in a private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/clusterName"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No cluster to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_Delete": {
            "$ref": "./examples/Clusters_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/listAdminCredentials": {
      "post": {
        "operationId": "PrivateClouds_ListAdminCredentials",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "List the admin credentials for the private cloud",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AdminCredentials"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_ListAdminCredentials": {
            "$ref": "./examples/PrivateClouds_ListAdminCredentials.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Trial": {
      "description": "Subscription trial availability",
      "properties": {
        "status": {
          "description": "Trial status",
          "type": "string",
          "enum": [
            "TrialAvailable",
            "TrialUsed",
            "TrialDisabled"
          ],
          "readOnly": true
        },
        "availableHosts": {
          "description": "Number of trial hosts available",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "Quota": {
      "description": "Subscription quotas",
      "properties": {
        "hostsRemaining": {
          "description": "Remaining hosts quota by sku type",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "quotaEnabled": {
          "description": "Host quota is active for current subscription",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "QuotaEnabled",
            "modelAsString": true
          }
        }
      }
    },
    "Resource": {
      "description": "The core properties of ARM resources",
      "properties": {
        "id": {
          "description": "Resource ID.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Resource name.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "description": "The resource model definition for a ARM tracked top level resource",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags"
        }
      }
    },
    "ApiError": {
      "properties": {
        "error": {
          "description": "An error returned by the API",
          "$ref": "#/definitions/ApiErrorBase"
        }
      },
      "description": "API error response"
    },
    "ApiErrorBase": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code"
        },
        "message": {
          "type": "string",
          "description": "Error message"
        }
      },
      "description": "Api error."
    },
    "OperationList": {
      "description": "Pageable list of operations",
      "properties": {
        "value": {
          "description": "List of operations",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "description": "A REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation being performed on this object",
          "type": "string",
          "readOnly": true
        },
        "display": {
          "description": "Contains the localized display information for this operation",
          "readOnly": true,
          "properties": {
            "provider": {
              "description": "Localized friendly form of the resource provider name",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "Localized friendly form of the resource type related to this operation",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "Localized friendly name for the operation",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Localized friendly description for the operation",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "isDataAction": {
          "description": "Gets or sets a value indicating whether the operation is a data action or not",
          "type": "boolean"
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of the operation"
        }
      }
    },
    "OperationProperties": {
      "description": "Extra Operation properties",
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "Service specifications of the operation"
        }
      }
    },
    "ServiceSpecification": {
      "description": "Service specification payload",
      "type": "object",
      "properties": {
        "logSpecifications": {
          "description": "Specifications of the Log for Azure Monitoring",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          }
        },
        "metricSpecifications": {
          "description": "Specifications of the Metrics for Azure Monitoring",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          }
        }
      }
    },
    "LogSpecification": {
      "description": "Specifications of the Log for Azure Monitoring",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the log",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the log",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blob duration of the log",
          "type": "string"
        }
      }
    },
    "MetricSpecification": {
      "description": "Specifications of the Metrics for Azure Monitoring",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the metric",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the metric",
          "type": "string"
        },
        "displayDescription": {
          "description": "Localized friendly description of the metric",
          "type": "string"
        },
        "unit": {
          "description": "Unit that makes sense for the metric",
          "type": "string"
        },
        "category": {
          "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
          "type": "string"
        },
        "aggregationType": {
          "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
          "type": "string"
        },
        "supportedAggregationTypes": {
          "description": "Supported aggregation types",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedTimeGrainTypes": {
          "description": "Supported time grain types",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fillGapWithZero": {
          "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
          "type": "boolean"
        },
        "dimensions": {
          "description": "Dimensions of the metric",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          }
        },
        "enableRegionalMdmAccount": {
          "description": "Whether or not the service is using regional MDM accounts.",
          "type": "string"
        },
        "sourceMdmAccount": {
          "description": "The name of the MDM account.",
          "type": "string"
        },
        "sourceMdmNamespace": {
          "description": "The name of the MDM namespace.",
          "type": "string"
        }
      }
    },
    "MetricDimension": {
      "description": "Specifications of the Dimension of metrics",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the dimension",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the dimension",
          "type": "string"
        }
      }
    },
    "ExpressRouteAuthorization": {
      "description": "Authorization for an ExpressRoute",
      "properties": {
        "name": {
          "description": "The name of the ExpressRoute",
          "type": "string"
        },
        "id": {
          "description": "The ID of the ExpressRoute",
          "type": "string",
          "readOnly": true
        },
        "key": {
          "description": "The key of the ExpressRoute",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Circuit": {
      "description": "An ExpressRoute Circuit",
      "properties": {
        "primarySubnet": {
          "type": "string",
          "readOnly": true,
          "description": "CIDR of primary subnet"
        },
        "secondarySubnet": {
          "type": "string",
          "readOnly": true,
          "description": "CIDR of secondary subnet"
        },
        "expressRouteID": {
          "type": "string",
          "readOnly": true,
          "description": "Identifier of the ExpressRoute (Microsoft Colo only)"
        },
        "authorizations": {
          "type": "array",
          "description": "Authorizations for the ExpressRoute (Microsoft Colo only)",
          "items": {
            "$ref": "#/definitions/ExpressRouteAuthorization"
          }
        },
        "expressRoutePrivatePeeringID": {
          "type": "string",
          "readOnly": true,
          "description": "ExpressRoute private peering identifier"
        }
      }
    },
    "Endpoints": {
      "description": "Endpoint addresses",
      "properties": {
        "nsxtManager": {
          "description": "Endpoint for the NSX-T Data Center manager",
          "type": "string",
          "readOnly": true
        },
        "vcsa": {
          "description": "Endpoint for Virtual Center Server Appliance",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IdentitySource": {
      "description": "vCenter Single Sign On Identity Source",
      "properties": {
        "name": {
          "description": "The name of the identity source",
          "type": "string"
        },
        "alias": {
          "description": "The domain's NetBIOS name",
          "type": "string"
        },
        "domain": {
          "description": "The domain's dns name",
          "type": "string"
        },
        "baseUserDN": {
          "description": "The base distinguished name for users",
          "type": "string"
        },
        "baseGroupDN": {
          "description": "The base distinguished name for groups",
          "type": "string"
        },
        "primaryServer": {
          "description": "Primary server URL",
          "type": "string"
        },
        "secondaryServer": {
          "description": "Secondary server URL",
          "type": "string"
        },
        "ssl": {
          "description": "Protect LDAP communication using SSL certificate (LDAPS)",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SslEnum",
            "modelAsString": true
          }
        },
        "username": {
          "description": "The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group",
          "type": "string"
        },
        "password": {
          "description": "The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.",
          "type": "string"
        }
      }
    },
    "PrivateCloud": {
      "description": "A private cloud resource",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "sku": {
          "description": "The private cloud SKU",
          "$ref": "#/definitions/Sku"
        },
        "properties": {
          "description": "The properties of a private cloud resource",
          "$ref": "#/definitions/PrivateCloudProperties"
        }
      }
    },
    "PrivateCloudProperties": {
      "description": "The properties of a private cloud resource",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Cancelled",
            "Pending",
            "Building",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "PrivateCloudProvisioningState",
            "modelAsString": true
          }
        },
        "circuit": {
          "description": "An ExpressRoute Circuit",
          "$ref": "#/definitions/Circuit"
        },
        "cluster": {
          "description": "The default cluster used for management",
          "$ref": "#/definitions/DefaultClusterProperties"
        },
        "clusters": {
          "description": "The clusters",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "endpoints": {
          "description": "The endpoints",
          "readOnly": true,
          "$ref": "#/definitions/Endpoints"
        },
        "internet": {
          "description": "Connectivity to internet is enabled or disabled",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "InternetEnum",
            "modelAsString": true
          }
        },
        "identitySources": {
          "description": "vCenter Single Sign On Identity Sources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentitySource"
          }
        },
        "networkBlock": {
          "description": "The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22",
          "type": "string"
        },
        "managementNetwork": {
          "description": "Network used to access vCenter Server and NSX-T Manager",
          "type": "string",
          "readOnly": true
        },
        "provisioningNetwork": {
          "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
          "type": "string",
          "readOnly": true
        },
        "vmotionNetwork": {
          "description": "Used for live migration of virtual machines",
          "type": "string",
          "readOnly": true
        },
        "vcenterPassword": {
          "description": "Optionally, set the vCenter admin password when the private cloud is created",
          "type": "string"
        },
        "nsxtPassword": {
          "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
          "type": "string"
        },
        "vcenterCertificateThumbprint": {
          "description": "Thumbprint of the vCenter Server SSL certificate",
          "type": "string",
          "readOnly": true
        },
        "nsxtCertificateThumbprint": {
          "description": "Thumbprint of the NSX-T Manager SSL certificate",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Cluster": {
      "description": "A cluster resource",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties of a cluster resource",
          "$ref": "#/definitions/ClusterProperties"
        }
      }
    },
    "DefaultClusterProperties": {
      "description": "The properties of a default cluster",
      "properties": {
        "clusterID": {
          "description": "The deprecated identity",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "clusterId": {
          "description": "The identity",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "clusterSize": {
          "description": "The cluster size",
          "type": "integer",
          "format": "int32"
        },
        "hosts": {
          "description": "The hosts",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ClusterProperties": {
      "description": "The properties of a cluster",
      "allOf": [
        {
          "$ref": "#/definitions/DefaultClusterProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The state of the cluster provisioning",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Cancelled",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ClusterProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateCloudList": {
      "description": "A paged list of private clouds",
      "properties": {
        "value": {
          "description": "The items on the page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PrivateCloud"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ClusterList": {
      "description": "A paged list of clusters",
      "properties": {
        "value": {
          "description": "The items on a page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AdminCredentials": {
      "description": "Administrative credentials for accessing vCenter and NSX-T",
      "properties": {
        "nsxtUsername": {
          "description": "NSX-T Manager username",
          "type": "string",
          "readOnly": true
        },
        "nsxtPassword": {
          "description": "NSX-T Manager password",
          "type": "string",
          "readOnly": true
        },
        "vcenterUsername": {
          "description": "vCenter admin username",
          "type": "string",
          "readOnly": true
        },
        "vcenterPassword": {
          "description": "vCenter admin password",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Sku": {
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU."
        }
      },
      "required": [
        "name"
      ]
    }
  }
}
