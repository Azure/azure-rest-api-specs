{
  "swagger": "2.0",
  "info": {
    "title": "Azure VMware Solution API",
    "version": "2023-03-01",
    "description": "Azure VMware Solution API",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "PrivateClouds"
    },
    {
      "name": "Clusters"
    },
    {
      "name": "Datastores"
    },
    {
      "name": "HcxEnterpriseSites"
    },
    {
      "name": "ExpressRouteAuthorizations"
    },
    {
      "name": "GlobalReachConnections"
    },
    {
      "name": "WorkloadNetworks"
    },
    {
      "name": "WorkloadNetworkSegments"
    },
    {
      "name": "WorkloadNetworkDhcps"
    },
    {
      "name": "WorkloadNetworkGateways"
    },
    {
      "name": "WorkloadNetworkPortMirrorings"
    },
    {
      "name": "WorkloadNetworkVMGroups"
    },
    {
      "name": "WorkloadNetworkVirtualMachines"
    },
    {
      "name": "WorkloadNetworkDnsServices"
    },
    {
      "name": "WorkloadNetworkDnsZones"
    },
    {
      "name": "WorkloadNetworkPublicIPS"
    },
    {
      "name": "CloudLinks"
    },
    {
      "name": "Addons"
    },
    {
      "name": "VirtualMachines"
    },
    {
      "name": "PlacementPolicies"
    },
    {
      "name": "ScriptPackages"
    },
    {
      "name": "ScriptCmdlets"
    },
    {
      "name": "ScriptExecutions"
    }
  ],
  "paths": {
    "/providers/Microsoft.AVS/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/locations/{location}/checkQuotaAvailability": {
      "post": {
        "operationId": "LocationsOperations_CheckQuotaAvailability",
        "description": "Return quota for subscription by region",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "Azure region",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Quota"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/locations/{location}/checkTrialAvailability": {
      "post": {
        "operationId": "LocationsOperations_CheckTrialAvailability",
        "description": "Return trial status for subscription by region",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "Azure region",
            "required": true,
            "type": "string"
          },
          {
            "name": "sku",
            "in": "body",
            "description": "The sku to check for trial availability",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Sku"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/privateClouds": {
      "get": {
        "operationId": "PrivateClouds_ListInSubscription",
        "tags": [
          "PrivateClouds"
        ],
        "description": "List private clouds in a subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateCloudListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds": {
      "get": {
        "operationId": "PrivateClouds_ListByResourceGroup",
        "tags": [
          "PrivateClouds"
        ],
        "description": "List private clouds in a resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateCloudListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}": {
      "get": {
        "operationId": "PrivateClouds_Get",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Get a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "PrivateClouds_CreateOrUpdate",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Create or update a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateCloud' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "201": {
            "description": "Resource 'PrivateCloud' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "PrivateClouds_Update",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Update a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateCloudUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateClouds_Delete",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Delete a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons": {
      "get": {
        "operationId": "Addons_ListByPrivateCloud",
        "tags": [
          "Addons"
        ],
        "description": "List addons in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AddonListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons/{addonName}": {
      "get": {
        "operationId": "Addons_Get",
        "tags": [
          "Addons"
        ],
        "description": "Get an addon by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "addonName",
            "in": "path",
            "description": "Name of the addon for the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Addons_CreateOrUpdate",
        "tags": [
          "Addons"
        ],
        "description": "Create or update a addon in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "addonName",
            "in": "path",
            "description": "Name of the addon for the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Addon' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          },
          "201": {
            "description": "Resource 'Addon' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Addon"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Addons_Delete",
        "tags": [
          "Addons"
        ],
        "description": "Delete a addon in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "addonName",
            "in": "path",
            "description": "Name of the addon for the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/authorizations": {
      "get": {
        "operationId": "ExpressRouteAuthorizations_ListByPrivateCloud",
        "tags": [
          "ExpressRouteAuthorizations"
        ],
        "description": "List ExpressRoute Circuit Authorizations in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorizationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/authorizations/{authorizationName}": {
      "get": {
        "operationId": "ExpressRouteAuthorizations_Get",
        "tags": [
          "ExpressRouteAuthorizations"
        ],
        "description": "Get an ExpressRoute Circuit Authorization by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of the ExpressRoute Circuit Authorization in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorization"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ExpressRouteAuthorizations_CreateOrUpdate",
        "tags": [
          "ExpressRouteAuthorizations"
        ],
        "description": "Create or update an ExpressRoute Circuit Authorization in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of the ExpressRoute Circuit Authorization in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ExpressRouteAuthorization' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorization"
            }
          },
          "201": {
            "description": "Resource 'ExpressRouteAuthorization' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorization"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ExpressRouteAuthorizations_Delete",
        "tags": [
          "ExpressRouteAuthorizations"
        ],
        "description": "Delete an ExpressRoute Circuit Authorization in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of the ExpressRoute Circuit Authorization in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/cloudLinks": {
      "get": {
        "operationId": "CloudLinks_ListByPrivateCloud",
        "tags": [
          "CloudLinks"
        ],
        "description": "List cloud link in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudLinkListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/cloudLinks/{cloudLinkName}": {
      "get": {
        "operationId": "CloudLinks_Get",
        "tags": [
          "CloudLinks"
        ],
        "description": "Get an cloud link by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cloudLinkName",
            "in": "path",
            "description": "Name of the cloud link resource",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "CloudLinks_CreateOrUpdate",
        "tags": [
          "CloudLinks"
        ],
        "description": "Create or update a cloud link in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cloudLinkName",
            "in": "path",
            "description": "Name of the cloud link resource",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudLink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CloudLink' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CloudLink"
            }
          },
          "201": {
            "description": "Resource 'CloudLink' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CloudLink"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CloudLinks_Delete",
        "tags": [
          "CloudLinks"
        ],
        "description": "Delete a cloud link in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cloudLinkName",
            "in": "path",
            "description": "Name of the cloud link resource",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters": {
      "get": {
        "operationId": "Clusters_ListByPrivateCloud",
        "tags": [
          "Clusters"
        ],
        "description": "List clusters in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}": {
      "get": {
        "operationId": "Clusters_Get",
        "tags": [
          "Clusters"
        ],
        "description": "Get a cluster by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Clusters_CreateOrUpdate",
        "tags": [
          "Clusters"
        ],
        "description": "Create or update a cluster in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Cluster' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "Resource 'Cluster' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Clusters_Update",
        "tags": [
          "Clusters"
        ],
        "description": "Update a cluster in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Clusters_Delete",
        "tags": [
          "Clusters"
        ],
        "description": "Delete a cluster in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/datastores": {
      "get": {
        "operationId": "Datastores_ListByCluster",
        "tags": [
          "Datastores"
        ],
        "description": "List datastores in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatastoreListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/datastores/{datastoreName}": {
      "get": {
        "operationId": "Datastores_Get",
        "tags": [
          "Datastores"
        ],
        "description": "Get a datastore in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "description": "Name of the datastore in the private cloud cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Datastore"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Datastores_CreateOrUpdate",
        "tags": [
          "Datastores"
        ],
        "description": "Create or update a datastore in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "description": "Name of the datastore in the private cloud cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Datastore"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Datastore' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Datastore"
            }
          },
          "201": {
            "description": "Resource 'Datastore' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Datastore"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Datastores_Delete",
        "tags": [
          "Datastores"
        ],
        "description": "Delete a datastore in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "description": "Name of the datastore in the private cloud cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/listZones": {
      "post": {
        "operationId": "Clusters_ListZones",
        "tags": [
          "Clusters"
        ],
        "description": "List hosts by zone in a cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterZoneList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/placementPolicies": {
      "get": {
        "operationId": "PlacementPolicies_ListByCluster",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "List placement policies in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlacementPolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/placementPolicies/{placementPolicyName}": {
      "get": {
        "operationId": "PlacementPolicies_Get",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "Get a placement policy by name in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyName",
            "in": "path",
            "description": "Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement policy",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlacementPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "PlacementPolicies_CreateOrUpdate",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "Create or update a placement policy in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyName",
            "in": "path",
            "description": "Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement policy",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlacementPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PlacementPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PlacementPolicy"
            }
          },
          "201": {
            "description": "Resource 'PlacementPolicy' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PlacementPolicy"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "PlacementPolicies_Update",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "Update a placement policy in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyName",
            "in": "path",
            "description": "Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement policy",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlacementPolicyUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlacementPolicy"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PlacementPolicies_Delete",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "Delete a placement policy in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyName",
            "in": "path",
            "description": "Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement policy",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/virtualMachines": {
      "get": {
        "operationId": "VirtualMachines_ListByCluster",
        "tags": [
          "VirtualMachines"
        ],
        "description": "List of virtual machines in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualMachineListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/virtualMachines/{virtualMachineId}": {
      "get": {
        "operationId": "VirtualMachines_Get",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Get a virtual machine by id in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "virtualMachineId",
            "in": "path",
            "description": "Virtual Machine identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/virtualMachines/{virtualMachineId}/restrictMovement": {
      "post": {
        "operationId": "VirtualMachines_RestrictMovement",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Enable or disable DRS-driven VM movement restriction",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "virtualMachineId",
            "in": "path",
            "description": "Virtual Machine identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualMachineRestrictMovement"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/dhcpConfigurations": {
      "get": {
        "operationId": "WorkloadNetworkDhcps_ListByPrivateCloud",
        "tags": [
          "WorkloadNetworkDhcps"
        ],
        "description": "List dhcp in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcpListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/dhcpConfigurations/{dhcpId}": {
      "get": {
        "operationId": "WorkloadNetworkDhcps_GetDhcp",
        "tags": [
          "WorkloadNetworkDhcps"
        ],
        "description": "Get dhcp by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dhcpId",
            "in": "path",
            "description": "NSX DHCP identifier. Generally the same as the DHCP display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworkDhcps_CreateDhcp",
        "tags": [
          "WorkloadNetworkDhcps"
        ],
        "description": "Create dhcp by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dhcpId",
            "in": "path",
            "description": "NSX DHCP identifier. Generally the same as the DHCP display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkDhcp' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkDhcp' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkloadNetworkDhcps_UpdateDhcp",
        "tags": [
          "WorkloadNetworkDhcps"
        ],
        "description": "Create or update dhcp by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dhcpId",
            "in": "path",
            "description": "NSX DHCP identifier. Generally the same as the DHCP display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcpUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworkDhcps_DeleteDhcp",
        "tags": [
          "WorkloadNetworkDhcps"
        ],
        "description": "Delete dhcp by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dhcpId",
            "in": "path",
            "description": "NSX DHCP identifier. Generally the same as the DHCP display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/dnsServices": {
      "get": {
        "operationId": "WorkloadNetworkDnsServices_ListByPrivateCloud",
        "tags": [
          "WorkloadNetworkDnsServices"
        ],
        "description": "List of DNS services in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsServiceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/dnsServices/{dnsServiceId}": {
      "get": {
        "operationId": "WorkloadNetworkDnsServices_GetDnsService",
        "tags": [
          "WorkloadNetworkDnsServices"
        ],
        "description": "Get a DNS service by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsServiceId",
            "in": "path",
            "description": "NSX DNS Service identifier. Generally the same as the DNS Service's display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworkDnsServices_CreateDnsService",
        "tags": [
          "WorkloadNetworkDnsServices"
        ],
        "description": "Create a DNS service by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsServiceId",
            "in": "path",
            "description": "NSX DNS Service identifier. Generally the same as the DNS Service's display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkDnsService' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkDnsService' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkloadNetworkDnsServices_UpdateDnsService",
        "tags": [
          "WorkloadNetworkDnsServices"
        ],
        "description": "Create or update a DNS service by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsServiceId",
            "in": "path",
            "description": "NSX DNS Service identifier. Generally the same as the DNS Service's display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsServiceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworkDnsServices_DeleteDnsService",
        "tags": [
          "WorkloadNetworkDnsServices"
        ],
        "description": "Delete a DNS service by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsServiceId",
            "in": "path",
            "description": "NSX DNS Service identifier. Generally the same as the DNS Service's display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/dnsZones": {
      "get": {
        "operationId": "WorkloadNetworkDnsZones_ListByPrivateCloud",
        "tags": [
          "WorkloadNetworkDnsZones"
        ],
        "description": "List of DNS zones in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZoneListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/dnsZones/{dnsZoneId}": {
      "get": {
        "operationId": "WorkloadNetworkDnsZones_GetDnsZone",
        "tags": [
          "WorkloadNetworkDnsZones"
        ],
        "description": "Get a DNS zone by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsZoneId",
            "in": "path",
            "description": "NSX DNS Zone identifier. Generally the same as the DNS Zone's display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworkDnsZones_CreateDnsZone",
        "tags": [
          "WorkloadNetworkDnsZones"
        ],
        "description": "Create a DNS zone by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsZoneId",
            "in": "path",
            "description": "NSX DNS Zone identifier. Generally the same as the DNS Zone's display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkDnsZone' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkDnsZone' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkloadNetworkDnsZones_UpdateDnsZone",
        "tags": [
          "WorkloadNetworkDnsZones"
        ],
        "description": "Create or update a DNS zone by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsZoneId",
            "in": "path",
            "description": "NSX DNS Zone identifier. Generally the same as the DNS Zone's display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZoneUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworkDnsZones_DeleteDnsZone",
        "tags": [
          "WorkloadNetworkDnsZones"
        ],
        "description": "Delete a DNS zone by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsZoneId",
            "in": "path",
            "description": "NSX DNS Zone identifier. Generally the same as the DNS Zone's display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/gateways": {
      "get": {
        "operationId": "WorkloadNetworkGateways_ListByPrivateCloud",
        "tags": [
          "WorkloadNetworkGateways"
        ],
        "description": "List of gateways in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkGatewayListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/gateways/{gatewayId}": {
      "get": {
        "operationId": "WorkloadNetworkGateways_GetGateway",
        "tags": [
          "WorkloadNetworkGateways"
        ],
        "description": "Get a gateway by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "NSX Gateway identifier. Generally the same as the Gateway's display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkGateway"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/globalReachConnections": {
      "get": {
        "operationId": "GlobalReachConnections_ListByPrivateCloud",
        "tags": [
          "GlobalReachConnections"
        ],
        "description": "List global reach connections in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GlobalReachConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/globalReachConnections/{globalReachConnectionName}": {
      "get": {
        "operationId": "GlobalReachConnections_Get",
        "tags": [
          "GlobalReachConnections"
        ],
        "description": "Get a global reach connection by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "globalReachConnectionName",
            "in": "path",
            "description": "Name of the global reach connection in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GlobalReachConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "GlobalReachConnections_CreateOrUpdate",
        "tags": [
          "GlobalReachConnections"
        ],
        "description": "Create or update a global reach connection in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "globalReachConnectionName",
            "in": "path",
            "description": "Name of the global reach connection in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GlobalReachConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'GlobalReachConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/GlobalReachConnection"
            }
          },
          "201": {
            "description": "Resource 'GlobalReachConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/GlobalReachConnection"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "GlobalReachConnections_Delete",
        "tags": [
          "GlobalReachConnections"
        ],
        "description": "Delete a global reach connection in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "globalReachConnectionName",
            "in": "path",
            "description": "Name of the global reach connection in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites": {
      "get": {
        "operationId": "HcxEnterpriseSites_ListByPrivateCloud",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "description": "List HCX on-premises key in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSiteListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites/{hcxEnterpriseSiteName}": {
      "get": {
        "operationId": "HcxEnterpriseSites_Get",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "description": "Get an HCX on-premises key by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "hcxEnterpriseSiteName",
            "in": "path",
            "description": "Name of the HCX Enterprise Site in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "HcxEnterpriseSites_CreateOrUpdate",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "description": "Create or update an activation key for on-premises HCX site",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "hcxEnterpriseSiteName",
            "in": "path",
            "description": "Name of the HCX Enterprise Site in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'HcxEnterpriseSite' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSite"
            }
          },
          "201": {
            "description": "Resource 'HcxEnterpriseSite' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "HcxEnterpriseSites_Delete",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "description": "Delete HCX on-premises key in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "hcxEnterpriseSiteName",
            "in": "path",
            "description": "Name of the HCX Enterprise Site in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/listAdminCredentials": {
      "post": {
        "operationId": "PrivateClouds_ListAdminCredentials",
        "tags": [
          "PrivateClouds"
        ],
        "description": "List the admin credentials for the private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AdminCredentials"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/portMirroringProfiles": {
      "get": {
        "operationId": "WorkloadNetworkPortMirrorings_ListByPrivateCloud",
        "tags": [
          "WorkloadNetworkPortMirrorings"
        ],
        "description": "List of port mirroring profiles in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroringListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/portMirroringProfiles/{portMirroringId}": {
      "get": {
        "operationId": "WorkloadNetworkPortMirrorings_GetPortMirroring",
        "tags": [
          "WorkloadNetworkPortMirrorings"
        ],
        "description": "Get a port mirroring profile by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "portMirroringId",
            "in": "path",
            "description": "NSX Port Mirroring identifier. Generally the same as the Port Mirroring display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworkPortMirrorings_CreatePortMirroring",
        "tags": [
          "WorkloadNetworkPortMirrorings"
        ],
        "description": "Create a port mirroring profile by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "portMirroringId",
            "in": "path",
            "description": "NSX Port Mirroring identifier. Generally the same as the Port Mirroring display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkPortMirroring' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkPortMirroring' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkloadNetworkPortMirrorings_UpdatePortMirroring",
        "tags": [
          "WorkloadNetworkPortMirrorings"
        ],
        "description": "Create or update a port mirroring profile by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "portMirroringId",
            "in": "path",
            "description": "NSX Port Mirroring identifier. Generally the same as the Port Mirroring display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroringUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworkPortMirrorings_DeletePortMirroring",
        "tags": [
          "WorkloadNetworkPortMirrorings"
        ],
        "description": "Delete a port mirroring profile by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "portMirroringId",
            "in": "path",
            "description": "NSX Port Mirroring identifier. Generally the same as the Port Mirroring display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/publicIPs": {
      "get": {
        "operationId": "WorkloadNetworkPublicIps_ListByPrivateCloud",
        "tags": [
          "WorkloadNetworkPublicIPS"
        ],
        "description": "List of Public IP Blocks in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIPListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/publicIPs/{publicIPId}": {
      "get": {
        "operationId": "WorkloadNetworkPublicIps_GetPublicIp",
        "tags": [
          "WorkloadNetworkPublicIPS"
        ],
        "description": "Get a Public IP Block by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "publicIPId",
            "in": "path",
            "description": "NSX Public IP Block identifier. Generally the same as the Public IP Block's display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIP"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworkPublicIps_CreatePublicIp",
        "tags": [
          "WorkloadNetworkPublicIPS"
        ],
        "description": "Create a Public IP Block by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "publicIPId",
            "in": "path",
            "description": "NSX Public IP Block identifier. Generally the same as the Public IP Block's display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIP"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkPublicIP' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIP"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkPublicIP' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIP"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworkPublicIps_DeletePublicIp",
        "tags": [
          "WorkloadNetworkPublicIPS"
        ],
        "description": "Delete a Public IP Block by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "publicIPId",
            "in": "path",
            "description": "NSX Public IP Block identifier. Generally the same as the Public IP Block's display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateNsxtPassword": {
      "post": {
        "operationId": "PrivateClouds_RotateNsxtPassword",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Rotate the NSX-T Manager password",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateVcenterPassword": {
      "post": {
        "operationId": "PrivateClouds_RotateVcenterPassword",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Rotate the vCenter password",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions": {
      "get": {
        "operationId": "ScriptExecutions_ListByPrivateCloud",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "List script executions in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptExecutionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions/{scriptExecutionName}": {
      "get": {
        "operationId": "ScriptExecutions_Get",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "Get an script execution by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecutionName",
            "in": "path",
            "description": "Name of the user-invoked script execution resource",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ScriptExecutions_CreateOrUpdate",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "Create or update a script execution in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecutionName",
            "in": "path",
            "description": "Name of the user-invoked script execution resource",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ScriptExecution' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            }
          },
          "201": {
            "description": "Resource 'ScriptExecution' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ScriptExecutions_Delete",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "Cancel a ScriptExecution in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecutionName",
            "in": "path",
            "description": "Name of the user-invoked script execution resource",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions/{scriptExecutionName}/getExecutionLogs": {
      "post": {
        "operationId": "ScriptExecutions_GetExecutionLogs",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "Return the logs for a script execution resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecutionName",
            "in": "path",
            "description": "Name of the user-invoked script execution resource",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScriptOutputStreamType"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages": {
      "get": {
        "operationId": "ScriptPackages_ListByPrivateCloud",
        "tags": [
          "ScriptPackages"
        ],
        "description": "List script packages available to run on the private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptPackageListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}": {
      "get": {
        "operationId": "ScriptPackages_Get",
        "tags": [
          "ScriptPackages"
        ],
        "description": "Get a script package available to run on a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptPackageName",
            "in": "path",
            "description": "Name of the script package in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._@]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptPackage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}/scriptCmdlets": {
      "get": {
        "operationId": "ScriptCmdlets_ListByScriptPackage",
        "tags": [
          "ScriptCmdlets"
        ],
        "description": "List script cmdlet resources available for a private cloud to create a script execution resource on a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptPackageName",
            "in": "path",
            "description": "Name of the script package in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._@]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptCmdletListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}/scriptCmdlets/{scriptCmdletName}": {
      "get": {
        "operationId": "ScriptCmdlets_Get",
        "tags": [
          "ScriptCmdlets"
        ],
        "description": "Return information about a script cmdlet resource in a specific package on a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptPackageName",
            "in": "path",
            "description": "Name of the script package in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._@]+$"
          },
          {
            "name": "scriptCmdletName",
            "in": "path",
            "description": "Name of the script cmdlet resource in the script package in the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScriptCmdlet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/segments": {
      "get": {
        "operationId": "WorkloadNetworkSegments_ListByPrivateCloud",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "List of segments in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegmentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/segments/{segmentId}": {
      "get": {
        "operationId": "WorkloadNetworkSegments_GetSegment",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "Get a segment by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "NSX Segment identifier. Generally the same as the Segment's display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworkSegments_CreateSegments",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "Create a segment by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "NSX Segment identifier. Generally the same as the Segment's display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkSegment' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkSegment' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkloadNetworkSegments_UpdateSegments",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "Create or update a segment by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "NSX Segment identifier. Generally the same as the Segment's display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegmentUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworkSegments_DeleteSegment",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "Delete a segment by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "NSX Segment identifier. Generally the same as the Segment's display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/virtualMachines": {
      "get": {
        "operationId": "WorkloadNetworkVirtualMachines_ListByPrivateCloud",
        "tags": [
          "WorkloadNetworkVirtualMachines"
        ],
        "description": "List of virtual machines in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVirtualMachineListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/virtualMachines/{virtualMachineId}": {
      "get": {
        "operationId": "WorkloadNetworkVirtualMachines_GetVirtualMachine",
        "tags": [
          "WorkloadNetworkVirtualMachines"
        ],
        "description": "Get a virtual machine by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "virtualMachineId",
            "in": "path",
            "description": "Virtual Machine identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVirtualMachine"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/vmGroups": {
      "get": {
        "operationId": "WorkloadNetworkVmGroups_ListByPrivateCloud",
        "tags": [
          "WorkloadNetworkVMGroups"
        ],
        "description": "List of vm groups in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/vmGroups/{vmGroupId}": {
      "get": {
        "operationId": "WorkloadNetworkVmGroups_GetVmGroup",
        "tags": [
          "WorkloadNetworkVMGroups"
        ],
        "description": "Get a vm group by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "vmGroupId",
            "in": "path",
            "description": "NSX VM Group identifier. Generally the same as the VM Group's display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworkVmGroups_CreateVmGroup",
        "tags": [
          "WorkloadNetworkVMGroups"
        ],
        "description": "Create a vm group by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "vmGroupId",
            "in": "path",
            "description": "NSX VM Group identifier. Generally the same as the VM Group's display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkVMGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkVMGroup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "WorkloadNetworkVmGroups_UpdateVmGroup",
        "tags": [
          "WorkloadNetworkVMGroups"
        ],
        "description": "Create or update a vm group by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "vmGroupId",
            "in": "path",
            "description": "NSX VM Group identifier. Generally the same as the VM Group's display name",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroupUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "WorkloadNetworkVmGroups_DeleteVmGroup",
        "tags": [
          "WorkloadNetworkVMGroups"
        ],
        "description": "Delete a vm group by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "vmGroupId",
            "in": "path",
            "description": "NSX VM Group identifier. Generally the same as the VM Group's display name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks": {
      "get": {
        "operationId": "WorkloadNetworks_ListByPrivateCloud",
        "tags": [
          "WorkloadNetworks"
        ],
        "description": "List of workload networks in a private cloud.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/{workloadNetworkName}": {
      "get": {
        "operationId": "WorkloadNetworks_Get",
        "tags": [
          "WorkloadNetworks"
        ],
        "description": "Get a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkName",
            "in": "path",
            "description": "Name for the workload network in the private cloud",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "WorkloadNetworkName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Addon": {
      "type": "object",
      "description": "An addon resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AddonProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AddonArcProperties": {
      "type": "object",
      "description": "The properties of an Arc addon",
      "properties": {
        "vCenter": {
          "type": "string",
          "description": "The VMware vCenter resource ID"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AddonProperties"
        }
      ],
      "x-ms-discriminator-value": "Arc"
    },
    "AddonHcxProperties": {
      "type": "object",
      "description": "The properties of an HCX addon",
      "properties": {
        "offer": {
          "type": "string",
          "description": "The HCX offer, example VMware MaaS Cloud Provider (Enterprise)"
        }
      },
      "required": [
        "offer"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AddonProperties"
        }
      ],
      "x-ms-discriminator-value": "HCX"
    },
    "AddonListResult": {
      "type": "object",
      "description": "The response of a Addon list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Addon items on this page",
          "items": {
            "$ref": "#/definitions/Addon"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AddonProperties": {
      "type": "object",
      "description": "The properties of an addon",
      "properties": {
        "addonType": {
          "type": "string",
          "description": "Discriminator property for AddonProperties."
        },
        "provisioningState": {
          "$ref": "#/definitions/AddonProvisioningState",
          "description": "The state of the addon provisioning",
          "readOnly": true
        }
      },
      "discriminator": "addonType",
      "required": [
        "addonType"
      ]
    },
    "AddonProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Cancelled",
        "Building",
        "Deleting",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "AddonProvisioningState",
        "modelAsString": true
      }
    },
    "AddonSrmProperties": {
      "type": "object",
      "description": "The properties of a Site Recovery Manager (SRM) addon",
      "properties": {
        "licenseKey": {
          "type": "string",
          "description": "The Site Recovery Manager (SRM) license"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AddonProperties"
        }
      ],
      "x-ms-discriminator-value": "SRM"
    },
    "AddonType": {
      "type": "string",
      "enum": [
        "SRM",
        "VR",
        "HCX",
        "Arc"
      ],
      "x-ms-enum": {
        "name": "AddonType",
        "modelAsString": true
      }
    },
    "AddonVrProperties": {
      "type": "object",
      "description": "The properties of a vSphere Replication (VR) addon",
      "properties": {
        "vrsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The vSphere Replication Server (VRS) count"
        }
      },
      "required": [
        "vrsCount"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AddonProperties"
        }
      ],
      "x-ms-discriminator-value": "VR"
    },
    "AdminCredentials": {
      "type": "object",
      "description": "Administrative credentials for accessing vCenter and NSX-T",
      "properties": {
        "nsxtUsername": {
          "type": "string",
          "description": "NSX-T Manager username",
          "readOnly": true
        },
        "nsxtPassword": {
          "type": "string",
          "description": "NSX-T Manager password",
          "readOnly": true
        },
        "vcenterUsername": {
          "type": "string",
          "description": "vCenter admin username",
          "readOnly": true
        },
        "vcenterPassword": {
          "type": "string",
          "description": "vCenter admin password",
          "readOnly": true
        }
      }
    },
    "AffinityStrength": {
      "type": "string",
      "enum": [
        "Should",
        "Must"
      ],
      "x-ms-enum": {
        "name": "AffinityStrength",
        "modelAsString": true
      }
    },
    "AffinityType": {
      "type": "string",
      "enum": [
        "Affinity",
        "AntiAffinity"
      ],
      "x-ms-enum": {
        "name": "AffinityType",
        "modelAsString": true
      }
    },
    "AvailabilityProperties": {
      "type": "object",
      "description": "The properties describing private cloud availability zone distribution",
      "properties": {
        "strategy": {
          "$ref": "#/definitions/AvailabilityStrategy",
          "description": "The availability strategy for the private cloud"
        },
        "zone": {
          "type": "integer",
          "format": "int32",
          "description": "The primary availability zone for the private cloud"
        },
        "secondaryZone": {
          "type": "integer",
          "format": "int32",
          "description": "The secondary availability zone for the private cloud"
        }
      }
    },
    "AvailabilityStrategy": {
      "type": "string",
      "enum": [
        "SingleZone",
        "DualZone"
      ],
      "x-ms-enum": {
        "name": "AvailabilityStrategy",
        "modelAsString": true
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "AzureHybridBenefitType": {
      "type": "string",
      "enum": [
        "SqlHost",
        "None"
      ],
      "x-ms-enum": {
        "name": "AzureHybridBenefitType",
        "modelAsString": true
      }
    },
    "Circuit": {
      "type": "object",
      "description": "An ExpressRoute Circuit",
      "properties": {
        "primarySubnet": {
          "type": "string",
          "description": "CIDR of primary subnet",
          "readOnly": true
        },
        "secondarySubnet": {
          "type": "string",
          "description": "CIDR of secondary subnet",
          "readOnly": true
        },
        "expressRouteID": {
          "type": "string",
          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
          "readOnly": true
        },
        "expressRoutePrivatePeeringID": {
          "type": "string",
          "description": "ExpressRoute Circuit private peering identifier",
          "readOnly": true
        }
      }
    },
    "CloudLink": {
      "type": "object",
      "description": "A cloud link resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloudLinkProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CloudLinkListResult": {
      "type": "object",
      "description": "The response of a CloudLink list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CloudLink items on this page",
          "items": {
            "$ref": "#/definitions/CloudLink"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CloudLinkProperties": {
      "type": "object",
      "description": "The properties of a cloud link.",
      "properties": {
        "status": {
          "$ref": "#/definitions/CloudLinkStatus",
          "description": "The state of the cloud link.",
          "readOnly": true
        },
        "linkedCloud": {
          "type": "string",
          "description": "Identifier of the other private cloud participating in the link."
        }
      }
    },
    "CloudLinkStatus": {
      "type": "string",
      "enum": [
        "Active",
        "Building",
        "Deleting",
        "Failed",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "CloudLinkStatus",
        "modelAsString": true
      }
    },
    "Cluster": {
      "type": "object",
      "description": "A cluster resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ClusterListResult": {
      "type": "object",
      "description": "The response of a Cluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Cluster items on this page",
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ClusterProperties": {
      "type": "object",
      "description": "The properties of a cluster",
      "properties": {
        "clusterSize": {
          "type": "integer",
          "format": "int32",
          "description": "The cluster size"
        },
        "provisioningState": {
          "$ref": "#/definitions/ClusterProvisioningState",
          "description": "The state of the cluster provisioning",
          "readOnly": true
        },
        "clusterId": {
          "type": "integer",
          "format": "int32",
          "description": "The identity",
          "readOnly": true
        },
        "hosts": {
          "type": "array",
          "description": "The hosts",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ClusterProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Cancelled",
        "Deleting",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ClusterProvisioningState",
        "modelAsString": true
      }
    },
    "ClusterUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Cluster.",
      "properties": {
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        },
        "properties": {
          "$ref": "#/definitions/ClusterUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ClusterUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Cluster.",
      "properties": {
        "clusterSize": {
          "type": "integer",
          "format": "int32",
          "description": "The cluster size"
        },
        "hosts": {
          "type": "array",
          "description": "The hosts",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ClusterZone": {
      "type": "object",
      "description": "Zone and associated hosts info",
      "properties": {
        "hosts": {
          "type": "array",
          "description": "List of hosts belonging to the availability zone in a cluster",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "zone": {
          "type": "string",
          "description": "Availability zone identifier",
          "readOnly": true
        }
      }
    },
    "ClusterZoneList": {
      "type": "object",
      "description": "List of all zones and associated hosts for a cluster",
      "properties": {
        "zones": {
          "type": "array",
          "description": "Zone and associated hosts info",
          "items": {
            "$ref": "#/definitions/ClusterZone"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CommonClusterProperties": {
      "type": "object",
      "description": "The common properties of a cluster",
      "properties": {
        "clusterSize": {
          "type": "integer",
          "format": "int32",
          "description": "The cluster size"
        },
        "provisioningState": {
          "$ref": "#/definitions/ClusterProvisioningState",
          "description": "The state of the cluster provisioning",
          "readOnly": true
        },
        "clusterId": {
          "type": "integer",
          "format": "int32",
          "description": "The identity",
          "readOnly": true
        },
        "hosts": {
          "type": "array",
          "description": "The hosts",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Datastore": {
      "type": "object",
      "description": "A datastore resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatastoreProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DatastoreListResult": {
      "type": "object",
      "description": "The response of a Datastore list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Datastore items on this page",
          "items": {
            "$ref": "#/definitions/Datastore"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DatastoreProperties": {
      "type": "object",
      "description": "The properties of a datastore",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/DatastoreProvisioningState",
          "description": "The state of the datastore provisioning",
          "readOnly": true
        },
        "netAppVolume": {
          "$ref": "#/definitions/NetAppVolume",
          "description": "An Azure NetApp Files volume"
        },
        "diskPoolVolume": {
          "$ref": "#/definitions/DiskPoolVolume",
          "description": "An iSCSI volume"
        },
        "status": {
          "$ref": "#/definitions/DatastoreStatus",
          "description": "The operational status of the datastore",
          "readOnly": true
        }
      }
    },
    "DatastoreProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Cancelled",
        "Pending",
        "Creating",
        "Updating",
        "Deleting",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "DatastoreProvisioningState",
        "modelAsString": true
      }
    },
    "DatastoreStatus": {
      "type": "string",
      "enum": [
        "Unknown",
        "Accessible",
        "Inaccessible",
        "Attached",
        "Detached",
        "LostCommunication",
        "DeadOrError"
      ],
      "x-ms-enum": {
        "name": "DatastoreStatus",
        "modelAsString": true
      }
    },
    "DhcpTypeEnum": {
      "type": "string",
      "enum": [
        "SERVER",
        "RELAY"
      ],
      "x-ms-enum": {
        "name": "DhcpTypeEnum",
        "modelAsString": true
      }
    },
    "DiskPoolVolume": {
      "type": "object",
      "description": "An iSCSI volume from Microsoft.StoragePool provider",
      "properties": {
        "targetId": {
          "type": "string",
          "description": "Azure resource ID of the iSCSI target"
        },
        "lunName": {
          "type": "string",
          "description": "Name of the LUN to be used for datastore"
        },
        "mountOption": {
          "$ref": "#/definitions/MountOptionEnum",
          "description": "Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN"
        },
        "path": {
          "type": "string",
          "description": "Device path",
          "readOnly": true
        }
      },
      "required": [
        "targetId",
        "lunName"
      ]
    },
    "DnsServiceLogLevelEnum": {
      "type": "string",
      "enum": [
        "DEBUG",
        "INFO",
        "WARNING",
        "ERROR",
        "FATAL"
      ],
      "x-ms-enum": {
        "name": "DnsServiceLogLevelEnum",
        "modelAsString": true
      }
    },
    "DnsServiceStatusEnum": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "x-ms-enum": {
        "name": "DnsServiceStatusEnum",
        "modelAsString": true
      }
    },
    "Encryption": {
      "type": "object",
      "description": "The properties of customer managed encryption key",
      "properties": {
        "status": {
          "$ref": "#/definitions/EncryptionState",
          "description": "Status of customer managed encryption key"
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/EncryptionKeyVaultProperties",
          "description": "The key vault where the encryption key is stored"
        }
      }
    },
    "EncryptionKeyStatus": {
      "type": "string",
      "enum": [
        "Connected",
        "AccessDenied"
      ],
      "x-ms-enum": {
        "name": "EncryptionKeyStatus",
        "modelAsString": true
      }
    },
    "EncryptionKeyVaultProperties": {
      "type": "object",
      "description": "An Encryption Key",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "The name of the key."
        },
        "keyVersion": {
          "type": "string",
          "description": "The version of the key."
        },
        "autoDetectedKeyVersion": {
          "type": "string",
          "description": "The auto-detected version of the key if versionType is auto-detected.",
          "readOnly": true
        },
        "keyVaultUrl": {
          "type": "string",
          "description": "The URL of the vault."
        },
        "keyState": {
          "$ref": "#/definitions/EncryptionKeyStatus",
          "description": "The state of key provided",
          "readOnly": true
        },
        "versionType": {
          "$ref": "#/definitions/EncryptionVersionType",
          "description": "Property of the key if user provided or auto detected",
          "readOnly": true
        }
      }
    },
    "EncryptionState": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EncryptionState",
        "modelAsString": true
      }
    },
    "EncryptionVersionType": {
      "type": "string",
      "enum": [
        "Fixed",
        "AutoDetected"
      ],
      "x-ms-enum": {
        "name": "EncryptionVersionType",
        "modelAsString": true
      }
    },
    "Endpoints": {
      "type": "object",
      "description": "Endpoint addresses",
      "properties": {
        "nsxtManager": {
          "type": "string",
          "description": "Endpoint for the NSX-T Data Center manager",
          "readOnly": true
        },
        "vcsa": {
          "type": "string",
          "description": "Endpoint for Virtual Center Server Appliance",
          "readOnly": true
        },
        "hcxCloudManager": {
          "type": "string",
          "description": "Endpoint for the HCX Cloud Manager",
          "readOnly": true
        }
      }
    },
    "ExpressRouteAuthorization": {
      "type": "object",
      "description": "ExpressRoute Circuit Authorization",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExpressRouteAuthorizationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ExpressRouteAuthorizationListResult": {
      "type": "object",
      "description": "The response of a ExpressRouteAuthorization list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ExpressRouteAuthorization items on this page",
          "items": {
            "$ref": "#/definitions/ExpressRouteAuthorization"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ExpressRouteAuthorizationProperties": {
      "type": "object",
      "description": "The properties of an ExpressRoute Circuit Authorization resource",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ExpressRouteAuthorizationProvisioningState",
          "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
          "readOnly": true
        },
        "expressRouteAuthorizationId": {
          "type": "string",
          "description": "The ID of the ExpressRoute Circuit Authorization",
          "readOnly": true
        },
        "expressRouteAuthorizationKey": {
          "type": "string",
          "description": "The key of the ExpressRoute Circuit Authorization",
          "readOnly": true
        },
        "expressRouteId": {
          "type": "string",
          "description": "The ID of the ExpressRoute Circuit"
        }
      }
    },
    "ExpressRouteAuthorizationProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ExpressRouteAuthorizationProvisioningState",
        "modelAsString": true
      }
    },
    "GlobalReachConnection": {
      "type": "object",
      "description": "A global reach connection resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GlobalReachConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GlobalReachConnectionListResult": {
      "type": "object",
      "description": "The response of a GlobalReachConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GlobalReachConnection items on this page",
          "items": {
            "$ref": "#/definitions/GlobalReachConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GlobalReachConnectionProperties": {
      "type": "object",
      "description": "The properties of a global reach connection",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/GlobalReachConnectionProvisioningState",
          "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
          "readOnly": true
        },
        "addressPrefix": {
          "type": "string",
          "description": "The network used for global reach carved out from the original network block provided for the private cloud",
          "readOnly": true
        },
        "authorizationKey": {
          "type": "string",
          "description": "Authorization key from the peer express route used for the global reach connection"
        },
        "circuitConnectionStatus": {
          "$ref": "#/definitions/GlobalReachConnectionStatus",
          "description": "The connection status of the global reach connection",
          "readOnly": true
        },
        "peerExpressRouteCircuit": {
          "type": "string",
          "description": "Identifier of the ExpressRoute Circuit to peer with in the global reach connection"
        },
        "expressRouteId": {
          "type": "string",
          "description": "The ID of the Private Cloud's ExpressRoute Circuit that is participating in the global reach connection"
        }
      }
    },
    "GlobalReachConnectionProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "GlobalReachConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "GlobalReachConnectionStatus": {
      "type": "string",
      "enum": [
        "Connected",
        "Connecting",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "GlobalReachConnectionStatus",
        "modelAsString": true
      }
    },
    "HcxEnterpriseSite": {
      "type": "object",
      "description": "An HCX Enterprise Site resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HcxEnterpriseSiteProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HcxEnterpriseSiteListResult": {
      "type": "object",
      "description": "The response of a HcxEnterpriseSite list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The HcxEnterpriseSite items on this page",
          "items": {
            "$ref": "#/definitions/HcxEnterpriseSite"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "HcxEnterpriseSiteProperties": {
      "type": "object",
      "description": "The properties of an HCX Enterprise Site",
      "properties": {
        "activationKey": {
          "type": "string",
          "description": "The activation key",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/HcxEnterpriseSiteStatus",
          "description": "The status of the HCX Enterprise Site",
          "readOnly": true
        }
      }
    },
    "HcxEnterpriseSiteStatus": {
      "type": "string",
      "enum": [
        "Available",
        "Consumed",
        "Deactivated",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "HcxEnterpriseSiteStatus",
        "modelAsString": true
      }
    },
    "IdentitySource": {
      "type": "object",
      "description": "vCenter Single Sign On Identity Source",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the identity source"
        },
        "alias": {
          "type": "string",
          "description": "The domain's NetBIOS name"
        },
        "domain": {
          "type": "string",
          "description": "The domain's dns name"
        },
        "baseUserDN": {
          "type": "string",
          "description": "The base distinguished name for users"
        },
        "baseGroupDN": {
          "type": "string",
          "description": "The base distinguished name for groups"
        },
        "primaryServer": {
          "type": "string",
          "description": "Primary server URL"
        },
        "secondaryServer": {
          "type": "string",
          "description": "Secondary server URL"
        },
        "ssl": {
          "$ref": "#/definitions/SslEnum",
          "description": "Protect LDAP communication using SSL certificate (LDAPS)"
        },
        "username": {
          "type": "string",
          "description": "The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group"
        },
        "password": {
          "type": "string",
          "description": "The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups."
        }
      }
    },
    "InternetEnum": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "InternetEnum",
        "modelAsString": true
      }
    },
    "LogSpecification": {
      "type": "object",
      "description": "Specifications of the Log for Azure Monitoring",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the log"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the log"
        },
        "blobDuration": {
          "type": "string",
          "description": "Blob duration of the log"
        }
      }
    },
    "ManagementCluster": {
      "type": "object",
      "description": "The properties of a management cluster",
      "properties": {
        "clusterSize": {
          "type": "integer",
          "format": "int32",
          "description": "The cluster size"
        },
        "provisioningState": {
          "$ref": "#/definitions/ClusterProvisioningState",
          "description": "The state of the cluster provisioning",
          "readOnly": true
        },
        "clusterId": {
          "type": "integer",
          "format": "int32",
          "description": "The identity",
          "readOnly": true
        },
        "hosts": {
          "type": "array",
          "description": "The hosts",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MetricDimension": {
      "type": "object",
      "description": "Specifications of the Dimension of metrics",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the dimension"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the dimension"
        },
        "internalName": {
          "type": "string",
          "description": "Name of the dimension as it appears in MDM"
        },
        "toBeExportedForShoebox": {
          "type": "boolean",
          "description": "A boolean flag indicating whether this dimension should be included for the shoebox export scenario"
        }
      }
    },
    "MetricSpecification": {
      "type": "object",
      "description": "Specifications of the Metrics for Azure Monitoring",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the metric"
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the metric"
        },
        "displayDescription": {
          "type": "string",
          "description": "Localized friendly description of the metric"
        },
        "unit": {
          "type": "string",
          "description": "Unit that makes sense for the metric"
        },
        "category": {
          "type": "string",
          "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category."
        },
        "aggregationType": {
          "type": "string",
          "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count."
        },
        "supportedAggregationTypes": {
          "type": "array",
          "description": "Supported aggregation types",
          "items": {
            "type": "string"
          }
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "description": "Supported time grain types",
          "items": {
            "type": "string"
          }
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published."
        },
        "dimensions": {
          "type": "array",
          "description": "Dimensions of the metric",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          },
          "x-ms-identifiers": []
        },
        "enableRegionalMdmAccount": {
          "type": "string",
          "description": "Whether or not the service is using regional MDM accounts."
        },
        "sourceMdmAccount": {
          "type": "string",
          "description": "The name of the MDM account."
        },
        "sourceMdmNamespace": {
          "type": "string",
          "description": "The name of the MDM namespace."
        }
      }
    },
    "MountOptionEnum": {
      "type": "string",
      "enum": [
        "MOUNT",
        "ATTACH"
      ],
      "x-ms-enum": {
        "name": "MountOptionEnum",
        "modelAsString": true
      }
    },
    "NetAppVolume": {
      "type": "object",
      "description": "An Azure NetApp Files volume from Microsoft.NetApp provider",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource ID of the NetApp volume"
        }
      },
      "required": [
        "id"
      ]
    },
    "NsxPublicIpQuotaRaisedEnum": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "NsxPublicIpQuotaRaisedEnum",
        "modelAsString": true
      }
    },
    "OperationProperties": {
      "type": "object",
      "description": "Extra Operation properties",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "Service specifications of the operation"
        }
      }
    },
    "OptionalParamEnum": {
      "type": "string",
      "enum": [
        "Optional",
        "Required"
      ],
      "x-ms-enum": {
        "name": "OptionalParamEnum",
        "modelAsString": true
      }
    },
    "PSCredentialExecutionParameter": {
      "type": "object",
      "description": "a powershell credential object",
      "properties": {
        "username": {
          "type": "string",
          "description": "username for login"
        },
        "password": {
          "type": "string",
          "description": "password for login"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ScriptExecutionParameter"
        }
      ],
      "x-ms-discriminator-value": "Credential"
    },
    "PlacementPolicy": {
      "type": "object",
      "description": "A vSphere Distributed Resource Scheduler (DRS) placement policy",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlacementPolicyProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PlacementPolicyListResult": {
      "type": "object",
      "description": "The response of a PlacementPolicy list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PlacementPolicy items on this page",
          "items": {
            "$ref": "#/definitions/PlacementPolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PlacementPolicyProperties": {
      "type": "object",
      "description": "Abstract placement policy properties",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for PlacementPolicyProperties."
        },
        "state": {
          "$ref": "#/definitions/PlacementPolicyState",
          "description": "Whether the placement policy is enabled or disabled"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the placement policy"
        },
        "provisioningState": {
          "$ref": "#/definitions/PlacementPolicyProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "PlacementPolicyProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Building",
        "Deleting",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "PlacementPolicyProvisioningState",
        "modelAsString": true
      }
    },
    "PlacementPolicyState": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PlacementPolicyState",
        "modelAsString": true
      }
    },
    "PlacementPolicyType": {
      "type": "string",
      "enum": [
        "VmVm",
        "VmHost"
      ],
      "x-ms-enum": {
        "name": "PlacementPolicyType",
        "modelAsString": true
      }
    },
    "PlacementPolicyUpdate": {
      "type": "object",
      "description": "The type used for update operations of the PlacementPolicy.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlacementPolicyUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "PlacementPolicyUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the PlacementPolicy.",
      "properties": {
        "state": {
          "$ref": "#/definitions/PlacementPolicyState",
          "description": "Whether the placement policy is enabled or disabled"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the placement policy"
        }
      }
    },
    "PortMirroringDirectionEnum": {
      "type": "string",
      "enum": [
        "INGRESS",
        "EGRESS",
        "BIDIRECTIONAL"
      ],
      "x-ms-enum": {
        "name": "PortMirroringDirectionEnum",
        "modelAsString": true
      }
    },
    "PortMirroringStatusEnum": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "x-ms-enum": {
        "name": "PortMirroringStatusEnum",
        "modelAsString": true
      }
    },
    "PrivateCloud": {
      "type": "object",
      "description": "A private cloud resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateCloudProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "PrivateCloudIdentity": {
      "type": "object",
      "description": "Identity for the virtual machine.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of private cloud identity. This property will only be provided for a system assigned identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID associated with the private cloud. This property will only be provided for a system assigned identity.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ResourceIdentityType",
          "description": "The type of identity used for the private cloud. The type 'SystemAssigned' refers to an implicitly created identity. The type 'None' will remove any identities from the Private Cloud."
        }
      }
    },
    "PrivateCloudListResult": {
      "type": "object",
      "description": "The response of a PrivateCloud list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateCloud items on this page",
          "items": {
            "$ref": "#/definitions/PrivateCloud"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateCloudProperties": {
      "type": "object",
      "description": "The properties of a private cloud resource",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/PrivateCloudProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "circuit": {
          "$ref": "#/definitions/Circuit",
          "description": "An ExpressRoute Circuit"
        },
        "endpoints": {
          "$ref": "#/definitions/Endpoints",
          "description": "The endpoints",
          "readOnly": true
        },
        "networkBlock": {
          "type": "string",
          "description": "The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "managementNetwork": {
          "type": "string",
          "description": "Network used to access vCenter Server and NSX-T Manager",
          "readOnly": true
        },
        "provisioningNetwork": {
          "type": "string",
          "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
          "readOnly": true
        },
        "vmotionNetwork": {
          "type": "string",
          "description": "Used for live migration of virtual machines",
          "readOnly": true
        },
        "vcenterPassword": {
          "type": "string",
          "description": "Optionally, set the vCenter admin password when the private cloud is created"
        },
        "nsxtPassword": {
          "type": "string",
          "description": "Optionally, set the NSX-T Manager password when the private cloud is created"
        },
        "vcenterCertificateThumbprint": {
          "type": "string",
          "description": "Thumbprint of the vCenter Server SSL certificate",
          "readOnly": true
        },
        "nsxtCertificateThumbprint": {
          "type": "string",
          "description": "Thumbprint of the NSX-T Manager SSL certificate",
          "readOnly": true
        },
        "externalCloudLinks": {
          "type": "array",
          "description": "Array of cloud link IDs from other clouds that connect to this one",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "secondaryCircuit": {
          "$ref": "#/definitions/Circuit",
          "description": "A secondary expressRoute circuit from a separate AZ. Only present in a stretched private cloud"
        },
        "nsxPublicIpQuotaRaised": {
          "$ref": "#/definitions/NsxPublicIpQuotaRaisedEnum",
          "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX Public IP count raised from 64 to 1024",
          "readOnly": true
        }
      },
      "required": [
        "networkBlock"
      ]
    },
    "PrivateCloudProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Cancelled",
        "Pending",
        "Building",
        "Deleting",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "PrivateCloudProvisioningState",
        "modelAsString": true
      }
    },
    "PrivateCloudUpdate": {
      "type": "object",
      "description": "The type used for update operations of the PrivateCloud.",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/PrivateCloudUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateCloudUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the PrivateCloud.",
      "properties": {
        "circuit": {
          "$ref": "#/definitions/Circuit",
          "description": "An ExpressRoute Circuit"
        },
        "vcenterPassword": {
          "type": "string",
          "description": "Optionally, set the vCenter admin password when the private cloud is created"
        },
        "nsxtPassword": {
          "type": "string",
          "description": "Optionally, set the NSX-T Manager password when the private cloud is created"
        },
        "secondaryCircuit": {
          "$ref": "#/definitions/Circuit",
          "description": "A secondary expressRoute circuit from a separate AZ. Only present in a stretched private cloud"
        }
      }
    },
    "Quota": {
      "type": "object",
      "description": "Subscription quotas",
      "properties": {
        "hostsRemaining": {
          "type": "object",
          "description": "Remaining hosts quota by sku type",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "readOnly": true
        },
        "quotaEnabled": {
          "$ref": "#/definitions/QuotaEnabled",
          "description": "Host quota is active for current subscription",
          "readOnly": true
        }
      }
    },
    "QuotaEnabled": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "QuotaEnabled",
        "modelAsString": true
      }
    },
    "ResourceIdentityType": {
      "type": "string",
      "enum": [
        "SystemAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ResourceIdentityType",
        "modelAsString": true
      }
    },
    "ScriptCmdlet": {
      "type": "object",
      "description": "A cmdlet available for script execution",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScriptCmdletProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScriptCmdletListResult": {
      "type": "object",
      "description": "The response of a ScriptCmdlet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScriptCmdlet items on this page",
          "items": {
            "$ref": "#/definitions/ScriptCmdlet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScriptCmdletProperties": {
      "type": "object",
      "description": "Properties of a pre-canned script",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the scripts functionality",
          "readOnly": true
        },
        "timeout": {
          "type": "string",
          "description": "Recommended time limit for execution",
          "readOnly": true
        },
        "parameters": {
          "type": "array",
          "description": "Parameters the script will accept",
          "items": {
            "$ref": "#/definitions/ScriptParameter"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ScriptExecution": {
      "type": "object",
      "description": "An instance of a script executed by a user - custom or AVS",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScriptExecutionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScriptExecutionListResult": {
      "type": "object",
      "description": "The response of a ScriptExecution list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScriptExecution items on this page",
          "items": {
            "$ref": "#/definitions/ScriptExecution"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScriptExecutionParameter": {
      "type": "object",
      "description": "The arguments passed in to the execution",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for ScriptExecutionParameter."
        },
        "name": {
          "type": "string",
          "description": "The parameter name"
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "name"
      ]
    },
    "ScriptExecutionParameterType": {
      "type": "string",
      "enum": [
        "Value",
        "SecureValue",
        "Credential"
      ],
      "x-ms-enum": {
        "name": "ScriptExecutionParameterType",
        "modelAsString": true
      }
    },
    "ScriptExecutionProperties": {
      "type": "object",
      "description": "Properties of a user-invoked script",
      "properties": {
        "scriptCmdletId": {
          "type": "string",
          "description": "A reference to the script cmdlet resource if user is running a AVS script"
        },
        "parameters": {
          "type": "array",
          "description": "Parameters the script will accept",
          "items": {
            "$ref": "#/definitions/ScriptExecutionParameter"
          },
          "x-ms-identifiers": []
        },
        "hiddenParameters": {
          "type": "array",
          "description": "Parameters that will be hidden/not visible to ARM, such as passwords and credentials",
          "items": {
            "$ref": "#/definitions/ScriptExecutionParameter"
          },
          "x-ms-identifiers": []
        },
        "failureReason": {
          "type": "string",
          "description": "Error message if the script was able to run, but if the script itself had errors or powershell threw an exception"
        },
        "timeout": {
          "type": "string",
          "description": "Time limit for execution"
        },
        "retention": {
          "type": "string",
          "description": "Time to live for the resource. If not provided, will be available for 60 days"
        },
        "submittedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the script execution was submitted",
          "readOnly": true
        },
        "startedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the script execution was started",
          "readOnly": true
        },
        "finishedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the script execution was finished",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ScriptExecutionProvisioningState",
          "description": "The state of the script execution resource",
          "readOnly": true
        },
        "output": {
          "type": "array",
          "description": "Standard output stream from the powershell execution",
          "items": {
            "type": "string"
          }
        },
        "namedOutputs": {
          "type": "object",
          "description": "User-defined dictionary.",
          "additionalProperties": {
            "additionalProperties": {},
            "type": "object"
          }
        },
        "information": {
          "type": "array",
          "description": "Standard information out stream from the powershell execution",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "warnings": {
          "type": "array",
          "description": "Standard warning out stream from the powershell execution",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "description": "Standard error output stream from the powershell execution",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "timeout"
      ]
    },
    "ScriptExecutionProvisioningState": {
      "type": "string",
      "enum": [
        "Pending",
        "Running",
        "Succeeded",
        "Failed",
        "Cancelling",
        "Cancelled",
        "Deleting",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ScriptExecutionProvisioningState",
        "modelAsString": true
      }
    },
    "ScriptOutputStreamType": {
      "type": "string",
      "enum": [
        "Information",
        "Warning",
        "Output",
        "Error"
      ],
      "x-ms-enum": {
        "name": "ScriptOutputStreamType",
        "modelAsString": true
      }
    },
    "ScriptPackage": {
      "type": "object",
      "description": "Script Package resources available for execution",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScriptPackageProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScriptPackageListResult": {
      "type": "object",
      "description": "The response of a ScriptPackage list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScriptPackage items on this page",
          "items": {
            "$ref": "#/definitions/ScriptPackage"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScriptPackageProperties": {
      "type": "object",
      "description": "Properties of a Script Package subresource",
      "properties": {
        "description": {
          "type": "string",
          "description": "User friendly description of the package",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Module version",
          "readOnly": true
        },
        "company": {
          "type": "string",
          "description": "Company that created and supports the package",
          "readOnly": true
        },
        "uri": {
          "type": "string",
          "description": "Link to support by the package vendor",
          "readOnly": true
        }
      }
    },
    "ScriptParameter": {
      "type": "object",
      "description": "An parameter that the script will accept",
      "properties": {
        "type": {
          "$ref": "#/definitions/ScriptParameterTypes",
          "description": "The type of parameter the script is expecting. psCredential is a PSCredentialObject",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The parameter name that the script will expect a parameter value for"
        },
        "description": {
          "type": "string",
          "description": "User friendly description of the parameter",
          "readOnly": true
        },
        "visibility": {
          "$ref": "#/definitions/VisibilityParameterEnum",
          "description": "Should this parameter be visible to arm and passed in the parameters argument when executing",
          "readOnly": true
        },
        "optional": {
          "$ref": "#/definitions/OptionalParamEnum",
          "description": "Is this parameter required or optional",
          "readOnly": true
        }
      }
    },
    "ScriptParameterTypes": {
      "type": "string",
      "enum": [
        "String",
        "SecureString",
        "Credential",
        "Int",
        "Bool",
        "Float"
      ],
      "x-ms-enum": {
        "name": "ScriptParameterTypes",
        "modelAsString": true
      }
    },
    "ScriptSecureStringExecutionParameter": {
      "type": "object",
      "description": "a plain text value execution parameter",
      "properties": {
        "secureValue": {
          "type": "string",
          "description": "A secure value for the passed parameter, not to be stored in logs"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ScriptExecutionParameter"
        }
      ],
      "x-ms-discriminator-value": "SecureValue"
    },
    "ScriptStringExecutionParameter": {
      "type": "object",
      "description": "a plain text value execution parameter",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value for the passed parameter"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ScriptExecutionParameter"
        }
      ],
      "x-ms-discriminator-value": "Value"
    },
    "SegmentStatusEnum": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "x-ms-enum": {
        "name": "SegmentStatusEnum",
        "modelAsString": true
      }
    },
    "ServiceSpecification": {
      "type": "object",
      "description": "Service specification payload",
      "properties": {
        "logSpecifications": {
          "type": "array",
          "description": "Specifications of the Log for Azure Monitoring",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "x-ms-identifiers": []
        },
        "metricSpecifications": {
          "type": "array",
          "description": "Specifications of the Metrics for Azure Monitoring",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Sku": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU."
        }
      },
      "required": [
        "name"
      ]
    },
    "SslEnum": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SslEnum",
        "modelAsString": true
      }
    },
    "Trial": {
      "type": "object",
      "description": "Subscription trial availability",
      "properties": {
        "status": {
          "$ref": "#/definitions/TrialStatus",
          "description": "Trial status",
          "readOnly": true
        },
        "availableHosts": {
          "type": "integer",
          "format": "int32",
          "description": "Number of trial hosts available",
          "readOnly": true
        }
      }
    },
    "TrialStatus": {
      "type": "string",
      "enum": [
        "TrialAvailable",
        "TrialUsed",
        "TrialDisabled"
      ],
      "x-ms-enum": {
        "name": "TrialStatus",
        "modelAsString": true
      }
    },
    "VMGroupStatusEnum": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "x-ms-enum": {
        "name": "VMGroupStatusEnum",
        "modelAsString": true
      }
    },
    "VMTypeEnum": {
      "type": "string",
      "enum": [
        "REGULAR",
        "EDGE",
        "SERVICE"
      ],
      "x-ms-enum": {
        "name": "VMTypeEnum",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-03-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_03_01",
            "value": "2023-03-01"
          }
        ]
      }
    },
    "VirtualMachine": {
      "type": "object",
      "description": "Virtual Machine",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualMachineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VirtualMachineListResult": {
      "type": "object",
      "description": "The response of a VirtualMachine list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualMachine items on this page",
          "items": {
            "$ref": "#/definitions/VirtualMachine"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualMachineProperties": {
      "type": "object",
      "description": "Virtual Machine Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the VM.",
          "readOnly": true
        },
        "moRefId": {
          "type": "string",
          "description": "Virtual machine managed object reference id",
          "readOnly": true
        },
        "folderPath": {
          "type": "string",
          "description": "Path to virtual machine's folder starting from datacenter virtual machine folder",
          "readOnly": true
        },
        "restrictMovement": {
          "$ref": "#/definitions/VirtualMachineRestrictMovementState",
          "description": "Whether VM DRS-driven movement is restricted (enabled) or not (disabled)",
          "readOnly": true
        }
      }
    },
    "VirtualMachineRestrictMovement": {
      "type": "object",
      "description": "Set VM DRS-driven movement to restricted (enabled) or not (disabled)",
      "properties": {
        "restrictMovement": {
          "$ref": "#/definitions/VirtualMachineRestrictMovementState",
          "description": "Whether VM DRS-driven movement is restricted (enabled) or not (disabled)"
        }
      }
    },
    "VirtualMachineRestrictMovementState": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "VirtualMachineRestrictMovementState",
        "modelAsString": true
      }
    },
    "VisibilityParameterEnum": {
      "type": "string",
      "enum": [
        "Visible",
        "Hidden"
      ],
      "x-ms-enum": {
        "name": "VisibilityParameterEnum",
        "modelAsString": true
      }
    },
    "VmHostPlacementPolicyProperties": {
      "type": "object",
      "description": "VM-Host placement policy properties",
      "properties": {
        "vmMembers": {
          "type": "array",
          "description": "Virtual machine members list",
          "items": {
            "type": "string"
          }
        },
        "hostMembers": {
          "type": "array",
          "description": "Host members list",
          "items": {
            "type": "string"
          }
        },
        "affinityType": {
          "$ref": "#/definitions/AffinityType",
          "description": "placement policy affinity type"
        },
        "affinityStrength": {
          "$ref": "#/definitions/AffinityStrength",
          "description": "vm-host placement policy affinity strength (should/must)"
        },
        "azureHybridBenefitType": {
          "$ref": "#/definitions/AzureHybridBenefitType",
          "description": "placement policy azure hybrid benefit opt-in type"
        }
      },
      "required": [
        "vmMembers",
        "hostMembers",
        "affinityType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PlacementPolicyProperties"
        }
      ],
      "x-ms-discriminator-value": "VmHost"
    },
    "VmVmPlacementPolicyProperties": {
      "type": "object",
      "description": "VM-VM placement policy properties",
      "properties": {
        "vmMembers": {
          "type": "array",
          "description": "Virtual machine members list",
          "items": {
            "type": "string"
          }
        },
        "affinityType": {
          "$ref": "#/definitions/AffinityType",
          "description": "placement policy affinity type"
        }
      },
      "required": [
        "vmMembers",
        "affinityType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PlacementPolicyProperties"
        }
      ],
      "x-ms-discriminator-value": "VmVm"
    },
    "WorkloadNetwork": {
      "type": "object",
      "description": "Workload Network",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkDhcp": {
      "type": "object",
      "description": "NSX DHCP",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkDhcpEntity",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkDhcpEntity": {
      "type": "object",
      "description": "Base class for WorkloadNetworkDhcpServer and WorkloadNetworkDhcpRelay to inherit from",
      "properties": {
        "dhcpType": {
          "type": "string",
          "description": "Discriminator property for WorkloadNetworkDhcpEntity."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the DHCP entity."
        },
        "segments": {
          "type": "array",
          "description": "NSX Segments consuming DHCP.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkDhcpProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "NSX revision number."
        }
      },
      "discriminator": "dhcpType",
      "required": [
        "dhcpType"
      ]
    },
    "WorkloadNetworkDhcpListResult": {
      "type": "object",
      "description": "The response of a WorkloadNetworkDhcp list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkDhcp items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkDhcp"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkDhcpProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Building",
        "Deleting",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkDhcpProvisioningState",
        "modelAsString": true
      }
    },
    "WorkloadNetworkDhcpRelay": {
      "type": "object",
      "description": "NSX DHCP Relay",
      "properties": {
        "serverAddresses": {
          "type": "array",
          "description": "DHCP Relay Addresses. Max 3.",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkloadNetworkDhcpEntity"
        }
      ],
      "x-ms-discriminator-value": "RELAY"
    },
    "WorkloadNetworkDhcpServer": {
      "type": "object",
      "description": "NSX DHCP Server",
      "properties": {
        "serverAddress": {
          "type": "string",
          "description": "DHCP Server Address."
        },
        "leaseTime": {
          "type": "integer",
          "format": "int32",
          "description": "DHCP Server Lease Time."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkloadNetworkDhcpEntity"
        }
      ],
      "x-ms-discriminator-value": "SERVER"
    },
    "WorkloadNetworkDhcpUpdate": {
      "type": "object",
      "description": "The type used for update operations of the WorkloadNetworkDhcp.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkDhcpUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkDhcpUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the WorkloadNetworkDhcp.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the DHCP entity."
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkDnsService": {
      "type": "object",
      "description": "NSX DNS Service",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkDnsServiceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkDnsServiceListResult": {
      "type": "object",
      "description": "The response of a WorkloadNetworkDnsService list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkDnsService items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkDnsService"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkDnsServiceProperties": {
      "type": "object",
      "description": "NSX DNS Service Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the DNS Service."
        },
        "dnsServiceIp": {
          "type": "string",
          "description": "DNS service IP of the DNS Service."
        },
        "defaultDnsZone": {
          "type": "string",
          "description": "Default DNS zone of the DNS Service."
        },
        "fqdnZones": {
          "type": "array",
          "description": "FQDN zones of the DNS Service.",
          "items": {
            "type": "string"
          }
        },
        "logLevel": {
          "$ref": "#/definitions/DnsServiceLogLevelEnum",
          "description": "DNS Service log level."
        },
        "status": {
          "$ref": "#/definitions/DnsServiceStatusEnum",
          "description": "DNS Service status.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkDnsServiceProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkDnsServiceProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Building",
        "Deleting",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkDnsServiceProvisioningState",
        "modelAsString": true
      }
    },
    "WorkloadNetworkDnsServiceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the WorkloadNetworkDnsService.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkDnsServiceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkDnsServiceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the WorkloadNetworkDnsService.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the DNS Service."
        },
        "dnsServiceIp": {
          "type": "string",
          "description": "DNS service IP of the DNS Service."
        },
        "defaultDnsZone": {
          "type": "string",
          "description": "Default DNS zone of the DNS Service."
        },
        "fqdnZones": {
          "type": "array",
          "description": "FQDN zones of the DNS Service.",
          "items": {
            "type": "string"
          }
        },
        "logLevel": {
          "$ref": "#/definitions/DnsServiceLogLevelEnum",
          "description": "DNS Service log level."
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkDnsZone": {
      "type": "object",
      "description": "NSX DNS Zone",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkDnsZoneProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkDnsZoneListResult": {
      "type": "object",
      "description": "The response of a WorkloadNetworkDnsZone list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkDnsZone items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkDnsZone"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkDnsZoneProperties": {
      "type": "object",
      "description": "NSX DNS Zone Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the DNS Zone."
        },
        "domain": {
          "type": "array",
          "description": "Domain names of the DNS Zone.",
          "items": {
            "type": "string"
          }
        },
        "dnsServerIps": {
          "type": "array",
          "description": "DNS Server IP array of the DNS Zone.",
          "items": {
            "type": "string"
          }
        },
        "sourceIp": {
          "type": "string",
          "description": "Source IP of the DNS Zone."
        },
        "dnsServices": {
          "type": "integer",
          "format": "int32",
          "description": "Number of DNS Services using the DNS zone."
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkDnsZoneProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkDnsZoneProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Building",
        "Deleting",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkDnsZoneProvisioningState",
        "modelAsString": true
      }
    },
    "WorkloadNetworkDnsZoneUpdate": {
      "type": "object",
      "description": "The type used for update operations of the WorkloadNetworkDnsZone.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkDnsZoneUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkDnsZoneUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the WorkloadNetworkDnsZone.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the DNS Zone."
        },
        "domain": {
          "type": "array",
          "description": "Domain names of the DNS Zone.",
          "items": {
            "type": "string"
          }
        },
        "dnsServerIps": {
          "type": "array",
          "description": "DNS Server IP array of the DNS Zone.",
          "items": {
            "type": "string"
          }
        },
        "sourceIp": {
          "type": "string",
          "description": "Source IP of the DNS Zone."
        },
        "dnsServices": {
          "type": "integer",
          "format": "int32",
          "description": "Number of DNS Services using the DNS zone."
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkGateway": {
      "type": "object",
      "description": "NSX Gateway.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkGatewayProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkGatewayListResult": {
      "type": "object",
      "description": "The response of a WorkloadNetworkGateway list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkGateway items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkGateway"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkGatewayProperties": {
      "type": "object",
      "description": "Properties of a NSX Gateway.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the DHCP entity."
        },
        "path": {
          "type": "string",
          "description": "NSX Gateway Path.",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkListResult": {
      "type": "object",
      "description": "The response of a WorkloadNetwork list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetwork items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetwork"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkName": {
      "type": "string",
      "enum": [
        "default"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkName",
        "modelAsString": true
      }
    },
    "WorkloadNetworkPortMirroring": {
      "type": "object",
      "description": "NSX Port Mirroring",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkPortMirroringProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkPortMirroringListResult": {
      "type": "object",
      "description": "The response of a WorkloadNetworkPortMirroring list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkPortMirroring items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkPortMirroring"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkPortMirroringProperties": {
      "type": "object",
      "description": "NSX Port Mirroring Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the port mirroring profile."
        },
        "direction": {
          "$ref": "#/definitions/PortMirroringDirectionEnum",
          "description": "Direction of port mirroring profile."
        },
        "source": {
          "type": "string",
          "description": "Source VM Group."
        },
        "destination": {
          "type": "string",
          "description": "Destination VM Group."
        },
        "status": {
          "$ref": "#/definitions/PortMirroringStatusEnum",
          "description": "Port Mirroring Status.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkPortMirroringProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkPortMirroringProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Building",
        "Deleting",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkPortMirroringProvisioningState",
        "modelAsString": true
      }
    },
    "WorkloadNetworkPortMirroringUpdate": {
      "type": "object",
      "description": "The type used for update operations of the WorkloadNetworkPortMirroring.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkPortMirroringUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkPortMirroringUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the WorkloadNetworkPortMirroring.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the port mirroring profile."
        },
        "direction": {
          "$ref": "#/definitions/PortMirroringDirectionEnum",
          "description": "Direction of port mirroring profile."
        },
        "source": {
          "type": "string",
          "description": "Source VM Group."
        },
        "destination": {
          "type": "string",
          "description": "Destination VM Group."
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkPublicIP": {
      "type": "object",
      "description": "NSX Public IP Block",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkPublicIPProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkPublicIPListResult": {
      "type": "object",
      "description": "The response of a WorkloadNetworkPublicIP list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkPublicIP items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkPublicIP"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkPublicIPProperties": {
      "type": "object",
      "description": "NSX Public IP Block Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the Public IP Block."
        },
        "numberOfPublicIPs": {
          "type": "integer",
          "format": "int32",
          "description": "Number of Public IPs requested."
        },
        "publicIPBlock": {
          "type": "string",
          "description": "CIDR Block of the Public IP Block.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkPublicIPProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkPublicIPProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Building",
        "Deleting",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkPublicIPProvisioningState",
        "modelAsString": true
      }
    },
    "WorkloadNetworkSegment": {
      "type": "object",
      "description": "NSX Segment",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkSegmentProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkSegmentListResult": {
      "type": "object",
      "description": "The response of a WorkloadNetworkSegment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkSegment items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkSegment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkSegmentPortVif": {
      "type": "object",
      "description": "Ports and any VIF attached to segment.",
      "properties": {
        "portName": {
          "type": "string",
          "description": "Name of port or VIF attached to segment."
        }
      }
    },
    "WorkloadNetworkSegmentProperties": {
      "type": "object",
      "description": "NSX Segment Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the segment."
        },
        "connectedGateway": {
          "type": "string",
          "description": "Gateway which to connect segment to."
        },
        "subnet": {
          "$ref": "#/definitions/WorkloadNetworkSegmentSubnet",
          "description": "Subnet which to connect segment to."
        },
        "portVif": {
          "type": "array",
          "description": "Port Vif which segment is associated with.",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkSegmentPortVif"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/SegmentStatusEnum",
          "description": "Segment status.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkSegmentProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkSegmentProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Building",
        "Deleting",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkSegmentProvisioningState",
        "modelAsString": true
      }
    },
    "WorkloadNetworkSegmentSubnet": {
      "type": "object",
      "description": "Subnet configuration for segment",
      "properties": {
        "dhcpRanges": {
          "type": "array",
          "description": "DHCP Range assigned for subnet.",
          "items": {
            "type": "string"
          }
        },
        "gatewayAddress": {
          "type": "string",
          "description": "Gateway address."
        }
      }
    },
    "WorkloadNetworkSegmentUpdate": {
      "type": "object",
      "description": "The type used for update operations of the WorkloadNetworkSegment.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkSegmentUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkSegmentUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the WorkloadNetworkSegment.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the segment."
        },
        "connectedGateway": {
          "type": "string",
          "description": "Gateway which to connect segment to."
        },
        "subnet": {
          "$ref": "#/definitions/WorkloadNetworkSegmentSubnet",
          "description": "Subnet which to connect segment to."
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkVMGroup": {
      "type": "object",
      "description": "NSX VM Group",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkVMGroupProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkVMGroupListResult": {
      "type": "object",
      "description": "The response of a WorkloadNetworkVMGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkVMGroup items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkVMGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkVMGroupProperties": {
      "type": "object",
      "description": "NSX VM Group Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the VM group."
        },
        "members": {
          "type": "array",
          "description": "Virtual machine members of this group.",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/VMGroupStatusEnum",
          "description": "VM Group status.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkloadNetworkVMGroupProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkVMGroupProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Building",
        "Deleting",
        "Updating",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkVMGroupProvisioningState",
        "modelAsString": true
      }
    },
    "WorkloadNetworkVMGroupUpdate": {
      "type": "object",
      "description": "The type used for update operations of the WorkloadNetworkVMGroup.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkVMGroupUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkVMGroupUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the WorkloadNetworkVMGroup.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the VM group."
        },
        "members": {
          "type": "array",
          "description": "Virtual machine members of this group.",
          "items": {
            "type": "string"
          }
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkVirtualMachine": {
      "type": "object",
      "description": "NSX Virtual Machine",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkVirtualMachineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkloadNetworkVirtualMachineListResult": {
      "type": "object",
      "description": "The response of a WorkloadNetworkVirtualMachine list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkVirtualMachine items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkVirtualMachine"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkVirtualMachineProperties": {
      "type": "object",
      "description": "NSX Virtual Machine Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the VM."
        },
        "vmType": {
          "$ref": "#/definitions/VMTypeEnum",
          "description": "Virtual machine type.",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
