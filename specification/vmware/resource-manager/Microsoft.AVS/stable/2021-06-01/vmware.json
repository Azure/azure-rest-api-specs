{
  "swagger": "2.0",
  "info": {
    "title": "Azure VMware Solution API",
    "description": "Azure VMware Solution API",
    "version": "2021-06-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "PrivateClouds",
      "description": ""
    },
    {
      "name": "Clusters",
      "description": ""
    },
    {
      "name": "Operations",
      "description": ""
    },
    {
      "name": "Locations",
      "description": ""
    },
    {
      "name": "HcxEnterpriseSites",
      "description": ""
    },
    {
      "name": "Authorizations",
      "description": ""
    },
    {
      "name": "GlobalReachConnections",
      "description": ""
    },
    {
      "name": "WorkloadNetworks",
      "description": ""
    },
    {
      "name": "Addons",
      "description": ""
    },
    {
      "name": "Datastores",
      "description": ""
    },
    {
      "name": "CloudLinks",
      "description": ""
    },
    {
      "name": "Scripts",
      "description": ""
    }
  ],
  "parameters": {
    "privateCloudName": {
      "name": "privateCloudName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the private cloud",
      "x-ms-parameter-location": "method"
    },
    "clusterName": {
      "name": "clusterName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the cluster in the private cloud",
      "x-ms-parameter-location": "method"
    },
    "hcxEnterpriseSiteName": {
      "name": "hcxEnterpriseSiteName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the HCX Enterprise Site in the private cloud",
      "x-ms-parameter-location": "method"
    },
    "addonName": {
      "name": "addonName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the addon for the private cloud",
      "x-ms-parameter-location": "method"
    },
    "authorizationName": {
      "name": "authorizationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the ExpressRoute Circuit Authorization in the private cloud",
      "x-ms-parameter-location": "method"
    },
    "globalReachConnectionName": {
      "name": "globalReachConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the global reach connection in the private cloud",
      "x-ms-parameter-location": "method"
    },
    "segmentId": {
      "name": "segmentId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "NSX Segment identifier. Generally the same as the Segment's display name",
      "x-ms-parameter-location": "method"
    },
    "dhcpId": {
      "name": "dhcpId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "NSX DHCP identifier. Generally the same as the DHCP display name",
      "x-ms-parameter-location": "method"
    },
    "portMirroringId": {
      "name": "portMirroringId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "NSX Port Mirroring identifier. Generally the same as the Port Mirroring display name",
      "x-ms-parameter-location": "method"
    },
    "vmGroupId": {
      "name": "vmGroupId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "NSX VM Group identifier. Generally the same as the VM Group's display name",
      "x-ms-parameter-location": "method"
    },
    "virtualMachineId": {
      "name": "virtualMachineId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Virtual Machine identifier",
      "x-ms-parameter-location": "method"
    },
    "gatewayId": {
      "name": "gatewayId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "NSX Gateway identifier. Generally the same as the Gateway's display name",
      "x-ms-parameter-location": "method"
    },
    "dnsServiceId": {
      "name": "dnsServiceId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "NSX DNS Service identifier. Generally the same as the DNS Service's display name",
      "x-ms-parameter-location": "method"
    },
    "dnsZoneId": {
      "name": "dnsZoneId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "NSX DNS Zone identifier. Generally the same as the DNS Zone's display name",
      "x-ms-parameter-location": "method"
    },
    "publicIPId": {
      "name": "publicIPId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "NSX Public IP Block identifier. Generally the same as the Public IP Block's display name",
      "x-ms-parameter-location": "method"
    },
    "datastoreName": {
      "name": "datastoreName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the datastore in the private cloud cluster",
      "x-ms-parameter-location": "method"
    },
    "cloudLinkName": {
      "name": "cloudLinkName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the cloud link resource",
      "x-ms-parameter-location": "method"
    },
    "scriptExecutionName": {
      "name": "scriptExecutionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the user-invoked script execution resource",
      "x-ms-parameter-location": "method"
    },
    "scriptPackageName": {
      "name": "scriptPackageName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the script package in the private cloud",
      "x-ms-parameter-location": "method"
    },
    "scriptCmdletName": {
      "name": "scriptCmdletName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the script cmdlet resource in the script package in the private cloud",
      "x-ms-parameter-location": "method"
    },
    "scriptOutputStreamType": {
      "name": "scriptOutputStreamType",
      "in": "body",
      "required": false,
      "schema": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "Information",
            "Warning",
            "Output",
            "Error"
          ],
          "x-ms-enum": {
            "name": "ScriptOutputStreamType",
            "modelAsString": true
          }
        }
      },
      "description": "Name of the desired output stream to return. If not provided, will return all. An empty array will return nothing",
      "x-ms-parameter-location": "method"
    }
  },
  "paths": {
    "/providers/Microsoft.AVS/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available operations",
        "operationId": "Operations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/locations/{location}/checkTrialAvailability": {
      "post": {
        "tags": [
          "Locations"
        ],
        "description": "Return trial status for subscription by region",
        "operationId": "Locations_CheckTrialAvailability",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Azure region"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded",
            "schema": {
              "$ref": "#/definitions/Trial"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Locations_CheckTrialAvailability": {
            "$ref": "./examples/Locations_CheckTrialAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/locations/{location}/checkQuotaAvailability": {
      "post": {
        "tags": [
          "Locations"
        ],
        "description": "Return quota for subscription by region",
        "operationId": "Locations_CheckQuotaAvailability",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Azure region"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded",
            "schema": {
              "$ref": "#/definitions/Quota"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Locations_CheckQuotaAvailability": {
            "$ref": "./examples/Locations_CheckQuotaAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds": {
      "get": {
        "operationId": "PrivateClouds_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "PrivateClouds"
        ],
        "summary": "List private clouds in a resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloudList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_List": {
            "$ref": "./examples/PrivateClouds_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/privateClouds": {
      "get": {
        "operationId": "PrivateClouds_ListInSubscription",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "PrivateClouds"
        ],
        "summary": "List private clouds in a subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloudList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_ListInSubscription": {
            "$ref": "./examples/PrivateClouds_ListInSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}": {
      "get": {
        "operationId": "PrivateClouds_Get",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "Get a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_Get": {
            "$ref": "./examples/PrivateClouds_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateClouds_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "tags": [
          "PrivateClouds"
        ],
        "summary": "Create or update a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "name": "privateCloud",
            "description": "The private cloud",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_CreateOrUpdate": {
            "$ref": "./examples/PrivateClouds_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "PrivateClouds_Update",
        "x-ms-long-running-operation": true,
        "tags": [
          "PrivateClouds"
        ],
        "summary": "Update a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "name": "privateCloudUpdate",
            "description": "The private cloud properties to be updated",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateCloudUpdate"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/PrivateCloud"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_Update": {
            "$ref": "./examples/PrivateClouds_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateClouds_Delete",
        "x-ms-long-running-operation": true,
        "tags": [
          "PrivateClouds"
        ],
        "summary": "Delete a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No private cloud to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_Delete": {
            "$ref": "./examples/PrivateClouds_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateVcenterPassword": {
      "post": {
        "operationId": "PrivateClouds_RotateVcenterPassword",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "Rotate the vCenter password",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-long-running-operation": true,
        "responses": {
          "202": {
            "description": "The password rotation has started"
          },
          "204": {
            "description": "The password rotation was successful"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_RotateVcenterPassword": {
            "$ref": "./examples/PrivateClouds_RotateVcenterPassword.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateNsxtPassword": {
      "post": {
        "operationId": "PrivateClouds_RotateNsxtPassword",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "Rotate the NSX-T Manager password",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-long-running-operation": true,
        "responses": {
          "202": {
            "description": "The password rotation has started"
          },
          "204": {
            "description": "The password rotation was successful"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_RotateNsxtPassword": {
            "$ref": "./examples/PrivateClouds_RotateNsxtPassword.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters": {
      "get": {
        "operationId": "Clusters_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "Clusters"
        ],
        "summary": "List clusters in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_List": {
            "$ref": "./examples/Clusters_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}": {
      "get": {
        "operationId": "Clusters_Get",
        "tags": [
          "Clusters"
        ],
        "summary": "Get a cluster by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/clusterName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_Get": {
            "$ref": "./examples/Clusters_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Clusters_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "tags": [
          "Clusters"
        ],
        "summary": "Create or update a cluster in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "$ref": "#/parameters/clusterName"
          },
          {
            "name": "cluster",
            "description": "A cluster in the private cloud",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_CreateOrUpdate": {
            "$ref": "./examples/Clusters_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "Clusters_Update",
        "x-ms-long-running-operation": true,
        "tags": [
          "Clusters"
        ],
        "summary": "Update a cluster in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/clusterName"
          },
          {
            "name": "clusterUpdate",
            "description": "The cluster properties to be updated",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterUpdate"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_Update": {
            "$ref": "./examples/Clusters_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "Clusters_Delete",
        "x-ms-long-running-operation": true,
        "tags": [
          "Clusters"
        ],
        "summary": "Delete a cluster in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/clusterName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No cluster to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Clusters_Delete": {
            "$ref": "./examples/Clusters_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/datastores": {
      "get": {
        "operationId": "Datastores_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "Datastores"
        ],
        "summary": "List datastores in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/clusterName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DatastoreList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Datastores_List": {
            "$ref": "./examples/Datastores_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/datastores/{datastoreName}": {
      "get": {
        "operationId": "Datastores_Get",
        "tags": [
          "Datastores"
        ],
        "summary": "Get a datastore in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/clusterName"
          },
          {
            "$ref": "#/parameters/datastoreName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Datastore"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Datastores_Get": {
            "$ref": "./examples/Datastores_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Datastores_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "tags": [
          "Datastores"
        ],
        "summary": "Create or update a datastore in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/clusterName"
          },
          {
            "$ref": "#/parameters/datastoreName"
          },
          {
            "name": "datastore",
            "description": "A datastore in a private cloud cluster",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Datastore"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Datastore"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/Datastore"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Datastores_CreateOrUpdate": {
            "$ref": "./examples/Datastores_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Datastores_Delete",
        "x-ms-long-running-operation": true,
        "tags": [
          "Datastores"
        ],
        "summary": "Delete a datastore in a private cloud cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/clusterName"
          },
          {
            "$ref": "#/parameters/datastoreName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No datastore to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Datastores_Delete": {
            "$ref": "./examples/Datastores_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/listAdminCredentials": {
      "post": {
        "operationId": "PrivateClouds_ListAdminCredentials",
        "tags": [
          "PrivateClouds"
        ],
        "summary": "List the admin credentials for the private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AdminCredentials"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PrivateClouds_ListAdminCredentials": {
            "$ref": "./examples/PrivateClouds_ListAdminCredentials.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites": {
      "get": {
        "operationId": "HcxEnterpriseSites_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "HcxEnterpriseSites"
        ],
        "summary": "List HCX Enterprise Sites in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSiteList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HcxEnterpriseSites_List": {
            "$ref": "./examples/HcxEnterpriseSites_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites/{hcxEnterpriseSiteName}": {
      "get": {
        "operationId": "HcxEnterpriseSites_Get",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "summary": "Get an HCX Enterprise Site by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/hcxEnterpriseSiteName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HcxEnterpriseSites_Get": {
            "$ref": "./examples/HcxEnterpriseSites_Get.json"
          }
        }
      },
      "put": {
        "operationId": "HcxEnterpriseSites_CreateOrUpdate",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "summary": "Create or update an HCX Enterprise Site in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "$ref": "#/parameters/hcxEnterpriseSiteName"
          },
          {
            "name": "hcxEnterpriseSite",
            "description": "The HCX Enterprise Site",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSite"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful update",
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSite"
            }
          },
          "201": {
            "description": "successful create",
            "schema": {
              "$ref": "#/definitions/HcxEnterpriseSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HcxEnterpriseSites_CreateOrUpdate": {
            "$ref": "./examples/HcxEnterpriseSites_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "HcxEnterpriseSites_Delete",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "summary": "Delete an HCX Enterprise Site in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/hcxEnterpriseSiteName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "204": {
            "description": "No Content. No HCX Enterprise Site to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "HcxEnterpriseSites_Delete": {
            "$ref": "./examples/HcxEnterpriseSites_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/authorizations": {
      "get": {
        "operationId": "Authorizations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "Authorizations"
        ],
        "summary": "List ExpressRoute Circuit Authorizations in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorizationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Authorizations_List": {
            "$ref": "./examples/Authorizations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/authorizations/{authorizationName}": {
      "get": {
        "operationId": "Authorizations_Get",
        "tags": [
          "Authorizations"
        ],
        "summary": "Get an ExpressRoute Circuit Authorization by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/authorizationName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorization"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Authorizations_Get": {
            "$ref": "./examples/Authorizations_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Authorizations_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "tags": [
          "Authorizations"
        ],
        "summary": "Create or update an ExpressRoute Circuit Authorization in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "$ref": "#/parameters/authorizationName"
          },
          {
            "name": "authorization",
            "description": "An ExpressRoute Circuit Authorization",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorization"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorization"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/ExpressRouteAuthorization"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Authorizations_CreateOrUpdate": {
            "$ref": "./examples/Authorizations_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Authorizations_Delete",
        "x-ms-long-running-operation": true,
        "tags": [
          "Authorizations"
        ],
        "summary": "Delete an ExpressRoute Circuit Authorization in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/authorizationName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No ExpressRoute Circuit Authorization to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Authorizations_Delete": {
            "$ref": "./examples/Authorizations_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/globalReachConnections": {
      "get": {
        "operationId": "GlobalReachConnections_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "GlobalReachConnections"
        ],
        "summary": "List global reach connections in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GlobalReachConnectionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GlobalReachConnections_List": {
            "$ref": "./examples/GlobalReachConnections_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/globalReachConnections/{globalReachConnectionName}": {
      "get": {
        "operationId": "GlobalReachConnections_Get",
        "tags": [
          "GlobalReachConnections"
        ],
        "summary": "Get a global reach connection by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/globalReachConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GlobalReachConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GlobalReachConnections_Get": {
            "$ref": "./examples/GlobalReachConnections_Get.json"
          }
        }
      },
      "put": {
        "operationId": "GlobalReachConnections_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "tags": [
          "GlobalReachConnections"
        ],
        "summary": "Create or update a global reach connection in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "$ref": "#/parameters/globalReachConnectionName"
          },
          {
            "name": "globalReachConnection",
            "description": "A global reach connection in the private cloud",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GlobalReachConnection"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GlobalReachConnection"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/GlobalReachConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GlobalReachConnections_CreateOrUpdate": {
            "$ref": "./examples/GlobalReachConnections_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "GlobalReachConnections_Delete",
        "x-ms-long-running-operation": true,
        "tags": [
          "GlobalReachConnections"
        ],
        "summary": "Delete a global reach connection in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/globalReachConnectionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No global reach connection to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GlobalReachConnections_Delete": {
            "$ref": "./examples/GlobalReachConnections_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments": {
      "get": {
        "operationId": "WorkloadNetworks_ListSegments",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "List of segments in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegmentsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListSegments": {
            "$ref": "./examples/WorkloadNetworks_ListSegments.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetSegment",
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Get a segment by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/segmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetSegment": {
            "$ref": "./examples/WorkloadNetworks_GetSegments.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateSegments",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create a segment by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/segmentId"
          },
          {
            "name": "workloadNetworkSegment",
            "description": "NSX Segment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreateSegments": {
            "$ref": "./examples/WorkloadNetworks_CreateSegments.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateSegments",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create or update a segment by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/segmentId"
          },
          {
            "name": "workloadNetworkSegment",
            "description": "NSX Segment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkSegment"
            }
          },
          "202": {
            "description": "Accepted. The patch will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_UpdateSegments": {
            "$ref": "./examples/WorkloadNetworks_UpdateSegments.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteSegment",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Delete a segment by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/segmentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No segment to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeleteSegment": {
            "$ref": "./examples/WorkloadNetworks_DeleteSegments.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations": {
      "get": {
        "operationId": "WorkloadNetworks_ListDhcp",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "List dhcp in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcpList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListDhcp": {
            "$ref": "./examples/WorkloadNetworks_ListDhcpConfigurations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations/{dhcpId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetDhcp",
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Get dhcp by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/dhcpId"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetDhcp": {
            "$ref": "./examples/WorkloadNetworks_GetDhcpConfigurations.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateDhcp",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create dhcp by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/dhcpId"
          },
          {
            "name": "workloadNetworkDhcp",
            "description": "NSX DHCP",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreateDhcp": {
            "$ref": "./examples/WorkloadNetworks_CreateDhcpConfigurations.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateDhcp",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create or update dhcp by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/dhcpId"
          },
          {
            "name": "workloadNetworkDhcp",
            "description": "NSX DHCP",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDhcp"
            }
          },
          "202": {
            "description": "Accepted. The patch will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_UpdateDhcp": {
            "$ref": "./examples/WorkloadNetworks_UpdateDhcpConfigurations.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteDhcp",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Delete dhcp by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/dhcpId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No DHCP configuration to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeleteDhcp": {
            "$ref": "./examples/WorkloadNetworks_DeleteDhcpConfigurations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/gateways": {
      "get": {
        "operationId": "WorkloadNetworks_ListGateways",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "List of gateways in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkGatewayList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListGateways": {
            "$ref": "./examples/WorkloadNetworks_ListGateways.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/gateways/{gatewayId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetGateway",
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Get a gateway by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/gatewayId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetGateway": {
            "$ref": "./examples/WorkloadNetworks_GetGateway.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles": {
      "get": {
        "operationId": "WorkloadNetworks_ListPortMirroring",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "List of port mirroring profiles in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroringList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListPortMirroring": {
            "$ref": "./examples/WorkloadNetworks_ListPortMirroringProfiles.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles/{portMirroringId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetPortMirroring",
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Get a port mirroring profile by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/portMirroringId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetPortMirroring": {
            "$ref": "./examples/WorkloadNetworks_GetPortMirroringProfiles.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreatePortMirroring",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create a port mirroring profile by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/portMirroringId"
          },
          {
            "name": "workloadNetworkPortMirroring",
            "description": "NSX port mirroring",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreatePortMirroring": {
            "$ref": "./examples/WorkloadNetworks_CreatePortMirroringProfiles.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdatePortMirroring",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create or update a port mirroring profile by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/portMirroringId"
          },
          {
            "name": "workloadNetworkPortMirroring",
            "description": "NSX port mirroring",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPortMirroring"
            }
          },
          "202": {
            "description": "Accepted. The patch will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_UpdatePortMirroring": {
            "$ref": "./examples/WorkloadNetworks_UpdatePortMirroringProfiles.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeletePortMirroring",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Delete a port mirroring profile by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/portMirroringId"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No port mirroring profile to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeletePortMirroring": {
            "$ref": "./examples/WorkloadNetworks_DeletePortMirroringProfiles.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups": {
      "get": {
        "operationId": "WorkloadNetworks_ListVMGroups",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "List of vm groups in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroupsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListVMGroups": {
            "$ref": "./examples/WorkloadNetworks_ListVMGroups.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups/{vmGroupId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetVMGroup",
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Get a vm group by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/vmGroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetVMGroup": {
            "$ref": "./examples/WorkloadNetworks_GetVMGroups.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateVMGroup",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create a vm group by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/vmGroupId"
          },
          {
            "name": "workloadNetworkVMGroup",
            "description": "NSX VM Group",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreateVMGroup": {
            "$ref": "./examples/WorkloadNetworks_CreateVMGroups.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateVMGroup",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create or update a vm group by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/vmGroupId"
          },
          {
            "name": "workloadNetworkVMGroup",
            "description": "NSX VM Group",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVMGroup"
            }
          },
          "202": {
            "description": "Accepted. The patch will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_UpdateVMGroup": {
            "$ref": "./examples/WorkloadNetworks_UpdateVMGroups.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteVMGroup",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Delete a vm group by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/vmGroupId"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No VM group to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeleteVMGroup": {
            "$ref": "./examples/WorkloadNetworks_DeleteVMGroups.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/virtualMachines": {
      "get": {
        "operationId": "WorkloadNetworks_ListVirtualMachines",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "List of virtual machines in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVirtualMachinesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListVirtualMachines": {
            "$ref": "./examples/WorkloadNetworks_ListVirtualMachines.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/virtualMachines/{virtualMachineId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetVirtualMachine",
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Get a virtual machine by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/virtualMachineId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkVirtualMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetVirtualMachine": {
            "$ref": "./examples/WorkloadNetworks_GetVirtualMachine.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsServices": {
      "get": {
        "operationId": "WorkloadNetworks_ListDnsServices",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "List of DNS services in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsServicesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListDnsServices": {
            "$ref": "./examples/WorkloadNetworks_ListDnsServices.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsServices/{dnsServiceId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetDnsService",
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Get a DNS service by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/dnsServiceId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetDnsService": {
            "$ref": "./examples/WorkloadNetworks_GetDnsServices.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateDnsService",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create a DNS service by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/dnsServiceId"
          },
          {
            "name": "workloadNetworkDnsService",
            "description": "NSX DNS Service",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreateDnsService": {
            "$ref": "./examples/WorkloadNetworks_CreateDnsServices.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateDnsService",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create or update a DNS service by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/dnsServiceId"
          },
          {
            "name": "workloadNetworkDnsService",
            "description": "NSX DNS Service",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsService"
            }
          },
          "202": {
            "description": "Accepted. The patch will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_UpdateDnsService": {
            "$ref": "./examples/WorkloadNetworks_UpdateDnsServices.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteDnsService",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Delete a DNS service by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/dnsServiceId"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No VM group to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeleteDnsService": {
            "$ref": "./examples/WorkloadNetworks_DeleteDnsServices.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsZones": {
      "get": {
        "operationId": "WorkloadNetworks_ListDnsZones",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "List of DNS zones in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZonesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListDnsZones": {
            "$ref": "./examples/WorkloadNetworks_ListDnsZones.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsZones/{dnsZoneId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetDnsZone",
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Get a DNS zone by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/dnsZoneId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetDnsZone": {
            "$ref": "./examples/WorkloadNetworks_GetDnsZones.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateDnsZone",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create a DNS zone by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/dnsZoneId"
          },
          {
            "name": "workloadNetworkDnsZone",
            "description": "NSX DNS Zone",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreateDnsZone": {
            "$ref": "./examples/WorkloadNetworks_CreateDnsZones.json"
          }
        }
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateDnsZone",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create or update a DNS zone by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/dnsZoneId"
          },
          {
            "name": "workloadNetworkDnsZone",
            "description": "NSX DNS Zone",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkDnsZone"
            }
          },
          "202": {
            "description": "Accepted. The patch will complete asynchronously"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_UpdateDnsZone": {
            "$ref": "./examples/WorkloadNetworks_UpdateDnsZones.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteDnsZone",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Delete a DNS zone by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/dnsZoneId"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No VM group to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeleteDnsZone": {
            "$ref": "./examples/WorkloadNetworks_DeleteDnsZones.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/publicIPs": {
      "get": {
        "operationId": "WorkloadNetworks_ListPublicIPs",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "List of Public IP Blocks in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIPsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_ListPublicIPs": {
            "$ref": "./examples/WorkloadNetworks_ListPublicIPs.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/publicIPs/{publicIPId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetPublicIP",
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Get a Public IP Block by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/publicIPId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIP"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_GetPublicIP": {
            "$ref": "./examples/WorkloadNetworks_GetPublicIPs.json"
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreatePublicIP",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Create a Public IP Block by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/publicIPId"
          },
          {
            "name": "workloadNetworkPublicIP",
            "description": "NSX Public IP Block",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIP"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIP"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkPublicIP"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_CreatePublicIP": {
            "$ref": "./examples/WorkloadNetworks_CreatePublicIPs.json"
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeletePublicIP",
        "x-ms-long-running-operation": true,
        "tags": [
          "WorkloadNetworks"
        ],
        "summary": "Delete a Public IP Block by id in a private cloud workload network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/publicIPId"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No VM group to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "WorkloadNetworks_DeletePublicIP": {
            "$ref": "./examples/WorkloadNetworks_DeletePublicIPs.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/cloudLinks": {
      "get": {
        "operationId": "CloudLinks_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "CloudLinks"
        ],
        "summary": "List cloud link in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CloudLinkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CloudLinks_List": {
            "$ref": "./examples/CloudLinks_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/cloudLinks/{cloudLinkName}": {
      "get": {
        "operationId": "CloudLinks_Get",
        "tags": [
          "CloudLinks"
        ],
        "summary": "Get an cloud link by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/cloudLinkName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CloudLink"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CloudLinks_Get": {
            "$ref": "./examples/CloudLinks_Get.json"
          }
        }
      },
      "put": {
        "operationId": "CloudLinks_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "tags": [
          "CloudLinks"
        ],
        "summary": "Create or update a cloud link in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "$ref": "#/parameters/cloudLinkName"
          },
          {
            "name": "cloudLink",
            "description": "A cloud link in the private cloud",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudLink"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CloudLink"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/CloudLink"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CloudLinks_CreateOrUpdate": {
            "$ref": "./examples/CloudLinks_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "CloudLinks_Delete",
        "x-ms-long-running-operation": true,
        "tags": [
          "CloudLinks"
        ],
        "summary": "Delete a cloud link in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/cloudLinkName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No cloud link to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CloudLinks_Delete": {
            "$ref": "./examples/CloudLinks_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons": {
      "get": {
        "operationId": "Addons_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "tags": [
          "Addons"
        ],
        "summary": "List addons in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AddonList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Addons_List": {
            "$ref": "./examples/Addons_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons/{addonName}": {
      "get": {
        "operationId": "Addons_Get",
        "tags": [
          "Addons"
        ],
        "summary": "Get an addon by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/addonName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Addons_Get_SRM": {
            "$ref": "./examples/Addons_Get_SRM.json"
          },
          "Addons_Get_VR": {
            "$ref": "./examples/Addons_Get_VR.json"
          },
          "Addons_Get_HCX": {
            "$ref": "./examples/Addons_Get_HCX.json"
          }
        }
      },
      "put": {
        "operationId": "Addons_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "tags": [
          "Addons"
        ],
        "summary": "Create or update a addon in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "$ref": "#/parameters/addonName"
          },
          {
            "name": "addon",
            "description": "A addon in the private cloud",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Addons_CreateOrUpdate_SRM": {
            "$ref": "./examples/Addons_CreateOrUpdate_SRM.json"
          },
          "Addons_CreateOrUpdate_VR": {
            "$ref": "./examples/Addons_CreateOrUpdate_VR.json"
          },
          "Addons_CreateOrUpdate_HCX": {
            "$ref": "./examples/Addons_CreateOrUpdate_HCX.json"
          }
        }
      },
      "delete": {
        "operationId": "Addons_Delete",
        "x-ms-long-running-operation": true,
        "tags": [
          "Addons"
        ],
        "summary": "Delete a addon in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/addonName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No addon to delete"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Addons_Delete": {
            "$ref": "./examples/Addons_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages": {
      "get": {
        "tags": [
          "Scripts"
        ],
        "description": "Return script packages available for a private cloud to run on their Private Cloud",
        "operationId": "ScriptPackages_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded",
            "schema": {
              "$ref": "#/definitions/ScriptPackagesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptPackages_List": {
            "$ref": "./examples/ScriptPackages_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}": {
      "get": {
        "tags": [
          "Scripts"
        ],
        "description": "Return script package available to run on an Private Cloud",
        "operationId": "ScriptPackages_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/scriptPackageName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded",
            "schema": {
              "$ref": "#/definitions/ScriptPackage"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptPackages_Get": {
            "$ref": "./examples/ScriptPackages_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}/scriptCmdlets": {
      "get": {
        "tags": [
          "Scripts"
        ],
        "description": "Return script cmdlet resources available for a private cloud to create a script execution resource on their Private Cloud",
        "operationId": "ScriptCmdlets_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/scriptPackageName"
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded",
            "schema": {
              "$ref": "#/definitions/ScriptCmdletsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptCmdlets_List": {
            "$ref": "./examples/ScriptCmdlets_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}/scriptCmdlets/{scriptCmdletName}": {
      "get": {
        "tags": [
          "Scripts"
        ],
        "description": "Return information about a script cmdlet resource in a specific package on a private cloud",
        "operationId": "ScriptCmdlets_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/scriptPackageName"
          },
          {
            "$ref": "#/parameters/scriptCmdletName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded",
            "schema": {
              "$ref": "#/definitions/ScriptCmdlet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptCmdlets_Get": {
            "$ref": "./examples/ScriptCmdlets_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions": {
      "get": {
        "operationId": "ScriptExecutions_List",
        "tags": [
          "Scripts"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "summary": "Get an script execution resource by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ScriptExecutionsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptExecutions_List": {
            "$ref": "./examples/ScriptExecutions_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions/{scriptExecutionName}": {
      "get": {
        "operationId": "ScriptExecutions_Get",
        "tags": [
          "Scripts"
        ],
        "summary": "Get an script execution resource by name in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/scriptExecutionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptExecutions_Get": {
            "$ref": "./examples/ScriptExecutions_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ScriptExecutions_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "tags": [
          "Scripts"
        ],
        "summary": "Create or update a script execution resource in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private cloud."
          },
          {
            "$ref": "#/parameters/scriptExecutionName"
          },
          {
            "name": "scriptExecution",
            "description": "A script running in the private cloud",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            }
          },
          "201": {
            "description": "accepted operation",
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptExecutions_CreateOrUpdate": {
            "$ref": "./examples/ScriptExecutions_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "ScriptExecutions_Delete",
        "x-ms-long-running-operation": true,
        "tags": [
          "Scripts"
        ],
        "summary": "Cancel a ScriptExecution in a private cloud",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/scriptExecutionName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The delete has succeeded"
          },
          "202": {
            "description": "Accepted. The delete will complete asynchronously"
          },
          "204": {
            "description": "No Content. No script to cancel"
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptExecutions_Delete": {
            "$ref": "./examples/ScriptExecutions_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions/{scriptExecutionName}/getExecutionLogs": {
      "post": {
        "tags": [
          "Scripts"
        ],
        "description": "Return the logs for a script execution resource",
        "operationId": "ScriptExecutions_GetExecutionLogs",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/privateCloudName"
          },
          {
            "$ref": "#/parameters/scriptExecutionName"
          },
          {
            "$ref": "#/parameters/scriptOutputStreamType"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request has succeeded",
            "schema": {
              "$ref": "#/definitions/ScriptExecution"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScriptExecutions_GetExecutionLogs": {
            "$ref": "./examples/ScriptExecutions_GetExecutionLogs.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Trial": {
      "description": "Subscription trial availability",
      "properties": {
        "status": {
          "description": "Trial status",
          "type": "string",
          "enum": [
            "TrialAvailable",
            "TrialUsed",
            "TrialDisabled"
          ],
          "readOnly": true,
          "x-ms-enum": {
            "name": "TrialStatus",
            "modelAsString": true
          }
        },
        "availableHosts": {
          "description": "Number of trial hosts available",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "Quota": {
      "description": "Subscription quotas",
      "properties": {
        "hostsRemaining": {
          "description": "Remaining hosts quota by sku type",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "quotaEnabled": {
          "description": "Host quota is active for current subscription",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "readOnly": true,
          "x-ms-enum": {
            "name": "QuotaEnabled",
            "modelAsString": true
          }
        }
      }
    },
    "Resource": {
      "description": "The core properties of ARM resources",
      "properties": {
        "id": {
          "description": "Resource ID.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Resource name.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "description": "The resource model definition for a ARM tracked top level resource",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/ResourceTags"
        }
      }
    },
    "ResourceTags": {
      "description": "Resource tags",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "x-ms-mutability": [
        "read",
        "create",
        "update"
      ]
    },
    "ProxyResource": {
      "description": "The resource model definition for a ARM proxy resource",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {}
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "description": "An error returned by the API",
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
        }
      },
      "description": "API error response"
    },
    "OperationList": {
      "description": "Pageable list of operations",
      "properties": {
        "value": {
          "description": "List of operations",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "description": "A REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation being performed on this object",
          "type": "string",
          "readOnly": true
        },
        "display": {
          "description": "Contains the localized display information for this operation",
          "readOnly": true,
          "properties": {
            "provider": {
              "description": "Localized friendly form of the resource provider name",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "Localized friendly form of the resource type related to this operation",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "Localized friendly name for the operation",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "Localized friendly description for the operation",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "isDataAction": {
          "description": "Gets or sets a value indicating whether the operation is a data action or not",
          "type": "boolean"
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of the operation"
        }
      }
    },
    "OperationProperties": {
      "description": "Extra Operation properties",
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "Service specifications of the operation"
        }
      }
    },
    "ServiceSpecification": {
      "description": "Service specification payload",
      "type": "object",
      "properties": {
        "logSpecifications": {
          "description": "Specifications of the Log for Azure Monitoring",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          }
        },
        "metricSpecifications": {
          "description": "Specifications of the Metrics for Azure Monitoring",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          }
        }
      }
    },
    "LogSpecification": {
      "description": "Specifications of the Log for Azure Monitoring",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the log",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the log",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blob duration of the log",
          "type": "string"
        }
      }
    },
    "MetricSpecification": {
      "description": "Specifications of the Metrics for Azure Monitoring",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the metric",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the metric",
          "type": "string"
        },
        "displayDescription": {
          "description": "Localized friendly description of the metric",
          "type": "string"
        },
        "unit": {
          "description": "Unit that makes sense for the metric",
          "type": "string"
        },
        "category": {
          "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
          "type": "string"
        },
        "aggregationType": {
          "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
          "type": "string"
        },
        "supportedAggregationTypes": {
          "description": "Supported aggregation types",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedTimeGrainTypes": {
          "description": "Supported time grain types",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fillGapWithZero": {
          "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
          "type": "boolean"
        },
        "dimensions": {
          "description": "Dimensions of the metric",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          }
        },
        "enableRegionalMdmAccount": {
          "description": "Whether or not the service is using regional MDM accounts.",
          "type": "string"
        },
        "sourceMdmAccount": {
          "description": "The name of the MDM account.",
          "type": "string"
        },
        "sourceMdmNamespace": {
          "description": "The name of the MDM namespace.",
          "type": "string"
        }
      }
    },
    "MetricDimension": {
      "description": "Specifications of the Dimension of metrics",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the dimension",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the dimension",
          "type": "string"
        },
        "internalName": {
          "description": "Name of the dimension as it appears in MDM",
          "type": "string"
        },
        "toBeExportedForShoebox": {
          "description": "A boolean flag indicating whether this dimension should be included for the shoebox export scenario",
          "type": "boolean"
        }
      }
    },
    "ExpressRouteAuthorization": {
      "description": "ExpressRoute Circuit Authorization",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties of an ExpressRoute Circuit Authorization resource",
          "$ref": "#/definitions/ExpressRouteAuthorizationProperties",
          "x-ms-client-flatten": true,
          "readOnly": true
        }
      }
    },
    "ExpressRouteAuthorizationProperties": {
      "description": "The properties of an ExpressRoute Circuit Authorization resource",
      "properties": {
        "provisioningState": {
          "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteAuthorizationProvisioningState",
            "modelAsString": true
          }
        },
        "expressRouteAuthorizationId": {
          "description": "The ID of the ExpressRoute Circuit Authorization",
          "type": "string",
          "readOnly": true
        },
        "expressRouteAuthorizationKey": {
          "description": "The key of the ExpressRoute Circuit Authorization",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ExpressRouteAuthorizationList": {
      "description": "A paged list of ExpressRoute Circuit Authorizations",
      "properties": {
        "value": {
          "description": "The items on a page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ExpressRouteAuthorization"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Circuit": {
      "description": "An ExpressRoute Circuit",
      "properties": {
        "primarySubnet": {
          "type": "string",
          "readOnly": true,
          "description": "CIDR of primary subnet"
        },
        "secondarySubnet": {
          "type": "string",
          "readOnly": true,
          "description": "CIDR of secondary subnet"
        },
        "expressRouteID": {
          "type": "string",
          "readOnly": true,
          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)"
        },
        "expressRoutePrivatePeeringID": {
          "type": "string",
          "readOnly": true,
          "description": "ExpressRoute Circuit private peering identifier"
        }
      }
    },
    "Endpoints": {
      "description": "Endpoint addresses",
      "properties": {
        "nsxtManager": {
          "description": "Endpoint for the NSX-T Data Center manager",
          "type": "string",
          "readOnly": true
        },
        "vcsa": {
          "description": "Endpoint for Virtual Center Server Appliance",
          "type": "string",
          "readOnly": true
        },
        "hcxCloudManager": {
          "description": "Endpoint for the HCX Cloud Manager",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IdentitySource": {
      "description": "vCenter Single Sign On Identity Source",
      "properties": {
        "name": {
          "description": "The name of the identity source",
          "type": "string"
        },
        "alias": {
          "description": "The domain's NetBIOS name",
          "type": "string"
        },
        "domain": {
          "description": "The domain's dns name",
          "type": "string"
        },
        "baseUserDN": {
          "description": "The base distinguished name for users",
          "type": "string"
        },
        "baseGroupDN": {
          "description": "The base distinguished name for groups",
          "type": "string"
        },
        "primaryServer": {
          "description": "Primary server URL",
          "type": "string"
        },
        "secondaryServer": {
          "description": "Secondary server URL",
          "type": "string"
        },
        "ssl": {
          "description": "Protect LDAP communication using SSL certificate (LDAPS)",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SslEnum",
            "modelAsString": true
          }
        },
        "username": {
          "description": "The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group",
          "type": "string"
        },
        "password": {
          "description": "The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "PrivateCloud": {
      "description": "A private cloud resource",
      "required": [
        "location",
        "sku"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "sku": {
          "description": "The private cloud SKU",
          "$ref": "#/definitions/Sku"
        },
        "properties": {
          "description": "The properties of a private cloud resource",
          "$ref": "#/definitions/PrivateCloudProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateCloudUpdate": {
      "description": "An update to a private cloud resource",
      "properties": {
        "tags": {
          "description": "Resource tags",
          "$ref": "#/definitions/ResourceTags"
        },
        "properties": {
          "description": "The updatable properties of a private cloud resource",
          "$ref": "#/definitions/PrivateCloudUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateCloudUpdateProperties": {
      "description": "The properties of a private cloud resource that may be updated",
      "properties": {
        "managementCluster": {
          "description": "The default cluster used for management",
          "$ref": "#/definitions/ManagementCluster"
        },
        "internet": {
          "description": "Connectivity to internet is enabled or disabled",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Disabled",
          "x-ms-enum": {
            "name": "InternetEnum",
            "modelAsString": true
          }
        },
        "identitySources": {
          "description": "vCenter Single Sign On Identity Sources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentitySource"
          }
        }
      }
    },
    "PrivateCloudProperties": {
      "description": "The properties of a private cloud resource",
      "required": [
        "managementCluster",
        "networkBlock"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/PrivateCloudUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Cancelled",
            "Pending",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "PrivateCloudProvisioningState",
            "modelAsString": true
          }
        },
        "circuit": {
          "description": "An ExpressRoute Circuit",
          "$ref": "#/definitions/Circuit"
        },
        "endpoints": {
          "description": "The endpoints",
          "readOnly": true,
          "$ref": "#/definitions/Endpoints"
        },
        "networkBlock": {
          "description": "The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22",
          "type": "string"
        },
        "managementNetwork": {
          "description": "Network used to access vCenter Server and NSX-T Manager",
          "type": "string",
          "readOnly": true
        },
        "provisioningNetwork": {
          "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
          "type": "string",
          "readOnly": true
        },
        "vmotionNetwork": {
          "description": "Used for live migration of virtual machines",
          "type": "string",
          "readOnly": true
        },
        "vcenterPassword": {
          "description": "Optionally, set the vCenter admin password when the private cloud is created",
          "type": "string",
          "x-ms-secret": true
        },
        "nsxtPassword": {
          "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
          "type": "string",
          "x-ms-secret": true
        },
        "vcenterCertificateThumbprint": {
          "description": "Thumbprint of the vCenter Server SSL certificate",
          "type": "string",
          "readOnly": true
        },
        "nsxtCertificateThumbprint": {
          "description": "Thumbprint of the NSX-T Manager SSL certificate",
          "type": "string",
          "readOnly": true
        },
        "externalCloudLinks": {
          "description": "Array of cloud link IDs from other clouds that connect to this one",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Cluster": {
      "description": "A cluster resource",
      "required": [
        "sku"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "sku": {
          "description": "The cluster SKU",
          "$ref": "#/definitions/Sku"
        },
        "properties": {
          "description": "The properties of a cluster resource",
          "$ref": "#/definitions/ClusterProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ClusterUpdate": {
      "description": "An update of a cluster resource",
      "properties": {
        "properties": {
          "description": "The properties of a cluster resource that may be updated",
          "$ref": "#/definitions/ClusterUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ClusterUpdateProperties": {
      "description": "The properties of a cluster that may be updated",
      "properties": {
        "clusterSize": {
          "description": "The cluster size",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ClusterProvisioningState": {
      "description": "The state of the cluster provisioning",
      "type": "string",
      "readOnly": true,
      "enum": [
        "Succeeded",
        "Failed",
        "Cancelled",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ClusterProvisioningState",
        "modelAsString": true
      }
    },
    "CommonClusterProperties": {
      "description": "The common properties of a cluster",
      "properties": {
        "clusterSize": {
          "description": "The cluster size",
          "type": "integer",
          "format": "int32"
        },
        "provisioningState": {
          "description": "The state of the cluster provisioning",
          "$ref": "#/definitions/ClusterProvisioningState"
        },
        "clusterId": {
          "description": "The identity",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "hosts": {
          "description": "The hosts",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ManagementCluster": {
      "description": "The properties of a management cluster",
      "required": [
        "clusterSize"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CommonClusterProperties"
        }
      ]
    },
    "ClusterProperties": {
      "description": "The properties of a cluster",
      "allOf": [
        {
          "$ref": "#/definitions/CommonClusterProperties"
        }
      ],
      "properties": {}
    },
    "PrivateCloudList": {
      "description": "A paged list of private clouds",
      "properties": {
        "value": {
          "description": "The items on the page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PrivateCloud"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ClusterList": {
      "description": "A paged list of clusters",
      "properties": {
        "value": {
          "description": "The items on a page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Addon": {
      "description": "An addon resource",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties of an addon resource",
          "$ref": "#/definitions/AddonProperties",
          "x-ms-client-flatten": false
        }
      }
    },
    "AddonProperties": {
      "description": "The properties of an addon",
      "discriminator": "addonType",
      "properties": {
        "addonType": {
          "description": "The type of private cloud addon",
          "type": "string",
          "enum": [
            "SRM",
            "VR",
            "HCX"
          ],
          "x-ms-enum": {
            "name": "AddonType",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "The state of the addon provisioning",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Cancelled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "AddonProvisioningState",
            "modelAsString": true
          }
        }
      },
      "required": [
        "addonType"
      ]
    },
    "AddonSrmProperties": {
      "description": "The properties of a Site Recovery Manager (SRM) addon",
      "x-ms-discriminator-value": "SRM",
      "allOf": [
        {
          "$ref": "#/definitions/AddonProperties"
        }
      ],
      "properties": {
        "licenseKey": {
          "description": "The Site Recovery Manager (SRM) license",
          "type": "string"
        }
      },
      "required": [
        "licenseKey"
      ]
    },
    "AddonVrProperties": {
      "description": "The properties of a vSphere Replication (VR) addon",
      "x-ms-discriminator-value": "VR",
      "allOf": [
        {
          "$ref": "#/definitions/AddonProperties"
        }
      ],
      "properties": {
        "vrsCount": {
          "description": "The vSphere Replication Server (VRS) count",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "vrsCount"
      ]
    },
    "AddonHcxProperties": {
      "description": "The properties of an HCX addon",
      "x-ms-discriminator-value": "HCX",
      "allOf": [
        {
          "$ref": "#/definitions/AddonProperties"
        }
      ],
      "properties": {
        "offer": {
          "description": "The HCX offer, example VMware MaaS Cloud Provider (Enterprise)",
          "type": "string"
        }
      },
      "required": [
        "offer"
      ]
    },
    "AddonList": {
      "description": "A paged list of addons",
      "properties": {
        "value": {
          "description": "The items on a page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Addon"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatastoreList": {
      "description": "A paged list of datastores",
      "properties": {
        "value": {
          "description": "The items on a page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Datastore"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Datastore": {
      "description": "A datastore resource",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties of a datastore resource",
          "$ref": "#/definitions/DatastoreProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "DatastoreProperties": {
      "description": "The properties of a datastore",
      "properties": {
        "provisioningState": {
          "description": "The state of the datastore provisioning",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Cancelled",
            "Pending",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "DatastoreProvisioningState",
            "modelAsString": true
          }
        },
        "netAppVolume": {
          "description": "An Azure NetApp Files volume",
          "$ref": "#/definitions/NetAppVolume"
        },
        "diskPoolVolume": {
          "description": "An iSCSI volume",
          "$ref": "#/definitions/DiskPoolVolume"
        }
      }
    },
    "NetAppVolume": {
      "description": "An Azure NetApp Files volume from Microsoft.NetApp provider",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource ID of the NetApp volume"
        }
      },
      "required": [
        "id"
      ]
    },
    "DiskPoolVolume": {
      "description": "An iSCSI volume from Microsoft.StoragePool provider",
      "properties": {
        "targetId": {
          "type": "string",
          "description": "Azure resource ID of the iSCSI target"
        },
        "lunName": {
          "type": "string",
          "description": "Name of the LUN to be used for datastore"
        },
        "mountOption": {
          "type": "string",
          "description": "Mode that describes whether the LUN has to be mounted as a datastore or attached as a LUN",
          "enum": [
            "MOUNT",
            "ATTACH"
          ],
          "x-ms-enum": {
            "name": "MountOptionEnum",
            "modelAsString": true
          },
          "default": "MOUNT"
        },
        "path": {
          "type": "string",
          "description": "Device path",
          "readOnly": true
        }
      },
      "required": [
        "targetId",
        "lunName"
      ]
    },
    "AdminCredentials": {
      "description": "Administrative credentials for accessing vCenter and NSX-T",
      "properties": {
        "nsxtUsername": {
          "description": "NSX-T Manager username",
          "type": "string",
          "readOnly": true
        },
        "nsxtPassword": {
          "description": "NSX-T Manager password",
          "type": "string",
          "readOnly": true,
          "x-ms-secret": true
        },
        "vcenterUsername": {
          "description": "vCenter admin username",
          "type": "string",
          "readOnly": true
        },
        "vcenterPassword": {
          "description": "vCenter admin password",
          "type": "string",
          "readOnly": true,
          "x-ms-secret": true
        }
      }
    },
    "Sku": {
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU."
        }
      },
      "required": [
        "name"
      ]
    },
    "HcxEnterpriseSiteList": {
      "description": "A paged list of HCX Enterprise Sites",
      "properties": {
        "value": {
          "description": "The items on a page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/HcxEnterpriseSite"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HcxEnterpriseSite": {
      "description": "An HCX Enterprise Site resource",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties of an HCX Enterprise Site resource",
          "$ref": "#/definitions/HcxEnterpriseSiteProperties",
          "x-ms-client-flatten": true,
          "readOnly": true
        }
      }
    },
    "HcxEnterpriseSiteProperties": {
      "description": "The properties of an HCX Enterprise Site",
      "properties": {
        "activationKey": {
          "description": "The activation key",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the HCX Enterprise Site",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Available",
            "Consumed",
            "Deactivated",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "HcxEnterpriseSiteStatus",
            "modelAsString": true
          }
        }
      }
    },
    "GlobalReachConnectionList": {
      "description": "A paged list of global reach connections",
      "properties": {
        "value": {
          "description": "The items on a page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/GlobalReachConnection"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GlobalReachConnection": {
      "description": "A global reach connection resource",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties of a global reach connection resource",
          "$ref": "#/definitions/GlobalReachConnectionProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "GlobalReachConnectionProperties": {
      "description": "The properties of a global reach connection",
      "properties": {
        "provisioningState": {
          "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "GlobalReachConnectionProvisioningState",
            "modelAsString": true
          }
        },
        "addressPrefix": {
          "description": "The network used for global reach carved out from the original network block provided for the private cloud",
          "type": "string",
          "readOnly": true
        },
        "authorizationKey": {
          "description": "Authorization key from the peer express route used for the global reach connection",
          "type": "string"
        },
        "circuitConnectionStatus": {
          "description": "The connection status of the global reach connection",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Connected",
            "Connecting",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "GlobalReachConnectionStatus",
            "modelAsString": true
          }
        },
        "peerExpressRouteCircuit": {
          "type": "string",
          "description": "Identifier of the ExpressRoute Circuit to peer with in the global reach connection"
        }
      }
    },
    "CloudLinkList": {
      "description": "A paged list of cloud links",
      "properties": {
        "value": {
          "description": "The items on a page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/CloudLink"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CloudLink": {
      "description": "A cloud link resource",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties of a cloud link.",
          "$ref": "#/definitions/CloudLinkProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "CloudLinkProperties": {
      "description": "The properties of a cloud link.",
      "properties": {
        "status": {
          "description": "The state of the cloud link.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Active",
            "Building",
            "Deleting",
            "Failed",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "CloudLinkStatus",
            "modelAsString": true
          }
        },
        "linkedCloud": {
          "type": "string",
          "description": "Identifier of the other private cloud participating in the link."
        }
      }
    },
    "WorkloadNetworkSegmentSubnet": {
      "description": "Subnet configuration for segment",
      "properties": {
        "dhcpRanges": {
          "description": "DHCP Range assigned for subnet.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gatewayAddress": {
          "description": "Gateway address.",
          "type": "string"
        }
      }
    },
    "WorkloadNetworkSegmentPortVif": {
      "description": "Ports and any VIF attached to segment.",
      "properties": {
        "portName": {
          "description": "Name of port or VIF attached to segment.",
          "type": "string"
        }
      }
    },
    "WorkloadNetworkSegmentProperties": {
      "description": "NSX Segment Properties",
      "properties": {
        "displayName": {
          "description": "Display name of the segment.",
          "type": "string"
        },
        "connectedGateway": {
          "description": "Gateway which to connect segment to.",
          "type": "string"
        },
        "subnet": {
          "description": "Subnet which to connect segment to.",
          "$ref": "#/definitions/WorkloadNetworkSegmentSubnet"
        },
        "portVif": {
          "description": "Port Vif which segment is associated with.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadNetworkSegmentPortVif"
          },
          "readOnly": true
        },
        "status": {
          "description": "Segment status.",
          "type": "string",
          "enum": [
            "SUCCESS, FAILURE"
          ],
          "x-ms-enum": {
            "name": "SegmentStatusEnum",
            "modelAsString": true
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkSegmentProvisioningState",
            "modelAsString": true
          }
        },
        "revision": {
          "description": "NSX revision number.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "WorkloadNetworkSegment": {
      "description": "NSX Segment",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties of a Workload Segment proxy resource.",
          "$ref": "#/definitions/WorkloadNetworkSegmentProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkSegmentsList": {
      "description": "A list of NSX Segments",
      "properties": {
        "value": {
          "description": "The items on the page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WorkloadNetworkSegment"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkDhcpEntity": {
      "description": "Base class for WorkloadNetworkDhcpServer and WorkloadNetworkDhcpRelay to inherit from",
      "discriminator": "dhcpType",
      "properties": {
        "dhcpType": {
          "description": "Type of DHCP: SERVER or RELAY.",
          "type": "string",
          "enum": [
            "SERVER",
            "RELAY"
          ],
          "x-ms-enum": {
            "name": "DhcpTypeEnum",
            "modelAsString": true
          }
        },
        "displayName": {
          "description": "Display name of the DHCP entity.",
          "type": "string"
        },
        "segments": {
          "description": "NSX Segments consuming DHCP.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkDhcpProvisioningState",
            "modelAsString": true
          }
        },
        "revision": {
          "description": "NSX revision number.",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "dhcpType"
      ]
    },
    "WorkloadNetworkDhcpServer": {
      "description": "NSX DHCP Server",
      "x-ms-discriminator-value": "SERVER",
      "allOf": [
        {
          "$ref": "#/definitions/WorkloadNetworkDhcpEntity"
        }
      ],
      "properties": {
        "serverAddress": {
          "description": "DHCP Server Address.",
          "type": "string"
        },
        "leaseTime": {
          "description": "DHCP Server Lease Time.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "WorkloadNetworkDhcpRelay": {
      "description": "NSX DHCP Relay",
      "x-ms-discriminator-value": "RELAY",
      "allOf": [
        {
          "$ref": "#/definitions/WorkloadNetworkDhcpEntity"
        }
      ],
      "properties": {
        "serverAddresses": {
          "description": "DHCP Relay Addresses. Max 3.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 3
        }
      }
    },
    "WorkloadNetworkDhcp": {
      "description": "NSX DHCP",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DHCP properties.",
          "$ref": "#/definitions/WorkloadNetworkDhcpEntity",
          "x-ms-client-flatten": false
        }
      }
    },
    "WorkloadNetworkDhcpList": {
      "description": "A list of NSX dhcp entities",
      "properties": {
        "value": {
          "description": "The items on the page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WorkloadNetworkDhcp"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkPortMirroringProperties": {
      "description": "NSX Port Mirroring Properties",
      "properties": {
        "displayName": {
          "description": "Display name of the port mirroring profile.",
          "type": "string"
        },
        "direction": {
          "description": "Direction of port mirroring profile.",
          "type": "string",
          "enum": [
            "INGRESS, EGRESS, BIDIRECTIONAL"
          ],
          "x-ms-enum": {
            "name": "PortMirroringDirectionEnum",
            "modelAsString": true
          }
        },
        "source": {
          "description": "Source VM Group.",
          "type": "string"
        },
        "destination": {
          "description": "Destination VM Group.",
          "type": "string"
        },
        "status": {
          "description": "Port Mirroring Status.",
          "type": "string",
          "enum": [
            "SUCCESS, FAILURE"
          ],
          "x-ms-enum": {
            "name": "PortMirroringStatusEnum",
            "modelAsString": true
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkPortMirroringProvisioningState",
            "modelAsString": true
          }
        },
        "revision": {
          "description": "NSX revision number.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "WorkloadNetworkPortMirroring": {
      "description": "NSX Port Mirroring",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Port Mirroring Properties.",
          "$ref": "#/definitions/WorkloadNetworkPortMirroringProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkPortMirroringList": {
      "description": "A list of NSX Port Mirroring",
      "properties": {
        "value": {
          "description": "The items on the page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WorkloadNetworkPortMirroring"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkVMGroupProperties": {
      "description": "NSX VM Group Properties",
      "properties": {
        "displayName": {
          "description": "Display name of the VM group.",
          "type": "string"
        },
        "members": {
          "description": "Virtual machine members of this group.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "VM Group status.",
          "type": "string",
          "enum": [
            "SUCCESS, FAILURE"
          ],
          "x-ms-enum": {
            "name": "VMGroupStatusEnum",
            "modelAsString": true
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkVMGroupProvisioningState",
            "modelAsString": true
          }
        },
        "revision": {
          "description": "NSX revision number.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "WorkloadNetworkVMGroup": {
      "description": "NSX VM Group",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "VM Group properties.",
          "$ref": "#/definitions/WorkloadNetworkVMGroupProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkVMGroupsList": {
      "description": "A list of NSX VM Groups",
      "properties": {
        "value": {
          "description": "The items on the page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WorkloadNetworkVMGroup"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkVirtualMachineProperties": {
      "description": "NSX Virtual Machine Properties",
      "properties": {
        "displayName": {
          "description": "Display name of the VM.",
          "type": "string"
        },
        "vmType": {
          "description": "Virtual machine type.",
          "type": "string",
          "enum": [
            "REGULAR, EDGE, SERVICE"
          ],
          "x-ms-enum": {
            "name": "VMTypeEnum",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkVirtualMachine": {
      "description": "NSX Virtual Machine",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Virtual machine properties.",
          "$ref": "#/definitions/WorkloadNetworkVirtualMachineProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkVirtualMachinesList": {
      "description": "A list of NSX Virtual Machines",
      "properties": {
        "value": {
          "description": "The items on the page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WorkloadNetworkVirtualMachine"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkGatewayProperties": {
      "description": "Properties of a NSX Gateway.",
      "properties": {
        "displayName": {
          "description": "Display name of the DHCP entity.",
          "type": "string"
        },
        "path": {
          "description": "NSX Gateway Path.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkGateway": {
      "description": "NSX Gateway.",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Gateway properties.",
          "$ref": "#/definitions/WorkloadNetworkGatewayProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkGatewayList": {
      "description": "A list of NSX Gateways",
      "properties": {
        "value": {
          "description": "The items on the page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WorkloadNetworkGateway"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkDnsServiceProperties": {
      "description": "NSX DNS Service Properties",
      "properties": {
        "displayName": {
          "description": "Display name of the DNS Service.",
          "type": "string"
        },
        "dnsServiceIp": {
          "description": "DNS service IP of the DNS Service.",
          "type": "string"
        },
        "defaultDnsZone": {
          "description": "Default DNS zone of the DNS Service.",
          "type": "string"
        },
        "fqdnZones": {
          "description": "FQDN zones of the DNS Service.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logLevel": {
          "description": "DNS Service log level.",
          "type": "string",
          "enum": [
            "DEBUG",
            "INFO",
            "WARNING",
            "ERROR",
            "FATAL"
          ],
          "x-ms-enum": {
            "name": "DnsServiceLogLevelEnum",
            "modelAsString": true
          }
        },
        "status": {
          "description": "DNS Service status.",
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ],
          "x-ms-enum": {
            "name": "DnsServiceStatusEnum",
            "modelAsString": true
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkDnsServiceProvisioningState",
            "modelAsString": true
          }
        },
        "revision": {
          "description": "NSX revision number.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "WorkloadNetworkDnsService": {
      "description": "NSX DNS Service",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DNS Service properties",
          "$ref": "#/definitions/WorkloadNetworkDnsServiceProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkDnsServicesList": {
      "description": "A list of NSX DNS Services",
      "properties": {
        "value": {
          "description": "The items on the page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WorkloadNetworkDnsService"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkDnsZoneProperties": {
      "description": "NSX DNS Zone Properties",
      "properties": {
        "displayName": {
          "description": "Display name of the DNS Zone.",
          "type": "string"
        },
        "domain": {
          "description": "Domain names of the DNS Zone.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dnsServerIps": {
          "description": "DNS Server IP array of the DNS Zone.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sourceIp": {
          "description": "Source IP of the DNS Zone.",
          "type": "string"
        },
        "dnsServices": {
          "description": "Number of DNS Services using the DNS zone.",
          "type": "integer",
          "format": "int64"
        },
        "provisioningState": {
          "description": "The provisioning state",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkDnsZoneProvisioningState",
            "modelAsString": true
          }
        },
        "revision": {
          "description": "NSX revision number.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "WorkloadNetworkDnsZone": {
      "description": "NSX DNS Zone",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "DNS Zone properties",
          "$ref": "#/definitions/WorkloadNetworkDnsZoneProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkDnsZonesList": {
      "description": "A list of NSX DNS Zones",
      "properties": {
        "value": {
          "description": "The items on the page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WorkloadNetworkDnsZone"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkPublicIPProperties": {
      "description": "NSX Public IP Block Properties",
      "properties": {
        "displayName": {
          "description": "Display name of the Public IP Block.",
          "type": "string"
        },
        "numberOfPublicIPs": {
          "description": "Number of Public IPs requested.",
          "type": "integer",
          "format": "int64"
        },
        "publicIPBlock": {
          "description": "CIDR Block of the Public IP Block.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkPublicIPProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "WorkloadNetworkPublicIP": {
      "description": "NSX Public IP Block",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Public IP Block properties",
          "$ref": "#/definitions/WorkloadNetworkPublicIPProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadNetworkPublicIPsList": {
      "description": "A list of NSX Public IP Blocks",
      "properties": {
        "value": {
          "description": "The items on the page",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WorkloadNetworkPublicIP"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ScriptPackageProperties": {
      "description": "Properties of a Script Package subresource",
      "properties": {
        "description": {
          "description": "User friendly description of the package",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Module version",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ScriptPackagesList": {
      "description": "A list of the available script packages",
      "properties": {
        "value": {
          "description": "List of script package resources",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ScriptPackage"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ScriptPackage": {
      "description": "Script Package resources available for execution",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "ScriptPackage resource properties",
          "$ref": "#/definitions/ScriptPackageProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ScriptParameter": {
      "description": "An parameter that the script will accept",
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The type of parameter the script is expecting. psCredential is a PSCredentialObject",
          "enum": [
            "String",
            "SecureString",
            "Credential",
            "Int",
            "Bool",
            "Float"
          ],
          "x-ms-enum": {
            "name": "ScriptParameterTypes",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string",
          "description": "The parameter name that the script will expect a parameter value for"
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "User friendly description of the parameter"
        },
        "visibility": {
          "description": "Should this parameter be visible to arm and passed in the parameters argument when executing",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Visible",
            "Hidden"
          ],
          "x-ms-enum": {
            "name": "VisibilityParameterEnum",
            "modelAsString": true
          }
        },
        "optional": {
          "description": "Is this parameter required or optional",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Optional",
            "Required"
          ],
          "x-ms-enum": {
            "name": "OptionalParamEnum",
            "modelAsString": true
          }
        }
      }
    },
    "ScriptCmdlet": {
      "description": "A cmdlet available for script execution",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties of a script cmdlet resource",
          "$ref": "#/definitions/ScriptCmdletProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ScriptCmdletProperties": {
      "description": "Properties of a pre-canned script",
      "properties": {
        "description": {
          "description": "Description of the scripts functionality",
          "type": "string",
          "readOnly": true
        },
        "timeout": {
          "description": "Recommended time limit for execution",
          "type": "string",
          "readOnly": true
        },
        "parameters": {
          "description": "Parameters the script will accept",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ScriptParameter"
          }
        }
      }
    },
    "ScriptCmdletsList": {
      "description": "Pageable list of scripts/cmdlets",
      "properties": {
        "value": {
          "description": "List of scripts",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ScriptCmdlet"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ScriptExecutionParameter": {
      "discriminator": "type",
      "description": "The arguments passed in to the execution",
      "properties": {
        "name": {
          "type": "string",
          "description": "The parameter name"
        },
        "type": {
          "description": "The type of execution parameter",
          "type": "string",
          "enum": [
            "Value",
            "SecureValue",
            "Credential"
          ],
          "x-ms-enum": {
            "name": "ScriptExecutionParameterType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "ScriptExecution": {
      "description": "An instance of a script executed by a user - custom or AVS",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties of a script execution resource",
          "$ref": "#/definitions/ScriptExecutionProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ScriptExecutionProperties": {
      "description": "Properties of a user-invoked script",
      "properties": {
        "scriptCmdletId": {
          "description": "A reference to the script cmdlet resource if user is running a AVS script",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters the script will accept",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptExecutionParameter"
          }
        },
        "hiddenParameters": {
          "description": "Parameters that will be hidden/not visible to ARM, such as passwords and credentials",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScriptExecutionParameter"
          }
        },
        "failureReason": {
          "type": "string",
          "description": "Error message if the script was able to run, but if the script itself had errors or powershell threw an exception"
        },
        "timeout": {
          "description": "Time limit for execution",
          "type": "string"
        },
        "retention": {
          "description": "Time to live for the resource. If not provided, will be available for 60 days",
          "type": "string"
        },
        "submittedAt": {
          "description": "Time the script execution was submitted",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "startedAt": {
          "description": "Time the script execution was started",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "finishedAt": {
          "description": "Time the script execution was finished",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The state of the script execution resource",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Pending",
            "Running",
            "Succeeded",
            "Failed",
            "Cancelling",
            "Cancelled",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ScriptExecutionProvisioningState",
            "modelAsString": true
          }
        },
        "output": {
          "description": "Standard output stream from the powershell execution",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namedOutputs": {
          "description": "User-defined dictionary.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Dictionary in <name, value> pair."
          }
        },
        "information": {
          "description": "Standard information out stream from the powershell execution",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "warnings": {
          "description": "Standard warning out stream from the powershell execution",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "errors": {
          "description": "Standard error output stream from the powershell execution",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "timeout"
      ]
    },
    "ScriptExecutionsList": {
      "description": "Pageable list of script executions",
      "properties": {
        "value": {
          "description": "List of scripts",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ScriptExecution"
          }
        },
        "nextLink": {
          "description": "URL to get the next page if any",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ScriptSecureStringExecutionParameter": {
      "description": "a plain text value execution parameter",
      "x-ms-discriminator-value": "SecureValue",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptExecutionParameter"
        }
      ],
      "properties": {
        "secureValue": {
          "type": "string",
          "description": "A secure value for the passed parameter, not to be stored in logs",
          "x-ms-secret": true
        }
      }
    },
    "ScriptStringExecutionParameter": {
      "description": "a plain text value execution parameter",
      "x-ms-discriminator-value": "Value",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptExecutionParameter"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "description": "The value for the passed parameter"
        }
      }
    },
    "PSCredentialExecutionParameter": {
      "description": "a powershell credential object",
      "x-ms-discriminator-value": "Credential",
      "allOf": [
        {
          "$ref": "#/definitions/ScriptExecutionParameter"
        }
      ],
      "properties": {
        "username": {
          "description": "username for login",
          "type": "string"
        },
        "password": {
          "description": "password for login",
          "type": "string"
        }
      },
      "x-ms-secret": true
    }
  }
}
