// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armavs

const host = "https://management.azure.com"

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/avs/armavs"
	moduleVersion = "v0.1.0"
)

// ActionType - Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	// ActionTypeInternal - Actions are for internal-only APIs.
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

// AddonProvisioningState - Addon provisioning state
type AddonProvisioningState string

const (
	// AddonProvisioningStateBuilding - is building
	AddonProvisioningStateBuilding AddonProvisioningState = "Building"
	// AddonProvisioningStateCanceled - Resource creation was canceled.
	AddonProvisioningStateCanceled AddonProvisioningState = "Canceled"
	// AddonProvisioningStateCancelled - is cancelled
	AddonProvisioningStateCancelled AddonProvisioningState = "Cancelled"
	// AddonProvisioningStateDeleting - is deleting
	AddonProvisioningStateDeleting AddonProvisioningState = "Deleting"
	// AddonProvisioningStateFailed - Resource creation failed.
	AddonProvisioningStateFailed AddonProvisioningState = "Failed"
	// AddonProvisioningStateSucceeded - Resource has been created.
	AddonProvisioningStateSucceeded AddonProvisioningState = "Succeeded"
	// AddonProvisioningStateUpdating - is updating
	AddonProvisioningStateUpdating AddonProvisioningState = "Updating"
)

// PossibleAddonProvisioningStateValues returns the possible values for the AddonProvisioningState const type.
func PossibleAddonProvisioningStateValues() []AddonProvisioningState {
	return []AddonProvisioningState{
		AddonProvisioningStateBuilding,
		AddonProvisioningStateCanceled,
		AddonProvisioningStateCancelled,
		AddonProvisioningStateDeleting,
		AddonProvisioningStateFailed,
		AddonProvisioningStateSucceeded,
		AddonProvisioningStateUpdating,
	}
}

// AddonType - Addon type
type AddonType string

const (
	AddonTypeArc AddonType = "Arc"
	AddonTypeHCX AddonType = "HCX"
	AddonTypeSRM AddonType = "SRM"
	AddonTypeVR  AddonType = "VR"
)

// PossibleAddonTypeValues returns the possible values for the AddonType const type.
func PossibleAddonTypeValues() []AddonType {
	return []AddonType{
		AddonTypeArc,
		AddonTypeHCX,
		AddonTypeSRM,
		AddonTypeVR,
	}
}

// AffinityStrength - Affinity Strength
type AffinityStrength string

const (
	// AffinityStrengthMust - is must
	AffinityStrengthMust AffinityStrength = "Must"
	// AffinityStrengthShould - is should
	AffinityStrengthShould AffinityStrength = "Should"
)

// PossibleAffinityStrengthValues returns the possible values for the AffinityStrength const type.
func PossibleAffinityStrengthValues() []AffinityStrength {
	return []AffinityStrength{
		AffinityStrengthMust,
		AffinityStrengthShould,
	}
}

// AffinityType - Affinity type
type AffinityType string

const (
	// AffinityTypeAffinity - is affinity
	AffinityTypeAffinity AffinityType = "Affinity"
	// AffinityTypeAntiAffinity - is anti-affinity
	AffinityTypeAntiAffinity AffinityType = "AntiAffinity"
)

// PossibleAffinityTypeValues returns the possible values for the AffinityType const type.
func PossibleAffinityTypeValues() []AffinityType {
	return []AffinityType{
		AffinityTypeAffinity,
		AffinityTypeAntiAffinity,
	}
}

// AvailabilityStrategy - Whether the private clouds is available in a single zone or two zones
type AvailabilityStrategy string

const (
	// AvailabilityStrategyDualZone - in two zones
	AvailabilityStrategyDualZone AvailabilityStrategy = "DualZone"
	// AvailabilityStrategySingleZone - in single zone
	AvailabilityStrategySingleZone AvailabilityStrategy = "SingleZone"
)

// PossibleAvailabilityStrategyValues returns the possible values for the AvailabilityStrategy const type.
func PossibleAvailabilityStrategyValues() []AvailabilityStrategy {
	return []AvailabilityStrategy{
		AvailabilityStrategyDualZone,
		AvailabilityStrategySingleZone,
	}
}

// AzureHybridBenefitType - Azure Hybrid Benefit type
type AzureHybridBenefitType string

const (
	// AzureHybridBenefitTypeNone - is None
	AzureHybridBenefitTypeNone AzureHybridBenefitType = "None"
	// AzureHybridBenefitTypeSQLHost - is SqlHost
	AzureHybridBenefitTypeSQLHost AzureHybridBenefitType = "SqlHost"
)

// PossibleAzureHybridBenefitTypeValues returns the possible values for the AzureHybridBenefitType const type.
func PossibleAzureHybridBenefitTypeValues() []AzureHybridBenefitType {
	return []AzureHybridBenefitType{
		AzureHybridBenefitTypeNone,
		AzureHybridBenefitTypeSQLHost,
	}
}

// CloudLinkProvisioningState - cloud link provisioning state
type CloudLinkProvisioningState string

const (
	// CloudLinkProvisioningStateCanceled - Resource creation was canceled.
	CloudLinkProvisioningStateCanceled CloudLinkProvisioningState = "Canceled"
	// CloudLinkProvisioningStateFailed - Resource creation failed.
	CloudLinkProvisioningStateFailed CloudLinkProvisioningState = "Failed"
	// CloudLinkProvisioningStateSucceeded - Resource has been created.
	CloudLinkProvisioningStateSucceeded CloudLinkProvisioningState = "Succeeded"
)

// PossibleCloudLinkProvisioningStateValues returns the possible values for the CloudLinkProvisioningState const type.
func PossibleCloudLinkProvisioningStateValues() []CloudLinkProvisioningState {
	return []CloudLinkProvisioningState{
		CloudLinkProvisioningStateCanceled,
		CloudLinkProvisioningStateFailed,
		CloudLinkProvisioningStateSucceeded,
	}
}

// CloudLinkStatus - Cloud Link status
type CloudLinkStatus string

const (
	// CloudLinkStatusActive - is active
	CloudLinkStatusActive CloudLinkStatus = "Active"
	// CloudLinkStatusBuilding - is building
	CloudLinkStatusBuilding CloudLinkStatus = "Building"
	// CloudLinkStatusDeleting - is deleting
	CloudLinkStatusDeleting CloudLinkStatus = "Deleting"
	// CloudLinkStatusDisconnected - is disconnected
	CloudLinkStatusDisconnected CloudLinkStatus = "Disconnected"
	// CloudLinkStatusFailed - is failed
	CloudLinkStatusFailed CloudLinkStatus = "Failed"
)

// PossibleCloudLinkStatusValues returns the possible values for the CloudLinkStatus const type.
func PossibleCloudLinkStatusValues() []CloudLinkStatus {
	return []CloudLinkStatus{
		CloudLinkStatusActive,
		CloudLinkStatusBuilding,
		CloudLinkStatusDeleting,
		CloudLinkStatusDisconnected,
		CloudLinkStatusFailed,
	}
}

// ClusterProvisioningState - Cluster provisioning state
type ClusterProvisioningState string

const (
	// ClusterProvisioningStateCanceled - Resource creation was canceled.
	ClusterProvisioningStateCanceled ClusterProvisioningState = "Canceled"
	// ClusterProvisioningStateCancelled - is cancelled
	ClusterProvisioningStateCancelled ClusterProvisioningState = "Cancelled"
	// ClusterProvisioningStateDeleting - is deleting
	ClusterProvisioningStateDeleting ClusterProvisioningState = "Deleting"
	// ClusterProvisioningStateFailed - Resource creation failed.
	ClusterProvisioningStateFailed ClusterProvisioningState = "Failed"
	// ClusterProvisioningStateSucceeded - Resource has been created.
	ClusterProvisioningStateSucceeded ClusterProvisioningState = "Succeeded"
	// ClusterProvisioningStateUpdating - is updating
	ClusterProvisioningStateUpdating ClusterProvisioningState = "Updating"
)

// PossibleClusterProvisioningStateValues returns the possible values for the ClusterProvisioningState const type.
func PossibleClusterProvisioningStateValues() []ClusterProvisioningState {
	return []ClusterProvisioningState{
		ClusterProvisioningStateCanceled,
		ClusterProvisioningStateCancelled,
		ClusterProvisioningStateDeleting,
		ClusterProvisioningStateFailed,
		ClusterProvisioningStateSucceeded,
		ClusterProvisioningStateUpdating,
	}
}

// CreatedByType - The kind of entity that created the resource.
type CreatedByType string

const (
	// CreatedByTypeApplication - The entity was created by an application.
	CreatedByTypeApplication CreatedByType = "Application"
	// CreatedByTypeKey - The entity was created by a key.
	CreatedByTypeKey CreatedByType = "Key"
	// CreatedByTypeManagedIdentity - The entity was created by a managed identity.
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	// CreatedByTypeUser - The entity was created by a user.
	CreatedByTypeUser CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// DNSServiceLogLevelEnum - DNS service log level
type DNSServiceLogLevelEnum string

const (
	// DNSServiceLogLevelEnumDEBUG - is debug
	DNSServiceLogLevelEnumDEBUG DNSServiceLogLevelEnum = "DEBUG"
	// DNSServiceLogLevelEnumERROR - is error
	DNSServiceLogLevelEnumERROR DNSServiceLogLevelEnum = "ERROR"
	// DNSServiceLogLevelEnumFATAL - is fatal
	DNSServiceLogLevelEnumFATAL DNSServiceLogLevelEnum = "FATAL"
	// DNSServiceLogLevelEnumINFO - is info
	DNSServiceLogLevelEnumINFO DNSServiceLogLevelEnum = "INFO"
	// DNSServiceLogLevelEnumWARNING - is warning
	DNSServiceLogLevelEnumWARNING DNSServiceLogLevelEnum = "WARNING"
)

// PossibleDNSServiceLogLevelEnumValues returns the possible values for the DNSServiceLogLevelEnum const type.
func PossibleDNSServiceLogLevelEnumValues() []DNSServiceLogLevelEnum {
	return []DNSServiceLogLevelEnum{
		DNSServiceLogLevelEnumDEBUG,
		DNSServiceLogLevelEnumERROR,
		DNSServiceLogLevelEnumFATAL,
		DNSServiceLogLevelEnumINFO,
		DNSServiceLogLevelEnumWARNING,
	}
}

// DNSServiceStatusEnum - DNS service status
type DNSServiceStatusEnum string

const (
	// DNSServiceStatusEnumFAILURE - is failure
	DNSServiceStatusEnumFAILURE DNSServiceStatusEnum = "FAILURE"
	// DNSServiceStatusEnumSUCCESS - is success
	DNSServiceStatusEnumSUCCESS DNSServiceStatusEnum = "SUCCESS"
)

// PossibleDNSServiceStatusEnumValues returns the possible values for the DNSServiceStatusEnum const type.
func PossibleDNSServiceStatusEnumValues() []DNSServiceStatusEnum {
	return []DNSServiceStatusEnum{
		DNSServiceStatusEnumFAILURE,
		DNSServiceStatusEnumSUCCESS,
	}
}

// DNSZoneType - The type of DNS zone.
type DNSZoneType string

const (
	// DNSZoneTypePrivate - Private DNS zone.
	DNSZoneTypePrivate DNSZoneType = "Private"
	// DNSZoneTypePublic - Primary DNS zone.
	DNSZoneTypePublic DNSZoneType = "Public"
)

// PossibleDNSZoneTypeValues returns the possible values for the DNSZoneType const type.
func PossibleDNSZoneTypeValues() []DNSZoneType {
	return []DNSZoneType{
		DNSZoneTypePrivate,
		DNSZoneTypePublic,
	}
}

// DatastoreProvisioningState - datastore provisioning state
type DatastoreProvisioningState string

const (
	// DatastoreProvisioningStateCanceled - Resource creation was canceled.
	DatastoreProvisioningStateCanceled DatastoreProvisioningState = "Canceled"
	// DatastoreProvisioningStateCancelled - is cancelled
	DatastoreProvisioningStateCancelled DatastoreProvisioningState = "Cancelled"
	// DatastoreProvisioningStateCreating - is creating
	DatastoreProvisioningStateCreating DatastoreProvisioningState = "Creating"
	// DatastoreProvisioningStateDeleting - is deleting
	DatastoreProvisioningStateDeleting DatastoreProvisioningState = "Deleting"
	// DatastoreProvisioningStateFailed - Resource creation failed.
	DatastoreProvisioningStateFailed DatastoreProvisioningState = "Failed"
	// DatastoreProvisioningStatePending - is pending
	DatastoreProvisioningStatePending DatastoreProvisioningState = "Pending"
	// DatastoreProvisioningStateSucceeded - Resource has been created.
	DatastoreProvisioningStateSucceeded DatastoreProvisioningState = "Succeeded"
	// DatastoreProvisioningStateUpdating - is updating
	DatastoreProvisioningStateUpdating DatastoreProvisioningState = "Updating"
)

// PossibleDatastoreProvisioningStateValues returns the possible values for the DatastoreProvisioningState const type.
func PossibleDatastoreProvisioningStateValues() []DatastoreProvisioningState {
	return []DatastoreProvisioningState{
		DatastoreProvisioningStateCanceled,
		DatastoreProvisioningStateCancelled,
		DatastoreProvisioningStateCreating,
		DatastoreProvisioningStateDeleting,
		DatastoreProvisioningStateFailed,
		DatastoreProvisioningStatePending,
		DatastoreProvisioningStateSucceeded,
		DatastoreProvisioningStateUpdating,
	}
}

// DatastoreStatus - datastore status
type DatastoreStatus string

const (
	// DatastoreStatusAccessible - is accessible
	DatastoreStatusAccessible DatastoreStatus = "Accessible"
	// DatastoreStatusAttached - is attached
	DatastoreStatusAttached DatastoreStatus = "Attached"
	// DatastoreStatusDeadOrError - is dead or error
	DatastoreStatusDeadOrError DatastoreStatus = "DeadOrError"
	// DatastoreStatusDetached - is detached
	DatastoreStatusDetached DatastoreStatus = "Detached"
	// DatastoreStatusInaccessible - is inaccessible
	DatastoreStatusInaccessible DatastoreStatus = "Inaccessible"
	// DatastoreStatusLostCommunication - is lost communication
	DatastoreStatusLostCommunication DatastoreStatus = "LostCommunication"
	// DatastoreStatusUnknown - is unknown
	DatastoreStatusUnknown DatastoreStatus = "Unknown"
)

// PossibleDatastoreStatusValues returns the possible values for the DatastoreStatus const type.
func PossibleDatastoreStatusValues() []DatastoreStatus {
	return []DatastoreStatus{
		DatastoreStatusAccessible,
		DatastoreStatusAttached,
		DatastoreStatusDeadOrError,
		DatastoreStatusDetached,
		DatastoreStatusInaccessible,
		DatastoreStatusLostCommunication,
		DatastoreStatusUnknown,
	}
}

// DhcpTypeEnum - Type of DHCP: SERVER or RELAY.
type DhcpTypeEnum string

const (
	DhcpTypeEnumRELAY  DhcpTypeEnum = "RELAY"
	DhcpTypeEnumSERVER DhcpTypeEnum = "SERVER"
)

// PossibleDhcpTypeEnumValues returns the possible values for the DhcpTypeEnum const type.
func PossibleDhcpTypeEnumValues() []DhcpTypeEnum {
	return []DhcpTypeEnum{
		DhcpTypeEnumRELAY,
		DhcpTypeEnumSERVER,
	}
}

// EncryptionKeyStatus - Whether the the encryption key is connected or access denied
type EncryptionKeyStatus string

const (
	// EncryptionKeyStatusAccessDenied - is access denied
	EncryptionKeyStatusAccessDenied EncryptionKeyStatus = "AccessDenied"
	// EncryptionKeyStatusConnected - is connected
	EncryptionKeyStatusConnected EncryptionKeyStatus = "Connected"
)

// PossibleEncryptionKeyStatusValues returns the possible values for the EncryptionKeyStatus const type.
func PossibleEncryptionKeyStatusValues() []EncryptionKeyStatus {
	return []EncryptionKeyStatus{
		EncryptionKeyStatusAccessDenied,
		EncryptionKeyStatusConnected,
	}
}

// EncryptionState - Whether encryption is enabled or disabled
type EncryptionState string

const (
	// EncryptionStateDisabled - is disabled
	EncryptionStateDisabled EncryptionState = "Disabled"
	// EncryptionStateEnabled - is enabled
	EncryptionStateEnabled EncryptionState = "Enabled"
)

// PossibleEncryptionStateValues returns the possible values for the EncryptionState const type.
func PossibleEncryptionStateValues() []EncryptionState {
	return []EncryptionState{
		EncryptionStateDisabled,
		EncryptionStateEnabled,
	}
}

// EncryptionVersionType - Whether the encryption version is fixed or auto-detected
type EncryptionVersionType string

const (
	// EncryptionVersionTypeAutoDetected - is auto-detected
	EncryptionVersionTypeAutoDetected EncryptionVersionType = "AutoDetected"
	// EncryptionVersionTypeFixed - is fixed
	EncryptionVersionTypeFixed EncryptionVersionType = "Fixed"
)

// PossibleEncryptionVersionTypeValues returns the possible values for the EncryptionVersionType const type.
func PossibleEncryptionVersionTypeValues() []EncryptionVersionType {
	return []EncryptionVersionType{
		EncryptionVersionTypeAutoDetected,
		EncryptionVersionTypeFixed,
	}
}

// ExpressRouteAuthorizationProvisioningState - Express Route Circuit Authorization provisioning state
type ExpressRouteAuthorizationProvisioningState string

const (
	// ExpressRouteAuthorizationProvisioningStateCanceled - Resource creation was canceled.
	ExpressRouteAuthorizationProvisioningStateCanceled ExpressRouteAuthorizationProvisioningState = "Canceled"
	// ExpressRouteAuthorizationProvisioningStateFailed - Resource creation failed.
	ExpressRouteAuthorizationProvisioningStateFailed ExpressRouteAuthorizationProvisioningState = "Failed"
	// ExpressRouteAuthorizationProvisioningStateSucceeded - Resource has been created.
	ExpressRouteAuthorizationProvisioningStateSucceeded ExpressRouteAuthorizationProvisioningState = "Succeeded"
	// ExpressRouteAuthorizationProvisioningStateUpdating - is updating
	ExpressRouteAuthorizationProvisioningStateUpdating ExpressRouteAuthorizationProvisioningState = "Updating"
)

// PossibleExpressRouteAuthorizationProvisioningStateValues returns the possible values for the ExpressRouteAuthorizationProvisioningState const type.
func PossibleExpressRouteAuthorizationProvisioningStateValues() []ExpressRouteAuthorizationProvisioningState {
	return []ExpressRouteAuthorizationProvisioningState{
		ExpressRouteAuthorizationProvisioningStateCanceled,
		ExpressRouteAuthorizationProvisioningStateFailed,
		ExpressRouteAuthorizationProvisioningStateSucceeded,
		ExpressRouteAuthorizationProvisioningStateUpdating,
	}
}

// GlobalReachConnectionProvisioningState - Global Reach Connection provisioning state
type GlobalReachConnectionProvisioningState string

const (
	// GlobalReachConnectionProvisioningStateCanceled - Resource creation was canceled.
	GlobalReachConnectionProvisioningStateCanceled GlobalReachConnectionProvisioningState = "Canceled"
	// GlobalReachConnectionProvisioningStateFailed - Resource creation failed.
	GlobalReachConnectionProvisioningStateFailed GlobalReachConnectionProvisioningState = "Failed"
	// GlobalReachConnectionProvisioningStateSucceeded - Resource has been created.
	GlobalReachConnectionProvisioningStateSucceeded GlobalReachConnectionProvisioningState = "Succeeded"
	// GlobalReachConnectionProvisioningStateUpdating - is updating
	GlobalReachConnectionProvisioningStateUpdating GlobalReachConnectionProvisioningState = "Updating"
)

// PossibleGlobalReachConnectionProvisioningStateValues returns the possible values for the GlobalReachConnectionProvisioningState const type.
func PossibleGlobalReachConnectionProvisioningStateValues() []GlobalReachConnectionProvisioningState {
	return []GlobalReachConnectionProvisioningState{
		GlobalReachConnectionProvisioningStateCanceled,
		GlobalReachConnectionProvisioningStateFailed,
		GlobalReachConnectionProvisioningStateSucceeded,
		GlobalReachConnectionProvisioningStateUpdating,
	}
}

// GlobalReachConnectionStatus - Global Reach Connection status
type GlobalReachConnectionStatus string

const (
	// GlobalReachConnectionStatusConnected - is connected
	GlobalReachConnectionStatusConnected GlobalReachConnectionStatus = "Connected"
	// GlobalReachConnectionStatusConnecting - is connecting
	GlobalReachConnectionStatusConnecting GlobalReachConnectionStatus = "Connecting"
	// GlobalReachConnectionStatusDisconnected - is disconnected
	GlobalReachConnectionStatusDisconnected GlobalReachConnectionStatus = "Disconnected"
)

// PossibleGlobalReachConnectionStatusValues returns the possible values for the GlobalReachConnectionStatus const type.
func PossibleGlobalReachConnectionStatusValues() []GlobalReachConnectionStatus {
	return []GlobalReachConnectionStatus{
		GlobalReachConnectionStatusConnected,
		GlobalReachConnectionStatusConnecting,
		GlobalReachConnectionStatusDisconnected,
	}
}

// HcxEnterpriseSiteProvisioningState - HCX Enterprise Site provisioning state
type HcxEnterpriseSiteProvisioningState string

const (
	// HcxEnterpriseSiteProvisioningStateCanceled - Resource creation was canceled.
	HcxEnterpriseSiteProvisioningStateCanceled HcxEnterpriseSiteProvisioningState = "Canceled"
	// HcxEnterpriseSiteProvisioningStateFailed - Resource creation failed.
	HcxEnterpriseSiteProvisioningStateFailed HcxEnterpriseSiteProvisioningState = "Failed"
	// HcxEnterpriseSiteProvisioningStateSucceeded - Resource has been created.
	HcxEnterpriseSiteProvisioningStateSucceeded HcxEnterpriseSiteProvisioningState = "Succeeded"
)

// PossibleHcxEnterpriseSiteProvisioningStateValues returns the possible values for the HcxEnterpriseSiteProvisioningState const type.
func PossibleHcxEnterpriseSiteProvisioningStateValues() []HcxEnterpriseSiteProvisioningState {
	return []HcxEnterpriseSiteProvisioningState{
		HcxEnterpriseSiteProvisioningStateCanceled,
		HcxEnterpriseSiteProvisioningStateFailed,
		HcxEnterpriseSiteProvisioningStateSucceeded,
	}
}

// HcxEnterpriseSiteStatus - HCX Enterprise Site status
type HcxEnterpriseSiteStatus string

const (
	// HcxEnterpriseSiteStatusAvailable - is available
	HcxEnterpriseSiteStatusAvailable HcxEnterpriseSiteStatus = "Available"
	// HcxEnterpriseSiteStatusConsumed - is consumed
	HcxEnterpriseSiteStatusConsumed HcxEnterpriseSiteStatus = "Consumed"
	// HcxEnterpriseSiteStatusDeactivated - is deactivated
	HcxEnterpriseSiteStatusDeactivated HcxEnterpriseSiteStatus = "Deactivated"
	// HcxEnterpriseSiteStatusDeleted - is deleted
	HcxEnterpriseSiteStatusDeleted HcxEnterpriseSiteStatus = "Deleted"
)

// PossibleHcxEnterpriseSiteStatusValues returns the possible values for the HcxEnterpriseSiteStatus const type.
func PossibleHcxEnterpriseSiteStatusValues() []HcxEnterpriseSiteStatus {
	return []HcxEnterpriseSiteStatus{
		HcxEnterpriseSiteStatusAvailable,
		HcxEnterpriseSiteStatusConsumed,
		HcxEnterpriseSiteStatusDeactivated,
		HcxEnterpriseSiteStatusDeleted,
	}
}

// InternetEnum - Whether internet is enabled or disabled
type InternetEnum string

const (
	// InternetEnumDisabled - is disabled
	InternetEnumDisabled InternetEnum = "Disabled"
	// InternetEnumEnabled - is enabled
	InternetEnumEnabled InternetEnum = "Enabled"
)

// PossibleInternetEnumValues returns the possible values for the InternetEnum const type.
func PossibleInternetEnumValues() []InternetEnum {
	return []InternetEnum{
		InternetEnumDisabled,
		InternetEnumEnabled,
	}
}

// IscsiPathProvisioningState - private cloud provisioning state
type IscsiPathProvisioningState string

const (
	// IscsiPathProvisioningStateBuilding - is building
	IscsiPathProvisioningStateBuilding IscsiPathProvisioningState = "Building"
	// IscsiPathProvisioningStateCanceled - Resource creation was canceled.
	IscsiPathProvisioningStateCanceled IscsiPathProvisioningState = "Canceled"
	// IscsiPathProvisioningStateDeleting - is deleting
	IscsiPathProvisioningStateDeleting IscsiPathProvisioningState = "Deleting"
	// IscsiPathProvisioningStateFailed - Resource creation failed.
	IscsiPathProvisioningStateFailed IscsiPathProvisioningState = "Failed"
	// IscsiPathProvisioningStatePending - is pending
	IscsiPathProvisioningStatePending IscsiPathProvisioningState = "Pending"
	// IscsiPathProvisioningStateSucceeded - Resource has been created.
	IscsiPathProvisioningStateSucceeded IscsiPathProvisioningState = "Succeeded"
	// IscsiPathProvisioningStateUpdating - is updating
	IscsiPathProvisioningStateUpdating IscsiPathProvisioningState = "Updating"
)

// PossibleIscsiPathProvisioningStateValues returns the possible values for the IscsiPathProvisioningState const type.
func PossibleIscsiPathProvisioningStateValues() []IscsiPathProvisioningState {
	return []IscsiPathProvisioningState{
		IscsiPathProvisioningStateBuilding,
		IscsiPathProvisioningStateCanceled,
		IscsiPathProvisioningStateDeleting,
		IscsiPathProvisioningStateFailed,
		IscsiPathProvisioningStatePending,
		IscsiPathProvisioningStateSucceeded,
		IscsiPathProvisioningStateUpdating,
	}
}

// ManagedSystemIdentityType - The kind of managemed identity assigned to this resource.
type ManagedSystemIdentityType string

const (
	// ManagedSystemIdentityTypeNone - No managed system identity.
	ManagedSystemIdentityTypeNone ManagedSystemIdentityType = "None"
	// ManagedSystemIdentityTypeSystemAssigned - System assigned managed system identity.
	ManagedSystemIdentityTypeSystemAssigned ManagedSystemIdentityType = "SystemAssigned"
)

// PossibleManagedSystemIdentityTypeValues returns the possible values for the ManagedSystemIdentityType const type.
func PossibleManagedSystemIdentityTypeValues() []ManagedSystemIdentityType {
	return []ManagedSystemIdentityType{
		ManagedSystemIdentityTypeNone,
		ManagedSystemIdentityTypeSystemAssigned,
	}
}

// MountOptionEnum - mount option
type MountOptionEnum string

const (
	// MountOptionEnumATTACH - is attach
	MountOptionEnumATTACH MountOptionEnum = "ATTACH"
	// MountOptionEnumMOUNT - is mount
	MountOptionEnumMOUNT MountOptionEnum = "MOUNT"
)

// PossibleMountOptionEnumValues returns the possible values for the MountOptionEnum const type.
func PossibleMountOptionEnumValues() []MountOptionEnum {
	return []MountOptionEnum{
		MountOptionEnumATTACH,
		MountOptionEnumMOUNT,
	}
}

// NsxPublicIPQuotaRaisedEnum - NSX public IP quota raised
type NsxPublicIPQuotaRaisedEnum string

const (
	// NsxPublicIPQuotaRaisedEnumDisabled - is disabled
	NsxPublicIPQuotaRaisedEnumDisabled NsxPublicIPQuotaRaisedEnum = "Disabled"
	// NsxPublicIPQuotaRaisedEnumEnabled - is enabled
	NsxPublicIPQuotaRaisedEnumEnabled NsxPublicIPQuotaRaisedEnum = "Enabled"
)

// PossibleNsxPublicIPQuotaRaisedEnumValues returns the possible values for the NsxPublicIPQuotaRaisedEnum const type.
func PossibleNsxPublicIPQuotaRaisedEnumValues() []NsxPublicIPQuotaRaisedEnum {
	return []NsxPublicIPQuotaRaisedEnum{
		NsxPublicIPQuotaRaisedEnumDisabled,
		NsxPublicIPQuotaRaisedEnumEnabled,
	}
}

// OptionalParamEnum - Optional Param
type OptionalParamEnum string

const (
	// OptionalParamEnumOptional - is optional
	OptionalParamEnumOptional OptionalParamEnum = "Optional"
	// OptionalParamEnumRequired - is required
	OptionalParamEnumRequired OptionalParamEnum = "Required"
)

// PossibleOptionalParamEnumValues returns the possible values for the OptionalParamEnum const type.
func PossibleOptionalParamEnumValues() []OptionalParamEnum {
	return []OptionalParamEnum{
		OptionalParamEnumOptional,
		OptionalParamEnumRequired,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	// OriginSystem - Indicates the operation is initiated by a system.
	OriginSystem Origin = "system"
	// OriginUser - Indicates the operation is initiated by a user.
	OriginUser Origin = "user"
	// OriginUserSystem - Indicates the operation is initiated by a user or system.
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

// PlacementPolicyProvisioningState - Placement Policy provisioning state
type PlacementPolicyProvisioningState string

const (
	// PlacementPolicyProvisioningStateBuilding - is building
	PlacementPolicyProvisioningStateBuilding PlacementPolicyProvisioningState = "Building"
	// PlacementPolicyProvisioningStateCanceled - Resource creation was canceled.
	PlacementPolicyProvisioningStateCanceled PlacementPolicyProvisioningState = "Canceled"
	// PlacementPolicyProvisioningStateDeleting - is deleting
	PlacementPolicyProvisioningStateDeleting PlacementPolicyProvisioningState = "Deleting"
	// PlacementPolicyProvisioningStateFailed - Resource creation failed.
	PlacementPolicyProvisioningStateFailed PlacementPolicyProvisioningState = "Failed"
	// PlacementPolicyProvisioningStateSucceeded - Resource has been created.
	PlacementPolicyProvisioningStateSucceeded PlacementPolicyProvisioningState = "Succeeded"
	// PlacementPolicyProvisioningStateUpdating - is updating
	PlacementPolicyProvisioningStateUpdating PlacementPolicyProvisioningState = "Updating"
)

// PossiblePlacementPolicyProvisioningStateValues returns the possible values for the PlacementPolicyProvisioningState const type.
func PossiblePlacementPolicyProvisioningStateValues() []PlacementPolicyProvisioningState {
	return []PlacementPolicyProvisioningState{
		PlacementPolicyProvisioningStateBuilding,
		PlacementPolicyProvisioningStateCanceled,
		PlacementPolicyProvisioningStateDeleting,
		PlacementPolicyProvisioningStateFailed,
		PlacementPolicyProvisioningStateSucceeded,
		PlacementPolicyProvisioningStateUpdating,
	}
}

// PlacementPolicyState - Placement Policy state
type PlacementPolicyState string

const (
	// PlacementPolicyStateDisabled - is disabled
	PlacementPolicyStateDisabled PlacementPolicyState = "Disabled"
	// PlacementPolicyStateEnabled - is enabled
	PlacementPolicyStateEnabled PlacementPolicyState = "Enabled"
)

// PossiblePlacementPolicyStateValues returns the possible values for the PlacementPolicyState const type.
func PossiblePlacementPolicyStateValues() []PlacementPolicyState {
	return []PlacementPolicyState{
		PlacementPolicyStateDisabled,
		PlacementPolicyStateEnabled,
	}
}

// PlacementPolicyType - Placement Policy type
type PlacementPolicyType string

const (
	PlacementPolicyTypeVMHost PlacementPolicyType = "VmHost"
	PlacementPolicyTypeVMVM   PlacementPolicyType = "VmVm"
)

// PossiblePlacementPolicyTypeValues returns the possible values for the PlacementPolicyType const type.
func PossiblePlacementPolicyTypeValues() []PlacementPolicyType {
	return []PlacementPolicyType{
		PlacementPolicyTypeVMHost,
		PlacementPolicyTypeVMVM,
	}
}

// PortMirroringDirectionEnum - Port Mirroring Direction
type PortMirroringDirectionEnum string

const (
	// PortMirroringDirectionEnumBIDIRECTIONAL - is bidirectional
	PortMirroringDirectionEnumBIDIRECTIONAL PortMirroringDirectionEnum = "BIDIRECTIONAL"
	// PortMirroringDirectionEnumEGRESS - is egress
	PortMirroringDirectionEnumEGRESS PortMirroringDirectionEnum = "EGRESS"
	// PortMirroringDirectionEnumINGRESS - is ingress
	PortMirroringDirectionEnumINGRESS PortMirroringDirectionEnum = "INGRESS"
)

// PossiblePortMirroringDirectionEnumValues returns the possible values for the PortMirroringDirectionEnum const type.
func PossiblePortMirroringDirectionEnumValues() []PortMirroringDirectionEnum {
	return []PortMirroringDirectionEnum{
		PortMirroringDirectionEnumBIDIRECTIONAL,
		PortMirroringDirectionEnumEGRESS,
		PortMirroringDirectionEnumINGRESS,
	}
}

// PortMirroringStatusEnum - Port Mirroring status
type PortMirroringStatusEnum string

const (
	// PortMirroringStatusEnumFAILURE - is failure
	PortMirroringStatusEnumFAILURE PortMirroringStatusEnum = "FAILURE"
	// PortMirroringStatusEnumSUCCESS - is success
	PortMirroringStatusEnumSUCCESS PortMirroringStatusEnum = "SUCCESS"
)

// PossiblePortMirroringStatusEnumValues returns the possible values for the PortMirroringStatusEnum const type.
func PossiblePortMirroringStatusEnumValues() []PortMirroringStatusEnum {
	return []PortMirroringStatusEnum{
		PortMirroringStatusEnumFAILURE,
		PortMirroringStatusEnumSUCCESS,
	}
}

// PrivateCloudProvisioningState - private cloud provisioning state
type PrivateCloudProvisioningState string

const (
	// PrivateCloudProvisioningStateBuilding - is building
	PrivateCloudProvisioningStateBuilding PrivateCloudProvisioningState = "Building"
	// PrivateCloudProvisioningStateCanceled - Resource creation was canceled.
	PrivateCloudProvisioningStateCanceled PrivateCloudProvisioningState = "Canceled"
	// PrivateCloudProvisioningStateCancelled - is cancelled
	PrivateCloudProvisioningStateCancelled PrivateCloudProvisioningState = "Cancelled"
	// PrivateCloudProvisioningStateDeleting - is deleting
	PrivateCloudProvisioningStateDeleting PrivateCloudProvisioningState = "Deleting"
	// PrivateCloudProvisioningStateFailed - Resource creation failed.
	PrivateCloudProvisioningStateFailed PrivateCloudProvisioningState = "Failed"
	// PrivateCloudProvisioningStatePending - is pending
	PrivateCloudProvisioningStatePending PrivateCloudProvisioningState = "Pending"
	// PrivateCloudProvisioningStateSucceeded - Resource has been created.
	PrivateCloudProvisioningStateSucceeded PrivateCloudProvisioningState = "Succeeded"
	// PrivateCloudProvisioningStateUpdating - is updating
	PrivateCloudProvisioningStateUpdating PrivateCloudProvisioningState = "Updating"
)

// PossiblePrivateCloudProvisioningStateValues returns the possible values for the PrivateCloudProvisioningState const type.
func PossiblePrivateCloudProvisioningStateValues() []PrivateCloudProvisioningState {
	return []PrivateCloudProvisioningState{
		PrivateCloudProvisioningStateBuilding,
		PrivateCloudProvisioningStateCanceled,
		PrivateCloudProvisioningStateCancelled,
		PrivateCloudProvisioningStateDeleting,
		PrivateCloudProvisioningStateFailed,
		PrivateCloudProvisioningStatePending,
		PrivateCloudProvisioningStateSucceeded,
		PrivateCloudProvisioningStateUpdating,
	}
}

// QuotaEnabled - quota enabled
type QuotaEnabled string

const (
	// QuotaEnabledDisabled - is disabled
	QuotaEnabledDisabled QuotaEnabled = "Disabled"
	// QuotaEnabledEnabled - is enabled
	QuotaEnabledEnabled QuotaEnabled = "Enabled"
)

// PossibleQuotaEnabledValues returns the possible values for the QuotaEnabled const type.
func PossibleQuotaEnabledValues() []QuotaEnabled {
	return []QuotaEnabled{
		QuotaEnabledDisabled,
		QuotaEnabledEnabled,
	}
}

// SKUTier - Available service tiers for the SKU.
type SKUTier string

const (
	// SKUTierBasic - The Basic service tier.
	SKUTierBasic SKUTier = "Basic"
	// SKUTierFree - The Free service tier.
	SKUTierFree SKUTier = "Free"
	// SKUTierPremium - The Premium service tier.
	SKUTierPremium SKUTier = "Premium"
	// SKUTierStandard - The Standard service tier.
	SKUTierStandard SKUTier = "Standard"
)

// PossibleSKUTierValues returns the possible values for the SKUTier const type.
func PossibleSKUTierValues() []SKUTier {
	return []SKUTier{
		SKUTierBasic,
		SKUTierFree,
		SKUTierPremium,
		SKUTierStandard,
	}
}

// SSLEnum - Whether SSL is enabled or disabled
type SSLEnum string

const (
	// SSLEnumDisabled - is disabled
	SSLEnumDisabled SSLEnum = "Disabled"
	// SSLEnumEnabled - is enabled
	SSLEnumEnabled SSLEnum = "Enabled"
)

// PossibleSSLEnumValues returns the possible values for the SSLEnum const type.
func PossibleSSLEnumValues() []SSLEnum {
	return []SSLEnum{
		SSLEnumDisabled,
		SSLEnumEnabled,
	}
}

// ScriptCmdletAudience - Specifies whether a script cmdlet is intended to be invoked only through automation or visible to
// customers
type ScriptCmdletAudience string

const (
	// ScriptCmdletAudienceAny - is any
	ScriptCmdletAudienceAny ScriptCmdletAudience = "Any"
	// ScriptCmdletAudienceAutomation - is automation
	ScriptCmdletAudienceAutomation ScriptCmdletAudience = "Automation"
)

// PossibleScriptCmdletAudienceValues returns the possible values for the ScriptCmdletAudience const type.
func PossibleScriptCmdletAudienceValues() []ScriptCmdletAudience {
	return []ScriptCmdletAudience{
		ScriptCmdletAudienceAny,
		ScriptCmdletAudienceAutomation,
	}
}

// ScriptCmdletProvisioningState - A script cmdlet provisioning state
type ScriptCmdletProvisioningState string

const (
	// ScriptCmdletProvisioningStateCanceled - Resource creation was canceled.
	ScriptCmdletProvisioningStateCanceled ScriptCmdletProvisioningState = "Canceled"
	// ScriptCmdletProvisioningStateFailed - Resource creation failed.
	ScriptCmdletProvisioningStateFailed ScriptCmdletProvisioningState = "Failed"
	// ScriptCmdletProvisioningStateSucceeded - Resource has been created.
	ScriptCmdletProvisioningStateSucceeded ScriptCmdletProvisioningState = "Succeeded"
)

// PossibleScriptCmdletProvisioningStateValues returns the possible values for the ScriptCmdletProvisioningState const type.
func PossibleScriptCmdletProvisioningStateValues() []ScriptCmdletProvisioningState {
	return []ScriptCmdletProvisioningState{
		ScriptCmdletProvisioningStateCanceled,
		ScriptCmdletProvisioningStateFailed,
		ScriptCmdletProvisioningStateSucceeded,
	}
}

// ScriptExecutionParameterType - script execution parameter type
type ScriptExecutionParameterType string

const (
	ScriptExecutionParameterTypeCredential  ScriptExecutionParameterType = "Credential"
	ScriptExecutionParameterTypeSecureValue ScriptExecutionParameterType = "SecureValue"
	ScriptExecutionParameterTypeValue       ScriptExecutionParameterType = "Value"
)

// PossibleScriptExecutionParameterTypeValues returns the possible values for the ScriptExecutionParameterType const type.
func PossibleScriptExecutionParameterTypeValues() []ScriptExecutionParameterType {
	return []ScriptExecutionParameterType{
		ScriptExecutionParameterTypeCredential,
		ScriptExecutionParameterTypeSecureValue,
		ScriptExecutionParameterTypeValue,
	}
}

// ScriptExecutionProvisioningState - Script Execution provisioning state
type ScriptExecutionProvisioningState string

const (
	// ScriptExecutionProvisioningStateCanceled - Resource creation was canceled.
	ScriptExecutionProvisioningStateCanceled ScriptExecutionProvisioningState = "Canceled"
	// ScriptExecutionProvisioningStateCancelled - is cancelled
	ScriptExecutionProvisioningStateCancelled ScriptExecutionProvisioningState = "Cancelled"
	// ScriptExecutionProvisioningStateCancelling - is cancelling
	ScriptExecutionProvisioningStateCancelling ScriptExecutionProvisioningState = "Cancelling"
	// ScriptExecutionProvisioningStateDeleting - is deleting
	ScriptExecutionProvisioningStateDeleting ScriptExecutionProvisioningState = "Deleting"
	// ScriptExecutionProvisioningStateFailed - Resource creation failed.
	ScriptExecutionProvisioningStateFailed ScriptExecutionProvisioningState = "Failed"
	// ScriptExecutionProvisioningStatePending - is pending
	ScriptExecutionProvisioningStatePending ScriptExecutionProvisioningState = "Pending"
	// ScriptExecutionProvisioningStateRunning - is running
	ScriptExecutionProvisioningStateRunning ScriptExecutionProvisioningState = "Running"
	// ScriptExecutionProvisioningStateSucceeded - Resource has been created.
	ScriptExecutionProvisioningStateSucceeded ScriptExecutionProvisioningState = "Succeeded"
)

// PossibleScriptExecutionProvisioningStateValues returns the possible values for the ScriptExecutionProvisioningState const type.
func PossibleScriptExecutionProvisioningStateValues() []ScriptExecutionProvisioningState {
	return []ScriptExecutionProvisioningState{
		ScriptExecutionProvisioningStateCanceled,
		ScriptExecutionProvisioningStateCancelled,
		ScriptExecutionProvisioningStateCancelling,
		ScriptExecutionProvisioningStateDeleting,
		ScriptExecutionProvisioningStateFailed,
		ScriptExecutionProvisioningStatePending,
		ScriptExecutionProvisioningStateRunning,
		ScriptExecutionProvisioningStateSucceeded,
	}
}

// ScriptOutputStreamType - Script Output Stream type
type ScriptOutputStreamType string

const (
	// ScriptOutputStreamTypeError - is error
	ScriptOutputStreamTypeError ScriptOutputStreamType = "Error"
	// ScriptOutputStreamTypeInformation - is information
	ScriptOutputStreamTypeInformation ScriptOutputStreamType = "Information"
	// ScriptOutputStreamTypeOutput - is output
	ScriptOutputStreamTypeOutput ScriptOutputStreamType = "Output"
	// ScriptOutputStreamTypeWarning - is warning
	ScriptOutputStreamTypeWarning ScriptOutputStreamType = "Warning"
)

// PossibleScriptOutputStreamTypeValues returns the possible values for the ScriptOutputStreamType const type.
func PossibleScriptOutputStreamTypeValues() []ScriptOutputStreamType {
	return []ScriptOutputStreamType{
		ScriptOutputStreamTypeError,
		ScriptOutputStreamTypeInformation,
		ScriptOutputStreamTypeOutput,
		ScriptOutputStreamTypeWarning,
	}
}

// ScriptPackageProvisioningState - Script Package provisioning state
type ScriptPackageProvisioningState string

const (
	// ScriptPackageProvisioningStateCanceled - Resource creation was canceled.
	ScriptPackageProvisioningStateCanceled ScriptPackageProvisioningState = "Canceled"
	// ScriptPackageProvisioningStateFailed - Resource creation failed.
	ScriptPackageProvisioningStateFailed ScriptPackageProvisioningState = "Failed"
	// ScriptPackageProvisioningStateSucceeded - Resource has been created.
	ScriptPackageProvisioningStateSucceeded ScriptPackageProvisioningState = "Succeeded"
)

// PossibleScriptPackageProvisioningStateValues returns the possible values for the ScriptPackageProvisioningState const type.
func PossibleScriptPackageProvisioningStateValues() []ScriptPackageProvisioningState {
	return []ScriptPackageProvisioningState{
		ScriptPackageProvisioningStateCanceled,
		ScriptPackageProvisioningStateFailed,
		ScriptPackageProvisioningStateSucceeded,
	}
}

// ScriptParameterTypes - Script Parameter types
type ScriptParameterTypes string

const (
	// ScriptParameterTypesBool - is bool
	ScriptParameterTypesBool ScriptParameterTypes = "Bool"
	// ScriptParameterTypesCredential - is credential
	ScriptParameterTypesCredential ScriptParameterTypes = "Credential"
	// ScriptParameterTypesFloat - is float
	ScriptParameterTypesFloat ScriptParameterTypes = "Float"
	// ScriptParameterTypesInt - is int
	ScriptParameterTypesInt ScriptParameterTypes = "Int"
	// ScriptParameterTypesSecureString - is secure string
	ScriptParameterTypesSecureString ScriptParameterTypes = "SecureString"
	// ScriptParameterTypesString - is string
	ScriptParameterTypesString ScriptParameterTypes = "String"
)

// PossibleScriptParameterTypesValues returns the possible values for the ScriptParameterTypes const type.
func PossibleScriptParameterTypesValues() []ScriptParameterTypes {
	return []ScriptParameterTypes{
		ScriptParameterTypesBool,
		ScriptParameterTypesCredential,
		ScriptParameterTypesFloat,
		ScriptParameterTypesInt,
		ScriptParameterTypesSecureString,
		ScriptParameterTypesString,
	}
}

// SegmentStatusEnum - Segment status
type SegmentStatusEnum string

const (
	// SegmentStatusEnumFAILURE - is failure
	SegmentStatusEnumFAILURE SegmentStatusEnum = "FAILURE"
	// SegmentStatusEnumSUCCESS - is success
	SegmentStatusEnumSUCCESS SegmentStatusEnum = "SUCCESS"
)

// PossibleSegmentStatusEnumValues returns the possible values for the SegmentStatusEnum const type.
func PossibleSegmentStatusEnumValues() []SegmentStatusEnum {
	return []SegmentStatusEnum{
		SegmentStatusEnumFAILURE,
		SegmentStatusEnumSUCCESS,
	}
}

// TrialStatus - trial status
type TrialStatus string

const (
	// TrialStatusTrialAvailable - is available
	TrialStatusTrialAvailable TrialStatus = "TrialAvailable"
	// TrialStatusTrialDisabled - is disabled
	TrialStatusTrialDisabled TrialStatus = "TrialDisabled"
	// TrialStatusTrialUsed - is used
	TrialStatusTrialUsed TrialStatus = "TrialUsed"
)

// PossibleTrialStatusValues returns the possible values for the TrialStatus const type.
func PossibleTrialStatusValues() []TrialStatus {
	return []TrialStatus{
		TrialStatusTrialAvailable,
		TrialStatusTrialDisabled,
		TrialStatusTrialUsed,
	}
}

// VMGroupStatusEnum - VM group status
type VMGroupStatusEnum string

const (
	// VMGroupStatusEnumFAILURE - is failure
	VMGroupStatusEnumFAILURE VMGroupStatusEnum = "FAILURE"
	// VMGroupStatusEnumSUCCESS - is success
	VMGroupStatusEnumSUCCESS VMGroupStatusEnum = "SUCCESS"
)

// PossibleVMGroupStatusEnumValues returns the possible values for the VMGroupStatusEnum const type.
func PossibleVMGroupStatusEnumValues() []VMGroupStatusEnum {
	return []VMGroupStatusEnum{
		VMGroupStatusEnumFAILURE,
		VMGroupStatusEnumSUCCESS,
	}
}

// VMTypeEnum - VM type
type VMTypeEnum string

const (
	// VMTypeEnumEDGE - is edge
	VMTypeEnumEDGE VMTypeEnum = "EDGE"
	// VMTypeEnumREGULAR - is regular
	VMTypeEnumREGULAR VMTypeEnum = "REGULAR"
	// VMTypeEnumSERVICE - is service
	VMTypeEnumSERVICE VMTypeEnum = "SERVICE"
)

// PossibleVMTypeEnumValues returns the possible values for the VMTypeEnum const type.
func PossibleVMTypeEnumValues() []VMTypeEnum {
	return []VMTypeEnum{
		VMTypeEnumEDGE,
		VMTypeEnumREGULAR,
		VMTypeEnumSERVICE,
	}
}

// VirtualMachineProvisioningState - Virtual Machine provisioning state
type VirtualMachineProvisioningState string

const (
	// VirtualMachineProvisioningStateCanceled - Resource creation was canceled.
	VirtualMachineProvisioningStateCanceled VirtualMachineProvisioningState = "Canceled"
	// VirtualMachineProvisioningStateFailed - Resource creation failed.
	VirtualMachineProvisioningStateFailed VirtualMachineProvisioningState = "Failed"
	// VirtualMachineProvisioningStateSucceeded - Resource has been created.
	VirtualMachineProvisioningStateSucceeded VirtualMachineProvisioningState = "Succeeded"
)

// PossibleVirtualMachineProvisioningStateValues returns the possible values for the VirtualMachineProvisioningState const type.
func PossibleVirtualMachineProvisioningStateValues() []VirtualMachineProvisioningState {
	return []VirtualMachineProvisioningState{
		VirtualMachineProvisioningStateCanceled,
		VirtualMachineProvisioningStateFailed,
		VirtualMachineProvisioningStateSucceeded,
	}
}

// VirtualMachineRestrictMovementState - Virtual Machine Restrict Movement state
type VirtualMachineRestrictMovementState string

const (
	// VirtualMachineRestrictMovementStateDisabled - is disabled
	VirtualMachineRestrictMovementStateDisabled VirtualMachineRestrictMovementState = "Disabled"
	// VirtualMachineRestrictMovementStateEnabled - is enabled
	VirtualMachineRestrictMovementStateEnabled VirtualMachineRestrictMovementState = "Enabled"
)

// PossibleVirtualMachineRestrictMovementStateValues returns the possible values for the VirtualMachineRestrictMovementState const type.
func PossibleVirtualMachineRestrictMovementStateValues() []VirtualMachineRestrictMovementState {
	return []VirtualMachineRestrictMovementState{
		VirtualMachineRestrictMovementStateDisabled,
		VirtualMachineRestrictMovementStateEnabled,
	}
}

// VisibilityParameterEnum - Visibility Parameter
type VisibilityParameterEnum string

const (
	// VisibilityParameterEnumHidden - is hidden
	VisibilityParameterEnumHidden VisibilityParameterEnum = "Hidden"
	// VisibilityParameterEnumVisible - is visible
	VisibilityParameterEnumVisible VisibilityParameterEnum = "Visible"
)

// PossibleVisibilityParameterEnumValues returns the possible values for the VisibilityParameterEnum const type.
func PossibleVisibilityParameterEnumValues() []VisibilityParameterEnum {
	return []VisibilityParameterEnum{
		VisibilityParameterEnumHidden,
		VisibilityParameterEnumVisible,
	}
}

// WorkloadNetworkDNSServiceProvisioningState - Workload Network DNS Service provisioning state
type WorkloadNetworkDNSServiceProvisioningState string

const (
	// WorkloadNetworkDNSServiceProvisioningStateBuilding - is building
	WorkloadNetworkDNSServiceProvisioningStateBuilding WorkloadNetworkDNSServiceProvisioningState = "Building"
	// WorkloadNetworkDNSServiceProvisioningStateCanceled - Resource creation was canceled.
	WorkloadNetworkDNSServiceProvisioningStateCanceled WorkloadNetworkDNSServiceProvisioningState = "Canceled"
	// WorkloadNetworkDNSServiceProvisioningStateDeleting - is deleting
	WorkloadNetworkDNSServiceProvisioningStateDeleting WorkloadNetworkDNSServiceProvisioningState = "Deleting"
	// WorkloadNetworkDNSServiceProvisioningStateFailed - Resource creation failed.
	WorkloadNetworkDNSServiceProvisioningStateFailed WorkloadNetworkDNSServiceProvisioningState = "Failed"
	// WorkloadNetworkDNSServiceProvisioningStateSucceeded - Resource has been created.
	WorkloadNetworkDNSServiceProvisioningStateSucceeded WorkloadNetworkDNSServiceProvisioningState = "Succeeded"
	// WorkloadNetworkDNSServiceProvisioningStateUpdating - is updating
	WorkloadNetworkDNSServiceProvisioningStateUpdating WorkloadNetworkDNSServiceProvisioningState = "Updating"
)

// PossibleWorkloadNetworkDNSServiceProvisioningStateValues returns the possible values for the WorkloadNetworkDNSServiceProvisioningState const type.
func PossibleWorkloadNetworkDNSServiceProvisioningStateValues() []WorkloadNetworkDNSServiceProvisioningState {
	return []WorkloadNetworkDNSServiceProvisioningState{
		WorkloadNetworkDNSServiceProvisioningStateBuilding,
		WorkloadNetworkDNSServiceProvisioningStateCanceled,
		WorkloadNetworkDNSServiceProvisioningStateDeleting,
		WorkloadNetworkDNSServiceProvisioningStateFailed,
		WorkloadNetworkDNSServiceProvisioningStateSucceeded,
		WorkloadNetworkDNSServiceProvisioningStateUpdating,
	}
}

// WorkloadNetworkDNSZoneProvisioningState - Workload Network DNS Zone provisioning state
type WorkloadNetworkDNSZoneProvisioningState string

const (
	// WorkloadNetworkDNSZoneProvisioningStateBuilding - is building
	WorkloadNetworkDNSZoneProvisioningStateBuilding WorkloadNetworkDNSZoneProvisioningState = "Building"
	// WorkloadNetworkDNSZoneProvisioningStateCanceled - Resource creation was canceled.
	WorkloadNetworkDNSZoneProvisioningStateCanceled WorkloadNetworkDNSZoneProvisioningState = "Canceled"
	// WorkloadNetworkDNSZoneProvisioningStateDeleting - is deleting
	WorkloadNetworkDNSZoneProvisioningStateDeleting WorkloadNetworkDNSZoneProvisioningState = "Deleting"
	// WorkloadNetworkDNSZoneProvisioningStateFailed - Resource creation failed.
	WorkloadNetworkDNSZoneProvisioningStateFailed WorkloadNetworkDNSZoneProvisioningState = "Failed"
	// WorkloadNetworkDNSZoneProvisioningStateSucceeded - Resource has been created.
	WorkloadNetworkDNSZoneProvisioningStateSucceeded WorkloadNetworkDNSZoneProvisioningState = "Succeeded"
	// WorkloadNetworkDNSZoneProvisioningStateUpdating - is updating
	WorkloadNetworkDNSZoneProvisioningStateUpdating WorkloadNetworkDNSZoneProvisioningState = "Updating"
)

// PossibleWorkloadNetworkDNSZoneProvisioningStateValues returns the possible values for the WorkloadNetworkDNSZoneProvisioningState const type.
func PossibleWorkloadNetworkDNSZoneProvisioningStateValues() []WorkloadNetworkDNSZoneProvisioningState {
	return []WorkloadNetworkDNSZoneProvisioningState{
		WorkloadNetworkDNSZoneProvisioningStateBuilding,
		WorkloadNetworkDNSZoneProvisioningStateCanceled,
		WorkloadNetworkDNSZoneProvisioningStateDeleting,
		WorkloadNetworkDNSZoneProvisioningStateFailed,
		WorkloadNetworkDNSZoneProvisioningStateSucceeded,
		WorkloadNetworkDNSZoneProvisioningStateUpdating,
	}
}

// WorkloadNetworkDhcpProvisioningState - Workload Network DHCP provisioning state
type WorkloadNetworkDhcpProvisioningState string

const (
	// WorkloadNetworkDhcpProvisioningStateBuilding - is building
	WorkloadNetworkDhcpProvisioningStateBuilding WorkloadNetworkDhcpProvisioningState = "Building"
	// WorkloadNetworkDhcpProvisioningStateCanceled - Resource creation was canceled.
	WorkloadNetworkDhcpProvisioningStateCanceled WorkloadNetworkDhcpProvisioningState = "Canceled"
	// WorkloadNetworkDhcpProvisioningStateDeleting - is deleting
	WorkloadNetworkDhcpProvisioningStateDeleting WorkloadNetworkDhcpProvisioningState = "Deleting"
	// WorkloadNetworkDhcpProvisioningStateFailed - Resource creation failed.
	WorkloadNetworkDhcpProvisioningStateFailed WorkloadNetworkDhcpProvisioningState = "Failed"
	// WorkloadNetworkDhcpProvisioningStateSucceeded - Resource has been created.
	WorkloadNetworkDhcpProvisioningStateSucceeded WorkloadNetworkDhcpProvisioningState = "Succeeded"
	// WorkloadNetworkDhcpProvisioningStateUpdating - is updating
	WorkloadNetworkDhcpProvisioningStateUpdating WorkloadNetworkDhcpProvisioningState = "Updating"
)

// PossibleWorkloadNetworkDhcpProvisioningStateValues returns the possible values for the WorkloadNetworkDhcpProvisioningState const type.
func PossibleWorkloadNetworkDhcpProvisioningStateValues() []WorkloadNetworkDhcpProvisioningState {
	return []WorkloadNetworkDhcpProvisioningState{
		WorkloadNetworkDhcpProvisioningStateBuilding,
		WorkloadNetworkDhcpProvisioningStateCanceled,
		WorkloadNetworkDhcpProvisioningStateDeleting,
		WorkloadNetworkDhcpProvisioningStateFailed,
		WorkloadNetworkDhcpProvisioningStateSucceeded,
		WorkloadNetworkDhcpProvisioningStateUpdating,
	}
}

// WorkloadNetworkPortMirroringProvisioningState - Workload Network Port Mirroring provisioning state
type WorkloadNetworkPortMirroringProvisioningState string

const (
	// WorkloadNetworkPortMirroringProvisioningStateBuilding - is building
	WorkloadNetworkPortMirroringProvisioningStateBuilding WorkloadNetworkPortMirroringProvisioningState = "Building"
	// WorkloadNetworkPortMirroringProvisioningStateCanceled - Resource creation was canceled.
	WorkloadNetworkPortMirroringProvisioningStateCanceled WorkloadNetworkPortMirroringProvisioningState = "Canceled"
	// WorkloadNetworkPortMirroringProvisioningStateDeleting - is deleting
	WorkloadNetworkPortMirroringProvisioningStateDeleting WorkloadNetworkPortMirroringProvisioningState = "Deleting"
	// WorkloadNetworkPortMirroringProvisioningStateFailed - Resource creation failed.
	WorkloadNetworkPortMirroringProvisioningStateFailed WorkloadNetworkPortMirroringProvisioningState = "Failed"
	// WorkloadNetworkPortMirroringProvisioningStateSucceeded - Resource has been created.
	WorkloadNetworkPortMirroringProvisioningStateSucceeded WorkloadNetworkPortMirroringProvisioningState = "Succeeded"
	// WorkloadNetworkPortMirroringProvisioningStateUpdating - is updating
	WorkloadNetworkPortMirroringProvisioningStateUpdating WorkloadNetworkPortMirroringProvisioningState = "Updating"
)

// PossibleWorkloadNetworkPortMirroringProvisioningStateValues returns the possible values for the WorkloadNetworkPortMirroringProvisioningState const type.
func PossibleWorkloadNetworkPortMirroringProvisioningStateValues() []WorkloadNetworkPortMirroringProvisioningState {
	return []WorkloadNetworkPortMirroringProvisioningState{
		WorkloadNetworkPortMirroringProvisioningStateBuilding,
		WorkloadNetworkPortMirroringProvisioningStateCanceled,
		WorkloadNetworkPortMirroringProvisioningStateDeleting,
		WorkloadNetworkPortMirroringProvisioningStateFailed,
		WorkloadNetworkPortMirroringProvisioningStateSucceeded,
		WorkloadNetworkPortMirroringProvisioningStateUpdating,
	}
}

// WorkloadNetworkProvisioningState - base Workload Network provisioning state
type WorkloadNetworkProvisioningState string

const (
	// WorkloadNetworkProvisioningStateBuilding - is building
	WorkloadNetworkProvisioningStateBuilding WorkloadNetworkProvisioningState = "Building"
	// WorkloadNetworkProvisioningStateCanceled - Resource creation was canceled.
	WorkloadNetworkProvisioningStateCanceled WorkloadNetworkProvisioningState = "Canceled"
	// WorkloadNetworkProvisioningStateDeleting - is deleting
	WorkloadNetworkProvisioningStateDeleting WorkloadNetworkProvisioningState = "Deleting"
	// WorkloadNetworkProvisioningStateFailed - Resource creation failed.
	WorkloadNetworkProvisioningStateFailed WorkloadNetworkProvisioningState = "Failed"
	// WorkloadNetworkProvisioningStateSucceeded - Resource has been created.
	WorkloadNetworkProvisioningStateSucceeded WorkloadNetworkProvisioningState = "Succeeded"
	// WorkloadNetworkProvisioningStateUpdating - is updating
	WorkloadNetworkProvisioningStateUpdating WorkloadNetworkProvisioningState = "Updating"
)

// PossibleWorkloadNetworkProvisioningStateValues returns the possible values for the WorkloadNetworkProvisioningState const type.
func PossibleWorkloadNetworkProvisioningStateValues() []WorkloadNetworkProvisioningState {
	return []WorkloadNetworkProvisioningState{
		WorkloadNetworkProvisioningStateBuilding,
		WorkloadNetworkProvisioningStateCanceled,
		WorkloadNetworkProvisioningStateDeleting,
		WorkloadNetworkProvisioningStateFailed,
		WorkloadNetworkProvisioningStateSucceeded,
		WorkloadNetworkProvisioningStateUpdating,
	}
}

// WorkloadNetworkPublicIPProvisioningState - Workload Network Public IP provisioning state
type WorkloadNetworkPublicIPProvisioningState string

const (
	// WorkloadNetworkPublicIPProvisioningStateBuilding - is building
	WorkloadNetworkPublicIPProvisioningStateBuilding WorkloadNetworkPublicIPProvisioningState = "Building"
	// WorkloadNetworkPublicIPProvisioningStateCanceled - Resource creation was canceled.
	WorkloadNetworkPublicIPProvisioningStateCanceled WorkloadNetworkPublicIPProvisioningState = "Canceled"
	// WorkloadNetworkPublicIPProvisioningStateDeleting - is deleting
	WorkloadNetworkPublicIPProvisioningStateDeleting WorkloadNetworkPublicIPProvisioningState = "Deleting"
	// WorkloadNetworkPublicIPProvisioningStateFailed - Resource creation failed.
	WorkloadNetworkPublicIPProvisioningStateFailed WorkloadNetworkPublicIPProvisioningState = "Failed"
	// WorkloadNetworkPublicIPProvisioningStateSucceeded - Resource has been created.
	WorkloadNetworkPublicIPProvisioningStateSucceeded WorkloadNetworkPublicIPProvisioningState = "Succeeded"
	// WorkloadNetworkPublicIPProvisioningStateUpdating - is updating
	WorkloadNetworkPublicIPProvisioningStateUpdating WorkloadNetworkPublicIPProvisioningState = "Updating"
)

// PossibleWorkloadNetworkPublicIPProvisioningStateValues returns the possible values for the WorkloadNetworkPublicIPProvisioningState const type.
func PossibleWorkloadNetworkPublicIPProvisioningStateValues() []WorkloadNetworkPublicIPProvisioningState {
	return []WorkloadNetworkPublicIPProvisioningState{
		WorkloadNetworkPublicIPProvisioningStateBuilding,
		WorkloadNetworkPublicIPProvisioningStateCanceled,
		WorkloadNetworkPublicIPProvisioningStateDeleting,
		WorkloadNetworkPublicIPProvisioningStateFailed,
		WorkloadNetworkPublicIPProvisioningStateSucceeded,
		WorkloadNetworkPublicIPProvisioningStateUpdating,
	}
}

// WorkloadNetworkSegmentProvisioningState - Workload Network Segment provisioning state
type WorkloadNetworkSegmentProvisioningState string

const (
	// WorkloadNetworkSegmentProvisioningStateBuilding - is building
	WorkloadNetworkSegmentProvisioningStateBuilding WorkloadNetworkSegmentProvisioningState = "Building"
	// WorkloadNetworkSegmentProvisioningStateCanceled - Resource creation was canceled.
	WorkloadNetworkSegmentProvisioningStateCanceled WorkloadNetworkSegmentProvisioningState = "Canceled"
	// WorkloadNetworkSegmentProvisioningStateDeleting - is deleting
	WorkloadNetworkSegmentProvisioningStateDeleting WorkloadNetworkSegmentProvisioningState = "Deleting"
	// WorkloadNetworkSegmentProvisioningStateFailed - Resource creation failed.
	WorkloadNetworkSegmentProvisioningStateFailed WorkloadNetworkSegmentProvisioningState = "Failed"
	// WorkloadNetworkSegmentProvisioningStateSucceeded - Resource has been created.
	WorkloadNetworkSegmentProvisioningStateSucceeded WorkloadNetworkSegmentProvisioningState = "Succeeded"
	// WorkloadNetworkSegmentProvisioningStateUpdating - is updating
	WorkloadNetworkSegmentProvisioningStateUpdating WorkloadNetworkSegmentProvisioningState = "Updating"
)

// PossibleWorkloadNetworkSegmentProvisioningStateValues returns the possible values for the WorkloadNetworkSegmentProvisioningState const type.
func PossibleWorkloadNetworkSegmentProvisioningStateValues() []WorkloadNetworkSegmentProvisioningState {
	return []WorkloadNetworkSegmentProvisioningState{
		WorkloadNetworkSegmentProvisioningStateBuilding,
		WorkloadNetworkSegmentProvisioningStateCanceled,
		WorkloadNetworkSegmentProvisioningStateDeleting,
		WorkloadNetworkSegmentProvisioningStateFailed,
		WorkloadNetworkSegmentProvisioningStateSucceeded,
		WorkloadNetworkSegmentProvisioningStateUpdating,
	}
}

// WorkloadNetworkVMGroupProvisioningState - Workload Network VM Group provisioning state
type WorkloadNetworkVMGroupProvisioningState string

const (
	// WorkloadNetworkVMGroupProvisioningStateBuilding - is building
	WorkloadNetworkVMGroupProvisioningStateBuilding WorkloadNetworkVMGroupProvisioningState = "Building"
	// WorkloadNetworkVMGroupProvisioningStateCanceled - Resource creation was canceled.
	WorkloadNetworkVMGroupProvisioningStateCanceled WorkloadNetworkVMGroupProvisioningState = "Canceled"
	// WorkloadNetworkVMGroupProvisioningStateDeleting - is deleting
	WorkloadNetworkVMGroupProvisioningStateDeleting WorkloadNetworkVMGroupProvisioningState = "Deleting"
	// WorkloadNetworkVMGroupProvisioningStateFailed - Resource creation failed.
	WorkloadNetworkVMGroupProvisioningStateFailed WorkloadNetworkVMGroupProvisioningState = "Failed"
	// WorkloadNetworkVMGroupProvisioningStateSucceeded - Resource has been created.
	WorkloadNetworkVMGroupProvisioningStateSucceeded WorkloadNetworkVMGroupProvisioningState = "Succeeded"
	// WorkloadNetworkVMGroupProvisioningStateUpdating - is updating
	WorkloadNetworkVMGroupProvisioningStateUpdating WorkloadNetworkVMGroupProvisioningState = "Updating"
)

// PossibleWorkloadNetworkVMGroupProvisioningStateValues returns the possible values for the WorkloadNetworkVMGroupProvisioningState const type.
func PossibleWorkloadNetworkVMGroupProvisioningStateValues() []WorkloadNetworkVMGroupProvisioningState {
	return []WorkloadNetworkVMGroupProvisioningState{
		WorkloadNetworkVMGroupProvisioningStateBuilding,
		WorkloadNetworkVMGroupProvisioningStateCanceled,
		WorkloadNetworkVMGroupProvisioningStateDeleting,
		WorkloadNetworkVMGroupProvisioningStateFailed,
		WorkloadNetworkVMGroupProvisioningStateSucceeded,
		WorkloadNetworkVMGroupProvisioningStateUpdating,
	}
}
