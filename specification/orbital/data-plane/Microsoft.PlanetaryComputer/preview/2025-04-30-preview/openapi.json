{
  "swagger": "2.0",
  "info": {
    "title": "MPCPro Ingestion and Management API",
    "version": "2025-04-30-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "contoso-catalog.gwhqfdeddydpareu.uksouth.geocatalog.spatio.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://geocatalog.spatio.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://geocatalog.spatio.azure.com/.default": ""
      }
    }
  },
  "tags": [
    {
      "name": "Ingestion Management"
    },
    {
      "name": "SpatioTemporal Asset Catalog (STAC) API"
    },
    {
      "name": "Ingestion Sources"
    },
    {
      "name": "STAC Collection Configuration"
    },
    {
      "name": "GeoCatalog Instance Configuration"
    },
    {
      "name": "Image Exports for STAC Collections"
    },
    {
      "name": "Tiles for STAC Items"
    },
    {
      "name": "Map Legends"
    },
    {
      "name": "Tiles for STAC Collections Mosaics"
    },
    {
      "name": "Tile Matrix Sets"
    },
    {
      "name": "Shared Access Signature (SAS) Tokens to use with Azure SDKs"
    },
    {
      "name": "Sign an HREF for read access"
    }
  ],
  "paths": {
    "/data/collections/{collectionId}/image/static": {
      "post": {
        "operationId": "TilerStaticImages_Create",
        "tags": [
          "Image Exports for STAC Collections"
        ],
        "summary": "Create Static Image",
        "description": "Create a new image export.",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/jpg",
          "image/webp",
          "image/jp2",
          "image/tiff; application=geotiff",
          "application/x-binary",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection ID",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Image request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerStaticImages_Create": {
            "$ref": "./examples/TilerStaticImages_Create.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/image/static/{id}": {
      "get": {
        "operationId": "TilerStaticImages_Get",
        "tags": [
          "Image Exports for STAC Collections"
        ],
        "summary": "Get Static Image",
        "description": "Fetch an existing image export by ID",
        "produces": [
          "image/png",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection ID",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Image export ID",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerStaticImages_Get": {
            "$ref": "./examples/TilerStaticImages_Get.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/{tileMatrixSetId}/WMTSCapabilities.xml": {
      "get": {
        "operationId": "TilerWmtsTileMatrixSets_GetCapabilitiesXml",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Wmts Tilematrixsetid As Path",
        "description": "OGC WMTS endpoint.",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "tileMatrixSetId",
            "in": "path",
            "description": "Identifier selecting one of the TileMatrixSetId supported",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "tile_format",
            "in": "query",
            "description": "Output image type. Default is png.",
            "required": false,
            "type": "string",
            "default": "png",
            "enum": [
              "png",
              "npy",
              "tif",
              "jpeg",
              "jpg",
              "jp2",
              "webp",
              "pngraw"
            ],
            "x-ms-enum": {
              "name": "ImageType",
              "modelAsString": true,
              "values": [
                {
                  "name": "png",
                  "value": "png",
                  "description": "Portable Network Graphics format - supports transparency"
                },
                {
                  "name": "npy",
                  "value": "npy",
                  "description": "NumPy array format for raw data access"
                },
                {
                  "name": "tif",
                  "value": "tif",
                  "description": "GeoTIFF format for georeferenced raster data"
                },
                {
                  "name": "jpeg",
                  "value": "jpeg",
                  "description": "JPEG format - smaller file size but lossy compression"
                },
                {
                  "name": "jpg",
                  "value": "jpg",
                  "description": "Alternate extension for JPEG format"
                },
                {
                  "name": "jp2",
                  "value": "jp2",
                  "description": "JPEG 2000 format - supports both lossy and lossless compression"
                },
                {
                  "name": "webp",
                  "value": "webp",
                  "description": "WebP format - modern image format with good compression"
                },
                {
                  "name": "pngraw",
                  "value": "pngraw",
                  "description": "Raw PNG format for access to unprocessed data"
                }
              ]
            },
            "x-ms-client-name": "tileFormat"
          },
          {
            "name": "tile_scale",
            "in": "query",
            "description": "Tile scale factor affecting output size. Values > 1 produce larger tiles (e.g., 1=256x256, 2=512x512).",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "x-ms-client-name": "tileScale"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.minzoom"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.maxzoom"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.buffer"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.colorFormula"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.resampling"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerWmtsTileMatrixSets_GetCapabilitiesXml": {
            "$ref": "./examples/TilerWmtsTileMatrixSets_GetCapabilitiesXml.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/{tileMatrixSetId}/tilejson.json": {
      "get": {
        "operationId": "TilerTileJsonTileMatrixSets_Get",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Tilejson Tilematrixsetid As Path",
        "description": "Return the Tilejson Tilematrixsetid As a path",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "tileMatrixSetId",
            "in": "path",
            "description": "Identifier selecting one of the TileMatrixSetId supported",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "tile_format",
            "in": "query",
            "description": "Default will be automatically defined if the output image needs a mask (png) or\nnot (jpeg).",
            "required": false,
            "type": "string",
            "enum": [
              "png",
              "npy",
              "tif",
              "jpeg",
              "jpg",
              "jp2",
              "webp",
              "pngraw"
            ],
            "x-ms-enum": {
              "name": "ImageType",
              "modelAsString": true,
              "values": [
                {
                  "name": "png",
                  "value": "png",
                  "description": "Portable Network Graphics format - supports transparency"
                },
                {
                  "name": "npy",
                  "value": "npy",
                  "description": "NumPy array format for raw data access"
                },
                {
                  "name": "tif",
                  "value": "tif",
                  "description": "GeoTIFF format for georeferenced raster data"
                },
                {
                  "name": "jpeg",
                  "value": "jpeg",
                  "description": "JPEG format - smaller file size but lossy compression"
                },
                {
                  "name": "jpg",
                  "value": "jpg",
                  "description": "Alternate extension for JPEG format"
                },
                {
                  "name": "jp2",
                  "value": "jp2",
                  "description": "JPEG 2000 format - supports both lossy and lossless compression"
                },
                {
                  "name": "webp",
                  "value": "webp",
                  "description": "WebP format - modern image format with good compression"
                },
                {
                  "name": "pngraw",
                  "value": "pngraw",
                  "description": "Raw PNG format for access to unprocessed data"
                }
              ]
            },
            "x-ms-client-name": "tileFormat"
          },
          {
            "name": "tile_scale",
            "in": "query",
            "description": "Tile scale factor affecting output size. Values > 1 produce larger tiles (e.g., 1=256x256, 2=512x512).",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "x-ms-client-name": "tileScale"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.minzoom"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.maxzoom"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.buffer"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.colorFormula"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.resampling"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TileJsonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerTileJsonTileMatrixSets_Get": {
            "$ref": "./examples/TilerTileJsonTileMatrixSets_Get.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/WMTSCapabilities.xml": {
      "get": {
        "operationId": "TilerWmts_GetCapabilitiesXml",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Wmts",
        "description": "OGC WMTS endpoint.",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "tileMatrixSetId",
            "in": "query",
            "description": "Identifier selecting one of the TileMatrixSetId supported (default:\n'WebMercatorQuad')",
            "required": false,
            "type": "string",
            "default": "WebMercatorQuad",
            "enum": [
              "CanadianNAD83_LCC",
              "EuropeanETRS89_LAEAQuad",
              "LINZAntarticaMapTilegrid",
              "NZTM2000Quad",
              "UPSAntarcticWGS84Quad",
              "UPSArcticWGS84Quad",
              "UTM31WGS84Quad",
              "WGS1984Quad",
              "WebMercatorQuad",
              "WorldCRS84Quad",
              "WorldMercatorWGS84Quad"
            ],
            "x-ms-enum": {
              "name": "Tilematrixsetid",
              "modelAsString": true,
              "values": [
                {
                  "name": "CanadianNAD83_LCC",
                  "value": "CanadianNAD83_LCC",
                  "description": "Canadian NAD83 Lambert Conformal Conic projection tile matrix set"
                },
                {
                  "name": "EuropeanETRS89_LAEAQuad",
                  "value": "EuropeanETRS89_LAEAQuad",
                  "description": "European ETRS89 Lambert Azimuthal Equal Area Quad tile matrix set"
                },
                {
                  "name": "LINZAntarticaMapTilegrid",
                  "value": "LINZAntarticaMapTilegrid",
                  "description": "Land Information New Zealand (LINZ) Antarctica Map tile grid matrix set"
                },
                {
                  "name": "NZTM2000Quad",
                  "value": "NZTM2000Quad",
                  "description": "New Zealand Transverse Mercator 2000 Quad tile matrix set"
                },
                {
                  "name": "UPSAntarcticWGS84Quad",
                  "value": "UPSAntarcticWGS84Quad",
                  "description": "Universal Polar Stereographic Antarctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UPSArcticWGS84Quad",
                  "value": "UPSArcticWGS84Quad",
                  "description": "Universal Polar Stereographic Arctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UTM31WGS84Quad",
                  "value": "UTM31WGS84Quad",
                  "description": "Universal Transverse Mercator Zone 31 WGS84 Quad tile matrix set"
                },
                {
                  "name": "WGS1984Quad",
                  "value": "WGS1984Quad",
                  "description": "WGS 1984 Quad tile matrix set"
                },
                {
                  "name": "WebMercatorQuad",
                  "value": "WebMercatorQuad",
                  "description": "Web Mercator Quad tile matrix set"
                },
                {
                  "name": "WorldCRS84Quad",
                  "value": "WorldCRS84Quad",
                  "description": "World CRS84 Quad tile matrix set"
                },
                {
                  "name": "WorldMercatorWGS84Quad",
                  "value": "WorldMercatorWGS84Quad",
                  "description": "World Mercator WGS84 Quad tile matrix set"
                }
              ]
            }
          },
          {
            "name": "tile_format",
            "in": "query",
            "description": "Output image type. Default is png.",
            "required": false,
            "type": "string",
            "default": "png",
            "enum": [
              "png",
              "npy",
              "tif",
              "jpeg",
              "jpg",
              "jp2",
              "webp",
              "pngraw"
            ],
            "x-ms-enum": {
              "name": "ImageType",
              "modelAsString": true,
              "values": [
                {
                  "name": "png",
                  "value": "png",
                  "description": "Portable Network Graphics format - supports transparency"
                },
                {
                  "name": "npy",
                  "value": "npy",
                  "description": "NumPy array format for raw data access"
                },
                {
                  "name": "tif",
                  "value": "tif",
                  "description": "GeoTIFF format for georeferenced raster data"
                },
                {
                  "name": "jpeg",
                  "value": "jpeg",
                  "description": "JPEG format - smaller file size but lossy compression"
                },
                {
                  "name": "jpg",
                  "value": "jpg",
                  "description": "Alternate extension for JPEG format"
                },
                {
                  "name": "jp2",
                  "value": "jp2",
                  "description": "JPEG 2000 format - supports both lossy and lossless compression"
                },
                {
                  "name": "webp",
                  "value": "webp",
                  "description": "WebP format - modern image format with good compression"
                },
                {
                  "name": "pngraw",
                  "value": "pngraw",
                  "description": "Raw PNG format for access to unprocessed data"
                }
              ]
            },
            "x-ms-client-name": "tileFormat"
          },
          {
            "name": "tile_scale",
            "in": "query",
            "description": "Tile scale factor affecting output size. Values > 1 produce larger tiles (e.g., 1=256x256, 2=512x512).",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "x-ms-client-name": "tileScale"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.minzoom"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.maxzoom"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.buffer"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.colorFormula"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.resampling"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerWmts_GetCapabilitiesXml": {
            "$ref": "./examples/TilerWmts_GetCapabilitiesXml.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/asset_statistics": {
      "get": {
        "operationId": "TilerAssetStatistics_GetAll",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Asset Statistics",
        "description": "Per Asset statistics",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.resampling"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.maxSize"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.categorical"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.c"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.p"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.histogramBins"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.histogramRange"
          }
        ],
        "responses": {
          "200": {
            "description": "Return dataset's statistics.",
            "schema": {
              "$ref": "#/definitions/AssetStatisticsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerAssetStatistics_GetAll": {
            "$ref": "./examples/TilerAssetStatistics_GetAll.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/assets": {
      "get": {
        "operationId": "TilerAvailableAssets_GetAll",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Available Assets",
        "description": "Return a list of supported assets.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Return a list of supported assets.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerAvailableAssets_GetAll": {
            "$ref": "./examples/TilerAvailableAssets_GetAll.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/bounds": {
      "get": {
        "operationId": "TilerBound_GetAll",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Bounds",
        "description": "Return all Bounds",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BoundsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerBound_GetAll": {
            "$ref": "./examples/TilerBound_GetAll.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/crop/{minx},{miny},{maxx},{maxy}.{format}": {
      "get": {
        "operationId": "TilerParts_GetMinxMinyMaxxMaxyFormat",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Part",
        "description": "Create image from part of a dataset.",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/jpg",
          "image/webp",
          "image/jp2",
          "image/tiff; application=geotiff",
          "application/x-binary",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/BoundingBoxPathParameters.minx"
          },
          {
            "$ref": "#/parameters/BoundingBoxPathParameters.miny"
          },
          {
            "$ref": "#/parameters/BoundingBoxPathParameters.maxx"
          },
          {
            "$ref": "#/parameters/BoundingBoxPathParameters.maxy"
          },
          {
            "name": "format",
            "in": "path",
            "description": "Output format for the tile or image (e.g., png, jpeg, webp).",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "color_formula",
            "in": "query",
            "description": "rio-color formula (info: https://github.com/mapbox/rio-color)",
            "required": false,
            "type": "string",
            "x-ms-client-name": "colorFormula"
          },
          {
            "name": "dst-crs",
            "in": "query",
            "description": "Output Coordinate Reference System.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "dstCrs"
          },
          {
            "name": "coord-crs",
            "in": "query",
            "description": "Coordinate Reference System of the input coords. Default to `epsg:4326`.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "coordCrs"
          },
          {
            "name": "resampling",
            "in": "query",
            "description": "Resampling method.",
            "required": false,
            "type": "string",
            "default": "nearest",
            "enum": [
              "nearest",
              "bilinear",
              "cubic",
              "cubic_spline",
              "lanczos",
              "average",
              "mode",
              "gauss",
              "rms"
            ],
            "x-ms-enum": {
              "name": "Resampling",
              "modelAsString": true,
              "values": [
                {
                  "name": "nearest",
                  "value": "nearest",
                  "description": "Nearest neighbor - fastest method that selects the closest pixel value"
                },
                {
                  "name": "bilinear",
                  "value": "bilinear",
                  "description": "Bilinear interpolation - calculates output values using a weighted average of 2x2 input cells"
                },
                {
                  "name": "cubic",
                  "value": "cubic",
                  "description": "Cubic interpolation - uses a weighted average of 4x4 input cells for smoother results"
                },
                {
                  "name": "cubic_spline",
                  "value": "cubic_spline",
                  "description": "Cubic spline interpolation - similar to cubic but preserves edges better"
                },
                {
                  "name": "lanczos",
                  "value": "lanczos",
                  "description": "Lanczos windowed sinc resampling - high-quality with minimal artifacts"
                },
                {
                  "name": "average",
                  "value": "average",
                  "description": "Average resampling - calculates the mean of all contributing pixels"
                },
                {
                  "name": "mode",
                  "value": "mode",
                  "description": "Mode resampling - selects the most common value from contributing pixels"
                },
                {
                  "name": "gauss",
                  "value": "gauss",
                  "description": "Gaussian weighted resampling - applies a gaussian weighting to contributing pixels"
                },
                {
                  "name": "rms",
                  "value": "rms",
                  "description": "Root mean square resampling - useful for resampling error or deviation grids"
                }
              ]
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "description": "Image output size limit if width and height limits are not set.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1024,
            "x-ms-client-name": "maxSize"
          },
          {
            "$ref": "#/parameters/DimensionsQueryParameters.height"
          },
          {
            "$ref": "#/parameters/DimensionsQueryParameters.width"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerParts_GetMinxMinyMaxxMaxyFormat": {
            "$ref": "./examples/TilerParts_GetMinxMinyMaxxMaxyFormat.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/crop/{width}x{height}.{format}": {
      "post": {
        "operationId": "TilerGeoJsons_CropWidthxHeightFormat",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Geojson Crop",
        "description": "Create image from a geojson feature.",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/jpg",
          "image/webp",
          "image/jp2",
          "image/tiff; application=geotiff",
          "application/x-binary",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "width",
            "in": "path",
            "description": "Width in pixels for the output image.",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "name": "height",
            "in": "path",
            "description": "Height in pixels for the output image.",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "name": "format",
            "in": "path",
            "description": "Output format for the tile or image (e.g., png, jpeg, webp).",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "color_formula",
            "in": "query",
            "description": "rio-color formula (info: https://github.com/mapbox/rio-color)",
            "required": false,
            "type": "string",
            "x-ms-client-name": "colorFormula"
          },
          {
            "name": "coord-crs",
            "in": "query",
            "description": "Coordinate Reference System of the input coords. Default to `epsg:4326`.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "coordCrs"
          },
          {
            "name": "resampling",
            "in": "query",
            "description": "Resampling method.",
            "required": false,
            "type": "string",
            "default": "nearest",
            "enum": [
              "nearest",
              "bilinear",
              "cubic",
              "cubic_spline",
              "lanczos",
              "average",
              "mode",
              "gauss",
              "rms"
            ],
            "x-ms-enum": {
              "name": "Resampling",
              "modelAsString": true,
              "values": [
                {
                  "name": "nearest",
                  "value": "nearest",
                  "description": "Nearest neighbor - fastest method that selects the closest pixel value"
                },
                {
                  "name": "bilinear",
                  "value": "bilinear",
                  "description": "Bilinear interpolation - calculates output values using a weighted average of 2x2 input cells"
                },
                {
                  "name": "cubic",
                  "value": "cubic",
                  "description": "Cubic interpolation - uses a weighted average of 4x4 input cells for smoother results"
                },
                {
                  "name": "cubic_spline",
                  "value": "cubic_spline",
                  "description": "Cubic spline interpolation - similar to cubic but preserves edges better"
                },
                {
                  "name": "lanczos",
                  "value": "lanczos",
                  "description": "Lanczos windowed sinc resampling - high-quality with minimal artifacts"
                },
                {
                  "name": "average",
                  "value": "average",
                  "description": "Average resampling - calculates the mean of all contributing pixels"
                },
                {
                  "name": "mode",
                  "value": "mode",
                  "description": "Mode resampling - selects the most common value from contributing pixels"
                },
                {
                  "name": "gauss",
                  "value": "gauss",
                  "description": "Gaussian weighted resampling - applies a gaussian weighting to contributing pixels"
                },
                {
                  "name": "rms",
                  "value": "rms",
                  "description": "Root mean square resampling - useful for resampling error or deviation grids"
                }
              ]
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "description": "Image output size limit if width and height limits are not set.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1024,
            "x-ms-client-name": "maxSize"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request GeoJson body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeoJson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerGeoJsons_CropWidthxHeightFormat": {
            "$ref": "./examples/TilerGeoJsons_CropWidthxHeightFormat.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/crop/{minx},{miny},{maxx},{maxy}/{width}x{height}.{format}": {
      "get": {
        "operationId": "TilerParts_GetMinxMinyMaxxMaxyWidthxHeightFormat",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Part",
        "description": "Create image from part of a dataset.",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/jpg",
          "image/webp",
          "image/jp2",
          "image/tiff; application=geotiff",
          "application/x-binary",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/BoundingBoxPathParameters.minx"
          },
          {
            "$ref": "#/parameters/BoundingBoxPathParameters.miny"
          },
          {
            "$ref": "#/parameters/BoundingBoxPathParameters.maxx"
          },
          {
            "$ref": "#/parameters/BoundingBoxPathParameters.maxy"
          },
          {
            "name": "width",
            "in": "path",
            "description": "Width in pixels for the output image.",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "name": "height",
            "in": "path",
            "description": "Height in pixels for the output image.",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "name": "format",
            "in": "path",
            "description": "Output format for the tile or image (e.g., png, jpeg, webp).",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "color_formula",
            "in": "query",
            "description": "rio-color formula (info: https://github.com/mapbox/rio-color)",
            "required": false,
            "type": "string",
            "x-ms-client-name": "colorFormula"
          },
          {
            "name": "dst-crs",
            "in": "query",
            "description": "Output Coordinate Reference System.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "dstCrs"
          },
          {
            "name": "coord-crs",
            "in": "query",
            "description": "Coordinate Reference System of the input coords. Default to `epsg:4326`.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "coordCrs"
          },
          {
            "name": "resampling",
            "in": "query",
            "description": "Resampling method.",
            "required": false,
            "type": "string",
            "default": "nearest",
            "enum": [
              "nearest",
              "bilinear",
              "cubic",
              "cubic_spline",
              "lanczos",
              "average",
              "mode",
              "gauss",
              "rms"
            ],
            "x-ms-enum": {
              "name": "Resampling",
              "modelAsString": true,
              "values": [
                {
                  "name": "nearest",
                  "value": "nearest",
                  "description": "Nearest neighbor - fastest method that selects the closest pixel value"
                },
                {
                  "name": "bilinear",
                  "value": "bilinear",
                  "description": "Bilinear interpolation - calculates output values using a weighted average of 2x2 input cells"
                },
                {
                  "name": "cubic",
                  "value": "cubic",
                  "description": "Cubic interpolation - uses a weighted average of 4x4 input cells for smoother results"
                },
                {
                  "name": "cubic_spline",
                  "value": "cubic_spline",
                  "description": "Cubic spline interpolation - similar to cubic but preserves edges better"
                },
                {
                  "name": "lanczos",
                  "value": "lanczos",
                  "description": "Lanczos windowed sinc resampling - high-quality with minimal artifacts"
                },
                {
                  "name": "average",
                  "value": "average",
                  "description": "Average resampling - calculates the mean of all contributing pixels"
                },
                {
                  "name": "mode",
                  "value": "mode",
                  "description": "Mode resampling - selects the most common value from contributing pixels"
                },
                {
                  "name": "gauss",
                  "value": "gauss",
                  "description": "Gaussian weighted resampling - applies a gaussian weighting to contributing pixels"
                },
                {
                  "name": "rms",
                  "value": "rms",
                  "description": "Root mean square resampling - useful for resampling error or deviation grids"
                }
              ]
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "description": "Image output size limit if width and height limits are not set.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1024,
            "x-ms-client-name": "maxSize"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerParts_GetMinxMinyMaxxMaxyWidthxHeightFormat": {
            "$ref": "./examples/TilerParts_GetMinxMinyMaxxMaxyWidthxHeightFormat.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/crop.{format}": {
      "post": {
        "operationId": "TilerGeoJsons_CropFormat",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Geojson Crop",
        "description": "Create image from a geojson feature.",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/jpg",
          "image/webp",
          "image/jp2",
          "image/tiff; application=geotiff",
          "application/x-binary",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "format",
            "in": "path",
            "description": "Output format for the tile or image (e.g., png, jpeg, webp) (default: \"png\").",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "color_formula",
            "in": "query",
            "description": "rio-color formula (info: https://github.com/mapbox/rio-color)",
            "required": false,
            "type": "string",
            "x-ms-client-name": "colorFormula"
          },
          {
            "name": "coord-crs",
            "in": "query",
            "description": "Coordinate Reference System of the input coords. Default to `epsg:4326`.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "coordCrs"
          },
          {
            "name": "resampling",
            "in": "query",
            "description": "Resampling method.",
            "required": false,
            "type": "string",
            "default": "nearest",
            "enum": [
              "nearest",
              "bilinear",
              "cubic",
              "cubic_spline",
              "lanczos",
              "average",
              "mode",
              "gauss",
              "rms"
            ],
            "x-ms-enum": {
              "name": "Resampling",
              "modelAsString": true,
              "values": [
                {
                  "name": "nearest",
                  "value": "nearest",
                  "description": "Nearest neighbor - fastest method that selects the closest pixel value"
                },
                {
                  "name": "bilinear",
                  "value": "bilinear",
                  "description": "Bilinear interpolation - calculates output values using a weighted average of 2x2 input cells"
                },
                {
                  "name": "cubic",
                  "value": "cubic",
                  "description": "Cubic interpolation - uses a weighted average of 4x4 input cells for smoother results"
                },
                {
                  "name": "cubic_spline",
                  "value": "cubic_spline",
                  "description": "Cubic spline interpolation - similar to cubic but preserves edges better"
                },
                {
                  "name": "lanczos",
                  "value": "lanczos",
                  "description": "Lanczos windowed sinc resampling - high-quality with minimal artifacts"
                },
                {
                  "name": "average",
                  "value": "average",
                  "description": "Average resampling - calculates the mean of all contributing pixels"
                },
                {
                  "name": "mode",
                  "value": "mode",
                  "description": "Mode resampling - selects the most common value from contributing pixels"
                },
                {
                  "name": "gauss",
                  "value": "gauss",
                  "description": "Gaussian weighted resampling - applies a gaussian weighting to contributing pixels"
                },
                {
                  "name": "rms",
                  "value": "rms",
                  "description": "Root mean square resampling - useful for resampling error or deviation grids"
                }
              ]
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "description": "Image output size limit if width and height limits are not set.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1024,
            "x-ms-client-name": "maxSize"
          },
          {
            "$ref": "#/parameters/DimensionsQueryParameters.height"
          },
          {
            "$ref": "#/parameters/DimensionsQueryParameters.width"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request GeoJson body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeoJson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerGeoJsons_CropFormat": {
            "$ref": "./examples/TilerGeoJsons_CropFormat.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/info": {
      "get": {
        "operationId": "TilerInfoOperations_Get",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Info",
        "description": "Return dataset's basic info.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "assets",
            "in": "query",
            "description": "Asset's names.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Return dataset's basic info or the list of available assets.",
            "schema": {
              "$ref": "#/definitions/InfoOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerInfoOperations_Get": {
            "$ref": "./examples/TilerInfoOperations_Get.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/info.geojson": {
      "get": {
        "operationId": "TilerInfoGeoJsonOperations_Get",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Info Geojson",
        "description": "Return Info Geojson",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "assets",
            "in": "query",
            "description": "Asset's names.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/FeaturePolygonDictStrRioTilerModelsInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerInfoGeoJsonOperations_Get": {
            "$ref": "./examples/TilerInfoGeoJsonOperations_Get.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/point/{lon},{lat}": {
      "get": {
        "operationId": "TilerPoints_GetLonLat",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Point",
        "description": "Get Point value for a dataset.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "lon",
            "in": "path",
            "description": "Longitude",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "lat",
            "in": "path",
            "description": "Latitude",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "name": "coord-crs",
            "in": "query",
            "description": "Coordinate Reference System of the input coords. Default to `epsg:4326`.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "coordCrs"
          },
          {
            "name": "resampling",
            "in": "query",
            "description": "Resampling method.",
            "required": false,
            "type": "string",
            "default": "nearest",
            "enum": [
              "nearest",
              "bilinear",
              "cubic",
              "cubic_spline",
              "lanczos",
              "average",
              "mode",
              "gauss",
              "rms"
            ],
            "x-ms-enum": {
              "name": "Resampling",
              "modelAsString": true,
              "values": [
                {
                  "name": "nearest",
                  "value": "nearest",
                  "description": "Nearest neighbor - fastest method that selects the closest pixel value"
                },
                {
                  "name": "bilinear",
                  "value": "bilinear",
                  "description": "Bilinear interpolation - calculates output values using a weighted average of 2x2 input cells"
                },
                {
                  "name": "cubic",
                  "value": "cubic",
                  "description": "Cubic interpolation - uses a weighted average of 4x4 input cells for smoother results"
                },
                {
                  "name": "cubic_spline",
                  "value": "cubic_spline",
                  "description": "Cubic spline interpolation - similar to cubic but preserves edges better"
                },
                {
                  "name": "lanczos",
                  "value": "lanczos",
                  "description": "Lanczos windowed sinc resampling - high-quality with minimal artifacts"
                },
                {
                  "name": "average",
                  "value": "average",
                  "description": "Average resampling - calculates the mean of all contributing pixels"
                },
                {
                  "name": "mode",
                  "value": "mode",
                  "description": "Mode resampling - selects the most common value from contributing pixels"
                },
                {
                  "name": "gauss",
                  "value": "gauss",
                  "description": "Gaussian weighted resampling - applies a gaussian weighting to contributing pixels"
                },
                {
                  "name": "rms",
                  "value": "rms",
                  "description": "Root mean square resampling - useful for resampling error or deviation grids"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TitilerCoreModelsResponsesPoint"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerPoints_GetLonLat": {
            "$ref": "./examples/TilerPoints_GetLonLat.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/preview": {
      "get": {
        "operationId": "TilerPreviews_Get",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Preview",
        "description": "Create preview of a dataset.",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/jpg",
          "image/webp",
          "image/jp2",
          "image/tiff; application=geotiff",
          "application/x-binary",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Output format for the tile or image (e.g., png, jpeg, webp).",
            "required": false,
            "type": "string",
            "enum": [
              "png",
              "npy",
              "tif",
              "jpeg",
              "jpg",
              "jp2",
              "webp",
              "pngraw"
            ],
            "x-ms-enum": {
              "name": "ImageType",
              "modelAsString": true,
              "values": [
                {
                  "name": "png",
                  "value": "png",
                  "description": "Portable Network Graphics format - supports transparency"
                },
                {
                  "name": "npy",
                  "value": "npy",
                  "description": "NumPy array format for raw data access"
                },
                {
                  "name": "tif",
                  "value": "tif",
                  "description": "GeoTIFF format for georeferenced raster data"
                },
                {
                  "name": "jpeg",
                  "value": "jpeg",
                  "description": "JPEG format - smaller file size but lossy compression"
                },
                {
                  "name": "jpg",
                  "value": "jpg",
                  "description": "Alternate extension for JPEG format"
                },
                {
                  "name": "jp2",
                  "value": "jp2",
                  "description": "JPEG 2000 format - supports both lossy and lossless compression"
                },
                {
                  "name": "webp",
                  "value": "webp",
                  "description": "WebP format - modern image format with good compression"
                },
                {
                  "name": "pngraw",
                  "value": "pngraw",
                  "description": "Raw PNG format for access to unprocessed data"
                }
              ]
            }
          },
          {
            "name": "color_formula",
            "in": "query",
            "description": "rio-color formula (info: https://github.com/mapbox/rio-color)",
            "required": false,
            "type": "string",
            "x-ms-client-name": "colorFormula"
          },
          {
            "name": "dst-crs",
            "in": "query",
            "description": "Output Coordinate Reference System.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "dstCrs"
          },
          {
            "name": "resampling",
            "in": "query",
            "description": "Resampling method.",
            "required": false,
            "type": "string",
            "default": "nearest",
            "enum": [
              "nearest",
              "bilinear",
              "cubic",
              "cubic_spline",
              "lanczos",
              "average",
              "mode",
              "gauss",
              "rms"
            ],
            "x-ms-enum": {
              "name": "Resampling",
              "modelAsString": true,
              "values": [
                {
                  "name": "nearest",
                  "value": "nearest",
                  "description": "Nearest neighbor - fastest method that selects the closest pixel value"
                },
                {
                  "name": "bilinear",
                  "value": "bilinear",
                  "description": "Bilinear interpolation - calculates output values using a weighted average of 2x2 input cells"
                },
                {
                  "name": "cubic",
                  "value": "cubic",
                  "description": "Cubic interpolation - uses a weighted average of 4x4 input cells for smoother results"
                },
                {
                  "name": "cubic_spline",
                  "value": "cubic_spline",
                  "description": "Cubic spline interpolation - similar to cubic but preserves edges better"
                },
                {
                  "name": "lanczos",
                  "value": "lanczos",
                  "description": "Lanczos windowed sinc resampling - high-quality with minimal artifacts"
                },
                {
                  "name": "average",
                  "value": "average",
                  "description": "Average resampling - calculates the mean of all contributing pixels"
                },
                {
                  "name": "mode",
                  "value": "mode",
                  "description": "Mode resampling - selects the most common value from contributing pixels"
                },
                {
                  "name": "gauss",
                  "value": "gauss",
                  "description": "Gaussian weighted resampling - applies a gaussian weighting to contributing pixels"
                },
                {
                  "name": "rms",
                  "value": "rms",
                  "description": "Root mean square resampling - useful for resampling error or deviation grids"
                }
              ]
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "description": "Image output size limit if width and height limits are not set.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1024,
            "x-ms-client-name": "maxSize"
          },
          {
            "$ref": "#/parameters/DimensionsQueryParameters.height"
          },
          {
            "$ref": "#/parameters/DimensionsQueryParameters.width"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerPreviews_Get": {
            "$ref": "./examples/TilerPreviews_Get.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/preview.{format}": {
      "get": {
        "operationId": "TilerPreviews_GetFormat",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Preview",
        "description": "Create preview of a dataset.",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/jpg",
          "image/webp",
          "image/jp2",
          "image/tiff; application=geotiff",
          "application/x-binary",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "format",
            "in": "path",
            "description": "Output format for the tile or image (e.g., png, jpeg, webp).",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "color_formula",
            "in": "query",
            "description": "rio-color formula (info: https://github.com/mapbox/rio-color)",
            "required": false,
            "type": "string",
            "x-ms-client-name": "colorFormula"
          },
          {
            "name": "dst-crs",
            "in": "query",
            "description": "Output Coordinate Reference System.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "dstCrs"
          },
          {
            "name": "resampling",
            "in": "query",
            "description": "Resampling method.",
            "required": false,
            "type": "string",
            "default": "nearest",
            "enum": [
              "nearest",
              "bilinear",
              "cubic",
              "cubic_spline",
              "lanczos",
              "average",
              "mode",
              "gauss",
              "rms"
            ],
            "x-ms-enum": {
              "name": "Resampling",
              "modelAsString": true,
              "values": [
                {
                  "name": "nearest",
                  "value": "nearest",
                  "description": "Nearest neighbor - fastest method that selects the closest pixel value"
                },
                {
                  "name": "bilinear",
                  "value": "bilinear",
                  "description": "Bilinear interpolation - calculates output values using a weighted average of 2x2 input cells"
                },
                {
                  "name": "cubic",
                  "value": "cubic",
                  "description": "Cubic interpolation - uses a weighted average of 4x4 input cells for smoother results"
                },
                {
                  "name": "cubic_spline",
                  "value": "cubic_spline",
                  "description": "Cubic spline interpolation - similar to cubic but preserves edges better"
                },
                {
                  "name": "lanczos",
                  "value": "lanczos",
                  "description": "Lanczos windowed sinc resampling - high-quality with minimal artifacts"
                },
                {
                  "name": "average",
                  "value": "average",
                  "description": "Average resampling - calculates the mean of all contributing pixels"
                },
                {
                  "name": "mode",
                  "value": "mode",
                  "description": "Mode resampling - selects the most common value from contributing pixels"
                },
                {
                  "name": "gauss",
                  "value": "gauss",
                  "description": "Gaussian weighted resampling - applies a gaussian weighting to contributing pixels"
                },
                {
                  "name": "rms",
                  "value": "rms",
                  "description": "Root mean square resampling - useful for resampling error or deviation grids"
                }
              ]
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "description": "Image output size limit if width and height limits are not set.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1024,
            "x-ms-client-name": "maxSize"
          },
          {
            "$ref": "#/parameters/DimensionsQueryParameters.height"
          },
          {
            "$ref": "#/parameters/DimensionsQueryParameters.width"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerPreviews_GetFormat": {
            "$ref": "./examples/TilerPreviews_GetFormat.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/statistics": {
      "get": {
        "operationId": "TilerStatistics_GetAll",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Statistics",
        "description": "Merged assets statistics.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.resampling"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.maxSize"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.categorical"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.c"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.p"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.histogramBins"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.histogramRange"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/StatisticsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerStatistics_GetAll": {
            "$ref": "./examples/TilerStatistics_GetAll.json"
          }
        }
      },
      "post": {
        "operationId": "TilerGeoJsonStatistics_GetAll",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Geojson Statistics",
        "description": "Get Statistics from a geojson feature or featureCollection.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "coord-crs",
            "in": "query",
            "description": "Coordinate Reference System of the input coords. Default to `epsg:4326`.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "coordCrs"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.resampling"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.maxSize"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.categorical"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.c"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.p"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.histogramBins"
          },
          {
            "$ref": "#/parameters/StatisticsQueryParameters.histogramRange"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request GeoJson body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeoJson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GeoJsonStatisticsItemCollectionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerGeoJsonStatistics_GetAll": {
            "$ref": "./examples/TilerGeoJsonStatistics_GetAll.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/tilejson.json": {
      "get": {
        "operationId": "TilerTileJsonOperations_Get",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Tilejson",
        "description": "Return Tilejson",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "tileMatrixSetId",
            "in": "query",
            "description": "Identifier selecting one of the TileMatrixSetId supported (default:\n'WebMercatorQuad')",
            "required": false,
            "type": "string",
            "default": "WebMercatorQuad",
            "enum": [
              "CanadianNAD83_LCC",
              "EuropeanETRS89_LAEAQuad",
              "LINZAntarticaMapTilegrid",
              "NZTM2000Quad",
              "UPSAntarcticWGS84Quad",
              "UPSArcticWGS84Quad",
              "UTM31WGS84Quad",
              "WGS1984Quad",
              "WebMercatorQuad",
              "WorldCRS84Quad",
              "WorldMercatorWGS84Quad"
            ],
            "x-ms-enum": {
              "name": "Tilematrixsetid",
              "modelAsString": true,
              "values": [
                {
                  "name": "CanadianNAD83_LCC",
                  "value": "CanadianNAD83_LCC",
                  "description": "Canadian NAD83 Lambert Conformal Conic projection tile matrix set"
                },
                {
                  "name": "EuropeanETRS89_LAEAQuad",
                  "value": "EuropeanETRS89_LAEAQuad",
                  "description": "European ETRS89 Lambert Azimuthal Equal Area Quad tile matrix set"
                },
                {
                  "name": "LINZAntarticaMapTilegrid",
                  "value": "LINZAntarticaMapTilegrid",
                  "description": "Land Information New Zealand (LINZ) Antarctica Map tile grid matrix set"
                },
                {
                  "name": "NZTM2000Quad",
                  "value": "NZTM2000Quad",
                  "description": "New Zealand Transverse Mercator 2000 Quad tile matrix set"
                },
                {
                  "name": "UPSAntarcticWGS84Quad",
                  "value": "UPSAntarcticWGS84Quad",
                  "description": "Universal Polar Stereographic Antarctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UPSArcticWGS84Quad",
                  "value": "UPSArcticWGS84Quad",
                  "description": "Universal Polar Stereographic Arctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UTM31WGS84Quad",
                  "value": "UTM31WGS84Quad",
                  "description": "Universal Transverse Mercator Zone 31 WGS84 Quad tile matrix set"
                },
                {
                  "name": "WGS1984Quad",
                  "value": "WGS1984Quad",
                  "description": "WGS 1984 Quad tile matrix set"
                },
                {
                  "name": "WebMercatorQuad",
                  "value": "WebMercatorQuad",
                  "description": "Web Mercator Quad tile matrix set"
                },
                {
                  "name": "WorldCRS84Quad",
                  "value": "WorldCRS84Quad",
                  "description": "World CRS84 Quad tile matrix set"
                },
                {
                  "name": "WorldMercatorWGS84Quad",
                  "value": "WorldMercatorWGS84Quad",
                  "description": "World Mercator WGS84 Quad tile matrix set"
                }
              ]
            }
          },
          {
            "name": "tile_format",
            "in": "query",
            "description": "Default will be automatically defined if the output image needs a mask (png) or\nnot (jpeg).",
            "required": false,
            "type": "string",
            "enum": [
              "png",
              "npy",
              "tif",
              "jpeg",
              "jpg",
              "jp2",
              "webp",
              "pngraw"
            ],
            "x-ms-enum": {
              "name": "ImageType",
              "modelAsString": true,
              "values": [
                {
                  "name": "png",
                  "value": "png",
                  "description": "Portable Network Graphics format - supports transparency"
                },
                {
                  "name": "npy",
                  "value": "npy",
                  "description": "NumPy array format for raw data access"
                },
                {
                  "name": "tif",
                  "value": "tif",
                  "description": "GeoTIFF format for georeferenced raster data"
                },
                {
                  "name": "jpeg",
                  "value": "jpeg",
                  "description": "JPEG format - smaller file size but lossy compression"
                },
                {
                  "name": "jpg",
                  "value": "jpg",
                  "description": "Alternate extension for JPEG format"
                },
                {
                  "name": "jp2",
                  "value": "jp2",
                  "description": "JPEG 2000 format - supports both lossy and lossless compression"
                },
                {
                  "name": "webp",
                  "value": "webp",
                  "description": "WebP format - modern image format with good compression"
                },
                {
                  "name": "pngraw",
                  "value": "pngraw",
                  "description": "Raw PNG format for access to unprocessed data"
                }
              ]
            },
            "x-ms-client-name": "tileFormat"
          },
          {
            "name": "tile_scale",
            "in": "query",
            "description": "Tile scale factor affecting output size. Values > 1 produce larger tiles (e.g., 1=256x256, 2=512x512).",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "x-ms-client-name": "tileScale"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.minzoom"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.maxzoom"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.buffer"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.colorFormula"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.resampling"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TileJsonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerTileJsonOperations_Get": {
            "$ref": "./examples/TilerTileJsonOperations_Get.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/tiles/{z}/{x}/{y}@{scale}x.{format}": {
      "get": {
        "operationId": "TilerTiles_GetZxyScalexFormat",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Tile",
        "description": "Create map tile from a dataset.",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/jpg",
          "image/webp",
          "image/jp2",
          "image/tiff; application=geotiff",
          "application/x-binary",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.z"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.x"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.y"
          },
          {
            "name": "scale",
            "in": "path",
            "description": "Numeric scale factor for the tile. Higher values produce larger tiles (default: \"1\")",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "name": "format",
            "in": "path",
            "description": "Output format for the tile or image (e.g., png, jpeg, webp) (default: \"png\").",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "tileMatrixSetId",
            "in": "query",
            "description": "Identifier selecting one of the TileMatrixSetId supported (default:\n'WebMercatorQuad')",
            "required": false,
            "type": "string",
            "default": "WebMercatorQuad",
            "enum": [
              "CanadianNAD83_LCC",
              "EuropeanETRS89_LAEAQuad",
              "LINZAntarticaMapTilegrid",
              "NZTM2000Quad",
              "UPSAntarcticWGS84Quad",
              "UPSArcticWGS84Quad",
              "UTM31WGS84Quad",
              "WGS1984Quad",
              "WebMercatorQuad",
              "WorldCRS84Quad",
              "WorldMercatorWGS84Quad"
            ],
            "x-ms-enum": {
              "name": "Tilematrixsetid",
              "modelAsString": true,
              "values": [
                {
                  "name": "CanadianNAD83_LCC",
                  "value": "CanadianNAD83_LCC",
                  "description": "Canadian NAD83 Lambert Conformal Conic projection tile matrix set"
                },
                {
                  "name": "EuropeanETRS89_LAEAQuad",
                  "value": "EuropeanETRS89_LAEAQuad",
                  "description": "European ETRS89 Lambert Azimuthal Equal Area Quad tile matrix set"
                },
                {
                  "name": "LINZAntarticaMapTilegrid",
                  "value": "LINZAntarticaMapTilegrid",
                  "description": "Land Information New Zealand (LINZ) Antarctica Map tile grid matrix set"
                },
                {
                  "name": "NZTM2000Quad",
                  "value": "NZTM2000Quad",
                  "description": "New Zealand Transverse Mercator 2000 Quad tile matrix set"
                },
                {
                  "name": "UPSAntarcticWGS84Quad",
                  "value": "UPSAntarcticWGS84Quad",
                  "description": "Universal Polar Stereographic Antarctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UPSArcticWGS84Quad",
                  "value": "UPSArcticWGS84Quad",
                  "description": "Universal Polar Stereographic Arctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UTM31WGS84Quad",
                  "value": "UTM31WGS84Quad",
                  "description": "Universal Transverse Mercator Zone 31 WGS84 Quad tile matrix set"
                },
                {
                  "name": "WGS1984Quad",
                  "value": "WGS1984Quad",
                  "description": "WGS 1984 Quad tile matrix set"
                },
                {
                  "name": "WebMercatorQuad",
                  "value": "WebMercatorQuad",
                  "description": "Web Mercator Quad tile matrix set"
                },
                {
                  "name": "WorldCRS84Quad",
                  "value": "WorldCRS84Quad",
                  "description": "World CRS84 Quad tile matrix set"
                },
                {
                  "name": "WorldMercatorWGS84Quad",
                  "value": "WorldMercatorWGS84Quad",
                  "description": "World Mercator WGS84 Quad tile matrix set"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.buffer"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.colorFormula"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.resampling"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          },
          {
            "$ref": "#/parameters/SubDatasetQueryParameters.subdatasetName"
          },
          {
            "$ref": "#/parameters/SubDatasetQueryParameters.subdatasetBands"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerTiles_GetZxyScalexFormat": {
            "$ref": "./examples/TilerTiles_GetZxyScalexFormat.json"
          }
        }
      }
    },
    "/data/collections/{collectionId}/items/{itemId}/tiles/{tileMatrixSetId}/{z}/{x}/{y}@{scale}x.{format}": {
      "get": {
        "operationId": "TilerTileMatrixSets_GetZxyScalexFormat",
        "tags": [
          "Tiles for STAC Items"
        ],
        "summary": "Tile Tilematrixsetid As Path",
        "description": "Create map tile from a dataset.",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/jpg",
          "image/webp",
          "image/jp2",
          "image/tiff; application=geotiff",
          "application/x-binary",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item Identifier",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "tileMatrixSetId",
            "in": "path",
            "description": "Identifier selecting one of the TileMatrixSetId supported",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.z"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.x"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.y"
          },
          {
            "name": "scale",
            "in": "path",
            "description": "Numeric scale factor for the tile. Higher values produce larger tiles (default: \"1\")",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "name": "format",
            "in": "path",
            "description": "Output format for the tile or image (e.g., png, jpeg, webp) (default: \"png\").",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.buffer"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.colorFormula"
          },
          {
            "$ref": "#/parameters/TileMatrixSetQueryParameters.resampling"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          },
          {
            "$ref": "#/parameters/SubDatasetQueryParameters.subdatasetName"
          },
          {
            "$ref": "#/parameters/SubDatasetQueryParameters.subdatasetBands"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TilerTileMatrixSets_GetZxyScalexFormat": {
            "$ref": "./examples/TilerTileMatrixSets_GetZxyScalexFormat.json"
          }
        }
      }
    },
    "/data/legend/classmap/{classmapName}": {
      "get": {
        "operationId": "MapsClassmapLegends_Get",
        "tags": [
          "Map Legends"
        ],
        "summary": "Get Classmap Legend",
        "description": "Generate values and color swatches mapping for a given classmap.\n\nArgs:\ntrim_start (int, optional): Number of items to trim\nfrom the start of the cmap\ntrim_end (int, optional): Number of items to trim from the end of the cmap",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "classmapName",
            "in": "path",
            "description": "classmap name",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "trim_start",
            "in": "query",
            "description": "Number of items to trim from the start of the cmap",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-client-name": "trimStart"
          },
          {
            "name": "trim_end",
            "in": "query",
            "description": "Number of items to trim from the end of the cmap",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-client-name": "trimEnd"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ClassmapLegendResponse"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MapsClassmapLegends_Get": {
            "$ref": "./examples/MapsClassmapLegends_Get.json"
          }
        }
      }
    },
    "/data/legend/colormap/{cmapName}": {
      "get": {
        "operationId": "MapsLegends_Get",
        "tags": [
          "Map Legends"
        ],
        "summary": "Get Legend",
        "description": "Generate a legend image for a given colormap.\n\nIf the colormap has non-contiguous values at the beginning or end,\nwhich aren't desired in the output image, they can be trimmed by specifying\nthe number of values to trim.\n\nArgs:\ncmap_name (string): The name of the registered colormap to generate\na legend for\nheight (float, optional): The output height of the legend image\nwidth (float, optional): The output width of the legend image\ntrim_start (int, optional): Number of items to trim from\nthe start of the cmap\ntrim_end (int, optional): Number of items to trim from the end of the cmap\n\nReturns:\nHTTP response with jpeg encoded image data",
        "produces": [
          "image/png",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "cmapName",
            "in": "path",
            "description": "The name of the registered colormap to generate a legend for",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "height",
            "in": "query",
            "description": "The output height of the legend image",
            "required": false,
            "type": "number",
            "format": "double",
            "default": 0.15
          },
          {
            "name": "width",
            "in": "query",
            "description": "The output width of the legend image",
            "required": false,
            "type": "number",
            "format": "double",
            "default": 5
          },
          {
            "name": "trim_start",
            "in": "query",
            "description": "Number of items to trim from the start of the cmap",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-client-name": "trimStart"
          },
          {
            "name": "trim_end",
            "in": "query",
            "description": "Number of items to trim from the end of the cmap",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-client-name": "trimEnd"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MapsLegends_Get": {
            "$ref": "./examples/MapsLegends_Get.json"
          }
        }
      }
    },
    "/data/legend/interval/{classmapName}": {
      "get": {
        "operationId": "MapsIntervalLegends_GetByClassmapName",
        "tags": [
          "Map Legends"
        ],
        "summary": "Get Interval Legend",
        "description": "Generate values and color swatches mapping for a given interval classmap.\n\nArgs:\ntrim_start (int, optional): Number of items to trim from\nthe start of the cmap\ntrim_end (int, optional): Number of items to trim from the end of the cmap",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "classmapName",
            "in": "path",
            "description": "classmap name",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "trim_start",
            "in": "query",
            "description": "Number of items to trim from the start of the cmap",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-client-name": "trimStart"
          },
          {
            "name": "trim_end",
            "in": "query",
            "description": "Number of items to trim from the end of the cmap",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-client-name": "trimEnd"
          }
        ],
        "responses": {
          "200": {
            "description": "Interval legend response model.\n\nRepresents a color map for intervals, where each interval is defined by:\n- A numeric range `[min, max]` representing the interval boundaries.\n- An RGBA color `[red, green, blue, alpha]` associated with the interval.\n\nThe response is a 2D array of interval definitions, where each element is a pair:\n- The first element is an array of two numbers `[min, max]` defining the interval.\n- The second element is an array of four numbers `[red, green, blue, alpha]` defining the RGBA color.\n\nExample:\n```json\n[\n  [\n    [-2, 0], [0, 0, 0, 0]\n  ],\n  [\n    [1, 32], [255, 255, 178, 255]\n  ]\n]\n```\nThis example defines two intervals:\n- The interval `[-2, 0]` is mapped to the color `[0, 0, 0, 0]` (transparent black).\n- The interval `[1, 32]` is mapped to the color `[255, 255, 178, 255]` (opaque yellow).",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/IntervalLegendsElement"
                }
              },
              "x-ms-identifiers": []
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MapsIntervalLegends_GetByClassmapName": {
            "$ref": "./examples/MapsIntervalLegends_GetByClassmapName.json"
          }
        }
      }
    },
    "/data/mosaic/{searchId}/{tileMatrixSetId}/WMTSCapabilities.xml": {
      "get": {
        "operationId": "MosaicsWmtsMosaicsTileMatrixSets_GetCapabilitiesXml",
        "tags": [
          "Tiles for STAC Collections Mosaics"
        ],
        "summary": "Wmts Tilematrixsetid As Path",
        "description": "OGC WMTS endpoint.",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "searchId",
            "in": "path",
            "description": "Search Id (pgSTAC Search Hash)",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "tileMatrixSetId",
            "in": "path",
            "description": "Identifier selecting one of the TileMatrixSetId supported",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "tile_format",
            "in": "query",
            "description": "Output image type. Default is png.",
            "required": false,
            "type": "string",
            "default": "png",
            "enum": [
              "png",
              "npy",
              "tif",
              "jpeg",
              "jpg",
              "jp2",
              "webp",
              "pngraw"
            ],
            "x-ms-enum": {
              "name": "ImageType",
              "modelAsString": true,
              "values": [
                {
                  "name": "png",
                  "value": "png",
                  "description": "Portable Network Graphics format - supports transparency"
                },
                {
                  "name": "npy",
                  "value": "npy",
                  "description": "NumPy array format for raw data access"
                },
                {
                  "name": "tif",
                  "value": "tif",
                  "description": "GeoTIFF format for georeferenced raster data"
                },
                {
                  "name": "jpeg",
                  "value": "jpeg",
                  "description": "JPEG format - smaller file size but lossy compression"
                },
                {
                  "name": "jpg",
                  "value": "jpg",
                  "description": "Alternate extension for JPEG format"
                },
                {
                  "name": "jp2",
                  "value": "jp2",
                  "description": "JPEG 2000 format - supports both lossy and lossless compression"
                },
                {
                  "name": "webp",
                  "value": "webp",
                  "description": "WebP format - modern image format with good compression"
                },
                {
                  "name": "pngraw",
                  "value": "pngraw",
                  "description": "Raw PNG format for access to unprocessed data"
                }
              ]
            },
            "x-ms-client-name": "tileFormat"
          },
          {
            "name": "tile_scale",
            "in": "query",
            "description": "Tile scale factor affecting output size. Values > 1 produce larger tiles (e.g., 1=256x256, 2=512x512).",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "x-ms-client-name": "tileScale"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.minzoom"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.maxzoom"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MosaicsWmtsMosaicsTileMatrixSets_GetCapabilitiesXml": {
            "$ref": "./examples/MosaicsWmtsMosaicsTileMatrixSets_GetCapabilitiesXml.json"
          }
        }
      }
    },
    "/data/mosaic/{searchId}/{lon},{lat}/assets": {
      "get": {
        "operationId": "MosaicsAssetsForPoints_GetLonLatAssets",
        "tags": [
          "Tiles for STAC Collections Mosaics"
        ],
        "summary": "Assets For Point",
        "description": "Return a list of assets for a given point.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "searchId",
            "in": "path",
            "description": "Search Id (pgSTAC Search Hash)",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.scanLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.itemsLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.timeLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.exitwhenfull"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.skipcovered"
          },
          {
            "name": "lon",
            "in": "path",
            "description": "Longitude",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "name": "lat",
            "in": "path",
            "description": "Latitude",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "name": "coord-crs",
            "in": "query",
            "description": "Coordinate Reference System of the input coords. Default to `epsg:4326`.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "coordCrs"
          }
        ],
        "responses": {
          "200": {
            "description": "Return list of assets",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MosaicsAssetsForPoints_GetLonLatAssets": {
            "$ref": "./examples/MosaicsAssetsForPoints_GetLonLatAssets.json"
          }
        }
      }
    },
    "/data/mosaic/{searchId}/{tileMatrixSetId}/tilejson.json": {
      "get": {
        "operationId": "MosaicsTileMatrixSetsTileJson_Get",
        "tags": [
          "Tiles for STAC Collections Mosaics"
        ],
        "summary": "Tilejson Tilematrixsetid As Path",
        "description": "Return TileJSON document for a searchId.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "searchId",
            "in": "path",
            "description": "Search Id (pgSTAC Search Hash)",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.scanLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.itemsLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.timeLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.exitwhenfull"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.skipcovered"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "tileMatrixSetId",
            "in": "path",
            "description": "Identifier selecting one of the TileMatrixSetId supported",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.minzoom"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.maxzoom"
          },
          {
            "name": "tile_format",
            "in": "query",
            "description": "Default will be automatically defined if the output image needs a mask (png) or\nnot (jpeg).",
            "required": false,
            "type": "string",
            "enum": [
              "png",
              "npy",
              "tif",
              "jpeg",
              "jpg",
              "jp2",
              "webp",
              "pngraw"
            ],
            "x-ms-enum": {
              "name": "ImageType",
              "modelAsString": true,
              "values": [
                {
                  "name": "png",
                  "value": "png",
                  "description": "Portable Network Graphics format - supports transparency"
                },
                {
                  "name": "npy",
                  "value": "npy",
                  "description": "NumPy array format for raw data access"
                },
                {
                  "name": "tif",
                  "value": "tif",
                  "description": "GeoTIFF format for georeferenced raster data"
                },
                {
                  "name": "jpeg",
                  "value": "jpeg",
                  "description": "JPEG format - smaller file size but lossy compression"
                },
                {
                  "name": "jpg",
                  "value": "jpg",
                  "description": "Alternate extension for JPEG format"
                },
                {
                  "name": "jp2",
                  "value": "jp2",
                  "description": "JPEG 2000 format - supports both lossy and lossless compression"
                },
                {
                  "name": "webp",
                  "value": "webp",
                  "description": "WebP format - modern image format with good compression"
                },
                {
                  "name": "pngraw",
                  "value": "pngraw",
                  "description": "Raw PNG format for access to unprocessed data"
                }
              ]
            },
            "x-ms-client-name": "tileFormat"
          },
          {
            "name": "tile_scale",
            "in": "query",
            "description": "Tile scale factor affecting output size. Values > 1 produce larger tiles (e.g., 1=256x256, 2=512x512).",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-client-name": "tileScale"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.buffer"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.colorFormula"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.collection"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.resampling"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.pixelSelection"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TileJsonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MosaicsTileMatrixSetsTileJson_Get": {
            "$ref": "./examples/MosaicsTileMatrixSetsTileJson_Get.json"
          }
        }
      }
    },
    "/data/mosaic/{searchId}/WMTSCapabilities.xml": {
      "get": {
        "operationId": "MosaicsWmtsMosaics_GetCapabilitiesXml",
        "tags": [
          "Tiles for STAC Collections Mosaics"
        ],
        "summary": "Wmts",
        "description": "OGC WMTS endpoint.",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "searchId",
            "in": "path",
            "description": "Search Id (pgSTAC Search Hash)",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "tileMatrixSetId",
            "in": "query",
            "description": "Identifier selecting one of the TileMatrixSetId supported (default:\n'WebMercatorQuad')",
            "required": false,
            "type": "string",
            "default": "WebMercatorQuad",
            "enum": [
              "CanadianNAD83_LCC",
              "EuropeanETRS89_LAEAQuad",
              "LINZAntarticaMapTilegrid",
              "NZTM2000Quad",
              "UPSAntarcticWGS84Quad",
              "UPSArcticWGS84Quad",
              "UTM31WGS84Quad",
              "WGS1984Quad",
              "WebMercatorQuad",
              "WorldCRS84Quad",
              "WorldMercatorWGS84Quad"
            ],
            "x-ms-enum": {
              "name": "Tilematrixsetid",
              "modelAsString": true,
              "values": [
                {
                  "name": "CanadianNAD83_LCC",
                  "value": "CanadianNAD83_LCC",
                  "description": "Canadian NAD83 Lambert Conformal Conic projection tile matrix set"
                },
                {
                  "name": "EuropeanETRS89_LAEAQuad",
                  "value": "EuropeanETRS89_LAEAQuad",
                  "description": "European ETRS89 Lambert Azimuthal Equal Area Quad tile matrix set"
                },
                {
                  "name": "LINZAntarticaMapTilegrid",
                  "value": "LINZAntarticaMapTilegrid",
                  "description": "Land Information New Zealand (LINZ) Antarctica Map tile grid matrix set"
                },
                {
                  "name": "NZTM2000Quad",
                  "value": "NZTM2000Quad",
                  "description": "New Zealand Transverse Mercator 2000 Quad tile matrix set"
                },
                {
                  "name": "UPSAntarcticWGS84Quad",
                  "value": "UPSAntarcticWGS84Quad",
                  "description": "Universal Polar Stereographic Antarctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UPSArcticWGS84Quad",
                  "value": "UPSArcticWGS84Quad",
                  "description": "Universal Polar Stereographic Arctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UTM31WGS84Quad",
                  "value": "UTM31WGS84Quad",
                  "description": "Universal Transverse Mercator Zone 31 WGS84 Quad tile matrix set"
                },
                {
                  "name": "WGS1984Quad",
                  "value": "WGS1984Quad",
                  "description": "WGS 1984 Quad tile matrix set"
                },
                {
                  "name": "WebMercatorQuad",
                  "value": "WebMercatorQuad",
                  "description": "Web Mercator Quad tile matrix set"
                },
                {
                  "name": "WorldCRS84Quad",
                  "value": "WorldCRS84Quad",
                  "description": "World CRS84 Quad tile matrix set"
                },
                {
                  "name": "WorldMercatorWGS84Quad",
                  "value": "WorldMercatorWGS84Quad",
                  "description": "World Mercator WGS84 Quad tile matrix set"
                }
              ]
            }
          },
          {
            "name": "tile_format",
            "in": "query",
            "description": "Output image type. Default is png.",
            "required": false,
            "type": "string",
            "default": "png",
            "enum": [
              "png",
              "npy",
              "tif",
              "jpeg",
              "jpg",
              "jp2",
              "webp",
              "pngraw"
            ],
            "x-ms-enum": {
              "name": "ImageType",
              "modelAsString": true,
              "values": [
                {
                  "name": "png",
                  "value": "png",
                  "description": "Portable Network Graphics format - supports transparency"
                },
                {
                  "name": "npy",
                  "value": "npy",
                  "description": "NumPy array format for raw data access"
                },
                {
                  "name": "tif",
                  "value": "tif",
                  "description": "GeoTIFF format for georeferenced raster data"
                },
                {
                  "name": "jpeg",
                  "value": "jpeg",
                  "description": "JPEG format - smaller file size but lossy compression"
                },
                {
                  "name": "jpg",
                  "value": "jpg",
                  "description": "Alternate extension for JPEG format"
                },
                {
                  "name": "jp2",
                  "value": "jp2",
                  "description": "JPEG 2000 format - supports both lossy and lossless compression"
                },
                {
                  "name": "webp",
                  "value": "webp",
                  "description": "WebP format - modern image format with good compression"
                },
                {
                  "name": "pngraw",
                  "value": "pngraw",
                  "description": "Raw PNG format for access to unprocessed data"
                }
              ]
            },
            "x-ms-client-name": "tileFormat"
          },
          {
            "name": "tile_scale",
            "in": "query",
            "description": "Tile scale factor affecting output size. Values > 1 produce larger tiles (e.g., 1=256x256, 2=512x512).",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1,
            "x-ms-client-name": "tileScale"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.minzoom"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.maxzoom"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MosaicsWmtsMosaics_GetCapabilitiesXml": {
            "$ref": "./examples/MosaicsWmtsMosaics_GetCapabilitiesXml.json"
          }
        }
      }
    },
    "/data/mosaic/{searchId}/info": {
      "get": {
        "operationId": "MosaicsInfoSearch_Get",
        "tags": [
          "Tiles for STAC Collections Mosaics"
        ],
        "summary": "Info Search",
        "description": "Get Search query metadata.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "searchId",
            "in": "path",
            "description": "Search Id (pgSTAC Search Hash)",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TitilerPgstacModelInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MosaicsInfoSearch_Get": {
            "$ref": "./examples/MosaicsInfoSearch_Get.json"
          }
        }
      }
    },
    "/data/mosaic/{searchId}/tilejson.json": {
      "get": {
        "operationId": "MosaicsTileJsonOperations_Get",
        "tags": [
          "Tiles for STAC Collections Mosaics"
        ],
        "summary": "Tilejson",
        "description": "Return TileJSON document for a searchId.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "searchId",
            "in": "path",
            "description": "Search Id (pgSTAC Search Hash)",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.scanLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.itemsLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.timeLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.exitwhenfull"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.skipcovered"
          },
          {
            "name": "tileMatrixSetId",
            "in": "query",
            "description": "Identifier selecting one of the TileMatrixSetId supported (default: 'WebMercatorQuad').",
            "required": false,
            "type": "string",
            "default": "WebMercatorQuad",
            "enum": [
              "CanadianNAD83_LCC",
              "EuropeanETRS89_LAEAQuad",
              "LINZAntarticaMapTilegrid",
              "NZTM2000Quad",
              "UPSAntarcticWGS84Quad",
              "UPSArcticWGS84Quad",
              "UTM31WGS84Quad",
              "WGS1984Quad",
              "WebMercatorQuad",
              "WorldCRS84Quad",
              "WorldMercatorWGS84Quad"
            ],
            "x-ms-enum": {
              "name": "Tilematrixsetid",
              "modelAsString": true,
              "values": [
                {
                  "name": "CanadianNAD83_LCC",
                  "value": "CanadianNAD83_LCC",
                  "description": "Canadian NAD83 Lambert Conformal Conic projection tile matrix set"
                },
                {
                  "name": "EuropeanETRS89_LAEAQuad",
                  "value": "EuropeanETRS89_LAEAQuad",
                  "description": "European ETRS89 Lambert Azimuthal Equal Area Quad tile matrix set"
                },
                {
                  "name": "LINZAntarticaMapTilegrid",
                  "value": "LINZAntarticaMapTilegrid",
                  "description": "Land Information New Zealand (LINZ) Antarctica Map tile grid matrix set"
                },
                {
                  "name": "NZTM2000Quad",
                  "value": "NZTM2000Quad",
                  "description": "New Zealand Transverse Mercator 2000 Quad tile matrix set"
                },
                {
                  "name": "UPSAntarcticWGS84Quad",
                  "value": "UPSAntarcticWGS84Quad",
                  "description": "Universal Polar Stereographic Antarctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UPSArcticWGS84Quad",
                  "value": "UPSArcticWGS84Quad",
                  "description": "Universal Polar Stereographic Arctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UTM31WGS84Quad",
                  "value": "UTM31WGS84Quad",
                  "description": "Universal Transverse Mercator Zone 31 WGS84 Quad tile matrix set"
                },
                {
                  "name": "WGS1984Quad",
                  "value": "WGS1984Quad",
                  "description": "WGS 1984 Quad tile matrix set"
                },
                {
                  "name": "WebMercatorQuad",
                  "value": "WebMercatorQuad",
                  "description": "Web Mercator Quad tile matrix set"
                },
                {
                  "name": "WorldCRS84Quad",
                  "value": "WorldCRS84Quad",
                  "description": "World CRS84 Quad tile matrix set"
                },
                {
                  "name": "WorldMercatorWGS84Quad",
                  "value": "WorldMercatorWGS84Quad",
                  "description": "World Mercator WGS84 Quad tile matrix set"
                }
              ]
            }
          },
          {
            "name": "tile_format",
            "in": "query",
            "description": "Default will be automatically defined if the output image needs a mask (png) or\nnot (jpeg).",
            "required": false,
            "type": "string",
            "enum": [
              "png",
              "npy",
              "tif",
              "jpeg",
              "jpg",
              "jp2",
              "webp",
              "pngraw"
            ],
            "x-ms-enum": {
              "name": "ImageType",
              "modelAsString": true,
              "values": [
                {
                  "name": "png",
                  "value": "png",
                  "description": "Portable Network Graphics format - supports transparency"
                },
                {
                  "name": "npy",
                  "value": "npy",
                  "description": "NumPy array format for raw data access"
                },
                {
                  "name": "tif",
                  "value": "tif",
                  "description": "GeoTIFF format for georeferenced raster data"
                },
                {
                  "name": "jpeg",
                  "value": "jpeg",
                  "description": "JPEG format - smaller file size but lossy compression"
                },
                {
                  "name": "jpg",
                  "value": "jpg",
                  "description": "Alternate extension for JPEG format"
                },
                {
                  "name": "jp2",
                  "value": "jp2",
                  "description": "JPEG 2000 format - supports both lossy and lossless compression"
                },
                {
                  "name": "webp",
                  "value": "webp",
                  "description": "WebP format - modern image format with good compression"
                },
                {
                  "name": "pngraw",
                  "value": "pngraw",
                  "description": "Raw PNG format for access to unprocessed data"
                }
              ]
            },
            "x-ms-client-name": "tileFormat"
          },
          {
            "name": "tile_scale",
            "in": "query",
            "description": "Tile scale factor affecting output size. Values > 1 produce larger tiles (e.g., 1=256x256, 2=512x512).",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-client-name": "tileScale"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.minzoom"
          },
          {
            "$ref": "#/parameters/ZoomQueryParameters.maxzoom"
          },
          {
            "name": "buffer",
            "in": "query",
            "description": "Buffer on each side of the given tile. It must be a multiple of `0.5`. Output\n**tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,\n1.0 = 258x258).",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "color_formula",
            "in": "query",
            "description": "rio-color formula (info: https://github.com/mapbox/rio-color)",
            "required": false,
            "type": "string",
            "x-ms-client-name": "colorFormula"
          },
          {
            "name": "collection",
            "in": "query",
            "description": "STAC Collection ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "resampling",
            "in": "query",
            "description": "Resampling method",
            "required": false,
            "type": "string",
            "default": "nearest",
            "enum": [
              "nearest",
              "bilinear",
              "cubic",
              "cubic_spline",
              "lanczos",
              "average",
              "mode",
              "gauss",
              "rms"
            ],
            "x-ms-enum": {
              "name": "Resampling",
              "modelAsString": true,
              "values": [
                {
                  "name": "nearest",
                  "value": "nearest",
                  "description": "Nearest neighbor - fastest method that selects the closest pixel value"
                },
                {
                  "name": "bilinear",
                  "value": "bilinear",
                  "description": "Bilinear interpolation - calculates output values using a weighted average of 2x2 input cells"
                },
                {
                  "name": "cubic",
                  "value": "cubic",
                  "description": "Cubic interpolation - uses a weighted average of 4x4 input cells for smoother results"
                },
                {
                  "name": "cubic_spline",
                  "value": "cubic_spline",
                  "description": "Cubic spline interpolation - similar to cubic but preserves edges better"
                },
                {
                  "name": "lanczos",
                  "value": "lanczos",
                  "description": "Lanczos windowed sinc resampling - high-quality with minimal artifacts"
                },
                {
                  "name": "average",
                  "value": "average",
                  "description": "Average resampling - calculates the mean of all contributing pixels"
                },
                {
                  "name": "mode",
                  "value": "mode",
                  "description": "Mode resampling - selects the most common value from contributing pixels"
                },
                {
                  "name": "gauss",
                  "value": "gauss",
                  "description": "Gaussian weighted resampling - applies a gaussian weighting to contributing pixels"
                },
                {
                  "name": "rms",
                  "value": "rms",
                  "description": "Root mean square resampling - useful for resampling error or deviation grids"
                }
              ]
            }
          },
          {
            "name": "pixel_selection",
            "in": "query",
            "description": "Pixel selection method.",
            "required": false,
            "type": "string",
            "default": "first",
            "enum": [
              "first",
              "highest",
              "lowest",
              "mean",
              "median",
              "stdev",
              "lastbandlow",
              "lastbandhight"
            ],
            "x-ms-enum": {
              "name": "PixelSelection",
              "modelAsString": true,
              "values": [
                {
                  "name": "first",
                  "value": "first",
                  "description": "Select pixel from the first available image"
                },
                {
                  "name": "highest",
                  "value": "highest",
                  "description": "Select pixel with the highest value"
                },
                {
                  "name": "lowest",
                  "value": "lowest",
                  "description": "Select pixel with the lowest value"
                },
                {
                  "name": "mean",
                  "value": "mean",
                  "description": "Calculate mean of available pixels"
                },
                {
                  "name": "median",
                  "value": "median",
                  "description": "Calculate median of available pixels"
                },
                {
                  "name": "stdev",
                  "value": "stdev",
                  "description": "Calculate standard deviation of available pixels"
                },
                {
                  "name": "lastbandlow",
                  "value": "lastbandlow",
                  "description": "Select image with lowest value in the last band"
                },
                {
                  "name": "lastbandhight",
                  "value": "lastbandhight",
                  "description": "Select image with highest value in the last band"
                }
              ]
            },
            "x-ms-client-name": "pixelSelection"
          },
          {
            "name": "algorithm",
            "in": "query",
            "description": "Algorithm name",
            "required": false,
            "type": "string",
            "enum": [
              "hillshade",
              "contours",
              "normalizedIndex",
              "terrarium",
              "terrainrgb"
            ],
            "x-ms-enum": {
              "name": "Algorithm",
              "modelAsString": true,
              "values": [
                {
                  "name": "hillshade",
                  "value": "hillshade",
                  "description": "Creates hillshade visualization from elevation data"
                },
                {
                  "name": "contours",
                  "value": "contours",
                  "description": "Generates elevation contour lines"
                },
                {
                  "name": "normalizedIndex",
                  "value": "normalizedIndex",
                  "description": "Calculates normalized difference index between bands"
                },
                {
                  "name": "terrarium",
                  "value": "terrarium",
                  "description": "Encodes elevation data in Mapbox Terrarium RGB format"
                },
                {
                  "name": "terrainrgb",
                  "value": "terrainrgb",
                  "description": "Encodes elevation data in Mapbox TerrainRGB format"
                }
              ]
            }
          },
          {
            "name": "algorithm_params",
            "in": "query",
            "description": "Algorithm parameter",
            "required": false,
            "type": "string",
            "x-ms-client-name": "algorithmParams"
          },
          {
            "name": "rescale",
            "in": "query",
            "description": "comma (',') delimited Min,Max range. Can set multiple time for multiple bands.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "colormap_name",
            "in": "query",
            "description": "Colormap name",
            "required": false,
            "type": "string",
            "enum": [
              "accent",
              "accent_r",
              "afmhot",
              "afmhot_r",
              "ai4g-lulc",
              "alos-fnf",
              "alos-palsar-mask",
              "autumn",
              "autumn_r",
              "binary",
              "binary_r",
              "blues",
              "blues_r",
              "bone",
              "bone_r",
              "brbg",
              "brbg_r",
              "brg",
              "brg_r",
              "bugn",
              "bugn_r",
              "bupu",
              "bupu_r",
              "bwr",
              "bwr_r",
              "c-cap",
              "cfastie",
              "chesapeake-lc-13",
              "chesapeake-lc-7",
              "chesapeake-lu",
              "chloris-biomass",
              "cividis",
              "cividis_r",
              "cmrmap",
              "cmrmap_r",
              "cool",
              "cool_r",
              "coolwarm",
              "coolwarm_r",
              "copper",
              "copper_r",
              "cubehelix",
              "cubehelix_r",
              "dark2",
              "dark2_r",
              "drcog-lulc",
              "esa-cci-lc",
              "esa-worldcover",
              "flag",
              "flag_r",
              "gap-lulc",
              "gist_earth",
              "gist_earth_r",
              "gist_gray",
              "gist_gray_r",
              "gist_heat",
              "gist_heat_r",
              "gist_ncar",
              "gist_ncar_r",
              "gist_rainbow",
              "gist_rainbow_r",
              "gist_stern",
              "gist_stern_r",
              "gist_yarg",
              "gist_yarg_r",
              "gnbu",
              "gnbu_r",
              "gnuplot",
              "gnuplot2",
              "gnuplot2_r",
              "gnuplot_r",
              "gray",
              "gray_r",
              "greens",
              "greens_r",
              "greys",
              "greys_r",
              "hot",
              "hot_r",
              "hsv",
              "hsv_r",
              "inferno",
              "inferno_r",
              "io-bii",
              "io-lulc",
              "io-lulc-9-class",
              "jet",
              "jet_r",
              "jrc-change",
              "jrc-extent",
              "jrc-occurrence",
              "jrc-recurrence",
              "jrc-seasonality",
              "jrc-transitions",
              "lidar-classification",
              "lidar-hag",
              "lidar-hag-alternative",
              "lidar-intensity",
              "lidar-returns",
              "magma",
              "magma_r",
              "modis-10A1",
              "modis-10A2",
              "modis-13A1|Q1",
              "modis-14A1|A2",
              "modis-15A2H|A3H",
              "modis-16A3GF-ET",
              "modis-16A3GF-PET",
              "modis-17A2H|A2HGF",
              "modis-17A3HGF",
              "modis-64A1",
              "mtbs-severity",
              "nipy_spectral",
              "nipy_spectral_r",
              "nrcan-lulc",
              "ocean",
              "ocean_r",
              "oranges",
              "oranges_r",
              "orrd",
              "orrd_r",
              "paired",
              "paired_r",
              "pastel1",
              "pastel1_r",
              "pastel2",
              "pastel2_r",
              "pink",
              "pink_r",
              "piyg",
              "piyg_r",
              "plasma",
              "plasma_r",
              "prgn",
              "prgn_r",
              "prism",
              "prism_r",
              "pubu",
              "pubu_r",
              "pubugn",
              "pubugn_r",
              "puor",
              "puor_r",
              "purd",
              "purd_r",
              "purples",
              "purples_r",
              "qpe",
              "rainbow",
              "rainbow_r",
              "rdbu",
              "rdbu_r",
              "rdgy",
              "rdgy_r",
              "rdpu",
              "rdpu_r",
              "rdylbu",
              "rdylbu_r",
              "rdylgn",
              "rdylgn_r",
              "reds",
              "reds_r",
              "rplumbo",
              "schwarzwald",
              "seismic",
              "seismic_r",
              "set1",
              "set1_r",
              "set2",
              "set2_r",
              "set3",
              "set3_r",
              "spectral",
              "spectral_r",
              "spring",
              "spring_r",
              "summer",
              "summer_r",
              "tab10",
              "tab10_r",
              "tab20",
              "tab20_r",
              "tab20b",
              "tab20b_r",
              "tab20c",
              "tab20c_r",
              "terrain",
              "terrain_r",
              "twilight",
              "twilight_r",
              "twilight_shifted",
              "twilight_shifted_r",
              "usda-cdl",
              "usda-cdl-corn",
              "usda-cdl-cotton",
              "usda-cdl-soybeans",
              "usda-cdl-wheat",
              "usgs-lcmap",
              "viirs-10a1",
              "viirs-13a1",
              "viirs-14a1",
              "viirs-15a2H",
              "viridis",
              "viridis_r",
              "winter",
              "winter_r",
              "wistia",
              "wistia_r",
              "ylgn",
              "ylgn_r",
              "ylgnbu",
              "ylgnbu_r",
              "ylorbr",
              "ylorbr_r",
              "ylorrd",
              "ylorrd_r"
            ],
            "x-ms-enum": {
              "name": "ColorMapNames",
              "modelAsString": true,
              "values": [
                {
                  "name": "accent",
                  "value": "accent",
                  "description": "Accent colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "accent_r",
                  "value": "accent_r",
                  "description": "Reversed accent colormap"
                },
                {
                  "name": "afmhot",
                  "value": "afmhot",
                  "description": "Afmhot colormap - sequential black-red-yellow-white colormap"
                },
                {
                  "name": "afmhot_r",
                  "value": "afmhot_r",
                  "description": "Reversed afmhot colormap"
                },
                {
                  "name": "ai4g-lulc",
                  "value": "ai4g-lulc",
                  "description": "AI for Good land use/land cover colormap"
                },
                {
                  "name": "alos-fnf",
                  "value": "alos-fnf",
                  "description": "ALOS forest/non-forest colormap"
                },
                {
                  "name": "alos-palsar-mask",
                  "value": "alos-palsar-mask",
                  "description": "ALOS PALSAR mask colormap"
                },
                {
                  "name": "autumn",
                  "value": "autumn",
                  "description": "Autumn colormap - sequential red-orange-yellow colormap"
                },
                {
                  "name": "autumn_r",
                  "value": "autumn_r",
                  "description": "Reversed autumn colormap"
                },
                {
                  "name": "binary",
                  "value": "binary",
                  "description": "Binary colormap - simple black and white colormap"
                },
                {
                  "name": "binary_r",
                  "value": "binary_r",
                  "description": "Reversed binary colormap"
                },
                {
                  "name": "blues",
                  "value": "blues",
                  "description": "Blues colormap - sequential white to dark blue"
                },
                {
                  "name": "blues_r",
                  "value": "blues_r",
                  "description": "Reversed blues colormap"
                },
                {
                  "name": "bone",
                  "value": "bone",
                  "description": "Bone colormap - grayscale with slight blue tint"
                },
                {
                  "name": "bone_r",
                  "value": "bone_r",
                  "description": "Reversed bone colormap"
                },
                {
                  "name": "brbg",
                  "value": "brbg",
                  "description": "BrBG colormap - diverging brown to blue-green"
                },
                {
                  "name": "brbg_r",
                  "value": "brbg_r",
                  "description": "Reversed BrBG colormap"
                },
                {
                  "name": "brg",
                  "value": "brg",
                  "description": "BrG colormap - diverging brown to green"
                },
                {
                  "name": "brg_r",
                  "value": "brg_r",
                  "description": "Reversed BrG colormap"
                },
                {
                  "name": "bugn",
                  "value": "bugn",
                  "description": "BuGn colormap - sequential white to dark green"
                },
                {
                  "name": "bugn_r",
                  "value": "bugn_r",
                  "description": "Reversed BuGn colormap"
                },
                {
                  "name": "bupu",
                  "value": "bupu",
                  "description": "BuPu colormap - sequential white to dark purple"
                },
                {
                  "name": "bupu_r",
                  "value": "bupu_r",
                  "description": "Reversed BuPu colormap"
                },
                {
                  "name": "bwr",
                  "value": "bwr",
                  "description": "BWR colormap - diverging blue to red"
                },
                {
                  "name": "bwr_r",
                  "value": "bwr_r",
                  "description": "Reversed BWR colormap"
                },
                {
                  "name": "c-cap",
                  "value": "c-cap",
                  "description": "C-CAP colormap - land cover classification"
                },
                {
                  "name": "cfastie",
                  "value": "cfastie",
                  "description": "Cfastie colormap - high contrast colormap"
                },
                {
                  "name": "chesapeake-lc-13",
                  "value": "chesapeake-lc-13",
                  "description": "Chesapeake land cover 13-class colormap"
                },
                {
                  "name": "chesapeake-lc-7",
                  "value": "chesapeake-lc-7",
                  "description": "Chesapeake land cover 7-class colormap"
                },
                {
                  "name": "chesapeake-lu",
                  "value": "chesapeake-lu",
                  "description": "Chesapeake land use colormap"
                },
                {
                  "name": "chloris-biomass",
                  "value": "chloris-biomass",
                  "description": "Chloris biomass colormap"
                },
                {
                  "name": "cividis",
                  "value": "cividis",
                  "description": "Cividis colormap - sequential yellow to blue"
                },
                {
                  "name": "cividis_r",
                  "value": "cividis_r",
                  "description": "Reversed cividis colormap"
                },
                {
                  "name": "cmrmap",
                  "value": "cmrmap",
                  "description": "CMRmap colormap - perceptually uniform colormap"
                },
                {
                  "name": "cmrmap_r",
                  "value": "cmrmap_r",
                  "description": "Reversed CMRmap colormap"
                },
                {
                  "name": "cool",
                  "value": "cool",
                  "description": "Cool colormap - sequential cyan to magenta"
                },
                {
                  "name": "cool_r",
                  "value": "cool_r",
                  "description": "Reversed cool colormap"
                },
                {
                  "name": "coolwarm",
                  "value": "coolwarm",
                  "description": "Coolwarm colormap - diverging blue to red"
                },
                {
                  "name": "coolwarm_r",
                  "value": "coolwarm_r",
                  "description": "Reversed coolwarm colormap"
                },
                {
                  "name": "copper",
                  "value": "copper",
                  "description": "Copper colormap - sequential black to copper"
                },
                {
                  "name": "copper_r",
                  "value": "copper_r",
                  "description": "Reversed copper colormap"
                },
                {
                  "name": "cubehelix",
                  "value": "cubehelix",
                  "description": "Cubehelix colormap - sequential black to white with hue rotation"
                },
                {
                  "name": "cubehelix_r",
                  "value": "cubehelix_r",
                  "description": "Reversed cubehelix colormap"
                },
                {
                  "name": "dark2",
                  "value": "dark2",
                  "description": "Dark2 colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "dark2_r",
                  "value": "dark2_r",
                  "description": "Reversed dark2 colormap"
                },
                {
                  "name": "drcog-lulc",
                  "value": "drcog-lulc",
                  "description": "DRCog land use/land cover colormap"
                },
                {
                  "name": "esa-cci-lc",
                  "value": "esa-cci-lc",
                  "description": "ESA CCI land cover colormap"
                },
                {
                  "name": "esa-worldcover",
                  "value": "esa-worldcover",
                  "description": "ESA WorldCover colormap"
                },
                {
                  "name": "flag",
                  "value": "flag",
                  "description": "Flag colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "flag_r",
                  "value": "flag_r",
                  "description": "Reversed flag colormap"
                },
                {
                  "name": "gap-lulc",
                  "value": "gap-lulc",
                  "description": "GAP land use/land cover colormap"
                },
                {
                  "name": "gist_earth",
                  "value": "gist_earth",
                  "description": "Gist_earth colormap - perceptually uniform colormap"
                },
                {
                  "name": "gist_earth_r",
                  "value": "gist_earth_r",
                  "description": "Reversed gist_earth colormap"
                },
                {
                  "name": "gist_gray",
                  "value": "gist_gray",
                  "description": "Gist_gray colormap - grayscale colormap"
                },
                {
                  "name": "gist_gray_r",
                  "value": "gist_gray_r",
                  "description": "Reversed gist_gray colormap"
                },
                {
                  "name": "gist_heat",
                  "value": "gist_heat",
                  "description": "Gist_heat colormap - sequential black-red-yellow-white colormap"
                },
                {
                  "name": "gist_heat_r",
                  "value": "gist_heat_r",
                  "description": "Reversed gist_heat colormap"
                },
                {
                  "name": "gist_ncar",
                  "value": "gist_ncar",
                  "description": "Gist_ncar colormap - perceptually uniform colormap"
                },
                {
                  "name": "gist_ncar_r",
                  "value": "gist_ncar_r",
                  "description": "Reversed gist_ncar colormap"
                },
                {
                  "name": "gist_rainbow",
                  "value": "gist_rainbow",
                  "description": "Gist_rainbow colormap - perceptually uniform colormap"
                },
                {
                  "name": "gist_rainbow_r",
                  "value": "gist_rainbow_r",
                  "description": "Reversed gist_rainbow colormap"
                },
                {
                  "name": "gist_stern",
                  "value": "gist_stern",
                  "description": "Gist_stern colormap - perceptually uniform colormap"
                },
                {
                  "name": "gist_stern_r",
                  "value": "gist_stern_r",
                  "description": "Reversed gist_stern colormap"
                },
                {
                  "name": "gist_yarg",
                  "value": "gist_yarg",
                  "description": "Gist_yarg colormap - grayscale colormap"
                },
                {
                  "name": "gist_yarg_r",
                  "value": "gist_yarg_r",
                  "description": "Reversed gist_yarg colormap"
                },
                {
                  "name": "gnbu",
                  "value": "gnbu",
                  "description": "GnBu colormap - sequential white to dark blue-green"
                },
                {
                  "name": "gnbu_r",
                  "value": "gnbu_r",
                  "description": "Reversed GnBu colormap"
                },
                {
                  "name": "gnuplot",
                  "value": "gnuplot",
                  "description": "Gnuplot colormap - sequential black to white with hue rotation"
                },
                {
                  "name": "gnuplot2",
                  "value": "gnuplot2",
                  "description": "Gnuplot2 colormap - sequential black to white with hue rotation"
                },
                {
                  "name": "gnuplot2_r",
                  "value": "gnuplot2_r",
                  "description": "Reversed gnuplot2 colormap"
                },
                {
                  "name": "gnuplot_r",
                  "value": "gnuplot_r",
                  "description": "Reversed gnuplot colormap"
                },
                {
                  "name": "gray",
                  "value": "gray",
                  "description": "Gray colormap - grayscale colormap"
                },
                {
                  "name": "gray_r",
                  "value": "gray_r",
                  "description": "Reversed gray colormap"
                },
                {
                  "name": "greens",
                  "value": "greens",
                  "description": "Greens colormap - sequential white to dark green"
                },
                {
                  "name": "greens_r",
                  "value": "greens_r",
                  "description": "Reversed greens colormap"
                },
                {
                  "name": "greys",
                  "value": "greys",
                  "description": "Greys colormap - sequential white to dark gray"
                },
                {
                  "name": "greys_r",
                  "value": "greys_r",
                  "description": "Reversed greys colormap"
                },
                {
                  "name": "hot",
                  "value": "hot",
                  "description": "Hot colormap - sequential black-red-yellow-white colormap"
                },
                {
                  "name": "hot_r",
                  "value": "hot_r",
                  "description": "Reversed hot colormap"
                },
                {
                  "name": "hsv",
                  "value": "hsv",
                  "description": "HSV colormap - hue-saturation-value colormap"
                },
                {
                  "name": "hsv_r",
                  "value": "hsv_r",
                  "description": "Reversed HSV colormap"
                },
                {
                  "name": "inferno",
                  "value": "inferno",
                  "description": "Inferno colormap - sequential black to yellow colormap"
                },
                {
                  "name": "inferno_r",
                  "value": "inferno_r",
                  "description": "Reversed inferno colormap"
                },
                {
                  "name": "io-bii",
                  "value": "io-bii",
                  "description": "IO-BII colormap - biodiversity index colormap"
                },
                {
                  "name": "io-lulc",
                  "value": "io-lulc",
                  "description": "IO-LULC colormap - land use/land cover colormap"
                },
                {
                  "name": "io-lulc-9-class",
                  "value": "io-lulc-9-class",
                  "description": "IO-LULC 9-class colormap"
                },
                {
                  "name": "jet",
                  "value": "jet",
                  "description": "Jet colormap - sequential blue-green-yellow-red colormap"
                },
                {
                  "name": "jet_r",
                  "value": "jet_r",
                  "description": "Reversed jet colormap"
                },
                {
                  "name": "jrc-change",
                  "value": "jrc-change",
                  "description": "JRC change colormap"
                },
                {
                  "name": "jrc-extent",
                  "value": "jrc-extent",
                  "description": "JRC extent colormap"
                },
                {
                  "name": "jrc-occurrence",
                  "value": "jrc-occurrence",
                  "description": "JRC occurrence colormap"
                },
                {
                  "name": "jrc-recurrence",
                  "value": "jrc-recurrence",
                  "description": "JRC recurrence colormap"
                },
                {
                  "name": "jrc-seasonality",
                  "value": "jrc-seasonality",
                  "description": "JRC seasonality colormap"
                },
                {
                  "name": "jrc-transitions",
                  "value": "jrc-transitions",
                  "description": "JRC transitions colormap"
                },
                {
                  "name": "lidar-classification",
                  "value": "lidar-classification",
                  "description": "Lidar classification colormap"
                },
                {
                  "name": "lidar-hag",
                  "value": "lidar-hag",
                  "description": "Lidar height above ground colormap"
                },
                {
                  "name": "lidar-hag-alternative",
                  "value": "lidar-hag-alternative",
                  "description": "Alternative lidar height above ground colormap"
                },
                {
                  "name": "lidar-intensity",
                  "value": "lidar-intensity",
                  "description": "Lidar intensity colormap"
                },
                {
                  "name": "lidar-returns",
                  "value": "lidar-returns",
                  "description": "Lidar returns colormap"
                },
                {
                  "name": "magma",
                  "value": "magma",
                  "description": "Magma colormap - sequential black to yellow colormap"
                },
                {
                  "name": "magma_r",
                  "value": "magma_r",
                  "description": "Reversed magma colormap"
                },
                {
                  "name": "modis-10A1",
                  "value": "modis-10A1",
                  "description": "MODIS 10A1 colormap"
                },
                {
                  "name": "modis-10A2",
                  "value": "modis-10A2",
                  "description": "MODIS 10A2 colormap"
                },
                {
                  "name": "modis-13A1|Q1",
                  "value": "modis-13A1|Q1",
                  "description": "MODIS 13A1|Q1 colormap"
                },
                {
                  "name": "modis-14A1|A2",
                  "value": "modis-14A1|A2",
                  "description": "MODIS 14A1|A2 colormap"
                },
                {
                  "name": "modis-15A2H|A3H",
                  "value": "modis-15A2H|A3H",
                  "description": "MODIS 15A2H|A3H colormap"
                },
                {
                  "name": "modis-16A3GF-ET",
                  "value": "modis-16A3GF-ET",
                  "description": "MODIS 16A3GF-ET colormap"
                },
                {
                  "name": "modis-16A3GF-PET",
                  "value": "modis-16A3GF-PET",
                  "description": "MODIS 16A3GF-PET colormap"
                },
                {
                  "name": "modis-17A2H|A2HGF",
                  "value": "modis-17A2H|A2HGF",
                  "description": "MODIS 17A2H|A2HGF colormap"
                },
                {
                  "name": "modis-17A3HGF",
                  "value": "modis-17A3HGF",
                  "description": "MODIS 17A3HGF colormap"
                },
                {
                  "name": "modis-64A1",
                  "value": "modis-64A1",
                  "description": "MODIS 64A1 colormap"
                },
                {
                  "name": "mtbs-severity",
                  "value": "mtbs-severity",
                  "description": "MTBS severity colormap"
                },
                {
                  "name": "nipy_spectral",
                  "value": "nipy_spectral",
                  "description": "Nipy_spectral colormap - perceptually uniform colormap"
                },
                {
                  "name": "nipy_spectral_r",
                  "value": "nipy_spectral_r",
                  "description": "Reversed nipy_spectral colormap"
                },
                {
                  "name": "nrcan-lulc",
                  "value": "nrcan-lulc",
                  "description": "NRCAN land use/land cover colormap"
                },
                {
                  "name": "ocean",
                  "value": "ocean",
                  "description": "Ocean colormap - sequential blue to white colormap"
                },
                {
                  "name": "ocean_r",
                  "value": "ocean_r",
                  "description": "Reversed ocean colormap"
                },
                {
                  "name": "oranges",
                  "value": "oranges",
                  "description": "Oranges colormap - sequential white to dark orange"
                },
                {
                  "name": "oranges_r",
                  "value": "oranges_r",
                  "description": "Reversed oranges colormap"
                },
                {
                  "name": "orrd",
                  "value": "orrd",
                  "description": "OrRd colormap - sequential white to dark red-orange"
                },
                {
                  "name": "orrd_r",
                  "value": "orrd_r",
                  "description": "Reversed OrRd colormap"
                },
                {
                  "name": "paired",
                  "value": "paired",
                  "description": "Paired colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "paired_r",
                  "value": "paired_r",
                  "description": "Reversed paired colormap"
                },
                {
                  "name": "pastel1",
                  "value": "pastel1",
                  "description": "Pastel1 colormap - qualitative colormap with pastel colors"
                },
                {
                  "name": "pastel1_r",
                  "value": "pastel1_r",
                  "description": "Reversed pastel1 colormap"
                },
                {
                  "name": "pastel2",
                  "value": "pastel2",
                  "description": "Pastel2 colormap - qualitative colormap with pastel colors"
                },
                {
                  "name": "pastel2_r",
                  "value": "pastel2_r",
                  "description": "Reversed pastel2 colormap"
                },
                {
                  "name": "pink",
                  "value": "pink",
                  "description": "Pink colormap - sequential white to dark pink"
                },
                {
                  "name": "pink_r",
                  "value": "pink_r",
                  "description": "Reversed pink colormap"
                },
                {
                  "name": "piyg",
                  "value": "piyg",
                  "description": "PiYG colormap - diverging pink to green"
                },
                {
                  "name": "piyg_r",
                  "value": "piyg_r",
                  "description": "Reversed PiYG colormap"
                },
                {
                  "name": "plasma",
                  "value": "plasma",
                  "description": "Plasma colormap - sequential black to yellow colormap"
                },
                {
                  "name": "plasma_r",
                  "value": "plasma_r",
                  "description": "Reversed plasma colormap"
                },
                {
                  "name": "prgn",
                  "value": "prgn",
                  "description": "PRGn colormap - diverging purple to green"
                },
                {
                  "name": "prgn_r",
                  "value": "prgn_r",
                  "description": "Reversed PRGn colormap"
                },
                {
                  "name": "prism",
                  "value": "prism",
                  "description": "Prism colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "prism_r",
                  "value": "prism_r",
                  "description": "Reversed prism colormap"
                },
                {
                  "name": "pubu",
                  "value": "pubu",
                  "description": "PuBu colormap - sequential white to dark blue"
                },
                {
                  "name": "pubu_r",
                  "value": "pubu_r",
                  "description": "Reversed PuBu colormap"
                },
                {
                  "name": "pubugn",
                  "value": "pubugn",
                  "description": "PuBuGn colormap - sequential white to dark blue-green"
                },
                {
                  "name": "pubugn_r",
                  "value": "pubugn_r",
                  "description": "Reversed PuBuGn colormap"
                },
                {
                  "name": "puor",
                  "value": "puor",
                  "description": "PuOr colormap - diverging purple to orange"
                },
                {
                  "name": "puor_r",
                  "value": "puor_r",
                  "description": "Reversed PuOr colormap"
                },
                {
                  "name": "purd",
                  "value": "purd",
                  "description": "PuRd colormap - sequential white to dark purple-red"
                },
                {
                  "name": "purd_r",
                  "value": "purd_r",
                  "description": "Reversed PuRd colormap"
                },
                {
                  "name": "purples",
                  "value": "purples",
                  "description": "Purples colormap - sequential white to dark purple"
                },
                {
                  "name": "purples_r",
                  "value": "purples_r",
                  "description": "Reversed purples colormap"
                },
                {
                  "name": "qpe",
                  "value": "qpe",
                  "description": "QPE colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "rainbow",
                  "value": "rainbow",
                  "description": "Rainbow colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "rainbow_r",
                  "value": "rainbow_r",
                  "description": "Reversed rainbow colormap"
                },
                {
                  "name": "rdbu",
                  "value": "rdbu",
                  "description": "RdBu colormap - diverging red to blue"
                },
                {
                  "name": "rdbu_r",
                  "value": "rdbu_r",
                  "description": "Reversed RdBu colormap"
                },
                {
                  "name": "rdgy",
                  "value": "rdgy",
                  "description": "RdGy colormap - diverging red to gray"
                },
                {
                  "name": "rdgy_r",
                  "value": "rdgy_r",
                  "description": "Reversed RdGy colormap"
                },
                {
                  "name": "rdpu",
                  "value": "rdpu",
                  "description": "RdPu colormap - sequential white to dark red-purple"
                },
                {
                  "name": "rdpu_r",
                  "value": "rdpu_r",
                  "description": "Reversed RdPu colormap"
                },
                {
                  "name": "rdylbu",
                  "value": "rdylbu",
                  "description": "RdYlBu colormap - diverging red to yellow to blue"
                },
                {
                  "name": "rdylbu_r",
                  "value": "rdylbu_r",
                  "description": "Reversed RdYlBu colormap"
                },
                {
                  "name": "rdylgn",
                  "value": "rdylgn",
                  "description": "RdYlGn colormap - diverging red to yellow to green"
                },
                {
                  "name": "rdylgn_r",
                  "value": "rdylgn_r",
                  "description": "Reversed RdYlGn colormap"
                },
                {
                  "name": "reds",
                  "value": "reds",
                  "description": "Reds colormap - sequential white to dark red"
                },
                {
                  "name": "reds_r",
                  "value": "reds_r",
                  "description": "Reversed reds colormap"
                },
                {
                  "name": "rplumbo",
                  "value": "rplumbo",
                  "description": "Rplumbo colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "schwarzwald",
                  "value": "schwarzwald",
                  "description": "Schwarzwald colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "seismic",
                  "value": "seismic",
                  "description": "Seismic colormap - diverging blue to red"
                },
                {
                  "name": "seismic_r",
                  "value": "seismic_r",
                  "description": "Reversed seismic colormap"
                },
                {
                  "name": "set1",
                  "value": "set1",
                  "description": "Set1 colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "set1_r",
                  "value": "set1_r",
                  "description": "Reversed set1 colormap"
                },
                {
                  "name": "set2",
                  "value": "set2",
                  "description": "Set2 colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "set2_r",
                  "value": "set2_r",
                  "description": "Reversed set2 colormap"
                },
                {
                  "name": "set3",
                  "value": "set3",
                  "description": "Set3 colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "set3_r",
                  "value": "set3_r",
                  "description": "Reversed set3 colormap"
                },
                {
                  "name": "spectral",
                  "value": "spectral",
                  "description": "Spectral colormap - diverging red to yellow to blue"
                },
                {
                  "name": "spectral_r",
                  "value": "spectral_r",
                  "description": "Reversed spectral colormap"
                },
                {
                  "name": "spring",
                  "value": "spring",
                  "description": "Spring colormap - sequential magenta to yellow"
                },
                {
                  "name": "spring_r",
                  "value": "spring_r",
                  "description": "Reversed spring colormap"
                },
                {
                  "name": "summer",
                  "value": "summer",
                  "description": "Summer colormap - sequential green to yellow"
                },
                {
                  "name": "summer_r",
                  "value": "summer_r",
                  "description": "Reversed summer colormap"
                },
                {
                  "name": "tab10",
                  "value": "tab10",
                  "description": "Tab10 colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "tab10_r",
                  "value": "tab10_r",
                  "description": "Reversed tab10 colormap"
                },
                {
                  "name": "tab20",
                  "value": "tab20",
                  "description": "Tab20 colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "tab20_r",
                  "value": "tab20_r",
                  "description": "Reversed tab20 colormap"
                },
                {
                  "name": "tab20b",
                  "value": "tab20b",
                  "description": "Tab20b colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "tab20b_r",
                  "value": "tab20b_r",
                  "description": "Reversed tab20b colormap"
                },
                {
                  "name": "tab20c",
                  "value": "tab20c",
                  "description": "Tab20c colormap - qualitative colormap with distinct colors"
                },
                {
                  "name": "tab20c_r",
                  "value": "tab20c_r",
                  "description": "Reversed tab20c colormap"
                },
                {
                  "name": "terrain",
                  "value": "terrain",
                  "description": "Terrain colormap - sequential black to white with hue rotation"
                },
                {
                  "name": "terrain_r",
                  "value": "terrain_r",
                  "description": "Reversed terrain colormap"
                },
                {
                  "name": "twilight",
                  "value": "twilight",
                  "description": "Twilight colormap - diverging blue to red"
                },
                {
                  "name": "twilight_r",
                  "value": "twilight_r",
                  "description": "Reversed twilight colormap"
                },
                {
                  "name": "twilight_shifted",
                  "value": "twilight_shifted",
                  "description": "Twilight shifted colormap - diverging blue to red"
                },
                {
                  "name": "twilight_shifted_r",
                  "value": "twilight_shifted_r",
                  "description": "Reversed twilight shifted colormap"
                },
                {
                  "name": "usda-cdl",
                  "value": "usda-cdl",
                  "description": "USDA CDL colormap - land cover classification"
                },
                {
                  "name": "usda-cdl-corn",
                  "value": "usda-cdl-corn",
                  "description": "USDA CDL corn colormap"
                },
                {
                  "name": "usda-cdl-cotton",
                  "value": "usda-cdl-cotton",
                  "description": "USDA CDL cotton colormap"
                },
                {
                  "name": "usda-cdl-soybeans",
                  "value": "usda-cdl-soybeans",
                  "description": "USDA CDL soybeans colormap"
                },
                {
                  "name": "usda-cdl-wheat",
                  "value": "usda-cdl-wheat",
                  "description": "USDA CDL wheat colormap"
                },
                {
                  "name": "usgs-lcmap",
                  "value": "usgs-lcmap",
                  "description": "USGS LCMAP colormap"
                },
                {
                  "name": "viirs-10a1",
                  "value": "viirs-10a1",
                  "description": "VIIRS 10A1 colormap"
                },
                {
                  "name": "viirs-13a1",
                  "value": "viirs-13a1",
                  "description": "VIIRS 13A1 colormap"
                },
                {
                  "name": "viirs-14a1",
                  "value": "viirs-14a1",
                  "description": "VIIRS 14A1 colormap"
                },
                {
                  "name": "viirs-15a2H",
                  "value": "viirs-15a2H",
                  "description": "VIIRS 15A2H colormap"
                },
                {
                  "name": "viridis",
                  "value": "viridis",
                  "description": "Viridis colormap - sequential black to yellow colormap"
                },
                {
                  "name": "viridis_r",
                  "value": "viridis_r",
                  "description": "Reversed viridis colormap"
                },
                {
                  "name": "winter",
                  "value": "winter",
                  "description": "Winter colormap - sequential blue to green"
                },
                {
                  "name": "winter_r",
                  "value": "winter_r",
                  "description": "Reversed winter colormap"
                },
                {
                  "name": "wistia",
                  "value": "wistia",
                  "description": "Wistia colormap - sequential white to yellow"
                },
                {
                  "name": "wistia_r",
                  "value": "wistia_r",
                  "description": "Reversed wistia colormap"
                },
                {
                  "name": "ylgn",
                  "value": "ylgn",
                  "description": "YlGn colormap - sequential white to dark green"
                },
                {
                  "name": "ylgn_r",
                  "value": "ylgn_r",
                  "description": "Reversed YlGn colormap"
                },
                {
                  "name": "ylgnbu",
                  "value": "ylgnbu",
                  "description": "YlGnBu colormap - sequential white to dark blue-green"
                },
                {
                  "name": "ylgnbu_r",
                  "value": "ylgnbu_r",
                  "description": "Reversed YlGnBu colormap"
                },
                {
                  "name": "ylorbr",
                  "value": "ylorbr",
                  "description": "YlOrBr colormap - sequential white to dark orange-brown"
                },
                {
                  "name": "ylorbr_r",
                  "value": "ylorbr_r",
                  "description": "Reversed YlOrBr colormap"
                },
                {
                  "name": "ylorrd",
                  "value": "ylorrd",
                  "description": "YlOrRd colormap - sequential white to dark red-orange"
                },
                {
                  "name": "ylorrd_r",
                  "value": "ylorrd_r",
                  "description": "Reversed YlOrRd colormap"
                }
              ]
            },
            "x-ms-client-name": "colormapName"
          },
          {
            "name": "colormap",
            "in": "query",
            "description": "JSON encoded custom Colormap",
            "required": false,
            "type": "string"
          },
          {
            "name": "return_mask",
            "in": "query",
            "description": "Add mask to the output data.",
            "required": false,
            "type": "boolean",
            "default": true,
            "x-ms-client-name": "returnMask"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TileJsonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MosaicsTileJsonOperations_Get": {
            "$ref": "./examples/MosaicsTileJsonOperations_Get.json"
          }
        }
      }
    },
    "/data/mosaic/{searchId}/tiles/{z}/{x}/{y}@{scale}x.{format}": {
      "get": {
        "operationId": "MosaicsTiles_GetZxyScalexFormat",
        "tags": [
          "Tiles for STAC Collections Mosaics"
        ],
        "summary": "Tile",
        "description": "Create map tile.",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/jpg",
          "image/webp",
          "image/jp2",
          "image/tiff; application=geotiff",
          "application/x-binary",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "searchId",
            "in": "path",
            "description": "Search Id (pgSTAC Search Hash)",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.scanLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.itemsLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.timeLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.exitwhenfull"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.skipcovered"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.z"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.x"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.y"
          },
          {
            "name": "tileMatrixSetId",
            "in": "query",
            "description": "Identifier selecting one of the TileMatrixSetId supported (default:\n'WebMercatorQuad')",
            "required": false,
            "type": "string",
            "default": "WebMercatorQuad",
            "enum": [
              "CanadianNAD83_LCC",
              "EuropeanETRS89_LAEAQuad",
              "LINZAntarticaMapTilegrid",
              "NZTM2000Quad",
              "UPSAntarcticWGS84Quad",
              "UPSArcticWGS84Quad",
              "UTM31WGS84Quad",
              "WGS1984Quad",
              "WebMercatorQuad",
              "WorldCRS84Quad",
              "WorldMercatorWGS84Quad"
            ],
            "x-ms-enum": {
              "name": "Tilematrixsetid",
              "modelAsString": true,
              "values": [
                {
                  "name": "CanadianNAD83_LCC",
                  "value": "CanadianNAD83_LCC",
                  "description": "Canadian NAD83 Lambert Conformal Conic projection tile matrix set"
                },
                {
                  "name": "EuropeanETRS89_LAEAQuad",
                  "value": "EuropeanETRS89_LAEAQuad",
                  "description": "European ETRS89 Lambert Azimuthal Equal Area Quad tile matrix set"
                },
                {
                  "name": "LINZAntarticaMapTilegrid",
                  "value": "LINZAntarticaMapTilegrid",
                  "description": "Land Information New Zealand (LINZ) Antarctica Map tile grid matrix set"
                },
                {
                  "name": "NZTM2000Quad",
                  "value": "NZTM2000Quad",
                  "description": "New Zealand Transverse Mercator 2000 Quad tile matrix set"
                },
                {
                  "name": "UPSAntarcticWGS84Quad",
                  "value": "UPSAntarcticWGS84Quad",
                  "description": "Universal Polar Stereographic Antarctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UPSArcticWGS84Quad",
                  "value": "UPSArcticWGS84Quad",
                  "description": "Universal Polar Stereographic Arctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UTM31WGS84Quad",
                  "value": "UTM31WGS84Quad",
                  "description": "Universal Transverse Mercator Zone 31 WGS84 Quad tile matrix set"
                },
                {
                  "name": "WGS1984Quad",
                  "value": "WGS1984Quad",
                  "description": "WGS 1984 Quad tile matrix set"
                },
                {
                  "name": "WebMercatorQuad",
                  "value": "WebMercatorQuad",
                  "description": "Web Mercator Quad tile matrix set"
                },
                {
                  "name": "WorldCRS84Quad",
                  "value": "WorldCRS84Quad",
                  "description": "World CRS84 Quad tile matrix set"
                },
                {
                  "name": "WorldMercatorWGS84Quad",
                  "value": "WorldMercatorWGS84Quad",
                  "description": "World Mercator WGS84 Quad tile matrix set"
                }
              ]
            }
          },
          {
            "name": "scale",
            "in": "path",
            "description": "Numeric scale factor for the tile. Higher values produce larger tiles (default: \"1\")",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "name": "format",
            "in": "path",
            "description": "Output format for the tile or image (e.g., png, jpeg, webp) (default: \"png\").",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.buffer"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.colorFormula"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.collection"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.resampling"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.pixelSelection"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MosaicsTiles_GetZxyScalexFormat": {
            "$ref": "./examples/MosaicsTiles_GetZxyScalexFormat.json"
          }
        }
      }
    },
    "/data/mosaic/{searchId}/tiles/{tileMatrixSetId}/{z}/{x}/{y}@{scale}x.{format}": {
      "get": {
        "operationId": "MosaicsTileMatrixSets_GetZxyScalexFormat",
        "tags": [
          "Tiles for STAC Collections Mosaics"
        ],
        "summary": "Tile Tilematrixsetid As Path",
        "description": "Create map tile.",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/jpg",
          "image/webp",
          "image/jp2",
          "image/tiff; application=geotiff",
          "application/x-binary",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "searchId",
            "in": "path",
            "description": "Search Id (pgSTAC Search Hash)",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assets"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.expression"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetBidx"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.assetAsBand"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.nodata"
          },
          {
            "$ref": "#/parameters/AssetQueryParameters.unscale"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.scanLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.itemsLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.timeLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.exitwhenfull"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.skipcovered"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithm"
          },
          {
            "$ref": "#/parameters/AlgorithmQueryParameters.algorithmParams"
          },
          {
            "name": "tileMatrixSetId",
            "in": "path",
            "description": "Identifier selecting one of the TileMatrixSetId supported",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.z"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.x"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.y"
          },
          {
            "name": "scale",
            "in": "path",
            "description": "Numeric scale factor for the tile. Higher values produce larger tiles (default: \"1\")",
            "required": true,
            "type": "number",
            "format": "float"
          },
          {
            "name": "format",
            "in": "path",
            "description": "Output format for the tile or image (e.g., png, jpeg, webp) (default: \"png\").",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.buffer"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.colorFormula"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.collection"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.resampling"
          },
          {
            "$ref": "#/parameters/MosaicTileQueryParameters.pixelSelection"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.rescale"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormapName"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.colormap"
          },
          {
            "$ref": "#/parameters/MiscTileQueryParameters.returnMask"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MosaicsTileMatrixSets_GetZxyScalexFormat": {
            "$ref": "./examples/MosaicsTileMatrixSets_GetZxyScalexFormat.json"
          }
        }
      }
    },
    "/data/mosaic/{searchId}/tiles/{tileMatrixSetId}/{z}/{x}/{y}/assets": {
      "get": {
        "operationId": "MosaicsAssetsForTileMatrixSets_GetZxyAssets",
        "tags": [
          "Tiles for STAC Collections Mosaics"
        ],
        "summary": "Assets For Tile Tilematrixsetid As Path",
        "description": "Return a list of assets which overlap a given tile",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "searchId",
            "in": "path",
            "description": "Search Id (pgSTAC Search Hash)",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.scanLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.itemsLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.timeLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.exitwhenfull"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.skipcovered"
          },
          {
            "name": "tileMatrixSetId",
            "in": "path",
            "description": "Identifier selecting one of the TileMatrixSetId supported",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.z"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.x"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.y"
          }
        ],
        "responses": {
          "200": {
            "description": "Return list of assets",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MosaicsAssetsForTileMatrixSets_GetZxyAssets": {
            "$ref": "./examples/MosaicsAssetsForTileMatrixSets_GetZxyAssets.json"
          }
        }
      }
    },
    "/data/mosaic/{searchId}/tiles/{z}/{x}/{y}/assets": {
      "get": {
        "operationId": "MosaicsAssetsForTiles_GetZxyAssets",
        "tags": [
          "Tiles for STAC Collections Mosaics"
        ],
        "summary": "Assets For Tile",
        "description": "Return a list of assets which overlap a given tile",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "searchId",
            "in": "path",
            "description": "Search Id (pgSTAC Search Hash)",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.scanLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.itemsLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.timeLimit"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.exitwhenfull"
          },
          {
            "$ref": "#/parameters/MosaicSearchQueryParameters.skipcovered"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.z"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.x"
          },
          {
            "$ref": "#/parameters/ZxyPathParameters.y"
          },
          {
            "name": "tileMatrixSetId",
            "in": "query",
            "description": "Identifier selecting one of the TileMatrixSetId supported (default:\n'WebMercatorQuad')",
            "required": false,
            "type": "string",
            "default": "WebMercatorQuad",
            "enum": [
              "CanadianNAD83_LCC",
              "EuropeanETRS89_LAEAQuad",
              "LINZAntarticaMapTilegrid",
              "NZTM2000Quad",
              "UPSAntarcticWGS84Quad",
              "UPSArcticWGS84Quad",
              "UTM31WGS84Quad",
              "WGS1984Quad",
              "WebMercatorQuad",
              "WorldCRS84Quad",
              "WorldMercatorWGS84Quad"
            ],
            "x-ms-enum": {
              "name": "Tilematrixsetid",
              "modelAsString": true,
              "values": [
                {
                  "name": "CanadianNAD83_LCC",
                  "value": "CanadianNAD83_LCC",
                  "description": "Canadian NAD83 Lambert Conformal Conic projection tile matrix set"
                },
                {
                  "name": "EuropeanETRS89_LAEAQuad",
                  "value": "EuropeanETRS89_LAEAQuad",
                  "description": "European ETRS89 Lambert Azimuthal Equal Area Quad tile matrix set"
                },
                {
                  "name": "LINZAntarticaMapTilegrid",
                  "value": "LINZAntarticaMapTilegrid",
                  "description": "Land Information New Zealand (LINZ) Antarctica Map tile grid matrix set"
                },
                {
                  "name": "NZTM2000Quad",
                  "value": "NZTM2000Quad",
                  "description": "New Zealand Transverse Mercator 2000 Quad tile matrix set"
                },
                {
                  "name": "UPSAntarcticWGS84Quad",
                  "value": "UPSAntarcticWGS84Quad",
                  "description": "Universal Polar Stereographic Antarctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UPSArcticWGS84Quad",
                  "value": "UPSArcticWGS84Quad",
                  "description": "Universal Polar Stereographic Arctic WGS84 Quad tile matrix set"
                },
                {
                  "name": "UTM31WGS84Quad",
                  "value": "UTM31WGS84Quad",
                  "description": "Universal Transverse Mercator Zone 31 WGS84 Quad tile matrix set"
                },
                {
                  "name": "WGS1984Quad",
                  "value": "WGS1984Quad",
                  "description": "WGS 1984 Quad tile matrix set"
                },
                {
                  "name": "WebMercatorQuad",
                  "value": "WebMercatorQuad",
                  "description": "Web Mercator Quad tile matrix set"
                },
                {
                  "name": "WorldCRS84Quad",
                  "value": "WorldCRS84Quad",
                  "description": "World CRS84 Quad tile matrix set"
                },
                {
                  "name": "WorldMercatorWGS84Quad",
                  "value": "WorldMercatorWGS84Quad",
                  "description": "World Mercator WGS84 Quad tile matrix set"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return list of assets",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MosaicsAssetsForTiles_GetZxyAssets": {
            "$ref": "./examples/MosaicsAssetsForTiles_GetZxyAssets.json"
          }
        }
      }
    },
    "/data/mosaic/register": {
      "post": {
        "operationId": "MosaicsRegisterSearch_Register",
        "tags": [
          "Tiles for STAC Collections Mosaics"
        ],
        "summary": "Register Search",
        "description": "Register a Search query",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterMosaic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "MosaicsRegisterSearch_Register": {
            "$ref": "./examples/MosaicsRegisterSearch_Register.json"
          }
        }
      }
    },
    "/data/tile-matrix-sets": {
      "get": {
        "operationId": "TileMatrixList_Get",
        "tags": [
          "Tile Matrix Sets"
        ],
        "summary": "Matrix List",
        "description": "Return Matrix List",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TileMatrixList_Get": {
            "$ref": "./examples/TileMatrixList_Get.json"
          }
        }
      }
    },
    "/data/tile-matrix-sets/{tileMatrixSetId}": {
      "get": {
        "operationId": "TileMatrixDefinitions_Get",
        "tags": [
          "Tile Matrix Sets"
        ],
        "summary": "Matrix Definition",
        "description": "Return Matrix Definition",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "tileMatrixSetId",
            "in": "path",
            "description": "Identifier selecting one of the TileMatrixSetId supported",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TileMatrixSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TileMatrixDefinitions_Get": {
            "$ref": "./examples/TileMatrixDefinitions_Get.json"
          }
        }
      }
    },
    "/geocatalog/auth": {
      "get": {
        "operationId": "GeoCatalogAuthConfigOperations_Get",
        "tags": [
          "GeoCatalog Instance Configuration"
        ],
        "summary": "Get Auth Config",
        "description": "Get the app id and tenant id information to make a MSAL request for this\nGeoCatalog instance.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AuthConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GeoCatalogAuthConfigOperations_Get": {
            "$ref": "./examples/GeoCatalogAuthConfigOperations_Get.json"
          }
        }
      }
    },
    "/geocatalog/map/id": {
      "get": {
        "operationId": "GeoCatalogAzmapsClient_GetId",
        "tags": [
          "GeoCatalog Instance Configuration"
        ],
        "summary": "Get Azmaps Client Id",
        "description": "Fetch the client id for the Azure Maps API service based on the current\non the current identity. This client id is used for the Explorer to\nauthenticate with the Azure Maps API service.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AzMapsClientId"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GeoCatalogAzmapsClient_GetId": {
            "$ref": "./examples/GeoCatalogAzmapsClient_GetId.json"
          }
        }
      }
    },
    "/geocatalog/map/token": {
      "get": {
        "operationId": "GeoCatalogAzmapsToken_Get",
        "tags": [
          "GeoCatalog Instance Configuration"
        ],
        "summary": "Get Azmaps Token",
        "description": "Fetch a token for the Azure Maps API service based on the current\nservice identity. This token is used for the Explorer to authenticate\nwith the Azure Maps API service.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AzMapsToken"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GeoCatalogAzmapsToken_Get": {
            "$ref": "./examples/GeoCatalogAzmapsToken_Get.json"
          }
        }
      }
    },
    "/inma/collections/{collectionId}/ingestions": {
      "get": {
        "operationId": "Ingestions_ListAll",
        "tags": [
          "Ingestion Management"
        ],
        "description": "Get ingestions of a catalog",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "$ref": "#/parameters/OdataQuery.top"
          },
          {
            "$ref": "#/parameters/OdataQuery.skip"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Ingestions.IngestionDefinitionsPagedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Ingestions_ListAll": {
            "$ref": "./examples/Ingestions_ListAll.json"
          }
        }
      },
      "post": {
        "operationId": "Ingestions_Create",
        "tags": [
          "Ingestion Management"
        ],
        "description": "Create a new ingestion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "name": "definition",
            "in": "body",
            "description": "Definition of the ingestion",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ingestions.IngestionDefinitionCreation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Ingestions.IngestionDefinition"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url of the created ingestion"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Ingestions_Create": {
            "$ref": "./examples/Ingestions_Create.json"
          }
        }
      }
    },
    "/inma/collections/{collectionId}/ingestions/{ingestionId}": {
      "get": {
        "operationId": "Ingestions_Get",
        "tags": [
          "Ingestion Management"
        ],
        "description": "Get the definition of an ingestion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "$ref": "#/parameters/Ingestions.IngestionParameters.ingestionId"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Ingestions.IngestionDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Ingestions_Get": {
            "$ref": "./examples/Ingestions_Get.json"
          }
        }
      },
      "patch": {
        "operationId": "Ingestions_Update",
        "tags": [
          "Ingestion Management"
        ],
        "description": "Update an existing ingestion",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "$ref": "#/parameters/Ingestions.IngestionParameters.ingestionId"
          },
          {
            "name": "definition",
            "in": "body",
            "description": "Ingestion properties to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ingestions.PatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Ingestions.IngestionDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Ingestions_Update": {
            "$ref": "./examples/Ingestions_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "Ingestions_Delete",
        "tags": [
          "Ingestion Management"
        ],
        "description": "Delete an ingestion from a catalog. All runs of the ingestion will be deleted. Ingestion must not have any runs in progress or queued.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "$ref": "#/parameters/Ingestions.IngestionParameters.ingestionId"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              },
              "operation-location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Ingestions_Delete": {
            "$ref": "./examples/Ingestions_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/inma/collections/{collectionId}/ingestions/{ingestionId}/runs": {
      "get": {
        "operationId": "IngestionRuns_ListAll",
        "tags": [
          "Ingestion Management"
        ],
        "description": "Get the runs of an ingestion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "$ref": "#/parameters/Ingestions.IngestionParameters.ingestionId"
          },
          {
            "$ref": "#/parameters/OdataQuery.top"
          },
          {
            "$ref": "#/parameters/OdataQuery.skip"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Ingestions.IngestionRuns.IngestionRunsPagedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionRuns_ListAll": {
            "$ref": "./examples/IngestionRuns_ListAll.json"
          }
        }
      },
      "post": {
        "operationId": "IngestionRuns_Create",
        "tags": [
          "Ingestion Management"
        ],
        "description": "Create a new run of an ingestion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "$ref": "#/parameters/Ingestions.IngestionParameters.ingestionId"
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Ingestions.IngestionRuns.IngestionRun"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url of the created ingestion run"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionRuns_Create": {
            "$ref": "./examples/IngestionRuns_Create.json"
          }
        }
      }
    },
    "/inma/collections/{collectionId}/ingestions/{ingestionId}/runs/{runId}": {
      "get": {
        "operationId": "IngestionRuns_Get",
        "tags": [
          "Ingestion Management"
        ],
        "description": "Get a run of an ingestion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "$ref": "#/parameters/Ingestions.IngestionParameters.ingestionId"
          },
          {
            "$ref": "#/parameters/Ingestions.IngestionRuns.IngestionRunParameters.runId"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Ingestions.IngestionRuns.IngestionRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionRuns_Get": {
            "$ref": "./examples/IngestionRuns_Get.json"
          }
        }
      }
    },
    "/inma/ingestion-sources": {
      "get": {
        "operationId": "IngestionSources_ListAll",
        "tags": [
          "Ingestion Sources"
        ],
        "description": "Get ingestion sources in a geo-catalog",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/OdataQuery.top"
          },
          {
            "$ref": "#/parameters/OdataQuery.skip"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IngestionSources.IngestionSourcesPagedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionSources_ListAll": {
            "$ref": "./examples/IngestionSources_ListAll.json"
          }
        }
      },
      "post": {
        "operationId": "IngestionSources_Create",
        "tags": [
          "Ingestion Sources"
        ],
        "description": "Create a new ingestion source in a geo-catalog",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "ingestionSource",
            "in": "body",
            "description": "Definition of the ingestion source",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IngestionSources.IngestionSourceCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/IngestionSources.IngestionSource"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url of the created ingestion source"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionSources_Create": {
            "$ref": "./examples/IngestionSources_Create.json"
          }
        }
      }
    },
    "/inma/ingestion-sources/{id}": {
      "get": {
        "operationId": "IngestionSources_Get",
        "tags": [
          "Ingestion Sources"
        ],
        "description": "Get an ingestion source in a geo-catalog",
        "parameters": [
          {
            "$ref": "#/parameters/IngestionSources.IngestionSourceParameters"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IngestionSources.IngestionSource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionSources_Get": {
            "$ref": "./examples/IngestionSources_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IngestionSources_CreateOrReplace",
        "tags": [
          "Ingestion Sources"
        ],
        "description": "Update an existing ingestion source in a geo-catalog",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Ingestion source id",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "ingestionSource",
            "in": "body",
            "description": "Definition of the ingestion source",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IngestionSources.IngestionSourceCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IngestionSources.IngestionSource"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url of the created ingestion source"
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/IngestionSources.IngestionSource"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url of the created ingestion source"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionSources_CreateOrReplace": {
            "$ref": "./examples/IngestionSources_CreateOrReplace.json"
          }
        }
      },
      "delete": {
        "operationId": "IngestionSources_Delete",
        "tags": [
          "Ingestion Sources"
        ],
        "description": "Delete an ingestion source from a geo-catalog",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Ingestion source id",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionSources_Delete": {
            "$ref": "./examples/IngestionSources_Delete.json"
          }
        }
      }
    },
    "/inma/ingestion-sources/managed-identities": {
      "get": {
        "operationId": "IngestionSources_ListManagedIdentities",
        "tags": [
          "Ingestion Sources"
        ],
        "description": "Get all managed identities with access to storage accounts configured for a geo-catalog",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/IngestionSources.ManagedIdentitiesPagedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionSources_ListManagedIdentities": {
            "$ref": "./examples/IngestionSources_ListManagedIdentities.json"
          }
        }
      }
    },
    "/inma/operations": {
      "get": {
        "operationId": "IngestionOperations_ListAll",
        "tags": [
          "Ingestion Management"
        ],
        "description": "Get operations of a geo-catalog collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/OdataQuery.top"
          },
          {
            "$ref": "#/parameters/OdataQuery.skip"
          },
          {
            "name": "collectionId",
            "in": "query",
            "description": "Operation id used to filter the results",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Operation status used to filter the results",
            "required": false,
            "type": "string",
            "enum": [
              "Pending",
              "Running",
              "Succeeded",
              "Canceled",
              "Canceling",
              "Failed"
            ],
            "x-ms-enum": {
              "name": "OperationStatus",
              "modelAsString": true,
              "values": [
                {
                  "name": "Pending",
                  "value": "Pending",
                  "description": "Operation accepted and ready to be run"
                },
                {
                  "name": "Running",
                  "value": "Running",
                  "description": "Operation is running"
                },
                {
                  "name": "Succeeded",
                  "value": "Succeeded",
                  "description": "Operation has already finished its execution"
                },
                {
                  "name": "Canceled",
                  "value": "Canceled",
                  "description": "Operation canceled by the user"
                },
                {
                  "name": "Canceling",
                  "value": "Canceling",
                  "description": "Operation is being canceling"
                },
                {
                  "name": "Failed",
                  "value": "Failed",
                  "description": "Operation failed"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationsPagedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionOperations_ListAll": {
            "$ref": "./examples/IngestionOperations_ListAll.json"
          }
        }
      },
      "delete": {
        "operationId": "IngestionOperations_DeleteAll",
        "tags": [
          "Ingestion Management"
        ],
        "description": "Cancel all running operations of a geo-catalog collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionOperations_DeleteAll": {
            "$ref": "./examples/IngestionOperations_DeleteAll.json"
          }
        }
      }
    },
    "/inma/operations/{operationId}": {
      "get": {
        "operationId": "IngestionOperations_Get",
        "tags": [
          "Ingestion Management"
        ],
        "description": "Get an operation of a geo-catalog collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "maxLength": 500
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionOperations_Get": {
            "$ref": "./examples/IngestionOperations_Get.json"
          }
        }
      },
      "delete": {
        "operationId": "IngestionOperations_Delete",
        "tags": [
          "Ingestion Management"
        ],
        "description": "Cancel a running operation of a geo-catalog collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "maxLength": 500
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "IngestionOperations_Delete": {
            "$ref": "./examples/IngestionOperations_Delete.json"
          }
        }
      }
    },
    "/sas/sign": {
      "get": {
        "operationId": "Sas_GetSign",
        "tags": [
          "Sign an HREF for read access"
        ],
        "summary": "sign an HREF in the format of a URL and returns a SingedLink",
        "description": "Signs a HREF (a link URL) by appending a [SAS Token](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview#how-a-shared-access-signature-works).\nIf the HREF is not a Azure Blob Storage HREF, then pass back the HREF unsigned.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "href",
            "in": "query",
            "description": "HREF (URL) to sign",
            "required": true,
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "description": "The duration, in minutes, that the SAS token will be valid. Only valid for approved users.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/UnsignedLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Sas_GetSign": {
            "$ref": "./examples/Sas_GetSign.json"
          }
        }
      }
    },
    "/sas/token/{collectionId}": {
      "get": {
        "operationId": "Sas_GetToken",
        "tags": [
          "Shared Access Signature (SAS) Tokens to use with Azure SDKs"
        ],
        "summary": "generate a SAS Token for the given Azure Blob storage account and container.",
        "description": "Generate a [SAS Token](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview#how-a-shared-access-signature-works)\nfor the given storage account and container. The storage account and container\nmust be associated with a Planetary Computer dataset indexed by the STAC API.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The name of the Collection that the SAS token will be issued for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "description": "The duration, in minutes, that the SAS token will be valid. Only valid for approved users.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "schema": {
              "$ref": "#/definitions/SasToken"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Sas_GetToken": {
            "$ref": "./examples/Sas_GetToken.json"
          }
        }
      }
    },
    "/sas/token/revoke": {
      "post": {
        "operationId": "Sas_RevokeToken",
        "tags": [
          "Shared Access Signature (SAS) Tokens to use with Azure SDKs"
        ],
        "summary": "revoke a SAS Token for the given Azure Blob storage account",
        "description": "Revoke a [SAS Token](https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview#how-a-shared-access-signature-works)\nfor managed storage account of this GeoCatalog.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "duration",
            "in": "query",
            "description": "The duration, in minutes, that the SAS token will be valid. Only valid for approved users.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Sas_RevokeToken": {
            "$ref": "./examples/Sas_RevokeToken.json"
          }
        }
      }
    },
    "/stac": {
      "get": {
        "operationId": "StacLandingPages_Get",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "summary": "Landing Page",
        "description": "Endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LandingPage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacLandingPages_Get": {
            "$ref": "./examples/StacLandingPages_Get.json"
          }
        }
      }
    },
    "/stac/collections": {
      "get": {
        "operationId": "StacCollectionOperations_GetAll",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "summary": "Get Collections",
        "description": "Endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "sign",
            "in": "query",
            "description": "Whether to sign asset URLs in the response.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "SignType",
              "modelAsString": true,
              "values": [
                {
                  "name": "True",
                  "value": "true",
                  "description": "Sign asset URLs in the response."
                },
                {
                  "name": "False",
                  "value": "false",
                  "description": "Do not sign asset URLs in the response."
                }
              ]
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "URL signature duration in seconds.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/FeatureCollections"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionOperations_GetAll": {
            "$ref": "./examples/StacCollectionOperations_GetAll.json"
          }
        }
      },
      "post": {
        "operationId": "StacCollectionOperations_Create",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "summary": "Create Collection",
        "description": "Create a new collection in the GeoCatalog instance",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request collection body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StacCollection"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              },
              "operation-location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionOperations_Create": {
            "$ref": "./examples/StacCollectionOperations_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/stac/collections/{collectionId}": {
      "get": {
        "operationId": "StacCollectionOperations_Get",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "summary": "Get Collection",
        "description": "Get a collection in the GeoCatalog instance",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the collection.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "sign",
            "in": "query",
            "description": "Whether to sign asset URLs in the response.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "SignType",
              "modelAsString": true,
              "values": [
                {
                  "name": "True",
                  "value": "true",
                  "description": "Sign asset URLs in the response."
                },
                {
                  "name": "False",
                  "value": "false",
                  "description": "Do not sign asset URLs in the response."
                }
              ]
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "URL signature duration in seconds.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/StacCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionOperations_Get": {
            "$ref": "./examples/StacCollectionOperations_Get.json"
          }
        }
      },
      "put": {
        "operationId": "StacCollectionOperations_CreateOrReplace",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "summary": "Create or update Collection",
        "description": "Create or replace a collection in the GeoCatalog instance",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request collection body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StacCollection"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              },
              "operation-location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionOperations_CreateOrReplace": {
            "$ref": "./examples/StacCollectionOperations_CreateOrReplace.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "StacCollectionOperations_Delete",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "summary": "Delete Collection",
        "description": "Delete a collection in the GeoCatalog instance",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              },
              "operation-location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionOperations_Delete": {
            "$ref": "./examples/StacCollectionOperations_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/stac/collections/{collectionId}/assets": {
      "post": {
        "operationId": "StacCollectionAssets_Create",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Create Collection Asset",
        "description": "Create a new asset in the Collection metadata and write the associated\nfile to managed storage.\n\nArgs:\nrequest: The incoming request.\nasset: The Asset object to write, without a valid href to the asset.\nfile: The file to write.\ncollection_id: The ID of the collection to write the asset to.\ncontent_type: The content type of the request.\n\nReturns:\nA Response object containing the newly created asset.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection ID",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "data",
            "in": "formData",
            "description": "Asset metadata",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "Binary file content to be uploaded.",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/StacCollection"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/StacCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionAssets_Create": {
            "$ref": "./examples/StacCollectionAssets_Create.json"
          }
        }
      }
    },
    "/stac/collections/{collectionId}/assets/{assetId}": {
      "put": {
        "operationId": "StacCollectionAssets_CreateOrReplace",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Update Collection Asset",
        "description": "Update an existing asset in a given collection.\n\nArgs:\nrequest: The incoming request.\nasset: The Asset object to update.\nfile: The file to update (optional).\ncollection_id: The ID of the collection to update the asset in.\nasset_id: The ID of the asset to update.\ncontent_type: The content type of the request.\n\nReturns:\nA Response object containing the updated asset.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection ID",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "assetId",
            "in": "path",
            "description": "STAC Asset ID",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "data",
            "in": "formData",
            "description": "Asset metadata",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "Binary file content to be uploaded.",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/StacCollection"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/StacCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionAssets_CreateOrReplace": {
            "$ref": "./examples/StacCollectionAssets_CreateOrReplace.json"
          }
        }
      },
      "delete": {
        "operationId": "StacCollectionAssets_Delete",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Delete Collection Asset",
        "description": "Delete an asset from a given collection.\n\nArgs:\nrequest: The incoming request.\ncollection_id: The ID of the collection to delete the asset from.\nasset_id: The ID of the asset to delete.\n\nReturns:\nA Response object indicating the success of the deletion.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection ID",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "assetId",
            "in": "path",
            "description": "STAC Asset ID",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionAssets_Delete": {
            "$ref": "./examples/StacCollectionAssets_Delete.json"
          }
        }
      }
    },
    "/stac/collections/{collectionId}/configurations": {
      "get": {
        "operationId": "StacCollectionConfig_Get",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Get Config",
        "description": "Get the complete user configuration for a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UserCollectionSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionConfig_Get": {
            "$ref": "./examples/StacCollectionConfig_Get.json"
          }
        }
      }
    },
    "/stac/collections/{collectionId}/configurations/mosaics": {
      "get": {
        "operationId": "StacCollectionMosaics_GetAll",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Get Collection Mosaics",
        "description": "Get the mosaic definitions for a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Mosaic"
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionMosaics_GetAll": {
            "$ref": "./examples/StacCollectionMosaics_GetAll.json"
          }
        }
      },
      "post": {
        "operationId": "StacCollectionMosaics_Add",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Add Collection Mosaic",
        "description": "Add a mosaic definition to a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Mosaic definition to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mosaic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Mosaic"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Mosaic"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionMosaics_Add": {
            "$ref": "./examples/StacCollectionMosaics_Add.json"
          }
        }
      }
    },
    "/stac/collections/{collectionId}/configurations/mosaics/{mosaicId}": {
      "get": {
        "operationId": "StacCollectionMosaics_Get",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Get Collection Mosaic",
        "description": "Get a mosaic definition from a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "mosaicId",
            "in": "path",
            "description": "Unique identifier for the mosaic configuration.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Mosaic"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionMosaics_Get": {
            "$ref": "./examples/StacCollectionMosaics_Get.json"
          }
        }
      },
      "put": {
        "operationId": "StacCollectionMosaics_CreateOrReplace",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Update Collection Mosaic",
        "description": "Update a mosaic definition from a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "mosaicId",
            "in": "path",
            "description": "Unique identifier for the mosaic configuration.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Mosaic definition to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mosaic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Mosaic"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Mosaic"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionMosaics_CreateOrReplace": {
            "$ref": "./examples/StacCollectionMosaics_CreateOrReplace.json"
          }
        }
      },
      "delete": {
        "operationId": "StacCollectionMosaics_Delete",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Delete Collection Mosaic",
        "description": "Delete a mosaic definition from a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "mosaicId",
            "in": "path",
            "description": "Unique identifier for the mosaic configuration.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionMosaics_Delete": {
            "$ref": "./examples/StacCollectionMosaics_Delete.json"
          }
        }
      }
    },
    "/stac/collections/{collectionId}/configurations/partition-type": {
      "get": {
        "operationId": "StacCollectionPartitionTypes_Get",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Get Partitiontype",
        "description": "Get the partitiontype for a GeoCatalog Collection.\n\nArgs:\ncollection_id: the collection id to get the partitiontype for.\n\nReturns:\nThe partitiontype for the collection.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PartitionType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionPartitionTypes_Get": {
            "$ref": "./examples/StacCollectionPartitionTypes_Get.json"
          }
        }
      },
      "put": {
        "operationId": "StacCollectionPartitionTypes_Replace",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Create Partitiontype",
        "description": "Updates partition type for a GeoCatalog Collection. This will\ndetermine the partitioning scheme for items within the database,\nand can only be set before any items are loaded.\n\nIdeal partitioning schemes result in partitions of roughly 100k items each.\n\nThe default partitioning scheme is \"none\" which does not partition items.\n\nArgs:\ncollection_id: the collection id to add the partitiontype to.\npartitiontype: the partitiontype to add.\n\nReturns:\nNone",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Partition type configuration determining how items are partitioned in storage.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartitionType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PartitionType"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionPartitionTypes_Replace": {
            "$ref": "./examples/StacCollectionPartitionTypes_Replace.json"
          }
        }
      }
    },
    "/stac/collections/{collectionId}/configurations/render-options": {
      "get": {
        "operationId": "StacCollectionRenderOptions_GetAll",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Get Collection Render Options",
        "description": "Get all render options for a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RenderOption"
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionRenderOptions_GetAll": {
            "$ref": "./examples/StacCollectionRenderOptions_GetAll.json"
          }
        }
      },
      "post": {
        "operationId": "StacCollectionRenderOptions_Create",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Add Collection Render Option",
        "description": "Add a render option for a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Render option configuration to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RenderOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RenderOption"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/RenderOption"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionRenderOptions_Create": {
            "$ref": "./examples/StacCollectionRenderOptions_Create.json"
          }
        }
      }
    },
    "/stac/collections/{collectionId}/configurations/render-options/{renderOptionId}": {
      "get": {
        "operationId": "StacCollectionRenderOptions_Get",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Get Collection Render Option",
        "description": "Get a render option for a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "renderOptionId",
            "in": "path",
            "description": "Unique identifier for the render option.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RenderOption"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionRenderOptions_Get": {
            "$ref": "./examples/StacCollectionRenderOptions_Get.json"
          }
        }
      },
      "put": {
        "operationId": "StacCollectionRenderOptions_CreateOrReplace",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Update Collection Render Option",
        "description": "Update a render option for a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "renderOptionId",
            "in": "path",
            "description": "Unique identifier for the render option.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Render option configuration to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RenderOption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RenderOption"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/RenderOption"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionRenderOptions_CreateOrReplace": {
            "$ref": "./examples/StacCollectionRenderOptions_CreateOrReplace.json"
          }
        }
      },
      "delete": {
        "operationId": "StacCollectionRenderOptions_Delete",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Delete Collection Render Option",
        "description": "Delete a render option for a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "renderOptionId",
            "in": "path",
            "description": "Unique identifier for the render option.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionRenderOptions_Delete": {
            "$ref": "./examples/StacCollectionRenderOptions_Delete.json"
          }
        }
      }
    },
    "/stac/collections/{collectionId}/configurations/tile-settings": {
      "get": {
        "operationId": "StacCollectionTileSettings_GetAll",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Get Collection Tile Settings",
        "description": "Get the tile settings for a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TileSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionTileSettings_GetAll": {
            "$ref": "./examples/StacCollectionTileSettings_GetAll.json"
          }
        }
      },
      "put": {
        "operationId": "StacCollectionTileSettings_Replace",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Update Collection Tile Settings",
        "description": "Update the tile settings for a given collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Tile settings configuration to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TileSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TileSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionTileSettings_Replace": {
            "$ref": "./examples/StacCollectionTileSettings_Replace.json"
          }
        }
      }
    },
    "/stac/collections/{collectionId}/items": {
      "get": {
        "operationId": "StacItems_GetFeatures",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "description": "Fetch features of the feature collection with id `collectionId`.\n\nEvery feature in a dataset belongs to a collection. A dataset may\nconsist of multiple feature collections. A feature collection is often a\ncollection of features of a similar type, based on a common schema.\")",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The optional limit parameter recommends the number of items that should be present in the response document.\n\nIf the limit parameter value is greater than advertised limit maximum, the server must return the\nmaximum possible number of items, rather than responding with an error.\n\nOnly items are counted that are on the first level of the collection in the response document.\nNested objects contained within the explicitly requested items must not be counted.\n\nMinimum = 1. Maximum = 10000. Default = 10.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Only features that have a geometry that intersects the bounding box are selected.\nThe bounding box is provided as four or six numbers, depending on whether the\ncoordinate reference system includes a vertical axis (height or depth):\n\n- Lower left corner, coordinate axis 1\n- Lower left corner, coordinate axis 2\n- Minimum value, coordinate axis 3 (optional)\n- Upper right corner, coordinate axis 1\n- Upper right corner, coordinate axis 2\n- Maximum value, coordinate axis 3 (optional)\n\nThe coordinate reference system of the values is WGS 84 longitude/latitude\n(http://www.opengis.net/def/crs/OGC/1.3/CRS84).\n\nFor WGS 84 longitude/latitude the values are in most cases the sequence of\nminimum longitude, minimum latitude, maximum longitude and maximum latitude.\nHowever, in cases where the box spans the antimeridian the first value\n(west-most box edge) is larger than the third value (east-most box edge).\n\nIf the vertical axis is included, the third and the sixth number are\nthe bottom and the top of the 3-dimensional bounding box.\n\nIf a feature has multiple spatial geometry properties, it is the decision of the\nserver whether only a single spatial geometry property is used to determine\nthe extent or all relevant geometries.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "datetime",
            "in": "query",
            "description": "Either a date-time or an interval, open or closed. Date and time expressions\nadhere to RFC 3339. Open intervals are expressed using double-dots.\n\nExamples:\n\n- A date-time: \"2018-02-12T23:20:50Z\"\n- A closed interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n- Open intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\nOnly features that have a temporal property that intersects the value of\n`datetime` are selected.\n\nIf a feature has multiple temporal properties, it is the decision of the\nserver whether only a single temporal property is used to determine\nthe extent or all relevant temporal properties.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ItemCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacItems_GetFeatures": {
            "$ref": "./examples/StacItems_GetFeatures.json"
          }
        }
      },
      "post": {
        "operationId": "StacItems_Create",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "description": "Create a new STAC item or a set of items in a collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "name": "body",
            "in": "body",
            "description": "STAC Item or ItemCollection\n\nRepresents a STAC Item or ItemCollection as defined by the STAC 1.0.0 standard.\n\n- **Item**: A GeoJSON Feature that represents a single spatiotemporal asset.\nIt includes metadata such as geometry, datetime, and links to related assets.\nExample: A satellite image with its metadata.\n\n- **ItemCollection**: A GeoJSON FeatureCollection that contains multiple Items.\nIt is used to group multiple related Items together, such as a collection of satellite images.\n\nThis union allows the request body to accept either a single Item or a collection of Items.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              },
              "operation-location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacItems_Create": {
            "$ref": "./examples/StacItems_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/stac/collections/{collectionId}/items/{itemId}": {
      "get": {
        "operationId": "StacItems_Get",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "description": "Fetch a single STAC Item",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item id",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/StacItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacItems_Get": {
            "$ref": "./examples/StacItems_Get.json"
          }
        }
      },
      "put": {
        "operationId": "StacItems_CreateOrReplace",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "description": "Create or replace a STAC item in a collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item id",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "STAC Item",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StacItem"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              },
              "operation-location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacItems_CreateOrReplace": {
            "$ref": "./examples/StacItems_CreateOrReplace.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "StacItems_Update",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "description": "Update a STAC item in a collection",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item id",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "STAC Item",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StacItemUpdate"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              },
              "operation-location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacItems_Update": {
            "$ref": "./examples/StacItems_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "StacItems_Delete",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "description": "Delete a STAC item from a collection",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CollectionParameters.collectionId"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "STAC Item id",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Operation"
            },
            "headers": {
              "location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              },
              "operation-location": {
                "type": "string",
                "format": "uri",
                "description": "Url used to monitor the background operation"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacItems_Delete": {
            "$ref": "./examples/StacItems_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/stac/collections/{collectionId}/queryables": {
      "get": {
        "operationId": "StacQueryables_GetAllByCollection",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "summary": "Collection Queryables",
        "description": "Endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Collection ID",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryableDefinition"
              },
              "x-ms-identifiers": []
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacQueryables_GetAllByCollection": {
            "$ref": "./examples/StacQueryables_GetAllByCollection.json"
          }
        }
      },
      "post": {
        "operationId": "StacQueryables_Create",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "summary": "Set Collection Queryables",
        "description": "Set queryables for a collection given a list of queryable definitions",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request queryable definition body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryableDefinition"
              },
              "x-ms-identifiers": []
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryableDefinition"
              },
              "x-ms-identifiers": []
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacQueryables_Create": {
            "$ref": "./examples/StacQueryables_Create.json"
          }
        }
      }
    },
    "/stac/collections/{collectionId}/queryables/{queryableName}": {
      "put": {
        "operationId": "StacQueryables_CreateOrReplace",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Update Collection Queryables",
        "description": "Updates a queryable given a queryable definition and\ncorresponding collection id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "queryableName",
            "in": "path",
            "description": "Name of the queryable property to operate on.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request queryable definition body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryableDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/QueryableDefinition"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/QueryableDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacQueryables_CreateOrReplace": {
            "$ref": "./examples/StacQueryables_CreateOrReplace.json"
          }
        }
      },
      "delete": {
        "operationId": "StacQueryables_Delete",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Delete Queryables",
        "description": "Delete queryables by name for specified collection.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "Unique identifier for the STAC collection.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          },
          {
            "name": "queryableName",
            "in": "path",
            "description": "Name of the queryable property to operate on.",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacQueryables_Delete": {
            "$ref": "./examples/StacQueryables_Delete.json"
          }
        }
      }
    },
    "/stac/collections/{collectionId}/thumbnail": {
      "get": {
        "operationId": "StacCollectionThumbnails_Get",
        "tags": [
          "STAC Collection Configuration"
        ],
        "summary": "Get Collection Thumbnail",
        "description": "Get thumbnail for given collection.\n\nArgs:\nrequest: The incoming request.\ncollection_id: The ID of the collection to retrieve assets for.\n\nReturns:\nthumbnail image",
        "produces": [
          "image/png",
          "image/jpeg",
          "image/jpg",
          "image/webp",
          "image/jp2",
          "image/tiff; application=geotiff",
          "application/x-binary",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "STAC Collection ID",
            "required": true,
            "type": "string",
            "maxLength": 500,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an image.",
            "schema": {
              "type": "file"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacCollectionThumbnails_Get": {
            "$ref": "./examples/StacCollectionThumbnails_Get.json"
          }
        }
      }
    },
    "/stac/conformance": {
      "get": {
        "operationId": "StacConformanceClass_Get",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "summary": "Conformance Classes",
        "description": "Endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ConformanceClasses"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacConformanceClass_Get": {
            "$ref": "./examples/StacConformanceClass_Get.json"
          }
        }
      }
    },
    "/stac/queryables": {
      "get": {
        "operationId": "StacQueryables_GetAll",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "summary": "Queryables",
        "description": "Endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryableDefinition"
              },
              "x-ms-identifiers": []
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacQueryables_GetAll": {
            "$ref": "./examples/StacQueryables_GetAll.json"
          }
        }
      }
    },
    "/stac/search": {
      "get": {
        "operationId": "StacSearchOperations_Get",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "summary": "Search",
        "description": "Endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "collections",
            "in": "query",
            "description": "List of Collection IDs to include in the search. Only items in these collections will be searched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Array of Item IDs to return specific items.",
            "required": false,
            "type": "string"
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Bounding box for spatial filtering in format [west, south, east, north].",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "intersects",
            "in": "query",
            "description": "GeoJSON geometry for spatial filtering.",
            "required": false,
            "type": "string"
          },
          {
            "name": "datetime",
            "in": "query",
            "description": "Temporal filter in RFC 3339 format, can be a single time or range.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to return.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 250
          },
          {
            "name": "sign",
            "in": "query",
            "description": "Whether to sign asset URLs in the response.",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ],
            "x-ms-enum": {
              "name": "SignType",
              "modelAsString": true,
              "values": [
                {
                  "name": "True",
                  "value": "true",
                  "description": "Sign asset URLs in the response."
                },
                {
                  "name": "False",
                  "value": "false",
                  "description": "Do not sign asset URLs in the response."
                }
              ]
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "URL signature duration in seconds.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Property-based filtering expressed as a JSON object.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortby",
            "in": "query",
            "description": "Sort order for items. Format is property name prefixed with \"+\" for ascending or \"-\" for descending.",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Determines which fields to include in the response. Format is comma-separated field names with \"-\" prefix to exclude fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "CQL filter expression for advanced filtering of items.",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "description": "Pagination token for fetching the next set of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ItemCollection"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacSearchOperations_Get": {
            "$ref": "./examples/StacSearchOperations_Get.json"
          }
        }
      },
      "post": {
        "operationId": "StacSearchOperations_Create",
        "tags": [
          "SpatioTemporal Asset Catalog (STAC) API"
        ],
        "summary": "Search",
        "description": "Endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchPostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ItemCollection"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "StacSearchOperations_Create": {
            "$ref": "./examples/StacSearchOperations_Create.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Algorithm": {
      "type": "string",
      "description": "Supported algorithms for terrain and index-based analysis",
      "enum": [
        "hillshade",
        "contours",
        "normalizedIndex",
        "terrarium",
        "terrainrgb"
      ],
      "x-ms-enum": {
        "name": "Algorithm",
        "modelAsString": true,
        "values": [
          {
            "name": "hillshade",
            "value": "hillshade",
            "description": "Creates hillshade visualization from elevation data"
          },
          {
            "name": "contours",
            "value": "contours",
            "description": "Generates elevation contour lines"
          },
          {
            "name": "normalizedIndex",
            "value": "normalizedIndex",
            "description": "Calculates normalized difference index between bands"
          },
          {
            "name": "terrarium",
            "value": "terrarium",
            "description": "Encodes elevation data in Mapbox Terrarium RGB format"
          },
          {
            "name": "terrainrgb",
            "value": "terrainrgb",
            "description": "Encodes elevation data in Mapbox TerrainRGB format"
          }
        ]
      }
    },
    "ApplicationJsonResponse": {
      "type": "object",
      "description": "Return list of assets",
      "properties": {
        "body": {
          "type": "array",
          "title": "Response Assets For Point Api Mosaic  searchId   Lon   Lat  Assets Get",
          "description": "body",
          "items": {
            "type": "object"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "body"
      ]
    },
    "ApplicationXbinaryResponse": {
      "type": "object",
      "description": "Return an image.",
      "properties": {
        "body": {
          "type": "string",
          "format": "byte",
          "description": "The binary data."
        }
      },
      "required": [
        "body"
      ]
    },
    "Asset": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-spec/blob/v1.0.0/item-spec/item-spec.md#asset-object\n\nRepresents a STAC asset, which is a file or resource associated with a STAC item.",
      "properties": {
        "platform": {
          "type": "string",
          "description": "Platform that acquired the data."
        },
        "instruments": {
          "type": "array",
          "description": "Instruments that acquired the data.",
          "items": {
            "type": "string"
          }
        },
        "constellation": {
          "type": "string",
          "description": "Constellation of satellites that acquired the data."
        },
        "mission": {
          "type": "string",
          "description": "Mission associated with the data."
        },
        "providers": {
          "type": "array",
          "description": "Organizations or individuals who provide the data.",
          "items": {
            "$ref": "#/definitions/Provider"
          },
          "x-ms-identifiers": []
        },
        "gsd": {
          "type": "number",
          "format": "float",
          "description": "Ground sample distance in meters."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the data."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp of the data."
        },
        "title": {
          "type": "string",
          "description": "Human-readable title for the asset."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the asset."
        },
        "href": {
          "type": "string",
          "description": "URL to the asset file.",
          "minLength": 1
        },
        "type": {
          "type": "string",
          "description": "Media type of the asset."
        },
        "roles": {
          "type": "array",
          "description": "Roles of the asset within the item.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "href"
      ],
      "additionalProperties": {}
    },
    "AssetMetadata": {
      "type": "object",
      "description": "Asset metadata model.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the asset."
        },
        "type": {
          "type": "string",
          "description": "The type of the asset."
        },
        "roles": {
          "type": "array",
          "description": "The roles of the asset.",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string",
          "description": "The title of the asset."
        },
        "description": {
          "type": "string",
          "description": "The description of the asset."
        }
      },
      "required": [
        "key",
        "type",
        "roles",
        "title",
        "description"
      ]
    },
    "AssetStatisticsResponse": {
      "type": "object",
      "description": "Return dataset's statistics.",
      "properties": {
        "data": {
          "type": "object",
          "title": "Response Asset Statistics Api Collections  Collection Id  Items  Item Id  Asset Statistics Get",
          "description": "Response Asset Statistics Api Collections  Collection Id  Items  Item Id  Asset Statistics Get",
          "additionalProperties": {
            "$ref": "#/definitions/BandStatistics"
          }
        }
      },
      "required": [
        "data"
      ]
    },
    "AssetUpdate": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-spec/blob/v1.0.0/item-spec/item-spec.md#asset-object\n\nRepresents a STAC asset, which is a file or resource associated with a STAC item.",
      "properties": {
        "platform": {
          "type": "string",
          "description": "Platform that acquired the data."
        },
        "instruments": {
          "type": "array",
          "description": "Instruments that acquired the data.",
          "items": {
            "type": "string"
          }
        },
        "constellation": {
          "type": "string",
          "description": "Constellation of satellites that acquired the data."
        },
        "mission": {
          "type": "string",
          "description": "Mission associated with the data."
        },
        "providers": {
          "type": "array",
          "description": "Organizations or individuals who provide the data.",
          "items": {
            "$ref": "#/definitions/Provider"
          },
          "x-ms-identifiers": []
        },
        "gsd": {
          "type": "number",
          "format": "float",
          "description": "Ground sample distance in meters."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the data."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp of the data."
        },
        "title": {
          "type": "string",
          "description": "Human-readable title for the asset."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the asset."
        },
        "href": {
          "type": "string",
          "description": "URL to the asset file.",
          "minLength": 1
        },
        "type": {
          "type": "string",
          "description": "Media type of the asset."
        },
        "roles": {
          "type": "array",
          "description": "Roles of the asset within the item.",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": {}
    },
    "AuthConfig": {
      "type": "object",
      "description": "Microsoft Authentication Library (MSAL) configuration for frontend authentication.",
      "properties": {
        "authn_app_id": {
          "type": "string",
          "description": "Application ID for authentication.",
          "x-ms-client-name": "authnAppId"
        },
        "tenant_id": {
          "type": "string",
          "description": "Azure Active Directory tenant ID.",
          "x-ms-client-name": "tenantId"
        },
        "instance": {
          "type": "string",
          "format": "uri",
          "description": "Azure AD instance URL."
        },
        "redirect_uri": {
          "type": "string",
          "format": "uri",
          "description": "Redirect URI after authentication.",
          "x-ms-client-name": "redirectUri"
        }
      },
      "required": [
        "authn_app_id",
        "tenant_id",
        "instance"
      ]
    },
    "AvailableAssetsResponse": {
      "type": "object",
      "description": "Return a list of supported assets.",
      "properties": {
        "body": {
          "type": "array",
          "title": "Response Available Assets Api Collections  Collection Id  Items  Item Id  Assets Get",
          "description": "body for available assets response",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "body"
      ]
    },
    "AzMapsClientId": {
      "type": "object",
      "description": "Represents an Azure Maps client ID for authentication.",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "The client ID for Azure Maps authentication.",
          "x-ms-client-name": "clientId"
        }
      },
      "required": [
        "client_id"
      ]
    },
    "AzMapsToken": {
      "type": "object",
      "description": "Represents an Azure Maps token for map visualization.",
      "properties": {
        "token": {
          "type": "string",
          "description": "The authentication token for Azure Maps."
        },
        "expires_on": {
          "type": "integer",
          "format": "int32",
          "description": "Expiration timestamp of the token in Unix time.",
          "x-ms-client-name": "expiresOn"
        }
      },
      "required": [
        "token",
        "expires_on"
      ]
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/azure/Guidelines.md#handling-errors.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.Core.uuid": {
      "type": "string",
      "format": "uuid",
      "description": "Universally Unique Identifier"
    },
    "BandMetadataElement": {},
    "BandStatistics": {
      "type": "object",
      "description": "Statistical information about a data band.",
      "properties": {
        "min": {
          "type": "number",
          "format": "float",
          "description": "Minimum value in the band."
        },
        "max": {
          "type": "number",
          "format": "float",
          "description": "Maximum value in the band."
        },
        "mean": {
          "type": "number",
          "format": "float",
          "description": "Mean value of the band."
        },
        "count": {
          "type": "number",
          "format": "float",
          "description": "Count of pixels in the band."
        },
        "sum": {
          "type": "number",
          "format": "float",
          "description": "Sum of all pixel values in the band."
        },
        "std": {
          "type": "number",
          "format": "float",
          "description": "Standard deviation of pixel values in the band."
        },
        "median": {
          "type": "number",
          "format": "float",
          "description": "Median value of the band."
        },
        "majority": {
          "type": "number",
          "format": "float",
          "description": "Most common value in the band."
        },
        "minority": {
          "type": "number",
          "format": "float",
          "description": "Least common value in the band."
        },
        "unique": {
          "type": "number",
          "format": "float",
          "description": "Count of unique values in the band."
        },
        "histogram": {
          "type": "array",
          "description": "Histogram of pixel values in the band.",
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "x-ms-identifiers": []
        },
        "valid_percent": {
          "type": "number",
          "format": "float",
          "description": "Percentage of valid (non-masked) pixels.",
          "x-ms-client-name": "validPercent"
        },
        "masked_pixels": {
          "type": "number",
          "format": "float",
          "description": "Count of masked pixels in the band.",
          "x-ms-client-name": "maskedPixels"
        },
        "valid_pixels": {
          "type": "number",
          "format": "float",
          "description": "Count of valid (non-masked) pixels in the band.",
          "x-ms-client-name": "validPixels"
        },
        "percentile_2": {
          "type": "number",
          "format": "float",
          "description": "Percentile 2\nThe 2nd percentile value.",
          "x-ms-client-name": "percentile2"
        },
        "percentile_98": {
          "type": "number",
          "format": "float",
          "description": "Percentile 98\nThe 98th percentile value.",
          "x-ms-client-name": "percentile98"
        }
      },
      "required": [
        "min",
        "max",
        "mean",
        "count",
        "sum",
        "std",
        "median",
        "majority",
        "minority",
        "unique",
        "histogram",
        "valid_percent",
        "masked_pixels",
        "valid_pixels",
        "percentile_2",
        "percentile_98"
      ]
    },
    "BoundsResponse": {
      "type": "object",
      "description": "Geographic extent of a dataset expressed as a bounding box",
      "properties": {
        "bounds": {
          "type": "array",
          "description": "Array of coordinates defining the bounding box [west, south, east, north]",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "required": [
        "bounds"
      ]
    },
    "ClassmapLegendResponse": {
      "type": "object",
      "description": "Classmap legend response model.",
      "additionalProperties": {
        "items": {
          "type": "integer",
          "format": "int64"
        },
        "type": "array"
      }
    },
    "ColorMapNames": {
      "type": "string",
      "description": "Available color maps for data visualization",
      "enum": [
        "accent",
        "accent_r",
        "afmhot",
        "afmhot_r",
        "ai4g-lulc",
        "alos-fnf",
        "alos-palsar-mask",
        "autumn",
        "autumn_r",
        "binary",
        "binary_r",
        "blues",
        "blues_r",
        "bone",
        "bone_r",
        "brbg",
        "brbg_r",
        "brg",
        "brg_r",
        "bugn",
        "bugn_r",
        "bupu",
        "bupu_r",
        "bwr",
        "bwr_r",
        "c-cap",
        "cfastie",
        "chesapeake-lc-13",
        "chesapeake-lc-7",
        "chesapeake-lu",
        "chloris-biomass",
        "cividis",
        "cividis_r",
        "cmrmap",
        "cmrmap_r",
        "cool",
        "cool_r",
        "coolwarm",
        "coolwarm_r",
        "copper",
        "copper_r",
        "cubehelix",
        "cubehelix_r",
        "dark2",
        "dark2_r",
        "drcog-lulc",
        "esa-cci-lc",
        "esa-worldcover",
        "flag",
        "flag_r",
        "gap-lulc",
        "gist_earth",
        "gist_earth_r",
        "gist_gray",
        "gist_gray_r",
        "gist_heat",
        "gist_heat_r",
        "gist_ncar",
        "gist_ncar_r",
        "gist_rainbow",
        "gist_rainbow_r",
        "gist_stern",
        "gist_stern_r",
        "gist_yarg",
        "gist_yarg_r",
        "gnbu",
        "gnbu_r",
        "gnuplot",
        "gnuplot2",
        "gnuplot2_r",
        "gnuplot_r",
        "gray",
        "gray_r",
        "greens",
        "greens_r",
        "greys",
        "greys_r",
        "hot",
        "hot_r",
        "hsv",
        "hsv_r",
        "inferno",
        "inferno_r",
        "io-bii",
        "io-lulc",
        "io-lulc-9-class",
        "jet",
        "jet_r",
        "jrc-change",
        "jrc-extent",
        "jrc-occurrence",
        "jrc-recurrence",
        "jrc-seasonality",
        "jrc-transitions",
        "lidar-classification",
        "lidar-hag",
        "lidar-hag-alternative",
        "lidar-intensity",
        "lidar-returns",
        "magma",
        "magma_r",
        "modis-10A1",
        "modis-10A2",
        "modis-13A1|Q1",
        "modis-14A1|A2",
        "modis-15A2H|A3H",
        "modis-16A3GF-ET",
        "modis-16A3GF-PET",
        "modis-17A2H|A2HGF",
        "modis-17A3HGF",
        "modis-64A1",
        "mtbs-severity",
        "nipy_spectral",
        "nipy_spectral_r",
        "nrcan-lulc",
        "ocean",
        "ocean_r",
        "oranges",
        "oranges_r",
        "orrd",
        "orrd_r",
        "paired",
        "paired_r",
        "pastel1",
        "pastel1_r",
        "pastel2",
        "pastel2_r",
        "pink",
        "pink_r",
        "piyg",
        "piyg_r",
        "plasma",
        "plasma_r",
        "prgn",
        "prgn_r",
        "prism",
        "prism_r",
        "pubu",
        "pubu_r",
        "pubugn",
        "pubugn_r",
        "puor",
        "puor_r",
        "purd",
        "purd_r",
        "purples",
        "purples_r",
        "qpe",
        "rainbow",
        "rainbow_r",
        "rdbu",
        "rdbu_r",
        "rdgy",
        "rdgy_r",
        "rdpu",
        "rdpu_r",
        "rdylbu",
        "rdylbu_r",
        "rdylgn",
        "rdylgn_r",
        "reds",
        "reds_r",
        "rplumbo",
        "schwarzwald",
        "seismic",
        "seismic_r",
        "set1",
        "set1_r",
        "set2",
        "set2_r",
        "set3",
        "set3_r",
        "spectral",
        "spectral_r",
        "spring",
        "spring_r",
        "summer",
        "summer_r",
        "tab10",
        "tab10_r",
        "tab20",
        "tab20_r",
        "tab20b",
        "tab20b_r",
        "tab20c",
        "tab20c_r",
        "terrain",
        "terrain_r",
        "twilight",
        "twilight_r",
        "twilight_shifted",
        "twilight_shifted_r",
        "usda-cdl",
        "usda-cdl-corn",
        "usda-cdl-cotton",
        "usda-cdl-soybeans",
        "usda-cdl-wheat",
        "usgs-lcmap",
        "viirs-10a1",
        "viirs-13a1",
        "viirs-14a1",
        "viirs-15a2H",
        "viridis",
        "viridis_r",
        "winter",
        "winter_r",
        "wistia",
        "wistia_r",
        "ylgn",
        "ylgn_r",
        "ylgnbu",
        "ylgnbu_r",
        "ylorbr",
        "ylorbr_r",
        "ylorrd",
        "ylorrd_r"
      ],
      "x-ms-enum": {
        "name": "ColorMapNames",
        "modelAsString": true,
        "values": [
          {
            "name": "accent",
            "value": "accent",
            "description": "Accent colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "accent_r",
            "value": "accent_r",
            "description": "Reversed accent colormap"
          },
          {
            "name": "afmhot",
            "value": "afmhot",
            "description": "Afmhot colormap - sequential black-red-yellow-white colormap"
          },
          {
            "name": "afmhot_r",
            "value": "afmhot_r",
            "description": "Reversed afmhot colormap"
          },
          {
            "name": "ai4g-lulc",
            "value": "ai4g-lulc",
            "description": "AI for Good land use/land cover colormap"
          },
          {
            "name": "alos-fnf",
            "value": "alos-fnf",
            "description": "ALOS forest/non-forest colormap"
          },
          {
            "name": "alos-palsar-mask",
            "value": "alos-palsar-mask",
            "description": "ALOS PALSAR mask colormap"
          },
          {
            "name": "autumn",
            "value": "autumn",
            "description": "Autumn colormap - sequential red-orange-yellow colormap"
          },
          {
            "name": "autumn_r",
            "value": "autumn_r",
            "description": "Reversed autumn colormap"
          },
          {
            "name": "binary",
            "value": "binary",
            "description": "Binary colormap - simple black and white colormap"
          },
          {
            "name": "binary_r",
            "value": "binary_r",
            "description": "Reversed binary colormap"
          },
          {
            "name": "blues",
            "value": "blues",
            "description": "Blues colormap - sequential white to dark blue"
          },
          {
            "name": "blues_r",
            "value": "blues_r",
            "description": "Reversed blues colormap"
          },
          {
            "name": "bone",
            "value": "bone",
            "description": "Bone colormap - grayscale with slight blue tint"
          },
          {
            "name": "bone_r",
            "value": "bone_r",
            "description": "Reversed bone colormap"
          },
          {
            "name": "brbg",
            "value": "brbg",
            "description": "BrBG colormap - diverging brown to blue-green"
          },
          {
            "name": "brbg_r",
            "value": "brbg_r",
            "description": "Reversed BrBG colormap"
          },
          {
            "name": "brg",
            "value": "brg",
            "description": "BrG colormap - diverging brown to green"
          },
          {
            "name": "brg_r",
            "value": "brg_r",
            "description": "Reversed BrG colormap"
          },
          {
            "name": "bugn",
            "value": "bugn",
            "description": "BuGn colormap - sequential white to dark green"
          },
          {
            "name": "bugn_r",
            "value": "bugn_r",
            "description": "Reversed BuGn colormap"
          },
          {
            "name": "bupu",
            "value": "bupu",
            "description": "BuPu colormap - sequential white to dark purple"
          },
          {
            "name": "bupu_r",
            "value": "bupu_r",
            "description": "Reversed BuPu colormap"
          },
          {
            "name": "bwr",
            "value": "bwr",
            "description": "BWR colormap - diverging blue to red"
          },
          {
            "name": "bwr_r",
            "value": "bwr_r",
            "description": "Reversed BWR colormap"
          },
          {
            "name": "c-cap",
            "value": "c-cap",
            "description": "C-CAP colormap - land cover classification"
          },
          {
            "name": "cfastie",
            "value": "cfastie",
            "description": "Cfastie colormap - high contrast colormap"
          },
          {
            "name": "chesapeake-lc-13",
            "value": "chesapeake-lc-13",
            "description": "Chesapeake land cover 13-class colormap"
          },
          {
            "name": "chesapeake-lc-7",
            "value": "chesapeake-lc-7",
            "description": "Chesapeake land cover 7-class colormap"
          },
          {
            "name": "chesapeake-lu",
            "value": "chesapeake-lu",
            "description": "Chesapeake land use colormap"
          },
          {
            "name": "chloris-biomass",
            "value": "chloris-biomass",
            "description": "Chloris biomass colormap"
          },
          {
            "name": "cividis",
            "value": "cividis",
            "description": "Cividis colormap - sequential yellow to blue"
          },
          {
            "name": "cividis_r",
            "value": "cividis_r",
            "description": "Reversed cividis colormap"
          },
          {
            "name": "cmrmap",
            "value": "cmrmap",
            "description": "CMRmap colormap - perceptually uniform colormap"
          },
          {
            "name": "cmrmap_r",
            "value": "cmrmap_r",
            "description": "Reversed CMRmap colormap"
          },
          {
            "name": "cool",
            "value": "cool",
            "description": "Cool colormap - sequential cyan to magenta"
          },
          {
            "name": "cool_r",
            "value": "cool_r",
            "description": "Reversed cool colormap"
          },
          {
            "name": "coolwarm",
            "value": "coolwarm",
            "description": "Coolwarm colormap - diverging blue to red"
          },
          {
            "name": "coolwarm_r",
            "value": "coolwarm_r",
            "description": "Reversed coolwarm colormap"
          },
          {
            "name": "copper",
            "value": "copper",
            "description": "Copper colormap - sequential black to copper"
          },
          {
            "name": "copper_r",
            "value": "copper_r",
            "description": "Reversed copper colormap"
          },
          {
            "name": "cubehelix",
            "value": "cubehelix",
            "description": "Cubehelix colormap - sequential black to white with hue rotation"
          },
          {
            "name": "cubehelix_r",
            "value": "cubehelix_r",
            "description": "Reversed cubehelix colormap"
          },
          {
            "name": "dark2",
            "value": "dark2",
            "description": "Dark2 colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "dark2_r",
            "value": "dark2_r",
            "description": "Reversed dark2 colormap"
          },
          {
            "name": "drcog-lulc",
            "value": "drcog-lulc",
            "description": "DRCog land use/land cover colormap"
          },
          {
            "name": "esa-cci-lc",
            "value": "esa-cci-lc",
            "description": "ESA CCI land cover colormap"
          },
          {
            "name": "esa-worldcover",
            "value": "esa-worldcover",
            "description": "ESA WorldCover colormap"
          },
          {
            "name": "flag",
            "value": "flag",
            "description": "Flag colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "flag_r",
            "value": "flag_r",
            "description": "Reversed flag colormap"
          },
          {
            "name": "gap-lulc",
            "value": "gap-lulc",
            "description": "GAP land use/land cover colormap"
          },
          {
            "name": "gist_earth",
            "value": "gist_earth",
            "description": "Gist_earth colormap - perceptually uniform colormap"
          },
          {
            "name": "gist_earth_r",
            "value": "gist_earth_r",
            "description": "Reversed gist_earth colormap"
          },
          {
            "name": "gist_gray",
            "value": "gist_gray",
            "description": "Gist_gray colormap - grayscale colormap"
          },
          {
            "name": "gist_gray_r",
            "value": "gist_gray_r",
            "description": "Reversed gist_gray colormap"
          },
          {
            "name": "gist_heat",
            "value": "gist_heat",
            "description": "Gist_heat colormap - sequential black-red-yellow-white colormap"
          },
          {
            "name": "gist_heat_r",
            "value": "gist_heat_r",
            "description": "Reversed gist_heat colormap"
          },
          {
            "name": "gist_ncar",
            "value": "gist_ncar",
            "description": "Gist_ncar colormap - perceptually uniform colormap"
          },
          {
            "name": "gist_ncar_r",
            "value": "gist_ncar_r",
            "description": "Reversed gist_ncar colormap"
          },
          {
            "name": "gist_rainbow",
            "value": "gist_rainbow",
            "description": "Gist_rainbow colormap - perceptually uniform colormap"
          },
          {
            "name": "gist_rainbow_r",
            "value": "gist_rainbow_r",
            "description": "Reversed gist_rainbow colormap"
          },
          {
            "name": "gist_stern",
            "value": "gist_stern",
            "description": "Gist_stern colormap - perceptually uniform colormap"
          },
          {
            "name": "gist_stern_r",
            "value": "gist_stern_r",
            "description": "Reversed gist_stern colormap"
          },
          {
            "name": "gist_yarg",
            "value": "gist_yarg",
            "description": "Gist_yarg colormap - grayscale colormap"
          },
          {
            "name": "gist_yarg_r",
            "value": "gist_yarg_r",
            "description": "Reversed gist_yarg colormap"
          },
          {
            "name": "gnbu",
            "value": "gnbu",
            "description": "GnBu colormap - sequential white to dark blue-green"
          },
          {
            "name": "gnbu_r",
            "value": "gnbu_r",
            "description": "Reversed GnBu colormap"
          },
          {
            "name": "gnuplot",
            "value": "gnuplot",
            "description": "Gnuplot colormap - sequential black to white with hue rotation"
          },
          {
            "name": "gnuplot2",
            "value": "gnuplot2",
            "description": "Gnuplot2 colormap - sequential black to white with hue rotation"
          },
          {
            "name": "gnuplot2_r",
            "value": "gnuplot2_r",
            "description": "Reversed gnuplot2 colormap"
          },
          {
            "name": "gnuplot_r",
            "value": "gnuplot_r",
            "description": "Reversed gnuplot colormap"
          },
          {
            "name": "gray",
            "value": "gray",
            "description": "Gray colormap - grayscale colormap"
          },
          {
            "name": "gray_r",
            "value": "gray_r",
            "description": "Reversed gray colormap"
          },
          {
            "name": "greens",
            "value": "greens",
            "description": "Greens colormap - sequential white to dark green"
          },
          {
            "name": "greens_r",
            "value": "greens_r",
            "description": "Reversed greens colormap"
          },
          {
            "name": "greys",
            "value": "greys",
            "description": "Greys colormap - sequential white to dark gray"
          },
          {
            "name": "greys_r",
            "value": "greys_r",
            "description": "Reversed greys colormap"
          },
          {
            "name": "hot",
            "value": "hot",
            "description": "Hot colormap - sequential black-red-yellow-white colormap"
          },
          {
            "name": "hot_r",
            "value": "hot_r",
            "description": "Reversed hot colormap"
          },
          {
            "name": "hsv",
            "value": "hsv",
            "description": "HSV colormap - hue-saturation-value colormap"
          },
          {
            "name": "hsv_r",
            "value": "hsv_r",
            "description": "Reversed HSV colormap"
          },
          {
            "name": "inferno",
            "value": "inferno",
            "description": "Inferno colormap - sequential black to yellow colormap"
          },
          {
            "name": "inferno_r",
            "value": "inferno_r",
            "description": "Reversed inferno colormap"
          },
          {
            "name": "io-bii",
            "value": "io-bii",
            "description": "IO-BII colormap - biodiversity index colormap"
          },
          {
            "name": "io-lulc",
            "value": "io-lulc",
            "description": "IO-LULC colormap - land use/land cover colormap"
          },
          {
            "name": "io-lulc-9-class",
            "value": "io-lulc-9-class",
            "description": "IO-LULC 9-class colormap"
          },
          {
            "name": "jet",
            "value": "jet",
            "description": "Jet colormap - sequential blue-green-yellow-red colormap"
          },
          {
            "name": "jet_r",
            "value": "jet_r",
            "description": "Reversed jet colormap"
          },
          {
            "name": "jrc-change",
            "value": "jrc-change",
            "description": "JRC change colormap"
          },
          {
            "name": "jrc-extent",
            "value": "jrc-extent",
            "description": "JRC extent colormap"
          },
          {
            "name": "jrc-occurrence",
            "value": "jrc-occurrence",
            "description": "JRC occurrence colormap"
          },
          {
            "name": "jrc-recurrence",
            "value": "jrc-recurrence",
            "description": "JRC recurrence colormap"
          },
          {
            "name": "jrc-seasonality",
            "value": "jrc-seasonality",
            "description": "JRC seasonality colormap"
          },
          {
            "name": "jrc-transitions",
            "value": "jrc-transitions",
            "description": "JRC transitions colormap"
          },
          {
            "name": "lidar-classification",
            "value": "lidar-classification",
            "description": "Lidar classification colormap"
          },
          {
            "name": "lidar-hag",
            "value": "lidar-hag",
            "description": "Lidar height above ground colormap"
          },
          {
            "name": "lidar-hag-alternative",
            "value": "lidar-hag-alternative",
            "description": "Alternative lidar height above ground colormap"
          },
          {
            "name": "lidar-intensity",
            "value": "lidar-intensity",
            "description": "Lidar intensity colormap"
          },
          {
            "name": "lidar-returns",
            "value": "lidar-returns",
            "description": "Lidar returns colormap"
          },
          {
            "name": "magma",
            "value": "magma",
            "description": "Magma colormap - sequential black to yellow colormap"
          },
          {
            "name": "magma_r",
            "value": "magma_r",
            "description": "Reversed magma colormap"
          },
          {
            "name": "modis-10A1",
            "value": "modis-10A1",
            "description": "MODIS 10A1 colormap"
          },
          {
            "name": "modis-10A2",
            "value": "modis-10A2",
            "description": "MODIS 10A2 colormap"
          },
          {
            "name": "modis-13A1|Q1",
            "value": "modis-13A1|Q1",
            "description": "MODIS 13A1|Q1 colormap"
          },
          {
            "name": "modis-14A1|A2",
            "value": "modis-14A1|A2",
            "description": "MODIS 14A1|A2 colormap"
          },
          {
            "name": "modis-15A2H|A3H",
            "value": "modis-15A2H|A3H",
            "description": "MODIS 15A2H|A3H colormap"
          },
          {
            "name": "modis-16A3GF-ET",
            "value": "modis-16A3GF-ET",
            "description": "MODIS 16A3GF-ET colormap"
          },
          {
            "name": "modis-16A3GF-PET",
            "value": "modis-16A3GF-PET",
            "description": "MODIS 16A3GF-PET colormap"
          },
          {
            "name": "modis-17A2H|A2HGF",
            "value": "modis-17A2H|A2HGF",
            "description": "MODIS 17A2H|A2HGF colormap"
          },
          {
            "name": "modis-17A3HGF",
            "value": "modis-17A3HGF",
            "description": "MODIS 17A3HGF colormap"
          },
          {
            "name": "modis-64A1",
            "value": "modis-64A1",
            "description": "MODIS 64A1 colormap"
          },
          {
            "name": "mtbs-severity",
            "value": "mtbs-severity",
            "description": "MTBS severity colormap"
          },
          {
            "name": "nipy_spectral",
            "value": "nipy_spectral",
            "description": "Nipy_spectral colormap - perceptually uniform colormap"
          },
          {
            "name": "nipy_spectral_r",
            "value": "nipy_spectral_r",
            "description": "Reversed nipy_spectral colormap"
          },
          {
            "name": "nrcan-lulc",
            "value": "nrcan-lulc",
            "description": "NRCAN land use/land cover colormap"
          },
          {
            "name": "ocean",
            "value": "ocean",
            "description": "Ocean colormap - sequential blue to white colormap"
          },
          {
            "name": "ocean_r",
            "value": "ocean_r",
            "description": "Reversed ocean colormap"
          },
          {
            "name": "oranges",
            "value": "oranges",
            "description": "Oranges colormap - sequential white to dark orange"
          },
          {
            "name": "oranges_r",
            "value": "oranges_r",
            "description": "Reversed oranges colormap"
          },
          {
            "name": "orrd",
            "value": "orrd",
            "description": "OrRd colormap - sequential white to dark red-orange"
          },
          {
            "name": "orrd_r",
            "value": "orrd_r",
            "description": "Reversed OrRd colormap"
          },
          {
            "name": "paired",
            "value": "paired",
            "description": "Paired colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "paired_r",
            "value": "paired_r",
            "description": "Reversed paired colormap"
          },
          {
            "name": "pastel1",
            "value": "pastel1",
            "description": "Pastel1 colormap - qualitative colormap with pastel colors"
          },
          {
            "name": "pastel1_r",
            "value": "pastel1_r",
            "description": "Reversed pastel1 colormap"
          },
          {
            "name": "pastel2",
            "value": "pastel2",
            "description": "Pastel2 colormap - qualitative colormap with pastel colors"
          },
          {
            "name": "pastel2_r",
            "value": "pastel2_r",
            "description": "Reversed pastel2 colormap"
          },
          {
            "name": "pink",
            "value": "pink",
            "description": "Pink colormap - sequential white to dark pink"
          },
          {
            "name": "pink_r",
            "value": "pink_r",
            "description": "Reversed pink colormap"
          },
          {
            "name": "piyg",
            "value": "piyg",
            "description": "PiYG colormap - diverging pink to green"
          },
          {
            "name": "piyg_r",
            "value": "piyg_r",
            "description": "Reversed PiYG colormap"
          },
          {
            "name": "plasma",
            "value": "plasma",
            "description": "Plasma colormap - sequential black to yellow colormap"
          },
          {
            "name": "plasma_r",
            "value": "plasma_r",
            "description": "Reversed plasma colormap"
          },
          {
            "name": "prgn",
            "value": "prgn",
            "description": "PRGn colormap - diverging purple to green"
          },
          {
            "name": "prgn_r",
            "value": "prgn_r",
            "description": "Reversed PRGn colormap"
          },
          {
            "name": "prism",
            "value": "prism",
            "description": "Prism colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "prism_r",
            "value": "prism_r",
            "description": "Reversed prism colormap"
          },
          {
            "name": "pubu",
            "value": "pubu",
            "description": "PuBu colormap - sequential white to dark blue"
          },
          {
            "name": "pubu_r",
            "value": "pubu_r",
            "description": "Reversed PuBu colormap"
          },
          {
            "name": "pubugn",
            "value": "pubugn",
            "description": "PuBuGn colormap - sequential white to dark blue-green"
          },
          {
            "name": "pubugn_r",
            "value": "pubugn_r",
            "description": "Reversed PuBuGn colormap"
          },
          {
            "name": "puor",
            "value": "puor",
            "description": "PuOr colormap - diverging purple to orange"
          },
          {
            "name": "puor_r",
            "value": "puor_r",
            "description": "Reversed PuOr colormap"
          },
          {
            "name": "purd",
            "value": "purd",
            "description": "PuRd colormap - sequential white to dark purple-red"
          },
          {
            "name": "purd_r",
            "value": "purd_r",
            "description": "Reversed PuRd colormap"
          },
          {
            "name": "purples",
            "value": "purples",
            "description": "Purples colormap - sequential white to dark purple"
          },
          {
            "name": "purples_r",
            "value": "purples_r",
            "description": "Reversed purples colormap"
          },
          {
            "name": "qpe",
            "value": "qpe",
            "description": "QPE colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "rainbow",
            "value": "rainbow",
            "description": "Rainbow colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "rainbow_r",
            "value": "rainbow_r",
            "description": "Reversed rainbow colormap"
          },
          {
            "name": "rdbu",
            "value": "rdbu",
            "description": "RdBu colormap - diverging red to blue"
          },
          {
            "name": "rdbu_r",
            "value": "rdbu_r",
            "description": "Reversed RdBu colormap"
          },
          {
            "name": "rdgy",
            "value": "rdgy",
            "description": "RdGy colormap - diverging red to gray"
          },
          {
            "name": "rdgy_r",
            "value": "rdgy_r",
            "description": "Reversed RdGy colormap"
          },
          {
            "name": "rdpu",
            "value": "rdpu",
            "description": "RdPu colormap - sequential white to dark red-purple"
          },
          {
            "name": "rdpu_r",
            "value": "rdpu_r",
            "description": "Reversed RdPu colormap"
          },
          {
            "name": "rdylbu",
            "value": "rdylbu",
            "description": "RdYlBu colormap - diverging red to yellow to blue"
          },
          {
            "name": "rdylbu_r",
            "value": "rdylbu_r",
            "description": "Reversed RdYlBu colormap"
          },
          {
            "name": "rdylgn",
            "value": "rdylgn",
            "description": "RdYlGn colormap - diverging red to yellow to green"
          },
          {
            "name": "rdylgn_r",
            "value": "rdylgn_r",
            "description": "Reversed RdYlGn colormap"
          },
          {
            "name": "reds",
            "value": "reds",
            "description": "Reds colormap - sequential white to dark red"
          },
          {
            "name": "reds_r",
            "value": "reds_r",
            "description": "Reversed reds colormap"
          },
          {
            "name": "rplumbo",
            "value": "rplumbo",
            "description": "Rplumbo colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "schwarzwald",
            "value": "schwarzwald",
            "description": "Schwarzwald colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "seismic",
            "value": "seismic",
            "description": "Seismic colormap - diverging blue to red"
          },
          {
            "name": "seismic_r",
            "value": "seismic_r",
            "description": "Reversed seismic colormap"
          },
          {
            "name": "set1",
            "value": "set1",
            "description": "Set1 colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "set1_r",
            "value": "set1_r",
            "description": "Reversed set1 colormap"
          },
          {
            "name": "set2",
            "value": "set2",
            "description": "Set2 colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "set2_r",
            "value": "set2_r",
            "description": "Reversed set2 colormap"
          },
          {
            "name": "set3",
            "value": "set3",
            "description": "Set3 colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "set3_r",
            "value": "set3_r",
            "description": "Reversed set3 colormap"
          },
          {
            "name": "spectral",
            "value": "spectral",
            "description": "Spectral colormap - diverging red to yellow to blue"
          },
          {
            "name": "spectral_r",
            "value": "spectral_r",
            "description": "Reversed spectral colormap"
          },
          {
            "name": "spring",
            "value": "spring",
            "description": "Spring colormap - sequential magenta to yellow"
          },
          {
            "name": "spring_r",
            "value": "spring_r",
            "description": "Reversed spring colormap"
          },
          {
            "name": "summer",
            "value": "summer",
            "description": "Summer colormap - sequential green to yellow"
          },
          {
            "name": "summer_r",
            "value": "summer_r",
            "description": "Reversed summer colormap"
          },
          {
            "name": "tab10",
            "value": "tab10",
            "description": "Tab10 colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "tab10_r",
            "value": "tab10_r",
            "description": "Reversed tab10 colormap"
          },
          {
            "name": "tab20",
            "value": "tab20",
            "description": "Tab20 colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "tab20_r",
            "value": "tab20_r",
            "description": "Reversed tab20 colormap"
          },
          {
            "name": "tab20b",
            "value": "tab20b",
            "description": "Tab20b colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "tab20b_r",
            "value": "tab20b_r",
            "description": "Reversed tab20b colormap"
          },
          {
            "name": "tab20c",
            "value": "tab20c",
            "description": "Tab20c colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "tab20c_r",
            "value": "tab20c_r",
            "description": "Reversed tab20c colormap"
          },
          {
            "name": "terrain",
            "value": "terrain",
            "description": "Terrain colormap - sequential black to white with hue rotation"
          },
          {
            "name": "terrain_r",
            "value": "terrain_r",
            "description": "Reversed terrain colormap"
          },
          {
            "name": "twilight",
            "value": "twilight",
            "description": "Twilight colormap - diverging blue to red"
          },
          {
            "name": "twilight_r",
            "value": "twilight_r",
            "description": "Reversed twilight colormap"
          },
          {
            "name": "twilight_shifted",
            "value": "twilight_shifted",
            "description": "Twilight shifted colormap - diverging blue to red"
          },
          {
            "name": "twilight_shifted_r",
            "value": "twilight_shifted_r",
            "description": "Reversed twilight shifted colormap"
          },
          {
            "name": "usda-cdl",
            "value": "usda-cdl",
            "description": "USDA CDL colormap - land cover classification"
          },
          {
            "name": "usda-cdl-corn",
            "value": "usda-cdl-corn",
            "description": "USDA CDL corn colormap"
          },
          {
            "name": "usda-cdl-cotton",
            "value": "usda-cdl-cotton",
            "description": "USDA CDL cotton colormap"
          },
          {
            "name": "usda-cdl-soybeans",
            "value": "usda-cdl-soybeans",
            "description": "USDA CDL soybeans colormap"
          },
          {
            "name": "usda-cdl-wheat",
            "value": "usda-cdl-wheat",
            "description": "USDA CDL wheat colormap"
          },
          {
            "name": "usgs-lcmap",
            "value": "usgs-lcmap",
            "description": "USGS LCMAP colormap"
          },
          {
            "name": "viirs-10a1",
            "value": "viirs-10a1",
            "description": "VIIRS 10A1 colormap"
          },
          {
            "name": "viirs-13a1",
            "value": "viirs-13a1",
            "description": "VIIRS 13A1 colormap"
          },
          {
            "name": "viirs-14a1",
            "value": "viirs-14a1",
            "description": "VIIRS 14A1 colormap"
          },
          {
            "name": "viirs-15a2H",
            "value": "viirs-15a2H",
            "description": "VIIRS 15A2H colormap"
          },
          {
            "name": "viridis",
            "value": "viridis",
            "description": "Viridis colormap - sequential black to yellow colormap"
          },
          {
            "name": "viridis_r",
            "value": "viridis_r",
            "description": "Reversed viridis colormap"
          },
          {
            "name": "winter",
            "value": "winter",
            "description": "Winter colormap - sequential blue to green"
          },
          {
            "name": "winter_r",
            "value": "winter_r",
            "description": "Reversed winter colormap"
          },
          {
            "name": "wistia",
            "value": "wistia",
            "description": "Wistia colormap - sequential white to yellow"
          },
          {
            "name": "wistia_r",
            "value": "wistia_r",
            "description": "Reversed wistia colormap"
          },
          {
            "name": "ylgn",
            "value": "ylgn",
            "description": "YlGn colormap - sequential white to dark green"
          },
          {
            "name": "ylgn_r",
            "value": "ylgn_r",
            "description": "Reversed YlGn colormap"
          },
          {
            "name": "ylgnbu",
            "value": "ylgnbu",
            "description": "YlGnBu colormap - sequential white to dark blue-green"
          },
          {
            "name": "ylgnbu_r",
            "value": "ylgnbu_r",
            "description": "Reversed YlGnBu colormap"
          },
          {
            "name": "ylorbr",
            "value": "ylorbr",
            "description": "YlOrBr colormap - sequential white to dark orange-brown"
          },
          {
            "name": "ylorbr_r",
            "value": "ylorbr_r",
            "description": "Reversed YlOrBr colormap"
          },
          {
            "name": "ylorrd",
            "value": "ylorrd",
            "description": "YlOrRd colormap - sequential white to dark red-orange"
          },
          {
            "name": "ylorrd_r",
            "value": "ylorrd_r",
            "description": "Reversed YlOrRd colormap"
          }
        ]
      }
    },
    "CommonMetadata": {
      "type": "object",
      "description": "Common Metadata",
      "properties": {
        "platform": {
          "type": "string",
          "description": "Platform that acquired the data."
        },
        "instruments": {
          "type": "array",
          "description": "Instruments that acquired the data.",
          "items": {
            "type": "string"
          }
        },
        "constellation": {
          "type": "string",
          "description": "Constellation of satellites that acquired the data."
        },
        "mission": {
          "type": "string",
          "description": "Mission associated with the data."
        },
        "providers": {
          "type": "array",
          "description": "Organizations or individuals who provide the data.",
          "items": {
            "$ref": "#/definitions/Provider"
          },
          "x-ms-identifiers": []
        },
        "gsd": {
          "type": "number",
          "format": "float",
          "description": "Ground sample distance in meters."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the data."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp of the data."
        }
      }
    },
    "ConformanceClasses": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-api-spec/blob/master/api-spec.md#ogc-api---features-endpoints\n\nRepresents the OGC API conformance declaration.",
      "properties": {
        "conformsTo": {
          "type": "array",
          "description": "List of OGC API conformance classes implemented by this API.",
          "items": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "required": [
        "conformsTo"
      ]
    },
    "ContextExtension": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-api-spec/tree/master/extensions/context#context-extension-specification\n\nContext information for a search response including pagination details.",
      "properties": {
        "returned": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items returned in the response."
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of items requested."
        },
        "matched": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of items matching the query."
        }
      },
      "required": [
        "returned"
      ]
    },
    "Cql": {
      "type": "object",
      "description": "CQL model",
      "properties": {
        "filter-lang": {
          "type": "string",
          "description": "Filter language",
          "x-ms-client-name": "filterLang"
        },
        "filter": {
          "$ref": "#/definitions/CqlFilter",
          "description": "Filter"
        },
        "sortby": {
          "type": "array",
          "description": "Sort by",
          "items": {
            "$ref": "#/definitions/SortBy"
          },
          "x-ms-client-name": "sortBy",
          "x-ms-identifiers": []
        }
      },
      "required": [
        "filter-lang",
        "filter"
      ]
    },
    "CqlArgument": {},
    "CqlFilter": {
      "type": "object",
      "description": "CQL Filter model",
      "properties": {
        "op": {
          "type": "string",
          "description": "Logical operator"
        },
        "args": {
          "type": "array",
          "description": "Arguments for the logical operator",
          "items": {
            "$ref": "#/definitions/CqlArgument"
          }
        }
      },
      "required": [
        "op",
        "args"
      ]
    },
    "CqlProperty": {
      "type": "object",
      "description": "Model for CQL property",
      "properties": {
        "property": {
          "type": "string",
          "description": "Property name"
        }
      },
      "required": [
        "property"
      ]
    },
    "CqlValue": {},
    "DefaultLocation": {
      "type": "object",
      "description": "Defines a default geographic location for map visualization.",
      "properties": {
        "zoom": {
          "type": "integer",
          "format": "int32",
          "description": "Default zoom level for the map."
        },
        "coordinates": {
          "type": "array",
          "description": "Default center coordinates [latitude, longitude] for the map.",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "required": [
        "zoom",
        "coordinates"
      ]
    },
    "Extent": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#extent-object\n\nRepresents the spatial and temporal extent of a STAC collection.",
      "properties": {
        "spatial": {
          "$ref": "#/definitions/SpatialExtent",
          "description": "https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#spatial-extent-object\n\nSpatial extent defined by bounding boxes."
        },
        "temporal": {
          "$ref": "#/definitions/TimeInterval",
          "description": "https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#temporal-extent-object\n\nTemporal extent defined by time intervals."
        }
      },
      "required": [
        "spatial",
        "temporal"
      ]
    },
    "FeatureCollections": {
      "type": "object",
      "description": "http://docs.opengeospatial.org/is/17-069r3/17-069r3.html#_feature_collections_rootcollections\n\nRepresents a collection of STAC collections with links.",
      "properties": {
        "links": {
          "type": "array",
          "description": "Links to related resources and endpoints.",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-identifiers": []
        },
        "collections": {
          "type": "array",
          "description": "Array of STAC collections available in the catalog.",
          "items": {
            "$ref": "#/definitions/StacCollection"
          }
        }
      },
      "required": [
        "links",
        "collections"
      ]
    },
    "FeaturePolygonDictStrRioTilerModelsInfo": {
      "type": "object",
      "description": "GeoJSON Feature object containing rio-tiler model information",
      "properties": {
        "type": {
          "$ref": "#/definitions/FeaturePolygonDictStrRioTilerModelsInfoType",
          "description": "GeoJSON type identifier"
        },
        "geometry": {
          "$ref": "#/definitions/GeoJson",
          "description": "Geometry object defining the feature's shape"
        },
        "properties": {
          "type": "object",
          "description": "Properties",
          "additionalProperties": {
            "$ref": "#/definitions/TilerInfo"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the feature"
        },
        "bbox": {
          "type": "number",
          "format": "double",
          "description": "Bounding box coordinates for the feature"
        }
      },
      "required": [
        "type",
        "geometry",
        "properties"
      ]
    },
    "FeaturePolygonDictStrRioTilerModelsInfoType": {
      "type": "string",
      "description": "Type identifying Feature Polygon objects containing rio-tiler model information",
      "enum": [
        "Feature"
      ],
      "x-ms-enum": {
        "name": "FeaturePolygonDictStrRioTilerModelsInfoType",
        "modelAsString": true,
        "values": [
          {
            "name": "Feature",
            "value": "Feature",
            "description": "Standard GeoJSON Feature type identifier"
          }
        ]
      }
    },
    "FeatureType": {
      "type": "string",
      "description": "Type identifier for GeoJSON Feature objects",
      "enum": [
        "Feature"
      ],
      "x-ms-enum": {
        "name": "FeatureType",
        "modelAsString": true,
        "values": [
          {
            "name": "Feature",
            "value": "Feature",
            "description": "Standard GeoJSON Feature type identifier"
          }
        ]
      }
    },
    "FilterLang": {
      "type": "string",
      "description": "Choices for filter-lang value in a POST request.\n\nBased on\nhttps://github.com/stac-api-extensions/filter#queryables\n\nNote the addition of cql2-json, which is used by the pgstac backend,\nbut is not included in the spec above.\n\nDefines the supported filter languages for STAC API queries.",
      "enum": [
        "cql-json",
        "cql2-json",
        "cql2-text"
      ],
      "x-ms-enum": {
        "name": "FilterLang",
        "modelAsString": true,
        "values": [
          {
            "name": "cql-json",
            "value": "cql-json",
            "description": "Common Query Language in JSON format."
          },
          {
            "name": "cql2-json",
            "value": "cql2-json",
            "description": "Common Query Language 2 in JSON format"
          },
          {
            "name": "cql2-text",
            "value": "cql2-text",
            "description": "Common Query Language 2 in text format."
          }
        ]
      }
    },
    "FormData": {
      "type": "object",
      "description": "FormData model for file upload.",
      "properties": {
        "data": {
          "type": "object",
          "description": "Asset metadata"
        },
        "file": {
          "type": "object",
          "description": "Binary file content to be uploaded."
        }
      },
      "required": [
        "data",
        "file"
      ]
    },
    "GeoJson": {},
    "GeoJsonStatisticsItemCollectionResponse": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-spec/blob/v1.0.0/item-spec/itemcollection-spec.mdCollection of STAC items with statistical information",
      "properties": {
        "type": {
          "$ref": "#/definitions/ItemCollectionType",
          "description": "GeoJSON type identifier for ItemCollection"
        },
        "features": {
          "type": "array",
          "description": "Array of STAC items with statistics",
          "items": {
            "$ref": "#/definitions/GeoJsonStatisticsItemResponse"
          }
        },
        "bbox": {
          "type": "array",
          "description": "Bounding box coordinates [west, south, east, north]",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "stac_version": {
          "type": "string",
          "description": "Stac Version",
          "default": "1.0.0",
          "minLength": 1,
          "x-ms-client-name": "stacVersion"
        },
        "msft:_created": {
          "type": "string",
          "description": "MSFT Created",
          "x-ms-client-name": "msftCreated"
        },
        "msft:_updated": {
          "type": "string",
          "description": "MSFT Updated",
          "x-ms-client-name": "msftUpdated"
        },
        "msft:short_description": {
          "type": "string",
          "description": "MSFT Short Description",
          "maxLength": 300,
          "x-ms-client-name": "msftShortDescription"
        },
        "stac_extensions": {
          "type": "array",
          "description": "List of STAC extension URLs used by this item collection",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "x-ms-client-name": "stacExtensions"
        },
        "links": {
          "type": "array",
          "description": "Related links for the item collection",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-identifiers": []
        },
        "context": {
          "$ref": "#/definitions/ContextExtension",
          "description": "https://github.com/radiantearth/stac-api-spec/tree/master/extensions/context#context-extension-specification\n\nPagination context for the response"
        }
      },
      "required": [
        "type",
        "features"
      ]
    },
    "GeoJsonStatisticsItemResponse": {
      "type": "object",
      "description": "STAC Item representing a spatiotemporal asset with statistical information",
      "properties": {
        "type": {
          "$ref": "#/definitions/FeatureType",
          "description": "GeoJSON type identifier for Feature"
        },
        "geometry": {
          "$ref": "#/definitions/GeoJson",
          "description": "Geometry object defining the feature's shape"
        },
        "bbox": {
          "type": "array",
          "description": "Bounding box coordinates for the feature",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the feature"
        },
        "msft:_created": {
          "type": "string",
          "description": "MSFT Created",
          "x-ms-client-name": "msftCreated"
        },
        "msft:_updated": {
          "type": "string",
          "description": "MSFT Updated",
          "x-ms-client-name": "msftUpdated"
        },
        "msft:short_description": {
          "type": "string",
          "description": "MSFT Short Description",
          "maxLength": 300,
          "x-ms-client-name": "msftShortDescription"
        },
        "stac_version": {
          "type": "string",
          "description": "Stac Version",
          "default": "1.0.0",
          "minLength": 1,
          "x-ms-client-name": "stacVersion"
        },
        "collection": {
          "type": "string",
          "description": "ID of the STAC collection this item belongs to"
        },
        "properties": {
          "$ref": "#/definitions/ItemProperties",
          "description": "Properties"
        },
        "_msft:ts": {
          "type": "string",
          "description": "MSFT Timestamp",
          "x-ms-client-name": "msftTimestamp"
        },
        "_msft:etag": {
          "type": "string",
          "description": "MSFT ETag",
          "x-ms-client-name": "msftEtag"
        },
        "stac_extensions": {
          "type": "array",
          "description": "List of STAC extension URLs used by this item",
          "items": {
            "type": "string",
            "format": "uri"
          },
          "x-ms-client-name": "stacExtensions"
        }
      },
      "required": [
        "type",
        "geometry",
        "bbox",
        "id",
        "properties"
      ]
    },
    "GeoJsonUpdate": {},
    "ImageJp2Response": {
      "type": "object",
      "description": "Return an image.",
      "properties": {
        "body": {
          "type": "string",
          "format": "byte",
          "description": "The image data in JP2 format."
        }
      },
      "required": [
        "body"
      ]
    },
    "ImageJpegResponse": {
      "type": "object",
      "description": "Return an image.",
      "properties": {
        "body": {
          "type": "string",
          "format": "byte",
          "description": "The image data in JPEG format."
        }
      },
      "required": [
        "body"
      ]
    },
    "ImageJpgResponse": {
      "type": "object",
      "description": "Return an image.",
      "properties": {
        "body": {
          "type": "string",
          "format": "byte",
          "description": "The image data in JPG format."
        }
      },
      "required": [
        "body"
      ]
    },
    "ImagePngResponse": {
      "type": "object",
      "description": "Return an image.",
      "properties": {
        "body": {
          "type": "string",
          "format": "byte",
          "description": "The image data in PNG format."
        }
      },
      "required": [
        "body"
      ]
    },
    "ImageRequest": {
      "type": "object",
      "description": "Parameters for requesting a rendered image from a collection",
      "properties": {
        "cql": {
          "$ref": "#/definitions/Cql",
          "description": "Cql"
        },
        "geometry": {
          "$ref": "#/definitions/GeoJson",
          "description": "Geometry"
        },
        "render_params": {
          "type": "string",
          "description": "JSON-encoded visualization parameters",
          "x-ms-client-name": "renderParams"
        },
        "cols": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the output image in pixels"
        },
        "rows": {
          "type": "integer",
          "format": "int32",
          "description": "Height of the output image in pixels"
        },
        "format": {
          "type": "string",
          "description": "Output format for the generated image",
          "default": "png",
          "enum": [
            "png",
            "cog"
          ],
          "x-ms-enum": {
            "name": "ImageRequestFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "png",
                "value": "png",
                "description": "Portable Network Graphics format"
              },
              {
                "name": "cog",
                "value": "cog",
                "description": "Cloud Optimized GeoTIFF format"
              }
            ]
          }
        },
        "showBranding": {
          "type": "boolean",
          "description": "Whether to include branding on the output image",
          "default": true
        },
        "mask": {
          "type": "boolean",
          "description": "Whether to apply masking to invalid or no-data areas"
        }
      },
      "required": [
        "cql",
        "render_params",
        "cols",
        "rows"
      ]
    },
    "ImageRequestFormat": {
      "type": "string",
      "description": "Format specification for image request outputs",
      "enum": [
        "png",
        "cog"
      ],
      "x-ms-enum": {
        "name": "ImageRequestFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "png",
            "value": "png",
            "description": "Portable Network Graphics format"
          },
          {
            "name": "cog",
            "value": "cog",
            "description": "Cloud Optimized GeoTIFF format"
          }
        ]
      }
    },
    "ImageTiffResponse": {
      "type": "object",
      "description": "Return an image.",
      "properties": {
        "body": {
          "type": "string",
          "format": "byte",
          "description": "The image data in TIFF format."
        }
      },
      "required": [
        "body"
      ]
    },
    "ImageType": {
      "type": "string",
      "description": "Image format specifier for tile and image requests",
      "enum": [
        "png",
        "npy",
        "tif",
        "jpeg",
        "jpg",
        "jp2",
        "webp",
        "pngraw"
      ],
      "x-ms-enum": {
        "name": "ImageType",
        "modelAsString": true,
        "values": [
          {
            "name": "png",
            "value": "png",
            "description": "Portable Network Graphics format - supports transparency"
          },
          {
            "name": "npy",
            "value": "npy",
            "description": "NumPy array format for raw data access"
          },
          {
            "name": "tif",
            "value": "tif",
            "description": "GeoTIFF format for georeferenced raster data"
          },
          {
            "name": "jpeg",
            "value": "jpeg",
            "description": "JPEG format - smaller file size but lossy compression"
          },
          {
            "name": "jpg",
            "value": "jpg",
            "description": "Alternate extension for JPEG format"
          },
          {
            "name": "jp2",
            "value": "jp2",
            "description": "JPEG 2000 format - supports both lossy and lossless compression"
          },
          {
            "name": "webp",
            "value": "webp",
            "description": "WebP format - modern image format with good compression"
          },
          {
            "name": "pngraw",
            "value": "pngraw",
            "description": "Raw PNG format for access to unprocessed data"
          }
        ]
      }
    },
    "ImageWebpResponse": {
      "type": "object",
      "description": "Return an image.",
      "properties": {
        "body": {
          "type": "string",
          "format": "byte",
          "description": "The image data in WebP format."
        }
      },
      "required": [
        "body"
      ]
    },
    "InfoOperationResponse": {
      "type": "object",
      "description": "Return dataset's basic info or the list of available assets.",
      "properties": {
        "data": {
          "$ref": "#/definitions/TilerInfo",
          "title": "Response Info Api Collections  Collection Id  Items  Item Id  Info Get",
          "description": "body for info operation response"
        }
      },
      "required": [
        "data"
      ]
    },
    "IngestionSources.IngestionSource": {
      "type": "object",
      "description": "Ingestion Source",
      "properties": {
        "id": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Ingestion source id"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Created time in UTC format"
        },
        "kind": {
          "$ref": "#/definitions/IngestionSources.IngestionSourceType",
          "description": "Discriminator for the ingestion source"
        }
      },
      "discriminator": "kind",
      "required": [
        "id",
        "created",
        "kind"
      ]
    },
    "IngestionSources.IngestionSourceCreate": {
      "type": "object",
      "description": "Ingestion Source",
      "properties": {
        "id": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Ingestion source id"
        },
        "kind": {
          "$ref": "#/definitions/IngestionSources.IngestionSourceType",
          "description": "Discriminator for the ingestion source"
        }
      },
      "discriminator": "kind",
      "required": [
        "id",
        "kind"
      ]
    },
    "IngestionSources.IngestionSourceSummary": {
      "type": "object",
      "description": "Ingestion source summary",
      "properties": {
        "id": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Ingestion source id"
        },
        "kind": {
          "$ref": "#/definitions/IngestionSources.IngestionSourceType",
          "description": "Ingestion source type"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Created time in UTC format"
        }
      },
      "required": [
        "id",
        "kind",
        "created"
      ]
    },
    "IngestionSources.IngestionSourceType": {
      "type": "string",
      "description": "Ingestion source type",
      "enum": [
        "SasToken",
        "BlobManagedIdentity"
      ],
      "x-ms-enum": {
        "name": "IngestionSourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "SasToken",
            "value": "SasToken",
            "description": "Azure Blob Storage SAS token"
          },
          {
            "name": "BlobManagedIdentity",
            "value": "BlobManagedIdentity",
            "description": "Azure Blob Managed Identity"
          }
        ]
      }
    },
    "IngestionSources.IngestionSourcesPagedResponse": {
      "type": "object",
      "description": "Ingestion Sources paged response",
      "properties": {
        "value": {
          "type": "array",
          "description": "Ingestion sources",
          "items": {
            "$ref": "#/definitions/IngestionSources.IngestionSourceSummary"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "Next page"
        }
      },
      "required": [
        "value"
      ]
    },
    "IngestionSources.ManagedIdentitiesPagedResponse": {
      "type": "object",
      "description": "Managed Identities paged response",
      "properties": {
        "value": {
          "type": "array",
          "description": "Managed Identities",
          "items": {
            "$ref": "#/definitions/IngestionSources.ManagedIdentityMetadata"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "Next page"
        }
      },
      "required": [
        "value"
      ]
    },
    "IngestionSources.ManagedIdentityConnection": {
      "type": "object",
      "description": "Managed Identity connection information",
      "properties": {
        "containerUrl": {
          "type": "string",
          "format": "uri",
          "description": "Azure Blob Storage container URL"
        },
        "objectId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Azure Managed Identity configured in the Geo-Catalog with access to the container"
        }
      },
      "required": [
        "containerUrl",
        "objectId"
      ]
    },
    "IngestionSources.ManagedIdentityIngestionSource": {
      "type": "object",
      "description": "Managed Identity ingestion source",
      "properties": {
        "connectionInfo": {
          "$ref": "#/definitions/IngestionSources.ManagedIdentityConnection",
          "description": "Managed identity connection information"
        }
      },
      "required": [
        "connectionInfo"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/IngestionSources.IngestionSource"
        }
      ],
      "x-ms-discriminator-value": "BlobManagedIdentity"
    },
    "IngestionSources.ManagedIdentityIngestionSourceCreate": {
      "type": "object",
      "description": "Managed Identity ingestion source",
      "properties": {
        "connectionInfo": {
          "$ref": "#/definitions/IngestionSources.ManagedIdentityConnection",
          "description": "Managed identity connection information"
        }
      },
      "required": [
        "connectionInfo"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/IngestionSources.IngestionSourceCreate"
        }
      ],
      "x-ms-discriminator-value": "BlobManagedIdentity"
    },
    "IngestionSources.ManagedIdentityMetadata": {
      "type": "object",
      "description": "Managed Identity metadata",
      "properties": {
        "objectId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Object id of the managed identity"
        },
        "resourceId": {
          "type": "string",
          "description": "ARM path or resource id of the managed identity"
        }
      },
      "required": [
        "objectId",
        "resourceId"
      ]
    },
    "IngestionSources.SasTokenConnection": {
      "type": "object",
      "description": "SAS Token connection information",
      "properties": {
        "containerUrl": {
          "type": "string",
          "format": "uri",
          "description": "Azure Blob Storage container URL"
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "description": "Azure Blob Storage SAS token expiration in UTC format"
        }
      },
      "required": [
        "containerUrl",
        "expiration"
      ]
    },
    "IngestionSources.SasTokenConnectionCreate": {
      "type": "object",
      "description": "SAS Token connection information",
      "properties": {
        "containerUrl": {
          "type": "string",
          "format": "uri",
          "description": "Azure Blob Storage container URL"
        },
        "sasToken": {
          "type": "string",
          "description": "SAS token"
        }
      },
      "required": [
        "containerUrl",
        "sasToken"
      ]
    },
    "IngestionSources.SasTokenIngestionSource": {
      "type": "object",
      "description": "SAS Token ingestion source",
      "properties": {
        "connectionInfo": {
          "$ref": "#/definitions/IngestionSources.SasTokenConnection",
          "description": "SAS token connection information"
        }
      },
      "required": [
        "connectionInfo"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/IngestionSources.IngestionSource"
        }
      ],
      "x-ms-discriminator-value": "SasToken"
    },
    "IngestionSources.SasTokenIngestionSourceCreate": {
      "type": "object",
      "description": "SAS Token ingestion source",
      "properties": {
        "connectionInfo": {
          "$ref": "#/definitions/IngestionSources.SasTokenConnectionCreate",
          "description": "SAS token connection information"
        }
      },
      "required": [
        "connectionInfo"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/IngestionSources.IngestionSourceCreate"
        }
      ],
      "x-ms-discriminator-value": "SasToken"
    },
    "Ingestions.IngestionDefinition": {
      "type": "object",
      "description": "Spatio geo-catalog ingestion definition",
      "properties": {
        "importType": {
          "$ref": "#/definitions/Ingestions.IngestionType",
          "description": "Ingestion type"
        },
        "displayName": {
          "type": "string",
          "description": "Ingestion name"
        },
        "sourceCatalogUrl": {
          "type": "string",
          "format": "uri",
          "description": "Source catalog URL. *Required for StaticCatalog ingestion type"
        },
        "skipExistingItems": {
          "type": "boolean",
          "description": "Skip processing existing items in the catalog"
        },
        "keepOriginalAssets": {
          "type": "boolean",
          "description": "Keep original source assets"
        },
        "id": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Ingestion id"
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Ingestion creation time"
        },
        "status": {
          "$ref": "#/definitions/Ingestions.IngestionStatus",
          "description": "Ingestion status"
        }
      },
      "required": [
        "importType",
        "id",
        "creationTime",
        "status"
      ]
    },
    "Ingestions.IngestionDefinitionCreation": {
      "type": "object",
      "description": "Spatio geo-catalog ingestion creation model",
      "properties": {
        "importType": {
          "$ref": "#/definitions/Ingestions.IngestionType",
          "description": "Ingestion type"
        },
        "displayName": {
          "type": "string",
          "description": "Ingestion name"
        },
        "sourceCatalogUrl": {
          "type": "string",
          "format": "uri",
          "description": "Source catalog URL. *Required for StaticCatalog ingestion type"
        },
        "skipExistingItems": {
          "type": "boolean",
          "description": "Skip processing existing items in the catalog"
        },
        "keepOriginalAssets": {
          "type": "boolean",
          "description": "Keep original source assets"
        }
      },
      "required": [
        "importType"
      ]
    },
    "Ingestions.IngestionDefinitionsPagedResponse": {
      "type": "object",
      "description": "Ingestions Definitions paged response",
      "properties": {
        "value": {
          "type": "array",
          "description": "Ingestion Definitions",
          "items": {
            "$ref": "#/definitions/Ingestions.IngestionDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "Next page"
        }
      },
      "required": [
        "value"
      ]
    },
    "Ingestions.IngestionRuns.IngestionRun": {
      "type": "object",
      "description": "Spatio geo-catalog ingestion run",
      "properties": {
        "id": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Run id"
        },
        "parentRunId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Run id which this run is associated to becase has been retried or rerun"
        },
        "operation": {
          "$ref": "#/definitions/Ingestions.IngestionRuns.IngestionRunOperation",
          "description": "Operation"
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation time"
        },
        "sourceCatalogUrl": {
          "type": "string",
          "format": "uri",
          "description": "URL of the source catalog"
        },
        "skipExistingItems": {
          "type": "boolean",
          "description": "Skip any item that already exist in the GeoCatalog"
        },
        "keepOriginalAssets": {
          "type": "boolean",
          "description": "Keep original source assets"
        }
      },
      "required": [
        "id",
        "operation",
        "creationTime"
      ]
    },
    "Ingestions.IngestionRuns.IngestionRunOperation": {
      "type": "object",
      "description": "Spatio geo-catalog ingestion run operation",
      "properties": {
        "id": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Operation id"
        },
        "status": {
          "$ref": "#/definitions/OperationStatus",
          "description": "Operation status"
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time at which the operation was created"
        },
        "statusHistory": {
          "type": "array",
          "description": "The history of the operation status in time",
          "items": {
            "$ref": "#/definitions/OperationStatusHistoryItem"
          },
          "x-ms-identifiers": []
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time at which the operation was started"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time at which the operation finished its execution"
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "The number of total items to be processed"
        },
        "totalPendingItems": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items pending to be processed"
        },
        "totalSuccessfulItems": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items successfully processed"
        },
        "totalFailedItems": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items that have failed to be processed"
        }
      },
      "required": [
        "id",
        "status",
        "creationTime",
        "statusHistory",
        "totalItems",
        "totalPendingItems",
        "totalSuccessfulItems",
        "totalFailedItems"
      ]
    },
    "Ingestions.IngestionRuns.IngestionRunsPagedResponse": {
      "type": "object",
      "description": "Ingestion Runs paged response",
      "properties": {
        "value": {
          "type": "array",
          "description": "Ingestion Runs",
          "items": {
            "$ref": "#/definitions/Ingestions.IngestionRuns.IngestionRun"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "Next page"
        }
      },
      "required": [
        "value"
      ]
    },
    "Ingestions.IngestionStatus": {
      "type": "string",
      "description": "Ingestion status",
      "enum": [
        "Ready",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "IngestionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Ready",
            "value": "Ready",
            "description": "Ingestion accepted and ready to be run"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Ingestion is being deleting in the background"
          }
        ]
      }
    },
    "Ingestions.IngestionType": {
      "type": "string",
      "description": "Ingestion type",
      "enum": [
        "StaticCatalog"
      ],
      "x-ms-enum": {
        "name": "IngestionType",
        "modelAsString": true,
        "values": [
          {
            "name": "StaticCatalog",
            "value": "StaticCatalog",
            "description": "Static STAC Catalog"
          }
        ]
      }
    },
    "Ingestions.PatchRequest": {
      "type": "object",
      "description": "Patch request model",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Ingestion name"
        },
        "sourceCatalogUrl": {
          "type": "string",
          "format": "uri",
          "description": "Source catalog URL"
        },
        "skipExistingItems": {
          "type": "boolean",
          "description": "Skip processing existing items in the catalog"
        },
        "keepOriginalAssets": {
          "type": "boolean",
          "description": "Keep original source assets"
        }
      }
    },
    "IntervalLegendsElement": {},
    "ItemCollection": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-spec/blob/v1.0.0/item-spec/itemcollection-spec.md\n\nRepresents a collection of STAC Items as a GeoJSON FeatureCollection.",
      "properties": {
        "msft:_created": {
          "type": "string",
          "description": "MSFT Created",
          "x-ms-client-name": "msftCreated"
        },
        "msft:_updated": {
          "type": "string",
          "description": "MSFT Updated",
          "x-ms-client-name": "msftUpdated"
        },
        "msft:short_description": {
          "type": "string",
          "description": "MSFT Short Description",
          "maxLength": 300,
          "x-ms-client-name": "msftShortDescription"
        },
        "stac_extensions": {
          "type": "array",
          "description": "URLs to STAC extensions implemented by this STAC resource.",
          "items": {
            "type": "string"
          },
          "x-ms-client-name": "stacExtensions"
        },
        "type": {
          "$ref": "#/definitions/ItemCollectionType",
          "description": "GeoJSON FeatureCollection type."
        },
        "features": {
          "type": "array",
          "description": "Array of STAC Items in the collection.",
          "items": {
            "$ref": "#/definitions/StacItem"
          }
        },
        "bbox": {
          "type": "array",
          "description": "Bounding box of all items in format [west, south, east, north].",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "stac_version": {
          "type": "string",
          "description": "Stac Version",
          "default": "1.0.0",
          "minLength": 1,
          "x-ms-client-name": "stacVersion"
        },
        "links": {
          "type": "array",
          "description": "Links to related resources and endpoints.",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-identifiers": []
        },
        "context": {
          "$ref": "#/definitions/ContextExtension",
          "description": "Context information for the search response."
        }
      },
      "required": [
        "type",
        "features"
      ]
    },
    "ItemCollectionType": {
      "type": "string",
      "description": "Represents the GeoJSON feature collection type for STAC item collections.",
      "enum": [
        "FeatureCollection"
      ],
      "x-ms-enum": {
        "name": "ItemCollectionType",
        "modelAsString": true,
        "values": [
          {
            "name": "FeatureCollection",
            "value": "FeatureCollection",
            "description": "Standard GeoJSON FeatureCollection type."
          }
        ]
      }
    },
    "ItemProperties": {
      "type": "object",
      "description": "Properties of a STAC Item containing metadata about the asset.\n\nhttps://github.com/radiantearth/stac-spec/blob/v1.0.0/item-spec/item-spec.md#properties-object",
      "properties": {
        "platform": {
          "type": "string",
          "description": "Platform that acquired the data."
        },
        "instruments": {
          "type": "array",
          "description": "Instruments that acquired the data.",
          "items": {
            "type": "string"
          }
        },
        "constellation": {
          "type": "string",
          "description": "Constellation of satellites that acquired the data."
        },
        "mission": {
          "type": "string",
          "description": "Mission associated with the data."
        },
        "providers": {
          "type": "array",
          "description": "Organizations or individuals who provide the data.",
          "items": {
            "$ref": "#/definitions/Provider"
          },
          "x-ms-identifiers": []
        },
        "gsd": {
          "type": "number",
          "format": "float",
          "description": "Ground sample distance in meters."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the data."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp of the data."
        },
        "title": {
          "type": "string",
          "description": "Human-readable title for the item."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the item."
        },
        "datetime": {
          "type": "string",
          "description": "Datetime the asset represents in RFC 3339 format."
        },
        "start_datetime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the item observation period.",
          "x-ms-client-name": "startDatetime"
        },
        "end_datetime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the item observation period.",
          "x-ms-client-name": "endDatetime"
        }
      },
      "required": [
        "datetime"
      ],
      "additionalProperties": {}
    },
    "ItemPropertiesUpdate": {
      "type": "object",
      "description": "Properties of a STAC Item containing metadata about the asset.\n\nhttps://github.com/radiantearth/stac-spec/blob/v1.0.0/item-spec/item-spec.md#properties-object",
      "properties": {
        "platform": {
          "type": "string",
          "description": "Platform that acquired the data."
        },
        "instruments": {
          "type": "array",
          "description": "Instruments that acquired the data.",
          "items": {
            "type": "string"
          }
        },
        "constellation": {
          "type": "string",
          "description": "Constellation of satellites that acquired the data."
        },
        "mission": {
          "type": "string",
          "description": "Mission associated with the data."
        },
        "providers": {
          "type": "array",
          "description": "Organizations or individuals who provide the data.",
          "items": {
            "$ref": "#/definitions/Provider"
          },
          "x-ms-identifiers": []
        },
        "gsd": {
          "type": "number",
          "format": "float",
          "description": "Ground sample distance in meters."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the data."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp of the data."
        },
        "title": {
          "type": "string",
          "description": "Human-readable title for the item."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the item."
        },
        "datetime": {
          "type": "string",
          "description": "Datetime the asset represents in RFC 3339 format."
        },
        "start_datetime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the item observation period.",
          "x-ms-client-name": "startDatetime"
        },
        "end_datetime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the item observation period.",
          "x-ms-client-name": "endDatetime"
        }
      },
      "additionalProperties": {}
    },
    "LandingPage": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-api-spec/blob/master/api-spec.md#ogc-api---features-endpoints\n\nRepresents the STAC API landing page with links to available resources.",
      "properties": {
        "msft:_created": {
          "type": "string",
          "description": "MSFT Created",
          "x-ms-client-name": "msftCreated"
        },
        "msft:_updated": {
          "type": "string",
          "description": "MSFT Updated",
          "x-ms-client-name": "msftUpdated"
        },
        "msft:short_description": {
          "type": "string",
          "description": "MSFT Short Description",
          "maxLength": 300,
          "x-ms-client-name": "msftShortDescription"
        },
        "stac_extensions": {
          "type": "array",
          "description": "URLs to STAC extensions implemented by this STAC resource.",
          "items": {
            "type": "string"
          },
          "x-ms-client-name": "stacExtensions"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the STAC catalog.",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the STAC catalog.",
          "minLength": 1
        },
        "title": {
          "type": "string",
          "description": "Human-readable title for the STAC catalog."
        },
        "stac_version": {
          "type": "string",
          "description": "Stac Version",
          "default": "1.0.0",
          "x-ms-client-name": "stacVersion"
        },
        "conformsTo": {
          "type": "array",
          "description": "List of OGC API conformance classes implemented by this API.",
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "links": {
          "type": "array",
          "description": "Links to related resources and endpoints.",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-identifiers": []
        },
        "type": {
          "type": "string",
          "description": "Type",
          "default": "Catalog",
          "minLength": 1
        }
      },
      "required": [
        "id",
        "description",
        "conformsTo",
        "links"
      ]
    },
    "LegendConfigType": {
      "type": "string",
      "description": "Legend type to make,\n one of: `continuous`,\n `classmap`,\n `interval` or `none`\n(note, `none` is a string literal).Defines the legend configuration types for data visualization.",
      "enum": [
        "continuous",
        "classmap",
        "interval",
        "none"
      ],
      "x-ms-enum": {
        "name": "LegendConfigType",
        "modelAsString": true,
        "values": [
          {
            "name": "continuous",
            "value": "continuous",
            "description": "Continuous color ramp legend."
          },
          {
            "name": "classmap",
            "value": "classmap",
            "description": "Classified map with discrete colors for classes."
          },
          {
            "name": "interval",
            "value": "interval",
            "description": "Interval-based legend with discrete ranges."
          },
          {
            "name": "none",
            "value": "none",
            "description": "No legend."
          }
        ]
      }
    },
    "Link": {
      "type": "object",
      "description": "Link model.\n\nRef:\nhttp://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/schemas/link.yaml\n\nRepresents a link.",
      "properties": {
        "rel": {
          "type": "string",
          "description": "The relationship type of the link."
        },
        "title": {
          "type": "string",
          "description": "The title of the link."
        },
        "type": {
          "type": "string",
          "description": "The MIME type of the linked resource.",
          "default": "application/json",
          "enum": [
            "image/tiff; application=geotiff",
            "image/jp2",
            "image/png",
            "image/jpeg",
            "image/jpg",
            "image/webp",
            "application/x-binary",
            "application/xml",
            "application/json",
            "application/geo+json",
            "text/html",
            "text/plain",
            "application/x-protobuf"
          ],
          "x-ms-enum": {
            "name": "LinkType",
            "modelAsString": true,
            "values": [
              {
                "name": "image/tiff; application=geotiff",
                "value": "image/tiff; application=geotiff",
                "description": "Represents an image/tiff with application=geotiff."
              },
              {
                "name": "image/jp2",
                "value": "image/jp2",
                "description": "Represents an image/jp2."
              },
              {
                "name": "image/png",
                "value": "image/png",
                "description": "Represents an image/png."
              },
              {
                "name": "image/jpeg",
                "value": "image/jpeg",
                "description": "Represents an image/jpeg."
              },
              {
                "name": "image/jpg",
                "value": "image/jpg",
                "description": "Represents an image/jpg."
              },
              {
                "name": "image/webp",
                "value": "image/webp",
                "description": "Represents an image/webp."
              },
              {
                "name": "application/x-binary",
                "value": "application/x-binary",
                "description": "Represents an application/x-binary."
              },
              {
                "name": "application/xml",
                "value": "application/xml",
                "description": "Represents an application/xml."
              },
              {
                "name": "application/json",
                "value": "application/json",
                "description": "Represents an application/json."
              },
              {
                "name": "application/geo+json",
                "value": "application/geo+json",
                "description": "Represents an application/geo+json."
              },
              {
                "name": "text/html",
                "value": "text/html",
                "description": "Represents a text/html."
              },
              {
                "name": "text/plain",
                "value": "text/plain",
                "description": "Represents a text/plain."
              },
              {
                "name": "application/x-protobuf",
                "value": "application/x-protobuf",
                "description": "Represents an application/x-protobuf."
              }
            ]
          }
        },
        "href": {
          "type": "string",
          "description": "The URL of the link."
        },
        "hreflang": {
          "type": "string",
          "description": "The language of the linked resource."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the linked resource."
        },
        "method": {
          "type": "string",
          "description": "Specifies the HTTP method that the resource expects.\nDefault: GET.",
          "default": "GET",
          "enum": [
            "GET",
            "POST"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        },
        "headers": {
          "type": "object",
          "description": "Object key-value pairs that map to headers.\nExample: { \"Accept\": \"application/json\" }.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "body": {
          "type": "object",
          "description": "For POST requests, the resource can specify the HTTP body as a JSON object.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "merge": {
          "type": "boolean",
          "description": "Indicates whether the client is expected to merge the body value into the current request body before following the link.\nThis is only valid when the server is responding to a POST request.\nDefault: false.",
          "default": false
        }
      },
      "required": [
        "href"
      ]
    },
    "LinkType": {
      "type": "string",
      "description": "MIME types for links.",
      "enum": [
        "image/tiff; application=geotiff",
        "image/jp2",
        "image/png",
        "image/jpeg",
        "image/jpg",
        "image/webp",
        "application/x-binary",
        "application/xml",
        "application/json",
        "application/geo+json",
        "text/html",
        "text/plain",
        "application/x-protobuf"
      ],
      "x-ms-enum": {
        "name": "LinkType",
        "modelAsString": true,
        "values": [
          {
            "name": "image/tiff; application=geotiff",
            "value": "image/tiff; application=geotiff",
            "description": "Represents an image/tiff with application=geotiff."
          },
          {
            "name": "image/jp2",
            "value": "image/jp2",
            "description": "Represents an image/jp2."
          },
          {
            "name": "image/png",
            "value": "image/png",
            "description": "Represents an image/png."
          },
          {
            "name": "image/jpeg",
            "value": "image/jpeg",
            "description": "Represents an image/jpeg."
          },
          {
            "name": "image/jpg",
            "value": "image/jpg",
            "description": "Represents an image/jpg."
          },
          {
            "name": "image/webp",
            "value": "image/webp",
            "description": "Represents an image/webp."
          },
          {
            "name": "application/x-binary",
            "value": "application/x-binary",
            "description": "Represents an application/x-binary."
          },
          {
            "name": "application/xml",
            "value": "application/xml",
            "description": "Represents an application/xml."
          },
          {
            "name": "application/json",
            "value": "application/json",
            "description": "Represents an application/json."
          },
          {
            "name": "application/geo+json",
            "value": "application/geo+json",
            "description": "Represents an application/geo+json."
          },
          {
            "name": "text/html",
            "value": "text/html",
            "description": "Represents a text/html."
          },
          {
            "name": "text/plain",
            "value": "text/plain",
            "description": "Represents a text/plain."
          },
          {
            "name": "application/x-protobuf",
            "value": "application/x-protobuf",
            "description": "Represents an application/x-protobuf."
          }
        ]
      }
    },
    "Metadata": {
      "type": "object",
      "description": "Metadata information for mosaic or search results",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of metadata resource",
          "default": "mosaic",
          "enum": [
            "mosaic",
            "search"
          ],
          "x-ms-enum": {
            "name": "MetadataType",
            "modelAsString": true,
            "values": [
              {
                "name": "mosaic",
                "value": "mosaic",
                "description": "Metadata for a mosaic of multiple raster assets"
              },
              {
                "name": "search",
                "value": "search",
                "description": "Metadata for a search query result"
              }
            ]
          }
        },
        "bounds": {
          "type": "string",
          "description": "Geographic bounding box in [west, south, east, north] format"
        },
        "minzoom": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum zoom level supported"
        },
        "maxzoom": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum zoom level supported"
        },
        "name": {
          "type": "string",
          "description": "Human-readable name for the resource"
        },
        "assets": {
          "type": "array",
          "description": "List of asset identifiers included in the resource",
          "items": {
            "type": "string"
          }
        },
        "defaults": {
          "type": "object",
          "description": "Defaults",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "MetadataType": {
      "type": "string",
      "description": "Type of metadata resource in the system",
      "enum": [
        "mosaic",
        "search"
      ],
      "x-ms-enum": {
        "name": "MetadataType",
        "modelAsString": true,
        "values": [
          {
            "name": "mosaic",
            "value": "mosaic",
            "description": "Metadata for a mosaic of multiple raster assets"
          },
          {
            "name": "search",
            "value": "search",
            "description": "Metadata for a search query result"
          }
        ]
      }
    },
    "MicrosoftStacProperties": {
      "type": "object",
      "description": "Microsoft STAC Properties",
      "properties": {
        "msft:_created": {
          "type": "string",
          "description": "MSFT Created",
          "x-ms-client-name": "msftCreated"
        },
        "msft:_updated": {
          "type": "string",
          "description": "MSFT Updated",
          "x-ms-client-name": "msftUpdated"
        },
        "msft:short_description": {
          "type": "string",
          "description": "MSFT Short Description",
          "maxLength": 300,
          "x-ms-client-name": "msftShortDescription"
        }
      }
    },
    "Mosaic": {
      "type": "object",
      "description": "Defines a named mosaic with filtering criteria.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the mosaic.",
          "minLength": 1,
          "maxLength": 30,
          "pattern": "^(?!\\-|_)[a-zA-Z0-9_-]*(?<!\\-|_)$"
        },
        "name": {
          "type": "string",
          "description": "Short descriptive name for the mosaic.",
          "maxLength": 30
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the mosaic."
        },
        "cql": {
          "type": "array",
          "description": "A list of valid CQL2-JSON expressions used to filter the collection to moasic.",
          "items": {
            "$ref": "#/definitions/Cql"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "name",
        "cql"
      ]
    },
    "MosaicInfo": {
      "type": "object",
      "description": "Configuration for data mosaic visualization.",
      "properties": {
        "mosaics": {
          "type": "array",
          "description": "Predefined data mosaics available for this collection.",
          "items": {
            "$ref": "#/definitions/Mosaic"
          }
        },
        "renderOptions": {
          "type": "array",
          "description": "Available render options for visualizing the data.",
          "items": {
            "$ref": "#/definitions/RenderOption"
          }
        },
        "defaultLocation": {
          "$ref": "#/definitions/DefaultLocation",
          "description": "Default map location when displaying this collection."
        },
        "defaultCustomQuery": {
          "type": "object",
          "description": "A list of CQL-JSON expressions to use as the default for  this collection.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "mosaics",
        "renderOptions"
      ]
    },
    "NoDataType": {
      "type": "string",
      "description": "NoDataType",
      "enum": [
        "Alpha",
        "Mask",
        "Internal",
        "Nodata",
        "None"
      ],
      "x-ms-enum": {
        "name": "NoDataType",
        "modelAsString": true,
        "values": [
          {
            "name": "Alpha",
            "value": "Alpha",
            "description": "Nodata represented by alpha channel"
          },
          {
            "name": "Mask",
            "value": "Mask",
            "description": "Nodata represented by a mask"
          },
          {
            "name": "Internal",
            "value": "Internal",
            "description": "Nodata represented internally in the dataset"
          },
          {
            "name": "Nodata",
            "value": "Nodata",
            "description": "Explicit nodata value defined in the dataset"
          },
          {
            "name": "None",
            "value": "None",
            "description": "No nodata value defined"
          }
        ]
      }
    },
    "Operation": {
      "type": "object",
      "description": "Spatio geo-catalog operation",
      "properties": {
        "id": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Operation id"
        },
        "status": {
          "$ref": "#/definitions/OperationStatus",
          "description": "Operation status"
        },
        "type": {
          "type": "string",
          "description": "Operation type"
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time at which the operation was created"
        },
        "collectionId": {
          "type": "string",
          "description": "Collection ID"
        },
        "statusHistory": {
          "type": "array",
          "description": "The history of the operation status in time",
          "items": {
            "$ref": "#/definitions/OperationStatusHistoryItem"
          },
          "x-ms-identifiers": []
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time at which the operation was started"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time at which the operation finished its execution"
        },
        "additionalInformation": {
          "type": "object",
          "description": "Additional information elements about the particular operation type",
          "additionalProperties": {
            "type": "string"
          }
        },
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "Error information"
        }
      },
      "required": [
        "id",
        "status",
        "type",
        "creationTime",
        "statusHistory"
      ]
    },
    "OperationStatus": {
      "type": "string",
      "description": "Operation status",
      "enum": [
        "Pending",
        "Running",
        "Succeeded",
        "Canceled",
        "Canceling",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "OperationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "Operation accepted and ready to be run"
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "Operation is running"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Operation has already finished its execution"
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Operation canceled by the user"
          },
          {
            "name": "Canceling",
            "value": "Canceling",
            "description": "Operation is being canceling"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Operation failed"
          }
        ]
      }
    },
    "OperationStatusHistoryItem": {
      "type": "object",
      "description": "Operation status history item",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time at which the status was set"
        },
        "status": {
          "$ref": "#/definitions/OperationStatus",
          "description": "The status of the operation"
        },
        "errorCode": {
          "type": "string",
          "description": "If the status is failed, the error code"
        },
        "errorMessage": {
          "type": "string",
          "description": "If the status is failed, the error message"
        }
      },
      "required": [
        "timestamp",
        "status"
      ]
    },
    "OperationsPagedResponse": {
      "type": "object",
      "description": "Operations paged response",
      "properties": {
        "value": {
          "type": "array",
          "description": "Operations",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "Next page"
        }
      },
      "required": [
        "value"
      ]
    },
    "PartitionType": {
      "type": "object",
      "description": "Defines how data is partitioned for efficient storage and retrieval.",
      "properties": {
        "scheme": {
          "type": "string",
          "description": "Partitioning scheme to use for data organization.",
          "default": "none",
          "enum": [
            "year",
            "month",
            "none"
          ],
          "x-ms-enum": {
            "name": "PartitionTypeScheme",
            "modelAsString": true,
            "values": [
              {
                "name": "year",
                "value": "year",
                "description": "Partition data by year."
              },
              {
                "name": "month",
                "value": "month",
                "description": "Partition data by month."
              },
              {
                "name": "none",
                "value": "none",
                "description": "No partitioning."
              }
            ]
          }
        }
      }
    },
    "PartitionTypeScheme": {
      "type": "string",
      "description": "Defines partitioning schemes for temporal data organization.",
      "enum": [
        "year",
        "month",
        "none"
      ],
      "x-ms-enum": {
        "name": "PartitionTypeScheme",
        "modelAsString": true,
        "values": [
          {
            "name": "year",
            "value": "year",
            "description": "Partition data by year."
          },
          {
            "name": "month",
            "value": "month",
            "description": "Partition data by month."
          },
          {
            "name": "none",
            "value": "none",
            "description": "No partitioning."
          }
        ]
      }
    },
    "PgStacSearch": {
      "type": "object",
      "description": "PgSTAC Search entry.\n\nref:\nhttps://github.com/stac-utils/pgstac/blob/3499daa2bfa700ae7bb07503795c169bf2ebafc7/sql/004_search.sql#L907-L915Stored search query in the PgSTAC database",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Unique hash identifier for the search query"
        },
        "search": {
          "$ref": "#/definitions/Cql",
          "description": "Search"
        },
        "_where": {
          "type": "string",
          "description": "SQL WHERE clause representing the search filters",
          "x-ms-client-name": "where"
        },
        "orderby": {
          "type": "string",
          "description": "SQL ORDER BY clause for sorting results"
        },
        "lastused": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the search was last accessed"
        },
        "usecount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of times the search has been accessed"
        },
        "metadata": {
          "$ref": "#/definitions/Metadata",
          "description": "Additional metadata associated with the search"
        }
      },
      "required": [
        "hash",
        "search",
        "_where",
        "orderby",
        "lastused",
        "usecount",
        "metadata"
      ]
    },
    "PixelSelection": {
      "type": "string",
      "description": "Identifier selecting one of the TileMatrixSetId supported (default:\n'WebMercatorQuad')Identifier selecting one of the TileMatrixSetId supported (default:\n'WebMercatorQuad')Method used to select or compute pixels when creating composites from multiple sources",
      "enum": [
        "first",
        "highest",
        "lowest",
        "mean",
        "median",
        "stdev",
        "lastbandlow",
        "lastbandhight"
      ],
      "x-ms-enum": {
        "name": "PixelSelection",
        "modelAsString": true,
        "values": [
          {
            "name": "first",
            "value": "first",
            "description": "Select pixel from the first available image"
          },
          {
            "name": "highest",
            "value": "highest",
            "description": "Select pixel with the highest value"
          },
          {
            "name": "lowest",
            "value": "lowest",
            "description": "Select pixel with the lowest value"
          },
          {
            "name": "mean",
            "value": "mean",
            "description": "Calculate mean of available pixels"
          },
          {
            "name": "median",
            "value": "median",
            "description": "Calculate median of available pixels"
          },
          {
            "name": "stdev",
            "value": "stdev",
            "description": "Calculate standard deviation of available pixels"
          },
          {
            "name": "lastbandlow",
            "value": "lastbandlow",
            "description": "Select image with lowest value in the last band"
          },
          {
            "name": "lastbandhight",
            "value": "lastbandhight",
            "description": "Select image with highest value in the last band"
          }
        ]
      }
    },
    "Provider": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#provider-object\n\nRepresents information about a data provider for STAC collections and items.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the provider organization or individual.",
          "minLength": 1
        },
        "description": {
          "type": "string",
          "description": "Description of the provider."
        },
        "roles": {
          "type": "array",
          "description": "Roles played by the provider (e.g., producer, processor, host).",
          "items": {
            "type": "string"
          }
        },
        "url": {
          "type": "string",
          "description": "URL to the provider's website."
        }
      },
      "required": [
        "name"
      ]
    },
    "QueryableDefinition": {
      "type": "object",
      "description": "Definition of a queryable field for STAC API filtering.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the queryable field.",
          "minLength": 1
        },
        "definition": {
          "$ref": "#/definitions/QueryableDefinitionType",
          "description": "Metadata for the queryable field."
        },
        "create_index": {
          "type": "boolean",
          "description": "Whether to create a database index for this field.",
          "x-ms-client-name": "createIndex"
        },
        "data_type": {
          "type": "string",
          "description": "Data type of the queryable field.",
          "default": "string",
          "enum": [
            "string",
            "number",
            "boolean",
            "timestamp",
            "date"
          ],
          "x-ms-enum": {
            "name": "QueryableDefinitionDataType",
            "modelAsString": true,
            "values": [
              {
                "name": "string",
                "value": "string",
                "description": "Character strings.\nExample: 'This is a literal string.'"
              },
              {
                "name": "number",
                "value": "number",
                "description": "Numbers including integers and floating point values.\nExamples: -100, 3.14159"
              },
              {
                "name": "boolean",
                "value": "boolean",
                "description": "Booleans.\nExamples: true, false"
              },
              {
                "name": "timestamp",
                "value": "timestamp",
                "description": "An instant with a granularity of a second or smaller.\nExample (JSON): { \"timestamp\": \"1969-07-20T20:17:40Z\" }"
              },
              {
                "name": "date",
                "value": "date",
                "description": "An instant with a granularity of a day.\nExample (JSON): { \"date\": \"1969-07-20\" }"
              }
            ]
          },
          "x-ms-client-name": "dataType"
        }
      },
      "required": [
        "name",
        "definition"
      ]
    },
    "QueryableDefinitionDataType": {
      "type": "string",
      "description": "Queryable data types for the queryables extension.\nThese are the data types supported by Basic CQL2.",
      "enum": [
        "string",
        "number",
        "boolean",
        "timestamp",
        "date"
      ],
      "x-ms-enum": {
        "name": "QueryableDefinitionDataType",
        "modelAsString": true,
        "values": [
          {
            "name": "string",
            "value": "string",
            "description": "Character strings.\nExample: 'This is a literal string.'"
          },
          {
            "name": "number",
            "value": "number",
            "description": "Numbers including integers and floating point values.\nExamples: -100, 3.14159"
          },
          {
            "name": "boolean",
            "value": "boolean",
            "description": "Booleans.\nExamples: true, false"
          },
          {
            "name": "timestamp",
            "value": "timestamp",
            "description": "An instant with a granularity of a second or smaller.\nExample (JSON): { \"timestamp\": \"1969-07-20T20:17:40Z\" }"
          },
          {
            "name": "date",
            "value": "date",
            "description": "An instant with a granularity of a day.\nExample (JSON): { \"date\": \"1969-07-20\" }"
          }
        ]
      }
    },
    "QueryableDefinitionType": {
      "type": "object",
      "description": "QueryableDefinitionType",
      "properties": {
        "create_index": {
          "type": "boolean",
          "description": "Whether to create a database index for this property.",
          "x-ms-client-name": "createIndex"
        },
        "data_type": {
          "type": "string",
          "description": "Data type of the queryable property.",
          "default": "string",
          "enum": [
            "string",
            "number",
            "boolean",
            "timestamp",
            "date"
          ],
          "x-ms-enum": {
            "name": "QueryableDefinitionDataType",
            "modelAsString": true,
            "values": [
              {
                "name": "string",
                "value": "string",
                "description": "Character strings.\nExample: 'This is a literal string.'"
              },
              {
                "name": "number",
                "value": "number",
                "description": "Numbers including integers and floating point values.\nExamples: -100, 3.14159"
              },
              {
                "name": "boolean",
                "value": "boolean",
                "description": "Booleans.\nExamples: true, false"
              },
              {
                "name": "timestamp",
                "value": "timestamp",
                "description": "An instant with a granularity of a second or smaller.\nExample (JSON): { \"timestamp\": \"1969-07-20T20:17:40Z\" }"
              },
              {
                "name": "date",
                "value": "date",
                "description": "An instant with a granularity of a day.\nExample (JSON): { \"date\": \"1969-07-20\" }"
              }
            ]
          },
          "x-ms-client-name": "dataType"
        },
        "description": {
          "type": "string",
          "description": "Description"
        }
      }
    },
    "RegisterMosaic": {
      "type": "object",
      "description": "Input parameters for registering a new mosaic of STAC items",
      "properties": {
        "collections": {
          "type": "array",
          "description": "List of STAC collection IDs to include in the mosaic",
          "items": {
            "type": "string"
          }
        },
        "ids": {
          "type": "array",
          "description": "List of specific STAC item IDs to include in the mosaic",
          "items": {
            "type": "string"
          }
        },
        "bbox": {
          "type": "number",
          "format": "double",
          "description": "Geographic bounding box to filter items [west, south, east, north]"
        },
        "intersects": {
          "$ref": "#/definitions/GeoJson",
          "description": "GeoJSON geometry to spatially filter items by intersection"
        },
        "query": {
          "type": "object",
          "description": "Query",
          "additionalProperties": {
            "$ref": "#/definitions/StringRecord"
          }
        },
        "filter": {
          "$ref": "#/definitions/CqlFilter",
          "description": "Filter"
        },
        "datetime": {
          "type": "string",
          "description": "Temporal filter in RFC 3339 format or interval"
        },
        "sortby": {
          "type": "array",
          "description": "Criteria for ordering items in the mosaic",
          "items": {
            "$ref": "#/definitions/SortExtension"
          },
          "x-ms-identifiers": []
        },
        "filter-lang": {
          "$ref": "#/definitions/FilterLang",
          "description": "Query language format used in the filter parameter",
          "x-ms-client-name": "filterLang"
        },
        "metadata": {
          "$ref": "#/definitions/Metadata",
          "description": "Additional metadata to associate with the mosaic"
        }
      }
    },
    "RegisterResponse": {
      "type": "object",
      "description": "Response from a successful mosaic registration with search ID and related links",
      "properties": {
        "searchId": {
          "type": "string",
          "description": "Unique identifier for the registered search"
        },
        "links": {
          "type": "array",
          "description": "Related links for the registered mosaic",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "searchId"
      ]
    },
    "RenderOption": {
      "type": "object",
      "description": "Defines visualization parameters for rendering data on a map.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the render option.",
          "minLength": 1,
          "maxLength": 30,
          "pattern": "^(?!\\-|_)[a-zA-Z0-9_-]*(?<!\\-|_)$"
        },
        "name": {
          "type": "string",
          "description": "Short descriptive name for the render option.",
          "maxLength": 40
        },
        "description": {
          "type": "string",
          "description": "A longer description of the render option that can be used to explain its\ncontent."
        },
        "type": {
          "type": "string",
          "description": "The type of rendering to apply (raster or vector).",
          "default": "raster-tile",
          "enum": [
            "raster-tile",
            "vt-polygon",
            "vt-line"
          ],
          "x-ms-enum": {
            "name": "RenderOptionType",
            "modelAsString": true,
            "values": [
              {
                "name": "raster-tile",
                "value": "raster-tile",
                "description": "Raster tile rendering type."
              },
              {
                "name": "vt-polygon",
                "value": "vt-polygon",
                "description": "Vector tile polygon rendering type."
              },
              {
                "name": "vt-line",
                "value": "vt-line",
                "description": "Vector tile line rendering type."
              }
            ]
          }
        },
        "options": {
          "type": "string",
          "description": "A URL query-string encoded string of TiTiler rendering options. Valid only for\n`raster-tile` types.  See 'Query Parameters':\nhttps://developmentseed.org/titiler/endpoints/cog/#description"
        },
        "vectorOptions": {
          "$ref": "#/definitions/RenderOptionVectorOptions",
          "description": "Options for rendering vector tiles. Valid only for `vt-polygon`  and `vt-line`\ntypes."
        },
        "minZoom": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum zoom level at which to display this layer.",
          "default": 12,
          "maximum": 24
        },
        "legend": {
          "$ref": "#/definitions/RenderOptionLegend",
          "description": "Legend configuration for this render option."
        },
        "conditions": {
          "type": "array",
          "description": "A list of property/value conditions that must be in the active mosaic CQL for\nthis render option to be enabled",
          "items": {
            "$ref": "#/definitions/RenderOptionCondition"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "RenderOptionCondition": {
      "type": "object",
      "description": "Defines a condition for enabling a render option.",
      "properties": {
        "property": {
          "type": "string",
          "description": "Property name to check in the active CQL filter."
        },
        "value": {
          "type": "string",
          "description": "Value that the property must equal."
        }
      },
      "required": [
        "property"
      ]
    },
    "RenderOptionLegend": {
      "type": "object",
      "description": "Configuration for generating a data legend.",
      "properties": {
        "type": {
          "$ref": "#/definitions/LegendConfigType",
          "description": "Legend type to make,\none of: `continuous`,\n`classmap`,\n`interval` or `none`\n(note, `none` is a string literal)."
        },
        "labels": {
          "type": "array",
          "description": "Text labels to display on the legend.",
          "items": {
            "type": "string"
          }
        },
        "trimStart": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items to trim from the start of the legend definition. Used if\nthere are values important for rendering (e.g. nodata) that aren't desirable in\nthe legend."
        },
        "trimEnd": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items to trim from the end of the legend."
        },
        "scaleFactor": {
          "type": "number",
          "format": "float",
          "description": "A factor to multiply interval legend labels by. Useful for scaled rasters whose\ncolormap definitions map to unscaled values, effectively showing legend labels\nas scaled values."
        }
      }
    },
    "RenderOptionType": {
      "type": "string",
      "description": "Specifies the types of render options for map visualization.",
      "enum": [
        "raster-tile",
        "vt-polygon",
        "vt-line"
      ],
      "x-ms-enum": {
        "name": "RenderOptionType",
        "modelAsString": true,
        "values": [
          {
            "name": "raster-tile",
            "value": "raster-tile",
            "description": "Raster tile rendering type."
          },
          {
            "name": "vt-polygon",
            "value": "vt-polygon",
            "description": "Vector tile polygon rendering type."
          },
          {
            "name": "vt-line",
            "value": "vt-line",
            "description": "Vector tile line rendering type."
          }
        ]
      }
    },
    "RenderOptionVectorOptions": {
      "type": "object",
      "description": "Defines parameters for vector tile rendering.",
      "properties": {
        "tilejsonKey": {
          "type": "string",
          "description": "Asset key containing the TileJSON URL."
        },
        "sourceLayer": {
          "type": "string",
          "description": "Name of the source layer in the vector tiles."
        },
        "fillColor": {
          "type": "string",
          "description": "Fill color for polygon features."
        },
        "strokeColor": {
          "type": "string",
          "description": "Stroke color for line features."
        },
        "strokeWidth": {
          "type": "integer",
          "format": "int32",
          "description": "Width of line strokes in pixels."
        },
        "filter": {
          "type": "array",
          "description": "MapBox GL filter expression to filter features.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "tilejsonKey",
        "sourceLayer"
      ]
    },
    "Resampling": {
      "type": "string",
      "description": "Resampling algorithm to use when reading source raster data at different resolutions",
      "enum": [
        "nearest",
        "bilinear",
        "cubic",
        "cubic_spline",
        "lanczos",
        "average",
        "mode",
        "gauss",
        "rms"
      ],
      "x-ms-enum": {
        "name": "Resampling",
        "modelAsString": true,
        "values": [
          {
            "name": "nearest",
            "value": "nearest",
            "description": "Nearest neighbor - fastest method that selects the closest pixel value"
          },
          {
            "name": "bilinear",
            "value": "bilinear",
            "description": "Bilinear interpolation - calculates output values using a weighted average of 2x2 input cells"
          },
          {
            "name": "cubic",
            "value": "cubic",
            "description": "Cubic interpolation - uses a weighted average of 4x4 input cells for smoother results"
          },
          {
            "name": "cubic_spline",
            "value": "cubic_spline",
            "description": "Cubic spline interpolation - similar to cubic but preserves edges better"
          },
          {
            "name": "lanczos",
            "value": "lanczos",
            "description": "Lanczos windowed sinc resampling - high-quality with minimal artifacts"
          },
          {
            "name": "average",
            "value": "average",
            "description": "Average resampling - calculates the mean of all contributing pixels"
          },
          {
            "name": "mode",
            "value": "mode",
            "description": "Mode resampling - selects the most common value from contributing pixels"
          },
          {
            "name": "gauss",
            "value": "gauss",
            "description": "Gaussian weighted resampling - applies a gaussian weighting to contributing pixels"
          },
          {
            "name": "rms",
            "value": "rms",
            "description": "Root mean square resampling - useful for resampling error or deviation grids"
          }
        ]
      }
    },
    "SasToken": {
      "type": "object",
      "title": "SasToken",
      "description": "Represents a Shared Access Signature (SAS) token response for accessing Azure Blob Storage.",
      "properties": {
        "msft:expiry": {
          "type": "string",
          "format": "date-time",
          "title": "Msft:Expiry",
          "description": "The expiration date and time of the SAS token in UTC.",
          "x-ms-client-name": "msftExpiry"
        },
        "token": {
          "type": "string",
          "title": "Token",
          "description": "The SAS token string used for authentication."
        }
      },
      "required": [
        "msft:expiry",
        "token"
      ]
    },
    "SearchPostRequest": {
      "type": "object",
      "description": "Search model.\n\nOverrides the validation for datetime from the base request model.\n\nDefines parameters for a STAC search POST request.",
      "properties": {
        "collections": {
          "type": "array",
          "description": "List of collection IDs to search within.",
          "items": {
            "type": "string"
          }
        },
        "ids": {
          "type": "array",
          "description": "List of specific item IDs to return.",
          "items": {
            "type": "string"
          }
        },
        "bbox": {
          "type": "array",
          "description": "Bounding box for spatial filtering in format [west, south, east, north].",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "intersects": {
          "$ref": "#/definitions/GeoJson",
          "description": "GeoJSON geometry for spatial filtering."
        },
        "datetime": {
          "type": "string",
          "description": "Temporal filter in RFC 3339 format, can be a single time or range."
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of results to return.",
          "default": 250,
          "minimum": 1,
          "maximum": 1000
        },
        "conf": {
          "type": "object",
          "description": "Conf",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sign": {
          "$ref": "#/definitions/SignType",
          "description": "Whether to sign asset URLs in the response."
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "description": "URL signature duration in seconds."
        },
        "query": {
          "type": "object",
          "description": "https://github.com/stac-api-extensions/query\n\nQuery",
          "additionalProperties": {
            "$ref": "#/definitions/StringRecord"
          }
        },
        "sortby": {
          "type": "array",
          "description": "https://github.com/stac-api-extensions/sort\n\nSort criteria for the search results.",
          "items": {
            "$ref": "#/definitions/SortExtension"
          },
          "x-ms-identifiers": []
        },
        "fields": {
          "type": "array",
          "description": "https://github.com/stac-api-extensions/fields\n\nSpecifies which fields to include or exclude in the response.",
          "items": {
            "$ref": "#/definitions/SearchPostRequestFields"
          },
          "x-ms-identifiers": []
        },
        "filter": {
          "type": "object",
          "description": "https://github.com/stac-api-extensions/filter\n\nFilter",
          "additionalProperties": {
            "type": "string"
          }
        },
        "filter-crs": {
          "type": "string",
          "description": "Coordinate reference system for the filter.",
          "x-ms-client-name": "filterCrs"
        },
        "filter-lang": {
          "type": "string",
          "description": "Filter language to use for the filter expression.",
          "default": "cql-json",
          "enum": [
            "cql-json",
            "cql2-json",
            "cql2-text"
          ],
          "x-ms-enum": {
            "name": "FilterLang",
            "modelAsString": true,
            "values": [
              {
                "name": "cql-json",
                "value": "cql-json",
                "description": "Common Query Language in JSON format."
              },
              {
                "name": "cql2-json",
                "value": "cql2-json",
                "description": "Common Query Language 2 in JSON format"
              },
              {
                "name": "cql2-text",
                "value": "cql2-text",
                "description": "Common Query Language 2 in text format."
              }
            ]
          },
          "x-ms-client-name": "filterLang"
        },
        "token": {
          "type": "string",
          "description": "Pagination token for fetching the next set of results."
        }
      }
    },
    "SearchPostRequestFields": {
      "type": "object",
      "description": "FieldsExtension.\n\nAttributes:\ninclude: set of fields to include.\nexclude: set of fields to exclude.\n\nControls which fields to include or exclude from the response.",
      "properties": {
        "include": {
          "type": "array",
          "description": "Array of field names to include in the response.",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "exclude": {
          "type": "array",
          "description": "Array of field names to exclude from the response.",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SignType": {
      "type": "string",
      "description": "Represent the signature type for asset URLs.",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "SignType",
        "modelAsString": true,
        "values": [
          {
            "name": "True",
            "value": "true",
            "description": "Sign asset URLs in the response."
          },
          {
            "name": "False",
            "value": "false",
            "description": "Do not sign asset URLs in the response."
          }
        ]
      }
    },
    "SignedHrefResponse": {
      "type": "object",
      "description": "Successful Response",
      "properties": {
        "body": {
          "$ref": "#/definitions/UnsignedLink",
          "title": "Response Signed Href Api Sign Get",
          "description": "Response body"
        }
      }
    },
    "SortBy": {
      "type": "object",
      "description": "SortBy model",
      "properties": {
        "field": {
          "type": "string",
          "description": "Field to sort by"
        },
        "direction": {
          "type": "string",
          "description": "Sort direction"
        }
      },
      "required": [
        "field",
        "direction"
      ]
    },
    "SortDirections": {
      "type": "string",
      "description": "Defines the sorting directions for query results in STAC API.",
      "enum": [
        "asc",
        "desc"
      ],
      "x-ms-enum": {
        "name": "SortDirections",
        "modelAsString": true,
        "values": [
          {
            "name": "asc",
            "value": "asc",
            "description": "Sort results in ascending order."
          },
          {
            "name": "desc",
            "value": "desc",
            "description": "Sort results in descending order."
          }
        ]
      }
    },
    "SortExtension": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-api-spec/tree/master/extensions/sort#sort-api-extension\n\nRepresents a sort specification for STAC API queries.",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field name to sort by.",
          "minLength": 1
        },
        "direction": {
          "$ref": "#/definitions/SortDirections",
          "description": "The sort direction (ascending or descending)."
        }
      },
      "required": [
        "field",
        "direction"
      ]
    },
    "SpatialExtent": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#spatial-extent-object\n\nRepresents the spatial extent of a STAC collection with bounding boxes.",
      "properties": {
        "bbox": {
          "type": "array",
          "description": "Array of bounding boxes defining the spatial extent, in format [[west, south, east, north]].",
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "StacCollection": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md\n\nRepresents a STAC collection.",
      "properties": {
        "msft:_created": {
          "type": "string",
          "description": "MSFT Created",
          "x-ms-client-name": "msftCreated"
        },
        "msft:_updated": {
          "type": "string",
          "description": "MSFT Updated",
          "x-ms-client-name": "msftUpdated"
        },
        "msft:short_description": {
          "type": "string",
          "description": "MSFT Short Description",
          "maxLength": 300,
          "x-ms-client-name": "msftShortDescription"
        },
        "stac_extensions": {
          "type": "array",
          "description": "URLs to STAC extensions implemented by this STAC resource.",
          "items": {
            "type": "string"
          },
          "x-ms-client-name": "stacExtensions"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the collection.",
          "minLength": 1,
          "maxLength": 500,
          "pattern": ".*",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the collection.",
          "minLength": 1
        },
        "stac_version": {
          "type": "string",
          "description": "Stac Version",
          "default": "1.0.0",
          "minLength": 1,
          "x-ms-client-name": "stacVersion"
        },
        "links": {
          "type": "array",
          "description": "Links to related resources and endpoints.",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-identifiers": []
        },
        "title": {
          "type": "string",
          "description": "Human-readable title for the collection."
        },
        "type": {
          "type": "string",
          "description": "Type",
          "default": "Collection",
          "minLength": 1
        },
        "assets": {
          "type": "object",
          "description": "Assets",
          "additionalProperties": {
            "$ref": "#/definitions/Asset"
          }
        },
        "license": {
          "type": "string",
          "description": "License identifier for the collection data.",
          "minLength": 1
        },
        "extent": {
          "$ref": "#/definitions/Extent",
          "description": "Spatial and temporal extent of the collection."
        },
        "keywords": {
          "type": "array",
          "description": "Keywords describing the collection.",
          "items": {
            "type": "string"
          }
        },
        "providers": {
          "type": "array",
          "description": "Organizations or individuals who provide the collection data.",
          "items": {
            "$ref": "#/definitions/Provider"
          },
          "x-ms-identifiers": []
        },
        "summaries": {
          "type": "object",
          "description": "https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#summaries\n\nSummaries",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "description",
        "links",
        "license",
        "extent"
      ]
    },
    "StacExtensionsList": {
      "type": "object",
      "description": "Stac Extensions",
      "properties": {
        "stac_extensions": {
          "type": "array",
          "description": "URLs to STAC extensions implemented by this STAC resource.",
          "items": {
            "type": "string"
          },
          "x-ms-client-name": "stacExtensions"
        }
      }
    },
    "StacItem": {
      "type": "object",
      "description": "Represents a STAC Item, which is a GeoJSON Feature with additional metadata.",
      "properties": {
        "type": {
          "$ref": "#/definitions/FeatureType",
          "description": "GeoJSON type identifier for Feature"
        },
        "geometry": {
          "$ref": "#/definitions/GeoJson",
          "description": "Geometry object defining the feature's shape"
        },
        "bbox": {
          "type": "array",
          "description": "Bounding box coordinates for the feature",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "msft:_created": {
          "type": "string",
          "description": "MSFT Created",
          "x-ms-client-name": "msftCreated"
        },
        "msft:_updated": {
          "type": "string",
          "description": "MSFT Updated",
          "x-ms-client-name": "msftUpdated"
        },
        "msft:short_description": {
          "type": "string",
          "description": "MSFT Short Description",
          "maxLength": 300,
          "x-ms-client-name": "msftShortDescription"
        },
        "stac_extensions": {
          "type": "array",
          "description": "URLs to STAC extensions implemented by this STAC resource.",
          "items": {
            "type": "string"
          },
          "x-ms-client-name": "stacExtensions"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the feature",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "stac_version": {
          "type": "string",
          "description": "Stac Version",
          "default": "1.0.0",
          "minLength": 1,
          "x-ms-client-name": "stacVersion"
        },
        "collection": {
          "type": "string",
          "description": "ID of the STAC collection this item belongs to."
        },
        "properties": {
          "$ref": "#/definitions/ItemProperties",
          "description": "Attributes associated with the feature"
        },
        "links": {
          "type": "array",
          "description": "Links to related resources and endpoints.",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-identifiers": []
        },
        "assets": {
          "type": "object",
          "description": "Assets",
          "additionalProperties": {
            "$ref": "#/definitions/Asset"
          }
        },
        "_msft:ts": {
          "type": "string",
          "description": "MSFT Timestamp",
          "x-ms-client-name": "msftTimestamp"
        },
        "_msft:etag": {
          "type": "string",
          "description": "MSFT ETag",
          "x-ms-client-name": "msftEtag"
        }
      },
      "required": [
        "type",
        "geometry",
        "bbox",
        "id",
        "properties",
        "links",
        "assets"
      ]
    },
    "StacItemUpdate": {
      "type": "object",
      "description": "Represents a STAC Item, which is a GeoJSON Feature with additional metadata.",
      "properties": {
        "type": {
          "$ref": "#/definitions/FeatureType",
          "description": "GeoJSON type identifier for Feature"
        },
        "geometry": {
          "$ref": "#/definitions/GeoJsonUpdate",
          "description": "Geometry object defining the feature's shape"
        },
        "bbox": {
          "type": "array",
          "description": "Bounding box coordinates for the feature",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "msft:_created": {
          "type": "string",
          "description": "MSFT Created",
          "x-ms-client-name": "msftCreated"
        },
        "msft:_updated": {
          "type": "string",
          "description": "MSFT Updated",
          "x-ms-client-name": "msftUpdated"
        },
        "msft:short_description": {
          "type": "string",
          "description": "MSFT Short Description",
          "maxLength": 300,
          "x-ms-client-name": "msftShortDescription"
        },
        "stac_extensions": {
          "type": "array",
          "description": "URLs to STAC extensions implemented by this STAC resource.",
          "items": {
            "type": "string"
          },
          "x-ms-client-name": "stacExtensions"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the feature",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "stac_version": {
          "type": "string",
          "description": "Stac Version",
          "default": "1.0.0",
          "minLength": 1,
          "x-ms-client-name": "stacVersion"
        },
        "collection": {
          "type": "string",
          "description": "ID of the STAC collection this item belongs to."
        },
        "properties": {
          "$ref": "#/definitions/ItemPropertiesUpdate",
          "description": "Attributes associated with the feature"
        },
        "links": {
          "type": "array",
          "description": "Links to related resources and endpoints.",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-identifiers": []
        },
        "assets": {
          "type": "object",
          "description": "Assets",
          "additionalProperties": {
            "$ref": "#/definitions/AssetUpdate"
          }
        },
        "_msft:ts": {
          "type": "string",
          "description": "MSFT Timestamp",
          "x-ms-client-name": "msftTimestamp"
        },
        "_msft:etag": {
          "type": "string",
          "description": "MSFT ETag",
          "x-ms-client-name": "msftEtag"
        }
      }
    },
    "StatisticsResponse": {
      "type": "object",
      "description": "Return dataset's statistics.",
      "additionalProperties": {
        "$ref": "#/definitions/BandStatistics"
      }
    },
    "StringRecord": {
      "type": "object",
      "description": "String record.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "TileJsonResponse": {
      "type": "object",
      "description": "TileJSON model.\n\nBased on https://github.com/mapbox/tilejson-spec/tree/master/2.2.0TileJSON metadata describing a tile set according to the TileJSON specification",
      "properties": {
        "tilejson": {
          "type": "string",
          "description": "Tilejson",
          "default": "2.2.0"
        },
        "name": {
          "type": "string",
          "description": "Human-readable name of the tile set"
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the tile set"
        },
        "version": {
          "type": "string",
          "description": "Version",
          "default": "1.0.0"
        },
        "attribution": {
          "type": "string",
          "description": "Attribution text for the data sources"
        },
        "template": {
          "type": "string",
          "description": "URL template for feature info queries"
        },
        "legend": {
          "type": "string",
          "description": "URL to legend content for the tile set"
        },
        "scheme": {
          "type": "string",
          "description": "Tile addressing scheme (xyz or tms)",
          "default": "xyz",
          "enum": [
            "xyz",
            "tms"
          ],
          "x-ms-enum": {
            "name": "TileJsonScheme",
            "modelAsString": true,
            "values": [
              {
                "name": "xyz",
                "value": "xyz",
                "description": "XYZ tile addressing scheme with origin at top-left"
              },
              {
                "name": "tms",
                "value": "tms",
                "description": "TMS tile addressing scheme with origin at bottom-left"
              }
            ]
          }
        },
        "tiles": {
          "type": "array",
          "description": "Array of tile URL templates",
          "items": {
            "type": "string"
          }
        },
        "grids": {
          "type": "array",
          "description": "Array of UTFGrid URL templates",
          "items": {
            "type": "string"
          }
        },
        "data": {
          "type": "array",
          "description": "Array of data file URL templates",
          "items": {
            "type": "string"
          }
        },
        "minzoom": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum zoom level available in the tile set",
          "maximum": 30
        },
        "maxzoom": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum zoom level available in the tile set",
          "default": 30,
          "maximum": 30
        },
        "bounds": {
          "type": "array",
          "description": "Bounds",
          "default": [
            -180,
            -90,
            180,
            90
          ],
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "center": {
          "type": "array",
          "description": "Default center point [longitude, latitude, zoom] for the tile set",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "required": [
        "tiles"
      ]
    },
    "TileJsonScheme": {
      "type": "string",
      "description": "Scheme for tile addressing in TileJSON specification",
      "enum": [
        "xyz",
        "tms"
      ],
      "x-ms-enum": {
        "name": "TileJsonScheme",
        "modelAsString": true,
        "values": [
          {
            "name": "xyz",
            "value": "xyz",
            "description": "XYZ tile addressing scheme with origin at top-left"
          },
          {
            "name": "tms",
            "value": "tms",
            "description": "TMS tile addressing scheme with origin at bottom-left"
          }
        ]
      }
    },
    "TileMatrix": {
      "type": "object",
      "description": "Tile Matrix Definition\n\nA tile matrix, usually corresponding to a particular zoom level of a\nTileMatrixSet.\n\nref:\nhttps://github.com/opengeospatial/2D-Tile-Matrix-Set/blob/master/schemas/tms/2.0/json/tileMatrix.json\n\nDefinition of a tile matrix at a specific zoom level within a tile matrix set",
      "properties": {
        "title": {
          "type": "string",
          "description": "Human-readable title of the tile matrix level"
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of this tile matrix level"
        },
        "keywords": {
          "type": "array",
          "description": "Unordered list of one or more commonly used or formalized word(s) or phrase(s)\nused to describe this dataset",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for this tile matrix level, often the zoom level",
          "pattern": "^[-]?[0-9]+$"
        },
        "scaleDenominator": {
          "type": "number",
          "format": "float",
          "description": "Scale denominator representing the scale of this tile matrix level"
        },
        "cellSize": {
          "type": "number",
          "format": "float",
          "description": "Size of a pixel in map units at this tile matrix level"
        },
        "cornerOfOrigin": {
          "$ref": "#/definitions/TileMatrixCornerOfOrigin",
          "description": "The corner of the tile matrix (_topLeft_ or _bottomLeft_) used as the origin\nfor numbering tile rows and columns. This corner is also a corner of the (0, 0)\ntile."
        },
        "pointOfOrigin": {
          "type": "array",
          "description": "Precise position in CRS coordinates of the corner of origin (e.g. the top-left\ncorner) for this tile matrix. This position is also a corner of the (0, 0)\ntile. In previous version, this was 'topLeftCorner' and 'cornerOfOrigin' did\nnot exist.",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "tileWidth": {
          "type": "integer",
          "format": "int32",
          "description": "Pixel width of each tile at this level",
          "minimum": 1
        },
        "tileHeight": {
          "type": "integer",
          "format": "int32",
          "description": "Pixel height of each tile at this level",
          "minimum": 1
        },
        "matrixWidth": {
          "type": "integer",
          "format": "int32",
          "description": "Number of tiles horizontally at this matrix level",
          "minimum": 1
        },
        "matrixHeight": {
          "type": "integer",
          "format": "int32",
          "description": "Number of tiles vertically at this matrix level",
          "minimum": 1
        },
        "variableMatrixWidths": {
          "type": "array",
          "description": "Describes the rows that has variable matrix width\n\nref: https://github.com/opengeospatial/2D-Tile-Matrix-Set/blob/master/schemas/tms/2.0/json/variableMatrixWidth.json",
          "items": {
            "$ref": "#/definitions/VariableMatrixWidth"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "id",
        "scaleDenominator",
        "cellSize",
        "pointOfOrigin",
        "tileWidth",
        "tileHeight",
        "matrixWidth",
        "matrixHeight"
      ]
    },
    "TileMatrixCornerOfOrigin": {
      "type": "string",
      "description": "The corner of the tile matrix (_topLeft_ or _bottomLeft_) used as the origin\nfor numbering tile rows and columns. This corner is also a corner of the (0, 0)\ntile.",
      "enum": [
        "topLeft",
        "bottomLeft"
      ],
      "x-ms-enum": {
        "name": "TileMatrixCornerOfOrigin",
        "modelAsString": true,
        "values": [
          {
            "name": "topLeft",
            "value": "topLeft",
            "description": "Origin at the top-left corner (Y increases downward)"
          },
          {
            "name": "bottomLeft",
            "value": "bottomLeft",
            "description": "Origin at the bottom-left corner (Y increases upward)"
          }
        ]
      }
    },
    "TileMatrixSet": {
      "type": "object",
      "description": "https://github.com/opengeospatial/2D-Tile-Matrix-Set/blob/master/schemas/tms/2.0/json/tileMatrixSet.json\n\nA definition of a tile matrix set following the Tile Matrix Set standard.\nFor tileset metadata, such a description (in `tileMatrixSet` property) is only\nrequired for offline use,\nas an alternative to a link with a\n`http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme` relation type.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Human-readable title of the tile matrix set"
        },
        "description": {
          "type": "string",
          "description": "Brief narrative description of this tile matrix set, normally available for\ndisplay to a human"
        },
        "keywords": {
          "type": "array",
          "description": "Unordered list of one or more commonly used or formalized word(s) or phrase(s)\nused to describe this tile matrix set",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the tile matrix set",
          "pattern": "^[\\w\\d_\\-]+$"
        },
        "uri": {
          "type": "string",
          "description": "URI reference to the official definition"
        },
        "orderedAxes": {
          "type": "array",
          "description": "Names of the coordinate axes in order",
          "items": {
            "type": "string"
          }
        },
        "crs": {
          "type": "string",
          "description": "Coordinate reference system identifier"
        },
        "wellKnownScaleSet": {
          "type": "string",
          "format": "uri",
          "description": "URL reference to a standardized scale set"
        },
        "boundingBox": {
          "$ref": "#/definitions/TileMatrixSetBoundingBox",
          "description": "Geographic extent of the tile matrix set"
        },
        "tileMatrices": {
          "type": "array",
          "description": "Array of tile matrices at different zoom levels",
          "items": {
            "$ref": "#/definitions/TileMatrix"
          }
        }
      },
      "required": [
        "crs",
        "tileMatrices"
      ]
    },
    "TileMatrixSetBoundingBox": {
      "type": "object",
      "description": "Geographic extent of the tile matrix set expressed in the specified coordinate reference system",
      "properties": {
        "lowerLeft": {
          "type": "array",
          "description": "Lower-left corner coordinates [x, y] of bounding box",
          "items": {
            "type": "string"
          }
        },
        "upperRight": {
          "type": "array",
          "description": "Upper-right corner coordinates [x, y] of bounding box",
          "items": {
            "type": "string"
          }
        },
        "crs": {
          "type": "string",
          "description": "Coordinate reference system identifier (e.g., 'http://www.opengis.net/def/crs/EPSG/0/3857')"
        },
        "orderedAxes": {
          "type": "array",
          "description": "Explicit axis order for the CRS coordinates (e.g., ['x', 'y'])",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "lowerLeft",
        "upperRight"
      ]
    },
    "TileSettings": {
      "type": "object",
      "description": "Configuration for map tile visualization.",
      "properties": {
        "minZoom": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum zoom level that can be requested for this collection. Provides a\nhard limit for the tile servers to ensure they don't get requests for low zoom\nlevels, which would cause many files to be fetched and the tile servers to\nhang.",
          "maximum": 24
        },
        "maxItemsPerTile": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of items to include in a single tile."
        },
        "defaultLocation": {
          "$ref": "#/definitions/DefaultLocation",
          "description": "Default map location when displaying this collection."
        }
      },
      "required": [
        "minZoom",
        "maxItemsPerTile"
      ]
    },
    "Tilematrixsetid": {
      "type": "string",
      "description": "Identifier selecting one of the TileMatrixSetId supported (default:\n'WebMercatorQuad')Standard identifier for a coordinate reference system and tiling scheme used for serving map tiles",
      "enum": [
        "CanadianNAD83_LCC",
        "EuropeanETRS89_LAEAQuad",
        "LINZAntarticaMapTilegrid",
        "NZTM2000Quad",
        "UPSAntarcticWGS84Quad",
        "UPSArcticWGS84Quad",
        "UTM31WGS84Quad",
        "WGS1984Quad",
        "WebMercatorQuad",
        "WorldCRS84Quad",
        "WorldMercatorWGS84Quad"
      ],
      "x-ms-enum": {
        "name": "Tilematrixsetid",
        "modelAsString": true,
        "values": [
          {
            "name": "CanadianNAD83_LCC",
            "value": "CanadianNAD83_LCC",
            "description": "Canadian NAD83 Lambert Conformal Conic projection tile matrix set"
          },
          {
            "name": "EuropeanETRS89_LAEAQuad",
            "value": "EuropeanETRS89_LAEAQuad",
            "description": "European ETRS89 Lambert Azimuthal Equal Area Quad tile matrix set"
          },
          {
            "name": "LINZAntarticaMapTilegrid",
            "value": "LINZAntarticaMapTilegrid",
            "description": "Land Information New Zealand (LINZ) Antarctica Map tile grid matrix set"
          },
          {
            "name": "NZTM2000Quad",
            "value": "NZTM2000Quad",
            "description": "New Zealand Transverse Mercator 2000 Quad tile matrix set"
          },
          {
            "name": "UPSAntarcticWGS84Quad",
            "value": "UPSAntarcticWGS84Quad",
            "description": "Universal Polar Stereographic Antarctic WGS84 Quad tile matrix set"
          },
          {
            "name": "UPSArcticWGS84Quad",
            "value": "UPSArcticWGS84Quad",
            "description": "Universal Polar Stereographic Arctic WGS84 Quad tile matrix set"
          },
          {
            "name": "UTM31WGS84Quad",
            "value": "UTM31WGS84Quad",
            "description": "Universal Transverse Mercator Zone 31 WGS84 Quad tile matrix set"
          },
          {
            "name": "WGS1984Quad",
            "value": "WGS1984Quad",
            "description": "WGS 1984 Quad tile matrix set"
          },
          {
            "name": "WebMercatorQuad",
            "value": "WebMercatorQuad",
            "description": "Web Mercator Quad tile matrix set"
          },
          {
            "name": "WorldCRS84Quad",
            "value": "WorldCRS84Quad",
            "description": "World CRS84 Quad tile matrix set"
          },
          {
            "name": "WorldMercatorWGS84Quad",
            "value": "WorldMercatorWGS84Quad",
            "description": "World Mercator WGS84 Quad tile matrix set"
          }
        ]
      }
    },
    "TilerInfo": {
      "type": "object",
      "title": "TilerInfo",
      "description": "Dataset Info.",
      "properties": {
        "bounds": {
          "type": "array",
          "title": "Bounds",
          "description": "Bounds",
          "minItems": 4,
          "maxItems": 4,
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "band_metadata": {
          "type": "array",
          "title": "Band Metadata",
          "description": "Band Metadata",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/BandMetadataElement"
            }
          },
          "x-ms-client-name": "bandMetadata",
          "x-ms-identifiers": []
        },
        "band_descriptions": {
          "type": "array",
          "title": "Band Descriptions",
          "description": "Band Descriptions",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "x-ms-client-name": "bandDescriptions",
          "x-ms-identifiers": []
        },
        "dtype": {
          "type": "string",
          "title": "Dtype",
          "description": "Data type"
        },
        "nodata_type": {
          "$ref": "#/definitions/NoDataType",
          "title": "Nodata Type",
          "description": "NoData Type",
          "x-ms-client-name": "nodataType"
        },
        "colorinterp": {
          "type": "array",
          "title": "Colorinterp",
          "description": "Color interpretation",
          "items": {
            "type": "string"
          }
        },
        "driver": {
          "type": "string",
          "title": "Driver",
          "description": "Driver"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count",
          "description": "Count"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "title": "Width",
          "description": "Width"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "title": "Height",
          "description": "Height"
        },
        "overviews": {
          "type": "array",
          "title": "Overviews",
          "description": "Overviews",
          "items": {
            "type": "string"
          }
        },
        "scales": {
          "type": "array",
          "title": "Scales",
          "description": "Scales",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "offsets": {
          "type": "array",
          "title": "Offsets",
          "description": "Offsets",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "colormap": {
          "type": "object",
          "title": "Colormap",
          "description": "Colormap",
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "minzoom": {
          "type": "integer",
          "format": "int64",
          "title": "Minzoom",
          "description": "Minzoom"
        },
        "maxzoom": {
          "type": "integer",
          "format": "int64",
          "title": "Maxzoom",
          "description": "Maxzoom"
        }
      },
      "required": [
        "bounds",
        "dtype"
      ]
    },
    "TimeInterval": {
      "type": "object",
      "description": "https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#temporal-extent-object\n\nRepresents the temporal extent of a STAC collection with time intervals.",
      "properties": {
        "interval": {
          "type": "array",
          "description": "Array of time intervals in format [[start_datetime, end_datetime]].",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "interval"
      ]
    },
    "TitilerCoreModelsResponsesPoint": {
      "type": "object",
      "description": "Point model.\n\nresponse model for `/point` endpointsResponse model for point query operations providing values at a specific location",
      "properties": {
        "coordinates": {
          "type": "array",
          "description": "Geographic coordinates [longitude, latitude] of the queried point",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "values": {
          "type": "array",
          "description": "Array of pixel values at the queried point for each band",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "band_names": {
          "type": "array",
          "description": "Names of each band in the raster data",
          "items": {
            "type": "string"
          },
          "x-ms-client-name": "bandNames"
        }
      },
      "required": [
        "coordinates",
        "values",
        "band_names"
      ]
    },
    "TitilerPgstacModelInfo": {
      "type": "object",
      "description": "Information about a registered STAC search query",
      "properties": {
        "search": {
          "$ref": "#/definitions/PgStacSearch",
          "description": "PgSTAC Search entry.\n\nref:\nhttps://github.com/stac-utils/pgstac/blob/3499daa2bfa700ae7bb07503795c169bf2ebafc7/sql/004_search.sql#L907-L915\n\nDetails of the saved search query"
        },
        "links": {
          "type": "array",
          "description": "Related links for the search query",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "search"
      ]
    },
    "TokenResponse": {
      "type": "object",
      "description": "Successful Response",
      "properties": {
        "body": {
          "$ref": "#/definitions/SasToken",
          "description": "Response body"
        }
      },
      "required": [
        "body"
      ]
    },
    "UnsignedLink": {
      "type": "object",
      "title": "UnsignedLink",
      "description": "Represents a link that has not been signed with a SAS token.\nThe expiry field will be null for unsigned links.",
      "properties": {
        "msft:expiry": {
          "type": "string",
          "format": "date-time",
          "title": "Msft:Expiry",
          "description": "The expiry date of the signed link. This indicates when the link will no longer be valid.",
          "x-ms-client-name": "msftExpiry"
        },
        "href": {
          "type": "string",
          "title": "Href",
          "description": "The URL of the unsigned link."
        }
      },
      "required": [
        "href"
      ]
    },
    "UserCollectionSettings": {
      "type": "object",
      "description": "User-specific collection settings for visualization.",
      "properties": {
        "tileSettings": {
          "$ref": "#/definitions/TileSettings",
          "description": "Settings for map tile visualization."
        },
        "mosaicInfo": {
          "$ref": "#/definitions/MosaicInfo",
          "description": "Settings for data mosaic visualization."
        }
      },
      "required": [
        "tileSettings",
        "mosaicInfo"
      ]
    },
    "VariableMatrixWidth": {
      "type": "object",
      "description": "Model for variableMatrixWidth",
      "properties": {
        "coalesce": {
          "type": "integer",
          "format": "int32",
          "description": "Number of tiles in width that coalesce in a single tile for these rows"
        },
        "minTileRow": {
          "type": "integer",
          "format": "int32",
          "description": "First tile row where the coalescence factor applies for this tilematrix"
        },
        "maxTileRow": {
          "type": "integer",
          "format": "int32",
          "description": "Last tile row where the coalescence factor applies for this tilematrix"
        }
      },
      "required": [
        "coalesce",
        "minTileRow",
        "maxTileRow"
      ]
    },
    "WmtsCapabilitiesResponse": {
      "type": "object",
      "description": "Successful Response",
      "properties": {
        "body": {
          "type": "string",
          "description": "body for wmts capabilities"
        }
      },
      "required": [
        "body"
      ]
    },
    "WmtsCapabilitiesXmlResponse": {
      "type": "object",
      "description": "Successful Response",
      "properties": {
        "body": {
          "type": "string",
          "description": "body for WMTSCapabilitiesXmlResponse"
        }
      },
      "required": [
        "body"
      ]
    }
  },
  "parameters": {
    "AlgorithmQueryParameters.algorithm": {
      "name": "algorithm",
      "in": "query",
      "description": "Algorithm name",
      "required": false,
      "type": "string",
      "enum": [
        "hillshade",
        "contours",
        "normalizedIndex",
        "terrarium",
        "terrainrgb"
      ],
      "x-ms-enum": {
        "name": "Algorithm",
        "modelAsString": true,
        "values": [
          {
            "name": "hillshade",
            "value": "hillshade",
            "description": "Creates hillshade visualization from elevation data"
          },
          {
            "name": "contours",
            "value": "contours",
            "description": "Generates elevation contour lines"
          },
          {
            "name": "normalizedIndex",
            "value": "normalizedIndex",
            "description": "Calculates normalized difference index between bands"
          },
          {
            "name": "terrarium",
            "value": "terrarium",
            "description": "Encodes elevation data in Mapbox Terrarium RGB format"
          },
          {
            "name": "terrainrgb",
            "value": "terrainrgb",
            "description": "Encodes elevation data in Mapbox TerrainRGB format"
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "AlgorithmQueryParameters.algorithmParams": {
      "name": "algorithm_params",
      "in": "query",
      "description": "Algorithm parameter",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "algorithmParams"
    },
    "AssetQueryParameters.assetAsBand": {
      "name": "asset_as_band",
      "in": "query",
      "description": "Asset as Band",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "assetAsBand"
    },
    "AssetQueryParameters.assetBidx": {
      "name": "assetBidx",
      "in": "query",
      "description": "Per asset band indexes (coma separated indexes)",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-ms-parameter-location": "method"
    },
    "AssetQueryParameters.assets": {
      "name": "assets",
      "in": "query",
      "description": "Asset's names.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-ms-parameter-location": "method"
    },
    "AssetQueryParameters.expression": {
      "name": "expression",
      "in": "query",
      "description": "Band math expression between assets",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AssetQueryParameters.nodata": {
      "name": "nodata",
      "in": "query",
      "description": "Overwrite internal Nodata value",
      "required": false,
      "type": "number",
      "format": "float",
      "x-ms-parameter-location": "method"
    },
    "AssetQueryParameters.unscale": {
      "name": "unscale",
      "in": "query",
      "description": "Apply internal Scale or Offset",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    },
    "BoundingBoxPathParameters.maxx": {
      "name": "maxx",
      "in": "path",
      "description": "Bounding box max X",
      "required": true,
      "type": "number",
      "format": "float",
      "x-ms-parameter-location": "method"
    },
    "BoundingBoxPathParameters.maxy": {
      "name": "maxy",
      "in": "path",
      "description": "Bounding box max Y",
      "required": true,
      "type": "number",
      "format": "float",
      "x-ms-parameter-location": "method"
    },
    "BoundingBoxPathParameters.minx": {
      "name": "minx",
      "in": "path",
      "description": "Bounding box min X",
      "required": true,
      "type": "number",
      "format": "float",
      "x-ms-parameter-location": "method"
    },
    "BoundingBoxPathParameters.miny": {
      "name": "miny",
      "in": "path",
      "description": "Bounding box min Y",
      "required": true,
      "type": "number",
      "format": "float",
      "x-ms-parameter-location": "method"
    },
    "CollectionParameters.collectionId": {
      "name": "collectionId",
      "in": "path",
      "description": "Catalog collection id",
      "required": true,
      "type": "string",
      "maxLength": 500,
      "pattern": ".*",
      "x-ms-parameter-location": "method"
    },
    "DimensionsQueryParameters.height": {
      "name": "height",
      "in": "query",
      "description": "Height in pixels for the output image",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "DimensionsQueryParameters.width": {
      "name": "width",
      "in": "query",
      "description": "Width in pixels for the output image",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "IngestionSources.IngestionSourceParameters": {
      "name": "id",
      "in": "path",
      "description": "Ingestion source id",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "Ingestions.IngestionParameters.ingestionId": {
      "name": "ingestionId",
      "in": "path",
      "description": "Ingestion id",
      "required": true,
      "type": "string",
      "maxLength": 500,
      "pattern": "^[a-zA-Za0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$",
      "x-ms-parameter-location": "method"
    },
    "Ingestions.IngestionRuns.IngestionRunParameters.runId": {
      "name": "runId",
      "in": "path",
      "description": "Run id",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "MiscTileQueryParameters.colormap": {
      "name": "colormap",
      "in": "query",
      "description": "JSON encoded custom Colormap",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "MiscTileQueryParameters.colormapName": {
      "name": "colormap_name",
      "in": "query",
      "description": "Colormap name",
      "required": false,
      "type": "string",
      "enum": [
        "accent",
        "accent_r",
        "afmhot",
        "afmhot_r",
        "ai4g-lulc",
        "alos-fnf",
        "alos-palsar-mask",
        "autumn",
        "autumn_r",
        "binary",
        "binary_r",
        "blues",
        "blues_r",
        "bone",
        "bone_r",
        "brbg",
        "brbg_r",
        "brg",
        "brg_r",
        "bugn",
        "bugn_r",
        "bupu",
        "bupu_r",
        "bwr",
        "bwr_r",
        "c-cap",
        "cfastie",
        "chesapeake-lc-13",
        "chesapeake-lc-7",
        "chesapeake-lu",
        "chloris-biomass",
        "cividis",
        "cividis_r",
        "cmrmap",
        "cmrmap_r",
        "cool",
        "cool_r",
        "coolwarm",
        "coolwarm_r",
        "copper",
        "copper_r",
        "cubehelix",
        "cubehelix_r",
        "dark2",
        "dark2_r",
        "drcog-lulc",
        "esa-cci-lc",
        "esa-worldcover",
        "flag",
        "flag_r",
        "gap-lulc",
        "gist_earth",
        "gist_earth_r",
        "gist_gray",
        "gist_gray_r",
        "gist_heat",
        "gist_heat_r",
        "gist_ncar",
        "gist_ncar_r",
        "gist_rainbow",
        "gist_rainbow_r",
        "gist_stern",
        "gist_stern_r",
        "gist_yarg",
        "gist_yarg_r",
        "gnbu",
        "gnbu_r",
        "gnuplot",
        "gnuplot2",
        "gnuplot2_r",
        "gnuplot_r",
        "gray",
        "gray_r",
        "greens",
        "greens_r",
        "greys",
        "greys_r",
        "hot",
        "hot_r",
        "hsv",
        "hsv_r",
        "inferno",
        "inferno_r",
        "io-bii",
        "io-lulc",
        "io-lulc-9-class",
        "jet",
        "jet_r",
        "jrc-change",
        "jrc-extent",
        "jrc-occurrence",
        "jrc-recurrence",
        "jrc-seasonality",
        "jrc-transitions",
        "lidar-classification",
        "lidar-hag",
        "lidar-hag-alternative",
        "lidar-intensity",
        "lidar-returns",
        "magma",
        "magma_r",
        "modis-10A1",
        "modis-10A2",
        "modis-13A1|Q1",
        "modis-14A1|A2",
        "modis-15A2H|A3H",
        "modis-16A3GF-ET",
        "modis-16A3GF-PET",
        "modis-17A2H|A2HGF",
        "modis-17A3HGF",
        "modis-64A1",
        "mtbs-severity",
        "nipy_spectral",
        "nipy_spectral_r",
        "nrcan-lulc",
        "ocean",
        "ocean_r",
        "oranges",
        "oranges_r",
        "orrd",
        "orrd_r",
        "paired",
        "paired_r",
        "pastel1",
        "pastel1_r",
        "pastel2",
        "pastel2_r",
        "pink",
        "pink_r",
        "piyg",
        "piyg_r",
        "plasma",
        "plasma_r",
        "prgn",
        "prgn_r",
        "prism",
        "prism_r",
        "pubu",
        "pubu_r",
        "pubugn",
        "pubugn_r",
        "puor",
        "puor_r",
        "purd",
        "purd_r",
        "purples",
        "purples_r",
        "qpe",
        "rainbow",
        "rainbow_r",
        "rdbu",
        "rdbu_r",
        "rdgy",
        "rdgy_r",
        "rdpu",
        "rdpu_r",
        "rdylbu",
        "rdylbu_r",
        "rdylgn",
        "rdylgn_r",
        "reds",
        "reds_r",
        "rplumbo",
        "schwarzwald",
        "seismic",
        "seismic_r",
        "set1",
        "set1_r",
        "set2",
        "set2_r",
        "set3",
        "set3_r",
        "spectral",
        "spectral_r",
        "spring",
        "spring_r",
        "summer",
        "summer_r",
        "tab10",
        "tab10_r",
        "tab20",
        "tab20_r",
        "tab20b",
        "tab20b_r",
        "tab20c",
        "tab20c_r",
        "terrain",
        "terrain_r",
        "twilight",
        "twilight_r",
        "twilight_shifted",
        "twilight_shifted_r",
        "usda-cdl",
        "usda-cdl-corn",
        "usda-cdl-cotton",
        "usda-cdl-soybeans",
        "usda-cdl-wheat",
        "usgs-lcmap",
        "viirs-10a1",
        "viirs-13a1",
        "viirs-14a1",
        "viirs-15a2H",
        "viridis",
        "viridis_r",
        "winter",
        "winter_r",
        "wistia",
        "wistia_r",
        "ylgn",
        "ylgn_r",
        "ylgnbu",
        "ylgnbu_r",
        "ylorbr",
        "ylorbr_r",
        "ylorrd",
        "ylorrd_r"
      ],
      "x-ms-enum": {
        "name": "ColorMapNames",
        "modelAsString": true,
        "values": [
          {
            "name": "accent",
            "value": "accent",
            "description": "Accent colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "accent_r",
            "value": "accent_r",
            "description": "Reversed accent colormap"
          },
          {
            "name": "afmhot",
            "value": "afmhot",
            "description": "Afmhot colormap - sequential black-red-yellow-white colormap"
          },
          {
            "name": "afmhot_r",
            "value": "afmhot_r",
            "description": "Reversed afmhot colormap"
          },
          {
            "name": "ai4g-lulc",
            "value": "ai4g-lulc",
            "description": "AI for Good land use/land cover colormap"
          },
          {
            "name": "alos-fnf",
            "value": "alos-fnf",
            "description": "ALOS forest/non-forest colormap"
          },
          {
            "name": "alos-palsar-mask",
            "value": "alos-palsar-mask",
            "description": "ALOS PALSAR mask colormap"
          },
          {
            "name": "autumn",
            "value": "autumn",
            "description": "Autumn colormap - sequential red-orange-yellow colormap"
          },
          {
            "name": "autumn_r",
            "value": "autumn_r",
            "description": "Reversed autumn colormap"
          },
          {
            "name": "binary",
            "value": "binary",
            "description": "Binary colormap - simple black and white colormap"
          },
          {
            "name": "binary_r",
            "value": "binary_r",
            "description": "Reversed binary colormap"
          },
          {
            "name": "blues",
            "value": "blues",
            "description": "Blues colormap - sequential white to dark blue"
          },
          {
            "name": "blues_r",
            "value": "blues_r",
            "description": "Reversed blues colormap"
          },
          {
            "name": "bone",
            "value": "bone",
            "description": "Bone colormap - grayscale with slight blue tint"
          },
          {
            "name": "bone_r",
            "value": "bone_r",
            "description": "Reversed bone colormap"
          },
          {
            "name": "brbg",
            "value": "brbg",
            "description": "BrBG colormap - diverging brown to blue-green"
          },
          {
            "name": "brbg_r",
            "value": "brbg_r",
            "description": "Reversed BrBG colormap"
          },
          {
            "name": "brg",
            "value": "brg",
            "description": "BrG colormap - diverging brown to green"
          },
          {
            "name": "brg_r",
            "value": "brg_r",
            "description": "Reversed BrG colormap"
          },
          {
            "name": "bugn",
            "value": "bugn",
            "description": "BuGn colormap - sequential white to dark green"
          },
          {
            "name": "bugn_r",
            "value": "bugn_r",
            "description": "Reversed BuGn colormap"
          },
          {
            "name": "bupu",
            "value": "bupu",
            "description": "BuPu colormap - sequential white to dark purple"
          },
          {
            "name": "bupu_r",
            "value": "bupu_r",
            "description": "Reversed BuPu colormap"
          },
          {
            "name": "bwr",
            "value": "bwr",
            "description": "BWR colormap - diverging blue to red"
          },
          {
            "name": "bwr_r",
            "value": "bwr_r",
            "description": "Reversed BWR colormap"
          },
          {
            "name": "c-cap",
            "value": "c-cap",
            "description": "C-CAP colormap - land cover classification"
          },
          {
            "name": "cfastie",
            "value": "cfastie",
            "description": "Cfastie colormap - high contrast colormap"
          },
          {
            "name": "chesapeake-lc-13",
            "value": "chesapeake-lc-13",
            "description": "Chesapeake land cover 13-class colormap"
          },
          {
            "name": "chesapeake-lc-7",
            "value": "chesapeake-lc-7",
            "description": "Chesapeake land cover 7-class colormap"
          },
          {
            "name": "chesapeake-lu",
            "value": "chesapeake-lu",
            "description": "Chesapeake land use colormap"
          },
          {
            "name": "chloris-biomass",
            "value": "chloris-biomass",
            "description": "Chloris biomass colormap"
          },
          {
            "name": "cividis",
            "value": "cividis",
            "description": "Cividis colormap - sequential yellow to blue"
          },
          {
            "name": "cividis_r",
            "value": "cividis_r",
            "description": "Reversed cividis colormap"
          },
          {
            "name": "cmrmap",
            "value": "cmrmap",
            "description": "CMRmap colormap - perceptually uniform colormap"
          },
          {
            "name": "cmrmap_r",
            "value": "cmrmap_r",
            "description": "Reversed CMRmap colormap"
          },
          {
            "name": "cool",
            "value": "cool",
            "description": "Cool colormap - sequential cyan to magenta"
          },
          {
            "name": "cool_r",
            "value": "cool_r",
            "description": "Reversed cool colormap"
          },
          {
            "name": "coolwarm",
            "value": "coolwarm",
            "description": "Coolwarm colormap - diverging blue to red"
          },
          {
            "name": "coolwarm_r",
            "value": "coolwarm_r",
            "description": "Reversed coolwarm colormap"
          },
          {
            "name": "copper",
            "value": "copper",
            "description": "Copper colormap - sequential black to copper"
          },
          {
            "name": "copper_r",
            "value": "copper_r",
            "description": "Reversed copper colormap"
          },
          {
            "name": "cubehelix",
            "value": "cubehelix",
            "description": "Cubehelix colormap - sequential black to white with hue rotation"
          },
          {
            "name": "cubehelix_r",
            "value": "cubehelix_r",
            "description": "Reversed cubehelix colormap"
          },
          {
            "name": "dark2",
            "value": "dark2",
            "description": "Dark2 colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "dark2_r",
            "value": "dark2_r",
            "description": "Reversed dark2 colormap"
          },
          {
            "name": "drcog-lulc",
            "value": "drcog-lulc",
            "description": "DRCog land use/land cover colormap"
          },
          {
            "name": "esa-cci-lc",
            "value": "esa-cci-lc",
            "description": "ESA CCI land cover colormap"
          },
          {
            "name": "esa-worldcover",
            "value": "esa-worldcover",
            "description": "ESA WorldCover colormap"
          },
          {
            "name": "flag",
            "value": "flag",
            "description": "Flag colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "flag_r",
            "value": "flag_r",
            "description": "Reversed flag colormap"
          },
          {
            "name": "gap-lulc",
            "value": "gap-lulc",
            "description": "GAP land use/land cover colormap"
          },
          {
            "name": "gist_earth",
            "value": "gist_earth",
            "description": "Gist_earth colormap - perceptually uniform colormap"
          },
          {
            "name": "gist_earth_r",
            "value": "gist_earth_r",
            "description": "Reversed gist_earth colormap"
          },
          {
            "name": "gist_gray",
            "value": "gist_gray",
            "description": "Gist_gray colormap - grayscale colormap"
          },
          {
            "name": "gist_gray_r",
            "value": "gist_gray_r",
            "description": "Reversed gist_gray colormap"
          },
          {
            "name": "gist_heat",
            "value": "gist_heat",
            "description": "Gist_heat colormap - sequential black-red-yellow-white colormap"
          },
          {
            "name": "gist_heat_r",
            "value": "gist_heat_r",
            "description": "Reversed gist_heat colormap"
          },
          {
            "name": "gist_ncar",
            "value": "gist_ncar",
            "description": "Gist_ncar colormap - perceptually uniform colormap"
          },
          {
            "name": "gist_ncar_r",
            "value": "gist_ncar_r",
            "description": "Reversed gist_ncar colormap"
          },
          {
            "name": "gist_rainbow",
            "value": "gist_rainbow",
            "description": "Gist_rainbow colormap - perceptually uniform colormap"
          },
          {
            "name": "gist_rainbow_r",
            "value": "gist_rainbow_r",
            "description": "Reversed gist_rainbow colormap"
          },
          {
            "name": "gist_stern",
            "value": "gist_stern",
            "description": "Gist_stern colormap - perceptually uniform colormap"
          },
          {
            "name": "gist_stern_r",
            "value": "gist_stern_r",
            "description": "Reversed gist_stern colormap"
          },
          {
            "name": "gist_yarg",
            "value": "gist_yarg",
            "description": "Gist_yarg colormap - grayscale colormap"
          },
          {
            "name": "gist_yarg_r",
            "value": "gist_yarg_r",
            "description": "Reversed gist_yarg colormap"
          },
          {
            "name": "gnbu",
            "value": "gnbu",
            "description": "GnBu colormap - sequential white to dark blue-green"
          },
          {
            "name": "gnbu_r",
            "value": "gnbu_r",
            "description": "Reversed GnBu colormap"
          },
          {
            "name": "gnuplot",
            "value": "gnuplot",
            "description": "Gnuplot colormap - sequential black to white with hue rotation"
          },
          {
            "name": "gnuplot2",
            "value": "gnuplot2",
            "description": "Gnuplot2 colormap - sequential black to white with hue rotation"
          },
          {
            "name": "gnuplot2_r",
            "value": "gnuplot2_r",
            "description": "Reversed gnuplot2 colormap"
          },
          {
            "name": "gnuplot_r",
            "value": "gnuplot_r",
            "description": "Reversed gnuplot colormap"
          },
          {
            "name": "gray",
            "value": "gray",
            "description": "Gray colormap - grayscale colormap"
          },
          {
            "name": "gray_r",
            "value": "gray_r",
            "description": "Reversed gray colormap"
          },
          {
            "name": "greens",
            "value": "greens",
            "description": "Greens colormap - sequential white to dark green"
          },
          {
            "name": "greens_r",
            "value": "greens_r",
            "description": "Reversed greens colormap"
          },
          {
            "name": "greys",
            "value": "greys",
            "description": "Greys colormap - sequential white to dark gray"
          },
          {
            "name": "greys_r",
            "value": "greys_r",
            "description": "Reversed greys colormap"
          },
          {
            "name": "hot",
            "value": "hot",
            "description": "Hot colormap - sequential black-red-yellow-white colormap"
          },
          {
            "name": "hot_r",
            "value": "hot_r",
            "description": "Reversed hot colormap"
          },
          {
            "name": "hsv",
            "value": "hsv",
            "description": "HSV colormap - hue-saturation-value colormap"
          },
          {
            "name": "hsv_r",
            "value": "hsv_r",
            "description": "Reversed HSV colormap"
          },
          {
            "name": "inferno",
            "value": "inferno",
            "description": "Inferno colormap - sequential black to yellow colormap"
          },
          {
            "name": "inferno_r",
            "value": "inferno_r",
            "description": "Reversed inferno colormap"
          },
          {
            "name": "io-bii",
            "value": "io-bii",
            "description": "IO-BII colormap - biodiversity index colormap"
          },
          {
            "name": "io-lulc",
            "value": "io-lulc",
            "description": "IO-LULC colormap - land use/land cover colormap"
          },
          {
            "name": "io-lulc-9-class",
            "value": "io-lulc-9-class",
            "description": "IO-LULC 9-class colormap"
          },
          {
            "name": "jet",
            "value": "jet",
            "description": "Jet colormap - sequential blue-green-yellow-red colormap"
          },
          {
            "name": "jet_r",
            "value": "jet_r",
            "description": "Reversed jet colormap"
          },
          {
            "name": "jrc-change",
            "value": "jrc-change",
            "description": "JRC change colormap"
          },
          {
            "name": "jrc-extent",
            "value": "jrc-extent",
            "description": "JRC extent colormap"
          },
          {
            "name": "jrc-occurrence",
            "value": "jrc-occurrence",
            "description": "JRC occurrence colormap"
          },
          {
            "name": "jrc-recurrence",
            "value": "jrc-recurrence",
            "description": "JRC recurrence colormap"
          },
          {
            "name": "jrc-seasonality",
            "value": "jrc-seasonality",
            "description": "JRC seasonality colormap"
          },
          {
            "name": "jrc-transitions",
            "value": "jrc-transitions",
            "description": "JRC transitions colormap"
          },
          {
            "name": "lidar-classification",
            "value": "lidar-classification",
            "description": "Lidar classification colormap"
          },
          {
            "name": "lidar-hag",
            "value": "lidar-hag",
            "description": "Lidar height above ground colormap"
          },
          {
            "name": "lidar-hag-alternative",
            "value": "lidar-hag-alternative",
            "description": "Alternative lidar height above ground colormap"
          },
          {
            "name": "lidar-intensity",
            "value": "lidar-intensity",
            "description": "Lidar intensity colormap"
          },
          {
            "name": "lidar-returns",
            "value": "lidar-returns",
            "description": "Lidar returns colormap"
          },
          {
            "name": "magma",
            "value": "magma",
            "description": "Magma colormap - sequential black to yellow colormap"
          },
          {
            "name": "magma_r",
            "value": "magma_r",
            "description": "Reversed magma colormap"
          },
          {
            "name": "modis-10A1",
            "value": "modis-10A1",
            "description": "MODIS 10A1 colormap"
          },
          {
            "name": "modis-10A2",
            "value": "modis-10A2",
            "description": "MODIS 10A2 colormap"
          },
          {
            "name": "modis-13A1|Q1",
            "value": "modis-13A1|Q1",
            "description": "MODIS 13A1|Q1 colormap"
          },
          {
            "name": "modis-14A1|A2",
            "value": "modis-14A1|A2",
            "description": "MODIS 14A1|A2 colormap"
          },
          {
            "name": "modis-15A2H|A3H",
            "value": "modis-15A2H|A3H",
            "description": "MODIS 15A2H|A3H colormap"
          },
          {
            "name": "modis-16A3GF-ET",
            "value": "modis-16A3GF-ET",
            "description": "MODIS 16A3GF-ET colormap"
          },
          {
            "name": "modis-16A3GF-PET",
            "value": "modis-16A3GF-PET",
            "description": "MODIS 16A3GF-PET colormap"
          },
          {
            "name": "modis-17A2H|A2HGF",
            "value": "modis-17A2H|A2HGF",
            "description": "MODIS 17A2H|A2HGF colormap"
          },
          {
            "name": "modis-17A3HGF",
            "value": "modis-17A3HGF",
            "description": "MODIS 17A3HGF colormap"
          },
          {
            "name": "modis-64A1",
            "value": "modis-64A1",
            "description": "MODIS 64A1 colormap"
          },
          {
            "name": "mtbs-severity",
            "value": "mtbs-severity",
            "description": "MTBS severity colormap"
          },
          {
            "name": "nipy_spectral",
            "value": "nipy_spectral",
            "description": "Nipy_spectral colormap - perceptually uniform colormap"
          },
          {
            "name": "nipy_spectral_r",
            "value": "nipy_spectral_r",
            "description": "Reversed nipy_spectral colormap"
          },
          {
            "name": "nrcan-lulc",
            "value": "nrcan-lulc",
            "description": "NRCAN land use/land cover colormap"
          },
          {
            "name": "ocean",
            "value": "ocean",
            "description": "Ocean colormap - sequential blue to white colormap"
          },
          {
            "name": "ocean_r",
            "value": "ocean_r",
            "description": "Reversed ocean colormap"
          },
          {
            "name": "oranges",
            "value": "oranges",
            "description": "Oranges colormap - sequential white to dark orange"
          },
          {
            "name": "oranges_r",
            "value": "oranges_r",
            "description": "Reversed oranges colormap"
          },
          {
            "name": "orrd",
            "value": "orrd",
            "description": "OrRd colormap - sequential white to dark red-orange"
          },
          {
            "name": "orrd_r",
            "value": "orrd_r",
            "description": "Reversed OrRd colormap"
          },
          {
            "name": "paired",
            "value": "paired",
            "description": "Paired colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "paired_r",
            "value": "paired_r",
            "description": "Reversed paired colormap"
          },
          {
            "name": "pastel1",
            "value": "pastel1",
            "description": "Pastel1 colormap - qualitative colormap with pastel colors"
          },
          {
            "name": "pastel1_r",
            "value": "pastel1_r",
            "description": "Reversed pastel1 colormap"
          },
          {
            "name": "pastel2",
            "value": "pastel2",
            "description": "Pastel2 colormap - qualitative colormap with pastel colors"
          },
          {
            "name": "pastel2_r",
            "value": "pastel2_r",
            "description": "Reversed pastel2 colormap"
          },
          {
            "name": "pink",
            "value": "pink",
            "description": "Pink colormap - sequential white to dark pink"
          },
          {
            "name": "pink_r",
            "value": "pink_r",
            "description": "Reversed pink colormap"
          },
          {
            "name": "piyg",
            "value": "piyg",
            "description": "PiYG colormap - diverging pink to green"
          },
          {
            "name": "piyg_r",
            "value": "piyg_r",
            "description": "Reversed PiYG colormap"
          },
          {
            "name": "plasma",
            "value": "plasma",
            "description": "Plasma colormap - sequential black to yellow colormap"
          },
          {
            "name": "plasma_r",
            "value": "plasma_r",
            "description": "Reversed plasma colormap"
          },
          {
            "name": "prgn",
            "value": "prgn",
            "description": "PRGn colormap - diverging purple to green"
          },
          {
            "name": "prgn_r",
            "value": "prgn_r",
            "description": "Reversed PRGn colormap"
          },
          {
            "name": "prism",
            "value": "prism",
            "description": "Prism colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "prism_r",
            "value": "prism_r",
            "description": "Reversed prism colormap"
          },
          {
            "name": "pubu",
            "value": "pubu",
            "description": "PuBu colormap - sequential white to dark blue"
          },
          {
            "name": "pubu_r",
            "value": "pubu_r",
            "description": "Reversed PuBu colormap"
          },
          {
            "name": "pubugn",
            "value": "pubugn",
            "description": "PuBuGn colormap - sequential white to dark blue-green"
          },
          {
            "name": "pubugn_r",
            "value": "pubugn_r",
            "description": "Reversed PuBuGn colormap"
          },
          {
            "name": "puor",
            "value": "puor",
            "description": "PuOr colormap - diverging purple to orange"
          },
          {
            "name": "puor_r",
            "value": "puor_r",
            "description": "Reversed PuOr colormap"
          },
          {
            "name": "purd",
            "value": "purd",
            "description": "PuRd colormap - sequential white to dark purple-red"
          },
          {
            "name": "purd_r",
            "value": "purd_r",
            "description": "Reversed PuRd colormap"
          },
          {
            "name": "purples",
            "value": "purples",
            "description": "Purples colormap - sequential white to dark purple"
          },
          {
            "name": "purples_r",
            "value": "purples_r",
            "description": "Reversed purples colormap"
          },
          {
            "name": "qpe",
            "value": "qpe",
            "description": "QPE colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "rainbow",
            "value": "rainbow",
            "description": "Rainbow colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "rainbow_r",
            "value": "rainbow_r",
            "description": "Reversed rainbow colormap"
          },
          {
            "name": "rdbu",
            "value": "rdbu",
            "description": "RdBu colormap - diverging red to blue"
          },
          {
            "name": "rdbu_r",
            "value": "rdbu_r",
            "description": "Reversed RdBu colormap"
          },
          {
            "name": "rdgy",
            "value": "rdgy",
            "description": "RdGy colormap - diverging red to gray"
          },
          {
            "name": "rdgy_r",
            "value": "rdgy_r",
            "description": "Reversed RdGy colormap"
          },
          {
            "name": "rdpu",
            "value": "rdpu",
            "description": "RdPu colormap - sequential white to dark red-purple"
          },
          {
            "name": "rdpu_r",
            "value": "rdpu_r",
            "description": "Reversed RdPu colormap"
          },
          {
            "name": "rdylbu",
            "value": "rdylbu",
            "description": "RdYlBu colormap - diverging red to yellow to blue"
          },
          {
            "name": "rdylbu_r",
            "value": "rdylbu_r",
            "description": "Reversed RdYlBu colormap"
          },
          {
            "name": "rdylgn",
            "value": "rdylgn",
            "description": "RdYlGn colormap - diverging red to yellow to green"
          },
          {
            "name": "rdylgn_r",
            "value": "rdylgn_r",
            "description": "Reversed RdYlGn colormap"
          },
          {
            "name": "reds",
            "value": "reds",
            "description": "Reds colormap - sequential white to dark red"
          },
          {
            "name": "reds_r",
            "value": "reds_r",
            "description": "Reversed reds colormap"
          },
          {
            "name": "rplumbo",
            "value": "rplumbo",
            "description": "Rplumbo colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "schwarzwald",
            "value": "schwarzwald",
            "description": "Schwarzwald colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "seismic",
            "value": "seismic",
            "description": "Seismic colormap - diverging blue to red"
          },
          {
            "name": "seismic_r",
            "value": "seismic_r",
            "description": "Reversed seismic colormap"
          },
          {
            "name": "set1",
            "value": "set1",
            "description": "Set1 colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "set1_r",
            "value": "set1_r",
            "description": "Reversed set1 colormap"
          },
          {
            "name": "set2",
            "value": "set2",
            "description": "Set2 colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "set2_r",
            "value": "set2_r",
            "description": "Reversed set2 colormap"
          },
          {
            "name": "set3",
            "value": "set3",
            "description": "Set3 colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "set3_r",
            "value": "set3_r",
            "description": "Reversed set3 colormap"
          },
          {
            "name": "spectral",
            "value": "spectral",
            "description": "Spectral colormap - diverging red to yellow to blue"
          },
          {
            "name": "spectral_r",
            "value": "spectral_r",
            "description": "Reversed spectral colormap"
          },
          {
            "name": "spring",
            "value": "spring",
            "description": "Spring colormap - sequential magenta to yellow"
          },
          {
            "name": "spring_r",
            "value": "spring_r",
            "description": "Reversed spring colormap"
          },
          {
            "name": "summer",
            "value": "summer",
            "description": "Summer colormap - sequential green to yellow"
          },
          {
            "name": "summer_r",
            "value": "summer_r",
            "description": "Reversed summer colormap"
          },
          {
            "name": "tab10",
            "value": "tab10",
            "description": "Tab10 colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "tab10_r",
            "value": "tab10_r",
            "description": "Reversed tab10 colormap"
          },
          {
            "name": "tab20",
            "value": "tab20",
            "description": "Tab20 colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "tab20_r",
            "value": "tab20_r",
            "description": "Reversed tab20 colormap"
          },
          {
            "name": "tab20b",
            "value": "tab20b",
            "description": "Tab20b colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "tab20b_r",
            "value": "tab20b_r",
            "description": "Reversed tab20b colormap"
          },
          {
            "name": "tab20c",
            "value": "tab20c",
            "description": "Tab20c colormap - qualitative colormap with distinct colors"
          },
          {
            "name": "tab20c_r",
            "value": "tab20c_r",
            "description": "Reversed tab20c colormap"
          },
          {
            "name": "terrain",
            "value": "terrain",
            "description": "Terrain colormap - sequential black to white with hue rotation"
          },
          {
            "name": "terrain_r",
            "value": "terrain_r",
            "description": "Reversed terrain colormap"
          },
          {
            "name": "twilight",
            "value": "twilight",
            "description": "Twilight colormap - diverging blue to red"
          },
          {
            "name": "twilight_r",
            "value": "twilight_r",
            "description": "Reversed twilight colormap"
          },
          {
            "name": "twilight_shifted",
            "value": "twilight_shifted",
            "description": "Twilight shifted colormap - diverging blue to red"
          },
          {
            "name": "twilight_shifted_r",
            "value": "twilight_shifted_r",
            "description": "Reversed twilight shifted colormap"
          },
          {
            "name": "usda-cdl",
            "value": "usda-cdl",
            "description": "USDA CDL colormap - land cover classification"
          },
          {
            "name": "usda-cdl-corn",
            "value": "usda-cdl-corn",
            "description": "USDA CDL corn colormap"
          },
          {
            "name": "usda-cdl-cotton",
            "value": "usda-cdl-cotton",
            "description": "USDA CDL cotton colormap"
          },
          {
            "name": "usda-cdl-soybeans",
            "value": "usda-cdl-soybeans",
            "description": "USDA CDL soybeans colormap"
          },
          {
            "name": "usda-cdl-wheat",
            "value": "usda-cdl-wheat",
            "description": "USDA CDL wheat colormap"
          },
          {
            "name": "usgs-lcmap",
            "value": "usgs-lcmap",
            "description": "USGS LCMAP colormap"
          },
          {
            "name": "viirs-10a1",
            "value": "viirs-10a1",
            "description": "VIIRS 10A1 colormap"
          },
          {
            "name": "viirs-13a1",
            "value": "viirs-13a1",
            "description": "VIIRS 13A1 colormap"
          },
          {
            "name": "viirs-14a1",
            "value": "viirs-14a1",
            "description": "VIIRS 14A1 colormap"
          },
          {
            "name": "viirs-15a2H",
            "value": "viirs-15a2H",
            "description": "VIIRS 15A2H colormap"
          },
          {
            "name": "viridis",
            "value": "viridis",
            "description": "Viridis colormap - sequential black to yellow colormap"
          },
          {
            "name": "viridis_r",
            "value": "viridis_r",
            "description": "Reversed viridis colormap"
          },
          {
            "name": "winter",
            "value": "winter",
            "description": "Winter colormap - sequential blue to green"
          },
          {
            "name": "winter_r",
            "value": "winter_r",
            "description": "Reversed winter colormap"
          },
          {
            "name": "wistia",
            "value": "wistia",
            "description": "Wistia colormap - sequential white to yellow"
          },
          {
            "name": "wistia_r",
            "value": "wistia_r",
            "description": "Reversed wistia colormap"
          },
          {
            "name": "ylgn",
            "value": "ylgn",
            "description": "YlGn colormap - sequential white to dark green"
          },
          {
            "name": "ylgn_r",
            "value": "ylgn_r",
            "description": "Reversed YlGn colormap"
          },
          {
            "name": "ylgnbu",
            "value": "ylgnbu",
            "description": "YlGnBu colormap - sequential white to dark blue-green"
          },
          {
            "name": "ylgnbu_r",
            "value": "ylgnbu_r",
            "description": "Reversed YlGnBu colormap"
          },
          {
            "name": "ylorbr",
            "value": "ylorbr",
            "description": "YlOrBr colormap - sequential white to dark orange-brown"
          },
          {
            "name": "ylorbr_r",
            "value": "ylorbr_r",
            "description": "Reversed YlOrBr colormap"
          },
          {
            "name": "ylorrd",
            "value": "ylorrd",
            "description": "YlOrRd colormap - sequential white to dark red-orange"
          },
          {
            "name": "ylorrd_r",
            "value": "ylorrd_r",
            "description": "Reversed YlOrRd colormap"
          }
        ]
      },
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "colormapName"
    },
    "MiscTileQueryParameters.rescale": {
      "name": "rescale",
      "in": "query",
      "description": "comma (',') delimited Min,Max range. Can set multiple time for multiple bands.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-ms-parameter-location": "method"
    },
    "MiscTileQueryParameters.returnMask": {
      "name": "return_mask",
      "in": "query",
      "description": "Add mask to the output data.",
      "required": false,
      "type": "boolean",
      "default": true,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "returnMask"
    },
    "MosaicSearchQueryParameters.exitwhenfull": {
      "name": "exitwhenfull",
      "in": "query",
      "description": "Return as soon as the geometry is fully covered (defaults to True in PgSTAC).",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    },
    "MosaicSearchQueryParameters.itemsLimit": {
      "name": "items_limit",
      "in": "query",
      "description": "Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "itemsLimit"
    },
    "MosaicSearchQueryParameters.scanLimit": {
      "name": "scan_limit",
      "in": "query",
      "description": "Return as soon as we scan N items (defaults to 10000 in PgSTAC).",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "scanLimit"
    },
    "MosaicSearchQueryParameters.skipcovered": {
      "name": "skipcovered",
      "in": "query",
      "description": "Skip any items that would show up completely under the previous items (defaults\nto True in PgSTAC).",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    },
    "MosaicSearchQueryParameters.timeLimit": {
      "name": "time_limit",
      "in": "query",
      "description": "Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "timeLimit"
    },
    "MosaicTileQueryParameters.buffer": {
      "name": "buffer",
      "in": "query",
      "description": "Buffer on each side of the given tile. It must be a multiple of `0.5`. Output\n**tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,\n1.0 = 258x258).",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "MosaicTileQueryParameters.collection": {
      "name": "collection",
      "in": "query",
      "description": "STAC Collection ID",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "MosaicTileQueryParameters.colorFormula": {
      "name": "color_formula",
      "in": "query",
      "description": "rio-color formula (info: https://github.com/mapbox/rio-color)",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "colorFormula"
    },
    "MosaicTileQueryParameters.pixelSelection": {
      "name": "pixel_selection",
      "in": "query",
      "description": "Pixel selection method.",
      "required": false,
      "type": "string",
      "default": "first",
      "enum": [
        "first",
        "highest",
        "lowest",
        "mean",
        "median",
        "stdev",
        "lastbandlow",
        "lastbandhight"
      ],
      "x-ms-enum": {
        "name": "PixelSelection",
        "modelAsString": true,
        "values": [
          {
            "name": "first",
            "value": "first",
            "description": "Select pixel from the first available image"
          },
          {
            "name": "highest",
            "value": "highest",
            "description": "Select pixel with the highest value"
          },
          {
            "name": "lowest",
            "value": "lowest",
            "description": "Select pixel with the lowest value"
          },
          {
            "name": "mean",
            "value": "mean",
            "description": "Calculate mean of available pixels"
          },
          {
            "name": "median",
            "value": "median",
            "description": "Calculate median of available pixels"
          },
          {
            "name": "stdev",
            "value": "stdev",
            "description": "Calculate standard deviation of available pixels"
          },
          {
            "name": "lastbandlow",
            "value": "lastbandlow",
            "description": "Select image with lowest value in the last band"
          },
          {
            "name": "lastbandhight",
            "value": "lastbandhight",
            "description": "Select image with highest value in the last band"
          }
        ]
      },
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "pixelSelection"
    },
    "MosaicTileQueryParameters.resampling": {
      "name": "resampling",
      "in": "query",
      "description": "Resampling method.",
      "required": false,
      "type": "string",
      "default": "nearest",
      "enum": [
        "nearest",
        "bilinear",
        "cubic",
        "cubic_spline",
        "lanczos",
        "average",
        "mode",
        "gauss",
        "rms"
      ],
      "x-ms-enum": {
        "name": "Resampling",
        "modelAsString": true,
        "values": [
          {
            "name": "nearest",
            "value": "nearest",
            "description": "Nearest neighbor - fastest method that selects the closest pixel value"
          },
          {
            "name": "bilinear",
            "value": "bilinear",
            "description": "Bilinear interpolation - calculates output values using a weighted average of 2x2 input cells"
          },
          {
            "name": "cubic",
            "value": "cubic",
            "description": "Cubic interpolation - uses a weighted average of 4x4 input cells for smoother results"
          },
          {
            "name": "cubic_spline",
            "value": "cubic_spline",
            "description": "Cubic spline interpolation - similar to cubic but preserves edges better"
          },
          {
            "name": "lanczos",
            "value": "lanczos",
            "description": "Lanczos windowed sinc resampling - high-quality with minimal artifacts"
          },
          {
            "name": "average",
            "value": "average",
            "description": "Average resampling - calculates the mean of all contributing pixels"
          },
          {
            "name": "mode",
            "value": "mode",
            "description": "Mode resampling - selects the most common value from contributing pixels"
          },
          {
            "name": "gauss",
            "value": "gauss",
            "description": "Gaussian weighted resampling - applies a gaussian weighting to contributing pixels"
          },
          {
            "name": "rms",
            "value": "rms",
            "description": "Root mean square resampling - useful for resampling error or deviation grids"
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "OdataQuery.skip": {
      "name": "$skip",
      "in": "query",
      "description": "The number of items to skip",
      "required": false,
      "type": "integer",
      "format": "int64",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "skip"
    },
    "OdataQuery.top": {
      "name": "$top",
      "in": "query",
      "description": "The number of items to return",
      "required": false,
      "type": "integer",
      "format": "int64",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "top"
    },
    "StatisticsQueryParameters.c": {
      "name": "c",
      "in": "query",
      "description": "List of values for which to report counts.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-ms-parameter-location": "method"
    },
    "StatisticsQueryParameters.categorical": {
      "name": "categorical",
      "in": "query",
      "description": "Return statistics for categorical dataset.",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    },
    "StatisticsQueryParameters.histogramBins": {
      "name": "histogram_bins",
      "in": "query",
      "description": "Defines the number of equal-width bins in the given range (10, by default).\n\nIf bins is a sequence (comma `,` delimited values), it defines a monotonically\nincreasing array of bin edges, including the rightmost edge, allowing for\nnon-uniform bin widths.\n\nlink: https://numpy.org/doc/stable/reference/generated/numpy.histogram.html",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "histogramBins"
    },
    "StatisticsQueryParameters.histogramRange": {
      "name": "histogram_range",
      "in": "query",
      "description": "Comma `,` delimited range of the bins.\n\nThe lower and upper range of the bins. If not provided, range is simply\n(a.min(), a.max()).\n\nValues outside the range are ignored. The first element of the range must be\nless than or equal to the second.\nrange affects the automatic bin computation as well.\n\nlink: https://numpy.org/doc/stable/reference/generated/numpy.histogram.html",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "histogramRange"
    },
    "StatisticsQueryParameters.maxSize": {
      "name": "max_size",
      "in": "query",
      "description": "Maximum dimension in pixels for the source data used to calculate statistics",
      "required": false,
      "type": "integer",
      "format": "int32",
      "default": 1024,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "maxSize"
    },
    "StatisticsQueryParameters.p": {
      "name": "p",
      "in": "query",
      "description": "List of percentile values (default to [2, 98]).",
      "required": false,
      "type": "array",
      "items": {
        "type": "integer",
        "format": "int32"
      },
      "collectionFormat": "multi",
      "x-ms-parameter-location": "method"
    },
    "StatisticsQueryParameters.resampling": {
      "name": "resampling",
      "in": "query",
      "description": "Resampling method.",
      "required": false,
      "type": "string",
      "default": "nearest",
      "enum": [
        "nearest",
        "bilinear",
        "cubic",
        "cubic_spline",
        "lanczos",
        "average",
        "mode",
        "gauss",
        "rms"
      ],
      "x-ms-enum": {
        "name": "Resampling",
        "modelAsString": true,
        "values": [
          {
            "name": "nearest",
            "value": "nearest",
            "description": "Nearest neighbor - fastest method that selects the closest pixel value"
          },
          {
            "name": "bilinear",
            "value": "bilinear",
            "description": "Bilinear interpolation - calculates output values using a weighted average of 2x2 input cells"
          },
          {
            "name": "cubic",
            "value": "cubic",
            "description": "Cubic interpolation - uses a weighted average of 4x4 input cells for smoother results"
          },
          {
            "name": "cubic_spline",
            "value": "cubic_spline",
            "description": "Cubic spline interpolation - similar to cubic but preserves edges better"
          },
          {
            "name": "lanczos",
            "value": "lanczos",
            "description": "Lanczos windowed sinc resampling - high-quality with minimal artifacts"
          },
          {
            "name": "average",
            "value": "average",
            "description": "Average resampling - calculates the mean of all contributing pixels"
          },
          {
            "name": "mode",
            "value": "mode",
            "description": "Mode resampling - selects the most common value from contributing pixels"
          },
          {
            "name": "gauss",
            "value": "gauss",
            "description": "Gaussian weighted resampling - applies a gaussian weighting to contributing pixels"
          },
          {
            "name": "rms",
            "value": "rms",
            "description": "Root mean square resampling - useful for resampling error or deviation grids"
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "SubDatasetQueryParameters.subdatasetBands": {
      "name": "subdataset_bands",
      "in": "query",
      "description": "The index of a subdataset band within the asset.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "csv",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "subdatasetBands"
    },
    "SubDatasetQueryParameters.subdatasetName": {
      "name": "subdataset_name",
      "in": "query",
      "description": "The name of a subdataset within the asset.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "subdatasetName"
    },
    "TileMatrixSetQueryParameters.buffer": {
      "name": "buffer",
      "in": "query",
      "description": "Buffer on each side of the given tile. It must be a multiple of `0.5`. Output\n**tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,\n1.0 = 258x258).",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "TileMatrixSetQueryParameters.colorFormula": {
      "name": "color_formula",
      "in": "query",
      "description": "rio-color formula (info: https://github.com/mapbox/rio-color)",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "colorFormula"
    },
    "TileMatrixSetQueryParameters.resampling": {
      "name": "resampling",
      "in": "query",
      "description": "Resampling method.",
      "required": false,
      "type": "string",
      "default": "nearest",
      "enum": [
        "nearest",
        "bilinear",
        "cubic",
        "cubic_spline",
        "lanczos",
        "average",
        "mode",
        "gauss",
        "rms"
      ],
      "x-ms-enum": {
        "name": "Resampling",
        "modelAsString": true,
        "values": [
          {
            "name": "nearest",
            "value": "nearest",
            "description": "Nearest neighbor - fastest method that selects the closest pixel value"
          },
          {
            "name": "bilinear",
            "value": "bilinear",
            "description": "Bilinear interpolation - calculates output values using a weighted average of 2x2 input cells"
          },
          {
            "name": "cubic",
            "value": "cubic",
            "description": "Cubic interpolation - uses a weighted average of 4x4 input cells for smoother results"
          },
          {
            "name": "cubic_spline",
            "value": "cubic_spline",
            "description": "Cubic spline interpolation - similar to cubic but preserves edges better"
          },
          {
            "name": "lanczos",
            "value": "lanczos",
            "description": "Lanczos windowed sinc resampling - high-quality with minimal artifacts"
          },
          {
            "name": "average",
            "value": "average",
            "description": "Average resampling - calculates the mean of all contributing pixels"
          },
          {
            "name": "mode",
            "value": "mode",
            "description": "Mode resampling - selects the most common value from contributing pixels"
          },
          {
            "name": "gauss",
            "value": "gauss",
            "description": "Gaussian weighted resampling - applies a gaussian weighting to contributing pixels"
          },
          {
            "name": "rms",
            "value": "rms",
            "description": "Root mean square resampling - useful for resampling error or deviation grids"
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "ZoomQueryParameters.maxzoom": {
      "name": "maxzoom",
      "in": "query",
      "description": "Overwrite default maxzoom.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "ZoomQueryParameters.minzoom": {
      "name": "minzoom",
      "in": "query",
      "description": "Overwrite default minzoom.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "ZxyPathParameters.x": {
      "name": "x",
      "in": "path",
      "description": "Column (X) index of the tile on the selected TileMatrix. It cannot exceed the\nMatrixHeight-1 for the selected TileMatrix.",
      "required": true,
      "type": "number",
      "format": "float",
      "x-ms-parameter-location": "method"
    },
    "ZxyPathParameters.y": {
      "name": "y",
      "in": "path",
      "description": "Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the\nMatrixWidth-1 for the selected TileMatrix.",
      "required": true,
      "type": "number",
      "format": "float",
      "x-ms-parameter-location": "method"
    },
    "ZxyPathParameters.z": {
      "name": "z",
      "in": "path",
      "description": "Identifier (Z) selecting one of the scales defined in the TileMatrixSet and\nrepresenting the scaleDenominator the tile.",
      "required": true,
      "type": "number",
      "format": "float",
      "x-ms-parameter-location": "method"
    }
  }
}
