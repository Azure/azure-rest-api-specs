{
  "swagger": "2.0",
  "info": {
    "version": "2017-09-01",
    "title": "RecoveryServicesBackupClient",
    "x-ms-code-generation-settings": {
      "internalConstructors": false
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics": {
      "get": {
        "tags": [
          "BackupFabrics"
        ],
        "description": "Retruns backup fabrics registered to Recovery Services Vault. Returns a pageable list of fabrics.",
        "operationId": "BackupFabrics_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericBackupFabricResourceList"
            }
          }
        },
        "x-ms-odata": "#/definitions/BMSBackupFabricsQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}": {
      "get": {
        "tags": [
          "BackupFabrics"
        ],
        "description": "Returns backup fabric registered to Recovery Services Vault.",
        "operationId": "BackupFabrics_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Name of the backup backup fabric.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericBackupFabricResource"
            }
          }
        },
        "x-ms-odata": "#/definitions/BMSBackupFabricQueryObject"
      },
      "put": {
        "tags": [
          "BackupFabrics"
        ],
        "description": "Create or Update the backup fabric in Recovery Services Vault",
        "operationId": "BackupFabrics_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Name of the backup backup fabric.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "fabric resource item",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericBackupFabricResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericBackupFabricResource"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BackupFabrics"
        ],
        "description": "Deletes the backup fabric in Recovery Services Vault",
        "operationId": "BackupFabrics_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Name of the backup backup fabric.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/policies": {
      "get": {
        "tags": [
          "ScopedBackupPolicies"
        ],
        "description": "Lists of backup policies associated with Recovery Services Vault.\r\nAPI provides pagination parameters to fetch scoped results.",
        "operationId": "ScopedBackupPolicies_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResourceList"
            }
          }
        },
        "x-ms-odata": "#/definitions/ProtectionPolicyQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/policies/{policyName}": {
      "get": {
        "tags": [
          "ScopedProtectionPolicies"
        ],
        "description": "Provides the details of the backup policies associated to Recovery Services Vault.\r\nThis is an asynchronous operation. Status of the operation can be fetched using\r\nGetScopedPolicyOperationResult API.",
        "operationId": "ScopedProtectionPolicies_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Backup policy information to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResource"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ScopedProtectionPolicies"
        ],
        "description": "Creates or modifies a backup policy. This is an asynchronous operation. Status of the\r\noperation can be fetched using GetScopedPolicyOperationResult API.",
        "operationId": "ScopedProtectionPolicies_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Backup policy to be created.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource backup policy",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResource"
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "ScopedProtectionPolicies"
        ],
        "description": "Deletes specified backup policy from your Backup Fabric. This is an asynchronous operation.\r\nStatus of the operation can be fetched using GetScopedPolicyOperationResult API.",
        "operationId": "ScopedProtectionPolicies_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Backup policy to be deleted.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/policies/{policyName}/operationResults/{operationId}": {
      "get": {
        "tags": [
          "ScopedProtectionPolicyOperationResults"
        ],
        "description": "Provides the result of an operation.",
        "operationId": "ScopedProtectionPolicyOperationResults_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Backup policy name whose operation's result needs to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation ID which represents the operation whose result needs to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResource"
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/policies/{policyName}/operations/{operationId}": {
      "get": {
        "tags": [
          "ScopedProtectionPolicyOperationStatuses"
        ],
        "description": "Provides the status of the asynchronous operations like backup, restore. The status can\r\nbe in progress, completed or failed. You can refer to the Operation Status enum for all\r\nthe possible states of an operation. Some operations create jobs. This method returns the\r\nlist of jobs associated with operation.",
        "operationId": "ScopedProtectionPolicyOperationStatuses_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Backup policy name whose operation's status needs to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation ID which represents an operation whose status needs to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers": {
      "get": {
        "tags": [
          "BackupProtectionContainersInFabric"
        ],
        "description": "Lists the containers registered to a backup fabric.",
        "operationId": "BackupProtectionContainersInFabric_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainerResourceList"
            }
          }
        },
        "x-ms-odata": "#/definitions/BMSContainerQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems": {
      "get": {
        "tags": [
          "BackupProtectedItemsInContainer"
        ],
        "description": "Provides a pageable list of all items that are backed up within a container.",
        "operationId": "BackupProtectedItemsInContainer_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectedItemResourceList"
            }
          }
        },
        "x-ms-odata": "#/definitions/ProtectedItemQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/restoreAccess": {
      "post": {
        "tags": [
          "ProtectionContainers"
        ],
        "description": "Grants restore access to container.",
        "operationId": "ProtectionContainers_AccessRestore",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Fabric name associated the container.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Name of the container for which access is required",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "restore access request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericRestoreAccessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericRestoreAccessResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AzureBackupServerContainer": {
      "description": "AzureBackupServer (DPMVenus) workload-specific protection container.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DpmContainer"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupServerContainer"
    },
    "AzureFileshareProtectedItem": {
      "description": "Azure File Share workload-specific backup item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the fileshare represented by this backup item.",
          "type": "string"
        },
        "protectionStatus": {
          "description": "Backup status of this backup item.",
          "type": "string"
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProtectionState",
            "modelAsString": true
          }
        },
        "healthStatus": {
          "description": "backups running status for this backup item.",
          "enum": [
            "Passed",
            "ActionRequired",
            "ActionSuggested",
            "Invalid"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HealthStatus",
            "modelAsString": true
          }
        },
        "lastBackupStatus": {
          "description": "Last backup operation status. Possible values: Healthy, Unhealthy.",
          "type": "string"
        },
        "lastBackupTime": {
          "format": "date-time",
          "description": "Timestamp of the last backup operation on this backup item.",
          "type": "string"
        },
        "extendedInfo": {
          "$ref": "#/definitions/AzureFileshareProtectedItemExtendedInfo",
          "description": "Additional information with this backup item."
        }
      },
      "x-ms-discriminator-value": "AzureFileShareProtectedItem"
    },
    "AzureFileshareProtectedItemExtendedInfo": {
      "description": "Additional information about Azure File Share backup item.",
      "type": "object",
      "properties": {
        "oldestRecoveryPoint": {
          "format": "date-time",
          "description": "The oldest backup copy available for this item in the service.",
          "type": "string"
        },
        "recoveryPointCount": {
          "format": "int32",
          "description": "Number of available backup copies associated with this backup item.",
          "type": "integer"
        },
        "policyState": {
          "description": "Indicates consistency of policy object and policy applied to this backup item.",
          "type": "string"
        }
      }
    },
    "AzureFileShareProtectionPolicy": {
      "description": "AzureStorage backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "workLoadType": {
          "description": "Type of workload for the backup management",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true
          }
        },
        "schedulePolicy": {
          "$ref": "#/definitions/SchedulePolicy",
          "description": "Backup schedule specified as part of backup policy."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy with the details on backup copy retention ranges."
        },
        "timeZone": {
          "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\".",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "AzureStorage"
    },
    "AzureIaaSClassicComputeVMContainer": {
      "description": "IaaS VM workload-specific backup item representing a classic virtual machine.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IaaSVMContainer"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
    },
    "AzureIaaSClassicComputeVMProtectedItem": {
      "description": "IaaS VM workload-specific backup item representing the Classic Compute VM.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureIaaSVMProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
    },
    "AzureIaaSComputeVMContainer": {
      "description": "IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IaaSVMContainer"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
    },
    "AzureIaaSComputeVMProtectedItem": {
      "description": "IaaS VM workload-specific backup item representing the Azure Resource Manager VM.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureIaaSVMProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
    },
    "AzureIaaSVMHealthDetails": {
      "description": "Azure IaaS VM workload-specific Health Details.",
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "description": "Health Code",
          "type": "integer"
        },
        "title": {
          "description": "Health Title",
          "type": "string"
        },
        "message": {
          "description": "Health Message",
          "type": "string"
        },
        "recommendations": {
          "description": "Health Recommended Actions",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AzureIaaSVMProtectedItem": {
      "description": "IaaS VM workload-specific backup item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the VM represented by this backup item.",
          "type": "string"
        },
        "virtualMachineId": {
          "description": "Fully qualified ARM ID of the virtual machine represented by this item.",
          "type": "string"
        },
        "protectionStatus": {
          "description": "Backup status of this backup item.",
          "type": "string"
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProtectionState",
            "modelAsString": true
          }
        },
        "healthStatus": {
          "description": "Health status of protected item",
          "enum": [
            "Passed",
            "ActionRequired",
            "ActionSuggested",
            "Invalid"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HealthStatus",
            "modelAsString": true
          }
        },
        "healthDetails": {
          "description": "Health details on this backup item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureIaaSVMHealthDetails"
          }
        },
        "lastBackupStatus": {
          "description": "Last backup operation status.",
          "type": "string"
        },
        "lastBackupTime": {
          "format": "date-time",
          "description": "Timestamp of the last backup operation on this backup item.",
          "type": "string"
        },
        "protectedItemDataId": {
          "description": "Data ID of the protected item.",
          "type": "string"
        },
        "extendedInfo": {
          "$ref": "#/definitions/AzureIaaSVMProtectedItemExtendedInfo",
          "description": "Additional information for this backup item."
        }
      },
      "x-ms-discriminator-value": "AzureIaaSVMProtectedItem"
    },
    "AzureIaaSVMProtectedItemExtendedInfo": {
      "description": "Additional information on Azure IaaS VM specific backup item.",
      "type": "object",
      "properties": {
        "oldestRecoveryPoint": {
          "format": "date-time",
          "description": "The oldest backup copy available for this backup item.",
          "type": "string"
        },
        "recoveryPointCount": {
          "format": "int32",
          "description": "Number of backup copies available for this backup item.",
          "type": "integer"
        },
        "policyInconsistent": {
          "description": "Specifies if backup policy associated with the backup item is inconsistent.",
          "type": "boolean"
        }
      }
    },
    "AzureIaaSVMProtectionPolicy": {
      "description": "IaaS VM workload-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "schedulePolicy": {
          "$ref": "#/definitions/SchedulePolicy",
          "description": "Backup schedule specified as part of backup policy."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy with the details on backup copy retention ranges."
        },
        "instantRpRetentionRangeInDays": {
          "format": "int32",
          "description": "Instant RP retention policy range in days",
          "type": "integer"
        },
        "timeZone": {
          "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\".",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "AzureIaasVM"
    },
    "AzureSQLAGWorkloadContainerProtectionContainer": {
      "description": "Container for SQL workloads under SQL Availability Group.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureWorkloadContainer"
        }
      ],
      "x-ms-discriminator-value": "SQLAGWorkLoadContainer"
    },
    "AzureSqlContainer": {
      "description": "Azure Sql workload-specific container.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "x-ms-discriminator-value": "AzureSqlContainer"
    },
    "AzureSqlProtectedItem": {
      "description": "Azure SQL workload-specific backup item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "properties": {
        "protectedItemDataId": {
          "description": "Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.",
          "type": "string"
        },
        "protectionState": {
          "description": "Backup state of the backed up item.",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProtectedItemState",
            "modelAsString": true
          }
        },
        "extendedInfo": {
          "$ref": "#/definitions/AzureSqlProtectedItemExtendedInfo",
          "description": "Additional information for this backup item."
        }
      },
      "x-ms-discriminator-value": "Microsoft.Sql/servers/databases"
    },
    "AzureSqlProtectedItemExtendedInfo": {
      "description": "Additional information on Azure Sql specific protected item.",
      "type": "object",
      "properties": {
        "oldestRecoveryPoint": {
          "format": "date-time",
          "description": "The oldest backup copy available for this item in the service.",
          "type": "string"
        },
        "recoveryPointCount": {
          "format": "int32",
          "description": "Number of available backup copies associated with this backup item.",
          "type": "integer"
        },
        "policyState": {
          "description": "State of the backup policy associated with this backup item.",
          "type": "string"
        }
      }
    },
    "AzureSqlProtectionPolicy": {
      "description": "Azure SQL workload-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy details."
        }
      },
      "x-ms-discriminator-value": "AzureSql"
    },
    "AzureStorageContainer": {
      "description": "Azure Storage Account workload-specific container.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "properties": {
        "sourceResourceId": {
          "description": "Fully qualified ARM url.",
          "type": "string"
        },
        "storageAccountVersion": {
          "description": "Storage account version.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "Resource group name of Recovery Services Vault.",
          "type": "string"
        },
        "protectedItemCount": {
          "format": "int64",
          "description": "Number of items backed up in this container.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "StorageContainer"
    },
    "AzureVMAppContainerProtectionContainer": {
      "description": "Container for SQL workloads under Azure Virtual Machines.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureWorkloadContainer"
        }
      ],
      "x-ms-discriminator-value": "VMAppContainer"
    },
    "AzureVmWorkloadProtectedItem": {
      "description": "Azure VM workload-specific protected item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the DB represented by this backup item.",
          "type": "string"
        },
        "serverName": {
          "description": "Host/Cluster Name for instance or AG",
          "type": "string"
        },
        "parentName": {
          "description": "Parent name of the DB such as Instance or Availability Group.",
          "type": "string"
        },
        "parentType": {
          "description": "Parent type of protected item, example: for a DB, standalone server or distributed",
          "type": "string"
        },
        "protectionStatus": {
          "description": "Backup status of this backup item.",
          "type": "string"
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProtectionState",
            "modelAsString": true
          }
        },
        "lastBackupStatus": {
          "description": "Last backup operation status. Possible values: Healthy, Unhealthy.",
          "enum": [
            "Invalid",
            "Healthy",
            "Unhealthy",
            "IRPending"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LastBackupStatus",
            "modelAsString": true
          }
        },
        "lastBackupTime": {
          "format": "date-time",
          "description": "Timestamp of the last backup operation on this backup item.",
          "type": "string"
        },
        "lastBackupErrorDetail": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "Error details in last backup"
        },
        "protectedItemDataSourceId": {
          "description": "Data ID of the protected item.",
          "type": "string"
        },
        "protectedItemHealthStatus": {
          "description": "Health status of the backup item, evaluated based on last heartbeat received",
          "enum": [
            "Invalid",
            "Healthy",
            "Unhealthy",
            "NotReachable",
            "IRPending"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProtectedItemHealthStatus",
            "modelAsString": true
          }
        },
        "extendedInfo": {
          "$ref": "#/definitions/AzureVmWorkloadProtectedItemExtendedInfo",
          "description": "Additional information for this backup item."
        }
      },
      "x-ms-discriminator-value": "AzureVmWorkloadProtectedItem"
    },
    "AzureVmWorkloadProtectedItemExtendedInfo": {
      "description": "Additional information on Azure Workload for SQL specific backup item.",
      "type": "object",
      "properties": {
        "oldestRecoveryPoint": {
          "format": "date-time",
          "description": "The oldest backup copy available for this backup item.",
          "type": "string"
        },
        "recoveryPointCount": {
          "format": "int32",
          "description": "Number of backup copies available for this backup item.",
          "type": "integer"
        },
        "policyState": {
          "description": "Indicates consistency of policy object and policy applied to this backup item.",
          "type": "string"
        }
      }
    },
    "AzureVmWorkloadProtectionPolicy": {
      "description": "Azure VM (Mercury) workload-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "workLoadType": {
          "description": "Type of workload for the backup management",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true
          }
        },
        "settings": {
          "$ref": "#/definitions/Settings",
          "description": "Common settings for the backup management"
        },
        "subProtectionPolicy": {
          "description": "List of sub-protection policies which includes schedule and retention",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubProtectionPolicy"
          }
        }
      },
      "x-ms-discriminator-value": "AzureWorkload"
    },
    "AzureVmWorkloadSAPAseDatabaseProtectedItem": {
      "description": "Azure VM workload-specific protected item representing SAP ASE Database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureVmWorkloadProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "AzureVmWorkloadSAPAseDatabase"
    },
    "AzureVmWorkloadSAPHanaDatabaseProtectedItem": {
      "description": "Azure VM workload-specific protected item representing SAP HANA Database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureVmWorkloadProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "AzureVmWorkloadSAPHanaDatabase"
    },
    "AzureVmWorkloadSQLDatabaseProtectedItem": {
      "description": "Azure VM workload-specific protected item representing SQL Database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureVmWorkloadProtectedItem"
        }
      ],
      "x-ms-discriminator-value": "AzureVmWorkloadSQLDatabase"
    },
    "AzureWorkloadContainer": {
      "description": "Container for the workloads running inside Azure Compute or Classic Compute.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "properties": {
        "sourceResourceId": {
          "description": "ARM ID of the virtual machine represented by this Azure Workload Container",
          "type": "string"
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "description": "Time stamp when this container was updated.",
          "type": "string"
        },
        "extendedInfo": {
          "$ref": "#/definitions/AzureWorkloadContainerExtendedInfo",
          "description": "Additional details of a workload container."
        },
        "workloadType": {
          "description": "Workload type for which registration was sent.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true
          }
        },
        "operationType": {
          "description": "Re-Do Operation",
          "enum": [
            "Invalid",
            "Register",
            "Reregister"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationType",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadContainer"
    },
    "AzureWorkloadContainerExtendedInfo": {
      "description": "Extended information of the container.",
      "type": "object",
      "properties": {
        "hostServerName": {
          "description": "Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.",
          "type": "string"
        },
        "inquiryInfo": {
          "$ref": "#/definitions/InquiryInfo",
          "description": "Inquiry Status for the container."
        },
        "nodesList": {
          "description": "List of the nodes in case of distributed container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DistributedNodesInfo"
          }
        }
      }
    },
    "BMSBackupFabricQueryObject": {
      "description": "Query parameters to fetch list of backup fabric.",
      "type": "object",
      "properties": {
        "expand": {
          "description": "attribute to add extended info",
          "type": "string"
        }
      }
    },
    "BMSBackupFabricsQueryObject": {
      "description": "Query parameters to fetch list of backup fabrics.",
      "type": "object",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for the backup fabric.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of the backup fabric.",
          "type": "string"
        },
        "expand": {
          "description": "Attribute to add extended info.",
          "type": "string"
        }
      }
    },
    "BMSContainerQueryObject": {
      "description": "The query filters that can be used with the list containers API.",
      "required": [
        "backupManagementType"
      ],
      "type": "object",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for this container.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true
          }
        },
        "containerType": {
          "description": "Type of container for filter",
          "enum": [
            "Invalid",
            "Unknown",
            "IaasVMContainer",
            "IaasVMServiceContainer",
            "DPMContainer",
            "AzureBackupServerContainer",
            "MABContainer",
            "Cluster",
            "AzureSqlContainer",
            "Windows",
            "VCenter",
            "VMAppContainer",
            "SQLAGWorkLoadContainer",
            "StorageContainer",
            "GenericContainer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ContainerType",
            "modelAsString": true
          }
        },
        "backupEngineName": {
          "description": "Backup engine name",
          "type": "string"
        },
        "fabricName": {
          "description": "Fabric name for filter",
          "type": "string"
        },
        "status": {
          "description": "Status of registration of this container with the Recovery Services Vault.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of this container.",
          "type": "string"
        }
      }
    },
    "ClientScriptForConnect": {
      "description": "Client script details for file / folder restore.",
      "type": "object",
      "properties": {
        "scriptContent": {
          "description": "File content of the client script for file / folder restore.",
          "type": "string"
        },
        "scriptExtension": {
          "description": "File extension of the client script for file / folder restore - .ps1 , .sh , etc.",
          "type": "string"
        },
        "osType": {
          "description": "OS type - Windows, Linux etc. for which this file / folder restore client script works.",
          "type": "string"
        },
        "url": {
          "description": "URL of Executable from where to source the content. If this is not null then ScriptContent should not be used",
          "type": "string"
        },
        "scriptNameSuffix": {
          "description": "Mandator suffix that should be added to the name of script that is given for download to user.\r\nIf its null or empty then , ignore it.",
          "type": "string"
        }
      }
    },
    "ContainerIdentityInfo": {
      "description": "Container identity information",
      "type": "object",
      "properties": {
        "uniqueName": {
          "description": "Unique name of the container",
          "type": "string"
        },
        "aadTenantId": {
          "description": "Protection container identity - AAD Tenant",
          "type": "string"
        },
        "servicePrincipalClientId": {
          "description": "Protection container identity - AAD Service Principal",
          "type": "string"
        },
        "audience": {
          "description": "Protection container identity - Audience",
          "type": "string"
        }
      }
    },
    "DailyRetentionFormat": {
      "description": "Daily retention format.",
      "type": "object",
      "properties": {
        "daysOfTheMonth": {
          "description": "List of days of the month.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Day"
          }
        }
      }
    },
    "DailyRetentionSchedule": {
      "description": "Daily retention schedule.",
      "type": "object",
      "properties": {
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        }
      }
    },
    "Day": {
      "description": "Day of the week.",
      "type": "object",
      "properties": {
        "date": {
          "format": "int32",
          "description": "Date of the month",
          "type": "integer"
        },
        "isLast": {
          "description": "Whether Date is last date of month",
          "type": "boolean"
        }
      }
    },
    "DistributedNodesInfo": {
      "description": "This is used to represent the various nodes of the distributed container.",
      "type": "object",
      "properties": {
        "nodeName": {
          "description": "Name of the node under a distributed container.",
          "type": "string"
        },
        "status": {
          "description": "Status of this Node.\r\nFailed | Succeeded",
          "type": "string"
        },
        "errorDetail": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "Error Details if the Status is non-success."
        }
      }
    },
    "DpmContainer": {
      "description": "DPM workload-specific protection container.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "properties": {
        "canReRegister": {
          "description": "Specifies whether the container is re-registrable.",
          "type": "boolean"
        },
        "containerId": {
          "description": "ID of container.",
          "type": "string"
        },
        "protectedItemCount": {
          "format": "int64",
          "description": "Number of protected items in the BackupEngine",
          "type": "integer"
        },
        "dpmAgentVersion": {
          "description": "Backup engine Agent version",
          "type": "string"
        },
        "dpmServers": {
          "description": "List of BackupEngines protecting the container",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "upgradeAvailable": {
          "description": "To check if upgrade available",
          "type": "boolean"
        },
        "protectionStatus": {
          "description": "Protection status of the container.",
          "type": "string"
        },
        "extendedInfo": {
          "$ref": "#/definitions/DPMContainerExtendedInfo",
          "description": "Extended Info of the container."
        }
      },
      "x-ms-discriminator-value": "DPMContainer"
    },
    "DPMContainerExtendedInfo": {
      "description": "Additional information of the DPMContainer.",
      "type": "object",
      "properties": {
        "lastRefreshedAt": {
          "format": "date-time",
          "description": "Last refresh time of the DPMContainer.",
          "type": "string"
        }
      }
    },
    "DPMProtectedItem": {
      "description": "Additional information on Backup engine specific backup item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the managed item",
          "type": "string"
        },
        "backupEngineName": {
          "description": "Backup Management server protecting this backup item",
          "type": "string"
        },
        "protectionState": {
          "description": "Protection state of the backupengine",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProtectedItemState",
            "modelAsString": true
          }
        },
        "isScheduledForDeferredDelete": {
          "description": "To check if backup item is scheduled for deferred delete",
          "type": "boolean"
        },
        "extendedInfo": {
          "$ref": "#/definitions/DPMProtectedItemExtendedInfo",
          "description": "Extended info of the backup item."
        }
      },
      "x-ms-discriminator-value": "DPMProtectedItem"
    },
    "DPMProtectedItemExtendedInfo": {
      "description": "Additional information of DPM Protected item.",
      "type": "object",
      "properties": {
        "protectableObjectLoadPath": {
          "description": "Attribute to provide information on various DBs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "protected": {
          "description": "To check if backup item is disk protected.",
          "type": "boolean"
        },
        "isPresentOnCloud": {
          "description": "To check if backup item is cloud protected.",
          "type": "boolean"
        },
        "lastBackupStatus": {
          "description": "Last backup status information on backup item.",
          "type": "string"
        },
        "lastRefreshedAt": {
          "format": "date-time",
          "description": "Last refresh time on backup item.",
          "type": "string"
        },
        "oldestRecoveryPoint": {
          "format": "date-time",
          "description": "Oldest cloud recovery point time.",
          "type": "string"
        },
        "recoveryPointCount": {
          "format": "int32",
          "description": "cloud recovery point count.",
          "type": "integer"
        },
        "onPremiseOldestRecoveryPoint": {
          "format": "date-time",
          "description": "Oldest disk recovery point time.",
          "type": "string"
        },
        "onPremiseLatestRecoveryPoint": {
          "format": "date-time",
          "description": "latest disk recovery point time.",
          "type": "string"
        },
        "onPremiseRecoveryPointCount": {
          "format": "int32",
          "description": "disk recovery point count.",
          "type": "integer"
        },
        "isCollocated": {
          "description": "To check if backup item is collocated.",
          "type": "boolean"
        },
        "protectionGroupName": {
          "description": "Protection group name of the backup item.",
          "type": "string"
        },
        "diskStorageUsedInBytes": {
          "description": "Used Disk storage in bytes.",
          "type": "string"
        },
        "totalDiskStorageSizeInBytes": {
          "description": "total Disk storage in bytes.",
          "type": "string"
        }
      }
    },
    "ErrorDetail": {
      "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error Message related to the Code.",
          "type": "string"
        },
        "recommendations": {
          "description": "List of recommendation strings.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GenericBackupFabric": {
      "description": "The generic backup fabric class.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the backup fabric.",
          "type": "string"
        },
        "backupManagementType": {
          "description": "Type of backup management for the backup fabric.",
          "type": "string"
        },
        "version": {
          "description": "Version of the backup fabric.",
          "type": "string"
        }
      },
      "discriminator": "backupManagementType"
    },
    "GenericBackupFabricResource": {
      "description": "The generic backup fabric class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GenericBackupFabric",
          "description": "GenericBackupFabricResource properties"
        }
      }
    },
    "GenericBackupFabricResourceList": {
      "description": "List of GenericBackupFabric resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericBackupFabricResource"
          }
        }
      }
    },
    "GenericContainer": {
      "description": "Base class for generic container of backup items",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "properties": {
        "fabricName": {
          "description": "Name of the container's fabric",
          "type": "string"
        },
        "extendedInformation": {
          "$ref": "#/definitions/GenericContainerExtendedInfo",
          "description": "Extended information (not returned in List container API calls)"
        }
      },
      "x-ms-discriminator-value": "GenericContainer"
    },
    "GenericContainerExtendedInfo": {
      "description": "Container extended information",
      "type": "object",
      "properties": {
        "rawCertData": {
          "description": "Public key of container cert",
          "type": "string"
        },
        "containerIdentityInfo": {
          "$ref": "#/definitions/ContainerIdentityInfo",
          "description": "Container identity information"
        },
        "serviceEndpoints": {
          "description": "Azure Backup Service Endpoints for the container",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GenericProtectedItem": {
      "description": "Base class for backup items.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the container.",
          "type": "string"
        },
        "policyState": {
          "description": "Indicates consistency of policy object and policy applied to this backup item.",
          "type": "string"
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProtectionState",
            "modelAsString": true
          }
        },
        "protectedItemId": {
          "format": "int64",
          "description": "Data Plane Service ID of the protected item.",
          "type": "integer"
        },
        "sourceAssociations": {
          "description": "Loosely coupled (type, value) associations (example - parent of a protected item)",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fabricName": {
          "description": "Name of this backup item's fabric.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "GenericProtectedItem"
    },
    "GenericProtectionPolicy": {
      "description": "Azure VM (Mercury) workload-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "subProtectionPolicy": {
          "description": "List of sub-protection policies which includes schedule and retention",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubProtectionPolicy"
          }
        },
        "timeZone": {
          "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\".",
          "type": "string"
        },
        "fabricName": {
          "description": "Name of this policy's fabric.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "GenericProtectionPolicy"
    },
    "GenericRestoreAccessRequest": {
      "description": "Generic class for restore access request.",
      "type": "object",
      "properties": {
        "protectionContainerId": {
          "description": "ARM ResourceId of container that will gain access to container request in uri.",
          "type": "string"
        },
        "duration": {
          "format": "duration",
          "description": "Duration for which the access has been requested.",
          "type": "string"
        }
      }
    },
    "GenericRestoreAccessResponse": {
      "description": "Generic class for restore access response.",
      "type": "object",
      "properties": {
        "serviceEndpoints": {
          "description": "Azure Backup Service Endpoints of the container in grant access request URL",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "expiryTime": {
          "format": "date-time",
          "description": "Time till which access has been granted.",
          "type": "string"
        }
      }
    },
    "IaaSVMContainer": {
      "description": "IaaS VM workload-specific container.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "properties": {
        "virtualMachineId": {
          "description": "Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.",
          "type": "string"
        },
        "virtualMachineVersion": {
          "description": "Specifies whether the container represents a Classic or an Azure Resource Manager VM.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "Resource group name of Recovery Services Vault.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "IaaSVMContainer"
    },
    "InquiryInfo": {
      "description": "Details about inquired protectable items under a given container.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Inquiry Status for this container such as\r\nInProgress | Failed | Succeeded",
          "type": "string"
        },
        "errorDetail": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "Error Details if the Status is non-success."
        },
        "inquiryDetails": {
          "description": "Inquiry Details which will have workload specific details.\r\nFor e.g. - For SQL and oracle this will contain different details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadInquiryDetails"
          }
        }
      }
    },
    "InquiryValidation": {
      "description": "Validation for inquired protectable items under a given container.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status for the Inquiry Validation.",
          "type": "string"
        },
        "errorDetail": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "Error Detail in case the status is non-success."
        }
      }
    },
    "InstantItemRecoveryTarget": {
      "description": "Target details for file / folder restore.",
      "type": "object",
      "properties": {
        "clientScripts": {
          "description": "List of client scripts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClientScriptForConnect"
          }
        }
      }
    },
    "LogSchedulePolicy": {
      "description": "Log policy schedule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SchedulePolicy"
        }
      ],
      "properties": {
        "scheduleFrequencyInMins": {
          "format": "int32",
          "description": "Frequency of the log schedule operation of this policy in minutes.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "LogSchedulePolicy"
    },
    "LongTermRetentionPolicy": {
      "description": "Long term retention policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RetentionPolicy"
        }
      ],
      "properties": {
        "dailySchedule": {
          "$ref": "#/definitions/DailyRetentionSchedule",
          "description": "Daily retention schedule of the protection policy."
        },
        "weeklySchedule": {
          "$ref": "#/definitions/WeeklyRetentionSchedule",
          "description": "Weekly retention schedule of the protection policy."
        },
        "monthlySchedule": {
          "$ref": "#/definitions/MonthlyRetentionSchedule",
          "description": "Monthly retention schedule of the protection policy."
        },
        "yearlySchedule": {
          "$ref": "#/definitions/YearlyRetentionSchedule",
          "description": "Yearly retention schedule of the protection policy."
        }
      },
      "x-ms-discriminator-value": "LongTermRetentionPolicy"
    },
    "LongTermSchedulePolicy": {
      "description": "Long term policy schedule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SchedulePolicy"
        }
      ],
      "x-ms-discriminator-value": "LongTermSchedulePolicy"
    },
    "MabContainer": {
      "description": "Container with items backed up using MAB backup engine.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "properties": {
        "canReRegister": {
          "description": "Can the container be registered one more time.",
          "type": "boolean"
        },
        "containerId": {
          "format": "int64",
          "description": "ContainerID represents the container.",
          "type": "integer"
        },
        "protectedItemCount": {
          "format": "int64",
          "description": "Number of items backed up in this container.",
          "type": "integer"
        },
        "agentVersion": {
          "description": "Agent version of this container.",
          "type": "string"
        },
        "extendedInfo": {
          "$ref": "#/definitions/MabContainerExtendedInfo",
          "description": "Additional information for this container"
        },
        "mabContainerHealthDetails": {
          "description": "Health details on this mab container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MABContainerHealthDetails"
          }
        },
        "containerHealthState": {
          "description": "Health state of mab container.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Windows"
    },
    "MabContainerExtendedInfo": {
      "description": "Additional information of the container.",
      "type": "object",
      "properties": {
        "lastRefreshedAt": {
          "format": "date-time",
          "description": "Time stamp when this container was refreshed.",
          "type": "string"
        },
        "backupItemType": {
          "description": "Type of backup items associated with this container.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupItemType",
            "modelAsString": true
          }
        },
        "backupItems": {
          "description": "List of backup items associated with this container.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "policyName": {
          "description": "Backup policy associated with this container.",
          "type": "string"
        },
        "lastBackupStatus": {
          "description": "Latest backup status of this container.",
          "type": "string"
        }
      }
    },
    "MABContainerHealthDetails": {
      "description": "MAB workload-specific Health Details.",
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "description": "Health Code",
          "type": "integer"
        },
        "title": {
          "description": "Health Title",
          "type": "string"
        },
        "message": {
          "description": "Health Message",
          "type": "string"
        },
        "recommendations": {
          "description": "Health Recommended Actions",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MabFileFolderProtectedItem": {
      "description": "MAB workload-specific backup item.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "properties": {
        "friendlyName": {
          "description": "Friendly name of this backup item.",
          "type": "string"
        },
        "computerName": {
          "description": "Name of the computer associated with this backup item.",
          "type": "string"
        },
        "lastBackupStatus": {
          "description": "Status of last backup operation.",
          "type": "string"
        },
        "protectionState": {
          "description": "Protected, ProtectionStopped, IRPending or ProtectionError",
          "type": "string"
        },
        "isScheduledForDeferredDelete": {
          "description": "Specifies if the item is scheduled for deferred deletion.",
          "type": "boolean"
        },
        "deferredDeleteSyncTimeInUTC": {
          "format": "int64",
          "description": "Sync time for deferred deletion.",
          "type": "integer"
        },
        "extendedInfo": {
          "$ref": "#/definitions/MabFileFolderProtectedItemExtendedInfo",
          "description": "Additional information with this backup item."
        }
      },
      "x-ms-discriminator-value": "MabFileFolderProtectedItem"
    },
    "MabFileFolderProtectedItemExtendedInfo": {
      "description": "Additional information on the backed up item.",
      "type": "object",
      "properties": {
        "lastRefreshedAt": {
          "format": "date-time",
          "description": "Last time when the agent data synced to service.",
          "type": "string"
        },
        "oldestRecoveryPoint": {
          "format": "date-time",
          "description": "The oldest backup copy available.",
          "type": "string"
        },
        "recoveryPointCount": {
          "format": "int32",
          "description": "Number of backup copies associated with the backup item.",
          "type": "integer"
        }
      }
    },
    "MabProtectionPolicy": {
      "description": "Mab container-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "schedulePolicy": {
          "$ref": "#/definitions/SchedulePolicy",
          "description": "Backup schedule of backup policy."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy details."
        }
      },
      "x-ms-discriminator-value": "MAB"
    },
    "MonthlyRetentionSchedule": {
      "description": "Monthly retention schedule.",
      "type": "object",
      "properties": {
        "retentionScheduleFormatType": {
          "description": "Retention schedule format type for monthly retention policy.",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RetentionScheduleFormat",
            "modelAsString": true
          }
        },
        "retentionScheduleDaily": {
          "$ref": "#/definitions/DailyRetentionFormat",
          "description": "Daily retention format for monthly retention policy."
        },
        "retentionScheduleWeekly": {
          "$ref": "#/definitions/WeeklyRetentionFormat",
          "description": "Weekly retention format for monthly retention policy."
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        }
      }
    },
    "OperationStatus": {
      "description": "Operation status.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the operation.",
          "type": "string"
        },
        "name": {
          "description": "Name of the operation.",
          "type": "string"
        },
        "status": {
          "description": "Operation status.",
          "enum": [
            "Invalid",
            "InProgress",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationStatusValues",
            "modelAsString": true
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "Operation start time. Format: ISO-8601.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "Operation end time. Format: ISO-8601.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/OperationStatusError",
          "description": "Error information related to this operation."
        },
        "properties": {
          "$ref": "#/definitions/OperationStatusExtendedInfo",
          "description": "Additional information associated with this operation."
        }
      }
    },
    "OperationStatusError": {
      "description": "Error information associated with operation status call.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code of the operation failure.",
          "type": "string"
        },
        "message": {
          "description": "Error message displayed if the operation failure.",
          "type": "string"
        }
      }
    },
    "OperationStatusExtendedInfo": {
      "description": "Base class for additional information of operation status.",
      "required": [
        "objectType"
      ],
      "type": "object",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "objectType"
    },
    "OperationStatusJobExtendedInfo": {
      "description": "Operation status job extended info.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "properties": {
        "jobId": {
          "description": "ID of the job created for this protected item.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "OperationStatusJobExtendedInfo"
    },
    "OperationStatusJobsExtendedInfo": {
      "description": "Operation status extended info for list of jobs.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "properties": {
        "jobIds": {
          "description": "IDs of the jobs created for the protected item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failedJobsError": {
          "description": "Stores all the failed jobs along with the corresponding error codes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "OperationStatusJobsExtendedInfo"
    },
    "OperationStatusProvisionILRExtendedInfo": {
      "description": "Operation status extended info for ILR provision action.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "properties": {
        "recoveryTarget": {
          "$ref": "#/definitions/InstantItemRecoveryTarget",
          "description": "Target details for file / folder restore."
        }
      },
      "x-ms-discriminator-value": "OperationStatusProvisionILRExtendedInfo"
    },
    "ProtectedItem": {
      "description": "Base class for backup items.",
      "type": "object",
      "properties": {
        "protectedItemType": {
          "description": "backup item type.",
          "type": "string"
        },
        "backupManagementType": {
          "description": "Type of backup managemenent for the backed up item.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true
          }
        },
        "workloadType": {
          "description": "Type of workload this item represents.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true
          }
        },
        "containerName": {
          "description": "Unique name of container",
          "type": "string"
        },
        "sourceResourceId": {
          "description": "ARM ID of the resource to be backed up.",
          "type": "string"
        },
        "policyId": {
          "description": "ID of the backup policy with which this item is backed up.",
          "type": "string"
        },
        "lastRecoveryPoint": {
          "format": "date-time",
          "description": "Timestamp when the last (latest) backup copy was created for this backup item.",
          "type": "string"
        },
        "backupSetName": {
          "description": "Name of the backup set the backup item belongs to",
          "type": "string"
        },
        "createMode": {
          "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
          "enum": [
            "Invalid",
            "Default",
            "Recover"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          }
        }
      },
      "discriminator": "protectedItemType"
    },
    "ProtectedItemQueryObject": {
      "description": "Filters to list backup items.",
      "type": "object",
      "properties": {
        "healthState": {
          "description": "Health State for the backed up item.",
          "enum": [
            "Passed",
            "ActionRequired",
            "ActionSuggested",
            "Invalid"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HealthState",
            "modelAsString": true
          }
        },
        "backupManagementType": {
          "description": "Backup management type for the backed up item.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true
          }
        },
        "itemType": {
          "description": "Type of workload this item represents.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataSourceType",
            "modelAsString": true
          }
        },
        "policyName": {
          "description": "Backup policy name associated with the backup item.",
          "type": "string"
        },
        "containerName": {
          "description": "Name of the container.",
          "type": "string"
        },
        "backupEngineName": {
          "description": "Backup Engine name",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of protected item",
          "type": "string"
        },
        "fabricName": {
          "description": "Name of the fabric.",
          "type": "string"
        },
        "backupSetName": {
          "description": "Name of the backup set.",
          "type": "string"
        }
      }
    },
    "ProtectedItemResource": {
      "description": "Base class for backup items.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectedItem",
          "description": "ProtectedItemResource properties"
        }
      }
    },
    "ProtectedItemResourceList": {
      "description": "List of ProtectedItem resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectedItemResource"
          }
        }
      }
    },
    "ProtectionContainer": {
      "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the container.",
          "type": "string"
        },
        "backupManagementType": {
          "description": "Type of backup managemenent for the container.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true
          }
        },
        "registrationStatus": {
          "description": "Status of registration of the container with the Recovery Services Vault.",
          "type": "string"
        },
        "healthStatus": {
          "description": "Status of health of the container.",
          "type": "string"
        },
        "containerType": {
          "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\r\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\r\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\r\nBackup is VMAppContainer",
          "enum": [
            "Invalid",
            "Unknown",
            "IaasVMContainer",
            "IaasVMServiceContainer",
            "DPMContainer",
            "AzureBackupServerContainer",
            "MABContainer",
            "Cluster",
            "AzureSqlContainer",
            "Windows",
            "VCenter",
            "VMAppContainer",
            "SQLAGWorkLoadContainer",
            "StorageContainer",
            "GenericContainer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ContainerType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "containerType"
    },
    "ProtectionContainerResource": {
      "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionContainer",
          "description": "ProtectionContainerResource properties"
        }
      }
    },
    "ProtectionContainerResourceList": {
      "description": "List of ProtectionContainer resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectionContainerResource"
          }
        }
      }
    },
    "ProtectionPolicy": {
      "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
      "required": [
        "backupManagementType"
      ],
      "type": "object",
      "properties": {
        "protectedItemsCount": {
          "format": "int32",
          "description": "Number of items associated with this policy.",
          "type": "integer"
        },
        "backupManagementType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "backupManagementType"
    },
    "ProtectionPolicyQueryObject": {
      "description": "Filters the list backup policies API.",
      "type": "object",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for the backup policy.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true
          }
        },
        "fabricName": {
          "description": "Fabric name for filter",
          "type": "string"
        },
        "workloadType": {
          "description": "Workload type for the backup policy.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true
          }
        }
      }
    },
    "ProtectionPolicyResource": {
      "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionPolicy",
          "description": "ProtectionPolicyResource properties"
        }
      }
    },
    "ProtectionPolicyResourceList": {
      "description": "List of ProtectionPolicy resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectionPolicyResource"
          }
        }
      }
    },
    "Resource": {
      "description": "ARM Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id represents the complete path to the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource name associated with the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "eTag": {
          "description": "Optional ETag.",
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceList": {
      "description": "Base for all lists of resources.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The uri to fetch the next page of resources. Call ListNext() fetches next page of resources.",
          "type": "string"
        }
      }
    },
    "RetentionDuration": {
      "description": "Retention duration.",
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.\r\nFor example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.",
          "type": "integer"
        },
        "durationType": {
          "description": "Retention duration type of retention policy.",
          "enum": [
            "Invalid",
            "Days",
            "Weeks",
            "Months",
            "Years"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RetentionDurationType",
            "modelAsString": true
          }
        }
      }
    },
    "RetentionPolicy": {
      "description": "Base class for retention policy.",
      "required": [
        "retentionPolicyType"
      ],
      "type": "object",
      "properties": {
        "retentionPolicyType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "retentionPolicyType"
    },
    "SchedulePolicy": {
      "description": "Base class for backup schedule.",
      "required": [
        "schedulePolicyType"
      ],
      "type": "object",
      "properties": {
        "schedulePolicyType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "schedulePolicyType"
    },
    "Settings": {
      "description": "Common settings field for backup management",
      "type": "object",
      "properties": {
        "timeZone": {
          "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\".",
          "type": "string"
        },
        "issqlcompression": {
          "description": "SQL compression flag",
          "type": "boolean"
        },
        "isCompression": {
          "description": "Workload compression flag. This has been added so that 'isSqlCompression'\r\nwill be deprecated once clients upgrade to consider this flag.",
          "type": "boolean"
        }
      }
    },
    "SimpleRetentionPolicy": {
      "description": "Simple policy retention.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RetentionPolicy"
        }
      ],
      "properties": {
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of the protection policy."
        }
      },
      "x-ms-discriminator-value": "SimpleRetentionPolicy"
    },
    "SimpleSchedulePolicy": {
      "description": "Simple policy schedule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SchedulePolicy"
        }
      ],
      "properties": {
        "scheduleRunFrequency": {
          "description": "Frequency of the schedule operation of this policy.",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ScheduleRunType",
            "modelAsString": true
          }
        },
        "scheduleRunDays": {
          "description": "List of days of week this schedule has to be run.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "scheduleRunTimes": {
          "description": "List of times of day this schedule has to be run.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "scheduleWeeklyFrequency": {
          "format": "int32",
          "description": "At every number weeks this schedule has to be run.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "SimpleSchedulePolicy"
    },
    "SubProtectionPolicy": {
      "description": "Sub-protection policy which includes schedule and retention",
      "type": "object",
      "properties": {
        "policyType": {
          "description": "Type of backup policy type",
          "enum": [
            "Invalid",
            "Full",
            "Differential",
            "Log",
            "CopyOnlyFull"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PolicyType",
            "modelAsString": true
          }
        },
        "schedulePolicy": {
          "$ref": "#/definitions/SchedulePolicy",
          "description": "Backup schedule specified as part of backup policy."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy with the details on backup copy retention ranges."
        }
      }
    },
    "WeeklyRetentionFormat": {
      "description": "Weekly retention format.",
      "type": "object",
      "properties": {
        "daysOfTheWeek": {
          "description": "List of days of the week.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "weeksOfTheMonth": {
          "description": "List of weeks of month.",
          "type": "array",
          "items": {
            "enum": [
              "First",
              "Second",
              "Third",
              "Fourth",
              "Last",
              "Invalid"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "WeekOfMonth",
              "modelAsString": false
            }
          }
        }
      }
    },
    "WeeklyRetentionSchedule": {
      "description": "Weekly retention schedule.",
      "type": "object",
      "properties": {
        "daysOfTheWeek": {
          "description": "List of days of week for weekly retention policy.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        }
      }
    },
    "WorkloadInquiryDetails": {
      "description": "Details of an inquired protectable item.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the Workload such as SQL, Oracle etc.",
          "type": "string"
        },
        "itemCount": {
          "format": "int64",
          "description": "Contains the protectable item Count inside this Container.",
          "type": "integer"
        },
        "inquiryValidation": {
          "$ref": "#/definitions/InquiryValidation",
          "description": "Inquiry validation such as permissions and other backup validations."
        }
      }
    },
    "YearlyRetentionSchedule": {
      "description": "Yearly retention schedule.",
      "type": "object",
      "properties": {
        "retentionScheduleFormatType": {
          "description": "Retention schedule format for yearly retention policy.",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RetentionScheduleFormat",
            "modelAsString": true
          }
        },
        "monthsOfYear": {
          "description": "List of months of year of yearly retention policy.",
          "type": "array",
          "items": {
            "enum": [
              "Invalid",
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "MonthOfYear",
              "modelAsString": false
            }
          }
        },
        "retentionScheduleDaily": {
          "$ref": "#/definitions/DailyRetentionFormat",
          "description": "Daily retention format for yearly retention policy."
        },
        "retentionScheduleWeekly": {
          "$ref": "#/definitions/WeeklyRetentionFormat",
          "description": "Weekly retention format for yearly retention policy."
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        }
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription Id.",
      "required": true,
      "type": "string"
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group where the recovery services vault is present.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "VaultName": {
      "name": "vaultName",
      "in": "path",
      "description": "The name of the recovery services vault.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "description": "Client Api Version.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account."
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}