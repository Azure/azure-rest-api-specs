{
  "swagger": "2.0",
  "info": {
    "version": "2020-07-01",
    "title": "RecoveryServicesBackupClient",
    "x-ms-code-generation-settings": {
      "internalConstructors": false
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/backup": {
      "post": {
        "tags": [
          "Backups"
        ],
        "description": "Triggers backup for specified backed up item. This is an asynchronous operation. To know the status of the\r\noperation, call GetProtectedItemOperationResult API.",
        "operationId": "Backups_Trigger",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Fabric name associated with the backup item.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Container name associated with the backup item.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backup item for which backup needs to be triggered.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource backup request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequestResource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Trigger Backup": {
            "$ref": "./examples/Common/TriggerBackup_Post.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints": {
      "get": {
        "tags": [
          "RecoveryPoints"
        ],
        "description": "Lists the backup copies for the backed up item.",
        "operationId": "RecoveryPoints_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Fabric name associated with the backed up item.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Container name associated with the backed up item.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item whose backup copies are to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPointResourceList"
            }
          }
        },
        "x-ms-odata": "#/definitions/BMSRPQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get Protected Azure Vm Recovery Points": {
            "$ref": "./examples/AzureIaasVm/RecoveryPoints_List.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}": {
      "get": {
        "tags": [
          "RecoveryPoints"
        ],
        "description": "Provides the information of the backed up data identified using RecoveryPointID. This is an asynchronous operation.\r\nTo know the status of the operation, call the GetProtectedItemOperationResult API.",
        "operationId": "RecoveryPoints_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "fabricName",
            "in": "path",
            "description": "Fabric name associated with backed up item.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Container name associated with backed up item.",
            "required": true,
            "type": "string"
          },
          {
            "name": "protectedItemName",
            "in": "path",
            "description": "Backed up item name whose backup data needs to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryPointId",
            "in": "path",
            "description": "RecoveryPointID represents the backed up data to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPointResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure Vm Recovery Point Details": {
            "$ref": "./examples/AzureIaasVm/RecoveryPoints_Get.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies": {
      "get": {
        "tags": [
          "BackupPolicies"
        ],
        "description": "Lists of backup policies associated with Recovery Services Vault. API provides pagination parameters to fetch\r\nscoped results.",
        "operationId": "BackupPolicies_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResourceList"
            }
          }
        },
        "x-ms-odata": "#/definitions/ProtectionPolicyQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List protection policies with backupManagementType filter as AzureIaasVm": {
            "$ref": "./examples/AzureIaasVm/BackupPolicies_List.json"
          },
          "List protection policies with backupManagementType filter as AzureWorkload": {
            "$ref": "./examples/AzureWorkload/BackupPolicies_List.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}": {
      "get": {
        "tags": [
          "ProtectionPolicies"
        ],
        "description": "Provides the details of the backup policies associated to Recovery Services Vault. This is an asynchronous\r\noperation. Status of the operation can be fetched using GetProtectionPolicyOperationResult API.",
        "operationId": "ProtectionPolicies_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Backup policy information to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResource"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Get Azure IaasVm Protection Policy Details": {
            "$ref": "./examples/AzureIaasVm/ProtectionPolicies_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ProtectionPolicies"
        ],
        "description": "Creates or modifies a backup policy. This is an asynchronous operation. Status of the operation can be fetched\r\nusing GetProtectionPolicyOperationResult API.",
        "operationId": "ProtectionPolicies_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Backup policy to be created.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "resource backup policy",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResource"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create or Update Simple Azure Vm Protection Policy": {
            "$ref": "./examples/AzureIaasVm/ProtectionPolicies_CreateOrUpdate_Simple.json"
          },
          "Create or Update Full Azure Vm Protection Policy": {
            "$ref": "./examples/AzureIaasVm/ProtectionPolicies_CreateOrUpdate_Complex.json"
          },
          "Create or Update Full Azure Workload Protection Policy": {
            "$ref": "./examples/AzureWorkload/ProtectionPolicies_CreateOrUpdate_Complex.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ProtectionPolicies"
        ],
        "description": "Deletes specified backup policy from your Recovery Services Vault. This is an asynchronous operation. Status of the\r\noperation can be fetched using GetProtectionPolicyOperationResult API.",
        "operationId": "ProtectionPolicies_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Backup policy to be deleted.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete Azure Vm Protection Policy": {
            "$ref": "./examples/AzureIaasVm/ProtectionPolicies_Delete.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}/operationResults/{operationId}": {
      "get": {
        "tags": [
          "ProtectionPolicyOperationResults"
        ],
        "description": "Provides the result of an operation.",
        "operationId": "ProtectionPolicyOperationResults_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "Backup policy name whose operation's result needs to be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "Operation ID which represents the operation whose result needs to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResource"
            }
          }
        },
        "x-ms-examples": {
          "Get Protection Policy Operation Results": {
            "$ref": "./examples/AzureIaasVm/ProtectionPolicyOperationResults_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig/operationStatus/{operationId}": {
      "get": {
        "tags": [
          "DataMove"
        ],
        "description": "Fetches operation status for data move operation on vault",
        "operationId": "GetOperationStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../2020-02-02/bms.json#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/NewErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get OperationStatus": {
            "$ref": "./examples/BackupDataMove/BackupDataMoveOperationStatus_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig/prepareDataMove": {
      "post": {
        "tags": [
          "DataMove"
        ],
        "description": "Prepares source vault for Data Move operation",
        "operationId": "BMSPrepareDataMove",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Prepare data move request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrepareDataMoveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/NewErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Prepare Data Move": {
            "$ref": "./examples/BackupDataMove/PrepareDataMove_Post.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig/operationResults/{operationId}": {
      "get": {
        "tags": [
          "BMSPrepareDataMoveOperationResult"
        ],
        "description": "Fetches Operation Result for Prepare Data Move",
        "operationId": "BMSPrepareDataMoveOperationResult_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VaultStorageConfigOperationResultResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed. ",
            "schema": {
              "$ref": "#/definitions/NewErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Get operation result for PrepareDataMove": {
            "$ref": "./examples/BackupDataMove/PrepareDataMoveOperationResult_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig/triggerDataMove": {
      "post": {
        "tags": [
          "DataMove"
        ],
        "description": "Triggers Data Move Operation on target vault",
        "operationId": "BMSTriggerDataMove",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Trigger data move request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriggerDataMoveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/NewErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Trigger Data Move": {
            "$ref": "./examples/BackupDataMove/TriggerDataMove_Post.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AzureFileShareBackupRequest": {
      "description": "AzureFileShare workload-specific backup request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackupRequest"
        }
      ],
      "properties": {
        "recoveryPointExpiryTimeInUTC": {
          "format": "date-time",
          "description": "Backup copy will expire after the time specified (UTC).",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "AzureFileShareBackupRequest"
    },
    "AzureFileShareProtectionPolicy": {
      "description": "AzureStorage backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "workLoadType": {
          "description": "Type of workload for the backup management",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true
          }
        },
        "schedulePolicy": {
          "$ref": "#/definitions/SchedulePolicy",
          "description": "Backup schedule specified as part of backup policy."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy with the details on backup copy retention ranges."
        },
        "timeZone": {
          "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\".",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "AzureStorage"
    },
    "AzureFileShareRecoveryPoint": {
      "description": "Azure File Share workload specific backup copy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPoint"
        }
      ],
      "properties": {
        "recoveryPointType": {
          "description": "Type of the backup copy. Specifies whether it is a crash consistent backup or app consistent.",
          "type": "string"
        },
        "recoveryPointTime": {
          "format": "date-time",
          "description": "Time at which this backup copy was created.",
          "type": "string"
        },
        "fileShareSnapshotUri": {
          "description": "Contains Url to the snapshot of fileshare, if applicable",
          "type": "string"
        },
        "recoveryPointSizeInGB": {
          "format": "int32",
          "description": "Contains recovery point size",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "AzureFileShareRecoveryPoint"
    },
    "AzureIaaSVMProtectionPolicy": {
      "description": "IaaS VM workload-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "instantRPDetails": {
          "$ref": "#/definitions/InstantRPAdditionalDetails"
        },
        "schedulePolicy": {
          "$ref": "#/definitions/SchedulePolicy",
          "description": "Backup schedule specified as part of backup policy."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy with the details on backup copy retention ranges."
        },
        "instantRpRetentionRangeInDays": {
          "format": "int32",
          "description": "Instant RP retention policy range in days",
          "type": "integer"
        },
        "timeZone": {
          "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\".",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "AzureIaasVM"
    },
    "AzureSqlProtectionPolicy": {
      "description": "Azure SQL workload-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy details."
        }
      },
      "x-ms-discriminator-value": "AzureSql"
    },
    "AzureVmWorkloadProtectionPolicy": {
      "description": "Azure VM (Mercury) workload-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "workLoadType": {
          "description": "Type of workload for the backup management",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true
          }
        },
        "settings": {
          "$ref": "#/definitions/Settings",
          "description": "Common settings for the backup management"
        },
        "subProtectionPolicy": {
          "description": "List of sub-protection policies which includes schedule and retention",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubProtectionPolicy"
          }
        },
        "makePolicyConsistent": {
          "description": "Fix the policy inconsistency",
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "AzureWorkload"
    },
    "AzureWorkloadBackupRequest": {
      "description": "AzureWorkload workload-specific backup request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackupRequest"
        }
      ],
      "properties": {
        "backupType": {
          "description": "Type of backup, viz. Full, Differential, Log or CopyOnlyFull",
          "enum": [
            "Invalid",
            "Full",
            "Differential",
            "Log",
            "CopyOnlyFull",
            "Incremental"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "backupType",
            "modelAsString": true
          }
        },
        "enableCompression": {
          "description": "Bool for Compression setting",
          "type": "boolean"
        },
        "recoveryPointExpiryTimeInUTC": {
          "format": "date-time",
          "description": "Backup copy will expire after the time specified (UTC).",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadBackupRequest"
    },
    "AzureWorkloadPointInTimeRecoveryPoint": {
      "description": "Recovery point specific to PointInTime",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureWorkloadRecoveryPoint"
        }
      ],
      "properties": {
        "timeRanges": {
          "description": "List of log ranges",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PointInTimeRange"
          }
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadPointInTimeRecoveryPoint"
    },
    "AzureWorkloadRecoveryPoint": {
      "description": "Workload specific recovery point, specifically encapsulates full/diff recovery point",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPoint"
        }
      ],
      "properties": {
        "recoveryPointTimeInUTC": {
          "format": "date-time",
          "description": "UTC time at which recovery point was created",
          "type": "string"
        },
        "type": {
          "description": "Type of restore point",
          "enum": [
            "Invalid",
            "Full",
            "Log",
            "Differential",
            "Incremental"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RestorePointType",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadRecoveryPoint"
    },
    "AzureWorkloadSAPHanaPointInTimeRecoveryPoint": {
      "description": "Recovery point specific to PointInTime in SAPHana",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureWorkloadPointInTimeRecoveryPoint"
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSAPHanaPointInTimeRecoveryPoint"
    },
    "AzureWorkloadSAPHanaRecoveryPoint": {
      "description": "SAPHana specific recoverypoint, specifically encapsulates full/diff recoverypoints",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureWorkloadRecoveryPoint"
        }
      ],
      "x-ms-discriminator-value": "AzureWorkloadSAPHanaRecoveryPoint"
    },
    "AzureWorkloadSQLPointInTimeRecoveryPoint": {
      "description": "Recovery point specific to PointInTime",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureWorkloadSQLRecoveryPoint"
        }
      ],
      "properties": {
        "timeRanges": {
          "description": "List of log ranges",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PointInTimeRange"
          }
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadSQLPointInTimeRecoveryPoint"
    },
    "AzureWorkloadSQLRecoveryPoint": {
      "description": "SQL specific recoverypoint, specifically encapsulates full/diff recoverypoint along with extended info",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AzureWorkloadRecoveryPoint"
        }
      ],
      "properties": {
        "extendedInfo": {
          "$ref": "#/definitions/AzureWorkloadSQLRecoveryPointExtendedInfo",
          "description": "Extended Info that provides data directory details. Will be populated in two cases:\r\nWhen a specific recovery point is accessed using GetRecoveryPoint\r\nOr when ListRecoveryPoints is called for Log RP only with ExtendedInfo query filter"
        }
      },
      "x-ms-discriminator-value": "AzureWorkloadSQLRecoveryPoint"
    },
    "AzureWorkloadSQLRecoveryPointExtendedInfo": {
      "description": "Extended info class details",
      "type": "object",
      "properties": {
        "dataDirectoryTimeInUTC": {
          "format": "date-time",
          "description": "UTC time at which data directory info was captured",
          "type": "string"
        },
        "dataDirectoryPaths": {
          "description": "List of data directory paths during restore operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SQLDataDirectory"
          }
        }
      }
    },
    "BackupRequest": {
      "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
      "required": [
        "objectType"
      ],
      "type": "object",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "objectType"
    },
    "BackupRequestResource": {
      "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupRequest",
          "description": "BackupRequestResource properties"
        }
      }
    },
    "BEKDetails": {
      "description": "BEK is bitlocker encryption key.",
      "type": "object",
      "properties": {
        "secretUrl": {
          "description": "Secret is BEK.",
          "type": "string"
        },
        "secretVaultId": {
          "description": "ID of the Key Vault where this Secret is stored.",
          "type": "string"
        },
        "secretData": {
          "description": "BEK data.",
          "type": "string"
        }
      }
    },
    "BMSRPQueryObject": {
      "description": "Filters to list backup copies.",
      "type": "object",
      "properties": {
        "startDate": {
          "format": "date-time",
          "description": "Backup copies created after this time.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Backup copies created before this time.",
          "type": "string"
        },
        "restorePointQueryType": {
          "description": "RestorePoint type",
          "enum": [
            "Invalid",
            "Full",
            "Log",
            "Differential",
            "FullAndDifferential",
            "All",
            "Incremental"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RestorePointQueryType",
            "modelAsString": true
          }
        },
        "extendedInfo": {
          "description": "In Get Recovery Point, it tells whether extended information about recovery point is asked.",
          "type": "boolean"
        }
      }
    },
    "ClientScriptForConnect": {
      "description": "Client script details for file / folder restore.",
      "type": "object",
      "properties": {
        "scriptContent": {
          "description": "File content of the client script for file / folder restore.",
          "type": "string"
        },
        "scriptExtension": {
          "description": "File extension of the client script for file / folder restore - .ps1 , .sh , etc.",
          "type": "string"
        },
        "osType": {
          "description": "OS type - Windows, Linux etc. for which this file / folder restore client script works.",
          "type": "string"
        },
        "url": {
          "description": "URL of Executable from where to source the content. If this is not null then ScriptContent should not be used",
          "type": "string"
        },
        "scriptNameSuffix": {
          "description": "Mandatory suffix that should be added to the name of script that is given for download to user.\r\nIf its null or empty then , ignore it.",
          "type": "string"
        }
      }
    },
    "DailyRetentionFormat": {
      "description": "Daily retention format.",
      "type": "object",
      "properties": {
        "daysOfTheMonth": {
          "description": "List of days of the month.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Day"
          }
        }
      }
    },
    "DailyRetentionSchedule": {
      "description": "Daily retention schedule.",
      "type": "object",
      "properties": {
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        }
      }
    },
    "Day": {
      "description": "Day of the week.",
      "type": "object",
      "properties": {
        "date": {
          "format": "int32",
          "description": "Date of the month",
          "type": "integer"
        },
        "isLast": {
          "description": "Whether Date is last date of month",
          "type": "boolean"
        }
      }
    },
    "DiskInformation": {
      "description": "Disk information",
      "type": "object",
      "properties": {
        "lun": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "GenericProtectionPolicy": {
      "description": "Azure VM (Mercury) workload-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "subProtectionPolicy": {
          "description": "List of sub-protection policies which includes schedule and retention",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubProtectionPolicy"
          }
        },
        "timeZone": {
          "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\".",
          "type": "string"
        },
        "fabricName": {
          "description": "Name of this policy's fabric.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "GenericProtectionPolicy"
    },
    "GenericRecoveryPoint": {
      "description": "Generic backup copy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPoint"
        }
      ],
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the backup copy.",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "Type of the backup copy.",
          "type": "string"
        },
        "recoveryPointTime": {
          "format": "date-time",
          "description": "Time at which this backup copy was created.",
          "type": "string"
        },
        "recoveryPointAdditionalInfo": {
          "description": "Additional information associated with this backup copy.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "GenericRecoveryPoint"
    },
    "IaasVMBackupRequest": {
      "description": "IaaS VM workload-specific backup request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BackupRequest"
        }
      ],
      "properties": {
        "recoveryPointExpiryTimeInUTC": {
          "format": "date-time",
          "description": "Backup copy will expire after the time specified (UTC).",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "IaasVMBackupRequest"
    },
    "IaasVMRecoveryPoint": {
      "description": "IaaS VM workload specific backup copy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPoint"
        }
      ],
      "properties": {
        "recoveryPointType": {
          "description": "Type of the backup copy.",
          "type": "string"
        },
        "recoveryPointTime": {
          "format": "date-time",
          "description": "Time at which this backup copy was created.",
          "type": "string"
        },
        "recoveryPointAdditionalInfo": {
          "description": "Additional information associated with this backup copy.",
          "type": "string"
        },
        "sourceVMStorageType": {
          "description": "Storage type of the VM whose backup copy is created.",
          "type": "string"
        },
        "isSourceVMEncrypted": {
          "description": "Identifies whether the VM was encrypted when the backup copy is created.",
          "type": "boolean"
        },
        "keyAndSecret": {
          "$ref": "#/definitions/KeyAndSecretDetails",
          "description": "Required details for recovering an encrypted VM. Applicable only when IsSourceVMEncrypted is true."
        },
        "isInstantIlrSessionActive": {
          "description": "Is the session to recover items from this backup copy still active.",
          "type": "boolean"
        },
        "recoveryPointTierDetails": {
          "description": "Recovery point tier information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPointTierInformation"
          }
        },
        "isManagedVirtualMachine": {
          "description": "Whether VM is with Managed Disks",
          "type": "boolean"
        },
        "virtualMachineSize": {
          "description": "Virtual Machine Size",
          "type": "string"
        },
        "originalStorageAccountOption": {
          "description": "Original Storage Account Option",
          "type": "boolean"
        },
        "osType": {
          "description": "OS type",
          "type": "string"
        },
        "recoveryPointDiskConfiguration": {
          "$ref": "#/definitions/RecoveryPointDiskConfiguration",
          "description": "Disk configuration"
        }
      },
      "x-ms-discriminator-value": "IaasVMRecoveryPoint"
    },
    "InstantItemRecoveryTarget": {
      "description": "Target details for file / folder restore.",
      "type": "object",
      "properties": {
        "clientScripts": {
          "description": "List of client scripts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClientScriptForConnect"
          }
        }
      }
    },
    "InstantRPAdditionalDetails": {
      "type": "object",
      "properties": {
        "azureBackupRGNamePrefix": {
          "type": "string"
        },
        "azureBackupRGNameSuffix": {
          "type": "string"
        }
      }
    },
    "KEKDetails": {
      "description": "KEK is encryption key for BEK.",
      "type": "object",
      "properties": {
        "keyUrl": {
          "description": "Key is KEK.",
          "type": "string"
        },
        "keyVaultId": {
          "description": "Key Vault ID where this Key is stored.",
          "type": "string"
        },
        "keyBackupData": {
          "description": "KEK data.",
          "type": "string"
        }
      }
    },
    "KeyAndSecretDetails": {
      "description": "BEK is bitlocker key.\r\nKEK is encryption key for BEK\r\nIf the VM was encrypted then we will store following details :\r\n1. Secret(BEK) - Url + Backup Data + vaultId.\r\n2. Key(KEK) - Url + Backup Data + vaultId.\r\n3. EncryptionMechanism\r\nBEK and KEK can potentially have different vault ids.",
      "type": "object",
      "properties": {
        "kekDetails": {
          "$ref": "#/definitions/KEKDetails",
          "description": "KEK is encryption key for BEK."
        },
        "bekDetails": {
          "$ref": "#/definitions/BEKDetails",
          "description": "BEK is bitlocker encryption key."
        },
        "encryptionMechanism": {
          "description": "Encryption mechanism: None/ SinglePass/ DoublePass",
          "type": "string"
        }
      }
    },
    "LogSchedulePolicy": {
      "description": "Log policy schedule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SchedulePolicy"
        }
      ],
      "properties": {
        "scheduleFrequencyInMins": {
          "format": "int32",
          "description": "Frequency of the log schedule operation of this policy in minutes.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "LogSchedulePolicy"
    },
    "LongTermRetentionPolicy": {
      "description": "Long term retention policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RetentionPolicy"
        }
      ],
      "properties": {
        "dailySchedule": {
          "$ref": "#/definitions/DailyRetentionSchedule",
          "description": "Daily retention schedule of the protection policy."
        },
        "weeklySchedule": {
          "$ref": "#/definitions/WeeklyRetentionSchedule",
          "description": "Weekly retention schedule of the protection policy."
        },
        "monthlySchedule": {
          "$ref": "#/definitions/MonthlyRetentionSchedule",
          "description": "Monthly retention schedule of the protection policy."
        },
        "yearlySchedule": {
          "$ref": "#/definitions/YearlyRetentionSchedule",
          "description": "Yearly retention schedule of the protection policy."
        }
      },
      "x-ms-discriminator-value": "LongTermRetentionPolicy"
    },
    "LongTermSchedulePolicy": {
      "description": "Long term policy schedule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SchedulePolicy"
        }
      ],
      "x-ms-discriminator-value": "LongTermSchedulePolicy"
    },
    "MabProtectionPolicy": {
      "description": "Mab container-specific backup policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "properties": {
        "schedulePolicy": {
          "$ref": "#/definitions/SchedulePolicy",
          "description": "Backup schedule of backup policy."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy details."
        }
      },
      "x-ms-discriminator-value": "MAB"
    },
    "MonthlyRetentionSchedule": {
      "description": "Monthly retention schedule.",
      "type": "object",
      "properties": {
        "retentionScheduleFormatType": {
          "description": "Retention schedule format type for monthly retention policy.",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RetentionScheduleFormat",
            "modelAsString": true
          }
        },
        "retentionScheduleDaily": {
          "$ref": "#/definitions/DailyRetentionFormat",
          "description": "Daily retention format for monthly retention policy."
        },
        "retentionScheduleWeekly": {
          "$ref": "#/definitions/WeeklyRetentionFormat",
          "description": "Weekly retention format for monthly retention policy."
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        }
      }
    },
    "OperationStatus": {
      "description": "Operation status.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the operation.",
          "type": "string"
        },
        "name": {
          "description": "Name of the operation.",
          "type": "string"
        },
        "status": {
          "description": "Operation status.",
          "enum": [
            "Invalid",
            "InProgress",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationStatusValues",
            "modelAsString": true
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "Operation start time. Format: ISO-8601.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "Operation end time. Format: ISO-8601.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/OperationStatusError",
          "description": "Error information related to this operation."
        }
      }
    },
    "OperationStatusError": {
      "description": "Error information associated with operation status call.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code of the operation failure.",
          "type": "string"
        },
        "message": {
          "description": "Error message displayed if the operation failure.",
          "type": "string"
        }
      }
    },
    "OperationStatusExtendedInfo": {
      "description": "Base class for additional information of operation status.",
      "required": [
        "objectType"
      ],
      "type": "object",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "objectType"
    },
    "OperationStatusJobExtendedInfo": {
      "description": "Operation status job extended info.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "properties": {
        "jobId": {
          "description": "ID of the job created for this protected item.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "OperationStatusJobExtendedInfo"
    },
    "OperationStatusJobsExtendedInfo": {
      "description": "Operation status extended info for list of jobs.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "properties": {
        "jobIds": {
          "description": "IDs of the jobs created for the protected item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "failedJobsError": {
          "description": "Stores all the failed jobs along with the corresponding error codes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "OperationStatusJobsExtendedInfo"
    },
    "OperationStatusProvisionILRExtendedInfo": {
      "description": "Operation status extended info for ILR provision action.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "properties": {
        "recoveryTarget": {
          "$ref": "#/definitions/InstantItemRecoveryTarget",
          "description": "Target details for file / folder restore."
        }
      },
      "x-ms-discriminator-value": "OperationStatusProvisionILRExtendedInfo"
    },
    "OperationStatusRecoveryPointExtendedInfo": {
      "description": "Operation status extended info for Updated Recovery Point.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "properties": {
        "updatedRecoveryPoint": {
          "$ref": "#/definitions/RecoveryPoint",
          "description": "Recovery Point info with updated source snapshot URI"
        },
        "deletedBackupItemVersion": {
          "description": "In case the share is in soft-deleted state, populate this field with deleted backup item",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "OperationStatusRecoveryPointExtendedInfo"
    },
    "PointInTimeRange": {
      "description": "Provides details for log ranges",
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Start time of the time range for log recovery.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time of the time range for log recovery.",
          "type": "string"
        }
      }
    },
    "PrepareDataMoveRequest": {
      "description": "Prepare DataMove Request",
      "required": [
        "targetResourceId",
        "targetRegion",
        "dataMoveLevel"
      ],
      "type": "object",
      "properties": {
        "targetResourceId": {
          "description": "ARM Id of target vault",
          "type": "string"
        },
        "targetRegion": {
          "description": "Target Region",
          "type": "string"
        },
        "dataMoveLevel": {
          "description": "DataMove Level",
          "enum": [
            "Invalid",
            "Vault",
            "Container"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataMoveLevel",
            "modelAsString": true
          }
        },
        "sourceContainerArmIds": {
          "description": "Source Container ArmIds\r\nThis needs to be populated only if DataMoveLevel is set to container",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoreMoved": {
          "description": "Ignore the artifacts which are already moved.",
          "type": "boolean"
        }
      }
    },
    "PrepareDataMoveResponse": {
      "description": "Prepare DataMove Response",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/VaultStorageConfigOperationResultResponse"
        }
      ],
      "properties": {
        "correlationId": {
          "description": "Co-relationId for move operation",
          "type": "string"
        },
        "sourceVaultProperties": {
          "description": "Source Vault Properties",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "PrepareDataMoveResponse"
    },
    "ProtectionPolicy": {
      "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
      "required": [
        "backupManagementType"
      ],
      "type": "object",
      "properties": {
        "protectedItemsCount": {
          "format": "int32",
          "description": "Number of items associated with this policy.",
          "type": "integer"
        },
        "backupManagementType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "backupManagementType"
    },
    "ProtectionPolicyQueryObject": {
      "description": "Filters the list backup policies API.",
      "type": "object",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for the backup policy.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql",
            "AzureStorage",
            "AzureWorkload",
            "DefaultBackup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupManagementType",
            "modelAsString": true
          }
        },
        "fabricName": {
          "description": "Fabric name for filter",
          "type": "string"
        },
        "workloadType": {
          "description": "Workload type for the backup policy.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "VMwareVM",
            "SystemState",
            "Client",
            "GenericDataSource",
            "SQLDataBase",
            "AzureFileShare",
            "SAPHanaDatabase",
            "SAPAseDatabase"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkloadType",
            "modelAsString": true
          }
        }
      }
    },
    "ProtectionPolicyResource": {
      "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionPolicy",
          "description": "ProtectionPolicyResource properties"
        }
      }
    },
    "ProtectionPolicyResourceList": {
      "description": "List of ProtectionPolicy resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectionPolicyResource"
          }
        }
      }
    },
    "RecoveryPoint": {
      "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
      "required": [
        "objectType"
      ],
      "type": "object",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "objectType"
    },
    "RecoveryPointDiskConfiguration": {
      "description": "Disk configuration",
      "type": "object",
      "properties": {
        "numberOfDisksIncludedInBackup": {
          "format": "int32",
          "description": "Number of disks included in backup",
          "type": "integer"
        },
        "numberOfDisksAttachedToVm": {
          "format": "int32",
          "description": "Number of disks attached to the VM",
          "type": "integer"
        },
        "includedDiskList": {
          "description": "Information of disks included in backup",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskInformation"
          }
        },
        "excludedDiskList": {
          "description": "Information of disks excluded from backup",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskInformation"
          }
        }
      }
    },
    "RecoveryPointResource": {
      "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPoint",
          "description": "RecoveryPointResource properties"
        }
      }
    },
    "RecoveryPointResourceList": {
      "description": "List of RecoveryPoint resources",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "properties": {
        "value": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPointResource"
          }
        }
      }
    },
    "RecoveryPointTierInformation": {
      "description": "Recovery point tier information.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Recovery point tier type.",
          "enum": [
            "Invalid",
            "InstantRP",
            "HardenedRP"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecoveryPointTierType",
            "modelAsString": false
          }
        },
        "status": {
          "description": "Recovery point tier status.",
          "enum": [
            "Invalid",
            "Valid",
            "Disabled",
            "Deleted"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecoveryPointTierStatus",
            "modelAsString": false
          }
        }
      }
    },
    "Resource": {
      "description": "ARM Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id represents the complete path to the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource name associated with the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "eTag": {
          "description": "Optional ETag.",
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceList": {
      "description": "Base for all lists of resources.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The uri to fetch the next page of resources. Call ListNext() fetches next page of resources.",
          "type": "string"
        }
      }
    },
    "RetentionDuration": {
      "description": "Retention duration.",
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times.\r\nFor example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.",
          "type": "integer"
        },
        "durationType": {
          "description": "Retention duration type of retention policy.",
          "enum": [
            "Invalid",
            "Days",
            "Weeks",
            "Months",
            "Years"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RetentionDurationType",
            "modelAsString": true
          }
        }
      }
    },
    "RetentionPolicy": {
      "description": "Base class for retention policy.",
      "required": [
        "retentionPolicyType"
      ],
      "type": "object",
      "properties": {
        "retentionPolicyType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "retentionPolicyType"
    },
    "SchedulePolicy": {
      "description": "Base class for backup schedule.",
      "required": [
        "schedulePolicyType"
      ],
      "type": "object",
      "properties": {
        "schedulePolicyType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "schedulePolicyType"
    },
    "Settings": {
      "description": "Common settings field for backup management",
      "type": "object",
      "properties": {
        "timeZone": {
          "description": "TimeZone optional input as string. For example: TimeZone = \"Pacific Standard Time\".",
          "type": "string"
        },
        "issqlcompression": {
          "description": "SQL compression flag",
          "type": "boolean"
        },
        "isCompression": {
          "description": "Workload compression flag. This has been added so that 'isSqlCompression'\r\nwill be deprecated once clients upgrade to consider this flag.",
          "type": "boolean"
        }
      }
    },
    "SimpleRetentionPolicy": {
      "description": "Simple policy retention.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RetentionPolicy"
        }
      ],
      "properties": {
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of the protection policy."
        }
      },
      "x-ms-discriminator-value": "SimpleRetentionPolicy"
    },
    "SimpleSchedulePolicy": {
      "description": "Simple policy schedule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SchedulePolicy"
        }
      ],
      "properties": {
        "scheduleRunFrequency": {
          "description": "Frequency of the schedule operation of this policy.",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ScheduleRunType",
            "modelAsString": true
          }
        },
        "scheduleRunDays": {
          "description": "List of days of week this schedule has to be run.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "scheduleRunTimes": {
          "description": "List of times of day this schedule has to be run.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "scheduleWeeklyFrequency": {
          "format": "int32",
          "description": "At every number weeks this schedule has to be run.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "SimpleSchedulePolicy"
    },
    "SQLDataDirectory": {
      "description": "SQLDataDirectory info",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of data directory mapping",
          "enum": [
            "Invalid",
            "Data",
            "Log"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SQLDataDirectoryType",
            "modelAsString": true
          }
        },
        "path": {
          "description": "File path",
          "type": "string"
        },
        "logicalName": {
          "description": "Logical name of the file",
          "type": "string"
        }
      }
    },
    "SubProtectionPolicy": {
      "description": "Sub-protection policy which includes schedule and retention",
      "type": "object",
      "properties": {
        "policyType": {
          "description": "Type of backup policy type",
          "enum": [
            "Invalid",
            "Full",
            "Differential",
            "Log",
            "CopyOnlyFull",
            "Incremental"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PolicyType",
            "modelAsString": true
          }
        },
        "schedulePolicy": {
          "$ref": "#/definitions/SchedulePolicy",
          "description": "Backup schedule specified as part of backup policy."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy with the details on backup copy retention ranges."
        }
      }
    },
    "NewErrorResponse": {
      "properties": {
        "error": {
          "type": "object",
          "description": "The error object.",
          "properties": {
            "code": {
              "readOnly": true,
              "type": "string",
              "description": "The error code."
            },
            "message": {
              "readOnly": true,
              "type": "string",
              "description": "The error message."
            },
            "target": {
              "readOnly": true,
              "type": "string",
              "description": "The error target."
            },
            "details": {
              "readOnly": true,
              "type": "array",
              "items": {
                "$ref": "#/definitions/NewErrorResponse"
              },
              "description": "The error details."
            },
            "additionalInfo": {
              "readOnly": true,
              "type": "array",
              "items": {
                "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorAdditionalInfo"
              },
              "description": "The error additional info."
            }
          }
        }
      },
      "description": "The resource management error response."
    },
    "VaultStorageConfigOperationResultResponse": {
      "description": "Operation result response for Vault Storage Config",
      "required": [
        "objectType"
      ],
      "type": "object",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
          "type": "string"
        }
      },
      "discriminator": "objectType"
    },
    "TriggerDataMoveRequest": {
      "description": "Trigger DataMove Request",
      "required": [
        "sourceResourceId",
        "sourceRegion",
        "dataMoveLevel",
        "correlationId"
      ],
      "type": "object",
      "properties": {
        "sourceResourceId": {
          "description": "ARM Id of source vault",
          "type": "string"
        },
        "sourceRegion": {
          "description": "Source Region",
          "type": "string"
        },
        "dataMoveLevel": {
          "description": "DataMove Level",
          "enum": [
            "Invalid",
            "Vault",
            "Container"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataMoveLevel",
            "modelAsString": true
          }
        },
        "correlationId": {
          "description": "Correlation Id",
          "type": "string"
        },
        "sourceContainerArmIds": {
          "description": "Source Container ArmIds",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pauseGC": {
          "description": "Pause GC",
          "type": "boolean"
        }
      }
    },
    "WeeklyRetentionFormat": {
      "description": "Weekly retention format.",
      "type": "object",
      "properties": {
        "daysOfTheWeek": {
          "description": "List of days of the week.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "weeksOfTheMonth": {
          "description": "List of weeks of month.",
          "type": "array",
          "items": {
            "enum": [
              "First",
              "Second",
              "Third",
              "Fourth",
              "Last",
              "Invalid"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "WeekOfMonth",
              "modelAsString": false
            }
          }
        }
      }
    },
    "WeeklyRetentionSchedule": {
      "description": "Weekly retention schedule.",
      "type": "object",
      "properties": {
        "daysOfTheWeek": {
          "description": "List of days of week for weekly retention policy.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        }
      }
    },
    "YearlyRetentionSchedule": {
      "description": "Yearly retention schedule.",
      "type": "object",
      "properties": {
        "retentionScheduleFormatType": {
          "description": "Retention schedule format for yearly retention policy.",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RetentionScheduleFormat",
            "modelAsString": true
          }
        },
        "monthsOfYear": {
          "description": "List of months of year of yearly retention policy.",
          "type": "array",
          "items": {
            "enum": [
              "Invalid",
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "MonthOfYear",
              "modelAsString": false
            }
          }
        },
        "retentionScheduleDaily": {
          "$ref": "#/definitions/DailyRetentionFormat",
          "description": "Daily retention format for yearly retention policy."
        },
        "retentionScheduleWeekly": {
          "$ref": "#/definitions/WeeklyRetentionFormat",
          "description": "Weekly retention format for yearly retention policy."
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        }
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription Id.",
      "required": true,
      "type": "string"
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group where the recovery services vault is present.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "VaultName": {
      "name": "vaultName",
      "in": "path",
      "description": "The name of the recovery services vault.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "description": "Client Api Version.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account."
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
