import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-autorest";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";


using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.ResourceManager.Foundations;
using Azure.Core;
using Azure.ResourceManager;

namespace Microsoft.AzureSphere;

//Images
@doc("An image resource belonging to a catalog resource.")
@parentResource(Catalog)
model Image is ProxyResource<ImageProperties> {
  @doc("Image name. Use .default for image creation.")
  @key("imageName")
  @path
  @segment("images")
  name: string;
}

@armResourceOperations
interface Images extends ProxyResourceOperationsReadListCreateDelete<Image, ListQueryParameters> {}

@doc("The properties of image")
model ImageProperties {

  @doc("Image as a UTF-8 encoded base 64 string on image create. This field contains the image URI on image reads.")
  @visibility("create", "read")
  image?: string,

  @doc("Image ID")
  @visibility("create", "read")
  imageId?: string,

  @doc("Image name")
  @visibility("read")
  imageName?: string,

  @doc("Regional data boundary for an image")
  @visibility("create", "read")
  regionalDataBoundary?: RegionalDataBoundary;

  @doc("Location the image")
  @visibility("read")
  uri?: string;

  @doc("The image description.")
  @visibility("read")
  description?: string;

  @doc("The image component id.")
  @visibility("read")
  componentId?: string;

  @doc("The image type.")
  @visibility("read")
  imageType?: ImageType;

  @visibility("read")
  @doc("The status of the last operation.")
  provisioningState?: ProvisioningState;
}

@doc("Image upload request body.")
model ImageUploadRequestBody {
  @doc(".")
  images: string
}

@doc("Image type values.")
enum ImageType {
  InvalidImageType,
  OneBl,
  PlutonRuntime,
  WifiFirmware,
  SecurityMonitor,
  NormalWorldLoader,
  NormalWorldDtb,
  NormalWorldKernel,
  RootFs,
  Services,
  Applications,
  FwConfig,
  BootManifest,
  Nwfs,
  TrustedKeystore,
  Policy,
  CustomerBoardConfig,
  UpdateCertStore,
  BaseSystemUpdateManifest,
  FirmwareUpdateManifest,
  CustomerUpdateManifest,
  RecoveryManifest,
  ManifestSet,
  Other
}