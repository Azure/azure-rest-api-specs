{
  "swagger": "2.0",
  "info": {
    "title": "FluidRelayManagementClient",
    "version": "2022-06-01",
    "description": "// FIXME: (miissing-service-description) Add service description",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "FluidRelayServers"
    },
    {
      "name": "FluidRelayContainers"
    }
  ],
  "paths": {
    "/providers/Azure.ResourceManager.FluidRelay/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.FluidRelay/fluidRelayServers": {
      "get": {
        "operationId": "FluidRelayServers_ListBySubscription",
        "tags": [
          "FluidRelayServers"
        ],
        "description": "List all Fluid Relay servers in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FluidRelayServerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.FluidRelay/fluidRelayServers": {
      "get": {
        "operationId": "FluidRelayServers_ListByResourceGroup",
        "tags": [
          "FluidRelayServers"
        ],
        "description": "List all Fluid Relay servers in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FluidRelayServerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.FluidRelay/fluidRelayServers/{fluidRelayServerName}": {
      "get": {
        "operationId": "FluidRelayServers_Get",
        "tags": [
          "FluidRelayServers"
        ],
        "description": "Get a Fluid Relay server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fluidRelayServerName",
            "in": "path",
            "description": "The Fluid Relay server resource name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FluidRelayServer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "FluidRelayServers_CreateOrUpdate",
        "tags": [
          "FluidRelayServers"
        ],
        "description": "Create or Update a Fluid Relay server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fluidRelayServerName",
            "in": "path",
            "description": "The Fluid Relay server resource name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FluidRelayServer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FluidRelayServer' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FluidRelayServer"
            }
          },
          "201": {
            "description": "Resource 'FluidRelayServer' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FluidRelayServer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "FluidRelayServers_Update",
        "tags": [
          "FluidRelayServers"
        ],
        "description": "Update a Fluid Relay server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fluidRelayServerName",
            "in": "path",
            "description": "The Fluid Relay server resource name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FluidRelayServerUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FluidRelayServer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "FluidRelayServers_Delete",
        "tags": [
          "FluidRelayServers"
        ],
        "description": "Delete a Fluid Relay server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fluidRelayServerName",
            "in": "path",
            "description": "The Fluid Relay server resource name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.FluidRelay/fluidRelayServers/{fluidRelayServerName}/fluidRelayContainers": {
      "get": {
        "operationId": "FluidRelayContainers_ListByFluidRelayServer",
        "tags": [
          "FluidRelayContainers"
        ],
        "description": "List all Fluid Relay containers which are children of a given Fluid Relay server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fluidRelayServerName",
            "in": "path",
            "description": "The Fluid Relay server resource name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FluidRelayContainerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.FluidRelay/fluidRelayServers/{fluidRelayServerName}/fluidRelayContainers/{fluidRelayContainerName}": {
      "get": {
        "operationId": "FluidRelayContainers_Get",
        "tags": [
          "FluidRelayContainers"
        ],
        "description": "Get a Fluid Relay container.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fluidRelayServerName",
            "in": "path",
            "description": "The Fluid Relay server resource name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fluidRelayContainerName",
            "in": "path",
            "description": "The Fluid Relay container resource name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FluidRelayContainer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "FluidRelayContainers_Delete",
        "tags": [
          "FluidRelayContainers"
        ],
        "description": "Delete a Fluid Relay container.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fluidRelayServerName",
            "in": "path",
            "description": "The Fluid Relay server resource name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fluidRelayContainerName",
            "in": "path",
            "description": "The Fluid Relay container resource name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.FluidRelay/fluidRelayServers/{fluidRelayServerName}/listKeys": {
      "post": {
        "operationId": "FluidRelayServers_ListKeys",
        "tags": [
          "FluidRelayServers"
        ],
        "description": "Get primary and secondary key for this server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fluidRelayServerName",
            "in": "path",
            "description": "The Fluid Relay server resource name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FluidRelayServerKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.FluidRelay/fluidRelayServers/{fluidRelayServerName}/regenerateKey": {
      "post": {
        "operationId": "FluidRelayServers_RegenerateKey",
        "tags": [
          "FluidRelayServers"
        ],
        "description": "Regenerate the primary or secondary key for this server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fluidRelayServerName",
            "in": "path",
            "description": "The Fluid Relay server resource name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FluidRelayServerKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CmkIdentityType": {
      "type": "string",
      "enum": [
        "SystemAssigned",
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "CmkIdentityType",
        "modelAsString": false
      }
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "CustomerManagedKeyEncryptionProperties": {
      "type": "object",
      "description": "All Customer-managed key encryption properties for the resource.",
      "properties": {
        "keyEncryptionKeyIdentity": {
          "$ref": "#/definitions/CustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentity",
          "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault."
        },
        "keyEncryptionKeyUrl": {
          "type": "string",
          "description": "key encryption key Url, with or without a version. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek. Key auto rotation is enabled by providing a key uri without version. Otherwise, customer is responsible for rotating the key. The keyEncryptionKeyIdentity(either SystemAssigned or UserAssigned) should have permission to access this key url."
        }
      }
    },
    "CustomerManagedKeyEncryptionPropertiesKeyEncryptionKeyIdentity": {
      "type": "object",
      "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
      "properties": {
        "identityType": {
          "$ref": "#/definitions/CmkIdentityType",
          "description": "Values can be SystemAssigned or UserAssigned"
        },
        "userAssignedIdentityResourceId": {
          "type": "string",
          "description": "user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity."
        }
      }
    },
    "EncryptionProperties": {
      "type": "object",
      "description": "All encryption configuration for a resource.",
      "properties": {
        "customerManagedKeyEncryption": {
          "$ref": "#/definitions/CustomerManagedKeyEncryptionProperties",
          "description": "All Customer-managed key encryption properties for the resource."
        }
      }
    },
    "FluidRelayContainer": {
      "type": "object",
      "description": "A FluidRelay Container.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FluidRelayContainerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Fluid Relay container resource name.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FluidRelayContainerListResult": {
      "type": "object",
      "description": "The response of a FluidRelayContainer list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FluidRelayContainer items on this page",
          "items": {
            "$ref": "#/definitions/FluidRelayContainer"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FluidRelayContainerProperties": {
      "type": "object",
      "description": "The properties of a Fluid Relay Container resource.",
      "properties": {
        "frsTenantId": {
          "type": "string",
          "description": "The Fluid tenantId for this container",
          "readOnly": true
        },
        "frsContainerId": {
          "type": "string",
          "description": "The frsContainerId for this container",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provision states for FluidRelay RP",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of this resource",
          "readOnly": true
        },
        "lastAccessTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last time when user access this resource",
          "readOnly": true
        }
      }
    },
    "FluidRelayEndpoints": {
      "type": "object",
      "description": "The Fluid Relay endpoints for this server",
      "properties": {
        "ordererEndpoints": {
          "type": "array",
          "description": "The Fluid Relay Orderer endpoints.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "storageEndpoints": {
          "type": "array",
          "description": "The Fluid Relay storage endpoints.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "serviceEndpoints": {
          "type": "array",
          "description": "The Fluid Relay service endpoints.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "FluidRelayServer": {
      "type": "object",
      "description": "A FluidRelay Server.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FluidRelayServerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Fluid Relay server resource name.",
          "readOnly": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "FluidRelayServerKeys": {
      "type": "object",
      "description": "The set of available keys for this server.",
      "properties": {
        "key1": {
          "type": "string",
          "format": "password",
          "description": "The primary key for this server",
          "readOnly": true,
          "x-ms-secret": true
        },
        "key2": {
          "type": "string",
          "format": "password",
          "description": "The secondary key for this server",
          "readOnly": true,
          "x-ms-secret": true
        }
      }
    },
    "FluidRelayServerListResult": {
      "type": "object",
      "description": "The response of a FluidRelayServer list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FluidRelayServer items on this page",
          "items": {
            "$ref": "#/definitions/FluidRelayServer"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FluidRelayServerProperties": {
      "type": "object",
      "description": "The properties of a Fluid Relay Service resource.",
      "properties": {
        "frsTenantId": {
          "type": "string",
          "description": "The Fluid tenantId for this server",
          "readOnly": true
        },
        "fluidRelayEndpoints": {
          "$ref": "#/definitions/FluidRelayEndpoints",
          "description": "The Fluid Relay Service endpoints for this server.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provision states for FluidRelay RP"
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperties",
          "description": "All encryption configuration for a resource."
        },
        "storagesku": {
          "$ref": "#/definitions/StorageSKU",
          "description": "Sku of the storage associated with the resource"
        }
      }
    },
    "FluidRelayServerUpdate": {
      "type": "object",
      "description": "The updatable properties of a Fluid Relay server",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FluidRelayServerUpdateProperties",
          "description": "The resource-specific properties that can be updated for this resource.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The type of identity used for the resource."
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives"
        }
      }
    },
    "FluidRelayServerUpdateProperties": {
      "type": "object",
      "description": "The properties that can be provided when updating FluidRelayServer resource",
      "properties": {
        "encryption": {
          "$ref": "#/definitions/EncryptionProperties",
          "description": "All encryption configuration for a resource."
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ResourceIdentityType",
          "description": "The identity type."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The list of user identities associated with the resource.",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentitiesValue"
          }
        }
      }
    },
    "KeyName": {
      "type": "string",
      "enum": [
        "key1",
        "key2"
      ],
      "x-ms-enum": {
        "name": "KeyName",
        "modelAsString": false
      }
    },
    "OperationResult": {
      "type": "object",
      "description": "A FluidRelay REST API operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}"
        },
        "display": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationDisplay",
          "description": "The object that represents the operation."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "RegenerateKeyRequest": {
      "type": "object",
      "description": "Specifies which key should be generated.",
      "properties": {
        "keyName": {
          "$ref": "#/definitions/KeyName",
          "description": "The key to regenerate."
        }
      },
      "required": [
        "keyName"
      ]
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        }
      }
    },
    "ResourceIdentityType": {
      "type": "string",
      "enum": [
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ResourceIdentityType",
        "modelAsString": false
      }
    },
    "StorageSKU": {
      "type": "string",
      "enum": [
        "standard",
        "basic"
      ],
      "x-ms-enum": {
        "name": "StorageSKU",
        "modelAsString": true
      }
    },
    "UserAssignedIdentitiesValue": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal id of user assigned identity.",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "description": "The client id of user assigned identity.",
          "readOnly": true
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2022-06-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_06_01",
            "value": "2022-06-01"
          }
        ]
      }
    }
  },
  "parameters": {}
}
