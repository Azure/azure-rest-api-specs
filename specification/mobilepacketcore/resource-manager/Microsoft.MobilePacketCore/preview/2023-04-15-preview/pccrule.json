{
  "swagger": "2.0",
  "info": {
    "title": "MobilePacketCoreManagementClient",
    "description": "The definitions in this swagger specification will be used for Mobile Packet Core policy and charging control rule ( pccRule ).",
    "version": "2023-04-15-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobilePacketCore/mobilePacketCores/{mobilePacketCoreName}/pccRules/{pccRuleName}": {
      "put": {
        "tags": [
          "PccRules"
        ],
        "operationId": "PccRules_CreateOrUpdate",
        "description": "Creates or updates a Mobile Packet Core Policy and Charging Control Rule resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/MobilePacketCoreNameParameter"
          },
          {
            "name": "pccRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the PCC Rule object."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PccRule"
            },
            "description": "Parameters supplied to create or update a PCC rule object"
          }
        ],
        "responses": {
          "200": {
            "description": "Creates/Updates the Mobile Packet Core PCC Rule resource.",
            "schema": {
              "$ref": "#/definitions/PccRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create PCC Rule": {
            "$ref": "./examples/PccRuleCreate.json"
          }
        }
      },
      "get": {
        "tags": [
          "PccRules"
        ],
        "operationId": "PccRules_Get",
        "description": "Get information about the specified Mobile Packet Core Core Policy and Charging Control Rule resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/MobilePacketCoreNameParameter"
          },
          {
            "name": "pccRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the PCC Rule object."
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves the Mobile Packet Core PCC Rule resource.",
            "schema": {
              "$ref": "#/definitions/PccRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get PCC Rule": {
            "$ref": "./examples/PccRuleGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PccRules"
        ],
        "operationId": "PccRules_Delete",
        "description": "Deletes the specified Mobile Packet Core Core Policy and Charging Control Rule resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/MobilePacketCoreNameParameter"
          },
          {
            "name": "pccRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the PCC Rule object."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful: The PCC Rule object has been deleted"
          },
          "204": {
            "description": "Successful: The PCC Rule object does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete PCC Rule": {
            "$ref": "./examples/PccRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobilePacketCore/mobilePacketCores/{mobilePacketCoreName}/pccRules": {
      "get": {
        "tags": [
          "PccRules"
        ],
        "operationId": "PccRules_ListByMobilePacketCore",
        "description": "Lists all the Core Policy and Charging Control Rules in a mobile packet core instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./common.json#/parameters/MobilePacketCoreNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of component resources.",
            "schema": {
              "$ref": "#/definitions/PccRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List PCC Rules by resource group": {
            "$ref": "./examples/PccRuleListByMobilePacketCore.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "MeasurementMethod": {
      "type": "string",
      "description": "measurement method [time/volume/both/event]",
      "enum": [
        "Time",
        "Volume",
        "TimeAndVolume",
        "Event"
      ],
      "x-ms-enum": {
        "name": "MeasurementMethod",
        "modelAsString": true
      },
      "default": "Volume"
    },
    "PccRuleProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the PCC Rule resource.  SMF"
        },
        "chargingData": {
          "type": "object",
          "description": "Configure charging instance associated to predefined/static pcc-rule. reporting-level needs to be configured;service-id and rating-group-id need to be filled if reporting level is serviceLevel;rating-group-id needs to be filled if reporting level is ratingGroupLevel",
          "properties": {
            "chargingType": {
              "type": "string",
              "description": "indicates whether online or offline charging is applicable to PCC rule",
              "enum": [
                "Offline",
                "Online"
              ],
              "x-ms-enum": {
                "name": "ChargingType",
                "modelAsString": true
              },
              "default": "Offline"
            },
            "measurementMethod": {
              "$ref": "#/definitions/MeasurementMethod"
            },
            "ratingGroupId": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647,
              "description": "Rating Group Id"
            },
            "serviceId": {
              "type": "integer",
              "minimum": 0,
              "maximum": 2147483647,
              "description": "Service Id"
            },
            "sponsorId": {
              "type": "string",
              "description": "Sponsor Id"
            },
            "reportingLevel": {
              "type": "string",
              "description": "policy control reporting level",
              "enum": [
                "ServiceLevel",
                "RatingGroupLevel",
                "SponsoredLevel"
              ],
              "x-ms-enum": {
                "name": "ReportingLevel",
                "modelAsString": true
              }
            }
          }
        },
        "qosFlow": {
          "$ref": "./common.json#/definitions/QosFlow"
        },
        "precedence": {
          "type": "integer",
          "description": "specifies the order in which this pcc rule can be applied relative to other pcc-rules",
          "minimum": 1,
          "maximum": 99999
        },
        "applicationId": {
          "type": "string",
          "description": "Application ID.  Cannot be used in conjunction with packet filters (if application ID is specified, there can be no packet filters present)"
        },
        "packetFilter": {
          "type": "array",
          "maxItems": 512,
          "description": "Defines the packet filter configuration identified via 5 tuples mainly source-ip-address, destination-ip-address, source-port, destination-port and protocol fields",
          "items": {
            "type": "object",
            "description": "source-port-start != 0 is allowed only for protocols 255, 6, 17, 132;source-port-end != 65535 is allowed only for protocols 255, 6, 17, 132;source-port-end must be greater than or equal to source-port-start;destination-port-start != 0 is allowed only for protocols 255, 6, 17, 132;destination-port-end != 65535 is allowed only for protocols 255, 6, 17, 132;destination-port-end must be greater than or equal to destination-port-start",
            "properties": {
              "ipVersion": {
                "type": "string",
                "description": "IP version",
                "enum": [
                  "V4Only",
                  "V6Only"
                ],
                "x-ms-enum": {
                  "name": "PccRuleIpVersion",
                  "modelAsString": true
                },
                "default": "V4Only"
              },
              "sourceIpv4": {
                "$ref": "./common.json#/definitions/Ipv4Address",
                "description": "source  IPv4 address (inclusive).  default: 0.0.0.0"
              },
              "sourceIpv4PrefixLen": {
                "type": "integer",
                "minimum": 0,
                "maximum": 32,
                "default": 0,
                "description": "source IPv4 address prefix length, 0 signifies for 'don't care'"
              },
              "sourceIpv6": {
                "$ref": "./common.json#/definitions/Ipv6Address",
                "description": "source  IPv6 address (inclusive).  default: ::"
              },
              "sourceIpv6PrefixLen": {
                "type": "integer",
                "minimum": 0,
                "maximum": 128,
                "default": 0,
                "description": "source IPv6 address prefix length, 0 signifies for 'don't care'"
              },
              "destinationIpv4": {
                "$ref": "./common.json#/definitions/Ipv4Address",
                "description": "destination  IPv4 address (inclusive).  default: 0.0.0.0"
              },
              "destinationIpv4PrefixLen": {
                "type": "integer",
                "minimum": 0,
                "maximum": 32,
                "default": 0,
                "description": "destination IPv4 address prefix length, 0 signifies for 'don't care'"
              },
              "destinationIpv6": {
                "$ref": "./common.json#/definitions/Ipv6Address",
                "description": "destination  IPv6 address (inclusive).  default: ::"
              },
              "destinationIpv6PrefixLen": {
                "type": "integer",
                "minimum": 0,
                "maximum": 128,
                "default": 0,
                "description": "destination IPv6 address prefix length, 0 signifies for 'don't care'"
              },
              "sourcePortStart": {
                "type": "integer",
                "minimum": 0,
                "maximum": 65535,
                "default": 0,
                "description": "source port range start value (valid for protocol = TCP (6), UDP (17), SCTP (132), only)"
              },
              "sourcePortEnd": {
                "type": "integer",
                "minimum": 1,
                "maximum": 65535,
                "default": 65535,
                "description": "source port range end value (valid for protocol = TCP (6), UDP (17), SCTP (132), only)"
              },
              "destinationPortStart": {
                "type": "integer",
                "minimum": 0,
                "maximum": 65535,
                "default": 0,
                "description": "destination port range start value (valid for protocol = TCP (6), UDP (17), SCTP (132), only)"
              },
              "destinationPortEnd": {
                "type": "integer",
                "minimum": 1,
                "maximum": 65535,
                "default": 65535,
                "description": "destination port range end value (valid for protocol = TCP (6), UDP (17), SCTP (132), only)"
              },
              "protocol": {
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "default": 255,
                "description": "ip protocol values (e.g., all: 255, ICMP: 1, TCP: 6, UDP: 17, SCTP: 132)"
              },
              "initiator": {
                "$ref": "./common.json#/definitions/Initiator",
                "description": "ue initiated or network initiated connection"
              },
              "flowLabel": {
                "type": "string",
                "description": "ipV6 flow label header"
              },
              "typeOfServiceTrafficClass": {
                "type": "integer",
                "description": "ipv4 type-of-service / ipv6 traffic class info",
                "minimum": 0,
                "maximum": 255
              },
              "typeOfServiceTrafficClassMask": {
                "type": "integer",
                "description": "ipv4 type-of-service mask / ipv6 traffic class mask info",
                "minimum": 0,
                "maximum": 255
              }
            }
          }
        },
        "pcfActivationName": {
          "type": "string",
          "description": "Name used by the PCF to activate this PCC rule"
        },
        "usageMonitoringData": {
          "type": "object",
          "description": "usage-monitoring instance associated to predefined/static pcc-rule",
          "properties": {
            "usageMonitorId": {
              "type": "string",
              "description": "usage-monitoring id"
            },
            "measurementMethod": {
              "$ref": "#/definitions/MeasurementMethod"
            },
            "volumeMeasurementCount": {
              "type": "string",
              "description": "volume measurement count [input-octets/output-octets/total-octets]",
              "enum": [
                "TotalOctets",
                "InputOctets",
                "OutputOctets"
              ],
              "x-ms-enum": {
                "name": "VolumeMeasurementCount",
                "modelAsString": true
              },
              "default": "TotalOctets"
            },
            "volumeMeasurementLayer": {
              "type": "string",
              "description": "volume measurement layer",
              "enum": [
                "Layer3",
                "Layer4",
                "Layer7"
              ],
              "x-ms-enum": {
                "name": "VolumeMeasurementLayer",
                "modelAsString": true
              },
              "default": "Layer3"
            },
            "tcpRetransmission": {
              "type": "string",
              "description": "inclusion or exclusion of TCP retransmissions in volume counts",
              "enum": [
                "Charge",
                "NoCharge"
              ],
              "x-ms-enum": {
                "name": "TcpRetransmission",
                "modelAsString": true
              },
              "default": "Charge"
            }
          }
        },
        "installPacketFiltersOnUe": {
          "$ref": "./common.json#/definitions/EnableDisable",
          "description": "Enable/Disable installing packet filters for this pcc rule on UE.  If enabled, there cannot be more than 15 packet filters provisioned"
        }
      },
      "description": "The Mobile Packet Core PCC Rule resource definition."
    },
    "PccRule": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PccRuleProperties",
          "description": "Mobile Packet Core PCC Rule properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "The Mobile Packet Core PCC Rule resource."
    },
    "PccRuleListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PccRule"
          },
          "description": "A list of Mobile Packet Core PCC Rule objects in a subscription or resource group."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for Mobile Packet Core PCC Rule API service call."
    }
  }
}
