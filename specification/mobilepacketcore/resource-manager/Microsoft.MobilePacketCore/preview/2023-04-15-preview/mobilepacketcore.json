{
  "swagger": "2.0",
  "info": {
    "title": "MobilePacketCoreManagementClient",
    "description": "The definitions in this swagger specification will be used for the Mobile Packet Core resource.",
    "version": "2023-04-15-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobilePacketCore/mobilePacketCores/{mobilePacketCoreName}": {
      "put": {
        "tags": [
          "MobilePacketCores"
        ],
        "operationId": "MobilePacketCores_CreateOrUpdate",
        "description": "Creates or updates a Mobile Packet Core",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/MobilePacketCoreNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MobilePacketCore"
            },
            "description": "Parameters supplied to create or update a mobile packet core object"
          }
        ],
        "responses": {
          "200": {
            "description": "Creates/Updates the Mobile Packet Core resource.",
            "schema": {
              "$ref": "#/definitions/MobilePacketCore"
            }
          },
          "201": {
            "description": "Creates/Updates the Mobile Packet Core resource.",
            "schema": {
              "$ref": "#/definitions/MobilePacketCore"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Mobile Packet Core": {
            "$ref": "./examples/MobilePacketCoreCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "MobilePacketCores"
        ],
        "operationId": "MobilePacketCores_Get",
        "description": "Get information about the specified Mobile Packet Core",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/MobilePacketCoreNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves the Mobile Packet Core resource.",
            "schema": {
              "$ref": "#/definitions/MobilePacketCore"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Mobile Packet Core": {
            "$ref": "./examples/MobilePacketCoreGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "MobilePacketCores"
        ],
        "operationId": "MobilePacketCores_Delete",
        "description": "Deletes the specified Mobile Packet Core.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/MobilePacketCoreNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes the Mobile Packet Core resource."
          },
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request is successful. Resource with the specified name does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Mobile Packet Core": {
            "$ref": "./examples/MobilePacketCoreDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "MobilePacketCores"
        ],
        "operationId": "MobilePacketCores_UpdateTags",
        "description": "Updates Mobile Packet Core tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/MobilePacketCoreNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the update device tags operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Update Mobile Packet Core resource Tag.",
            "schema": {
              "$ref": "#/definitions/MobilePacketCore"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Mobile Packet Core Tags": {
            "$ref": "./examples/MobilePacketCoreUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobilePacketCore/mobilePacketCores/{mobilePacketCoreName}/whatIfActivate": {
      "post": {
        "tags": [
          "MobilePacketCores"
        ],
        "summary": "Perform a 'what-if' operation on the specified snapshot to show what operations would be taken if the snapshot were activated.",
        "operationId": "MobilePacketCores_WhatIfActivate",
        "x-ms-examples": {
          "MobilePacketCoreAction_Activate": {
            "$ref": "./examples/MobilePacketCoreAction_WhatIfActivate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/MobilePacketCoreNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MobilePacketCoreWhatIfActivateRequest"
            },
            "description": "Parameters supplied to the action."
          }
        ],
        "responses": {
          "200": {
            "description": "Ok."
          },
          "202": {
            "description": "Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobilePacketCore/mobilePacketCores/{mobilePacketCoreName}/whatIfSnapshot": {
      "post": {
        "tags": [
          "MobilePacketCores"
        ],
        "summary": "Perform a 'what-if' operation to validate the current set of resources as if a snapshot were to be created",
        "operationId": "MobilePacketCores_WhatIfSnapshot",
        "x-ms-examples": {
          "MobilePacketCoreAction_Rollback": {
            "$ref": "./examples/MobilePacketCoreAction_WhatIfSnapshot.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/MobilePacketCoreNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok."
          },
          "202": {
            "description": "Accepted. The header contains 'Azure-AsyncOperation' header which can be used to monitor the progress of the operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MobilePacketCore/mobilePacketCores": {
      "get": {
        "tags": [
          "MobilePacketCores"
        ],
        "operationId": "MobilePacketCores_ListBySubscription",
        "description": "Lists all the mobile packet cores in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of mobile packet core resources.",
            "schema": {
              "$ref": "#/definitions/MobilePacketCoreListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List mobile packet cores in a subscription": {
            "$ref": "./examples/MobilePacketCoreListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MobilePacketCore/mobilePacketCores": {
      "get": {
        "tags": [
          "MobilePacketCores"
        ],
        "operationId": "MobilePacketCores_ListByResourceGroup",
        "description": "Lists all the mobile packet cores in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of component resources.",
            "schema": {
              "$ref": "#/definitions/MobilePacketCoreListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List mobile packet cores in a resource group": {
            "$ref": "./examples/MobilePacketCoreListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "EpcInterworkingProfile": {
      "type": "object",
      "description": "EPC Interworking Profile definition",
      "properties": {
        "state": {
          "$ref": "./common.json#/definitions/EnableDisable",
          "description": "Enable/disable 4G/5G interworking.  SMF, UPF"
        },
        "supportedType": {
          "type": "string",
          "enum": [
            "WithN26",
            "WithoutN26"
          ],
          "x-ms-enum": {
            "name": "N26SupportType",
            "modelAsString": true
          },
          "description": "Whether to use the N26 interface for interworking between 4G and 5G.  AMF"
        },
        "snssai": {
          "$ref": "./common.json#/definitions/Snssai",
          "description": "Default S-NSSAI value to be used for EPC interworking.  AMF"
        }
      }
    },
    "EmergencyServicesProfile": {
      "type": "object",
      "description": "Emergency Services Profile definition",
      "properties": {
        "state": {
          "$ref": "./common.json#/definitions/EnableDisable",
          "description": "Enable/disable emergency services.  AMF"
        },
        "fallback": {
          "$ref": "./common.json#/definitions/EnableDisable",
          "description": "Controls support for fallback for emergency services.  AMF"
        },
        "emergencyUserOption": {
          "type": "string",
          "enum": [
            "ValidUesOnly",
            "AuthenticatedUesOnly",
            "SupiRequiredUes",
            "AllUes"
          ],
          "x-ms-enum": {
            "name": "EmergencyUserOption",
            "modelAsString": true
          },
          "default": "AllUes",
          "description": "User category to allow an emergency call. AMF"
        },
        "skipAuthentication": {
          "$ref": "./common.json#/definitions/EnableDisable",
          "description": "Skip authentication for UEs requesting emergency services. AMF"
        },
        "ueAmbrUplink": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4000000000,
          "default": 64,
          "description": "Emergency uplink Aggregated Maximum Bit Rate (AMBR). Unit: kbps.  AMF"
        },
        "ueAmbrDownlink": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 4000000000,
          "default": 64,
          "description": "Emergency downlink Aggregated Maximum Bit Rate (AMBR). Unit: kbps.  AMF"
        },
        "snssai": {
          "$ref": "./common.json#/definitions/Snssai",
          "description": "S-NSSAI value to be used for emergency calls.  AMF"
        }
      }
    },
    "PfcpProfile": {
      "type": "object",
      "description": "Profile used for PFCP Associations.  SMF, UPF",
      "properties": {
        "pfcpAssociationRetryInterval": {
          "type": "integer",
          "description": "PFCP Association Retry Interval - amount of time to wait before re-initiating Association (ms).",
          "minimum": 20000,
          "maximum": 3600000,
          "default": 120000
        },
        "pfcpSessionResponseTimeout": {
          "type": "integer",
          "description": "PFCP Session Response Timeout Value - amount of time to wait before retransmitting a session level message (ms)",
          "minimum": 100,
          "maximum": 3600000,
          "default": 2400
        },
        "pfcpSessionRetransmitCount": {
          "type": "integer",
          "description": "PFCP Session Retransmit Count - number of session level messages retransmissions to make before declaring timeout",
          "minimum": 1,
          "maximum": 5,
          "default": 2
        },
        "pfcpNodeResponseTimeout": {
          "type": "integer",
          "description": "PFCP Node Response Timeout Value - amount of time to wait before retransmitting a node level message (ms)",
          "minimum": 100,
          "maximum": 3600000,
          "default": 2000
        },
        "pfcpNodeRetransmitCount": {
          "type": "integer",
          "description": "PFCP Node Retransmit Count - number of node level messages retransmissions to make before declaring a timeout",
          "minimum": 1,
          "maximum": 5,
          "default": 3
        },
        "pfcpHeartbeatPeriodicInterval": {
          "type": "integer",
          "description": "PFCP HeartBeat Periodic Interval - amount of time to wait before retransmitting a heartbeat request (ms)",
          "minimum": 300,
          "maximum": 3600000,
          "default": 60000
        },
        "pfcpHeartbeatDownThreshold": {
          "type": "integer",
          "description": "PFCP HeartBeat Down Threshold - amount of pfcp-heartbeat-periodic-intervals after which the association will be restarted, 0 means retry heartbeat indefinitely, operator can set it accordingly.",
          "minimum": 0,
          "maximum": 300,
          "default": 0
        },
        "pfcpGuardTimeInterval": {
          "type": "integer",
          "description": "PFCP Guard Time Interval - amount of time to wait before tearing down Association (ms)",
          "minimum": 300,
          "maximum": 3600000,
          "default": 120000
        },
        "dscpMarking": {
          "$ref": "./common.json#/definitions/DscpMarking",
          "description": "DSCP Marking"
        }
      }
    },
    "GtpcProfile": {
      "type": "object",
      "description": "Profile used for GTP Interfaces.  AMF, SMF, UPF",
      "properties": {
        "n3Request": {
          "type": "integer",
          "description": "n3-request count",
          "minimum": 0,
          "maximum": 20,
          "default": 2
        },
        "t3Response": {
          "type": "integer",
          "minimum": 100,
          "maximum": 3600000,
          "default": 5000,
          "description": "t3-response time in milliseconds (100 - 3600000)"
        },
        "echoInterval": {
          "type": "integer",
          "minimum": 0,
          "maximum": 300,
          "default": 5,
          "description": "echo-interval in minutes. Use value 0 for disabling this behavior"
        },
        "t3EchoResponse": {
          "type": "integer",
          "minimum": 100,
          "maximum": 360000,
          "default": 15000,
          "description": "t3-echo-response in milliseconds (100 - 360000)"
        },
        "n3EchoRequest": {
          "type": "integer",
          "default": 8,
          "minimum": 1,
          "maximum": 20,
          "description": "n3-echo-request : number of attempts to send echo request message (1 - 20)"
        },
        "inactivityTimer": {
          "type": "integer",
          "default": 8,
          "minimum": 1,
          "maximum": 36000,
          "description": "time in minutes to wait after GTP path failure for a peer (1 - 36000)"
        },
        "t3PathRecoveryEchoResponse": {
          "type": "integer",
          "description": "time in milliseconds after which GtpcAgent sends echo requests to a previously failed peer.  0 indicates disabled.  Values 1-99 are invalid",
          "minimum": 0,
          "maximum": 60000,
          "default": 5000
        },
        "dscpMarking": {
          "$ref": "./common.json#/definitions/DscpMarking"
        }
      }
    },
    "DnsProfile": {
      "type": "object",
      "description": "Profile used for interfacing with DNS.  AMF",
      "properties": {
        "dscpMarking": {
          "$ref": "./common.json#/definitions/DscpMarking"
        }
      }
    },
    "EventDataRecordProfile": {
      "type": "object",
      "description": "Event Data Record Profile definition",
      "properties": {
        "mobilityManagement": {
          "type": "array",
          "description": "Event Data Record Profile for Mobility Management events.  AMF",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "enum": [
                  "MobilityManagement",
                  "SessionManagement",
                  "Ngap",
                  "LocationServices",
                  "Sms",
                  "Policy"
                ],
                "x-ms-enum": {
                  "name": "LayerName",
                  "modelAsString": true
                },
                "description": "Event layer name - predefined set of supported event layers"
              },
              "eventType": {
                "type": "array",
                "description": "List of event types",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "Establishment",
                        "NormalRelease",
                        "AbnormalRelease",
                        "Modification"
                      ],
                      "x-ms-enum": {
                        "name": "MobilityManagementEventType",
                        "modelAsString": true
                      },
                      "description": "Event type name - predefined set of supported event types"
                    },
                    "outcomeType": {
                      "type": "array",
                      "description": "List of outcome types",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Success",
                          "Failure",
                          "Reject"
                        ],
                        "x-ms-enum": {
                          "name": "MobilityManagementOutcomeType",
                          "modelAsString": true
                        },
                        "description": "outcome type name - predefined set of supported outcomes"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "sessionManagement": {
          "type": "object",
          "description": "Event Data Record Profile for Session Management events.  SMF",
          "properties": {
            "eventType": {
              "type": "array",
              "description": "List of event types",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "enum": [
                      "Establishment",
                      "Release",
                      "Modification"
                    ],
                    "x-ms-enum": {
                      "name": "SessionManagementEventType",
                      "modelAsString": true
                    },
                    "description": "Event type name - predefined set of supported event types"
                  },
                  "outcomeType": {
                    "type": "array",
                    "description": "List of outcome types",
                    "items": {
                      "type": "string",
                      "enum": [
                        "Success",
                        "Failure"
                      ],
                      "x-ms-enum": {
                        "name": "SessionManagementOutcomeType",
                        "modelAsString": true
                      },
                      "description": "outcome type name - predefined set of supported outcomes"
                    }
                  }
                }
              }
            }
          }
        },
        "userPlane": {
          "type": "array",
          "description": "Event Data Record Profile for User Plane events.  UPF",
          "items": {
            "type": "object",
            "properties": {
              "startFlowEventDataRecordGeneration": {
                "$ref": "./common.json#/definitions/EnableDisable",
                "description": "Enable or Disable START type Flow Event Data Record generation"
              },
              "interimFlowEventDataRecordGeneration": {
                "$ref": "./common.json#/definitions/EnableDisable",
                "description": "Enable or Disable INTERIM type Flow Event Data Record generation"
              },
              "stopFlowEventDataRecordGeneration": {
                "$ref": "./common.json#/definitions/EnableDisable",
                "description": "Enable or Disable STOP type Flow Event Data Record generation"
              },
              "interimEventDataRecordInterval": {
                "type": "integer",
                "minimum": 10,
                "maximum": 360,
                "description": "time interval between two successive interim data records in seconds",
                "default": 60
              },
              "optimizedInterimRecords": {
                "$ref": "./common.json#/definitions/EnableDisable",
                "description": "List of Event Data Record types for which interim record optimization is enabled. if enabled, interim record size is optimized by skipping fields that did not change from last Event Data Record and incremental stats"
              }
            }
          }
        }
      }
    },
    "TraceProfile": {
      "type": "object",
      "description": "Profile used for trace purposes",
      "properties": {
        "mobilityManagement": {
          "type": "object",
          "description": "Profile for tracing.  AMF",
          "properties": {
            "n2Targets": {
              "type": "array",
              "description": "Per N2 target tracing parameters",
              "items": {
                "type": "object",
                "description": "must ((count(ipv4-address-primary) != 0) or (count(ipv4-address-secondary) != 0) or (count(ipv6-address-primary) != 0) or (count(ipv6-address-secondary) != 0) or (count(global-node-id/plmn) != 0))",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Unique Global RAN Node name",
                    "minLength": 1,
                    "maxLength": 254
                  },
                  "ipv4AddressPrimary": {
                    "$ref": "./common.json#/definitions/Ipv4Address",
                    "description": "Primary IPv4 address of the node"
                  },
                  "ipv4AddressSecondary": {
                    "$ref": "./common.json#/definitions/Ipv4Address",
                    "description": "Secondary IPv4 address of the node - only applicable if primary IPv4 address is specified"
                  },
                  "ipv6AddressPrimary": {
                    "$ref": "./common.json#/definitions/Ipv6Address",
                    "description": "Primary IPv6 address of the node"
                  },
                  "ipv6AddressSecondary": {
                    "$ref": "./common.json#/definitions/Ipv6Address",
                    "description": "Secondary IPv6 address of the node - only applicable if primary IPv6 address is specified"
                  },
                  "probability": {
                    "$ref": "./common.json#/definitions/TraceProbability",
                    "description": "Probability of sampling the trace for the target"
                  },
                  "globalNodeId": {
                    "type": "object",
                    "description": "Identifier of the node",
                    "properties": {
                      "plmn": {
                        "$ref": "./common.json#/definitions/PlmnId",
                        "description": "A unique PLMN identifier;"
                      },
                      "gnbId": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "description": "A unique 32-bit gNB identifier"
                      }
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "sessions": {
              "type": "array",
              "description": "Per UE tracing",
              "items": {
                "type": "object",
                "properties": {
                  "targetType": {
                    "type": "string",
                    "enum": [
                      "Supi"
                    ],
                    "x-ms-enum": {
                      "name": "TargetType",
                      "modelAsString": true
                    },
                    "description": "Type of target for tracing"
                  },
                  "targetValue": {
                    "type": "string",
                    "pattern": "^imsi-[0-9]{5,15}$",
                    "description": "Value of target"
                  },
                  "sessionId": {
                    "type": "string",
                    "pattern": "[0-9]{5,6}[.][0-9a-fA-F]{6}",
                    "description": "ID to uniquely identify the trace session. Format: PLMN.trace_id, where PLMN is input as 5 or 6 digit BCD number and trace-id is input as a 3 byte hexadecimal number. Example: 310070.70F13A"
                  }
                },
                "required": [
                  "targetType",
                  "targetValue",
                  "sessionId"
                ]
              }
            }
          }
        },
        "sessionManagement": {
          "type": "object",
          "description": "Profile for tracing.  SMF",
          "properties": {
            "sessions": {
              "type": "array",
              "description": "Per session tracing parameters",
              "items": {
                "type": "object",
                "description": "must count(./supi)!=0 or count(./dnn)!=0 or count(./pei)!=0 or count(./gpsi)!=0",
                "properties": {
                  "priority": {
                    "type": "integer",
                    "description": "Priority value",
                    "minimum": 1,
                    "maximum": 255,
                    "default": 255
                  },
                  "probability": {
                    "$ref": "./common.json#/definitions/TraceProbability",
                    "description": "Probability of sampling the trace for SMF"
                  },
                  "supi": {
                    "type": "string",
                    "pattern": "^imsi-[0-9]{5,15}$",
                    "description": "Subscription Permanent Identifier (SUPI) value to match traces"
                  },
                  "pei": {
                    "type": "string",
                    "pattern": "^imei-[0-9]{5,15}$",
                    "description": "Permanent Equipment Identifier (PEI) value to match traces"
                  },
                  "gpsi": {
                    "type": "string",
                    "pattern": "^msisdn-[0-9]{5,15}$",
                    "description": "Generic Public Subscription Identifier (GPSI) value to match traces"
                  },
                  "dnn": {
                    "type": "string",
                    "pattern": "[a-zA-Z]([a-zA-Z0-9-._]){0,63}",
                    "description": "Data Network Name value to match traces"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Profile5g": {
      "type": "object",
      "description": "Profile applicable to 5G services",
      "properties": {
        "n26Profile": {
          "type": "object",
          "description": "N26 interface profile.  AMF",
          "properties": {
            "gtpcProfile": {
              "$ref": "#/definitions/GtpcProfile"
            },
            "sourceAmfResourceReleaseTimer": {
              "type": "integer",
              "description": "Defines the duration the source AMF waits before releasing the UE context; The timer is started after UE context transfer request is received from target AMF; Default: 10000; Unit: milliseconds",
              "minimum": 0,
              "maximum": 30000,
              "default": 10000
            }
          }
        },
        "nchfProfile": {
          "type": "object",
          "description": "Nchf service based interface profile.  SMF",
          "properties": {
            "dscpMarking": {
              "$ref": "./common.json#/definitions/DscpMarking"
            },
            "serverReachability": {
              "type": "object",
              "description": "CNH server reachability parameters",
              "properties": {
                "failoverStatusCodes": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "The set of HTTP status codes received for which the Nchf request needs to be failed over to an alternate CHF server"
                },
                "restrictedServerExpiryInterval": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 86400,
                  "default": 60,
                  "description": "Duration in seconds after which the CHF Server can be considered to be available for sending the Nchf requests to it."
                },
                "reachabilityFailuresPercentage": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 100,
                  "default": 100,
                  "description": "The percentage of Nchf request failures within a duration defined by reachability-failures-duration configuration, after which the server is restricted."
                },
                "reachabilityFailuresDuration": {
                  "type": "integer",
                  "maximum": 2147483647,
                  "default": 5,
                  "description": "The duration in seconds which is considered to monitor the percentage of Nchf request failures, defined by the reachability-failures-percentage, to check if given CHF server needs to be restricted or not."
                }
              }
            }
          }
        },
        "nnrfProfile": {
          "type": "object",
          "description": "Nnrf service based interface profile.  AMF, UPF, SMF, NSSF",
          "properties": {
            "subscriptionValidityTimer": {
              "type": "integer",
              "minimum": 1,
              "maximum": 31680,
              "default": 31680,
              "description": "Validity time which the subscription is desired to be kept alive. Default: 31680; Unit: minutes"
            },
            "heartbeatInterval": {
              "type": "integer",
              "minimum": 60,
              "maximum": 360,
              "default": 120,
              "description": "Heartbeat duration interval value in seconds. Default: 120"
            },
            "discovery": {
              "type": "object",
              "description": "NRF Discovery Interface parameters",
              "properties": {
                "dscpMarking": {
                  "$ref": "./common.json#/definitions/DscpMarking"
                },
                "responseTimeout": {
                  "type": "integer",
                  "description": "Time period (in milliseconds) to wait for response after a request has been sent, after which it will be treated as no response from peer.  SMF",
                  "minimum": 500,
                  "maximum": 30000,
                  "default": 3000
                }
              }
            },
            "management": {
              "type": "object",
              "description": "NRF Management Interface parameters",
              "properties": {
                "dscpMarking": {
                  "$ref": "./common.json#/definitions/DscpMarking"
                },
                "includeTrackingAreaIdentifiersInNrfRegistration": {
                  "$ref": "./common.json#/definitions/EnableDisable",
                  "description": "Determines if the TAI list needs to be included in the network function Registration request (as defined by TS 29.510 section 5.2.2.2.2) sent to NRF. AMF"
                }
              }
            }
          }
        },
        "namfProfile": {
          "type": "object",
          "description": "Namf service based interface profile.  AMF, SMF",
          "properties": {
            "dscpMarking": {
              "$ref": "./common.json#/definitions/DscpMarking"
            },
            "events": {
              "type": "object",
              "description": "AMF Events Interface parameters",
              "properties": {
                "responseTimeout": {
                  "type": "integer",
                  "description": "Time period (in milliseconds) to wait for response after a request has been sent, after which it will be treated as no response from peer.  SMF",
                  "minimum": 500,
                  "maximum": 30000,
                  "default": 3000
                }
              }
            },
            "communications": {
              "type": "object",
              "description": "AMF Communications Interface parameters",
              "properties": {
                "requestTimer": {
                  "type": "integer",
                  "description": "Defines the duration the AMF waits for a response from the peer; Unit: milliseconds.  AMF",
                  "minimum": 0,
                  "maximum": 15000,
                  "default": 6000
                },
                "responseTimeout": {
                  "type": "integer",
                  "description": "Time period (in milliseconds) to wait for response after a request has been sent, after which it will be treated as no response from peer.  SMF",
                  "minimum": 500,
                  "maximum": 30000,
                  "default": 3000
                },
                "sourceAmfResourceReleaseTimer": {
                  "type": "integer",
                  "description": "Defines the duration the source AMF waits before releasing the UE context; The timer is started after UE context transfer request is received from target AMF; Unit: milliseconds.  AMF",
                  "minimum": 0,
                  "maximum": 30000,
                  "default": 10000
                },
                "includeSecurityAnchorFunctionData": {
                  "type": "string",
                  "description": "On the Source AMF, this controls whether the source AMF includes security context information in the form of Security Anchor Function data in the UE Context Transfer response. On the Target AMF, this controls whether the Security Anchor Function data is expected in the response. The UE Context Transfer service operation is described in TS 29.518. A value of 'always' is compliant to Release 15 and prior. A value of 'exclude-when-ue-validated' is compliant to Release 16.  AMF",
                  "enum": [
                    "ExcludeWhenUeValidated",
                    "Always"
                  ],
                  "x-ms-enum": {
                    "name": "CommunicationsIncludeSecurityAnchorFunctionData",
                    "modelAsString": true
                  },
                  "default": "ExcludeWhenUeValidated"
                }
              }
            }
          }
        },
        "nausfProfile": {
          "type": "object",
          "description": "Nausf service based interface profile.  AMF",
          "properties": {
            "authRequestTimer": {
              "type": "integer",
              "description": "Defines the duration the AMF waits for a response from the peer; Unit: milliseconds.  AMF",
              "minimum": 0,
              "maximum": 15000,
              "default": 6000
            },
            "authSupportedFeaturesAuthenticationResultRemoval": {
              "$ref": "./common.json#/definitions/EnableDisable",
              "description": "Defines if the Authentication result removal procedure should be performed during purge or SMC failure"
            }
          }
        },
        "nudmProfile": {
          "type": "object",
          "description": "Nudm service based interface profile.  AMF, SMF",
          "properties": {
            "dscpMarking": {
              "$ref": "./common.json#/definitions/DscpMarking"
            },
            "subscriberDataManagement": {
              "type": "object",
              "description": "UDM SDM Interface parameters",
              "properties": {
                "requestTimer": {
                  "type": "integer",
                  "description": "Defines the duration the AMF waits for a response from the peer; Unit: milliseconds.  AMF",
                  "minimum": 0,
                  "maximum": 15000,
                  "default": 6000
                },
                "responseTimeout": {
                  "type": "integer",
                  "description": "Time period (in milliseconds) to wait for response after a request has been sent, after which it will be treated as no response from peer.  SMF",
                  "minimum": 500,
                  "maximum": 30000,
                  "default": 3000
                }
              }
            },
            "ueContextManagement": {
              "type": "object",
              "description": "UDM UECM Interface parameters",
              "properties": {
                "requestTimer": {
                  "type": "integer",
                  "description": "Defines the duration the AMF waits for a response from the peer; Unit: milliseconds.  AMF",
                  "minimum": 0,
                  "maximum": 15000,
                  "default": 6000
                },
                "responseTimeout": {
                  "type": "integer",
                  "description": "Time period (in milliseconds) to wait for response after a request has been sent, after which it will be treated as no response from peer.  SMF",
                  "minimum": 500,
                  "maximum": 30000,
                  "default": 3000
                }
              }
            },
            "parameterProvision": {
              "type": "object",
              "description": "UDM PP Interface parameters",
              "properties": {
                "requestTimer": {
                  "type": "integer",
                  "description": "Defines the duration the AMF waits for a response from the peer; Unit: milliseconds.  AMF",
                  "minimum": 0,
                  "maximum": 15000,
                  "default": 6000
                }
              }
            }
          }
        },
        "nsmfProfile": {
          "type": "object",
          "description": "Nsmf service based interface profile.  AMF",
          "properties": {
            "pduSessionRequestTimer": {
              "type": "integer",
              "description": "Defines the duration the AMF waits for a response from the peer; Unit: milliseconds.  AMF",
              "minimum": 0,
              "maximum": 15000,
              "default": 6000
            }
          }
        },
        "nnssfProfile": {
          "type": "object",
          "description": "Nnssf service based interface profile.  AMF",
          "properties": {
            "networkSliceSelectionRequestTimer": {
              "type": "integer",
              "description": "Defines the duration the AMF waits for a response from the peer; Unit: milliseconds.  AMF",
              "minimum": 0,
              "maximum": 15000,
              "default": 6000
            }
          }
        },
        "nsmsfProfile": {
          "type": "object",
          "description": "Nsmsf service based interface profile.  AMF",
          "properties": {
            "smsRequestTimer": {
              "type": "integer",
              "description": "Defines the duration the AMF waits for a response from the peer; Unit: milliseconds.  AMF",
              "minimum": 0,
              "maximum": 15000,
              "default": 6000
            }
          }
        },
        "npcfProfile": {
          "type": "object",
          "description": "Npcf service based interface profile.  AMF, SMF",
          "properties": {
            "dscpMarking": {
              "$ref": "./common.json#/definitions/DscpMarking"
            },
            "policyControl": {
              "type": "object",
              "description": "Defined parameters for controlling the interface to the PCF",
              "properties": {
                "userEquipmentRequestTimer": {
                  "type": "integer",
                  "description": "Defines the duration the AMF waits for a response from the peer; Unit: milliseconds.  AMF",
                  "minimum": 0,
                  "maximum": 15000,
                  "default": 6000
                },
                "accessMobilityRequestTimer": {
                  "type": "integer",
                  "description": "Defines the duration the AMF waits for a response from the peer; Unit: milliseconds.  AMF",
                  "minimum": 0,
                  "maximum": 15000,
                  "default": 6000
                },
                "responseTimeout": {
                  "type": "integer",
                  "description": "Time period (in milliseconds) to wait for response after a request has been sent, after which it will be treated as no response from peer.  SMF",
                  "minimum": 500,
                  "maximum": 30000,
                  "default": 3000
                }
              }
            }
          }
        },
        "nlmfProfile": {
          "type": "object",
          "description": "Nlmf service based interface profile.  AMF",
          "properties": {
            "requestTimer": {
              "type": "integer",
              "description": "Defines the duration the AMF waits for a response from the peer; Unit: milliseconds.  AMF",
              "minimum": 0,
              "maximum": 15000,
              "default": 6000
            }
          }
        },
        "ngmlcProfile": {
          "type": "object",
          "description": "Ngmlc service based interface profile.  AMF",
          "properties": {
            "requestTimer": {
              "type": "integer",
              "description": "Defines the duration the AMF waits for a response from the peer; Unit: milliseconds.  AMF",
              "minimum": 0,
              "maximum": 15000,
              "default": 6000
            }
          }
        },
        "ngapProfile": {
          "type": "object",
          "description": "NG-AP interface profile.  AMF",
          "properties": {
            "timeToWait": {
              "type": "string",
              "enum": [
                "1",
                "2",
                "5",
                "10",
                "20",
                "60"
              ],
              "x-ms-enum": {
                "name": "NgapTimeToWait",
                "modelAsString": true
              },
              "description": "Time to wait; the minimum allowed waiting time after a setup or configuration update failure; Default: 60; Unit: seconds",
              "default": "60"
            },
            "resetAckDelayTimer": {
              "type": "integer",
              "description": "5G-AN reset ACK delay timer; Default: 14; Unit: seconds",
              "minimum": 8,
              "maximum": 14,
              "default": 14
            },
            "n2ReleaseDelayTimer": {
              "type": "object",
              "description": "Ngap service based interface profile.  AMF",
              "properties": {
                "state": {
                  "$ref": "./common.json#/definitions/EnableDisable",
                  "description": "Enable/disable releasing of the N2 connection"
                },
                "value": {
                  "type": "integer",
                  "description": "If enabled, defines the time the AMF waits before releasing the N2 connection after a NAS procedure; Default: 5000; Units: milliseconds",
                  "minimum": 1000,
                  "maximum": 5000,
                  "default": 5000
                }
              }
            },
            "relocationPrepTimer": {
              "type": "integer",
              "description": "Time that the AMF waits for the target gNodeB to respond to the handover request in an N2 based handover. Default: 3000; Unit: milliseconds",
              "minimum": 1000,
              "maximum": 30000,
              "default": 3000
            },
            "relocationOverallTimer": {
              "type": "integer",
              "description": "Time that the AMF waits for the handover notify from the target gNodeB. Default: 5000; Unit: milliseconds",
              "minimum": 1000,
              "maximum": 30000,
              "default": 5000
            },
            "handoverResourceReleaseTimer": {
              "type": "integer",
              "description": "Time that the AMF waits before releasing the N2 connection on the source gNodeB during an N2 based handover procedure. Default: 2000; Unit: milliseconds",
              "minimum": 1000,
              "maximum": 30000,
              "default": 2000
            },
            "waitForMobilityRegistrationTimer": {
              "type": "integer",
              "description": "Time that the AMF waits for a mobility registration after an intra-AMF relocation with TAI list change or after an inter-AMF relocation. Default: 5000; Unit: milliseconds",
              "minimum": 1000,
              "maximum": 10000,
              "default": 5000
            }
          }
        },
        "nasProfile": {
          "type": "object",
          "description": "NAS interface profile.  AMF",
          "properties": {
            "signalingRateControlInitialRegistrationRateLimit": {
              "type": "object",
              "description": "Defines the maximum rate per second at which the applicable messages may be processed by an AMF Call Control microservice.  The value disable indicates that rate control functionality is disabled.",
              "properties": {
                "state": {
                  "$ref": "./common.json#/definitions/EnableDisable",
                  "description": "Enable/disable initial registrations rate limiting"
                },
                "value": {
                  "type": "integer",
                  "description": "If enabled, Unit: messages per second",
                  "minimum": 1,
                  "maximum": 1000,
                  "default": 1000
                },
                "signalingRateControlAction": {
                  "type": "string",
                  "description": "Defines the action to be taken when the signaling rate control limit has been exceeded. Default: reject.  Ignore: Do not send a response to the UE.  Reject: Send a registration reject to the UE with cause 22 (congestion)",
                  "enum": [
                    "Ignore",
                    "Reject"
                  ],
                  "x-ms-enum": {
                    "name": "SignalingRateControlAction",
                    "modelAsString": true
                  },
                  "default": "Reject"
                },
                "t3346": {
                  "type": "object",
                  "description": "A random number between t3346-low and t3346-high is included in the initial registration reject message as defined by 3GPP TS 24.501 section 8.2.9, and may be used by the UE to re-send the request after the specified time",
                  "properties": {
                    "state": {
                      "$ref": "./common.json#/definitions/EnableDisable",
                      "description": "The value disable indicates that the T3346 value is not included in the initial registration reject message"
                    },
                    "low": {
                      "type": "integer",
                      "description": "Defines the lower end of the range for the T3346 value sent to the UE. ",
                      "minimum": 2,
                      "maximum": 11159,
                      "default": 4
                    },
                    "high": {
                      "type": "integer",
                      "description": "Defines the higher end of the range for the T3346 value sent to the UE. Must be greater than 'low'",
                      "minimum": 3,
                      "maximum": 11160,
                      "default": 16
                    }
                  }
                }
              }
            },
            "pagingMaxVisitedGnbsTracked": {
              "type": "integer",
              "description": "Maximum number of visited gNBs to be tracked per UE for paging",
              "minimum": 2,
              "maximum": 16,
              "default": 5
            },
            "pagingVisitedGnbsAllocation": {
              "type": "string",
              "description": "Visited gnbs allocation method for paging",
              "enum": [
                "TaiList",
                "Unrestricted"
              ],
              "x-ms-enum": {
                "name": "PagingVisitedGnbsAllocation",
                "modelAsString": true
              },
              "default": "TaiList"
            }
          }
        },
        "n2Profile": {
          "type": "object",
          "description": "N2 interface profile.  AMF",
          "properties": {
            "dscpMarking": {
              "$ref": "./common.json#/definitions/DscpMarking"
            },
            "localPort": {
              "type": "integer",
              "description": "SCTP Port number; Default: 38412",
              "minimum": 1,
              "maximum": 65535,
              "default": 38412
            },
            "sctp": {
              "type": "object",
              "description": "SCTP parameters for N2.  AMF",
              "properties": {
                "retransmissionTimeoutInitial": {
                  "type": "integer",
                  "description": "Retransmission Time Out (RTO) initial value. Default: 500; Unit: milliseconds",
                  "minimum": 1,
                  "maximum": 5000,
                  "default": 500
                },
                "retransmissionTimeoutMin": {
                  "type": "integer",
                  "description": "Retransmission Time Out (RTO) minimum value. Default: 250; Unit: milliseconds",
                  "minimum": 1,
                  "maximum": 5000,
                  "default": 250
                },
                "retransmissionTimeoutMax": {
                  "type": "integer",
                  "description": "Retransmission Time Out (RTO) maximum value. Default: 2000; Unit: milliseconds",
                  "minimum": 1,
                  "maximum": 60000,
                  "default": 2000
                },
                "pathMaxRetransmissions": {
                  "type": "integer",
                  "description": "Maximum number of consecutive retransmissions over a destination transport address of a peer endpoint before it is marked as inactive. Default: 5",
                  "minimum": 1,
                  "maximum": 29,
                  "default": 5
                },
                "associationInitMaxTransmit": {
                  "type": "integer",
                  "description": "Maximum number of times an INIT chunk or a COOKIE ECHO chunk is retransmitted before an endpoint aborts the initialization process and closes the association. Default: 3",
                  "minimum": 1,
                  "maximum": 10,
                  "default": 3
                },
                "associationMaxRetransmissions": {
                  "type": "integer",
                  "description": "Maximum number of consecutive retransmissions to a peer before an endpoint considers that the peer is unreachable and closes the association. Default: 6",
                  "minimum": 1,
                  "maximum": 20,
                  "default": 6
                },
                "noDelay": {
                  "type": "boolean",
                  "default": true,
                  "description": "Specifies no delay. Default: true"
                },
                "maxOutStream": {
                  "type": "integer",
                  "description": "Specifies the maximum out stream. Default: 11",
                  "minimum": 1,
                  "maximum": 64,
                  "default": 11
                },
                "maxInStream": {
                  "type": "integer",
                  "description": "Specifies the maximum in stream. Default: 11",
                  "minimum": 1,
                  "maximum": 120,
                  "default": 11
                },
                "heartbeatInterval": {
                  "type": "integer",
                  "description": "Specifies the heartbeat interval. Default: 30; Unit: seconds",
                  "minimum": 1,
                  "maximum": 5000,
                  "default": 30
                },
                "rxBufferSize": {
                  "type": "integer",
                  "description": "Specifies the receive buffer size. Default: 149000; Unit: bytes",
                  "minimum": 25000,
                  "maximum": 2097152,
                  "default": 149000
                },
                "txBufferSize": {
                  "type": "integer",
                  "description": "Specifies the transmit buffer size. Default: 149000; Unit: bytes",
                  "minimum": 16000,
                  "maximum": 5509000,
                  "default": 149000
                },
                "sackDelay": {
                  "type": "integer",
                  "description": "Specifies the SCTP SACK delay value. Disable: 1; Default: 200; Unit: milliseconds",
                  "minimum": 1,
                  "maximum": 500,
                  "default": 200
                },
                "sackFrequency": {
                  "type": "integer",
                  "description": "Specifies the SCTP SACK frequency value. Disable: 1; Default: 2; Unit: packets",
                  "minimum": 1,
                  "maximum": 5,
                  "default": 2
                }
              }
            }
          }
        }
      }
    },
    "Profile4g": {
      "type": "object",
      "description": "Profile applicable to 4G services",
      "properties": {
        "s5S8S2aS2bProfile": {
          "type": "object",
          "description": "S5/S8/S2a/S2b interface profile.  SMF",
          "properties": {
            "gtpcProfile": {
              "$ref": "#/definitions/GtpcProfile"
            }
          }
        }
      }
    },
    "MobilePacketCoreProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the resource."
        },
        "baseMetrics": {
          "$ref": "./common.json#/definitions/BaseMetrics"
        },
        "safeDeploymentPolicy": {
          "type": "array",
          "description": "User defined policy for rolling out changes to the running service",
          "items": {
            "type": "object",
            "properties": {
              "safeDeploymentGroup": {
                "type": "string",
                "description": "Safe deployment grouping.  Network functions deployed on clusters/NFVIs with the same safe deployment grouping value are managed together"
              },
              "order": {
                "type": "integer",
                "minimum": 1,
                "maximum": 255,
                "description": "Order of safe deployment group rollout.  Lower values are rolled out prior to larger values"
              },
              "status": {
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Completed",
                  "Processing",
                  "Pending"
                ],
                "x-ms-enum": {
                  "name": "SafeDeploymentStatus",
                  "modelAsString": true
                },
                "description": "During a safe deployment rollout, current status of the SDP group"
              }
            },
            "required": [
              "safeDeploymentGroup",
              "order"
            ]
          }
        },
        "activeSnapshot": {
          "$ref": "./common.json#/definitions/ReferencedResource",
          "description": "Resource identifier of the desired active snapshot.  When this parameter is changed the active snapshot will be applied to the running mobile packet core"
        },
        "networkFunctionVersionManagement": {
          "type": "object",
          "description": "Image management parameters",
          "properties": {
            "desiredImageVersions": {
              "type": "array",
              "description": "The image versions to be used by specific network function types",
              "items": {
                "type": "object",
                "properties": {
                  "networkFunctionType": {
                    "$ref": "./common.json#/definitions/NetworkFunctionType"
                  },
                  "desiredImageVersion": {
                    "type": "string",
                    "description": "The desired image version for this type of network function"
                  }
                }
              }
            },
            "networkFunctions": {
              "readOnly": true,
              "type": "array",
              "description": "List of running network functions and their current image",
              "items": {
                "type": "object",
                "properties": {
                  "networkFunction": {
                    "$ref": "./common.json#/definitions/ReferencedResource",
                    "description": "Resource identifier of the deployed network function"
                  },
                  "currentImageVersion": {
                    "type": "string",
                    "description": "The image version this network function is currently running"
                  },
                  "currentActiveSnapshot": {
                    "$ref": "./common.json#/definitions/ReferencedResource",
                    "description": "Resource identifier of the currently active snapshot applied to this network function"
                  }
                }
              }
            },
            "networkFunctionAvailableImages": {
              "description": "Available images per network function type",
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "networkFunctionType": {
                    "$ref": "./common.json#/definitions/NetworkFunctionType",
                    "description": "Specific network function type"
                  },
                  "availableImages": {
                    "type": "array",
                    "description": "List of available image versions for the specified type",
                    "items": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "description": "Image version"
                        },
                        "isDefault": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether or not this version is used if the version is not explicitly specified"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "supportedServices": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Service5G",
              "Service4G",
              "Service3G",
              "Service2G",
              "ServiceSessionManagement",
              "ServiceMobilityManagement"
            ],
            "x-ms-enum": {
              "name": "SupportedServiceType",
              "modelAsString": true
            }
          },
          "description": "A list of supported services.  If not specified, all apply"
        },
        "fullNetworkName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "default": "3gppnetwork",
          "description": "Defines the full network name provided to UE in a configuration update command; Default: 3gppnetwork.  AMF"
        },
        "shortNetworkName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "default": "3gppnetwork",
          "description": "Defines the short network name provided to UE in a configuration update command; Default: 3gppnetwork.  AMF"
        },
        "emergencyServicesProfile": {
          "$ref": "#/definitions/EmergencyServicesProfile"
        },
        "epcInterworkingProfile": {
          "$ref": "#/definitions/EpcInterworkingProfile"
        },
        "pfcpProfile": {
          "$ref": "#/definitions/PfcpProfile"
        },
        "dnsProfile": {
          "$ref": "#/definitions/DnsProfile"
        },
        "eventDataRecordProfile": {
          "$ref": "#/definitions/EventDataRecordProfile"
        },
        "trace": {
          "$ref": "#/definitions/TraceProfile"
        },
        "profile5g": {
          "$ref": "#/definitions/Profile5g"
        },
        "profile4g": {
          "$ref": "#/definitions/Profile4g"
        }
      },
      "required": [
        "fullNetworkName",
        "shortNetworkName"
      ],
      "description": "The Mobile Packet Core resource definition."
    },
    "MobilePacketCore": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MobilePacketCoreProperties",
          "description": "Mobile packet core properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "The Mobile Packet Core resource."
    },
    "MobilePacketCoreListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MobilePacketCore"
          },
          "description": "A list of Mobile Packet Core instances in a subscription or resource group."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for Mobile Packet Core API service call."
    },
    "MobilePacketCoreWhatIfActivateRequest": {
      "type": "object",
      "properties": {
        "snapshot": {
          "$ref": "./common.json#/definitions/ReferencedResource",
          "description": "Snapshot against which to run what-if activate"
        }
      },
      "description": "Allows the validation and visualization of activating a specific snapshot without activating it"
    }
  }
}
