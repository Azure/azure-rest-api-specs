{
  "swagger": "2.0",
  "info": {
    "title": "HybridNetworkManagementClient",
    "description": "The resources in this swagger specification will be used by Vnf vendors to on-board Skus and manage Vnfs",
    "version": "2020-01-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/vendors/{vendorName}": {
      "delete": {
        "tags": [
          "Vendor"
        ],
        "operationId": "Vendors_Delete",
        "description": "Deletes the specified vendor.",
        "parameters": [
          {
            "name": "vendorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vendor."
          },
          {
            "$ref": "./common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./common.json#/definitions/ErrorDetails"
            }
          }
        },
        "x-ms-examples": {
          "Delete vendor resource": {
            "$ref": "./examples/VendorDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Vendor"
        ],
        "operationId": "Vendors_Get",
        "description": "Gets information about the specified vendor.",
        "parameters": [
          {
            "name": "vendorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of vendor."
          },
          {
            "$ref": "./common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting vendor resource.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./common.json#/definitions/ErrorDetails"
            }
          }
        },
        "x-ms-examples": {
          "Get Vendor resource": {
            "$ref": "./examples/VendorGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Vendor"
        ],
        "operationId": "Vendors_CreateOrUpdate",
        "description": "Creates or updates a vendor.",
        "parameters": [
          {
            "name": "vendorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vendor."
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Vendor"
            },
            "description": "Parameters supplied to the create or update sku."
          },
          {
            "$ref": "./common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created. The header contains ‘Azure-AsyncOperation’ header pointing to an operations resource. The operation Uri can be queried to find the current state of the operation.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "202": {
            "description": "Accepted. The header contains ‘Azure-AsyncOperation’ header pointing to an operations resource. The operation Uri can be queried to find the current state of the operation.",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./common.json#/definitions/ErrorDetails"
            }
          }
        },
        "x-ms-examples": {
          "Create or update Vendor resource": {
            "$ref": "./examples/VendorCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/vendors": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "operationId": "Vendors_ListBySubscription",
        "description": "Gets all the vendors in a subscription.",
        "parameters": [
          {
            "$ref": "./common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of vendor resources.",
            "schema": {
              "$ref": "#/definitions/VendorListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./common.json#/definitions/ErrorDetails"
            }
          }
        },
        "x-ms-examples": {
          "Get all Vendor resources in subscription": {
            "$ref": "./examples/VendorListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/vendors/{vendorName}/skus/{skuName}": {
      "delete": {
        "tags": [
          "Vendor"
        ],
        "operationId": "VendorSkus_Delete",
        "description": "Deletes the specified Sku.",
        "parameters": [
          {
            "name": "vendorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vendor."
          },
          {
            "name": "skuName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the sku."
          },
          {
            "$ref": "./common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Sets 'Deleting' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./common.json#/definitions/ErrorDetails"
            }
          }
        },
        "x-ms-examples": {
          "Delete the sku of Vendor resource": {
            "$ref": "./examples/VendorSkuDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Vendor"
        ],
        "operationId": "VendorSkus_Get",
        "description": "Gets information about the specified Sku.",
        "parameters": [
          {
            "name": "vendorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of vendor."
          },
          {
            "name": "skuName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the sku."
          },
          {
            "$ref": "./common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting vendor resource.",
            "schema": {
              "$ref": "#/definitions/VendorSku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./common.json#/definitions/ErrorDetails"
            }
          }
        },
        "x-ms-examples": {
          "Get the sku of Vendor resource": {
            "$ref": "./examples/VendorSkuGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Vendor"
        ],
        "operationId": "VendorSkus_CreateOrUpdate",
        "description": "Creates or updates a SKU",
        "parameters": [
          {
            "name": "vendorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vendor."
          },
          {
            "name": "skuName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the sku."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorSku"
            },
            "description": "Parameters supplied to the create or update sku."
          },
          {
            "$ref": "./common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Update successful. The operation returns the resulting Vendor Sku sub resource.",
            "schema": {
              "$ref": "#/definitions/VendorSku"
            }
          },
          "202": {
            "description": "Create successful. The operation returns the resulting Vendor Sku sub resource.",
            "schema": {
              "$ref": "#/definitions/VendorSku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./common.json#/definitions/ErrorDetails"
            }
          }
        },
        "x-ms-examples": {
          "Create or update the sku of Vendor resource": {
            "$ref": "./examples/VendorSkuCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/vendors/{vendorName}/skus": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "VendorSkus_List",
        "description": "Gets all the Skus in a Vendor.",
        "parameters": [
          {
            "name": "vendorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vendor."
          },
          {
            "$ref": "./common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of Vnf Manager Vendor resources.",
            "schema": {
              "$ref": "#/definitions/VendorSkuListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./common.json#/definitions/ErrorDetails"
            }
          }
        },
        "x-ms-examples": {
          "Get all the Skus of vendor resource": {
            "$ref": "./examples/VendorSkuListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/locations/{locationName}/vendors/{vendorName}/vnfs/{vnfServiceKey}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "operationId": "VendorVnfs_Get",
        "description": "Gets information about the specified Vnf.",
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The azure region where the Vnf resource was created by customer."
          },
          {
            "name": "vendorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vendor."
          },
          {
            "name": "vnfServiceKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique Guid for the Vnf."
          },
          {
            "$ref": "./common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting hybrid network vendor resource.",
            "schema": {
              "$ref": "#/definitions/VendorVnf"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./common.json#/definitions/ErrorDetails"
            }
          }
        },
        "x-ms-examples": {
          "Get vnf service key of Vendor resource": {
            "$ref": "./examples/VendorGetVnfServiceKey.json"
          }
        }
      },
      "put": {
        "tags": [
          "Vendor"
        ],
        "operationId": "VendorVnfs_CreateOrUpdate",
        "description": "Update a VNF",
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The azure region where the Vnf resource was created by customer."
          },
          {
            "name": "vendorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vendor."
          },
          {
            "name": "vnfServiceKey",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique Guid for the Vnf."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VendorVnf"
            },
            "description": "Parameters supplied to the create or update sku."
          },
          {
            "$ref": "./common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Update successful. The operation returns the resulting vendor Vnf sub resource.",
            "schema": {
              "$ref": "#/definitions/VendorVnf"
            }
          },
          "202": {
            "description": "Update successful. The operation returns the resulting vendor Vnf sub resource.",
            "schema": {
              "$ref": "#/definitions/VendorVnf"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./common.json#/definitions/ErrorDetails"
            }
          }
        },
        "x-ms-examples": {
          "Create or update vnf of vendor resource": {
            "$ref": "./examples/VendorCreateVnfServiceKey.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/locations/{locationName}/vendors/{vendorName}/vnfs": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "operationId": "VendorVnfs_List",
        "description": "List all the VNFs in an azure region. Filter by skuType, skuName, vendorProvisioningState",
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The azure region where the Vnf resource was created by customer."
          },
          {
            "name": "vendorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vendor."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation.<br><br>The properties you can use for eq (equals) are: skuType, skuName."
          },
          {
            "$ref": "./common.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./common.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting hybrid network vendor resource.",
            "schema": {
              "$ref": "#/definitions/VendorVnfListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./common.json#/definitions/ErrorDetails"
            }
          }
        },
        "x-ms-examples": {
          "Get all vnf of Vendor resource": {
            "$ref": "./examples/VendorListAllVnfs.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Vendor": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VendorPropertiesFormat",
          "description": "Vendor Properties."
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/Resource"
        }
      ],
      "description": "Vendor resource."
    },
    "VendorPropertiesFormat": {
      "description": "Vendor properties.",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the vendor resource."
        },
        "skus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorSku"
          },
          "description": "A list of Sku details offered by the vendor."
        }
      }
    },
    "VendorSku": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VendorSkuPropertiesFormat",
          "description": "SKU Details."
        },
        "name": {
          "type": "string",
          "description": "The name of the sku resource."
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/Resource"
        }
      ],
      "description": "Sku sub resource."
    },
    "VendorSkuPropertiesFormat": {
      "description": "Sku  properties",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the Sku sub resource."
        },
        "skuType": {
          "type": "string",
          "description": "sku Type",
          "enum": [
            "Packetcore"
          ],
          "x-ms-enum": {
            "name": "VendorSkuType",
            "modelAsString": true
          }
        },
        "preview": {
          "type": "boolean",
          "description": "Preview mode or general available."
        },
        "previewSubscriptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of customer subscriptions enrolled for the preview."
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Azure regions supported by the Sku. If All is specified then all the regions will be available for the customer to deploy the Vnf"
        },
        "deploymentMode": {
          "type": "string",
          "description": "sku deployment mode",
          "enum": [
            "Azure",
            "Edgedevice"
          ],
          "x-ms-enum": {
            "name": "VendorSkuDeploymentMode",
            "modelAsString": true
          }
        },
        "managedAppParameters": {
          "type": "object",
          "description": "The parameters template for the managed app."
        },
        "managedAppTemplate": {
          "type": "object",
          "description": "The template for the managed app deployment."
        },
        "vnfTemplate": {
          "type": "object",
          "description": "The vm template for edge device deployment."
        },
        "customDataParameters": {
          "type": "object",
          "description": "The template to collect cloud init  parameters from the user"
        }
      }
    },
    "VendorSkuListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorSku"
          },
          "description": "A list of Skus offered by the vendor."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The Url to get the next set of results."
        }
      },
      "description": "Response for list vendor sku api service call."
    },
    "VendorListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vendor"
          },
          "description": "A list of vendors ."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The Url to get the next set of results."
        }
      },
      "description": "Response for Vendors Api service call."
    },
    "VendorVnfListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorVnf"
          },
          "description": "A list of vendor Vnfs ."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for vendors API service call."
    },
    "VendorVnf": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VendorVnfPropertiesFormat",
          "description": "Vnf Details."
        },
        "name": {
          "type": "string",
          "description": "The name of the vnf resource."
        }
      },
      "allOf": [
        {
          "$ref": "./common.json#/definitions/Resource"
        }
      ],
      "description": "Sku sub resource."
    },
    "VendorVnfPropertiesFormat": {
      "description": "Vnf  properties",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the Sku sub resource."
        },
        "vendorProvisioningState": {
          "type": "string",
          "description": "SkuType.",
          "enum": [
            "Not Provisioned",
            "Provisioning",
            "Provisioned"
          ],
          "x-ms-enum": {
            "name": "vendorProvisioningState",
            "modelAsString": true
          }
        },
        "serviceKey": {
          "readOnly": true,
          "type": "string",
          "description": "The unique guid for the Vnf."
        },
        "sku": {
          "readOnly": true,
          "$ref": "#/definitions/VendorSku",
          "description": "The Sku details for the Vnf."
        },
        "customDataParameters": {
          "readOnly": true,
          "type": "object",
          "description": "The cloud init parameters from the user."
        },
        "customData": {
          "type": "string",
          "description": "Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> **Note: Do not pass any secrets or passwords in customData property** <br><br> This property cannot be updated after the VM is created. <br><br> customData is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/en-us/blog/custom-data-and-cloud-init-on-windows-azure/) <br><br> For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)"
        },
        "managedApp": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/SubResource",
          "description": "The  reference to the managed app."
        }
      }
    }
  }
}
