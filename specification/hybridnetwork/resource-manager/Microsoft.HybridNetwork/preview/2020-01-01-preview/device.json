{
  "swagger": "2.0",
  "info": {
    "title": "HybridNetworkManagementClient",
    "description": "The resources in this swagger specification will be used to manage the Hybrid Network device.",
    "version": "2020-01-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/devices/{deviceName}": {
      "delete": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_Delete",
        "description": "Deletes the specified device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the device resource."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful."
          },
          "202": {
            "description": "Accepted. Sets the provisioningState to 'Deleting' until the operation is completed. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Request is successful. Resource with the specified name does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete device resource": {
            "$ref": "./examples/DeviceDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_Get",
        "description": "Gets information about the specified device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the device resource."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns the resulting device resource.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get  device resource": {
            "$ref": "./examples/DeviceGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_CreateOrUpdate",
        "description": "Creates or updates a device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Resource name for the device resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            },
            "description": "Parameters supplied to the create or update device operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Creation or update is successful.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "201": {
            "description": "Creation or update is successful. The header contains 'Azure-AsyncOperation' header pointing to an operations resource. The operation URI can be queried to find the current state of the operation.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update device": {
            "$ref": "./examples/DeviceCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_UpdateTags",
        "description": "Updates device tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the device resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./common.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the update device tags operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update is successful. The operation returns the resulting device resource.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update hybrid network device tags": {
            "$ref": "./examples/DeviceUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridNetwork/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_ListBySubscription",
        "description": "Lists all the devices in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of device resources.",
            "schema": {
              "$ref": "#/definitions/DeviceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all devices in a subscription.": {
            "$ref": "./examples/DeviceListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_ListByResourceGroup",
        "description": "Lists all the device resource in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful. The operation returns a list of device resources.",
            "schema": {
              "$ref": "#/definitions/DeviceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all devices in resource group": {
            "$ref": "./examples/DeviceListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/devices/{deviceName}/listRegistrationKey": {
      "post": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_ListRegistrationKey",
        "description": "List the registration key for the device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the device resource."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The registration key information for the device.",
            "schema": {
              "$ref": "#/definitions/DeviceRegistrationKey"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get device registration key": {
            "$ref": "./examples/DeviceListRegistrationKey.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Device": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DevicePropertiesFormat",
          "description": "Device properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Device resource."
    },
    "DevicePropertiesFormat": {
      "description": "Device properties.",
      "required": [
        "deviceType"
      ],
      "discriminator": "deviceType",
      "properties": {
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "The current device status.",
          "enum": [
            "Unknown",
            "NotRegistered",
            "Registered",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./common.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the device resource."
        },
        "deviceType": {
          "type": "string",
          "description": "The type of the device.",
          "enum": [
            "Unknown",
            "AzureStackEdge"
          ],
          "x-ms-enum": {
            "name": "DeviceType",
            "modelAsString": true
          }
        },
        "azureStackEdge": {
          "x-ms-discriminator-value": "AzureStackEdge",
          "$ref": "./common.json#/definitions/SubResource",
          "description": "The reference to the Azure stack edge device."
        },
        "networkFunctions": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "./common.json#/definitions/SubResource"
          },
          "description": "The list of network functions deployed on the device."
        }
      }
    },
    "DeviceRegistrationKey": {
      "description": "The device registration key.",
      "properties": {
        "registrationKey": {
          "readOnly": true,
          "type": "string",
          "description": "The registration key for the device."
        }
      }
    },
    "DeviceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Device"
          },
          "description": "A list of devices."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "The URL to get the next set of results."
        }
      },
      "description": "Response for devices API service call."
    }
  }
}
