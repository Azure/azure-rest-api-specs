{
  "swagger": "2.0",
  "info": {
    "version": "2020-12-01",
    "title": "MarketplaceManagementClient",
    "description": "REST APIs for Azure Marketplace"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryNotificationsState": {
      "parameters": [
        {
          "$ref": "#/parameters/PrivateStoreIdParameter"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_QueryNotificationsState",
        "description": "Get private store notifications state",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateStoreNotificationsState"
            }
          },
          "default": {
            "description": "Microsoft.Marketplace error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotificationsState": {
            "$ref": "./examples/NotificationsState.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/offers/{offerId}/acknowledgeNotification": {
      "parameters": [
        {
          "$ref": "#/parameters/PrivateStoreIdParameter"
        },
        {
          "$ref": "#/parameters/OfferIdPathParameter"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_AcknowledgeOfferNotification",
        "description": "Acknowledge notification for offer",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "$ref": "#/definitions/AcknowledgeOfferNotificationProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK, notification was acknowledged by the RP"
          },
          "default": {
            "description": "Microsoft.Marketplace error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AcknowledgeNotification": {
            "$ref": "./examples/AcknowledgeNotification.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals": {
      "parameters": [
        {
          "$ref": "#/parameters/PrivateStoreIdParameter"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_GetApprovalRequestsList",
        "description": "Get all open approval requests of current user",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequestApprovalsList"
            }
          },
          "default": {
            "description": "Microsoft.Marketplace error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetApprovalRequestsList": {
            "$ref": "./examples/GetApprovalRequestsList.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}": {
      "parameters": [
        {
          "$ref": "#/parameters/PrivateStoreIdParameter"
        },
        {
          "$ref": "#/parameters/RequestApprovalIdPathParameter"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_GetRequestApproval",
        "description": "Get open request approval details",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequestApprovalResource"
            }
          },
          "default": {
            "description": "Microsoft.Marketplace error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetApprovalRequest": {
            "$ref": "./examples/GetRequestApproval.json"
          }
        }
      },
      "put": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_CreateApprovalRequest",
        "description": "Create approval request",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "$ref": "#/definitions/RequestApprovalResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequestApprovalResource"
            }
          },
          "default": {
            "description": "Microsoft.Marketplace error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateApprovalRequest": {
            "$ref": "./examples/CreateApprovalRequest.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}/query": {
      "parameters": [
        {
          "$ref": "#/parameters/PrivateStoreIdParameter"
        },
        {
          "$ref": "#/parameters/RequestApprovalIdPathParameter"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_QueryRequestApproval",
        "description": "Get request statuses foreach plan, this api is used as a complex GET action.",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "$ref": "#/definitions/QueryRequestApprovalProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QueryRequestApproval"
            }
          },
          "default": {
            "description": "Microsoft.Marketplace error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "QueryRequestApproval": {
            "$ref": "./examples/QueryRequestApproval.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}/withdrawPlan": {
      "parameters": [
        {
          "$ref": "#/parameters/PrivateStoreIdParameter"
        },
        {
          "$ref": "#/parameters/RequestApprovalIdPathParameter"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_WithdrawPlan",
        "description": "Withdraw a user request approval on specific plan",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "$ref": "#/definitions/WithdrawProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Microsoft.Marketplace error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WithdrawPlan": {
            "$ref": "./examples/WithdrawPlan.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/adminRequestApprovals": {
      "parameters": [
        {
          "$ref": "#/parameters/PrivateStoreIdParameter"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_AdminRequestApprovalsList",
        "description": "Get list of admin request approvals",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdminRequestApprovalsList"
            }
          },
          "default": {
            "description": "Microsoft.Marketplace error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AdminRequestApprovalsList": {
            "$ref": "./examples/AdminRequestApprovalsList.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/adminRequestApprovals/{adminRequestApprovalId}": {
      "parameters": [
        {
          "$ref": "#/parameters/PrivateStoreIdParameter"
        },
        {
          "$ref": "#/parameters/AdminRequestApprovalIdPathParameter"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_GetAdminRequestApproval",
        "description": "Get open approval requests",
        "parameters": [
          {
            "$ref": "#/parameters/PublisherIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdminRequestApprovalsResource"
            }
          },
          "default": {
            "description": "Microsoft.Marketplace error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetAdminRequestApproval": {
            "$ref": "./examples/GetAdminRequestApproval.json"
          }
        }
      },
      "put": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_UpdateAdminRequestApproval",
        "description": "Update the admin action, weather the request is approved or rejected and the approved plans",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "$ref": "#/definitions/AdminRequestApprovalsResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdminRequestApprovalsResource"
            }
          },
          "default": {
            "description": "Microsoft.Marketplace error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UpdateAdminRequestApproval": {
            "$ref": "./examples/UpdateAdminRequestApproval.json"
          }
        }
      }
    }
  },
  "parameters": {
    "PrivateStoreIdParameter": {
      "name": "privateStoreId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The store ID - must use the tenant ID"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the request."
    },
    "PublisherIdParameter": {
      "name": "publisherId",
      "in": "query",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string",
      "description": "The publisher id of this offer."
    },
    "OfferIdPathParameter": {
      "in": "path",
      "name": "offerId",
      "type": "string",
      "x-ms-parameter-location": "method",
      "required": true,
      "description": "The offer ID to update or delete"
    },
    "AdminRequestApprovalIdPathParameter": {
      "in": "path",
      "name": "adminRequestApprovalId",
      "type": "string",
      "x-ms-parameter-location": "method",
      "required": true,
      "description": "The admin request approval ID to get create or update"
    },
    "RequestApprovalIdPathParameter": {
      "in": "path",
      "name": "requestApprovalId",
      "type": "string",
      "x-ms-parameter-location": "method",
      "required": true,
      "description": "The request approval ID to get create or update"
    }
  },
  "definitions": {
    "ErrorResponse": {
      "description": "Error response indicates Microsoft.Marketplace service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The details of the error.",
          "properties": {
            "code": {
              "description": "Error code.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "Error message indicating why the operation failed.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "PrivateStoreNotificationsState": {
      "description": "Get private store notifications state",
      "type": "object",
      "properties": {
        "stopSellNotifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StopSellNotifications"
          }
        },
        "newNotifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewNotifications"
          }
        },
        "approvalRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestApprovalsDetails"
          }
        }
      }
    },
    "AcknowledgeOfferNotificationProperties": {
      "description": "Notification update request payload",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AcknowledgeOfferNotificationDetails",
          "description": "Notification update request payload details",
          "x-ms-client-flatten": true
        }
      }
    },
    "AcknowledgeOfferNotificationDetails": {
      "description": "Notification update request payload details",
      "type": "object",
      "properties": {
        "acknowledge": {
          "description": "Gets or sets a value indicating whether acknowledge action flag is enabled",
          "type": "boolean"
        },
        "dismiss": {
          "description": "Gets or sets a value indicating whether dismiss action flag is enabled",
          "type": "boolean"
        },
        "removeOffer": {
          "description": "Gets or sets a value indicating whether remove offer action flag is enabled",
          "type": "boolean"
        },
        "addPlans": {
          "description": "Gets or sets added plans",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removePlans": {
          "description": "Gets or sets remove plans",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NewNotifications": {
      "description": "New plans notification details",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Gets offer id",
          "type": "string"
        },
        "displayName": {
          "description": "Gets offer display name",
          "type": "string"
        },
        "isFuturePlansEnabled": {
          "description": "Gets a value indicating whether future plans is enabled.",
          "type": "boolean"
        },
        "messageCode": {
          "description": "Gets or sets the notification message id",
          "type": "integer",
          "format": "int64"
        },
        "icon": {
          "description": "Gets or sets the icon url",
          "type": "string"
        },
        "plans": {
          "description": "Gets or sets removed plans notifications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanNotificationDetails"
          }
        }
      }
    },
    "StopSellNotifications": {
      "description": "Stop sell notification details",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Gets offer id",
          "type": "string"
        },
        "displayName": {
          "description": "Gets offer display name",
          "type": "string"
        },
        "isEntire": {
          "description": "Gets a value indicating whether entire offer is in stop sell or only few of its plans",
          "type": "boolean"
        },
        "messageCode": {
          "description": "Gets or sets the notification message id",
          "type": "integer",
          "format": "int64"
        },
        "icon": {
          "description": "Gets or sets the icon url",
          "type": "string"
        },
        "plans": {
          "description": "Gets or sets removed plans notifications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanNotificationDetails"
          }
        }
      }
    },
    "PlanNotificationDetails": {
      "description": "Plan notification details",
      "type": "object",
      "properties": {
        "planId": {
          "description": "Gets or sets the plan id",
          "type": "string"
        },
        "planDisplayName": {
          "description": "Gets or sets the plan display name",
          "type": "string"
        }
      }
    },
    "RequestApprovalsDetails": {
      "description": "Request approvals details",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Gets offer id",
          "type": "string"
        },
        "displayName": {
          "description": "Gets offer display name",
          "type": "string"
        },
        "publisherId": {
          "description": "Gets or sets publisher id",
          "type": "string"
        },
        "messageCode": {
          "description": "Gets or sets the notification message id",
          "type": "integer",
          "format": "int64"
        },
        "icon": {
          "description": "Gets or sets the icon url",
          "type": "string"
        },
        "plans": {
          "description": "Gets or sets removed plans notifications",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanNotificationDetails"
          }
        }
      }
    },
    "AdminRequestApprovalsList": {
      "description": "List of admin request approval resources",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminRequestApprovalsResource"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of notifications list results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AdminRequestApprovalsResource": {
      "description": "Admin request approval resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AdminRequestApprovalProperties",
          "description": "The privateStore admin Approval request data structure.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AdminRequestApprovalProperties": {
      "description": "Admin approval request resource properties",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Gets or sets offer Id",
          "type": "string"
        },
        "displayName": {
          "description": "Gets display name",
          "type": "string",
          "readOnly": true
        },
        "publisherId": {
          "description": "Gets or sets publisher Id",
          "type": "string"
        },
        "adminAction": {
          "description": "Gets or sets admin action",
          "type": "string",
          "enum": [
            "Approved",
            "Rejected"
          ],
          "x-ms-enum": {
            "name": "adminAction",
            "modelAsString": true
          }
        },
        "approvedPlans": {
          "description": "Gets or sets Approved plans ids, empty in case of rejected",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "comment": {
          "description": "Gets or sets admin comment",
          "type": "string"
        },
        "administrator": {
          "description": "Gets or sets admin details",
          "type": "string"
        },
        "plans": {
          "description": "Gets list of plans with requesters details",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PlanRequesterDetails"
          }
        }
      }
    },
    "PlanRequesterDetails": {
      "description": "Plan with requesters details",
      "properties": {
        "planId": {
          "description": "Gets the plan id",
          "type": "string",
          "readOnly": true
        },
        "planDisplayName": {
          "description": "Gets the plan display name",
          "type": "string",
          "readOnly": true
        },
        "requesters": {
          "description": "Gets requesters details list",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/UserRequestDetails"
          }
        }
      }
    },
    "UserRequestDetails": {
      "description": "user request details",
      "type": "object",
      "properties": {
        "user": {
          "description": "Gets user id",
          "type": "string",
          "readOnly": true
        },
        "date": {
          "description": "Gets request date",
          "type": "string",
          "readOnly": true
        },
        "justification": {
          "description": "Gets justification",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RequestApprovalsList": {
      "description": "List of admin request approval resources",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestApprovalResource"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of notifications list results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RequestApprovalResource": {
      "description": "Request approval resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RequestApprovalProperties",
          "description": "The privateStore approval request data structure.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RequestApprovalProperties": {
      "description": "Approval request resource properties",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Gets or sets unique offer id.",
          "type": "string"
        },
        "offerDisplayName": {
          "description": "Gets offer display name",
          "type": "string",
          "readOnly": true
        },
        "publisherId": {
          "description": "The offer's publisher id",
          "type": "string"
        },
        "plansDetails": {
          "description": "Gets or sets the plans details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/planDetails"
          }
        },
        "isClosed": {
          "description": "Gets a value indicating whether the request is closed",
          "type": "boolean",
          "readOnly": true
        },
        "messageCode": {
          "description": "Gets or sets the request approval message code",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "planDetails": {
      "description": "Return plan with request details",
      "type": "object",
      "properties": {
        "planId": {
          "description": "Gets or sets Plan Id ",
          "type": "string"
        },
        "status": {
          "description": "Gets the plan status",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Pending",
            "Rejected",
            "Approved",
            "None"
          ],
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          }
        },
        "requestDate": {
          "description": "Gets request date",
          "format": "date-time",
          "readOnly": true
        },
        "justification": {
          "description": "Gets or sets user's justification for the plan's request",
          "type": "string"
        }
      }
    },
    "QueryRequestApproval": {
      "description": "Gets the request plans with indication on each plan whether is approved by the admin, has pending request or not requested yet",
      "type": "object",
      "properties": {
        "uniqueOfferId": {
          "description": "Gets or sets unique offer id.",
          "type": "string"
        },
        "plansDetails": {
          "description": "Gets or sets the plans details",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/planDetails"
          }
        },
        "etag": {
          "description": "Gets or sets e-tag field ",
          "type": "string"
        },
        "messageCode": {
          "description": "Gets or sets the notification message id",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "QueryRequestApprovalProperties": {
      "description": "The details to get the request plans statuses",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RequestDetails",
          "description": "The details to get the request plans statuses"
        }
      }
    },
    "RequestDetails": {
      "description": "Request details needed to get the plans statuses",
      "type": "object",
      "properties": {
        "publisherId": {
          "description": "The offer's publisher id",
          "type": "string"
        },
        "planIds": {
          "description": "Current plans list",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WithdrawProperties": {
      "description": "Withdraw properties",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WithdrawDetails",
          "description": "Withdraw properties details",
          "x-ms-client-flatten": true
        }
      }
    },
    "WithdrawDetails": {
      "description": "Withdraw properties details",
      "type": "object",
      "properties": {
        "planId": {
          "description": "Gets or sets Plan Id ",
          "type": "string"
        },
        "publisherId": {
          "description": "The offer's publisher id",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "An Azure resource.",
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/SystemData",
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource"
        }
      },
      "x-ms-azure-resource": true
    },
    "SystemData": {
      "description": "Read only system data",
      "type": "object",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "$ref": "#/definitions/IdentityType",
          "description": "The type of identity that created the resource"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)"
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "$ref": "#/definitions/IdentityType",
          "description": "The type of identity that last modified the resource"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      }
    },
    "IdentityType": {
      "description": "The type of identity that creates/modifies resources",
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true
      }
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
