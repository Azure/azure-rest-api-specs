{
  "swagger": "2.0",
  "info": {
    "version": "2019-12-01",
    "title": "Marketplace RP Service"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.Marketplace/PrivateStores/{PrivateStoreId}/Offers": {
      "parameters": [
        {
          "$ref": "#/parameters/PrivateStoreIdParameter"
        }
      ],
      "get": {
        "description": "Get a list of all private offers in the default collection",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OfferListResponse"
            }
          },
          "404": {
            "description": "No private store enabled"
          }
        },
        "x-ms-examples": {
          "GetPrivateStoreOffers": {
            "$ref": "./examples/GetPrivateStoreOffers.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/PrivateStores/{PrivateStoreId}/Offers/{OfferId}": {
      "parameters": [
        {
          "$ref": "#/parameters/OfferIdPathParameter"
        },
        {
          "$ref": "#/parameters/PrivateStoreIdParameter"
        }
      ],
      "delete": {
        "description": "Deletes an offer from the default collection of the private store. TBD: Do we need this if we can also update to available: false through the PUT api?",
        "responses": {
          "200": {
            "description": "OK - offer deleted"
          },
          "404": {
            "$ref": "#/responses/PrivateStoreOffer404"
          }
        }
      },
      "get": {
        "description": "Gets information about a specific offer.",
        "responses": {
          "200": {
            "description": "Offer infomration retrieved",
            "schema": {
              "$ref": "#/definitions/CatalogItemSlim"
            }
          }
        },
        "x-ms-examples": {
          "GetPrivateStoreOffer": {
            "$ref": "./examples/GetPrivateStoreOffer.json"
          }
        }
      },
      "put": {
        "description": "Update or add an offer to the default collection of the private store.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/offerObjectParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "$ref": "#/responses/PrivateStoreAddOffer422"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/PrivateStores": {
      "get": {
        "description": "Gets the list of available private stores",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateStoreProperties"
            }
          }
        },
        "x-ms-examples": {
          "GetPrivateStores": {
            "$ref": "./examples/GetPrivateStores.json"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/PrivateStores/{PrivateStoreId}": {
      "parameters": [
        {
          "$ref": "#/parameters/PrivateStoreIdParameter"
        }
      ],
      "get": {
        "description": "Get information about the private store",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateStoreProperties"
            }
          }
        },
        "x-ms-examples": {
          "GetPrivateStoreByName": {
            "$ref": "./examples/GetPrivateStoreByName.json"
          }
        }
      },
      "delete": {
        "description": "Deletes the private store. All that is not saved will be lost.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "404": {
            "description": "Could not find the store"
          }
        }
      },
      "put": {
        "description": "Changes private store properties",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "$ref": "#/definitions/PrivateStoreProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Change successful"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Microsoft.Marketplace REST API operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Microsoft.Marketplace error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "PrivateStoreIdParameter":{
      "name": "PrivateStoreId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The store ID - must use the tenant ID"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the request."
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The Azure subscription ID.",
      "required": true,
      "type": "string"
    },
    "tenantIdInHeader": {
      "in": "header",
      "name": "X-TenantId",
      "type": "string",
      "required": true,
      "description": "TBD: We must have existing headers for this. Use those."
    },
    "OfferIdPathParameter": {
      "in": "path",
      "name": "OfferId",
      "type": "string",
      "required": true,
      "description": "The offer ID to update or delete"
    },
    "offerTypePathParameter": {
      "in": "path",
      "name": "offerType",
      "type": "string",
      "required": true,
      "description": "The offer type being accessed"
    },
    "publisherIdPathParameter": {
      "in": "path",
      "name": "publisherId",
      "type": "string",
      "required": true,
      "description": "The publisher ID being accessed"
    },
    "SkuIdPathParameter": {
      "in": "path",
      "name": "SkuId",
      "type": "string",
      "required": true,
      "description": "The offer ID to update or delete"
    },
    "offerObjectParameter": {
      "in": "body",
      "name": "offerObject",
      "schema": {
        "$ref": "#/definitions/offerSkuObject"
      }
    },
    "offerSkuObjectParameter": {
      "in": "body",
      "name": "skuObject",
      "schema": {
        "$ref": "#/definitions/offerSkuObject"
      }
    }
  },
  "responses": {
    "PrivateStoreAddOffer422": {
      "description": "[TBD: Is this needed? Can we update the content?] Offer with given id already exists in the collection"
    },
    "PrivateStoreOffer404": {
      "description": "The offer id is could not be found in this private store collection"
    }
  },
  "definitions": {
    "offerSkuObject": {
      "type":"object",
      "required": [
        "isAvailable"
      ],
      "properties": {
        "isAvailable": {
          "type": "boolean"
        }
      }
    },
    "offerObject": {
      "type":"object",
      "required": [
        "isAvailable"
      ],
      "properties": {
        "isAvailable": {
          "type": "boolean"
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response indicates Microsoft.Marketplace service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The details of the error.",
          "properties": {
            "code": {
              "description": "Error code.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "Error message indicating why the operation failed.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "PrivateStoreList": {
      "description": "Describes the json payload for the list of available private stores (between zero and one, inclusive)",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
              "$ref": "./PrivateStoreProperties"
          }
        }
      }
    },
    "PrivateStoreProperties": {
      "description": "Describes the json payload on whether or not the private store is enabled for a given tenant",
      "type": "object",
      "properties": {
        "availability": {
          "type": "string",
          "enum": ["enabled", "disabled"]
        },
        "name" : {
          "type": "string"
        }
      }
    },
    "OfferListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogItemSlim"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "CatalogItemSlim": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "isAvailable" :{
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "publisherDisplayName": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "longSummary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "offerType": {
          "type": "string"
        },
        "eTag":{
          "type": "string"
        },
        "plans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogPlanSlim"
          }
        }
      }
    },
    "CatalogPlanSlim": {
      "type": "object",
      "properties": {
        "planId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "Operation": {
      "description": "Microsoft.Marketplace REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft.Marketplace",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed: Amendments",
              "type": "string"
            },
            "operation": {
              "description": "Operation type: Get Amendments etc.",
              "type": "string"
            }
          }
        }
      }
    },
    "OperationListResult": {
      "description": "Result of the request to list Marketplace operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of Microsoft.Marketplace operations supported by the Microsoft.Marketplace resource provider."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any.",
          "readOnly": true
        }
      }
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
