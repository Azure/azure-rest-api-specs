{
  "swagger": "2.0",
  "info": {
    "title": "iotHubClient",
    "version": "2023-06-30",
    "description": "Use this API to manage the IoT hubs in your Azure subscription.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "IotHubDescriptions"
    },
    {
      "name": "EventHubConsumerGroupInfos"
    },
    {
      "name": "IotHubCertificateDescriptions"
    },
    {
      "name": "IotHubPrivateEndpointGroupInformations"
    },
    {
      "name": "IotHubPrivateEndpointConnections"
    }
  ],
  "paths": {
    "/providers/Azure.ResourceManager.IotHub/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.IotHub/IotHubs": {
      "get": {
        "operationId": "IotHubDescriptions_ListBySubscription",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Get all the IoT hubs in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotHubDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Devices/usages": {
      "get": {
        "operationId": "ResourceProviderCommonOperations_GetSubscriptionQuota",
        "summary": "Get the number of iot hubs in the subscription",
        "description": "Get the number of free and paid iot hubs in the subscription",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UserSubscriptionQuotaListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{keyName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/getKeysForKeyName": {
      "post": {
        "operationId": "IotHubDescriptions_GetKeysForKeyName",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Get a shared access policy by name from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "The name of the shared access policy.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SharedAccessSignatureAuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{iotHubName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/manualFailover": {
      "post": {
        "operationId": "IotHubDescriptions_ManualFailover",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Manually initiate a failover for the IoT Hub to its secondary region. To learn more, see https://aka.ms/manualfailover",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "iotHubName",
            "in": "path",
            "description": "Name of the IoT hub to failover",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FailoverInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{iotHubName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/testAllRoutes": {
      "post": {
        "operationId": "IotHubDescriptions_TestAllRoutes",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Test all routes configured in this Iot Hub",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "iotHubName",
            "in": "path",
            "description": "IotHub to be tested",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestAllRoutesInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TestAllRoutesResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{iotHubName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/testRoute": {
      "post": {
        "operationId": "IotHubDescriptions_TestRoute",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Test the new route for this Iot Hub",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "iotHubName",
            "in": "path",
            "description": "IotHub to be tested",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestRouteInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TestRouteResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs": {
      "get": {
        "operationId": "IotHubDescriptions_ListByResourceGroup",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Get all the IoT hubs in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotHubDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}": {
      "get": {
        "operationId": "IotHubDescriptions_Get",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Get the non-security related metadata of an IoT hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotHubDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "IotHubDescriptions_CreateOrUpdate",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Create or update the metadata of an Iot hub. The usual pattern to modify a property is to retrieve the IoT hub metadata and security metadata, and then combine them with the modified values in a new body to update the IoT hub. If certain properties are missing in the JSON, updating IoT Hub may cause these values to fallback to default, which may lead to unexpected behavior.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the IoT Hub. Do not specify for creating a brand new IoT Hub. Required to update an existing IoT Hub.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IotHubDescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IotHubDescription' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IotHubDescription"
            }
          },
          "201": {
            "description": "Resource 'IotHubDescription' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IotHubDescription"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "IotHubDescriptions_Update",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Update an existing IoT Hub tags. to update other fields use the CreateOrUpdate method",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IotHubDescriptionTagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotHubDescription"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IotHubDescriptions_Delete",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Delete an IoT hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/ConsumerGroups": {
      "get": {
        "operationId": "EventHubConsumerGroupInfos_ListByIotHubDescription",
        "tags": [
          "EventHubConsumerGroupInfos"
        ],
        "description": "Get a list of the consumer groups in the Event Hub-compatible device-to-cloud endpoint in an IoT hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubConsumerGroupInfoListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/ConsumerGroups/{name}": {
      "get": {
        "operationId": "EventHubConsumerGroupInfos_GetEventHubConsumerGroup",
        "tags": [
          "EventHubConsumerGroupInfos"
        ],
        "description": "Get a consumer group from the Event Hub-compatible device-to-cloud endpoint for an IoT hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the consumer group to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubConsumerGroupInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "EventHubConsumerGroupInfos_CreateEventHubConsumerGroup",
        "tags": [
          "EventHubConsumerGroupInfos"
        ],
        "description": "Add a consumer group to an Event Hub-compatible endpoint in an IoT hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the consumer group to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubConsumerGroupInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EventHubConsumerGroupInfo' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubConsumerGroupInfo"
            }
          },
          "201": {
            "description": "Resource 'EventHubConsumerGroupInfo' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubConsumerGroupInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "EventHubConsumerGroupInfos_DeleteEventHubConsumerGroup",
        "tags": [
          "EventHubConsumerGroupInfos"
        ],
        "description": "Delete a consumer group from an Event Hub-compatible endpoint in an IoT hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the consumer group to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/certificates": {
      "get": {
        "operationId": "IotHubCertificateDescriptions_ListByIotHubDescription",
        "tags": [
          "IotHubCertificateDescriptions"
        ],
        "description": "Returns the list of certificates.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotHubCertificateDescriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/certificates/{certificateName}": {
      "get": {
        "operationId": "IotHubCertificateDescriptions_Get",
        "tags": [
          "IotHubCertificateDescriptions"
        ],
        "description": "Returns the certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9-._]{1,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotHubCertificateDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "IotHubCertificateDescriptions_CreateOrUpdate",
        "tags": [
          "IotHubCertificateDescriptions"
        ],
        "description": "Adds new or replaces existing certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the Certificate. Do not specify for creating a brand new certificate. Required to update an existing certificate.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9-._]{1,64}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IotHubCertificateDescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IotHubCertificateDescription' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IotHubCertificateDescription"
            }
          },
          "201": {
            "description": "Resource 'IotHubCertificateDescription' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IotHubCertificateDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "IotHubCertificateDescriptions_Delete",
        "tags": [
          "IotHubCertificateDescriptions"
        ],
        "description": "Deletes an existing X509 certificate or does nothing if it does not exist.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the Certificate.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9-._]{1,64}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/certificates/{certificateName}/generateVerificationCode": {
      "post": {
        "operationId": "IotHubCertificateDescriptions_GenerateVerificationCode",
        "tags": [
          "IotHubCertificateDescriptions"
        ],
        "description": "Generates verification code for proof of possession flow. The verification code will be used to generate a leaf certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the Certificate.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9-._]{1,64}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateWithNonceDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/certificates/{certificateName}/verify": {
      "post": {
        "operationId": "IotHubCertificateDescriptions_Verify",
        "tags": [
          "IotHubCertificateDescriptions"
        ],
        "description": "Verifies the certificate's private key possession by providing the leaf cert issued by the verifying pre uploaded certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the Certificate.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9-._]{1,64}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CertificateVerificationDescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotHubCertificateDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/exportDevices": {
      "post": {
        "operationId": "IotHubDescriptions_ExportDevices",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Exports all the device identities in the IoT hub identity registry to an Azure Storage blob container. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportDevicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/importDevices": {
      "post": {
        "operationId": "IotHubDescriptions_ImportDevices",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Import, update, or delete device identities in the IoT hub identity registry from a blob. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry#import-and-export-device-identities.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportDevicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/listKeys": {
      "post": {
        "operationId": "IotHubDescriptions_ListKeys",
        "tags": [
          "IotHubDescriptions"
        ],
        "description": "Get the security metadata for an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-security.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedSharedAccessSignatureAuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/privateEndpointConnections": {
      "get": {
        "operationId": "IotHubPrivateEndpointConnections_ListByIotHubDescription",
        "tags": [
          "IotHubPrivateEndpointConnections"
        ],
        "description": "List private endpoint connection properties",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotHubPrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "IotHubPrivateEndpointConnections_Get",
        "tags": [
          "IotHubPrivateEndpointConnections"
        ],
        "description": "Get private endpoint connection properties",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotHubPrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "IotHubPrivateEndpointConnections_Update",
        "tags": [
          "IotHubPrivateEndpointConnections"
        ],
        "description": "Update the status of a private endpoint connection with the specified name",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IotHubPrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IotHubPrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IotHubPrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'IotHubPrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IotHubPrivateEndpointConnection"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IotHubPrivateEndpointConnections_Delete",
        "tags": [
          "IotHubPrivateEndpointConnections"
        ],
        "description": "Delete private endpoint connection with the specified name",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/privateLinkResources": {
      "get": {
        "operationId": "IotHubPrivateEndpointGroupInformations_ListByIotHubDescription",
        "tags": [
          "IotHubPrivateEndpointGroupInformations"
        ],
        "description": "List private link resources for the given IotHub",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotHubPrivateEndpointGroupInformationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Azure.ResourceManager.IotHub/IotHubs/{resourceName}/privateLinkResources/{groupId}": {
      "get": {
        "operationId": "IotHubPrivateEndpointGroupInformations_Get",
        "tags": [
          "IotHubPrivateEndpointGroupInformations"
        ],
        "description": "Get the specified private link resource for the given IotHub",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "The name of the private link resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IotHubPrivateEndpointGroupInformation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/IotHubStats/{subscriptionId}/{resourceGroupName}/{resourceName}": {
      "get": {
        "operationId": "IotHubDescriptions_GetStats",
        "tags": [
          "IotHubDescriptions"
        ],
        "summary": "Get the statistics from an IoT hub",
        "description": "Get the statistics from an IoT hub.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RegistryStatistics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs/{subscriptionId}/{resourceGroupName}/{resourceName}": {
      "get": {
        "operationId": "IotHubDescriptions_ListJobs",
        "tags": [
          "IotHubDescriptions"
        ],
        "summary": "Get a list of all the jobs in an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry",
        "description": "Get a list of all the jobs in an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedJobResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/jobs/{jobId}/{subscriptionId}/{resourceGroupName}/{resourceName}/{jobId}": {
      "get": {
        "operationId": "IotHubDescriptions_GetJob",
        "tags": [
          "IotHubDescriptions"
        ],
        "summary": "Get the details of a job from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry",
        "description": "Get the details of a job from an IoT hub. For more information, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-identity-registry.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The job identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/JobResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/quotaMetrics/{subscriptionId}/{resourceGroupName}/{resourceName}": {
      "get": {
        "operationId": "IotHubDescriptions_GetQuotaMetrics",
        "tags": [
          "IotHubDescriptions"
        ],
        "summary": "Get the quota metrics for an IoT hub",
        "description": "Get the quota metrics for an IoT hub.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIotHubQuotaMetricInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{iotHubName}/routingEndpointsHealth/{subscriptionId}/{resourceGroupName}/{iotHubName}": {
      "get": {
        "operationId": "IotHubDescriptions_GetEndpointHealth",
        "tags": [
          "IotHubDescriptions"
        ],
        "summary": "Get the health for routing endpoints",
        "description": "Get the health for routing endpoints.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "iotHubName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEndpointHealthData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Devices/IotHubs/{resourceName}/skus/{subscriptionId}/{resourceGroupName}/{resourceName}": {
      "get": {
        "operationId": "IotHubDescriptions_GetValidSkus",
        "tags": [
          "IotHubDescriptions"
        ],
        "summary": "Get the list of valid SKUs for an IoT hub",
        "description": "Get the list of valid SKUs for an IoT hub.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The subscription identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the IoT hub.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the IoT hub.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIotHubSkuDescription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AccessRights": {
      "type": "string",
      "enum": [
        "RegistryRead",
        "RegistryWrite",
        "ServiceConnect",
        "DeviceConnect",
        "RegistryRead, RegistryWrite",
        "RegistryRead, ServiceConnect",
        "RegistryRead, DeviceConnect",
        "RegistryWrite, ServiceConnect",
        "RegistryWrite, DeviceConnect",
        "ServiceConnect, DeviceConnect",
        "RegistryRead, RegistryWrite, ServiceConnect",
        "RegistryRead, RegistryWrite, DeviceConnect",
        "RegistryRead, ServiceConnect, DeviceConnect",
        "RegistryWrite, ServiceConnect, DeviceConnect",
        "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect"
      ],
      "x-ms-enum": {
        "name": "AccessRights",
        "modelAsString": false
      }
    },
    "ArmIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Principal Id",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant Id",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ResourceIdentityType",
          "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "Dictionary of <ArmUserIdentity>",
          "additionalProperties": {
            "$ref": "#/definitions/ArmUserIdentity"
          }
        }
      }
    },
    "ArmUserIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AuthenticationType": {
      "type": "string",
      "enum": [
        "keyBased",
        "identityBased"
      ],
      "x-ms-enum": {
        "name": "AuthenticationType",
        "modelAsString": true
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.PrivateEndpointConnection": {
      "type": "object",
      "description": "The private endpoint connection resource",
      "properties": {
        "properties": {
          "$ref": "../../../../../common-types/resource-management/v4/privatelinks.json#/definitions/PrivateEndpointConnectionProperties",
          "description": "The private endpoint connection properties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "Capabilities": {
      "type": "string",
      "enum": [
        "None",
        "DeviceManagement"
      ],
      "x-ms-enum": {
        "name": "Capabilities",
        "modelAsString": true
      }
    },
    "CertificateBodyDescription": {
      "type": "object",
      "description": "The JSON-serialized X509 Certificate.",
      "properties": {
        "certificate": {
          "type": "string",
          "description": "base-64 representation of the X509 leaf certificate .cer file or just .pem file content."
        },
        "isVerified": {
          "type": "boolean",
          "description": "True indicates that the certificate will be created in verified state and proof of possession will not be required."
        }
      }
    },
    "CertificateProperties": {
      "type": "object",
      "description": "The description of an X509 CA Certificate.",
      "properties": {
        "subject": {
          "type": "string",
          "description": "The certificate's subject name.",
          "readOnly": true
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The certificate's expiration date and time.",
          "readOnly": true
        },
        "thumbprint": {
          "type": "string",
          "description": "The certificate's thumbprint.",
          "readOnly": true
        },
        "isVerified": {
          "type": "boolean",
          "description": "Determines whether certificate has been verified."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The certificate's create date and time.",
          "readOnly": true
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The certificate's last update date and time.",
          "readOnly": true
        },
        "certificate": {
          "type": "string",
          "description": "The certificate content"
        }
      }
    },
    "CertificatePropertiesWithNonce": {
      "type": "object",
      "description": "The description of an X509 CA Certificate including the challenge nonce issued for the Proof-Of-Possession flow.",
      "properties": {
        "subject": {
          "type": "string",
          "description": "The certificate's subject name.",
          "readOnly": true
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The certificate's expiration date and time.",
          "readOnly": true
        },
        "thumbprint": {
          "type": "string",
          "description": "The certificate's thumbprint.",
          "readOnly": true
        },
        "isVerified": {
          "type": "boolean",
          "description": "Determines whether certificate has been verified.",
          "readOnly": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The certificate's create date and time.",
          "readOnly": true
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The certificate's last update date and time.",
          "readOnly": true
        },
        "verificationCode": {
          "type": "string",
          "description": "The certificate's verification code that will be used for proof of possession.",
          "readOnly": true
        },
        "certificate": {
          "type": "string",
          "description": "The certificate content",
          "readOnly": true
        }
      }
    },
    "CertificateVerificationDescription": {
      "type": "object",
      "description": "The JSON-serialized leaf certificate",
      "properties": {
        "certificate": {
          "type": "string",
          "description": "base-64 representation of X509 certificate .cer file or just .pem file content."
        }
      }
    },
    "CertificateWithNonceDescription": {
      "type": "object",
      "description": "The X509 Certificate.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CertificatePropertiesWithNonce",
          "description": "The description of an X509 CA Certificate including the challenge nonce issued for the Proof-Of-Possession flow."
        },
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the certificate.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "The entity tag.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        }
      }
    },
    "CloudToDeviceProperties": {
      "type": "object",
      "description": "The IoT hub cloud-to-device messaging properties.",
      "properties": {
        "maxDeliveryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
        },
        "defaultTtlAsIso8601": {
          "type": "string",
          "format": "duration",
          "description": "The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
        },
        "feedback": {
          "$ref": "#/definitions/FeedbackProperties",
          "description": "The properties of the feedback queue for cloud-to-device messages."
        }
      }
    },
    "ConsumerGroupEventHubContent": {
      "type": "object",
      "description": "The EventHub consumer group.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventHubConsumerGroupName",
          "description": "The EventHub consumer group name."
        }
      },
      "required": [
        "properties"
      ]
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "DefaultAction": {
      "type": "string",
      "enum": [
        "Deny",
        "Allow"
      ],
      "x-ms-enum": {
        "name": "DefaultAction",
        "modelAsString": true
      }
    },
    "EndpointHealthData": {
      "type": "object",
      "description": "The health data for an endpoint",
      "properties": {
        "endpointId": {
          "type": "string",
          "description": "Id of the endpoint"
        },
        "healthStatus": {
          "$ref": "#/definitions/EndpointHealthStatus",
          "description": "Health statuses have following meanings. The 'healthy' status shows that the endpoint is accepting messages as expected. The 'unhealthy' status shows that the endpoint is not accepting messages as expected and IoT Hub is retrying to send data to this endpoint. The status of an unhealthy endpoint will be updated to healthy when IoT Hub has established an eventually consistent state of health. The 'dead' status shows that the endpoint is not accepting messages, after IoT Hub retried sending messages for the retrial period. See IoT Hub metrics to identify errors and monitor issues with endpoints. The 'unknown' status shows that the IoT Hub has not established a connection with the endpoint. No messages have been delivered to or rejected from this endpoint"
        },
        "lastKnownError": {
          "type": "string",
          "description": "Last error obtained when a message failed to be delivered to iot hub"
        },
        "lastKnownErrorTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the last known error occurred"
        },
        "lastSuccessfulSendAttemptTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last time iot hub successfully sent a message to the endpoint"
        },
        "lastSendAttemptTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last time iot hub tried to send a message to the endpoint"
        }
      }
    },
    "EndpointHealthStatus": {
      "type": "string",
      "enum": [
        "unknown",
        "healthy",
        "degraded",
        "unhealthy",
        "dead"
      ],
      "x-ms-enum": {
        "name": "EndpointHealthStatus",
        "modelAsString": true
      }
    },
    "EnrichmentProperties": {
      "type": "object",
      "description": "The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key or name for the enrichment property."
        },
        "value": {
          "type": "string",
          "description": "The value for the enrichment property."
        },
        "endpointNames": {
          "type": "array",
          "description": "The list of endpoints for which the enrichment is applied to the message.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "key",
        "value",
        "endpointNames"
      ]
    },
    "ErrorDetails": {
      "type": "object",
      "description": "Error details.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "httpStatusCode": {
          "type": "string",
          "description": "The HTTP status code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "details": {
          "type": "string",
          "description": "The error details.",
          "readOnly": true
        }
      }
    },
    "EventHubConsumerGroupInfo": {
      "type": "object",
      "description": "The properties of the EventHubConsumerGroupInfo object.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "additionalProperties": {},
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EventHubConsumerGroupInfoListResult": {
      "type": "object",
      "description": "The response of a EventHubConsumerGroupInfo list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EventHubConsumerGroupInfo items on this page",
          "items": {
            "$ref": "#/definitions/EventHubConsumerGroupInfo"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EventHubConsumerGroupName": {
      "type": "object",
      "description": "The EventHub consumer group name.",
      "properties": {
        "name": {
          "type": "string",
          "description": "EventHub consumer group name"
        }
      },
      "required": [
        "name"
      ]
    },
    "EventHubProperties": {
      "type": "object",
      "description": "The properties of the provisioned Event Hub-compatible endpoint used by the IoT hub.",
      "properties": {
        "retentionTimeInDays": {
          "type": "integer",
          "format": "int32",
          "description": "The retention time for device-to-cloud messages in days. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages"
        },
        "partitionCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of partitions for receiving device-to-cloud messages in the Event Hub-compatible endpoint. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#device-to-cloud-messages."
        },
        "partitionIds": {
          "type": "array",
          "description": "The partition ids in the Event Hub-compatible endpoint.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "path": {
          "type": "string",
          "description": "The Event Hub-compatible name.",
          "readOnly": true
        },
        "endpoint": {
          "type": "string",
          "description": "The Event Hub-compatible endpoint.",
          "readOnly": true
        }
      }
    },
    "ExportDevicesRequest": {
      "type": "object",
      "description": "Use to provide parameters when requesting an export of all devices in the IoT hub.",
      "properties": {
        "exportBlobContainerUri": {
          "type": "string",
          "description": "The export blob container URI."
        },
        "excludeKeys": {
          "type": "boolean",
          "description": "The value indicating whether keys should be excluded during export."
        },
        "exportBlobName": {
          "type": "string",
          "description": "The name of the blob that will be created in the provided output blob container. This blob will contain the exported device registry information for the IoT Hub."
        },
        "authenticationType": {
          "$ref": "#/definitions/AuthenticationType",
          "description": "Specifies authentication type being used for connecting to the storage account."
        },
        "identity": {
          "$ref": "#/definitions/ManagedIdentity",
          "description": "Managed identity properties of storage endpoint for export devices."
        },
        "includeConfigurations": {
          "type": "boolean",
          "description": "The value indicating whether configurations should be exported."
        },
        "configurationsBlobName": {
          "type": "string",
          "description": "The name of the blob that will be created in the provided output blob container. This blob will contain the exported configurations for the Iot Hub."
        }
      },
      "required": [
        "exportBlobContainerUri",
        "excludeKeys"
      ]
    },
    "FailoverInput": {
      "type": "object",
      "description": "Use to provide failover region when requesting manual Failover for a hub.",
      "properties": {
        "failoverRegion": {
          "type": "string",
          "description": "Region the hub will be failed over to"
        }
      },
      "required": [
        "failoverRegion"
      ]
    },
    "FallbackRouteProperties": {
      "type": "object",
      "description": "The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique."
        },
        "source": {
          "$ref": "#/definitions/RoutingSource",
          "description": "The source to which the routing rule is to be applied to. For example, DeviceMessages"
        },
        "condition": {
          "type": "string",
          "description": "The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language"
        },
        "endpointNames": {
          "type": "array",
          "description": "The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.",
          "items": {
            "type": "string"
          }
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Used to specify whether the fallback route is enabled."
        }
      },
      "required": [
        "source",
        "endpointNames",
        "isEnabled"
      ]
    },
    "FeedbackProperties": {
      "type": "object",
      "description": "The properties of the feedback queue for cloud-to-device messages.",
      "properties": {
        "lockDurationAsIso8601": {
          "type": "string",
          "format": "duration",
          "description": "The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
        },
        "ttlAsIso8601": {
          "type": "string",
          "format": "duration",
          "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
        },
        "maxDeliveryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages."
        }
      }
    },
    "GroupIdInformationProperties": {
      "type": "object",
      "description": "The properties for a group information object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The group id"
        },
        "requiredMembers": {
          "type": "array",
          "description": "The required members for a specific group id",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The required DNS zones for a specific group id",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ImportDevicesRequest": {
      "type": "object",
      "description": "Use to provide parameters when requesting an import of all devices in the hub.",
      "properties": {
        "inputBlobContainerUri": {
          "type": "string",
          "description": "The input blob container URI."
        },
        "outputBlobContainerUri": {
          "type": "string",
          "description": "The output blob container URI."
        },
        "inputBlobName": {
          "type": "string",
          "description": "The blob name to be used when importing from the provided input blob container."
        },
        "outputBlobName": {
          "type": "string",
          "description": "The blob name to use for storing the status of the import job."
        },
        "authenticationType": {
          "$ref": "#/definitions/AuthenticationType",
          "description": "Specifies authentication type being used for connecting to the storage account."
        },
        "identity": {
          "$ref": "#/definitions/ManagedIdentity",
          "description": "Managed identity properties of storage endpoint for import devices."
        },
        "includeConfigurations": {
          "type": "boolean",
          "description": "The value indicating whether configurations should be imported."
        },
        "configurationsBlobName": {
          "type": "string",
          "description": "The blob name to be used when importing configurations from the provided input blob container."
        }
      },
      "required": [
        "inputBlobContainerUri",
        "outputBlobContainerUri"
      ]
    },
    "IotHubCapacity": {
      "type": "object",
      "description": "IoT Hub capacity information.",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of units.",
          "readOnly": true
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of units.",
          "readOnly": true
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "The default number of units.",
          "readOnly": true
        },
        "scaleType": {
          "$ref": "#/definitions/IotHubScaleType",
          "description": "The type of the scaling enabled.",
          "readOnly": true
        }
      }
    },
    "IotHubCertificateDescription": {
      "type": "object",
      "description": "The X509 Certificate.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CertificateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IotHubCertificateDescriptionListResult": {
      "type": "object",
      "description": "The response of a IotHubCertificateDescription list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IotHubCertificateDescription items on this page",
          "items": {
            "$ref": "#/definitions/IotHubCertificateDescription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IotHubDescription": {
      "type": "object",
      "description": "The description of the IoT hub.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IotHubProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "IotHubDescriptionListResult": {
      "type": "object",
      "description": "The response of a IotHubDescription list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IotHubDescription items on this page",
          "items": {
            "$ref": "#/definitions/IotHubDescription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IotHubDescriptionTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in IotHubDescription resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "IotHubLocationDescription": {
      "type": "object",
      "description": "Public representation of one of the locations where a resource is provisioned.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The name of the Azure region"
        },
        "role": {
          "$ref": "#/definitions/IotHubReplicaRoleType",
          "description": "The role of the region, can be either primary or secondary. The primary region is where the IoT hub is currently provisioned. The secondary region is the Azure disaster recovery (DR) paired region and also the region where the IoT hub can failover to."
        }
      }
    },
    "IotHubNameAvailabilityInfo": {
      "type": "object",
      "description": "The properties indicating whether a given IoT hub name is available.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "The value which indicates whether the provided name is available.",
          "readOnly": true
        },
        "reason": {
          "$ref": "#/definitions/IotHubNameUnavailabilityReason",
          "description": "The reason for unavailability.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The detailed reason message."
        }
      }
    },
    "IotHubNameUnavailabilityReason": {
      "type": "string",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "IotHubNameUnavailabilityReason",
        "modelAsString": false
      }
    },
    "IotHubPrivateEndpointConnection": {
      "type": "object",
      "description": "The private endpoint connection of an IotHub",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IotHubPrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a IotHubPrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IotHubPrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/IotHubPrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IotHubPrivateEndpointGroupInformation": {
      "type": "object",
      "description": "The group information for creating a private endpoint on an IotHub",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GroupIdInformationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IotHubPrivateEndpointGroupInformationListResult": {
      "type": "object",
      "description": "The response of a IotHubPrivateEndpointGroupInformation list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IotHubPrivateEndpointGroupInformation items on this page",
          "items": {
            "$ref": "#/definitions/IotHubPrivateEndpointGroupInformation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IotHubProperties": {
      "type": "object",
      "description": "The properties of an IoT hub.",
      "properties": {
        "authorizationPolicies": {
          "type": "array",
          "description": "The shared access policies you can use to secure a connection to the IoT hub.",
          "items": {
            "$ref": "#/definitions/SharedAccessSignatureAuthorizationRule"
          },
          "x-ms-identifiers": []
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "If true, SAS tokens with Iot hub scoped SAS keys cannot be used for authentication."
        },
        "disableDeviceSAS": {
          "type": "boolean",
          "description": "If true, all device(including Edge devices but excluding modules) scoped SAS keys cannot be used for authentication."
        },
        "disableModuleSAS": {
          "type": "boolean",
          "description": "If true, all module scoped SAS keys cannot be used for authentication."
        },
        "restrictOutboundNetworkAccess": {
          "type": "boolean",
          "description": "If true, egress from IotHub will be restricted to only the allowed FQDNs that are configured via allowedFqdnList."
        },
        "allowedFqdnList": {
          "type": "array",
          "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Iot Hub.",
          "items": {
            "type": "string"
          }
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether requests from Public Network are allowed"
        },
        "ipFilterRules": {
          "type": "array",
          "description": "The IP filter rules.",
          "items": {
            "$ref": "#/definitions/IpFilterRule"
          },
          "x-ms-identifiers": []
        },
        "networkRuleSets": {
          "$ref": "#/definitions/NetworkRuleSetProperties",
          "description": "Network Rule Set Properties of IotHub"
        },
        "minTlsVersion": {
          "type": "string",
          "description": "Specifies the minimum TLS version to support for this hub. Can be set to \"1.2\" to have clients that use a TLS version below 1.2 to be rejected."
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "Private endpoint connections created on this IotHub",
          "items": {
            "$ref": "#/definitions/Azure.ResourceManager.PrivateEndpointConnection"
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "The hub state.",
          "readOnly": true
        },
        "hostName": {
          "type": "string",
          "description": "The name of the host.",
          "readOnly": true
        },
        "eventHubEndpoints": {
          "type": "object",
          "description": "The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.",
          "additionalProperties": {
            "$ref": "#/definitions/EventHubProperties"
          }
        },
        "routing": {
          "$ref": "#/definitions/RoutingProperties",
          "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging"
        },
        "storageEndpoints": {
          "type": "object",
          "description": "The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.",
          "additionalProperties": {
            "$ref": "#/definitions/StorageEndpointProperties"
          }
        },
        "messagingEndpoints": {
          "type": "object",
          "description": "The messaging endpoint properties for the file upload notification queue.",
          "additionalProperties": {
            "$ref": "#/definitions/MessagingEndpointProperties"
          }
        },
        "enableFileUploadNotifications": {
          "type": "boolean",
          "description": "If True, file upload notifications are enabled."
        },
        "cloudToDevice": {
          "$ref": "#/definitions/CloudToDeviceProperties",
          "description": "The IoT hub cloud-to-device messaging properties."
        },
        "comments": {
          "type": "string",
          "description": "IoT hub comments."
        },
        "features": {
          "$ref": "#/definitions/Capabilities",
          "description": "The capabilities and features enabled for the IoT hub."
        },
        "locations": {
          "type": "array",
          "description": "Primary and secondary location for iot hub",
          "items": {
            "$ref": "#/definitions/IotHubLocationDescription"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "enableDataResidency": {
          "type": "boolean",
          "description": "This property when set to true, will enable data residency, thus, disabling disaster recovery."
        }
      }
    },
    "IotHubQuotaMetricInfo": {
      "type": "object",
      "description": "Quota metrics properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the quota metric.",
          "readOnly": true
        },
        "currentValue": {
          "type": "integer",
          "format": "int32",
          "description": "The current value for the quota metric.",
          "readOnly": true
        },
        "maxValue": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum value of the quota metric.",
          "readOnly": true
        }
      }
    },
    "IotHubReplicaRoleType": {
      "type": "string",
      "enum": [
        "primary",
        "secondary"
      ],
      "x-ms-enum": {
        "name": "IotHubReplicaRoleType",
        "modelAsString": true
      }
    },
    "IotHubScaleType": {
      "type": "string",
      "enum": [
        "Automatic",
        "Manual",
        "None"
      ],
      "x-ms-enum": {
        "name": "IotHubScaleType",
        "modelAsString": false
      }
    },
    "IotHubSku": {
      "type": "string",
      "enum": [
        "F1",
        "S1",
        "S2",
        "S3",
        "B1",
        "B2",
        "B3"
      ],
      "x-ms-enum": {
        "name": "IotHubSku",
        "modelAsString": true
      }
    },
    "IotHubSkuDescription": {
      "type": "object",
      "description": "SKU properties.",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/IotHubSkuInfo",
          "description": "The type of the resource."
        },
        "capacity": {
          "$ref": "#/definitions/IotHubCapacity",
          "description": "IotHub capacity"
        }
      },
      "required": [
        "sku",
        "capacity"
      ]
    },
    "IotHubSkuInfo": {
      "type": "object",
      "description": "Information about the SKU of the IoT hub.",
      "properties": {
        "name": {
          "$ref": "#/definitions/IotHubSku",
          "description": "The name of the SKU."
        },
        "tier": {
          "$ref": "#/definitions/IotHubSkuTier",
          "description": "The billing tier for the IoT hub.",
          "readOnly": true
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits."
        }
      },
      "required": [
        "name"
      ]
    },
    "IotHubSkuTier": {
      "type": "string",
      "enum": [
        "Free",
        "Standard",
        "Basic"
      ],
      "x-ms-enum": {
        "name": "IotHubSkuTier",
        "modelAsString": false
      }
    },
    "IpFilterActionType": {
      "type": "string",
      "enum": [
        "Accept",
        "Reject"
      ],
      "x-ms-enum": {
        "name": "IpFilterActionType",
        "modelAsString": false
      }
    },
    "IpFilterRule": {
      "type": "object",
      "description": "The IP filter rules for the IoT hub.",
      "properties": {
        "filterName": {
          "type": "string",
          "description": "The name of the IP filter rule."
        },
        "action": {
          "$ref": "#/definitions/IpFilterActionType",
          "description": "The desired action for requests captured by this rule."
        },
        "ipMask": {
          "type": "string",
          "description": "A string that contains the IP address range in CIDR notation for the rule."
        }
      },
      "required": [
        "filterName",
        "action",
        "ipMask"
      ]
    },
    "JobResponse": {
      "type": "object",
      "description": "The properties of the Job Response object.",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "The job identifier.",
          "readOnly": true
        },
        "startTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the job.",
          "readOnly": true
        },
        "endTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The time the job stopped processing.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/JobType",
          "description": "The type of the job.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "The status of the job.",
          "readOnly": true
        },
        "failureReason": {
          "type": "string",
          "description": "If status == failed, this string containing the reason for the failure.",
          "readOnly": true
        },
        "statusMessage": {
          "type": "string",
          "description": "The status message for the job.",
          "readOnly": true
        },
        "parentJobId": {
          "type": "string",
          "description": "The job identifier of the parent job, if any.",
          "readOnly": true
        }
      }
    },
    "JobStatus": {
      "type": "string",
      "enum": [
        "unknown",
        "enqueued",
        "running",
        "completed",
        "failed",
        "cancelled"
      ],
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": false
      }
    },
    "JobType": {
      "type": "string",
      "enum": [
        "unknown",
        "export",
        "import",
        "backup",
        "readDeviceProperties",
        "writeDeviceProperties",
        "updateDeviceConfiguration",
        "rebootDevice",
        "factoryResetDevice",
        "firmwareUpdate"
      ],
      "x-ms-enum": {
        "name": "JobType",
        "modelAsString": true
      }
    },
    "ManagedIdentity": {
      "type": "object",
      "description": "The properties of the Managed identity.",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "The user assigned identity."
        }
      }
    },
    "MatchedRoute": {
      "type": "object",
      "description": "Routes that matched",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RouteProperties",
          "description": "Properties of routes that matched"
        }
      }
    },
    "MessagingEndpointProperties": {
      "type": "object",
      "description": "The properties of the messaging endpoints used by this IoT hub.",
      "properties": {
        "lockDurationAsIso8601": {
          "type": "string",
          "format": "duration",
          "description": "The lock duration. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload."
        },
        "ttlAsIso8601": {
          "type": "string",
          "format": "duration",
          "description": "The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload."
        },
        "maxDeliveryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of times the IoT hub attempts to deliver a message. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload."
        }
      }
    },
    "Name": {
      "type": "object",
      "description": "Name of Iot Hub type",
      "properties": {
        "value": {
          "type": "string",
          "description": "IotHub type"
        },
        "localizedValue": {
          "type": "string",
          "description": "Localized value of name"
        }
      }
    },
    "NetworkRuleIPAction": {
      "type": "string",
      "enum": [
        "Allow"
      ],
      "x-ms-enum": {
        "name": "NetworkRuleIPAction",
        "modelAsString": true
      }
    },
    "NetworkRuleSetIpRule": {
      "type": "object",
      "description": "IP Rule to be applied as part of Network Rule Set",
      "properties": {
        "filterName": {
          "type": "string",
          "description": "Name of the IP filter rule."
        },
        "action": {
          "$ref": "#/definitions/NetworkRuleIPAction",
          "description": "IP Filter Action"
        },
        "ipMask": {
          "type": "string",
          "description": "A string that contains the IP address range in CIDR notation for the rule."
        }
      },
      "required": [
        "filterName",
        "ipMask"
      ]
    },
    "NetworkRuleSetProperties": {
      "type": "object",
      "description": "Network Rule Set Properties of IotHub",
      "properties": {
        "defaultAction": {
          "$ref": "#/definitions/DefaultAction",
          "description": "Default Action for Network Rule Set"
        },
        "applyToBuiltInEventHubEndpoint": {
          "type": "boolean",
          "description": "If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub"
        },
        "ipRules": {
          "type": "array",
          "description": "List of IP Rules",
          "items": {
            "$ref": "#/definitions/NetworkRuleSetIpRule"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "applyToBuiltInEventHubEndpoint",
        "ipRules"
      ]
    },
    "OperationInputs": {
      "type": "object",
      "description": "Input values.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the IoT hub to check."
        }
      },
      "required": [
        "name"
      ]
    },
    "PagedEndpointHealthData": {
      "type": "object",
      "description": "The JSON-serialized array of EndpointHealthData objects with a next link.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EndpointHealthData items on this page",
          "items": {
            "$ref": "#/definitions/EndpointHealthData"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedIotHubQuotaMetricInfo": {
      "type": "object",
      "description": "The JSON-serialized array of IotHubQuotaMetricInfo objects with a next link.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IotHubQuotaMetricInfo items on this page",
          "items": {
            "$ref": "#/definitions/IotHubQuotaMetricInfo"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedIotHubSkuDescription": {
      "type": "object",
      "description": "The JSON-serialized array of IotHubSkuDescription objects with a next link.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IotHubSkuDescription items on this page",
          "items": {
            "$ref": "#/definitions/IotHubSkuDescription"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedJobResponse": {
      "type": "object",
      "description": "The JSON-serialized array of JobResponse objects with a next link.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The JobResponse items on this page",
          "items": {
            "$ref": "#/definitions/JobResponse"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedSharedAccessSignatureAuthorizationRule": {
      "type": "object",
      "description": "The list of shared access policies with a next link.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SharedAccessSignatureAuthorizationRule items on this page",
          "items": {
            "$ref": "#/definitions/SharedAccessSignatureAuthorizationRule"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "The private endpoint property of a private endpoint connection",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "The properties of a private endpoint connection",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The private endpoint property of a private endpoint connection"
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "The current state of a private endpoint connection"
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "The current state of a private endpoint connection",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionStatus",
          "description": "The status of a private endpoint connection"
        },
        "description": {
          "type": "string",
          "description": "The description for the current state of a private endpoint connection"
        },
        "actionsRequired": {
          "type": "string",
          "description": "Actions required for a private endpoint connection"
        }
      },
      "required": [
        "status",
        "description"
      ]
    },
    "PrivateLinkServiceConnectionStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "PrivateLinkServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "RegistryStatistics": {
      "type": "object",
      "description": "Identity registry statistics.",
      "properties": {
        "totalDeviceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total count of devices in the identity registry.",
          "readOnly": true
        },
        "enabledDeviceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of enabled devices in the identity registry.",
          "readOnly": true
        },
        "disabledDeviceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of disabled devices in the identity registry.",
          "readOnly": true
        }
      }
    },
    "ResourceIdentityType": {
      "type": "string",
      "enum": [
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ResourceIdentityType",
        "modelAsString": false
      }
    },
    "RouteCompilationError": {
      "type": "object",
      "description": "Compilation error when evaluating route",
      "properties": {
        "message": {
          "type": "string",
          "description": "Route error message"
        },
        "severity": {
          "$ref": "#/definitions/RouteErrorSeverity",
          "description": "Severity of the route error"
        },
        "location": {
          "$ref": "#/definitions/RouteErrorRange",
          "description": "Location where the route error happened"
        }
      }
    },
    "RouteErrorPosition": {
      "type": "object",
      "description": "Position where the route error happened",
      "properties": {
        "line": {
          "type": "integer",
          "format": "int32",
          "description": "Line where the route error happened"
        },
        "column": {
          "type": "integer",
          "format": "int32",
          "description": "Column where the route error happened"
        }
      }
    },
    "RouteErrorRange": {
      "type": "object",
      "description": "Range of route errors",
      "properties": {
        "start": {
          "$ref": "#/definitions/RouteErrorPosition",
          "description": "Start where the route error happened"
        },
        "end": {
          "$ref": "#/definitions/RouteErrorPosition",
          "description": "End where the route error happened"
        }
      }
    },
    "RouteErrorSeverity": {
      "type": "string",
      "enum": [
        "error",
        "warning"
      ],
      "x-ms-enum": {
        "name": "RouteErrorSeverity",
        "modelAsString": true
      }
    },
    "RouteProperties": {
      "type": "object",
      "description": "The properties of a routing rule that your IoT hub uses to route messages to endpoints.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.",
          "pattern": "^[A-Za-z0-9-._]{1,64}$"
        },
        "source": {
          "$ref": "#/definitions/RoutingSource",
          "description": "The source that the routing rule is to be applied to, such as DeviceMessages."
        },
        "condition": {
          "type": "string",
          "description": "The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language"
        },
        "endpointNames": {
          "type": "array",
          "description": "The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.",
          "items": {
            "type": "string"
          }
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Used to specify whether a route is enabled."
        }
      },
      "required": [
        "name",
        "source",
        "endpointNames",
        "isEnabled"
      ]
    },
    "RoutingCosmosDBSqlApiProperties": {
      "type": "object",
      "description": "The properties related to a cosmos DB sql container endpoint.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
          "pattern": "^[A-Za-z0-9-._]{1,64}$"
        },
        "id": {
          "type": "string",
          "description": "Id of the cosmos DB sql container endpoint",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription identifier of the cosmos DB account."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The name of the resource group of the cosmos DB account."
        },
        "endpointUri": {
          "type": "string",
          "description": "The url of the cosmos DB account. It must include the protocol https://"
        },
        "authenticationType": {
          "$ref": "#/definitions/AuthenticationType",
          "description": "Method used to authenticate against the cosmos DB sql container endpoint"
        },
        "identity": {
          "$ref": "#/definitions/ManagedIdentity",
          "description": "Managed identity properties of routing cosmos DB container endpoint."
        },
        "primaryKey": {
          "type": "string",
          "description": "The primary key of the cosmos DB account."
        },
        "secondaryKey": {
          "type": "string",
          "description": "The secondary key of the cosmos DB account."
        },
        "databaseName": {
          "type": "string",
          "description": "The name of the cosmos DB database in the cosmos DB account."
        },
        "containerName": {
          "type": "string",
          "description": "The name of the cosmos DB sql container in the cosmos DB database."
        },
        "partitionKeyName": {
          "type": "string",
          "description": "The name of the partition key associated with this cosmos DB sql container if one exists. This is an optional parameter."
        },
        "partitionKeyTemplate": {
          "type": "string",
          "description": "The template for generating a synthetic partition key value for use with this cosmos DB sql container. The template must include at least one of the following placeholders: {iothub}, {deviceid}, {DD}, {MM}, and {YYYY}. Any one placeholder may be specified at most once, but order and non-placeholder components are arbitrary. This parameter is only required if PartitionKeyName is specified."
        }
      },
      "required": [
        "name",
        "endpointUri",
        "databaseName",
        "containerName"
      ]
    },
    "RoutingEndpoints": {
      "type": "object",
      "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.",
      "properties": {
        "serviceBusQueues": {
          "type": "array",
          "description": "The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.",
          "items": {
            "$ref": "#/definitions/RoutingServiceBusQueueEndpointProperties"
          }
        },
        "serviceBusTopics": {
          "type": "array",
          "description": "The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.",
          "items": {
            "$ref": "#/definitions/RoutingServiceBusTopicEndpointProperties"
          }
        },
        "eventHubs": {
          "type": "array",
          "description": "The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.",
          "items": {
            "$ref": "#/definitions/RoutingEventHubProperties"
          }
        },
        "storageContainers": {
          "type": "array",
          "description": "The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.",
          "items": {
            "$ref": "#/definitions/RoutingStorageContainerProperties"
          }
        },
        "cosmosDBSqlContainers": {
          "type": "array",
          "description": "The list of Cosmos DB container endpoints that IoT hub routes messages to, based on the routing rules.",
          "items": {
            "$ref": "#/definitions/RoutingCosmosDBSqlApiProperties"
          }
        }
      }
    },
    "RoutingEventHubProperties": {
      "type": "object",
      "description": "The properties related to an event hub endpoint.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the event hub endpoint"
        },
        "connectionString": {
          "type": "string",
          "description": "The connection string of the event hub endpoint. "
        },
        "endpointUri": {
          "type": "string",
          "description": "The url of the event hub endpoint. It must include the protocol sb://"
        },
        "entityPath": {
          "type": "string",
          "description": "Event hub name on the event hub namespace"
        },
        "authenticationType": {
          "$ref": "#/definitions/AuthenticationType",
          "description": "Method used to authenticate against the event hub endpoint"
        },
        "identity": {
          "$ref": "#/definitions/ManagedIdentity",
          "description": "Managed identity properties of routing event hub endpoint."
        },
        "name": {
          "type": "string",
          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
          "pattern": "^[A-Za-z0-9-._]{1,64}$"
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription identifier of the event hub endpoint."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The name of the resource group of the event hub endpoint."
        }
      },
      "required": [
        "name"
      ]
    },
    "RoutingMessage": {
      "type": "object",
      "description": "Routing message",
      "properties": {
        "body": {
          "type": "string",
          "description": "Body of routing message"
        },
        "appProperties": {
          "type": "object",
          "description": "App properties",
          "additionalProperties": {
            "type": "string"
          }
        },
        "systemProperties": {
          "type": "object",
          "description": "System properties",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RoutingProperties": {
      "type": "object",
      "description": "The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging",
      "properties": {
        "endpoints": {
          "$ref": "#/definitions/RoutingEndpoints",
          "description": "The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs."
        },
        "routes": {
          "type": "array",
          "description": "The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.",
          "items": {
            "$ref": "#/definitions/RouteProperties"
          },
          "x-ms-identifiers": []
        },
        "fallbackRoute": {
          "$ref": "#/definitions/FallbackRouteProperties",
          "description": "The properties of the route that is used as a fall-back route when none of the conditions specified in the 'routes' section are met. This is an optional parameter. When this property is not present in the template, the fallback route is disabled by default."
        },
        "enrichments": {
          "type": "array",
          "description": "The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid",
          "items": {
            "$ref": "#/definitions/EnrichmentProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RoutingServiceBusQueueEndpointProperties": {
      "type": "object",
      "description": "The properties related to service bus queue endpoint types.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the service bus queue endpoint"
        },
        "connectionString": {
          "type": "string",
          "description": "The connection string of the service bus queue endpoint."
        },
        "endpointUri": {
          "type": "string",
          "description": "The url of the service bus queue endpoint. It must include the protocol sb://"
        },
        "entityPath": {
          "type": "string",
          "description": "Queue name on the service bus namespace"
        },
        "authenticationType": {
          "$ref": "#/definitions/AuthenticationType",
          "description": "Method used to authenticate against the service bus queue endpoint"
        },
        "identity": {
          "$ref": "#/definitions/ManagedIdentity",
          "description": "Managed identity properties of routing service bus queue endpoint."
        },
        "name": {
          "type": "string",
          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.",
          "pattern": "^[A-Za-z0-9-._]{1,64}$"
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription identifier of the service bus queue endpoint."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The name of the resource group of the service bus queue endpoint."
        }
      },
      "required": [
        "name"
      ]
    },
    "RoutingServiceBusTopicEndpointProperties": {
      "type": "object",
      "description": "The properties related to service bus topic endpoint types.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the service bus topic endpoint"
        },
        "connectionString": {
          "type": "string",
          "description": "The connection string of the service bus topic endpoint."
        },
        "endpointUri": {
          "type": "string",
          "description": "The url of the service bus topic endpoint. It must include the protocol sb://"
        },
        "entityPath": {
          "type": "string",
          "description": "Queue name on the service bus topic"
        },
        "authenticationType": {
          "$ref": "#/definitions/AuthenticationType",
          "description": "Method used to authenticate against the service bus topic endpoint"
        },
        "identity": {
          "$ref": "#/definitions/ManagedIdentity",
          "description": "Managed identity properties of routing service bus topic endpoint."
        },
        "name": {
          "type": "string",
          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.",
          "pattern": "^[A-Za-z0-9-._]{1,64}$"
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription identifier of the service bus topic endpoint."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The name of the resource group of the service bus topic endpoint."
        }
      },
      "required": [
        "name"
      ]
    },
    "RoutingSource": {
      "type": "string",
      "enum": [
        "Invalid",
        "DeviceMessages",
        "TwinChangeEvents",
        "DeviceLifecycleEvents",
        "DeviceJobLifecycleEvents",
        "DeviceConnectionStateEvents"
      ],
      "x-ms-enum": {
        "name": "RoutingSource",
        "modelAsString": true
      }
    },
    "RoutingStorageContainerProperties": {
      "type": "object",
      "description": "The properties related to a storage container endpoint.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the storage container endpoint"
        },
        "connectionString": {
          "type": "string",
          "description": "The connection string of the storage account."
        },
        "endpointUri": {
          "type": "string",
          "description": "The url of the storage endpoint. It must include the protocol https://"
        },
        "authenticationType": {
          "$ref": "#/definitions/AuthenticationType",
          "description": "Method used to authenticate against the storage endpoint"
        },
        "identity": {
          "$ref": "#/definitions/ManagedIdentity",
          "description": "Managed identity properties of routing storage endpoint."
        },
        "name": {
          "type": "string",
          "description": "The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.",
          "pattern": "^[A-Za-z0-9-._]{1,64}$"
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription identifier of the storage account."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The name of the resource group of the storage account."
        },
        "containerName": {
          "type": "string",
          "description": "The name of storage container in the storage account."
        },
        "fileNameFormat": {
          "type": "string",
          "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered."
        },
        "batchFrequencyInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds."
        },
        "maxChunkSizeInBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB)."
        },
        "encoding": {
          "$ref": "#/definitions/RoutingStorageContainerPropertiesEncoding",
          "description": "Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'."
        }
      },
      "required": [
        "name",
        "containerName"
      ]
    },
    "RoutingStorageContainerPropertiesEncoding": {
      "type": "string",
      "enum": [
        "Avro",
        "AvroDeflate",
        "JSON"
      ],
      "x-ms-enum": {
        "name": "RoutingStorageContainerPropertiesEncoding",
        "modelAsString": true
      }
    },
    "RoutingTwin": {
      "type": "object",
      "description": "Twin reference input parameter. This is an optional parameter",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Twin Tags",
          "additionalProperties": {}
        },
        "properties": {
          "$ref": "#/definitions/RoutingTwinProperties"
        }
      }
    },
    "RoutingTwinProperties": {
      "type": "object",
      "properties": {
        "desired": {
          "type": "object",
          "description": "Twin desired properties",
          "additionalProperties": {}
        },
        "reported": {
          "type": "object",
          "description": "Twin desired properties",
          "additionalProperties": {}
        }
      }
    },
    "SharedAccessSignatureAuthorizationRule": {
      "type": "object",
      "description": "The properties of an IoT hub shared access policy.",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "The name of the shared access policy."
        },
        "primaryKey": {
          "type": "string",
          "description": "The primary key."
        },
        "secondaryKey": {
          "type": "string",
          "description": "The secondary key."
        },
        "rights": {
          "$ref": "#/definitions/AccessRights",
          "description": "The permissions assigned to the shared access policy."
        }
      },
      "required": [
        "keyName",
        "rights"
      ]
    },
    "StorageEndpointProperties": {
      "type": "object",
      "description": "The properties of the Azure Storage endpoint for file upload.",
      "properties": {
        "sasTtlAsIso8601": {
          "type": "string",
          "format": "duration",
          "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-file-upload#file-upload-notification-configuration-options."
        },
        "connectionString": {
          "type": "string",
          "description": "The connection string for the Azure Storage account to which files are uploaded."
        },
        "containerName": {
          "type": "string",
          "description": "The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified."
        },
        "authenticationType": {
          "$ref": "#/definitions/AuthenticationType",
          "description": "Specifies authentication type being used for connecting to the storage account."
        },
        "identity": {
          "$ref": "#/definitions/ManagedIdentity",
          "description": "Managed identity properties of storage endpoint for file upload."
        }
      },
      "required": [
        "connectionString",
        "containerName"
      ]
    },
    "TestAllRoutesInput": {
      "type": "object",
      "description": "Input for testing all routes",
      "properties": {
        "routingSource": {
          "$ref": "#/definitions/RoutingSource",
          "description": "Routing source"
        },
        "message": {
          "$ref": "#/definitions/RoutingMessage",
          "description": "Routing message"
        },
        "twin": {
          "$ref": "#/definitions/RoutingTwin",
          "description": "Routing Twin Reference"
        }
      }
    },
    "TestAllRoutesResult": {
      "type": "object",
      "description": "Result of testing all routes",
      "properties": {
        "routes": {
          "type": "array",
          "description": "JSON-serialized array of matched routes",
          "items": {
            "$ref": "#/definitions/MatchedRoute"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "TestResultStatus": {
      "type": "string",
      "enum": [
        "undefined",
        "false",
        "true"
      ],
      "x-ms-enum": {
        "name": "TestResultStatus",
        "modelAsString": true
      }
    },
    "TestRouteInput": {
      "type": "object",
      "description": "Input for testing route",
      "properties": {
        "message": {
          "$ref": "#/definitions/RoutingMessage",
          "description": "Routing message"
        },
        "route": {
          "$ref": "#/definitions/RouteProperties",
          "description": "Route properties"
        },
        "twin": {
          "$ref": "#/definitions/RoutingTwin",
          "description": "Routing Twin Reference"
        }
      },
      "required": [
        "route"
      ]
    },
    "TestRouteResult": {
      "type": "object",
      "description": "Result of testing one route",
      "properties": {
        "result": {
          "$ref": "#/definitions/TestResultStatus",
          "description": "Result of testing route"
        },
        "details": {
          "$ref": "#/definitions/TestRouteResultDetails",
          "description": "Detailed result of testing route"
        }
      }
    },
    "TestRouteResultDetails": {
      "type": "object",
      "description": "Detailed result of testing a route",
      "properties": {
        "compilationErrors": {
          "type": "array",
          "description": "JSON-serialized list of route compilation errors",
          "items": {
            "$ref": "#/definitions/RouteCompilationError"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "UserSubscriptionQuota": {
      "type": "object",
      "description": "User subscription quota response",
      "properties": {
        "id": {
          "type": "string",
          "description": "IotHub type id"
        },
        "type": {
          "type": "string",
          "description": "Response type"
        },
        "unit": {
          "type": "string",
          "description": "Unit of IotHub type"
        },
        "currentValue": {
          "type": "integer",
          "format": "int32",
          "description": "Current number of IotHub type"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Numerical limit on IotHub type"
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "IotHub type"
        }
      }
    },
    "UserSubscriptionQuotaListResult": {
      "type": "object",
      "description": "Json-serialized array of User subscription quota response",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserSubscriptionQuota"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-06-30"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_06_30",
            "value": "2023-06-30"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
