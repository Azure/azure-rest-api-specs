{
  "swagger": "2.0",
  "info": {
    "title": "Azure AI",
    "version": "2025-11-15-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "Foundry Project endpoint in the form\n\"https://{ai-services-account-name}.services.ai.azure.com/api/projects/{project-name}\".\nIf you only have one Project in your Foundry Hub, or to target the default Project\nin your Hub, use the form\n\"https://{ai-services-account-name}.services.ai.azure.com/api/projects/_project\"",
        "required": true,
        "type": "string",
        "format": "uri",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://ai.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://ai.azure.com/.default": ""
      }
    }
  },
  "tags": [
    {
      "name": "Agents"
    },
    {
      "name": "Conversations"
    },
    {
      "name": "Fine-tuning"
    },
    {
      "name": "Responses"
    },
    {
      "name": "Memory stores"
    },
    {
      "name": "Evals"
    }
  ],
  "paths": {
    "/agents": {
      "get": {
        "operationId": "Agents_ListAgents",
        "tags": [
          "Agents"
        ],
        "description": "Returns the list of all agents.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Filter agents by kind. If not provided, all agents are returned.",
            "required": false,
            "type": "string",
            "enum": [
              "prompt",
              "hosted",
              "container_app",
              "workflow"
            ],
            "x-ms-enum": {
              "name": "AgentKind",
              "modelAsString": true,
              "values": [
                {
                  "name": "prompt",
                  "value": "prompt"
                },
                {
                  "name": "hosted",
                  "value": "hosted"
                },
                {
                  "name": "container_app",
                  "value": "container_app"
                },
                {
                  "name": "workflow",
                  "value": "workflow"
                }
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the\ndefault is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`\nfor descending order.",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include after=obj_foo in order to fetch the next page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include before=obj_foo in order to fetch the previous page of the list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/AgentObject"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list."
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list."
                }
              },
              "required": [
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "Agents_CreateAgent",
        "tags": [
          "Agents"
        ],
        "description": "Creates the agent.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AgentObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}": {
      "get": {
        "operationId": "Agents_GetAgent",
        "tags": [
          "Agents"
        ],
        "description": "Retrieves the agent.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AgentObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "Agents_UpdateAgent",
        "tags": [
          "Agents"
        ],
        "description": "Updates the agent by adding a new version if there are any changes to the agent definition.\nIf no changes, returns the existing agent version.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AgentObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Agents_DeleteAgent",
        "tags": [
          "Agents"
        ],
        "description": "Deletes an agent.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeleteAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}/import": {
      "post": {
        "operationId": "Agents_UpdateAgentFromManifest",
        "tags": [
          "Agents"
        ],
        "description": "Updates the agent from a manifest by adding a new version if there are any changes to the agent definition.\nIf no changes, returns the existing agent version.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAgentFromManifestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AgentObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}/operations": {
      "get": {
        "operationId": "Agents_ListAgentContainerOperations",
        "tags": [
          "Agents"
        ],
        "description": "List container operations for an agent.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the\ndefault is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`\nfor descending order.",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include after=obj_foo in order to fetch the next page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include before=obj_foo in order to fetch the previous page of the list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/AgentContainerOperationObject"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list."
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list."
                }
              },
              "required": [
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}/operations/{operation_id}": {
      "get": {
        "operationId": "Agents_GetAgentContainerOperation",
        "tags": [
          "Agents"
        ],
        "description": "Get the status of a container operation for an agent.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operation_id",
            "in": "path",
            "description": "The operation ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AgentContainerOperationObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}/versions": {
      "get": {
        "operationId": "Agents_ListAgentVersions",
        "tags": [
          "Agents"
        ],
        "description": "Returns the list of versions of an agent.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent to retrieve versions for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the\ndefault is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`\nfor descending order.",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include after=obj_foo in order to fetch the next page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include before=obj_foo in order to fetch the previous page of the list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/AgentVersionObject"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list."
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list."
                }
              },
              "required": [
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "Agents_CreateAgentVersion",
        "tags": [
          "Agents"
        ],
        "description": "Create a new agent version.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The unique name that identifies the agent. Name can be used to retrieve/update/delete the agent.\n- Must start and end with alphanumeric characters,\n- Can contain hyphens in the middle\n- Must not exceed 63 characters.",
            "required": true,
            "type": "string",
            "maxLength": 63
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAgentVersionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AgentVersionObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}/versions/{agent_version}": {
      "get": {
        "operationId": "Agents_GetAgentVersion",
        "tags": [
          "Agents"
        ],
        "description": "Retrieves a specific version of an agent.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent_version",
            "in": "path",
            "description": "The version of the agent to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AgentVersionObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Agents_DeleteAgentVersion",
        "tags": [
          "Agents"
        ],
        "description": "Deletes a specific version of an agent.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent to delete.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent_version",
            "in": "path",
            "description": "The version of the agent to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeleteAgentVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}/versions/{agent_version}/containers/default": {
      "get": {
        "operationId": "Agents_GetAgentContainer",
        "tags": [
          "Agents"
        ],
        "description": "Get a container for a specific version of an agent.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent_version",
            "in": "path",
            "description": "The version of the agent.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AgentContainerObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}/versions/{agent_version}/containers/default/operations": {
      "get": {
        "operationId": "Agents_ListAgentVersionContainerOperations",
        "tags": [
          "Agents"
        ],
        "description": "List container operations for a specific version of an agent.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent_version",
            "in": "path",
            "description": "The version of the agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the\ndefault is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`\nfor descending order.",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include after=obj_foo in order to fetch the next page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include before=obj_foo in order to fetch the previous page of the list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/AgentContainerOperationObject"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list."
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list."
                }
              },
              "required": [
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}/versions/{agent_version}/containers/default:delete": {
      "post": {
        "operationId": "Agents_DeleteAgentContainer",
        "tags": [
          "Agents"
        ],
        "description": "Delete a container for a specific version of an agent. If the container doesn't exist, the operation will be no-op.\nThe operation is a long-running operation. Following the design guidelines for long-running operations in Azure REST APIs.\nhttps://github.com/microsoft/api-guidelines/blob/vNext/azure/ConsiderationsForServiceDesign.md#action-operations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent_version",
            "in": "path",
            "description": "The version of the agent.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/AgentContainerOperationObject"
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}/versions/{agent_version}/containers/default:start": {
      "post": {
        "operationId": "Agents_StartAgentContainer",
        "tags": [
          "Agents"
        ],
        "description": "Start a container for a specific version of an agent. If the container is already running, the operation will be no-op.\nThe operation is a long-running operation. Following the design guidelines for long-running operations in Azure REST APIs.\nhttps://github.com/microsoft/api-guidelines/blob/vNext/azure/ConsiderationsForServiceDesign.md#action-operations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent_version",
            "in": "path",
            "description": "The version of the agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "min_replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The minimum number of replicas. Defaults to 1.",
                  "default": 1
                },
                "max_replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of replicas. Defaults to 1.",
                  "default": 1
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/AgentContainerOperationObject"
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}/versions/{agent_version}/containers/default:stop": {
      "post": {
        "operationId": "Agents_StopAgentContainer",
        "tags": [
          "Agents"
        ],
        "description": "Stop a container for a specific version of an agent. If the container is not running, or already stopped, the operation will be no-op.\nThe operation is a long-running operation. Following the design guidelines for long-running operations in Azure REST APIs.\nhttps://github.com/microsoft/api-guidelines/blob/vNext/azure/ConsiderationsForServiceDesign.md#action-operations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent_version",
            "in": "path",
            "description": "The version of the agent.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/AgentContainerOperationObject"
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}/versions/{agent_version}/containers/default:update": {
      "post": {
        "operationId": "Agents_UpdateAgentContainer",
        "tags": [
          "Agents"
        ],
        "description": "Update a container for a specific version of an agent. If the container is not running, the operation will be no-op.\nThe operation is a long-running operation. Following the design guidelines for long-running operations in Azure REST APIs.\nhttps://github.com/microsoft/api-guidelines/blob/vNext/azure/ConsiderationsForServiceDesign.md#action-operations",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The name of the agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agent_version",
            "in": "path",
            "description": "The version of the agent.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "min_replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The minimum number of replicas."
                },
                "max_replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of replicas."
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/AgentContainerOperationObject"
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents/{agent_name}/versions:import": {
      "post": {
        "operationId": "Agents_CreateAgentVersionFromManifest",
        "tags": [
          "Agents"
        ],
        "description": "Create a new agent version from a manifest.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "agent_name",
            "in": "path",
            "description": "The unique name that identifies the agent. Name can be used to retrieve/update/delete the agent.\n- Must start and end with alphanumeric characters,\n- Can contain hyphens in the middle\n- Must not exceed 63 characters.",
            "required": true,
            "type": "string",
            "maxLength": 63
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAgentVersionFromManifestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AgentVersionObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/agents:import": {
      "post": {
        "operationId": "Agents_CreateAgentFromManifest",
        "tags": [
          "Agents"
        ],
        "description": "Creates an agent from a manifest.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAgentFromManifestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AgentObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/connections": {
      "get": {
        "operationId": "Connections_List",
        "description": "List all connections in the project, without populating connection credentials",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "connectionType",
            "in": "query",
            "description": "List connections of this specific type",
            "required": false,
            "type": "string",
            "enum": [
              "AzureOpenAI",
              "AzureBlob",
              "AzureStorageAccount",
              "CognitiveSearch",
              "CosmosDB",
              "ApiKey",
              "AppConfig",
              "AppInsights",
              "CustomKeys",
              "RemoteTool"
            ],
            "x-ms-enum": {
              "name": "ConnectionType",
              "modelAsString": true,
              "values": [
                {
                  "name": "AzureOpenAI",
                  "value": "AzureOpenAI",
                  "description": "Azure OpenAI Service"
                },
                {
                  "name": "AzureBlobStorage",
                  "value": "AzureBlob",
                  "description": "Azure Blob Storage, with specified container"
                },
                {
                  "name": "AzureStorageAccount",
                  "value": "AzureStorageAccount",
                  "description": "Azure Blob Storage, with container not specified (used by Agents)"
                },
                {
                  "name": "AzureAISearch",
                  "value": "CognitiveSearch",
                  "description": "Azure AI Search"
                },
                {
                  "name": "CosmosDB",
                  "value": "CosmosDB",
                  "description": "CosmosDB"
                },
                {
                  "name": "APIKey",
                  "value": "ApiKey",
                  "description": "Generic connection that uses API Key authentication"
                },
                {
                  "name": "ApplicationConfiguration",
                  "value": "AppConfig",
                  "description": "Application Configuration"
                },
                {
                  "name": "ApplicationInsights",
                  "value": "AppInsights",
                  "description": "Application Insights"
                },
                {
                  "name": "Custom",
                  "value": "CustomKeys",
                  "description": "Custom Keys"
                },
                {
                  "name": "RemoteTool",
                  "value": "RemoteTool",
                  "description": "Remote tool"
                }
              ]
            }
          },
          {
            "name": "defaultConnection",
            "in": "query",
            "description": "List connections that are default connections",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedConnection"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Connections_List_MaximumSet": {
            "$ref": "./examples/Connections_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/connections/{name}": {
      "get": {
        "operationId": "Connections_Get",
        "description": "Get a connection by name, without populating connection credentials",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The friendly name of the connection, provided by the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Connection"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Connections_Get_MaximumSet": {
            "$ref": "./examples/Connections_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/connections/{name}/getConnectionWithCredentials": {
      "post": {
        "operationId": "Connections_GetWithCredentials",
        "description": "Get a connection by name, with its connection credentials",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The friendly name of the connection, provided by the user.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Connection"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Connections_GetWithCredentials_MaximumSet": {
            "$ref": "./examples/Connections_GetWithCredentials_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/datasets": {
      "get": {
        "operationId": "Datasets_ListLatest",
        "description": "List the latest version of each DatasetVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_ListLatest_MaximumSet": {
            "$ref": "./examples/Datasets_ListLatest_MaximumSet_Gen.json"
          },
          "Datasets_ListLatest_MinimumSet": {
            "$ref": "./examples/Datasets_ListLatest_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/datasets/{name}/versions": {
      "get": {
        "operationId": "Datasets_ListVersions",
        "description": "List all versions of the given DatasetVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_ListVersions_MaximumSet": {
            "$ref": "./examples/Datasets_ListVersions_MaximumSet_Gen.json"
          },
          "Datasets_ListVersions_MinimumSet": {
            "$ref": "./examples/Datasets_ListVersions_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/datasets/{name}/versions/{version}": {
      "get": {
        "operationId": "Datasets_GetVersion",
        "description": "Get the specific version of the DatasetVersion. The service returns 404 Not Found error if the DatasetVersion does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_GetVersion_MaximumSet": {
            "$ref": "./examples/Datasets_GetVersion_MaximumSet_Gen.json"
          },
          "Datasets_GetVersion_MinimumSet": {
            "$ref": "./examples/Datasets_GetVersion_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "Datasets_CreateOrUpdateVersion",
        "description": "Create a new or update an existing DatasetVersion with the given version id",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "datasetVersion",
            "in": "body",
            "description": "The DatasetVersion to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/DatasetVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_CreateOrUpdateVersion_MaximumSet": {
            "$ref": "./examples/Datasets_CreateOrUpdateVersion_MaximumSet_Gen.json"
          },
          "Datasets_CreateOrUpdateVersion_MinimumSet": {
            "$ref": "./examples/Datasets_CreateOrUpdateVersion_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Datasets_DeleteVersion",
        "description": "Delete the specific version of the DatasetVersion. The service returns 204 No Content if the DatasetVersion was deleted successfully or if the DatasetVersion does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the DatasetVersion to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_DeleteVersion_MaximumSet": {
            "$ref": "./examples/Datasets_DeleteVersion_MaximumSet_Gen.json"
          },
          "Datasets_DeleteVersion_MinimumSet": {
            "$ref": "./examples/Datasets_DeleteVersion_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/datasets/{name}/versions/{version}/credentials": {
      "post": {
        "operationId": "Datasets_GetCredentials",
        "description": "Get the SAS credential to access the storage account associated with a Dataset version.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to operate on.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AssetCredentialResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_GetCredentials_MaximumSet": {
            "$ref": "./examples/Datasets_GetCredentials_MaximumSet_Gen.json"
          },
          "Datasets_GetCredentials_MinimumSet": {
            "$ref": "./examples/Datasets_GetCredentials_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/datasets/{name}/versions/{version}/startPendingUpload": {
      "post": {
        "operationId": "Datasets_StartPendingUploadVersion",
        "description": "Start a new or get an existing pending upload of a dataset for a specific version.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the DatasetVersion to operate on.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pendingUploadRequest",
            "in": "body",
            "description": "The pending upload request parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PendingUploadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PendingUploadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Datasets_StartPendingUploadVersion_MaximumSet": {
            "$ref": "./examples/Datasets_StartPendingUploadVersion_MaximumSet_Gen.json"
          },
          "Datasets_StartPendingUploadVersion_MinimumSet": {
            "$ref": "./examples/Datasets_StartPendingUploadVersion_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/deployments": {
      "get": {
        "operationId": "Deployments_List",
        "description": "List all deployed models in the project",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "modelPublisher",
            "in": "query",
            "description": "Model publisher to filter models by",
            "required": false,
            "type": "string"
          },
          {
            "name": "modelName",
            "in": "query",
            "description": "Model name (the publisher specific name) to filter models by",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "description": "Type of deployment to filter list by",
            "required": false,
            "type": "string",
            "enum": [
              "ModelDeployment"
            ],
            "x-ms-enum": {
              "name": "DeploymentType",
              "modelAsString": true,
              "values": [
                {
                  "name": "ModelDeployment",
                  "value": "ModelDeployment",
                  "description": "Model deployment"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedDeployment"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Deployments_List_MaximumSet": {
            "$ref": "./examples/Deployments_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/deployments/{name}": {
      "get": {
        "operationId": "Deployments_Get",
        "description": "Get a deployed model.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the deployment",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Get_MaximumSet": {
            "$ref": "./examples/Deployments_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/evaluation_taxonomies": {
      "get": {
        "operationId": "EvaluationTaxonomies_List",
        "description": "List evaluation taxonomies",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "inputName",
            "in": "query",
            "description": "Filter by the evaluation input name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "inputType",
            "in": "query",
            "description": "Filter by taxonomy input type.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEvaluationTaxonomy"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "EvaluationTaxonomies_List_MaximumSet - generated by [MaximumSet] rule - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/EvaluationTaxonomies_List_MaximumSet_Gen.json"
          },
          "EvaluationTaxonomies_List_MaximumSet - generated by [MaximumSet] rule - generated by [MinimumSet] rule": {
            "$ref": "./examples/EvaluationTaxonomies_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/evaluation_taxonomies/{name}": {
      "get": {
        "operationId": "EvaluationTaxonomies_Get",
        "description": "Get an evaluation run by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvaluationTaxonomy"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "EvaluationTaxonomies_Get_MaximumSet - generated by [MaximumSet] rule - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/EvaluationTaxonomies_Get_MaximumSet_Gen.json"
          },
          "EvaluationTaxonomies_Get_MaximumSet - generated by [MaximumSet] rule - generated by [MinimumSet] rule": {
            "$ref": "./examples/EvaluationTaxonomies_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "EvaluationTaxonomies_Create",
        "description": "Create an evaluation taxonomy.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the evaluation taxonomy.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The evaluation taxonomy.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EvaluationTaxonomy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/EvaluationTaxonomy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "EvaluationTaxonomies_Create_MaximumSet - generated by [MaximumSet] rule - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/EvaluationTaxonomies_Create_MaximumSet_Gen.json"
          },
          "EvaluationTaxonomies_Create_MinimumSet": {
            "$ref": "./examples/EvaluationTaxonomies_Create_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "EvaluationTaxonomies_Update",
        "description": "Update an evaluation taxonomy.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the evaluation taxonomy.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The evaluation taxonomy.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EvaluationTaxonomyUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvaluationTaxonomy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "EvaluationTaxonomies_Update_MaximumSet - generated by [MaximumSet] rule - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/EvaluationTaxonomies_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "EvaluationTaxonomies_Delete",
        "description": "Delete an evaluation taxonomy by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "EvaluationTaxonomies_Delete_MaximumSet - generated by [MaximumSet] rule - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/EvaluationTaxonomies_Delete_MaximumSet_Gen.json"
          },
          "EvaluationTaxonomies_Delete_MaximumSet - generated by [MaximumSet] rule - generated by [MaximumSet] rule - generated by [MinimumSet] rule": {
            "$ref": "./examples/EvaluationTaxonomies_Delete_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/evaluationrules": {
      "get": {
        "operationId": "EvaluationRules_List",
        "description": "List all evaluation rules.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "actionType",
            "in": "query",
            "description": "Filter by the type of evaluation rule.",
            "required": false,
            "type": "string",
            "enum": [
              "continuousEvaluation",
              "humanEvaluation"
            ],
            "x-ms-enum": {
              "name": "EvaluationRuleActionType",
              "modelAsString": true,
              "values": [
                {
                  "name": "continuousEvaluation",
                  "value": "continuousEvaluation",
                  "description": "Continuous evaluation."
                },
                {
                  "name": "humanEvaluation",
                  "value": "humanEvaluation",
                  "description": "Human evaluation."
                }
              ]
            }
          },
          {
            "name": "agentName",
            "in": "query",
            "description": "Filter by the agent name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "Filter by the enabled status.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEvaluationRule"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "EvaluationRules_List_MaximumSet": {
            "$ref": "./examples/EvaluationRules_List_MaximumSet_Gen.json"
          },
          "EvaluationRules_List_MinimumSet": {
            "$ref": "./examples/EvaluationRules_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/evaluationrules/{id}": {
      "get": {
        "operationId": "EvaluationRules_Get",
        "description": "Get an evaluation rule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the evaluation rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvaluationRule"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "EvaluationRules_Get_MaximumSet": {
            "$ref": "./examples/EvaluationRules_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "EvaluationRules_CreateOrUpdate",
        "description": "Create or update an evaluation rule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the evaluation rule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "evaluationRule",
            "in": "body",
            "description": "Evaluation rule resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EvaluationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvaluationRule"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/EvaluationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "EvaluationRules_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/EvaluationRules_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "EvaluationRules_Delete",
        "description": "Delete an evaluation rule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the evaluation rule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "EvaluationRules_Delete_MaximumSet": {
            "$ref": "./examples/EvaluationRules_Delete_MaximumSet_Gen.json"
          },
          "EvaluationRules_Delete_MinimumSet": {
            "$ref": "./examples/EvaluationRules_Delete_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/evaluators": {
      "get": {
        "operationId": "Evaluators_ListLatestVersions",
        "description": "List the latest version of each evaluator",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter evaluators by type. Possible values: 'all', 'custom', 'builtin'.",
            "required": false,
            "type": "string",
            "enum": [
              "builtin",
              "custom",
              "all"
            ],
            "x-ms-enum": {
              "modelAsString": true,
              "values": [
                {
                  "name": "built_in",
                  "value": "builtin",
                  "description": "Built-in evaluator (Microsoft provided)"
                },
                {
                  "name": "custom",
                  "value": "custom",
                  "description": "Custom evaluator"
                },
                {
                  "name": "all",
                  "value": "all"
                }
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEvaluatorVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluators_ListLatestVersions_MaximumSet": {
            "$ref": "./examples/Evaluators_ListLatestVersions_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/evaluators/{name}/versions": {
      "get": {
        "operationId": "Evaluators_ListVersions",
        "description": "List all versions of the given evaluator",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter evaluators by type. Possible values: 'all', 'custom', 'builtin'.",
            "required": false,
            "type": "string",
            "enum": [
              "builtin",
              "custom",
              "all"
            ],
            "x-ms-enum": {
              "modelAsString": true,
              "values": [
                {
                  "name": "built_in",
                  "value": "builtin",
                  "description": "Built-in evaluator (Microsoft provided)"
                },
                {
                  "name": "custom",
                  "value": "custom",
                  "description": "Custom evaluator"
                },
                {
                  "name": "all",
                  "value": "all"
                }
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEvaluatorVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Evaluators_ListVersions_MaximumSet": {
            "$ref": "./examples/Evaluators_ListVersions_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "operationId": "Evaluators_CreateVersion",
        "description": "Create a new EvaluatorVersion with auto incremented version id",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/EvaluatorVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/evaluators/{name}/versions/{version}": {
      "get": {
        "operationId": "Evaluators_GetVersion",
        "description": "Get the specific version of the EvaluatorVersion. The service returns 404 Not Found error if the EvaluatorVersion does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the EvaluatorVersion to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvaluatorVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Evaluators_UpdateVersion",
        "description": "Update an existing EvaluatorVersion with the given version id",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the EvaluatorVersion to update.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvaluatorVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Evaluators_DeleteVersion",
        "description": "Delete the specific version of the EvaluatorVersion. The service returns 204 No Content if the EvaluatorVersion was deleted successfully or if the EvaluatorVersion does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the EvaluatorVersion to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/indexes": {
      "get": {
        "operationId": "Indexes_ListLatest",
        "description": "List the latest version of each Index",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_ListLatest_MaximumSet": {
            "$ref": "./examples/Indexes_ListLatest_MaximumSet_Gen.json"
          },
          "Indexes_ListLatest_MinimumSet": {
            "$ref": "./examples/Indexes_ListLatest_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/indexes/{name}/versions": {
      "get": {
        "operationId": "Indexes_ListVersions",
        "description": "List all versions of the given Index",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedIndex"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_ListVersions_MaximumSet": {
            "$ref": "./examples/Indexes_ListVersions_MaximumSet_Gen.json"
          },
          "Indexes_ListVersions_MinimumSet": {
            "$ref": "./examples/Indexes_ListVersions_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/indexes/{name}/versions/{version}": {
      "get": {
        "operationId": "Indexes_GetVersion",
        "description": "Get the specific version of the Index. The service returns 404 Not Found error if the Index does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the Index to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_GetVersion_MaximumSet": {
            "$ref": "./examples/Indexes_GetVersion_MaximumSet_Gen.json"
          },
          "Indexes_GetVersion_MinimumSet": {
            "$ref": "./examples/Indexes_GetVersion_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "Indexes_CreateOrUpdateVersion",
        "description": "Create a new or update an existing Index with the given version id",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The specific version id of the Index to create or update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "index",
            "in": "body",
            "description": "The Index to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Index"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Index"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_CreateOrUpdateVersion_MaximumSet": {
            "$ref": "./examples/Indexes_CreateOrUpdateVersion_MaximumSet_Gen.json"
          },
          "Indexes_CreateOrUpdateVersion_MinimumSet": {
            "$ref": "./examples/Indexes_CreateOrUpdateVersion_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Indexes_DeleteVersion",
        "description": "Delete the specific version of the Index. The service returns 204 No Content if the Index was deleted successfully or if the Index does not exist.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version of the Index to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Indexes_DeleteVersion_MaximumSet": {
            "$ref": "./examples/Indexes_DeleteVersion_MaximumSet_Gen.json"
          },
          "Indexes_DeleteVersion_MinimumSet": {
            "$ref": "./examples/Indexes_DeleteVersion_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/insights": {
      "get": {
        "operationId": "Insights_List",
        "description": "List all insights in reverse chronological order (newest first).",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by the type of analysis.",
            "required": false,
            "type": "string",
            "enum": [
              "EvaluationRunClusterInsight",
              "AgentClusterInsight",
              "EvaluationComparison"
            ],
            "x-ms-enum": {
              "name": "InsightType",
              "modelAsString": true,
              "values": [
                {
                  "name": "EvaluationRunClusterInsight",
                  "value": "EvaluationRunClusterInsight",
                  "description": "Insights on an Evaluation run result."
                },
                {
                  "name": "AgentClusterInsight",
                  "value": "AgentClusterInsight",
                  "description": "Cluster Insight on an Agent."
                },
                {
                  "name": "EvaluationComparison",
                  "value": "EvaluationComparison",
                  "description": "Evaluation Comparison."
                }
              ]
            }
          },
          {
            "name": "evalId",
            "in": "query",
            "description": "Filter by the evaluation ID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "query",
            "description": "Filter by the evaluation run ID.",
            "required": false,
            "type": "string"
          },
          {
            "name": "agentName",
            "in": "query",
            "description": "Filter by the agent name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeCoordinates",
            "in": "query",
            "description": "Whether to include coordinates for visualization in the response. Defaults to false.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedInsight"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "operationId": "Insights_Generate",
        "description": "Generate Insights",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "Repeatability-Request-ID",
            "in": "header",
            "description": "Unique, client-generated identifier for ensuring request idempotency. Use the same ID for retries to prevent duplicate evaluations.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "repeatabilityRequestId"
          },
          {
            "name": "Repeatability-First-Sent",
            "in": "header",
            "description": "Timestamp indicating when this request was first initiated. Used in conjunction with repeatability-request-id for idempotency control.",
            "required": false,
            "type": "string",
            "format": "date-time",
            "x-ms-client-name": "repeatabilityFirstSent"
          },
          {
            "name": "insight",
            "in": "body",
            "description": "Complete evaluation configuration including data source, evaluators, and result settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Insight"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Insight"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/insights/{id}": {
      "get": {
        "operationId": "Insights_Get",
        "description": "Get a specific insight by Id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier for the insights report.",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeCoordinates",
            "in": "query",
            "description": "Whether to include coordinates for visualization in the response. Defaults to false.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Insight"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/memory_stores": {
      "get": {
        "operationId": "listMemoryStores",
        "tags": [
          "Memory stores"
        ],
        "description": "List all memory stores.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the\ndefault is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`\nfor descending order.",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include after=obj_foo in order to fetch the next page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include before=obj_foo in order to fetch the previous page of the list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/MemoryStoreObject"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list."
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list."
                }
              },
              "required": [
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "createMemoryStore",
        "tags": [
          "Memory stores"
        ],
        "description": "Create a memory store.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the memory store.",
                  "maxLength": 256
                },
                "description": {
                  "type": "string",
                  "description": "A human-readable description of the memory store.",
                  "maxLength": 512
                },
                "metadata": {
                  "type": "object",
                  "description": "Arbitrary key-value metadata to associate with the memory store.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "definition": {
                  "$ref": "#/definitions/MemoryStoreDefinition",
                  "description": "The memory store definition.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                }
              },
              "required": [
                "name",
                "definition"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/MemoryStoreObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/memory_stores/{name}": {
      "get": {
        "operationId": "getMemoryStore",
        "tags": [
          "Memory stores"
        ],
        "description": "Retrieve a memory store.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the memory store to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/MemoryStoreObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "updateMemoryStore",
        "tags": [
          "Memory stores"
        ],
        "description": "Update a memory store.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the memory store to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "A human-readable description of the memory store.",
                  "maxLength": 512
                },
                "metadata": {
                  "type": "object",
                  "description": "Arbitrary key-value metadata to associate with the memory store.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/MemoryStoreObject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteMemoryStore",
        "tags": [
          "Memory stores"
        ],
        "description": "Delete a memory store.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the memory store to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeleteMemoryStoreResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/memory_stores/{name}:search_memories": {
      "post": {
        "operationId": "searchMemories",
        "tags": [
          "Memory stores"
        ],
        "description": "Search for relevant memories from a memory store based on conversation context.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the memory store to search.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "scope": {
                  "type": "string",
                  "description": "The namespace that logically groups and isolates memories, such as a user ID."
                },
                "conversation_id": {
                  "type": "string",
                  "description": "The conversation ID for which to search memories. Only one of conversation_id or items should be provided."
                },
                "items": {
                  "type": "array",
                  "description": "Items for which to search for relevant memories. Only one of conversation_id or items should be provided.",
                  "items": {
                    "$ref": "#/definitions/OpenAI.ItemParam"
                  }
                },
                "previous_search_id": {
                  "type": "string",
                  "description": "The unique ID of the previous search request, enabling incremental memory search from where the last operation left off. Cannot be used together with conversation_id."
                },
                "options": {
                  "$ref": "#/definitions/MemorySearchOptions",
                  "description": "Memory search options."
                }
              },
              "required": [
                "scope"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/MemoryStoreSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/memory_stores/{name}:update_memories": {
      "post": {
        "operationId": "updateMemories",
        "tags": [
          "Memory stores"
        ],
        "description": "Update memory store with conversation memories.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the memory store to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "scope": {
                  "type": "string",
                  "description": "The namespace that logically groups and isolates memories, such as a user ID."
                },
                "conversation_id": {
                  "type": "string",
                  "description": "The conversation ID from which to extract memories. Only one of conversation_id or items should be provided."
                },
                "items": {
                  "type": "array",
                  "description": "Conversation items from which to extract memories. Only one of conversation_id or items should be provided.",
                  "items": {
                    "$ref": "#/definitions/OpenAI.ItemParam"
                  }
                },
                "previous_update_id": {
                  "type": "string",
                  "description": "The unique ID of the previous update request, enabling incremental memory updates from where the last operation left off. Cannot be used together with conversation_id."
                },
                "update_delay": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Timeout period before processing the memory update in seconds.\nIf a new update request is received during this period, it will cancel the current request and reset the timeout.\nSet to 0 to immediately trigger the update without delay.\nDefaults to 300 (5 minutes).",
                  "default": 300
                }
              },
              "required": [
                "scope"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/MemoryStoreUpdateResponse"
            },
            "headers": {
              "Operation-Location": {
                "type": "string",
                "format": "uri",
                "description": "The location for monitoring the operation state."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/memory_stores/{name}:delete_scope": {
      "post": {
        "operationId": "deleteScopeMemories",
        "tags": [
          "Memory stores"
        ],
        "description": "Delete all memories associated with a specific scope from a memory store.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the memory store.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "scope": {
                  "type": "string",
                  "description": "The namespace that logically groups and isolates memories to delete, such as a user ID."
                }
              },
              "required": [
                "scope"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/MemoryStoreDeleteScopeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/memory_stores/{name}/updates/{update_id}": {
      "get": {
        "operationId": "getUpdateResult",
        "tags": [
          "Memory stores"
        ],
        "description": "Get memory store update result.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the memory store.",
            "required": true,
            "type": "string"
          },
          {
            "name": "update_id",
            "in": "path",
            "description": "The ID of the memory update operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/MemoryStoreUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/conversations": {
      "get": {
        "operationId": "listConversations",
        "tags": [
          "Conversations"
        ],
        "description": "Returns the list of all conversations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the\ndefault is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`\nfor descending order.",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include after=obj_foo in order to fetch the next page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include before=obj_foo in order to fetch the previous page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "agent_name",
            "in": "query",
            "description": "Filter by agent name. If provided, only items associated with the specified agent will be returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "agent_id",
            "in": "query",
            "description": "Filter by agent ID in the format `name:version`. If provided, only items associated with the specified agent ID will be returned.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/OpenAI.ConversationResource"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list."
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list."
                }
              },
              "required": [
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "createConversation",
        "tags": [
          "Conversations"
        ],
        "description": "Create a conversation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenAI.CreateConversationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.ConversationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/conversations/{conversation_id}": {
      "get": {
        "operationId": "getConversation",
        "tags": [
          "Conversations"
        ],
        "description": "Retrieves a conversation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.ConversationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "updateConversation",
        "tags": [
          "Conversations"
        ],
        "description": "Update a conversation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenAI.UpdateConversationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.ConversationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteConversation",
        "tags": [
          "Conversations"
        ],
        "description": "Deletes a conversation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.DeletedConversationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/conversations/{conversation_id}/items": {
      "get": {
        "operationId": "listConversationItems",
        "tags": [
          "Conversations"
        ],
        "description": "List all items for a conversation with the given ID.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation on which the items needs to be listed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the\ndefault is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`\nfor descending order.",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include after=obj_foo in order to fetch the next page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include before=obj_foo in order to fetch the previous page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "item_type",
            "in": "query",
            "description": "Filter by item type. If provided, only items of the specified type will be returned.",
            "required": false,
            "type": "string",
            "enum": [
              "message",
              "file_search_call",
              "function_call",
              "function_call_output",
              "computer_call",
              "computer_call_output",
              "web_search_call",
              "reasoning",
              "item_reference",
              "image_generation_call",
              "code_interpreter_call",
              "local_shell_call",
              "local_shell_call_output",
              "mcp_list_tools",
              "mcp_approval_request",
              "mcp_approval_response",
              "mcp_call",
              "structured_outputs",
              "workflow_action",
              "memory_search_call",
              "oauth_consent_request"
            ],
            "x-ms-enum": {
              "name": "ItemType",
              "modelAsString": true,
              "values": [
                {
                  "name": "message",
                  "value": "message"
                },
                {
                  "name": "file_search_call",
                  "value": "file_search_call"
                },
                {
                  "name": "function_call",
                  "value": "function_call"
                },
                {
                  "name": "function_call_output",
                  "value": "function_call_output"
                },
                {
                  "name": "computer_call",
                  "value": "computer_call"
                },
                {
                  "name": "computer_call_output",
                  "value": "computer_call_output"
                },
                {
                  "name": "web_search_call",
                  "value": "web_search_call"
                },
                {
                  "name": "reasoning",
                  "value": "reasoning"
                },
                {
                  "name": "item_reference",
                  "value": "item_reference"
                },
                {
                  "name": "image_generation_call",
                  "value": "image_generation_call"
                },
                {
                  "name": "code_interpreter_call",
                  "value": "code_interpreter_call"
                },
                {
                  "name": "local_shell_call",
                  "value": "local_shell_call"
                },
                {
                  "name": "local_shell_call_output",
                  "value": "local_shell_call_output"
                },
                {
                  "name": "mcp_list_tools",
                  "value": "mcp_list_tools"
                },
                {
                  "name": "mcp_approval_request",
                  "value": "mcp_approval_request"
                },
                {
                  "name": "mcp_approval_response",
                  "value": "mcp_approval_response"
                },
                {
                  "name": "mcp_call",
                  "value": "mcp_call"
                },
                {
                  "name": "structured_outputs",
                  "value": "structured_outputs"
                },
                {
                  "name": "workflow_action",
                  "value": "workflow_action"
                },
                {
                  "name": "memory_search_call",
                  "value": "memory_search_call"
                },
                {
                  "name": "oauth_consent_request",
                  "value": "oauth_consent_request"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/OpenAI.ItemResource"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list."
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list."
                }
              },
              "required": [
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "createConversationItems",
        "tags": [
          "Conversations"
        ],
        "description": "Create items in a conversation with the given ID.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation on which the item needs to be created.",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Additional fields to include in the response.\nSee the `include` parameter for listing Conversation items for more information.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "description": "The items to add to the conversation. You may add up to 20 items at a time.",
                  "maxItems": 20,
                  "items": {}
                }
              },
              "required": [
                "items"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.ConversationItemList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/conversations/{conversation_id}/items/{item_id}": {
      "get": {
        "operationId": "getConversationItem",
        "tags": [
          "Conversations"
        ],
        "description": "Get a single item from a conversation with the given IDs.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The ID of the conversation that contains the item.",
            "required": true,
            "type": "string"
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "The id of the conversation item to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.ItemResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteConversationItem",
        "tags": [
          "Conversations"
        ],
        "description": "Delete an item from a conversation with the given IDs.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation on which the item needs to be deleted from.",
            "required": true,
            "type": "string"
          },
          {
            "name": "item_id",
            "in": "path",
            "description": "The id of the conversation item to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.ConversationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/evals": {
      "get": {
        "operationId": "FoundryOpenAIEvals_ListEvals",
        "tags": [
          "Evals"
        ],
        "summary": "List all evaluations",
        "description": "List evaluations for a project.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Identifier for the last run from the previous pagination request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of runs to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 20
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order for runs by timestamp. Use `asc` for ascending order or `desc` for descending order. Defaults to `asc`.",
            "required": false,
            "type": "string",
            "default": "asc",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Evals can be ordered by creation time or last updated time. Use\n`created_at` for creation time or `updated_at` for last updated time.",
            "required": false,
            "type": "string",
            "default": "created_at",
            "enum": [
              "created_at",
              "updated_at"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/Eval"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list."
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list."
                }
              },
              "required": [
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "FoundryOpenAIEvals_CreateEval",
        "tags": [
          "Evals"
        ],
        "summary": "Create evaluation",
        "description": "Create the structure of an evaluation that can be used to test a model's performance.\nAn evaluation is a set of testing criteria and the config for a data source, which dictates the schema of the data used in the evaluation. After creating an evaluation, you can run it on different models and model parameters. We support several types of graders and datasources.\nFor more information, see the [Evals guide](https://platform.openai.com/docs/guides/evals).",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEvalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Eval"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/evals/{eval_id}": {
      "get": {
        "operationId": "FoundryOpenAIEvals_GetEval",
        "tags": [
          "Evals"
        ],
        "summary": "Get an evaluation",
        "description": "Get an evaluation by ID.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "eval_id",
            "in": "path",
            "description": "The ID of the evaluation to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Eval"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "FoundryOpenAIEvals_UpdateEval",
        "tags": [
          "Evals"
        ],
        "summary": "Update an evaluation",
        "description": "Update certain properties of an evaluation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "eval_id",
            "in": "path",
            "description": "The ID of the evaluation to update.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateEvalParametersBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Eval"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "FoundryOpenAIEvals_DeleteEval",
        "tags": [
          "Evals"
        ],
        "summary": "Delete an evaluation",
        "description": "Delete an evaluation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "eval_id",
            "in": "path",
            "description": "The ID of the evaluation to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeleteEvalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/evals/{eval_id}/runs": {
      "get": {
        "operationId": "FoundryOpenAIEvals_ListRuns",
        "tags": [
          "Evals"
        ],
        "summary": "Get a list of runs for an evaluation",
        "description": "Get a list of runs for an evaluation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "eval_id",
            "in": "path",
            "description": "The ID of the evaluation to retrieve runs for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Identifier for the last run from the previous pagination request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of runs to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 20
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order for runs by timestamp. Use `asc` for ascending order or `desc` for descending order. Defaults to `asc`.",
            "required": false,
            "type": "string",
            "default": "asc",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter runs by status. One of `queued` | `in_progress` | `failed` | `completed` | `canceled`.",
            "required": false,
            "type": "string",
            "enum": [
              "queued",
              "in_progress",
              "completed",
              "canceled",
              "failed"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/EvalRun"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list."
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list."
                }
              },
              "required": [
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "FoundryOpenAIEvals_CreateEvalRun",
        "tags": [
          "Evals"
        ],
        "summary": "Create evaluation run",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "eval_id",
            "in": "path",
            "description": "The ID of the evaluation to create a run for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEvalRunRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvalRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/evals/{eval_id}/runs/{run_id}": {
      "get": {
        "operationId": "FoundryOpenAIEvals_GetEvalRun",
        "tags": [
          "Evals"
        ],
        "summary": "Get an evaluation run",
        "description": "Get an evaluation run by ID.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "eval_id",
            "in": "path",
            "description": "The ID of the evaluation to retrieve runs for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "run_id",
            "in": "path",
            "description": "The ID of the run to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvalRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "FoundryOpenAIEvals_CancelEvalRun",
        "tags": [
          "Evals"
        ],
        "summary": "Cancel evaluation run",
        "description": "Cancel an ongoing evaluation run.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "eval_id",
            "in": "path",
            "description": "The ID of the evaluation whose run you want to cancel.",
            "required": true,
            "type": "string"
          },
          {
            "name": "run_id",
            "in": "path",
            "description": "The ID of the run to cancel.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvalRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "FoundryOpenAIEvals_DeleteEvalRun",
        "tags": [
          "Evals"
        ],
        "summary": "Delete evaluation run",
        "description": "Delete an eval run.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "eval_id",
            "in": "path",
            "description": "The ID of the evaluation to delete the run from.",
            "required": true,
            "type": "string"
          },
          {
            "name": "run_id",
            "in": "path",
            "description": "The ID of the run to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeleteEvalRunResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/evals/{eval_id}/runs/{run_id}/output_items": {
      "get": {
        "operationId": "FoundryOpenAIEvals_GetEvalRunOutputItems",
        "tags": [
          "Evals"
        ],
        "summary": "Get evaluation run output items",
        "description": "Get a list of output items for an evaluation run.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "eval_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "run_id",
            "in": "path",
            "description": "The ID of the run to retrieve output items for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Identifier for the last run from the previous pagination request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of runs to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": 20
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order for runs by timestamp. Use `asc` for ascending order or `desc` for descending order. Defaults to `asc`.",
            "required": false,
            "type": "string",
            "default": "asc",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter output items by status. Use `failed` to filter by failed output\nitems or `pass` to filter by passed output items.",
            "required": false,
            "type": "string",
            "enum": [
              "fail",
              "pass"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/EvalRunOutputItem"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list."
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list."
                }
              },
              "required": [
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/evals/{eval_id}/runs/{run_id}/output_items/{output_item_id}": {
      "get": {
        "operationId": "FoundryOpenAIEvals_GetEvalRunOutputItem",
        "tags": [
          "Evals"
        ],
        "summary": "Get an output item of an evaluation run",
        "description": "Get an evaluation run output item by ID.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "eval_id",
            "in": "path",
            "description": "The ID of the evaluation to retrieve runs for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "run_id",
            "in": "path",
            "description": "The ID of the run to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "output_item_id",
            "in": "path",
            "description": "The ID of the output item to retrieve.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EvalRunOutputItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/fine-tuning/jobs": {
      "get": {
        "operationId": "listPaginatedFineTuningJobs",
        "tags": [
          "Fine-tuning"
        ],
        "description": "List your organization's fine-tuning jobs",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Identifier for the last job from the previous pagination request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of fine-tuning jobs to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.ListPaginatedFineTuningJobsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "createFineTuningJob",
        "tags": [
          "Fine-tuning"
        ],
        "description": "Creates a fine-tuning job which begins the process of creating a new model from a given dataset.\n\nResponse includes details of the enqueued job including job status and the name of the fine-tuned models once complete.\n\n[Learn more about fine-tuning](/docs/guides/fine-tuning)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenAI.CreateFineTuningJobRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.FineTuningJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/fine-tuning/jobs/{fine_tuning_job_id}": {
      "get": {
        "operationId": "retrieveFineTuningJob",
        "tags": [
          "Fine-tuning"
        ],
        "description": "Get info about a fine-tuning job.\n\n[Learn more about fine-tuning](/docs/guides/fine-tuning)",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.FineTuningJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/fine-tuning/jobs/{fine_tuning_job_id}/cancel": {
      "post": {
        "operationId": "cancelFineTuningJob",
        "tags": [
          "Fine-tuning"
        ],
        "description": "Immediately cancel a fine-tune job.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job to cancel.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.FineTuningJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/fine-tuning/jobs/{fine_tuning_job_id}/checkpoints": {
      "get": {
        "operationId": "listFineTuningJobCheckpoints",
        "tags": [
          "Fine-tuning"
        ],
        "description": "List checkpoints for a fine-tuning job.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job to get checkpoints for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Identifier for the last checkpoint ID from the previous pagination request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of checkpoints to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.ListFineTuningJobCheckpointsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/fine-tuning/jobs/{fine_tuning_job_id}/events": {
      "get": {
        "operationId": "listFineTuningJobEvents",
        "tags": [
          "Fine-tuning"
        ],
        "description": "Get fine-grained status updates for a fine-tuning job.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job to get events for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Identifier for the last event from the previous pagination request.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of events to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.ListFineTuningJobEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/fine-tuning/jobs/{fine_tuning_job_id}/pause": {
      "post": {
        "operationId": "pauseFineTuningJob",
        "tags": [
          "Fine-tuning"
        ],
        "description": "Pause a running fine-tune job.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job to pause.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.FineTuningJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/fine-tuning/jobs/{fine_tuning_job_id}/resume": {
      "post": {
        "operationId": "resumeFineTuningJob",
        "tags": [
          "Fine-tuning"
        ],
        "description": "Resume a paused fine-tune job.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "fine_tuning_job_id",
            "in": "path",
            "description": "The ID of the fine-tuning job to resume.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.FineTuningJob"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/responses": {
      "get": {
        "operationId": "listResponses",
        "tags": [
          "Responses"
        ],
        "description": "Returns the list of all responses.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the\ndefault is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`\nfor descending order.",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include after=obj_foo in order to fetch the next page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include before=obj_foo in order to fetch the previous page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "agent_name",
            "in": "query",
            "description": "Filter by agent name. If provided, only items associated with the specified agent will be returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "agent_id",
            "in": "query",
            "description": "Filter by agent ID in the format `name:version`. If provided, only items associated with the specified agent ID will be returned.",
            "required": false,
            "type": "string"
          },
          {
            "name": "conversation_id",
            "in": "query",
            "description": "Filter by conversation ID. If provided, only responses associated with the specified conversation will be returned.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/OpenAI.Response"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list."
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list."
                }
              },
              "required": [
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "createResponse",
        "tags": [
          "Responses"
        ],
        "description": "Creates a model response.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object",
                  "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-oaiTypeLabel": "map"
                },
                "temperature": {
                  "type": "number",
                  "format": "float",
                  "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\nWe generally recommend altering this or `top_p` but not both.",
                  "default": 1,
                  "x-nullable": true
                },
                "top_p": {
                  "type": "number",
                  "format": "float",
                  "description": "An alternative to sampling with temperature, called nucleus sampling,\nwhere the model considers the results of the tokens with top_p probability\nmass. So 0.1 means only the tokens comprising the top 10% probability mass\nare considered.\n\nWe generally recommend altering this or `temperature` but not both.",
                  "default": 1,
                  "x-nullable": true
                },
                "user": {
                  "type": "string",
                  "description": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices#end-user-ids)."
                },
                "service_tier": {
                  "$ref": "#/definitions/OpenAI.ServiceTier",
                  "description": "Note: service_tier is not applicable to Azure OpenAI."
                },
                "top_logprobs": {
                  "type": "integer",
                  "format": "int32",
                  "description": "An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability.",
                  "minimum": 0,
                  "maximum": 20
                },
                "previous_response_id": {
                  "type": "string",
                  "description": "The unique ID of the previous response to the model. Use this to\ncreate multi-turn conversations. Learn more about\n[conversation state](/docs/guides/conversation-state).",
                  "x-nullable": true
                },
                "model": {
                  "type": "string",
                  "description": "The model deployment to use for the creation of this response."
                },
                "reasoning": {
                  "$ref": "#/definitions/OpenAI.Reasoning",
                  "x-nullable": true
                },
                "background": {
                  "type": "boolean",
                  "description": "Whether to run the model response in the background.\n[Learn more](/docs/guides/background).",
                  "default": false,
                  "x-nullable": true
                },
                "max_output_tokens": {
                  "type": "integer",
                  "format": "int32",
                  "description": "An upper bound for the number of tokens that can be generated for a response, including visible output tokens and [reasoning tokens](/docs/guides/reasoning).",
                  "x-nullable": true
                },
                "max_tool_calls": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of total calls to built-in tools that can be processed in a response. This maximum number applies across all built-in tool calls, not per individual tool. Any further attempts to call a tool by the model will be ignored.",
                  "x-nullable": true
                },
                "text": {
                  "type": "object",
                  "description": "Configuration options for a text response from the model. Can be plain\ntext or structured JSON data. Learn more:\n- [Text inputs and outputs](/docs/guides/text)\n- [Structured Outputs](/docs/guides/structured-outputs)",
                  "properties": {
                    "format": {
                      "$ref": "#/definitions/OpenAI.ResponseTextFormatConfiguration"
                    }
                  }
                },
                "tools": {
                  "type": "array",
                  "description": "An array of tools the model may call while generating a response. You \ncan specify which tool to use by setting the `tool_choice` parameter.\n\nThe two categories of tools you can provide the model are:\n\n- **Built-in tools**: Tools that are provided by OpenAI that extend the\n  model's capabilities, like file search.\n- **Function calls (custom tools)**: Functions that are defined by you,\n  enabling the model to call your own code.",
                  "items": {
                    "$ref": "#/definitions/OpenAI.Tool"
                  }
                },
                "tool_choice": {
                  "description": "How the model should select which tool (or tools) to use when generating\na response. See the `tools` parameter to see how to specify which tools\nthe model can call."
                },
                "prompt": {
                  "$ref": "#/definitions/OpenAI.Prompt",
                  "x-nullable": true
                },
                "truncation": {
                  "type": "string",
                  "description": "The truncation strategy to use for the model response.\n- `auto`: If the context of this response and previous ones exceeds\n  the model's context window size, the model will truncate the\n  response to fit the context window by dropping input items in the\n  middle of the conversation.\n- `disabled` (default): If a model response will exceed the context window\n  size for a model, the request will fail with a 400 error.",
                  "default": "disabled",
                  "enum": [
                    "auto",
                    "disabled"
                  ],
                  "x-ms-enum": {
                    "modelAsString": false
                  },
                  "x-nullable": true
                },
                "input": {
                  "description": "Text, image, or file inputs to the model, used to generate a response.\n\nLearn more:\n- [Text inputs and outputs](/docs/guides/text)\n- [Image inputs](/docs/guides/images)\n- [File inputs](/docs/guides/pdf-files)\n- [Conversation state](/docs/guides/conversation-state)\n- [Function calling](/docs/guides/function-calling)"
                },
                "include": {
                  "type": "array",
                  "description": "Specify additional output data to include in the model response. Currently\nsupported values are:\n- `code_interpreter_call.outputs`: Includes the outputs of python code execution\n  in code interpreter tool call items.\n- `computer_call_output.output.image_url`: Include image urls from the computer call output.\n- `file_search_call.results`: Include the search results of\n  the file search tool call.\n- `message.input_image.image_url`: Include image urls from the input message.\n- `message.output_text.logprobs`: Include logprobs with assistant messages.\n- `reasoning.encrypted_content`: Includes an encrypted version of reasoning\n  tokens in reasoning item outputs. This enables reasoning items to be used in\n  multi-turn conversations when using the Responses API statelessly (like\n  when the `store` parameter is set to `false`, or when an organization is\n  enrolled in the zero data retention program).",
                  "x-nullable": true,
                  "items": {
                    "$ref": "#/definitions/OpenAI.Includable"
                  }
                },
                "parallel_tool_calls": {
                  "type": "boolean",
                  "description": "Whether to allow the model to run tool calls in parallel.",
                  "default": true,
                  "x-nullable": true
                },
                "store": {
                  "type": "boolean",
                  "description": "Whether to store the generated model response for later retrieval via\nAPI.",
                  "default": true,
                  "x-nullable": true
                },
                "instructions": {
                  "type": "string",
                  "description": "A system (or developer) message inserted into the model's context.\n\nWhen using along with `previous_response_id`, the instructions from a previous\nresponse will not be carried over to the next response. This makes it simple\nto swap out system (or developer) messages in new responses.",
                  "x-nullable": true
                },
                "stream": {
                  "type": "boolean",
                  "description": "If set to true, the model response data will be streamed to the client\nas it is generated using [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\nSee the [Streaming section below](/docs/api-reference/responses-streaming)\nfor more information.",
                  "default": false,
                  "x-nullable": true
                },
                "conversation": {},
                "agent": {
                  "$ref": "#/definitions/AgentReference",
                  "description": "The agent to use for generating the response."
                },
                "structured_inputs": {
                  "type": "object",
                  "description": "The structured inputs to the response that can participate in prompt template substitution or tool argument bindings.",
                  "additionalProperties": {}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/responses/{response_id}": {
      "get": {
        "operationId": "getResponse",
        "tags": [
          "Responses"
        ],
        "description": "Retrieves a model response with the given ID.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "response_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "code_interpreter_call.outputs",
                "computer_call_output.output.image_url",
                "file_search_call.results",
                "message.input_image.image_url",
                "message.output_text.logprobs",
                "reasoning.encrypted_content",
                "web_search_call.results",
                "web_search_call.action.sources",
                "memory_search_call.results"
              ],
              "x-ms-enum": {
                "name": "Includable",
                "modelAsString": false
              }
            },
            "collectionFormat": "multi",
            "default": [],
            "x-ms-client-name": "includables"
          },
          {
            "name": "stream",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "starting_after",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteResponse",
        "tags": [
          "Responses"
        ],
        "description": "Deletes a model response.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "response_id",
            "in": "path",
            "description": "The ID of the response to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeleteResponseResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/responses/{response_id}/cancel": {
      "post": {
        "operationId": "cancelResponse",
        "tags": [
          "Responses"
        ],
        "description": "Cancels a model response.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-client-name": "apiVersion"
          },
          {
            "name": "response_id",
            "in": "path",
            "description": "The ID of the response to cancel.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/openai/responses/{response_id}/input_items": {
      "get": {
        "operationId": "listInputItems",
        "tags": [
          "Responses"
        ],
        "description": "Returns a list of input items for a given response.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "response_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the\ndefault is 20.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and`desc`\nfor descending order.",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include after=obj_foo in order to fetch the next page of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "before",
            "in": "query",
            "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list.\nFor instance, if you make a list request and receive 100 objects, ending with obj_foo, your\nsubsequent call can include before=obj_foo in order to fetch the previous page of the list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "The response data for a requested list of items.",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "The requested list of items.",
                  "items": {
                    "$ref": "#/definitions/OpenAI.ItemResource"
                  }
                },
                "first_id": {
                  "type": "string",
                  "description": "The first ID represented in this list."
                },
                "last_id": {
                  "type": "string",
                  "description": "The last ID represented in this list."
                },
                "has_more": {
                  "type": "boolean",
                  "description": "A value indicating whether there are additional values available not captured in this list."
                }
              },
              "required": [
                "data",
                "has_more"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/redTeams/runs": {
      "get": {
        "operationId": "RedTeams_List",
        "description": "List a redteam by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedRedTeam"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "RedTeams_List_MaximumSet": {
            "$ref": "./examples/RedTeams_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/redTeams/runs/{name}": {
      "get": {
        "operationId": "RedTeams_Get",
        "description": "Get a redteam by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Identifier of the red team run.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RedTeam"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "RedTeams_Get_MaximumSet": {
            "$ref": "./examples/RedTeams_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/redTeams/runs:run": {
      "post": {
        "operationId": "RedTeams_Create",
        "description": "Creates a redteam run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "RedTeam",
            "in": "body",
            "description": "Redteam to be run",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedTeam"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/RedTeam"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "RedTeams_Create_MaximumSet": {
            "$ref": "./examples/RedTeams_Create_MaximumSet_Gen.json"
          },
          "RedTeams_Create_MinimumSet": {
            "$ref": "./examples/RedTeams_Create_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/schedules": {
      "get": {
        "operationId": "Schedules_List",
        "description": "List all schedules.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedSchedule"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Schedules_List_MaximumSet - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Schedules_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/schedules/{id}": {
      "get": {
        "operationId": "Schedules_Get",
        "description": "Get a schedule by id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Schedules_Get_MaximumSet - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Schedules_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Schedules_CreateOrUpdate",
        "description": "Create or update a schedule by id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Schedule",
            "in": "body",
            "description": "Schedule resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Schedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Schedules_CreateOrUpdate_MaximumSet - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Schedules_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Schedules_Delete",
        "description": "Delete a schedule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Schedules_Delete_MaximumSet - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Schedules_Delete_MaximumSet_Gen.json"
          },
          "Schedules_Delete_MaximumSet - generated by [MaximumSet] rule - generated by [MinimumSet] rule": {
            "$ref": "./examples/Schedules_Delete_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/schedules/{scheduleId}/runs": {
      "get": {
        "operationId": "Schedules_ListRuns",
        "description": "List all schedule runs.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "Identifier of the schedule.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedScheduleRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Schedules_ListRuns_MaximumSet - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Schedules_ListRuns_MaximumSet_Gen.json"
          },
          "Schedules_ListRuns_MaximumSet - generated by [MaximumSet] rule - generated by [MinimumSet] rule": {
            "$ref": "./examples/Schedules_ListRuns_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/schedules/{scheduleId}/runs/{runId}": {
      "get": {
        "operationId": "Schedules_GetRun",
        "description": "Get a schedule run by id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "Identifier of the schedule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "path",
            "description": "Identifier of the schedule run.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ScheduleRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Schedules_GetRun_MaximumSet - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Schedules_GetRun_MaximumSet_Gen.json"
          },
          "Schedules_GetRun_MaximumSet - generated by [MaximumSet] rule - generated by [MinimumSet] rule": {
            "$ref": "./examples/Schedules_GetRun_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "x-ms-paths": {
    "/openai/responses/{response_id}?_overload=getResponseStream": {
      "get": {
        "operationId": "getResponseStream",
        "tags": [
          "Responses"
        ],
        "description": "Retrieves a model response with the given ID (streaming response).",
        "produces": [
          "text/event-stream"
        ],
        "parameters": [
          {
            "name": "response_id",
            "in": "path",
            "description": "The ID of the response to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "name": "include[]",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "code_interpreter_call.outputs",
                "computer_call_output.output.image_url",
                "file_search_call.results",
                "message.input_image.image_url",
                "message.output_text.logprobs",
                "reasoning.encrypted_content",
                "web_search_call.results",
                "web_search_call.action.sources",
                "memory_search_call.results"
              ],
              "x-ms-enum": {
                "name": "Includable",
                "modelAsString": false
              }
            },
            "collectionFormat": "multi",
            "default": [],
            "x-ms-client-name": "includables"
          },
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "type": "string",
            "enum": [
              "text/event-stream"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          {
            "name": "starting_after",
            "in": "query",
            "description": "The sequence number of the event after which to start streaming.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
            }
          }
        }
      }
    },
    "/openai/responses?_overload=createResponseStream": {
      "post": {
        "operationId": "createResponseStream",
        "tags": [
          "Responses"
        ],
        "description": "Creates a model response (streaming response).",
        "produces": [
          "text/event-stream"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenAI.CreateResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "A2ATool": {
      "type": "object",
      "description": "An agent implementing the A2A protocol.",
      "properties": {
        "base_url": {
          "type": "string",
          "format": "uri",
          "description": "Base URL of the agent."
        },
        "agent_card_path": {
          "type": "string",
          "description": "The path to the agent card relative to the `base_url`.\nIf not provided, defaults to  `/.well-known/agent-card.json`"
        },
        "project_connection_id": {
          "type": "string",
          "description": "The connection ID in the project for the A2A server.\nThe connection stores authentication and other connection details needed to connect to the A2A server."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "a2a_preview"
    },
    "AISearchIndexResource": {
      "type": "object",
      "description": "A AI Search Index resource.",
      "properties": {
        "project_connection_id": {
          "type": "string",
          "description": "An index connection ID in an IndexResource attached to this agent."
        },
        "indexName": {
          "type": "string",
          "description": "The name of an index in an IndexResource attached to this agent."
        },
        "queryType": {
          "$ref": "#/definitions/AzureAISearchQueryType",
          "description": "Type of query in an AIIndexResource attached to this agent."
        },
        "topK": {
          "type": "integer",
          "format": "int32",
          "description": "Number of documents to retrieve from search and present to the model."
        },
        "filter": {
          "type": "string",
          "description": "filter string for search resource. Learn more from here: https://learn.microsoft.com/azure/search/search-filters"
        },
        "indexAssetId": {
          "type": "string",
          "description": "Index asset id for search resource."
        }
      },
      "required": [
        "project_connection_id"
      ]
    },
    "AgentClusterInsightResult": {
      "type": "object",
      "description": "Insights from the agent cluster analysis.",
      "properties": {
        "clusterInsight": {
          "$ref": "#/definitions/ClusterInsightResult"
        }
      },
      "required": [
        "clusterInsight"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightResult"
        }
      ],
      "x-ms-discriminator-value": "AgentClusterInsight"
    },
    "AgentClusterInsightsRequest": {
      "type": "object",
      "description": "Insights on set of Agent Evaluation Results",
      "properties": {
        "agentName": {
          "type": "string",
          "description": "Identifier for the agent."
        },
        "modelConfiguration": {
          "$ref": "#/definitions/InsightModelConfiguration",
          "description": "Configuration of the model used in the insight generation."
        }
      },
      "required": [
        "agentName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightRequest"
        }
      ],
      "x-ms-discriminator-value": "AgentClusterInsight"
    },
    "AgentContainerObject": {
      "type": "object",
      "description": "The details of the container of a specific version of an agent.",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type, which is always 'agent.container'.",
          "enum": [
            "agent.container"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/AgentContainerStatus",
          "description": "The status of the container of a specific version of an agent.",
          "readOnly": true
        },
        "max_replicas": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of replicas for the container. Default is 1."
        },
        "min_replicas": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of replicas for the container. Default is 1."
        },
        "error_message": {
          "type": "string",
          "description": "The error message if the container failed to operate, if any.",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the container.",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The last update time of the container.",
          "readOnly": true
        }
      },
      "required": [
        "object",
        "status",
        "created_at",
        "updated_at"
      ]
    },
    "AgentContainerOperationError": {
      "type": "object",
      "description": "The error details of the container operation, if any.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code of the container operation, if any."
        },
        "type": {
          "type": "string",
          "description": "The error type of the container operation, if any."
        },
        "message": {
          "type": "string",
          "description": "The error message of the container operation, if any."
        }
      },
      "required": [
        "code",
        "type",
        "message"
      ]
    },
    "AgentContainerOperationObject": {
      "type": "object",
      "description": "The container operation for a specific version of an agent.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the container operation. This id is unique identifier across the system."
        },
        "agent_id": {
          "type": "string",
          "description": "The ID of the agent."
        },
        "agent_version_id": {
          "type": "string",
          "description": "The ID of the agent version."
        },
        "status": {
          "$ref": "#/definitions/AgentContainerOperationStatus",
          "description": "The status of the container operation."
        },
        "error": {
          "$ref": "#/definitions/AgentContainerOperationError",
          "description": "The error of the container operation, if any."
        },
        "container": {
          "$ref": "#/definitions/AgentContainerObject",
          "description": "The container of the specific version of an agent."
        }
      },
      "required": [
        "id",
        "agent_id",
        "agent_version_id",
        "status"
      ]
    },
    "AgentContainerOperationStatus": {
      "type": "string",
      "description": "Status of the container operation for a specific version of an agent.",
      "enum": [
        "NotStarted",
        "InProgress",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "AgentContainerOperationStatus",
        "modelAsString": false,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "The container operation is not started."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "The container operation is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The container operation has succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The container operation has failed."
          }
        ]
      }
    },
    "AgentContainerStatus": {
      "type": "string",
      "description": "Status of the container of a specific version of an agent.",
      "enum": [
        "Starting",
        "Running",
        "Stopping",
        "Stopped",
        "Failed",
        "Deleting",
        "Deleted",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "AgentContainerStatus",
        "modelAsString": false,
        "values": [
          {
            "name": "Starting",
            "value": "Starting",
            "description": "The container is starting."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "The container is running."
          },
          {
            "name": "Stopping",
            "value": "Stopping",
            "description": "The container is stopping."
          },
          {
            "name": "Stopped",
            "value": "Stopped",
            "description": "The container is stopped."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The container has failed."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The container is deleting."
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "The container is deleted."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The container is updating."
          }
        ]
      }
    },
    "AgentDefinition": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AgentKind"
        },
        "rai_config": {
          "$ref": "#/definitions/RaiConfig",
          "description": "Configuration for Responsible AI (RAI) content filtering and safety features."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "AgentId": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "agent_id"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the agent.",
          "maxLength": 256
        },
        "version": {
          "type": "string",
          "description": "The version identifier of the agent."
        }
      },
      "required": [
        "type",
        "name",
        "version"
      ]
    },
    "AgentKind": {
      "type": "string",
      "enum": [
        "prompt",
        "hosted",
        "container_app",
        "workflow"
      ],
      "x-ms-enum": {
        "name": "AgentKind",
        "modelAsString": true,
        "values": [
          {
            "name": "prompt",
            "value": "prompt"
          },
          {
            "name": "hosted",
            "value": "hosted"
          },
          {
            "name": "container_app",
            "value": "container_app"
          },
          {
            "name": "workflow",
            "value": "workflow"
          }
        ]
      }
    },
    "AgentObject": {
      "type": "object",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type, which is always 'agent'.",
          "enum": [
            "agent"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the agent."
        },
        "name": {
          "type": "string",
          "description": "The name of the agent.",
          "maxLength": 63
        },
        "versions": {
          "type": "object",
          "description": "The latest version of the agent.",
          "properties": {
            "latest": {
              "$ref": "#/definitions/AgentVersionObject"
            }
          },
          "required": [
            "latest"
          ]
        }
      },
      "required": [
        "object",
        "id",
        "name",
        "versions"
      ]
    },
    "AgentProtocol": {
      "type": "string",
      "enum": [
        "activity_protocol",
        "responses"
      ],
      "x-ms-enum": {
        "name": "AgentProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "activity_protocol",
            "value": "activity_protocol"
          },
          {
            "name": "responses",
            "value": "responses"
          }
        ]
      }
    },
    "AgentReference": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "agent_reference"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the agent.",
          "maxLength": 256
        },
        "version": {
          "type": "string",
          "description": "The version identifier of the agent."
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "AgentTaxonomyInput": {
      "type": "object",
      "description": "Input configuration for the evaluation taxonomy when the input type is agent.",
      "properties": {
        "target": {
          "$ref": "#/definitions/AzureAIAgentTarget",
          "description": "Target configuration for the agent."
        },
        "riskCategories": {
          "type": "array",
          "description": "List of risk categories to evaluate against.",
          "items": {
            "$ref": "#/definitions/RiskCategory"
          }
        }
      },
      "required": [
        "target",
        "riskCategories"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationTaxonomyInput"
        }
      ],
      "x-ms-discriminator-value": "agent"
    },
    "AgentTaxonomyInputUpdate": {
      "type": "object",
      "description": "Input configuration for the evaluation taxonomy when the input type is agent.",
      "properties": {
        "target": {
          "$ref": "#/definitions/AzureAIAgentTargetUpdate",
          "description": "Target configuration for the agent."
        },
        "riskCategories": {
          "type": "array",
          "description": "List of risk categories to evaluate against.",
          "items": {
            "$ref": "#/definitions/RiskCategory"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationTaxonomyInputUpdate"
        }
      ],
      "x-ms-discriminator-value": "agent"
    },
    "AgentVersionObject": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        },
        "object": {
          "type": "string",
          "description": "The object type, which is always 'agent.version'.",
          "enum": [
            "agent.version"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the agent version."
        },
        "name": {
          "type": "string",
          "description": "The name of the agent. Name can be used to retrieve/update/delete the agent.",
          "maxLength": 256
        },
        "version": {
          "type": "string",
          "description": "The version identifier of the agent. Agents are immutable and every update creates a new version while keeping the name same."
        },
        "description": {
          "type": "string",
          "description": "A human-readable description of the agent.",
          "maxLength": 512
        },
        "created_at": {
          "type": "integer",
          "format": "unixtime",
          "description": "The Unix timestamp (seconds) when the agent was created."
        },
        "definition": {
          "$ref": "#/definitions/AgentDefinition"
        }
      },
      "required": [
        "metadata",
        "object",
        "id",
        "name",
        "version",
        "created_at",
        "definition"
      ]
    },
    "AgenticIdentityCredentials": {
      "type": "object",
      "description": "Agentic identity credential definition",
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "AgenticIdentityToken"
    },
    "ApiError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "A human-readable description of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error, if applicable."
        },
        "details": {
          "type": "array",
          "description": "Additional details about the error.",
          "items": {
            "$ref": "#/definitions/ApiError"
          }
        },
        "innererror": {
          "$ref": "#/definitions/ApiInnerError",
          "description": "The inner error, if any."
        }
      },
      "required": [
        "code",
        "message",
        "details"
      ]
    },
    "ApiErrorResponse": {
      "type": "object",
      "description": "Error response for API failures.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ApiError"
        }
      },
      "required": [
        "error"
      ]
    },
    "ApiInnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "innererror": {
          "$ref": "#/definitions/ApiInnerError",
          "description": "The inner error, if any."
        }
      },
      "required": [
        "code"
      ]
    },
    "ApiKeyCredentials": {
      "type": "object",
      "description": "API Key Credential definition",
      "properties": {
        "key": {
          "type": "string",
          "description": "API Key",
          "readOnly": true,
          "x-ms-client-name": "apiKey"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "ApiKey"
    },
    "AssetCredentialResponse": {
      "type": "object",
      "description": "Represents a reference to a blob for consumption",
      "properties": {
        "blobReference": {
          "$ref": "#/definitions/BlobReference",
          "description": "Credential info to access the storage account."
        }
      },
      "required": [
        "blobReference"
      ]
    },
    "AssetId": {
      "type": "string",
      "description": "Identifier of a saved asset."
    },
    "AttackStrategy": {
      "type": "string",
      "description": "Strategies for attacks.",
      "enum": [
        "easy",
        "moderate",
        "difficult",
        "ascii_art",
        "ascii_smuggler",
        "atbash",
        "base64",
        "binary",
        "caesar",
        "character_space",
        "jailbreak",
        "ansii_attack",
        "character_swap",
        "suffix_append",
        "string_join",
        "unicode_confusable",
        "unicode_substitution",
        "diacritic",
        "flip",
        "leetspeak",
        "rot13",
        "morse",
        "url",
        "baseline"
      ],
      "x-ms-enum": {
        "name": "AttackStrategy",
        "modelAsString": true,
        "values": [
          {
            "name": "Easy",
            "value": "easy",
            "description": "Represents a default set of easy complexity attacks. Easy complexity attacks require less effort, such as translation of a prompt into some encoding, and does not require any Large Language Model to convert or orchestrate."
          },
          {
            "name": "Moderate",
            "value": "moderate",
            "description": "Represents a default set of moderate complexity attacks. Moderate complexity attacks require having access to resources such as another generative AI model."
          },
          {
            "name": "Difficult",
            "value": "difficult",
            "description": "Represents a default set of difficult complexity attacks. Difficult complexity attacks include attacks that require access to significant resources and effort to execute an attack such as knowledge of search-based algorithms in addition to a generative AI model."
          },
          {
            "name": "AsciiArt",
            "value": "ascii_art",
            "description": "Generates visual art using ASCII characters, often used for creative or obfuscation purposes."
          },
          {
            "name": "AsciiSmuggler",
            "value": "ascii_smuggler",
            "description": "Conceals data within ASCII characters, making it harder to detect."
          },
          {
            "name": "Atbash",
            "value": "atbash",
            "description": "Implements the Atbash cipher, a simple substitution cipher where each letter is mapped to its reverse."
          },
          {
            "name": "Base64",
            "value": "base64",
            "description": "Encodes binary data into a text format using Base64, commonly used for data transmission."
          },
          {
            "name": "Binary",
            "value": "binary",
            "description": "Converts text into binary code, representing data in a series of 0s and 1s."
          },
          {
            "name": "Caesar",
            "value": "caesar",
            "description": "Applies the Caesar cipher, a substitution cipher that shifts characters by a fixed number of positions."
          },
          {
            "name": "CharacterSpace",
            "value": "character_space",
            "description": "Alters text by adding spaces between characters, often used for obfuscation."
          },
          {
            "name": "Jailbreak",
            "value": "jailbreak",
            "description": "Injects specially crafted prompts to bypass AI safeguards, known as User Injected Prompt Attacks (UPIA)."
          },
          {
            "name": "AnsiiAttack",
            "value": "ansii_attack",
            "description": "Utilizes ANSI escape sequences to manipulate text appearance and behavior."
          },
          {
            "name": "CharacterSwap",
            "value": "character_swap",
            "description": "Swaps characters within text to create variations or obfuscate the original content."
          },
          {
            "name": "SuffixAppend",
            "value": "suffix_append",
            "description": "Appends an adversarial suffix to the prompt."
          },
          {
            "name": "StringJoin",
            "value": "string_join",
            "description": "Joins multiple strings together, often used for concatenation or obfuscation."
          },
          {
            "name": "UnicodeConfusable",
            "value": "unicode_confusable",
            "description": "Uses Unicode characters that look similar to standard characters, creating visual confusion."
          },
          {
            "name": "UnicodeSubstitution",
            "value": "unicode_substitution",
            "description": "Substitutes standard characters with Unicode equivalents, often for obfuscation."
          },
          {
            "name": "Diacritic",
            "value": "diacritic",
            "description": "Adds diacritical marks to characters, changing their appearance and sometimes their meaning."
          },
          {
            "name": "Flip",
            "value": "flip",
            "description": "Flips characters from front to back, creating a mirrored effect."
          },
          {
            "name": "Leetspeak",
            "value": "leetspeak",
            "description": "Transforms text into Leetspeak, a form of encoding that replaces letters with similar-looking numbers or symbols."
          },
          {
            "name": "ROT13",
            "value": "rot13",
            "description": "Applies the ROT13 cipher, a simple substitution cipher that shifts characters by 13 positions."
          },
          {
            "name": "Morse",
            "value": "morse",
            "description": "Encodes text into Morse code, using dots and dashes to represent characters."
          },
          {
            "name": "Url",
            "value": "url",
            "description": "Encodes text into URL format."
          },
          {
            "name": "Baseline",
            "value": "baseline",
            "description": "Represents the baseline direct adversarial probing, which is used by attack strategies as the attack objective."
          }
        ]
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          }
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Azure REST API guidelines - https://aka.ms/AzureRestApiGuidelines#handling-errors.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.Core.Foundations.OperationState": {
      "type": "string",
      "description": "Enum describing allowed operation states.",
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OperationState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "The operation has not started."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "The operation is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The operation has completed successfully."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The operation has failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The operation has been canceled by the user."
          }
        ]
      }
    },
    "AzureAIAgentTarget": {
      "type": "object",
      "description": "Represents a target specifying an Azure AI agent.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique identifier of the Azure AI agent."
        },
        "version": {
          "type": "string",
          "description": "The version of the Azure AI agent."
        },
        "tool_descriptions": {
          "type": "array",
          "description": "The parameters used to control the sampling behavior of the agent during text generation.",
          "items": {
            "$ref": "#/definitions/ToolDescription"
          }
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Target"
        }
      ],
      "x-ms-discriminator-value": "azure_ai_agent"
    },
    "AzureAIAgentTargetUpdate": {
      "type": "object",
      "description": "Represents a target specifying an Azure AI agent.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique identifier of the Azure AI agent."
        },
        "version": {
          "type": "string",
          "description": "The version of the Azure AI agent."
        },
        "tool_descriptions": {
          "type": "array",
          "description": "The parameters used to control the sampling behavior of the agent during text generation.",
          "items": {
            "$ref": "#/definitions/ToolDescription"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TargetUpdate"
        }
      ],
      "x-ms-discriminator-value": "azure_ai_agent"
    },
    "AzureAIAssistantTarget": {
      "type": "object",
      "description": "Represents a target specifying an Azure AI Assistant (Agent V1) endpoint, including its id.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the Azure AI Assistant."
        },
        "tool_descriptions": {
          "type": "array",
          "description": "The descriptions of tools available to the assistant.",
          "items": {
            "$ref": "#/definitions/ToolDescription"
          }
        }
      },
      "required": [
        "tool_descriptions"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Target"
        }
      ],
      "x-ms-discriminator-value": "azure_ai_assistant"
    },
    "AzureAIAssistantTargetUpdate": {
      "type": "object",
      "description": "Represents a target specifying an Azure AI Assistant (Agent V1) endpoint, including its id.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the Azure AI Assistant."
        },
        "tool_descriptions": {
          "type": "array",
          "description": "The descriptions of tools available to the assistant.",
          "items": {
            "$ref": "#/definitions/ToolDescription"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TargetUpdate"
        }
      ],
      "x-ms-discriminator-value": "azure_ai_assistant"
    },
    "AzureAIModelTarget": {
      "type": "object",
      "description": "Represents a target specifying an Azure AI model for operations requiring model selection.",
      "properties": {
        "model": {
          "type": "string",
          "description": "The unique identifier of the Azure AI model."
        },
        "sampling_params": {
          "$ref": "#/definitions/ModelSamplingParams",
          "description": "The parameters used to control the sampling behavior of the model during text generation."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Target"
        }
      ],
      "x-ms-discriminator-value": "azure_ai_model"
    },
    "AzureAIModelTargetUpdate": {
      "type": "object",
      "description": "Represents a target specifying an Azure AI model for operations requiring model selection.",
      "properties": {
        "model": {
          "type": "string",
          "description": "The unique identifier of the Azure AI model."
        },
        "sampling_params": {
          "$ref": "#/definitions/ModelSamplingParamsUpdate",
          "description": "The parameters used to control the sampling behavior of the model during text generation."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TargetUpdate"
        }
      ],
      "x-ms-discriminator-value": "azure_ai_model"
    },
    "AzureAISearchAgentTool": {
      "type": "object",
      "description": "The input definition information for an Azure AI search tool as used to configure an agent.",
      "properties": {
        "azure_ai_search": {
          "$ref": "#/definitions/AzureAISearchToolResource",
          "description": "The azure ai search index resource."
        }
      },
      "required": [
        "azure_ai_search"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "azure_ai_search"
    },
    "AzureAISearchIndex": {
      "type": "object",
      "description": "Azure AI Search Index Definition",
      "properties": {
        "connectionName": {
          "type": "string",
          "description": "Name of connection to Azure AI Search",
          "x-ms-mutability": [
            "create"
          ]
        },
        "indexName": {
          "type": "string",
          "description": "Name of index in Azure AI Search resource to attach",
          "x-ms-mutability": [
            "create"
          ]
        },
        "fieldMapping": {
          "$ref": "#/definitions/FieldMapping",
          "description": "Field mapping configuration",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "connectionName",
        "indexName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Index"
        }
      ],
      "x-ms-discriminator-value": "AzureSearch"
    },
    "AzureAISearchQueryType": {
      "type": "string",
      "description": "Available query types for Azure AI Search tool.",
      "enum": [
        "simple",
        "semantic",
        "vector",
        "vector_simple_hybrid",
        "vector_semantic_hybrid"
      ],
      "x-ms-enum": {
        "name": "AzureAISearchQueryType",
        "modelAsString": true,
        "values": [
          {
            "name": "simple",
            "value": "simple",
            "description": "Query type `simple`"
          },
          {
            "name": "semantic",
            "value": "semantic",
            "description": "Query type `semantic`"
          },
          {
            "name": "vector",
            "value": "vector",
            "description": "Query type `vector`"
          },
          {
            "name": "vector_simple_hybrid",
            "value": "vector_simple_hybrid",
            "description": "Query type `vector_simple_hybrid`"
          },
          {
            "name": "vector_semantic_hybrid",
            "value": "vector_semantic_hybrid",
            "description": "Query type `vector_semantic_hybrid`"
          }
        ]
      }
    },
    "AzureAISearchToolResource": {
      "type": "object",
      "description": "A set of index resources used by the `azure_ai_search` tool.",
      "properties": {
        "indexes": {
          "type": "array",
          "description": "The indices attached to this agent. There can be a maximum of 1 index\nresource attached to the agent.",
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/AISearchIndexResource"
          }
        }
      }
    },
    "AzureFunctionAgentTool": {
      "type": "object",
      "description": "The input definition information for an Azure Function Tool, as used to configure an Agent.",
      "properties": {
        "azure_function": {
          "$ref": "#/definitions/AzureFunctionDefinition",
          "description": "The Azure Function Tool definition."
        }
      },
      "required": [
        "azure_function"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "azure_function"
    },
    "AzureFunctionBinding": {
      "type": "object",
      "description": "The structure for keeping storage queue name and URI.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of binding, which is always 'storage_queue'.",
          "enum": [
            "storage_queue"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "storage_queue": {
          "$ref": "#/definitions/AzureFunctionStorageQueue",
          "description": "Storage queue."
        }
      },
      "required": [
        "type",
        "storage_queue"
      ]
    },
    "AzureFunctionDefinition": {
      "type": "object",
      "description": "The definition of Azure function.",
      "properties": {
        "function": {
          "type": "object",
          "description": "The definition of azure function and its parameters.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the function to be called."
            },
            "description": {
              "type": "string",
              "description": "A description of what the function does, used by the model to choose when and how to call the function."
            },
            "parameters": {
              "description": "The parameters the functions accepts, described as a JSON Schema object."
            }
          },
          "required": [
            "name",
            "parameters"
          ]
        },
        "input_binding": {
          "$ref": "#/definitions/AzureFunctionBinding",
          "description": "Input storage queue. The queue storage trigger runs a function as messages are added to it."
        },
        "output_binding": {
          "$ref": "#/definitions/AzureFunctionBinding",
          "description": "Output storage queue. The function writes output to this queue when the input items are processed."
        }
      },
      "required": [
        "function",
        "input_binding",
        "output_binding"
      ]
    },
    "AzureFunctionStorageQueue": {
      "type": "object",
      "description": "The structure for keeping storage queue name and URI.",
      "properties": {
        "queue_service_endpoint": {
          "type": "string",
          "description": "URI to the Azure Storage Queue service allowing you to manipulate a queue."
        },
        "queue_name": {
          "type": "string",
          "description": "The name of an Azure function storage queue."
        }
      },
      "required": [
        "queue_service_endpoint",
        "queue_name"
      ]
    },
    "AzureOpenAIModelConfiguration": {
      "type": "object",
      "description": "Azure OpenAI model configuration. The API version would be selected by the service for querying the model.",
      "properties": {
        "modelDeploymentName": {
          "type": "string",
          "description": "Deployment name for AOAI model. Example: gpt-4o if in AIServices or connection based `connection_name/deployment_name` (e.g. `my-aoai-connection/gpt-4o`)."
        }
      },
      "required": [
        "modelDeploymentName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TargetConfig"
        }
      ],
      "x-ms-discriminator-value": "AzureOpenAIModel"
    },
    "BaseCredentials": {
      "type": "object",
      "description": "A base class for connection credentials",
      "properties": {
        "type": {
          "$ref": "#/definitions/CredentialType",
          "description": "The type of credential used by the connection",
          "readOnly": true
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "BingCustomSearchAgentTool": {
      "type": "object",
      "description": "The input definition information for a Bing custom search tool as used to configure an agent.",
      "properties": {
        "bing_custom_search_preview": {
          "$ref": "#/definitions/BingCustomSearchToolParameters",
          "description": "The bing custom search tool parameters."
        }
      },
      "required": [
        "bing_custom_search_preview"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "bing_custom_search_preview"
    },
    "BingCustomSearchConfiguration": {
      "type": "object",
      "description": "A bing custom search configuration.",
      "properties": {
        "project_connection_id": {
          "type": "string",
          "description": "Project connection id for grounding with bing search"
        },
        "instance_name": {
          "type": "string",
          "description": "Name of the custom configuration instance given to config."
        },
        "market": {
          "type": "string",
          "description": "The market where the results come from."
        },
        "set_lang": {
          "type": "string",
          "description": "The language to use for user interface strings when calling Bing API."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The number of search results to return in the bing api response"
        },
        "freshness": {
          "type": "string",
          "description": "Filter search results by a specific time range. Accepted values: https://learn.microsoft.com/bing/search-apis/bing-web-search/reference/query-parameters"
        }
      },
      "required": [
        "project_connection_id",
        "instance_name"
      ]
    },
    "BingCustomSearchToolParameters": {
      "type": "object",
      "description": "The bing custom search tool parameters.",
      "properties": {
        "search_configurations": {
          "type": "array",
          "description": "The project connections attached to this tool. There can be a maximum of 1 connection\nresource attached to the tool.",
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/BingCustomSearchConfiguration"
          }
        }
      },
      "required": [
        "search_configurations"
      ]
    },
    "BingGroundingAgentTool": {
      "type": "object",
      "description": "The input definition information for a bing grounding search tool as used to configure an agent.",
      "properties": {
        "bing_grounding": {
          "$ref": "#/definitions/BingGroundingSearchToolParameters",
          "description": "The bing grounding search tool parameters."
        }
      },
      "required": [
        "bing_grounding"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "bing_grounding"
    },
    "BingGroundingSearchConfiguration": {
      "type": "object",
      "description": "Search configuration for Bing Grounding",
      "properties": {
        "project_connection_id": {
          "type": "string",
          "description": "Project connection id for grounding with bing search"
        },
        "market": {
          "type": "string",
          "description": "The market where the results come from."
        },
        "set_lang": {
          "type": "string",
          "description": "The language to use for user interface strings when calling Bing API."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "The number of search results to return in the bing api response"
        },
        "freshness": {
          "type": "string",
          "description": "Filter search results by a specific time range. Accepted values: https://learn.microsoft.com/bing/search-apis/bing-web-search/reference/query-parameters"
        }
      },
      "required": [
        "project_connection_id"
      ]
    },
    "BingGroundingSearchToolParameters": {
      "type": "object",
      "description": "The bing grounding search tool parameters.",
      "properties": {
        "search_configurations": {
          "type": "array",
          "description": "The search configurations attached to this tool. There can be a maximum of 1\nsearch configuration resource attached to the tool.",
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/BingGroundingSearchConfiguration"
          }
        }
      },
      "required": [
        "search_configurations"
      ]
    },
    "BlobReference": {
      "type": "object",
      "description": "Blob reference details.",
      "properties": {
        "blobUri": {
          "type": "string",
          "description": "Blob URI path for client to upload data. Example: https://blob.windows.core.net/Container/Path"
        },
        "storageAccountArmId": {
          "type": "string",
          "description": "ARM ID of the storage account to use."
        },
        "credential": {
          "$ref": "#/definitions/SasCredential",
          "description": "Credential info to access the storage account."
        }
      },
      "required": [
        "blobUri",
        "storageAccountArmId",
        "credential"
      ]
    },
    "BrowserAutomationAgentTool": {
      "type": "object",
      "description": "The input definition information for a Browser Automation Tool, as used to configure an Agent.",
      "properties": {
        "browser_automation_preview": {
          "$ref": "#/definitions/BrowserAutomationToolParameters",
          "description": "The Browser Automation Tool parameters."
        }
      },
      "required": [
        "browser_automation_preview"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "browser_automation_preview"
    },
    "BrowserAutomationToolConnectionParameters": {
      "type": "object",
      "description": "Definition of input parameters for the connection used by the Browser Automation Tool.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the project connection to your Azure Playwright resource."
        }
      },
      "required": [
        "id"
      ]
    },
    "BrowserAutomationToolParameters": {
      "type": "object",
      "description": "Definition of input parameters for the Browser Automation Tool.",
      "properties": {
        "project_connection": {
          "$ref": "#/definitions/BrowserAutomationToolConnectionParameters",
          "description": "The project connection parameters associated with the Browser Automation Tool."
        }
      },
      "required": [
        "project_connection"
      ]
    },
    "CaptureStructuredOutputsTool": {
      "type": "object",
      "description": "A tool for capturing structured outputs",
      "properties": {
        "outputs": {
          "$ref": "#/definitions/StructuredOutputDefinition",
          "description": "The structured outputs to capture from the model."
        }
      },
      "required": [
        "outputs"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "capture_structured_outputs"
    },
    "ChartCoordinate": {
      "type": "object",
      "description": "Coordinates for the analysis chart.",
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "X-axis coordinate."
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "Y-axis coordinate."
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "description": "Size of the chart element."
        }
      },
      "required": [
        "x",
        "y",
        "size"
      ]
    },
    "ChatSummaryMemoryItem": {
      "type": "object",
      "description": "A memory item containing a summary extracted from conversations.",
      "allOf": [
        {
          "$ref": "#/definitions/MemoryItem"
        }
      ],
      "x-ms-discriminator-value": "chat_summary"
    },
    "ClusterInsightResult": {
      "type": "object",
      "description": "Insights from the cluster analysis.",
      "properties": {
        "summary": {
          "$ref": "#/definitions/InsightSummary",
          "description": "Summary of the insights report."
        },
        "clusters": {
          "type": "array",
          "description": "List of clusters identified in the insights.",
          "items": {
            "$ref": "#/definitions/InsightCluster"
          }
        },
        "coordinates": {
          "type": "object",
          "description": "  Optional mapping of IDs to 2D coordinates used by the UX for visualization.\n\n  The map keys are string identifiers (for example, a cluster id or a sample id)\n  and the values are the coordinates and visual size for rendering on a 2D chart.\n\n  This property is omitted unless the client requests coordinates (for example,\n  by passing `includeCoordinates=true` as a query parameter).\n\n  Example:\n  {\n    \"cluster-1\": { \"x\": 12, \"y\": 34, \"size\": 8 },\n    \"sample-123\": { \"x\": 18, \"y\": 22, \"size\": 4 }\n  }\n\n  Coordinates are intended only for client-side visualization and do not\n  modify the canonical insights results.",
          "additionalProperties": {
            "$ref": "#/definitions/ChartCoordinate"
          }
        }
      },
      "required": [
        "summary",
        "clusters"
      ]
    },
    "ClusterTokenUsage": {
      "type": "object",
      "description": "Token usage for cluster analysis",
      "properties": {
        "inputTokenUsage": {
          "type": "integer",
          "format": "int32",
          "description": "input token usage"
        },
        "outputTokenUsage": {
          "type": "integer",
          "format": "int32",
          "description": "output token usage"
        },
        "totalTokenUsage": {
          "type": "integer",
          "format": "int32",
          "description": "total token usage"
        }
      },
      "required": [
        "inputTokenUsage",
        "outputTokenUsage",
        "totalTokenUsage"
      ]
    },
    "CodeBasedEvaluatorDefinition": {
      "type": "object",
      "description": "Code-based evaluator definition using python code",
      "properties": {
        "code_text": {
          "type": "string",
          "description": "Inline code text for the evaluator"
        }
      },
      "required": [
        "code_text"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluatorDefinition"
        }
      ],
      "x-ms-discriminator-value": "code"
    },
    "Connection": {
      "type": "object",
      "description": "Response from the list and get connections operations",
      "properties": {
        "name": {
          "type": "string",
          "description": "The friendly name of the connection, provided by the user.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "A unique identifier for the connection, generated by the service",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ConnectionType",
          "description": "Category of the connection",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The connection URL to be used for this service",
          "readOnly": true
        },
        "isDefault": {
          "type": "boolean",
          "description": "Whether the connection is tagged as the default connection of its type",
          "readOnly": true
        },
        "credentials": {
          "$ref": "#/definitions/BaseCredentials",
          "description": "The credentials used by the connection",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "Metadata of the connection",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "name",
        "id",
        "type",
        "target",
        "isDefault",
        "credentials",
        "metadata"
      ]
    },
    "ConnectionType": {
      "type": "string",
      "description": "The Type (or category) of the connection",
      "enum": [
        "AzureOpenAI",
        "AzureBlob",
        "AzureStorageAccount",
        "CognitiveSearch",
        "CosmosDB",
        "ApiKey",
        "AppConfig",
        "AppInsights",
        "CustomKeys",
        "RemoteTool"
      ],
      "x-ms-enum": {
        "name": "ConnectionType",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureOpenAI",
            "value": "AzureOpenAI",
            "description": "Azure OpenAI Service"
          },
          {
            "name": "AzureBlobStorage",
            "value": "AzureBlob",
            "description": "Azure Blob Storage, with specified container"
          },
          {
            "name": "AzureStorageAccount",
            "value": "AzureStorageAccount",
            "description": "Azure Blob Storage, with container not specified (used by Agents)"
          },
          {
            "name": "AzureAISearch",
            "value": "CognitiveSearch",
            "description": "Azure AI Search"
          },
          {
            "name": "CosmosDB",
            "value": "CosmosDB",
            "description": "CosmosDB"
          },
          {
            "name": "APIKey",
            "value": "ApiKey",
            "description": "Generic connection that uses API Key authentication"
          },
          {
            "name": "ApplicationConfiguration",
            "value": "AppConfig",
            "description": "Application Configuration"
          },
          {
            "name": "ApplicationInsights",
            "value": "AppInsights",
            "description": "Application Insights"
          },
          {
            "name": "Custom",
            "value": "CustomKeys",
            "description": "Custom Keys"
          },
          {
            "name": "RemoteTool",
            "value": "RemoteTool",
            "description": "Remote tool"
          }
        ]
      }
    },
    "ContainerAppAgentDefinition": {
      "type": "object",
      "description": "The container app agent definition.",
      "properties": {
        "container_protocol_versions": {
          "type": "array",
          "description": "The protocols that the agent supports for ingress communication of the containers.",
          "items": {
            "$ref": "#/definitions/ProtocolVersionRecord"
          }
        },
        "container_app_resource_id": {
          "type": "string",
          "description": "The resource ID of the Azure Container App that hosts this agent. Not mutable across versions."
        },
        "ingress_subdomain_suffix": {
          "type": "string",
          "description": "The suffix to apply to the app subdomain when sending ingress to the agent. This can be a label (e.g., '---current'), a specific revision (e.g., '--0000001'), or empty to use the default endpoint for the container app."
        }
      },
      "required": [
        "container_protocol_versions",
        "container_app_resource_id",
        "ingress_subdomain_suffix"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AgentDefinition"
        }
      ],
      "x-ms-discriminator-value": "container_app"
    },
    "ContinuousEvaluationRuleAction": {
      "type": "object",
      "description": "Evaluation rule action for continuous evaluation.",
      "properties": {
        "evalId": {
          "type": "string",
          "description": "Eval Id to add continuous evaluation runs to."
        },
        "maxHourlyRuns": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of evaluation runs allowed per hour."
        }
      },
      "required": [
        "evalId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationRuleAction"
        }
      ],
      "x-ms-discriminator-value": "continuousEvaluation"
    },
    "CosmosDBIndex": {
      "type": "object",
      "description": "CosmosDB Vector Store Index Definition",
      "properties": {
        "connectionName": {
          "type": "string",
          "description": "Name of connection to CosmosDB",
          "x-ms-mutability": [
            "create"
          ]
        },
        "databaseName": {
          "type": "string",
          "description": "Name of the CosmosDB Database",
          "x-ms-mutability": [
            "create"
          ]
        },
        "containerName": {
          "type": "string",
          "description": "Name of CosmosDB Container",
          "x-ms-mutability": [
            "create"
          ]
        },
        "embeddingConfiguration": {
          "$ref": "#/definitions/EmbeddingConfiguration",
          "description": "Embedding model configuration",
          "x-ms-mutability": [
            "create"
          ]
        },
        "fieldMapping": {
          "$ref": "#/definitions/FieldMapping",
          "description": "Field mapping configuration",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "connectionName",
        "databaseName",
        "containerName",
        "embeddingConfiguration",
        "fieldMapping"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Index"
        }
      ],
      "x-ms-discriminator-value": "CosmosDBNoSqlVectorStore"
    },
    "CreateAgentFromManifestRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name that identifies the agent. Name can be used to retrieve/update/delete the agent.\n- Must start and end with alphanumeric characters, \n- Can contain hyphens in the middle\n- Must not exceed 63 characters.",
          "maxLength": 63
        },
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        },
        "description": {
          "type": "string",
          "description": "A human-readable description of the agent.",
          "maxLength": 512
        },
        "manifest_id": {
          "type": "string",
          "description": "The manifest ID to import the agent version from."
        },
        "parameter_values": {
          "type": "object",
          "description": "The inputs to the manifest that will result in a fully materialized Agent.",
          "additionalProperties": {}
        }
      },
      "required": [
        "name",
        "manifest_id",
        "parameter_values"
      ]
    },
    "CreateAgentRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique name that identifies the agent. Name can be used to retrieve/update/delete the agent.\n- Must start and end with alphanumeric characters, \n- Can contain hyphens in the middle\n- Must not exceed 63 characters.",
          "maxLength": 63
        },
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        },
        "description": {
          "type": "string",
          "description": "A human-readable description of the agent.",
          "maxLength": 512
        },
        "definition": {
          "$ref": "#/definitions/AgentDefinition",
          "description": "The agent definition. This can be a workflow, hosted agent, or a simple agent definition."
        }
      },
      "required": [
        "name",
        "definition"
      ]
    },
    "CreateAgentVersionFromManifestRequest": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        },
        "description": {
          "type": "string",
          "description": "A human-readable description of the agent.",
          "maxLength": 512
        },
        "manifest_id": {
          "type": "string",
          "description": "The manifest ID to import the agent version from."
        },
        "parameter_values": {
          "type": "object",
          "description": "The inputs to the manifest that will result in a fully materialized Agent.",
          "additionalProperties": {}
        }
      },
      "required": [
        "manifest_id",
        "parameter_values"
      ]
    },
    "CreateAgentVersionRequest": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        },
        "description": {
          "type": "string",
          "description": "A human-readable description of the agent.",
          "maxLength": 512
        },
        "definition": {
          "$ref": "#/definitions/AgentDefinition",
          "description": "The agent definition. This can be a workflow, hosted agent, or a simple agent definition."
        }
      },
      "required": [
        "definition"
      ]
    },
    "CreateEvalRequest": {
      "type": "object",
      "title": "CreateEvalRequest",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the evaluation."
        },
        "metadata": {
          "$ref": "#/definitions/OpenAI.Metadata"
        },
        "data_source_config": {
          "description": "The configuration for the data source used for the evaluation runs. Dictates the schema of the data used in the evaluation."
        },
        "testing_criteria": {
          "type": "array",
          "description": "A list of graders for all eval runs in this group. Graders can reference variables in the data source using double curly braces notation, like `{{item.variable_name}}`. To reference the model's output, use the `sample` namespace (ie, `{{sample.output_text}}`).",
          "items": {}
        },
        "properties": {
          "type": "object",
          "description": "Set of immutable 16 key-value pairs that can be attached to an object for storing additional information.\n    Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "data_source_config",
        "testing_criteria"
      ]
    },
    "CreateEvalRunRequest": {
      "type": "object",
      "title": "CreateEvalRunRequest",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the run."
        },
        "metadata": {
          "$ref": "#/definitions/OpenAI.Metadata"
        },
        "data_source": {
          "description": "Details about the run's data source."
        },
        "properties": {
          "type": "object",
          "description": "Set of immutable 16 key-value pairs that can be attached to an object for storing additional information.\n    Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "data_source"
      ]
    },
    "CreatedBy": {
      "type": "object",
      "properties": {
        "agent": {
          "$ref": "#/definitions/AgentId",
          "description": "The agent that created the item."
        },
        "response_id": {
          "type": "string",
          "description": "The response on which the item is created."
        }
      }
    },
    "CredentialType": {
      "type": "string",
      "description": "The credential type used by the connection",
      "enum": [
        "ApiKey",
        "AAD",
        "SAS",
        "CustomKeys",
        "None",
        "AgenticIdentityToken"
      ],
      "x-ms-enum": {
        "name": "CredentialType",
        "modelAsString": true,
        "values": [
          {
            "name": "apiKey",
            "value": "ApiKey",
            "description": "API Key credential"
          },
          {
            "name": "entraId",
            "value": "AAD",
            "description": "Entra ID credential (formerly known as AAD)"
          },
          {
            "name": "SAS",
            "value": "SAS",
            "description": "Shared Access Signature (SAS) credential"
          },
          {
            "name": "custom",
            "value": "CustomKeys",
            "description": "Custom credential"
          },
          {
            "name": "None",
            "value": "None",
            "description": "No credential"
          },
          {
            "name": "agenticIdentity",
            "value": "AgenticIdentityToken",
            "description": "Agentic identity credential"
          }
        ]
      }
    },
    "CronTrigger": {
      "type": "object",
      "description": "Cron based trigger.",
      "properties": {
        "expression": {
          "type": "string",
          "description": "Cron expression that defines the schedule frequency."
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone for the cron schedule.",
          "default": "UTC"
        },
        "startTime": {
          "type": "string",
          "description": "Start time for the cron schedule in ISO 8601 format."
        },
        "endTime": {
          "type": "string",
          "description": "End time for the cron schedule in ISO 8601 format."
        }
      },
      "required": [
        "expression"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "x-ms-discriminator-value": "Cron"
    },
    "CustomCredential": {
      "type": "object",
      "description": "Custom credential definition",
      "additionalProperties": {
        "type": "string"
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "CustomKeys"
    },
    "DailyRecurrenceSchedule": {
      "type": "object",
      "description": "Daily recurrence schedule.",
      "properties": {
        "hours": {
          "type": "array",
          "description": "Hours for the recurrence schedule.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "hours"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RecurrenceSchedule"
        }
      ],
      "x-ms-discriminator-value": "Daily"
    },
    "DatasetType": {
      "type": "string",
      "description": "Enum to determine the type of data.",
      "enum": [
        "uri_file",
        "uri_folder"
      ],
      "x-ms-enum": {
        "name": "DatasetType",
        "modelAsString": true,
        "values": [
          {
            "name": "uri_file",
            "value": "uri_file",
            "description": "URI file."
          },
          {
            "name": "uri_folder",
            "value": "uri_folder",
            "description": "URI folder."
          }
        ]
      }
    },
    "DatasetVersion": {
      "type": "object",
      "description": "DatasetVersion Definition",
      "properties": {
        "dataUri": {
          "type": "string",
          "description": "URI of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330",
          "minLength": 1,
          "pattern": "[a-zA-Z0-9_]",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "type": {
          "$ref": "#/definitions/DatasetType",
          "description": "Dataset type"
        },
        "isReference": {
          "type": "boolean",
          "description": "Indicates if the dataset holds a reference to the storage, or the dataset manages storage itself. If true, the underlying data will not be deleted when the dataset version is deleted",
          "readOnly": true
        },
        "connectionName": {
          "type": "string",
          "description": "The Azure Storage Account connection name. Required if startPendingUploadVersion was not called before creating the Dataset",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "description": "Asset ID, a unique identifier for the asset",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the resource",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The asset description text.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "discriminator": "type",
      "required": [
        "dataUri",
        "type",
        "name",
        "version"
      ]
    },
    "DayOfWeek": {
      "type": "string",
      "description": "Days of the week for recurrence schedule.",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeek",
        "modelAsString": true,
        "values": [
          {
            "name": "Sunday",
            "value": "Sunday",
            "description": "Sunday."
          },
          {
            "name": "Monday",
            "value": "Monday",
            "description": "Monday."
          },
          {
            "name": "Tuesday",
            "value": "Tuesday",
            "description": "Tuesday."
          },
          {
            "name": "Wednesday",
            "value": "Wednesday",
            "description": "Wednesday."
          },
          {
            "name": "Thursday",
            "value": "Thursday",
            "description": "Thursday."
          },
          {
            "name": "Friday",
            "value": "Friday",
            "description": "Friday."
          },
          {
            "name": "Saturday",
            "value": "Saturday",
            "description": "Saturday."
          }
        ]
      }
    },
    "DeleteAgentResponse": {
      "type": "object",
      "description": "A deleted agent Object",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type. Always 'agent.deleted'.",
          "enum": [
            "agent.deleted"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the agent."
        },
        "deleted": {
          "type": "boolean",
          "description": "Whether the agent was successfully deleted."
        }
      },
      "required": [
        "object",
        "name",
        "deleted"
      ]
    },
    "DeleteAgentVersionResponse": {
      "type": "object",
      "description": "A deleted agent version Object",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type. Always 'agent.deleted'.",
          "enum": [
            "agent.version.deleted"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the agent."
        },
        "version": {
          "type": "string",
          "description": "The version identifier of the agent."
        },
        "deleted": {
          "type": "boolean",
          "description": "Whether the agent was successfully deleted."
        }
      },
      "required": [
        "object",
        "name",
        "version",
        "deleted"
      ]
    },
    "DeleteEvalResponse": {
      "type": "object",
      "description": "A deleted evaluation Object",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type. Always 'eval.deleted'.",
          "enum": [
            "eval.deleted"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "eval_id": {
          "type": "string",
          "description": "id of the eval."
        },
        "deleted": {
          "type": "boolean",
          "description": "Whether the eval was successfully deleted."
        }
      },
      "required": [
        "object",
        "eval_id",
        "deleted"
      ]
    },
    "DeleteEvalRunResponse": {
      "type": "object",
      "description": "A deleted evaluation run Object.",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type. Always 'eval.deleted'.",
          "enum": [
            "eval.deleted"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "run_id": {
          "type": "string",
          "description": "id of the eval."
        },
        "deleted": {
          "type": "boolean",
          "description": "Whether the eval was successfully deleted."
        }
      }
    },
    "DeleteMemoryStoreResponse": {
      "type": "object",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type. Always 'memory_store.deleted'.",
          "enum": [
            "memory_store.deleted"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the memory store."
        },
        "deleted": {
          "type": "boolean",
          "description": "Whether the memory store was successfully deleted."
        }
      },
      "required": [
        "object",
        "name",
        "deleted"
      ]
    },
    "DeleteResponseResult": {
      "type": "object",
      "description": "The result of a delete response operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The operation ID."
        },
        "object": {
          "type": "string",
          "description": "Always return 'response'.",
          "enum": [
            "response"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "deleted": {
          "type": "boolean",
          "description": "Always return true",
          "enum": [
            true
          ]
        }
      },
      "required": [
        "id",
        "object",
        "deleted"
      ]
    },
    "Deployment": {
      "type": "object",
      "description": "Model Deployment Definition",
      "properties": {
        "type": {
          "$ref": "#/definitions/DeploymentType",
          "description": "The type of the deployment"
        },
        "name": {
          "type": "string",
          "description": "Name of the deployment",
          "readOnly": true
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "name"
      ]
    },
    "DeploymentType": {
      "type": "string",
      "enum": [
        "ModelDeployment"
      ],
      "x-ms-enum": {
        "name": "DeploymentType",
        "modelAsString": true,
        "values": [
          {
            "name": "ModelDeployment",
            "value": "ModelDeployment",
            "description": "Model deployment"
          }
        ]
      }
    },
    "EmbeddingConfiguration": {
      "type": "object",
      "description": "Embedding configuration class",
      "properties": {
        "modelDeploymentName": {
          "type": "string",
          "description": "Deployment name of embedding model. It can point to a model deployment either in the parent AIServices or a connection.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "embeddingField": {
          "type": "string",
          "description": "Embedding field",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "modelDeploymentName",
        "embeddingField"
      ]
    },
    "EntraIDCredentials": {
      "type": "object",
      "description": "Entra ID credential definition",
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "AAD"
    },
    "Eval": {
      "type": "object",
      "title": "Eval",
      "description": "An Eval object with a data source config and testing criteria.\nAn Eval represents a task to be done for your LLM integration.\nLike:\n- Improve the quality of my chatbot\n- See how well my chatbot handles customer support\n- Check if o4-mini is better at my usecase than gpt-4o",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type.",
          "default": "eval",
          "enum": [
            "eval"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "x-stainless-const": true
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the evaluation."
        },
        "name": {
          "type": "string",
          "description": "The name of the evaluation."
        },
        "data_source_config": {
          "description": "Configuration of data sources used in runs of the evaluation."
        },
        "testing_criteria": {
          "type": "array",
          "description": "A list of testing criteria.",
          "items": {}
        },
        "created_at": {
          "$ref": "#/definitions/OpenAI.integer",
          "description": "The Unix timestamp (in seconds) for when the eval was created."
        },
        "metadata": {
          "$ref": "#/definitions/OpenAI.Metadata"
        },
        "modified_at": {
          "$ref": "#/definitions/integer",
          "description": "Unix timestamp (in seconds) when the evaluation run was last modified."
        },
        "created_by": {
          "type": "string",
          "description": "the name of the person who created the run."
        },
        "properties": {
          "type": "object",
          "description": "Set of immutable 16 key-value pairs that can be attached to an object for storing additional information.\n    Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "object",
        "id",
        "name",
        "data_source_config",
        "testing_criteria",
        "created_at",
        "metadata"
      ],
      "x-oaiMeta": {
        "name": "The eval object",
        "group": "evals",
        "example": "{\n  \"object\": \"eval\",\n  \"id\": \"eval_67abd54d9b0081909a86353f6fb9317a\",\n  \"data_source_config\": {\n    \"type\": \"custom\",\n    \"item_schema\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"label\": {\"type\": \"string\"},\n      },\n      \"required\": [\"label\"]\n    },\n    \"include_sample_schema\": true\n  },\n  \"testing_criteria\": [\n    {\n      \"name\": \"My string check grader\",\n      \"type\": \"string_check\",\n      \"input\": \"{{sample.output_text}}\",\n      \"reference\": \"{{item.label}}\",\n      \"operation\": \"eq\",\n    }\n  ],\n  \"name\": \"External Data Eval\",\n  \"created_at\": 1739314509,\n  \"metadata\": {\n    \"test\": \"synthetics\",\n  }\n}\n"
      }
    },
    "EvalCompareReport": {
      "type": "object",
      "description": "Insights from the evaluation comparison.",
      "properties": {
        "comparisons": {
          "type": "array",
          "description": "Comparison results for each treatment run against the baseline.",
          "items": {
            "$ref": "#/definitions/EvalRunResultComparison"
          }
        },
        "method": {
          "type": "string",
          "description": "The statistical method used for comparison."
        }
      },
      "required": [
        "comparisons",
        "method"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightResult"
        }
      ],
      "x-ms-discriminator-value": "EvaluationComparison"
    },
    "EvalResult": {
      "type": "object",
      "description": "Result of the evaluation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "name of the check"
        },
        "type": {
          "type": "string",
          "description": "type of the check"
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "score"
        },
        "passed": {
          "type": "boolean",
          "description": "indicates if the check passed or failed"
        }
      },
      "required": [
        "name",
        "type",
        "score",
        "passed"
      ]
    },
    "EvalRun": {
      "type": "object",
      "title": "EvalRun",
      "description": "A schema representing an evaluation run.",
      "properties": {
        "object": {
          "type": "string",
          "description": "The type of the object. Always \"eval.run\".",
          "default": "eval.run",
          "enum": [
            "eval.run"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "x-stainless-const": true
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the evaluation run."
        },
        "eval_id": {
          "type": "string",
          "description": "The identifier of the associated evaluation."
        },
        "status": {
          "type": "string",
          "description": "The status of the evaluation run."
        },
        "model": {
          "type": "string",
          "description": "The model that is evaluated, if applicable."
        },
        "name": {
          "type": "string",
          "description": "The name of the evaluation run."
        },
        "created_at": {
          "$ref": "#/definitions/OpenAI.integer",
          "description": "Unix timestamp (in seconds) when the evaluation run was created."
        },
        "report_url": {
          "type": "string",
          "description": "The URL to the rendered evaluation run report on the UI dashboard."
        },
        "result_counts": {
          "$ref": "#/definitions/OpenAI.EvalRunResultCounts",
          "description": "Counters summarizing the outcomes of the evaluation run."
        },
        "per_model_usage": {
          "type": "array",
          "description": "Usage statistics for each model during the evaluation run.",
          "items": {
            "$ref": "#/definitions/OpenAI.EvalRunPerModelUsage"
          }
        },
        "per_testing_criteria_results": {
          "type": "array",
          "description": "Results per testing criteria applied during the evaluation run.",
          "items": {
            "$ref": "#/definitions/OpenAI.EvalRunPerTestingCriteriaResults"
          }
        },
        "data_source": {
          "description": "Information about the run's data source."
        },
        "metadata": {
          "$ref": "#/definitions/OpenAI.Metadata"
        },
        "error": {
          "$ref": "#/definitions/OpenAI.EvalApiError"
        },
        "modified_at": {
          "$ref": "#/definitions/integer",
          "description": "Unix timestamp (in seconds) when the evaluation run was last modified."
        },
        "created_by": {
          "type": "string",
          "description": "the name of the person who created the run."
        },
        "properties": {
          "type": "object",
          "description": "Set of immutable 16 key-value pairs that can be attached to an object for storing additional information.\n    Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "object",
        "id",
        "eval_id",
        "status",
        "model",
        "name",
        "created_at",
        "report_url",
        "result_counts",
        "per_model_usage",
        "per_testing_criteria_results",
        "data_source",
        "metadata",
        "error"
      ],
      "x-oaiMeta": {
        "name": "The eval run object",
        "group": "evals",
        "example": "{\n  \"object\": \"eval.run\",\n  \"id\": \"evalrun_67e57965b480819094274e3a32235e4c\",\n  \"eval_id\": \"eval_67e579652b548190aaa83ada4b125f47\",\n  \"report_url\": \"https://platform.openai.com/evaluations/eval_67e579652b548190aaa83ada4b125f47?run_id=evalrun_67e57965b480819094274e3a32235e4c\",\n  \"status\": \"queued\",\n  \"model\": \"gpt-4o-mini\",\n  \"name\": \"gpt-4o-mini\",\n  \"created_at\": 1743092069,\n  \"result_counts\": {\n    \"total\": 0,\n    \"errored\": 0,\n    \"failed\": 0,\n    \"passed\": 0\n  },\n  \"per_model_usage\": null,\n  \"per_testing_criteria_results\": null,\n  \"data_source\": {\n    \"type\": \"completions\",\n    \"source\": {\n      \"type\": \"file_content\",\n      \"content\": [\n        {\n          \"item\": {\n            \"input\": \"Tech Company Launches Advanced Artificial Intelligence Platform\",\n            \"ground_truth\": \"Technology\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"Central Bank Increases Interest Rates Amid Inflation Concerns\",\n            \"ground_truth\": \"Markets\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"International Summit Addresses Climate Change Strategies\",\n            \"ground_truth\": \"World\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"Major Retailer Reports Record-Breaking Holiday Sales\",\n            \"ground_truth\": \"Business\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"National Team Qualifies for World Championship Finals\",\n            \"ground_truth\": \"Sports\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"Stock Markets Rally After Positive Economic Data Released\",\n            \"ground_truth\": \"Markets\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"Global Manufacturer Announces Merger with Competitor\",\n            \"ground_truth\": \"Business\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"Breakthrough in Renewable Energy Technology Unveiled\",\n            \"ground_truth\": \"Technology\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"World Leaders Sign Historic Climate Agreement\",\n            \"ground_truth\": \"World\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"Professional Athlete Sets New Record in Championship Event\",\n            \"ground_truth\": \"Sports\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"Financial Institutions Adapt to New Regulatory Requirements\",\n            \"ground_truth\": \"Business\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"Tech Conference Showcases Advances in Artificial Intelligence\",\n            \"ground_truth\": \"Technology\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"Global Markets Respond to Oil Price Fluctuations\",\n            \"ground_truth\": \"Markets\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"International Cooperation Strengthened Through New Treaty\",\n            \"ground_truth\": \"World\"\n          }\n        },\n        {\n          \"item\": {\n            \"input\": \"Sports League Announces Revised Schedule for Upcoming Season\",\n            \"ground_truth\": \"Sports\"\n          }\n        }\n      ]\n    },\n    \"input_messages\": {\n      \"type\": \"template\",\n      \"template\": [\n        {\n          \"type\": \"message\",\n          \"role\": \"developer\",\n          \"content\": {\n            \"type\": \"input_text\",\n            \"text\": \"Categorize a given news headline into one of the following topics: Technology, Markets, World, Business, or Sports.\\n\\n# Steps\\n\\n1. Analyze the content of the news headline to understand its primary focus.\\n2. Extract the subject matter, identifying any key indicators or keywords.\\n3. Use the identified indicators to determine the most suitable category out of the five options: Technology, Markets, World, Business, or Sports.\\n4. Ensure only one category is selected per headline.\\n\\n# Output Format\\n\\nRespond with the chosen category as a single word. For instance: \\\"Technology\\\", \\\"Markets\\\", \\\"World\\\", \\\"Business\\\", or \\\"Sports\\\".\\n\\n# Examples\\n\\n**Input**: \\\"Apple Unveils New iPhone Model, Featuring Advanced AI Features\\\"  \\n**Output**: \\\"Technology\\\"\\n\\n**Input**: \\\"Global Stocks Mixed as Investors Await Central Bank Decisions\\\"  \\n**Output**: \\\"Markets\\\"\\n\\n**Input**: \\\"War in Ukraine: Latest Updates on Negotiation Status\\\"  \\n**Output**: \\\"World\\\"\\n\\n**Input**: \\\"Microsoft in Talks to Acquire Gaming Company for $2 Billion\\\"  \\n**Output**: \\\"Business\\\"\\n\\n**Input**: \\\"Manchester United Secures Win in Premier League Football Match\\\"  \\n**Output**: \\\"Sports\\\" \\n\\n# Notes\\n\\n- If the headline appears to fit into more than one category, choose the most dominant theme.\\n- Keywords or phrases such as \\\"stocks\\\", \\\"company acquisition\\\", \\\"match\\\", or technological brands can be good indicators for classification.\\n\"\n          }\n        },\n        {\n          \"type\": \"message\",\n          \"role\": \"user\",\n          \"content\": {\n            \"type\": \"input_text\",\n            \"text\": \"{{item.input}}\"\n          }\n        }\n      ]\n    },\n    \"model\": \"gpt-4o-mini\",\n    \"sampling_params\": {\n      \"seed\": 42,\n      \"temperature\": 1.0,\n      \"top_p\": 1.0,\n      \"max_completions_tokens\": 2048\n    }\n  },\n  \"error\": null,\n  \"metadata\": {}\n}\n"
      }
    },
    "EvalRunOutputItem": {
      "type": "object",
      "title": "EvalRunOutputItem",
      "description": "A schema representing an evaluation run output item.",
      "properties": {
        "object": {
          "type": "string",
          "description": "The type of the object. Always \"eval.run.output_item\".",
          "default": "eval.run.output_item",
          "enum": [
            "eval.run.output_item"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "x-stainless-const": true
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the evaluation run output item."
        },
        "run_id": {
          "type": "string",
          "description": "The identifier of the evaluation run associated with this output item."
        },
        "eval_id": {
          "type": "string",
          "description": "The identifier of the evaluation group."
        },
        "created_at": {
          "$ref": "#/definitions/OpenAI.integer",
          "description": "Unix timestamp (in seconds) when the evaluation run was created."
        },
        "status": {
          "type": "string",
          "description": "The status of the evaluation run."
        },
        "datasource_item_id": {
          "$ref": "#/definitions/OpenAI.integer",
          "description": "The identifier for the data source item."
        },
        "datasource_item": {
          "type": "object",
          "description": "Details of the input data source item.",
          "additionalProperties": {}
        },
        "results": {
          "type": "array",
          "description": "A list of grader results for this output item.",
          "items": {
            "$ref": "#/definitions/EvalRunOutputItemResult"
          }
        },
        "sample": {
          "$ref": "#/definitions/OpenAI.EvalRunOutputItemSample",
          "description": "A sample containing the input and output of the evaluation run."
        }
      },
      "required": [
        "object",
        "id",
        "run_id",
        "eval_id",
        "created_at",
        "status",
        "datasource_item_id",
        "datasource_item",
        "results",
        "sample"
      ],
      "x-oaiMeta": {
        "name": "The eval run output item object",
        "group": "evals",
        "example": "{\n  \"object\": \"eval.run.output_item\",\n  \"id\": \"outputitem_67abd55eb6548190bb580745d5644a33\",\n  \"run_id\": \"evalrun_67abd54d60ec8190832b46859da808f7\",\n  \"eval_id\": \"eval_67abd54d9b0081909a86353f6fb9317a\",\n  \"created_at\": 1739314509,\n  \"status\": \"pass\",\n  \"datasource_item_id\": 137,\n  \"datasource_item\": {\n      \"teacher\": \"To grade essays, I only check for style, content, and grammar.\",\n      \"student\": \"I am a student who is trying to write the best essay.\"\n  },\n  \"results\": [\n    {\n      \"name\": \"String Check Grader\",\n      \"type\": \"string-check-grader\",\n      \"score\": 1.0,\n      \"passed\": true,\n    }\n  ],\n  \"sample\": {\n    \"input\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"You are an evaluator bot...\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": \"You are assessing...\"\n      }\n    ],\n    \"output\": [\n      {\n        \"role\": \"assistant\",\n        \"content\": \"The rubric is not clear nor concise.\"\n      }\n    ],\n    \"finish_reason\": \"stop\",\n    \"model\": \"gpt-4o-2024-08-06\",\n    \"usage\": {\n      \"total_tokens\": 521,\n      \"completion_tokens\": 2,\n      \"prompt_tokens\": 519,\n      \"cached_tokens\": 0\n    },\n    \"error\": null,\n    \"temperature\": 1.0,\n    \"max_completion_tokens\": 2048,\n    \"top_p\": 1.0,\n    \"seed\": 42\n  }\n}\n"
      }
    },
    "EvalRunOutputItemResult": {
      "type": "object",
      "title": "EvalRunOutputItemResult",
      "description": "A single grader result for an evaluation run output item.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the grader."
        },
        "type": {
          "type": "string",
          "description": "The grader type (for example, \"string-check-grader\")."
        },
        "score": {
          "$ref": "#/definitions/OpenAI.numeric",
          "description": "The numeric score produced by the grader."
        },
        "passed": {
          "type": "boolean",
          "description": "Whether the grader considered the output a pass."
        },
        "sample": {
          "type": "object",
          "description": "Optional sample or intermediate data produced by the grader.",
          "x-nullable": true,
          "additionalProperties": {}
        },
        "metric": {
          "type": "string",
          "description": "The name of the metric (e.g., \"fluency\", \"f1_score\")."
        },
        "label": {
          "type": "string",
          "description": "The label associated with the test criteria metric (e.g., \"pass\", \"fail\", \"good\", \"bad\")."
        },
        "threshold": {
          "type": "number",
          "format": "float",
          "description": "The threshold used to determine pass/fail for this test criteria, if it is numerical."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the test criteria metric."
        },
        "properties": {
          "type": "object",
          "description": "Additional details about the test criteria metric.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "score",
        "passed"
      ]
    },
    "EvalRunResultCompareItem": {
      "type": "object",
      "description": "Metric comparison for a treatment against the baseline.",
      "properties": {
        "treatmentRunId": {
          "type": "string",
          "description": "The treatment run ID."
        },
        "treatmentRunSummary": {
          "$ref": "#/definitions/EvalRunResultSummary",
          "description": "Summary statistics of the treatment run."
        },
        "deltaEstimate": {
          "type": "number",
          "format": "float",
          "description": "Estimated difference between treatment and baseline."
        },
        "pValue": {
          "type": "number",
          "format": "float",
          "description": "P-value for the treatment effect."
        },
        "treatmentEffect": {
          "$ref": "#/definitions/TreatmentEffectType",
          "description": "Type of treatment effect."
        }
      },
      "required": [
        "treatmentRunId",
        "treatmentRunSummary",
        "deltaEstimate",
        "pValue",
        "treatmentEffect"
      ]
    },
    "EvalRunResultComparison": {
      "type": "object",
      "description": "Comparison results for treatment runs against the baseline.",
      "properties": {
        "testingCriteria": {
          "type": "string",
          "description": "Name of the testing criteria."
        },
        "metric": {
          "type": "string",
          "description": "Metric being evaluated."
        },
        "evaluator": {
          "type": "string",
          "description": "Name of the evaluator for this testing criteria."
        },
        "baselineRunSummary": {
          "$ref": "#/definitions/EvalRunResultSummary",
          "description": "Summary statistics of the baseline run."
        },
        "compareItems": {
          "type": "array",
          "description": "List of comparison results for each treatment run.",
          "items": {
            "$ref": "#/definitions/EvalRunResultCompareItem"
          }
        }
      },
      "required": [
        "testingCriteria",
        "metric",
        "evaluator",
        "baselineRunSummary",
        "compareItems"
      ]
    },
    "EvalRunResultSummary": {
      "type": "object",
      "description": "Summary statistics of a metric in an evaluation run.",
      "properties": {
        "runId": {
          "type": "string",
          "description": "The evaluation run ID."
        },
        "sampleCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of samples in the evaluation run."
        },
        "average": {
          "type": "number",
          "format": "float",
          "description": "Average value of the metric in the evaluation run."
        },
        "standardDeviation": {
          "type": "number",
          "format": "float",
          "description": "Standard deviation of the metric in the evaluation run."
        }
      },
      "required": [
        "runId",
        "sampleCount",
        "average",
        "standardDeviation"
      ]
    },
    "EvaluationComparisonRequest": {
      "type": "object",
      "description": "Evaluation Comparison Request",
      "properties": {
        "evalId": {
          "type": "string",
          "description": "Identifier for the evaluation."
        },
        "baselineRunId": {
          "type": "string",
          "description": "The baseline run ID for comparison."
        },
        "treatmentRunIds": {
          "type": "array",
          "description": "List of treatment run IDs for comparison.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "evalId",
        "baselineRunId",
        "treatmentRunIds"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightRequest"
        }
      ],
      "x-ms-discriminator-value": "EvaluationComparison"
    },
    "EvaluationResultSample": {
      "type": "object",
      "description": "A sample from the evaluation result.",
      "properties": {
        "evaluationResult": {
          "$ref": "#/definitions/EvalResult",
          "description": "Evaluation result for the analysis sample."
        }
      },
      "required": [
        "evaluationResult"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightSample"
        }
      ],
      "x-ms-discriminator-value": "EvaluationResultSample"
    },
    "EvaluationRule": {
      "type": "object",
      "description": "Evaluation rule model.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the evaluation rule.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display Name for the evaluation rule."
        },
        "description": {
          "type": "string",
          "description": "Description for the evaluation rule."
        },
        "action": {
          "$ref": "#/definitions/EvaluationRuleAction",
          "description": "Definition of the evaluation rule action."
        },
        "filter": {
          "$ref": "#/definitions/EvaluationRuleFilter",
          "description": "Filter condition of the evaluation rule."
        },
        "eventType": {
          "$ref": "#/definitions/EvaluationRuleEventType",
          "description": "Event type that the evaluation rule applies to."
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the evaluation rule is enabled. Default is true."
        },
        "systemData": {
          "type": "object",
          "description": "System metadata for the evaluation rule.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "id",
        "action",
        "eventType",
        "enabled",
        "systemData"
      ]
    },
    "EvaluationRuleAction": {
      "type": "object",
      "description": "Evaluation action model.",
      "properties": {
        "type": {
          "$ref": "#/definitions/EvaluationRuleActionType",
          "description": "Type of the evaluation action."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "EvaluationRuleActionType": {
      "type": "string",
      "description": "Type of the evaluation action.",
      "enum": [
        "continuousEvaluation",
        "humanEvaluation"
      ],
      "x-ms-enum": {
        "name": "EvaluationRuleActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "continuousEvaluation",
            "value": "continuousEvaluation",
            "description": "Continuous evaluation."
          },
          {
            "name": "humanEvaluation",
            "value": "humanEvaluation",
            "description": "Human evaluation."
          }
        ]
      }
    },
    "EvaluationRuleEventType": {
      "type": "string",
      "description": "Type of the evaluation rule event.",
      "enum": [
        "response.completed",
        "manual"
      ],
      "x-ms-enum": {
        "name": "EvaluationRuleEventType",
        "modelAsString": true,
        "values": [
          {
            "name": "responseCompleted",
            "value": "response.completed",
            "description": "Response completed."
          },
          {
            "name": "manual",
            "value": "manual",
            "description": "Manual trigger."
          }
        ]
      }
    },
    "EvaluationRuleFilter": {
      "type": "object",
      "description": "Evaluation filter model.",
      "properties": {
        "agentName": {
          "type": "string",
          "description": "Filter by agent name."
        }
      },
      "required": [
        "agentName"
      ]
    },
    "EvaluationRunClusterInsightResult": {
      "type": "object",
      "description": "Insights from the evaluation run cluster analysis.",
      "properties": {
        "clusterInsight": {
          "$ref": "#/definitions/ClusterInsightResult"
        }
      },
      "required": [
        "clusterInsight"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightResult"
        }
      ],
      "x-ms-discriminator-value": "EvaluationRunClusterInsight"
    },
    "EvaluationRunClusterInsightsRequest": {
      "type": "object",
      "description": "Insights on set of Evaluation Results",
      "properties": {
        "evalId": {
          "type": "string",
          "description": "Evaluation Id for the insights."
        },
        "runIds": {
          "type": "array",
          "description": "List of evaluation run IDs for the insights.",
          "items": {
            "type": "string"
          }
        },
        "modelConfiguration": {
          "$ref": "#/definitions/InsightModelConfiguration",
          "description": "Configuration of the model used in the insight generation."
        }
      },
      "required": [
        "evalId",
        "runIds"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/InsightRequest"
        }
      ],
      "x-ms-discriminator-value": "EvaluationRunClusterInsight"
    },
    "EvaluationScheduleTask": {
      "type": "object",
      "description": "Evaluation task for the schedule.",
      "properties": {
        "evalId": {
          "type": "string",
          "description": "Identifier of the evaluation group."
        },
        "evalRun": {
          "type": "object",
          "description": "The evaluation run payload."
        }
      },
      "required": [
        "evalId",
        "evalRun"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScheduleTask"
        }
      ],
      "x-ms-discriminator-value": "Evaluation"
    },
    "EvaluationTaxonomy": {
      "type": "object",
      "description": "Evaluation Taxonomy Definition",
      "properties": {
        "id": {
          "type": "string",
          "description": "Asset ID, a unique identifier for the asset",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the resource",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The asset description text.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "taxonomyInput": {
          "$ref": "#/definitions/EvaluationTaxonomyInput",
          "description": "Input configuration for the evaluation taxonomy."
        },
        "taxonomyCategories": {
          "type": "array",
          "description": "List of taxonomy categories.",
          "items": {
            "$ref": "#/definitions/TaxonomyCategory"
          }
        },
        "properties": {
          "type": "object",
          "description": "Additional properties for the evaluation taxonomy.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "version",
        "taxonomyInput"
      ]
    },
    "EvaluationTaxonomyInput": {
      "type": "object",
      "description": "Input configuration for the evaluation taxonomy.",
      "properties": {
        "type": {
          "$ref": "#/definitions/EvaluationTaxonomyInputType",
          "description": "Input type of the evaluation taxonomy."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "EvaluationTaxonomyInputType": {
      "type": "string",
      "description": "Type of the evaluation taxonomy input.",
      "enum": [
        "agent",
        "policy"
      ],
      "x-ms-enum": {
        "name": "EvaluationTaxonomyInputType",
        "modelAsString": true,
        "values": [
          {
            "name": "agent",
            "value": "agent",
            "description": "Agent"
          },
          {
            "name": "policy",
            "value": "policy",
            "description": "Policy."
          }
        ]
      }
    },
    "EvaluationTaxonomyInputUpdate": {
      "type": "object",
      "description": "Input configuration for the evaluation taxonomy.",
      "properties": {
        "type": {
          "$ref": "#/definitions/EvaluationTaxonomyInputType",
          "description": "Input type of the evaluation taxonomy."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "EvaluationTaxonomyUpdate": {
      "type": "object",
      "description": "Evaluation Taxonomy Definition",
      "properties": {
        "description": {
          "type": "string",
          "description": "The asset description text.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "taxonomyInput": {
          "$ref": "#/definitions/EvaluationTaxonomyInputUpdate",
          "description": "Input configuration for the evaluation taxonomy."
        },
        "taxonomyCategories": {
          "type": "array",
          "description": "List of taxonomy categories.",
          "items": {
            "$ref": "#/definitions/TaxonomyCategory"
          }
        },
        "properties": {
          "type": "object",
          "description": "Additional properties for the evaluation taxonomy.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EvaluatorCategory": {
      "type": "string",
      "description": "The category of the evaluator",
      "enum": [
        "quality",
        "safety",
        "agents"
      ],
      "x-ms-enum": {
        "name": "EvaluatorCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "quality",
            "value": "quality",
            "description": "Quality"
          },
          {
            "name": "safety",
            "value": "safety",
            "description": "Risk & Safety"
          },
          {
            "name": "agents",
            "value": "agents",
            "description": "Agents"
          }
        ]
      }
    },
    "EvaluatorDefinition": {
      "type": "object",
      "description": "Base evaluator configuration with discriminator",
      "properties": {
        "type": {
          "$ref": "#/definitions/EvaluatorDefinitionType",
          "description": "The type of evaluator definition"
        },
        "init_parameters": {
          "description": "The JSON schema (Draft 2020-12) for the evaluator's input parameters. This includes parameters like type, properties, required."
        },
        "data_schema": {
          "description": "The JSON schema (Draft 2020-12) for the evaluator's input data. This includes parameters like type, properties, required."
        },
        "metrics": {
          "type": "object",
          "description": "List of output metrics produced by this evaluator",
          "additionalProperties": {
            "$ref": "#/definitions/EvaluatorMetric"
          }
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "EvaluatorDefinitionType": {
      "type": "string",
      "description": "The type of evaluator definition",
      "enum": [
        "prompt",
        "code",
        "prompt_and_code",
        "service",
        "openai_graders"
      ],
      "x-ms-enum": {
        "name": "EvaluatorDefinitionType",
        "modelAsString": true,
        "values": [
          {
            "name": "prompt",
            "value": "prompt",
            "description": "Prompt-based definition"
          },
          {
            "name": "code",
            "value": "code",
            "description": "Code-based definition"
          },
          {
            "name": "prompt_and_code",
            "value": "prompt_and_code",
            "description": "Prompt & Code Based definition"
          },
          {
            "name": "service",
            "value": "service",
            "description": "Service-based evaluator"
          },
          {
            "name": "openai_graders",
            "value": "openai_graders",
            "description": "OpenAI graders"
          }
        ]
      }
    },
    "EvaluatorMetric": {
      "type": "object",
      "description": "Evaluator Metric",
      "properties": {
        "type": {
          "$ref": "#/definitions/EvaluatorMetricType",
          "description": "Type of the metric."
        },
        "desirable_direction": {
          "$ref": "#/definitions/EvaluatorMetricDirection",
          "description": "It indicates whether a higher value is better or a lower value is better for this metric."
        },
        "min_value": {
          "type": "number",
          "format": "float",
          "description": "Minimum value for the metric"
        },
        "max_value": {
          "type": "number",
          "format": "float",
          "description": "Maximum value for the metric. If not specified, it is assumed to be unbounded."
        },
        "is_primary": {
          "type": "boolean",
          "description": "Indicates if this metric is primary when there are multiple metrics."
        }
      }
    },
    "EvaluatorMetricDirection": {
      "type": "string",
      "description": "The direction of the metric indicating whether a higher value is better, a lower value is better, or neutral",
      "enum": [
        "increase",
        "decrease",
        "neutral"
      ],
      "x-ms-enum": {
        "name": "EvaluatorMetricDirection",
        "modelAsString": true,
        "values": [
          {
            "name": "increase",
            "value": "increase",
            "description": "It indicates a higher value is better for this metric"
          },
          {
            "name": "decrease",
            "value": "decrease",
            "description": "It indicates a lower value is better for this metric"
          },
          {
            "name": "neutral",
            "value": "neutral",
            "description": "It indicates no preference for this metric direction"
          }
        ]
      }
    },
    "EvaluatorMetricType": {
      "type": "string",
      "description": "The type of the evaluator",
      "enum": [
        "ordinal",
        "continuous",
        "boolean"
      ],
      "x-ms-enum": {
        "name": "EvaluatorMetricType",
        "modelAsString": true,
        "values": [
          {
            "name": "ordinal",
            "value": "ordinal",
            "description": "Ordinal metric representing categories that can be ordered or ranked."
          },
          {
            "name": "continuous",
            "value": "continuous",
            "description": "Continuous metric representing values in a continuous range."
          },
          {
            "name": "boolean",
            "value": "boolean",
            "description": "Boolean metric representing true/false values"
          }
        ]
      }
    },
    "EvaluatorType": {
      "type": "string",
      "description": "The type of the evaluator",
      "enum": [
        "builtin",
        "custom"
      ],
      "x-ms-enum": {
        "name": "EvaluatorType",
        "modelAsString": true,
        "values": [
          {
            "name": "built_in",
            "value": "builtin",
            "description": "Built-in evaluator (Microsoft provided)"
          },
          {
            "name": "custom",
            "value": "custom",
            "description": "Custom evaluator"
          }
        ]
      }
    },
    "EvaluatorVersion": {
      "type": "object",
      "description": "Evaluator Definition",
      "properties": {
        "display_name": {
          "type": "string",
          "description": "Display Name for evaluator. It helps to find the evaluator easily in AI Foundry. It does not need to be unique."
        },
        "metadata": {
          "type": "object",
          "description": "Metadata about the evaluator",
          "additionalProperties": {
            "type": "string"
          }
        },
        "evaluator_type": {
          "$ref": "#/definitions/EvaluatorType",
          "description": "The type of the evaluator"
        },
        "categories": {
          "type": "array",
          "description": "The categories of the evaluator",
          "items": {
            "$ref": "#/definitions/EvaluatorCategory"
          }
        },
        "definition": {
          "$ref": "#/definitions/EvaluatorDefinition",
          "description": "Definition of the evaluator"
        },
        "created_by": {
          "type": "string",
          "description": "Creator of the evaluator",
          "readOnly": true
        },
        "created_at": {
          "type": "integer",
          "format": "int64",
          "description": "Creation date/time of the evaluator",
          "readOnly": true
        },
        "modified_at": {
          "type": "integer",
          "format": "int64",
          "description": "Last modified date/time of the evaluator",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Asset ID, a unique identifier for the asset",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the resource",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The asset description text.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "required": [
        "evaluator_type",
        "categories",
        "definition",
        "created_by",
        "created_at",
        "modified_at",
        "name",
        "version"
      ]
    },
    "FabricDataAgentToolParameters": {
      "type": "object",
      "description": "The fabric data agent tool parameters.",
      "properties": {
        "project_connections": {
          "type": "array",
          "description": "The project connections attached to this tool. There can be a maximum of 1 connection\nresource attached to the tool.",
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/ToolProjectConnection"
          }
        }
      }
    },
    "FieldMapping": {
      "type": "object",
      "description": "Field mapping configuration class",
      "properties": {
        "contentFields": {
          "type": "array",
          "description": "List of fields with text content",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "filepathField": {
          "type": "string",
          "description": "Path of file to be used as a source of text content",
          "x-ms-mutability": [
            "create"
          ]
        },
        "titleField": {
          "type": "string",
          "description": "Field containing the title of the document",
          "x-ms-mutability": [
            "create"
          ]
        },
        "urlField": {
          "type": "string",
          "description": "Field containing the url of the document",
          "x-ms-mutability": [
            "create"
          ]
        },
        "vectorFields": {
          "type": "array",
          "description": "List of fields with vector content",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "metadataFields": {
          "type": "array",
          "description": "List of fields with metadata content",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "contentFields"
      ]
    },
    "FileDatasetVersion": {
      "type": "object",
      "description": "FileDatasetVersion Definition",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetVersion"
        }
      ],
      "x-ms-discriminator-value": "uri_file"
    },
    "FolderDatasetVersion": {
      "type": "object",
      "description": "FileDatasetVersion Definition",
      "allOf": [
        {
          "$ref": "#/definitions/DatasetVersion"
        }
      ],
      "x-ms-discriminator-value": "uri_folder"
    },
    "HostedAgentDefinition": {
      "type": "object",
      "description": "The hosted agent definition.",
      "properties": {
        "tools": {
          "type": "array",
          "description": "An array of tools the hosted agent's model may call while generating a response. You\ncan specify which tool to use by setting the `tool_choice` parameter.",
          "items": {
            "$ref": "#/definitions/OpenAI.Tool"
          }
        },
        "container_protocol_versions": {
          "type": "array",
          "description": "The protocols that the agent supports for ingress communication of the containers.",
          "items": {
            "$ref": "#/definitions/ProtocolVersionRecord"
          }
        },
        "cpu": {
          "type": "string",
          "description": "The CPU configuration for the hosted agent."
        },
        "memory": {
          "type": "string",
          "description": "The memory configuration for the hosted agent."
        },
        "environment_variables": {
          "type": "object",
          "description": "Environment variables to set in the hosted agent container.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "discriminator": "kind",
      "required": [
        "container_protocol_versions",
        "cpu",
        "memory"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AgentDefinition"
        }
      ],
      "x-ms-discriminator-value": "hosted"
    },
    "HourlyRecurrenceSchedule": {
      "type": "object",
      "description": "Hourly recurrence schedule.",
      "allOf": [
        {
          "$ref": "#/definitions/RecurrenceSchedule"
        }
      ],
      "x-ms-discriminator-value": "Hourly"
    },
    "HumanEvaluationRuleAction": {
      "type": "object",
      "description": "Evaluation rule action for human evaluation.",
      "properties": {
        "templateId": {
          "$ref": "#/definitions/AssetId",
          "description": "Human evaluation template Id."
        }
      },
      "required": [
        "templateId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluationRuleAction"
        }
      ],
      "x-ms-discriminator-value": "humanEvaluation"
    },
    "ImageBasedHostedAgentDefinition": {
      "type": "object",
      "description": "The image-based deployment definition for a hosted agent.",
      "properties": {
        "image": {
          "type": "string",
          "description": "The image for the hosted agent."
        }
      },
      "required": [
        "image"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/HostedAgentDefinition"
        }
      ],
      "x-ms-discriminator-value": "hosted"
    },
    "Index": {
      "type": "object",
      "description": "Index resource Definition",
      "properties": {
        "type": {
          "$ref": "#/definitions/IndexType",
          "description": "Type of index"
        },
        "id": {
          "type": "string",
          "description": "Asset ID, a unique identifier for the asset",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "The version of the resource",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The asset description text.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "name",
        "version"
      ]
    },
    "IndexType": {
      "type": "string",
      "enum": [
        "AzureSearch",
        "CosmosDBNoSqlVectorStore",
        "ManagedAzureSearch"
      ],
      "x-ms-enum": {
        "name": "IndexType",
        "modelAsString": true,
        "values": [
          {
            "name": "azureSearch",
            "value": "AzureSearch",
            "description": "Azure search"
          },
          {
            "name": "cosmosDB",
            "value": "CosmosDBNoSqlVectorStore",
            "description": "CosmosDB"
          },
          {
            "name": "managedAzureSearch",
            "value": "ManagedAzureSearch",
            "description": "Managed Azure Search"
          }
        ]
      }
    },
    "Insight": {
      "type": "object",
      "description": "The response body for cluster insights.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the insights report.",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/InsightsMetadata",
          "description": "Metadata about the insights report.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/Azure.Core.Foundations.OperationState",
          "description": "The current state of the insights.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "User friendly display name for the insight."
        },
        "request": {
          "$ref": "#/definitions/InsightRequest",
          "description": "Request for the insights analysis."
        },
        "result": {
          "$ref": "#/definitions/InsightResult",
          "description": "The result of the insights report.",
          "readOnly": true
        }
      },
      "required": [
        "id",
        "metadata",
        "state",
        "displayName",
        "request"
      ]
    },
    "InsightCluster": {
      "type": "object",
      "description": "A cluster of analysis samples.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the analysis cluster."
        },
        "label": {
          "type": "string",
          "description": "Label for the cluster"
        },
        "suggestion": {
          "type": "string",
          "description": "Suggestion for the cluster"
        },
        "description": {
          "type": "string",
          "description": "Description of the analysis cluster."
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "The weight of the analysis cluster. This indicate number of samples in the cluster."
        },
        "subClusters": {
          "type": "array",
          "description": "List of subclusters within this cluster. Empty if no subclusters exist.",
          "items": {
            "$ref": "#/definitions/InsightCluster"
          }
        },
        "samples": {
          "type": "array",
          "description": "List of samples that belong to this cluster. Empty if samples are part of subclusters.",
          "items": {
            "$ref": "#/definitions/InsightSample"
          }
        }
      },
      "required": [
        "id",
        "label",
        "suggestion",
        "description",
        "weight"
      ]
    },
    "InsightModelConfiguration": {
      "type": "object",
      "description": "Configuration of the model used in the insight generation.",
      "properties": {
        "modelDeploymentName": {
          "type": "string",
          "description": "The model deployment to be evaluated. Accepts either the deployment name alone or with the connection name as '{connectionName}/<modelDeploymentName>'."
        }
      },
      "required": [
        "modelDeploymentName"
      ]
    },
    "InsightRequest": {
      "type": "object",
      "description": "The request of the insights report.",
      "properties": {
        "type": {
          "$ref": "#/definitions/InsightType",
          "description": "The type of request."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "InsightResult": {
      "type": "object",
      "description": "The result of the insights.",
      "properties": {
        "type": {
          "$ref": "#/definitions/InsightType",
          "description": "The type of insights result."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "InsightSample": {
      "type": "object",
      "description": "A sample from the analysis.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the analysis sample."
        },
        "type": {
          "$ref": "#/definitions/SampleType",
          "description": "Sample type"
        },
        "features": {
          "type": "object",
          "description": "Features to help with additional filtering of data in UX.",
          "additionalProperties": {}
        },
        "correlationInfo": {
          "type": "object",
          "description": "Info about the correlation for the analysis sample.",
          "additionalProperties": {}
        }
      },
      "discriminator": "type",
      "required": [
        "id",
        "type",
        "features",
        "correlationInfo"
      ]
    },
    "InsightScheduleTask": {
      "type": "object",
      "description": "Insight task for the schedule.",
      "properties": {
        "insight": {
          "$ref": "#/definitions/Insight",
          "description": "The insight payload."
        }
      },
      "required": [
        "insight"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScheduleTask"
        }
      ],
      "x-ms-discriminator-value": "Insight"
    },
    "InsightSummary": {
      "type": "object",
      "description": "Summary of the error cluster analysis.",
      "properties": {
        "sampleCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of samples analyzed."
        },
        "uniqueSubclusterCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of unique subcluster labels."
        },
        "uniqueClusterCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of unique clusters."
        },
        "method": {
          "type": "string",
          "description": "Method used for clustering."
        },
        "usage": {
          "$ref": "#/definitions/ClusterTokenUsage",
          "description": "Token usage while performing clustering analysis"
        }
      },
      "required": [
        "sampleCount",
        "uniqueSubclusterCount",
        "uniqueClusterCount",
        "method",
        "usage"
      ]
    },
    "InsightType": {
      "type": "string",
      "description": "The request of the insights.",
      "enum": [
        "EvaluationRunClusterInsight",
        "AgentClusterInsight",
        "EvaluationComparison"
      ],
      "x-ms-enum": {
        "name": "InsightType",
        "modelAsString": true,
        "values": [
          {
            "name": "EvaluationRunClusterInsight",
            "value": "EvaluationRunClusterInsight",
            "description": "Insights on an Evaluation run result."
          },
          {
            "name": "AgentClusterInsight",
            "value": "AgentClusterInsight",
            "description": "Cluster Insight on an Agent."
          },
          {
            "name": "EvaluationComparison",
            "value": "EvaluationComparison",
            "description": "Evaluation Comparison."
          }
        ]
      }
    },
    "InsightsMetadata": {
      "type": "object",
      "description": "Metadata about the insights.",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the insights were created."
        },
        "completedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the insights were completed."
        }
      },
      "required": [
        "createdAt"
      ]
    },
    "InvokeAzureAgentWorkflowActionOutputItemResource": {
      "type": "object",
      "description": "Details about an agent invocation as part of a workflow action.",
      "properties": {
        "agent": {
          "$ref": "#/definitions/AgentId",
          "description": "Agent id."
        },
        "conversation_id": {
          "type": "string",
          "description": "ID of the conversation for the agent invocation."
        },
        "response_id": {
          "type": "string",
          "description": "The response id for the agent invocation."
        }
      },
      "required": [
        "agent",
        "response_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowActionOutputItemResource"
        }
      ],
      "x-ms-discriminator-value": "InvokeAzureAgent"
    },
    "ManagedAzureAISearchIndex": {
      "type": "object",
      "description": "Managed Azure AI Search Index Definition",
      "properties": {
        "vectorStoreId": {
          "type": "string",
          "description": "Vector store id of managed index",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "vectorStoreId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Index"
        }
      ],
      "x-ms-discriminator-value": "ManagedAzureSearch"
    },
    "MemoryItem": {
      "type": "object",
      "description": "A single memory item stored in the memory store, containing content and metadata.",
      "properties": {
        "memory_id": {
          "type": "string",
          "description": "The unique ID of the memory item."
        },
        "updated_at": {
          "type": "integer",
          "format": "unixtime",
          "description": "The last update time of the memory item."
        },
        "scope": {
          "type": "string",
          "description": "The namespace that logically groups and isolates memories, such as a user ID."
        },
        "content": {
          "type": "string",
          "description": "The content of the memory."
        },
        "kind": {
          "$ref": "#/definitions/MemoryItemKind",
          "description": "The kind of the memory item."
        }
      },
      "discriminator": "kind",
      "required": [
        "memory_id",
        "updated_at",
        "scope",
        "content",
        "kind"
      ]
    },
    "MemoryItemKind": {
      "type": "string",
      "description": "Memory item kind.",
      "enum": [
        "user_profile",
        "chat_summary"
      ],
      "x-ms-enum": {
        "name": "MemoryItemKind",
        "modelAsString": true,
        "values": [
          {
            "name": "user_profile",
            "value": "user_profile",
            "description": "User profile information extracted from conversations."
          },
          {
            "name": "chat_summary",
            "value": "chat_summary",
            "description": "Summary of chat conversations."
          }
        ]
      }
    },
    "MemoryOperation": {
      "type": "object",
      "description": "Represents a single memory operation (create, update, or delete) performed on a memory item.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/MemoryOperationKind",
          "description": "The type of memory operation being performed."
        },
        "memory_item": {
          "$ref": "#/definitions/MemoryItem",
          "description": "The memory item to create, update, or delete."
        }
      },
      "required": [
        "kind",
        "memory_item"
      ]
    },
    "MemoryOperationKind": {
      "type": "string",
      "description": "Memory operation kind.",
      "enum": [
        "create",
        "update",
        "delete"
      ],
      "x-ms-enum": {
        "name": "MemoryOperationKind",
        "modelAsString": true,
        "values": [
          {
            "name": "create",
            "value": "create",
            "description": "Create a new memory item."
          },
          {
            "name": "update",
            "value": "update",
            "description": "Update an existing memory item."
          },
          {
            "name": "delete",
            "value": "delete",
            "description": "Delete an existing memory item."
          }
        ]
      }
    },
    "MemorySearchItem": {
      "type": "object",
      "description": "A retrieved memory item from memory search.",
      "properties": {
        "memory_item": {
          "$ref": "#/definitions/MemoryItem",
          "description": "Retrieved memory item."
        }
      },
      "required": [
        "memory_item"
      ]
    },
    "MemorySearchOptions": {
      "type": "object",
      "description": "Memory search options.",
      "properties": {
        "max_memories": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of memory items to return."
        }
      }
    },
    "MemorySearchTool": {
      "type": "object",
      "description": "A tool for integrating memories into the agent.",
      "properties": {
        "memory_store_name": {
          "type": "string",
          "description": "The name of the memory store to use."
        },
        "scope": {
          "type": "string",
          "description": "The namespace used to group and isolate memories, such as a user ID.\nLimits which memories can be retrieved or updated.\nUse special variable `{{$userId}}` to scope memories to the current signed-in user."
        },
        "search_options": {
          "$ref": "#/definitions/MemorySearchOptions",
          "description": "Options for searching the memory store."
        },
        "update_delay": {
          "type": "string",
          "format": "duration",
          "description": "The amount of time to wait after inactivity before updating memories with messages from the call (e.g., '0s', '5m'). Defaults to '60s'.",
          "default": "PT60S"
        }
      },
      "required": [
        "memory_store_name",
        "scope"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "memory_search"
    },
    "MemorySearchToolCallItemParam": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "description": "The results returned from the memory search.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/MemorySearchItem"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "memory_search_call"
    },
    "MemorySearchToolCallItemResource": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the memory search tool call. One of `in_progress`,\n`searching`, `completed`, `incomplete` or `failed`,",
          "enum": [
            "in_progress",
            "searching",
            "completed",
            "incomplete",
            "failed"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "results": {
          "type": "array",
          "description": "The results returned from the memory search.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/MemorySearchItem"
          }
        }
      },
      "required": [
        "status"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "memory_search_call"
    },
    "MemoryStoreDefaultDefinition": {
      "type": "object",
      "description": "Default memory store implementation.",
      "properties": {
        "chat_model": {
          "type": "string",
          "description": "The name or identifier of the chat completion model deployment used for memory processing.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "embedding_model": {
          "type": "string",
          "description": "The name or identifier of the embedding model deployment used for memory processing.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "options": {
          "$ref": "#/definitions/MemoryStoreDefaultOptions",
          "description": "Default memory store options.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "chat_model",
        "embedding_model"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MemoryStoreDefinition"
        }
      ],
      "x-ms-discriminator-value": "default"
    },
    "MemoryStoreDefaultOptions": {
      "type": "object",
      "description": "Default memory store configurations.",
      "properties": {
        "user_profile_enabled": {
          "type": "boolean",
          "description": "Whether to enable user profile extraction and storage. Default is true.",
          "default": true
        },
        "user_profile_details": {
          "type": "string",
          "description": "Specific categories or types of user profile information to extract and store."
        },
        "chat_summary_enabled": {
          "type": "boolean",
          "description": "Whether to enable chat summary extraction and storage. Default is true.",
          "default": true
        }
      },
      "required": [
        "user_profile_enabled",
        "chat_summary_enabled"
      ]
    },
    "MemoryStoreDefinition": {
      "type": "object",
      "description": "Base definition for memory store configurations.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/MemoryStoreKind",
          "description": "The kind of the memory store."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "MemoryStoreDeleteScopeResponse": {
      "type": "object",
      "description": "Response for deleting memories from a scope.",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type. Always 'memory_store.scope.deleted'.",
          "enum": [
            "memory_store.scope.deleted"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the memory store."
        },
        "scope": {
          "type": "string",
          "description": "The scope from which memories were deleted."
        },
        "deleted": {
          "type": "boolean",
          "description": "Whether the deletion operation was successful."
        }
      },
      "required": [
        "object",
        "name",
        "scope",
        "deleted"
      ]
    },
    "MemoryStoreKind": {
      "type": "string",
      "description": "The type of memory store implementation to use.",
      "enum": [
        "default"
      ],
      "x-ms-enum": {
        "name": "MemoryStoreKind",
        "modelAsString": true,
        "values": [
          {
            "name": "default",
            "value": "default",
            "description": "The default memory store implementation."
          }
        ]
      }
    },
    "MemoryStoreObject": {
      "type": "object",
      "description": "A memory store that can store and retrieve user memories.",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type, which is always 'memory_store'.",
          "enum": [
            "memory_store"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the memory store."
        },
        "created_at": {
          "type": "integer",
          "format": "unixtime",
          "description": "The Unix timestamp (seconds) when the memory store was created."
        },
        "updated_at": {
          "type": "integer",
          "format": "unixtime",
          "description": "The Unix timestamp (seconds) when the memory store was last updated."
        },
        "name": {
          "type": "string",
          "description": "The name of the memory store.",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "description": "A human-readable description of the memory store.",
          "maxLength": 512
        },
        "metadata": {
          "type": "object",
          "description": "Arbitrary key-value metadata to associate with the memory store.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "definition": {
          "$ref": "#/definitions/MemoryStoreDefinition",
          "description": "The definition of the memory store."
        }
      },
      "required": [
        "object",
        "id",
        "created_at",
        "updated_at",
        "name",
        "definition"
      ]
    },
    "MemoryStoreOperationUsage": {
      "type": "object",
      "description": "Usage statistics of a memory store operation.",
      "properties": {
        "embedding_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The number of embedding tokens."
        },
        "input_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The number of input tokens."
        },
        "input_tokens_details": {
          "type": "object",
          "description": "A detailed breakdown of the input tokens.",
          "properties": {
            "cached_tokens": {
              "type": "integer",
              "format": "int32",
              "description": "The number of tokens that were retrieved from the cache.\n[More on prompt caching](/docs/guides/prompt-caching)."
            }
          },
          "required": [
            "cached_tokens"
          ]
        },
        "output_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The number of output tokens."
        },
        "output_tokens_details": {
          "type": "object",
          "description": "A detailed breakdown of the output tokens.",
          "properties": {
            "reasoning_tokens": {
              "type": "integer",
              "format": "int32",
              "description": "The number of reasoning tokens."
            }
          },
          "required": [
            "reasoning_tokens"
          ]
        },
        "total_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of tokens used."
        }
      },
      "required": [
        "embedding_tokens",
        "input_tokens",
        "input_tokens_details",
        "output_tokens",
        "output_tokens_details",
        "total_tokens"
      ]
    },
    "MemoryStoreSearchResponse": {
      "type": "object",
      "description": "Memory search response.",
      "properties": {
        "search_id": {
          "type": "string",
          "description": "The unique ID of this search request. Use this value as previous_search_id in subsequent requests to perform incremental searches."
        },
        "memories": {
          "type": "array",
          "description": "Related memory items found during the search operation.",
          "items": {
            "$ref": "#/definitions/MemorySearchItem"
          }
        },
        "usage": {
          "$ref": "#/definitions/MemoryStoreOperationUsage",
          "description": "Usage statistics associated with the memory search operation."
        }
      },
      "required": [
        "search_id",
        "memories",
        "usage"
      ]
    },
    "MemoryStoreUpdateResponse": {
      "type": "object",
      "description": "Provides the status of a memory store update operation.",
      "properties": {
        "update_id": {
          "type": "string",
          "description": "The unique ID of this update request. Use this value as previous_update_id in subsequent requests to perform incremental updates."
        },
        "status": {
          "$ref": "#/definitions/MemoryStoreUpdateStatus",
          "description": "The status of the memory update operation. One of \"queued\", \"in_progress\", \"completed\", \"failed\", or \"superseded\"."
        },
        "superseded_by": {
          "type": "string",
          "description": "The update_id the operation was superseded by when status is \"superseded\"."
        },
        "result": {
          "$ref": "#/definitions/MemoryStoreUpdateResult",
          "description": "The result of memory store update operation when status is \"completed\"."
        },
        "error": {
          "$ref": "#/definitions/ApiError",
          "description": "Error object that describes the error when status is \"failed\"."
        }
      },
      "required": [
        "update_id",
        "status"
      ]
    },
    "MemoryStoreUpdateResult": {
      "type": "object",
      "description": "Memory update result.",
      "properties": {
        "memory_operations": {
          "type": "array",
          "description": "A list of individual memory operations that were performed during the update.",
          "items": {
            "$ref": "#/definitions/MemoryOperation"
          }
        },
        "usage": {
          "$ref": "#/definitions/MemoryStoreOperationUsage",
          "description": "Usage statistics associated with the memory update operation."
        }
      },
      "required": [
        "memory_operations",
        "usage"
      ]
    },
    "MemoryStoreUpdateStatus": {
      "type": "string",
      "description": "Status of a memory store update operation.",
      "enum": [
        "queued",
        "in_progress",
        "completed",
        "failed",
        "superseded"
      ],
      "x-ms-enum": {
        "name": "MemoryStoreUpdateStatus",
        "modelAsString": false,
        "values": [
          {
            "name": "queued",
            "value": "queued"
          },
          {
            "name": "in_progress",
            "value": "in_progress"
          },
          {
            "name": "completed",
            "value": "completed"
          },
          {
            "name": "failed",
            "value": "failed"
          },
          {
            "name": "superseded",
            "value": "superseded"
          }
        ]
      }
    },
    "MicrosoftFabricAgentTool": {
      "type": "object",
      "description": "The input definition information for a Microsoft Fabric tool as used to configure an agent.",
      "properties": {
        "fabric_dataagent_preview": {
          "$ref": "#/definitions/FabricDataAgentToolParameters",
          "description": "The fabric data agent tool parameters."
        }
      },
      "required": [
        "fabric_dataagent_preview"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "fabric_dataagent_preview"
    },
    "ModelDeployment": {
      "type": "object",
      "description": "Model Deployment Definition",
      "properties": {
        "modelName": {
          "type": "string",
          "description": "Publisher-specific name of the deployed model",
          "readOnly": true
        },
        "modelVersion": {
          "type": "string",
          "description": "Publisher-specific version of the deployed model",
          "readOnly": true
        },
        "modelPublisher": {
          "type": "string",
          "description": "Name of the deployed model's publisher",
          "readOnly": true
        },
        "capabilities": {
          "type": "object",
          "description": "Capabilities of deployed model",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Sku of the model deployment",
          "readOnly": true
        },
        "connectionName": {
          "type": "string",
          "description": "Name of the connection the deployment comes from",
          "readOnly": true
        }
      },
      "required": [
        "modelName",
        "modelVersion",
        "modelPublisher",
        "capabilities",
        "sku"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Deployment"
        }
      ],
      "x-ms-discriminator-value": "ModelDeployment"
    },
    "ModelSamplingParams": {
      "type": "object",
      "description": "Represents a set of parameters used to control the sampling behavior of a language model during text generation.",
      "properties": {
        "temperature": {
          "type": "number",
          "format": "float",
          "description": "The temperature parameter for sampling."
        },
        "top_p": {
          "type": "number",
          "format": "float",
          "description": "The top-p parameter for nucleus sampling."
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "description": "The random seed for reproducibility."
        },
        "max_completion_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of tokens allowed in the completion."
        }
      },
      "required": [
        "temperature",
        "top_p",
        "seed",
        "max_completion_tokens"
      ]
    },
    "ModelSamplingParamsUpdate": {
      "type": "object",
      "description": "Represents a set of parameters used to control the sampling behavior of a language model during text generation.",
      "properties": {
        "temperature": {
          "type": "number",
          "format": "float",
          "description": "The temperature parameter for sampling."
        },
        "top_p": {
          "type": "number",
          "format": "float",
          "description": "The top-p parameter for nucleus sampling."
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "description": "The random seed for reproducibility."
        },
        "max_completion_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of tokens allowed in the completion."
        }
      }
    },
    "MonthlyRecurrenceSchedule": {
      "type": "object",
      "description": "Monthly recurrence schedule.",
      "properties": {
        "daysOfMonth": {
          "type": "array",
          "description": "Days of the month for the recurrence schedule.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "daysOfMonth"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RecurrenceSchedule"
        }
      ],
      "x-ms-discriminator-value": "Monthly"
    },
    "NoAuthenticationCredentials": {
      "type": "object",
      "description": "Credentials that do not require authentication",
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "None"
    },
    "OAuthConsentRequestItemResource": {
      "type": "object",
      "description": "Request from the service for the user to perform OAuth consent.",
      "properties": {
        "id": {
          "type": "string"
        },
        "consent_link": {
          "type": "string",
          "description": "The link the user can use to perform OAuth consent."
        },
        "server_label": {
          "type": "string",
          "description": "The server label for the OAuth consent request."
        }
      },
      "required": [
        "id",
        "consent_link",
        "server_label"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "oauth_consent_request"
    },
    "OneTimeTrigger": {
      "type": "object",
      "description": "One-time trigger.",
      "properties": {
        "triggerAt": {
          "type": "string",
          "description": "Date and time for the one-time trigger in ISO 8601 format."
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone for the one-time trigger.",
          "default": "UTC"
        }
      },
      "required": [
        "triggerAt"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "x-ms-discriminator-value": "OneTime"
    },
    "OpenAI.Annotation": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.AnnotationType"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.AnnotationFileCitation": {
      "type": "object",
      "description": "A citation to a file.",
      "properties": {
        "file_id": {
          "type": "string",
          "description": "The ID of the file."
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the file in the list of files."
        },
        "filename": {
          "type": "string",
          "description": "The filename of the file cited."
        }
      },
      "required": [
        "file_id",
        "index",
        "filename"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Annotation"
        }
      ],
      "x-ms-discriminator-value": "file_citation"
    },
    "OpenAI.AnnotationFilePath": {
      "type": "object",
      "description": "A path to a file.",
      "properties": {
        "file_id": {
          "type": "string",
          "description": "The ID of the file."
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the file in the list of files."
        }
      },
      "required": [
        "file_id",
        "index"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Annotation"
        }
      ],
      "x-ms-discriminator-value": "file_path"
    },
    "OpenAI.AnnotationType": {
      "type": "string",
      "enum": [
        "file_citation",
        "url_citation",
        "file_path",
        "container_file_citation"
      ],
      "x-ms-enum": {
        "name": "AnnotationType",
        "modelAsString": true,
        "values": [
          {
            "name": "file_citation",
            "value": "file_citation"
          },
          {
            "name": "url_citation",
            "value": "url_citation"
          },
          {
            "name": "file_path",
            "value": "file_path"
          },
          {
            "name": "container_file_citation",
            "value": "container_file_citation"
          }
        ]
      }
    },
    "OpenAI.AnnotationUrlCitation": {
      "type": "object",
      "description": "A citation for a web resource used to generate a model response.",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The URL of the web resource."
        },
        "start_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the first character of the URL citation in the message."
        },
        "end_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the last character of the URL citation in the message."
        },
        "title": {
          "type": "string",
          "description": "The title of the web resource."
        }
      },
      "required": [
        "url",
        "start_index",
        "end_index",
        "title"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Annotation"
        }
      ],
      "x-ms-discriminator-value": "url_citation"
    },
    "OpenAI.ApproximateLocation": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "x-nullable": true
        },
        "region": {
          "type": "string",
          "x-nullable": true
        },
        "city": {
          "type": "string",
          "x-nullable": true
        },
        "timezone": {
          "type": "string",
          "x-nullable": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Location"
        }
      ],
      "x-ms-discriminator-value": "approximate"
    },
    "OpenAI.CodeInterpreterOutput": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.CodeInterpreterOutputType"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.CodeInterpreterOutputImage": {
      "type": "object",
      "description": "The image output from the code interpreter.",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The URL of the image output from the code interpreter."
        }
      },
      "required": [
        "url"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.CodeInterpreterOutput"
        }
      ],
      "x-ms-discriminator-value": "image"
    },
    "OpenAI.CodeInterpreterOutputLogs": {
      "type": "object",
      "description": "The logs output from the code interpreter.",
      "properties": {
        "logs": {
          "type": "string",
          "description": "The logs output from the code interpreter."
        }
      },
      "required": [
        "logs"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.CodeInterpreterOutput"
        }
      ],
      "x-ms-discriminator-value": "logs"
    },
    "OpenAI.CodeInterpreterOutputType": {
      "type": "string",
      "enum": [
        "logs",
        "image"
      ],
      "x-ms-enum": {
        "name": "CodeInterpreterOutputType",
        "modelAsString": false,
        "values": [
          {
            "name": "logs",
            "value": "logs"
          },
          {
            "name": "image",
            "value": "image"
          }
        ]
      }
    },
    "OpenAI.CodeInterpreterTool": {
      "type": "object",
      "description": "A tool that runs Python code to help generate a response to a prompt.",
      "properties": {
        "container": {
          "description": "The code interpreter container. Can be a container ID or an object that\nspecifies uploaded file IDs to make available to your code."
        }
      },
      "required": [
        "container"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "code_interpreter"
    },
    "OpenAI.CodeInterpreterToolCallItemParam": {
      "type": "object",
      "description": "A tool call to run code.\n",
      "properties": {
        "container_id": {
          "type": "string",
          "description": "The ID of the container used to run the code."
        },
        "code": {
          "type": "string",
          "description": "The code to run, or null if not available.",
          "x-nullable": true
        },
        "outputs": {
          "type": "array",
          "description": "The outputs generated by the code interpreter, such as logs or images.\nCan be null if no outputs are available.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/OpenAI.CodeInterpreterOutput"
          }
        }
      },
      "required": [
        "container_id",
        "code",
        "outputs"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "code_interpreter_call"
    },
    "OpenAI.CodeInterpreterToolCallItemResource": {
      "type": "object",
      "description": "A tool call to run code.\n",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "in_progress",
            "completed",
            "incomplete",
            "interpreting",
            "failed"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "container_id": {
          "type": "string",
          "description": "The ID of the container used to run the code."
        },
        "code": {
          "type": "string",
          "description": "The code to run, or null if not available.",
          "x-nullable": true
        },
        "outputs": {
          "type": "array",
          "description": "The outputs generated by the code interpreter, such as logs or images.\nCan be null if no outputs are available.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/OpenAI.CodeInterpreterOutput"
          }
        }
      },
      "required": [
        "status",
        "container_id",
        "code",
        "outputs"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "code_interpreter_call"
    },
    "OpenAI.ComputerAction": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.ComputerActionType"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.ComputerActionClick": {
      "type": "object",
      "description": "A click action.",
      "properties": {
        "button": {
          "type": "string",
          "description": "Indicates which mouse button was pressed during the click. One of `left`, `right`, `wheel`, `back`, or `forward`.",
          "enum": [
            "left",
            "right",
            "wheel",
            "back",
            "forward"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "The x-coordinate where the click occurred."
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "The y-coordinate where the click occurred."
        }
      },
      "required": [
        "button",
        "x",
        "y"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ComputerAction"
        }
      ],
      "x-ms-discriminator-value": "click"
    },
    "OpenAI.ComputerActionDoubleClick": {
      "type": "object",
      "description": "A double click action.",
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "The x-coordinate where the double click occurred."
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "The y-coordinate where the double click occurred."
        }
      },
      "required": [
        "x",
        "y"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ComputerAction"
        }
      ],
      "x-ms-discriminator-value": "double_click"
    },
    "OpenAI.ComputerActionDrag": {
      "type": "object",
      "description": "A drag action.",
      "properties": {
        "path": {
          "type": "array",
          "description": "An array of coordinates representing the path of the drag action. Coordinates will appear as an array\nof objects, eg\n```\n[\n  { x: 100, y: 200 },\n  { x: 200, y: 300 }\n]\n```",
          "items": {
            "$ref": "#/definitions/OpenAI.Coordinate"
          }
        }
      },
      "required": [
        "path"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ComputerAction"
        }
      ],
      "x-ms-discriminator-value": "drag"
    },
    "OpenAI.ComputerActionKeyPress": {
      "type": "object",
      "description": "A collection of keypresses the model would like to perform.",
      "properties": {
        "keys": {
          "type": "array",
          "description": "The combination of keys the model is requesting to be pressed. This is an\narray of strings, each representing a key.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "keys"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ComputerAction"
        }
      ],
      "x-ms-discriminator-value": "keypress"
    },
    "OpenAI.ComputerActionMove": {
      "type": "object",
      "description": "A mouse move action.",
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "The x-coordinate to move to."
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "The y-coordinate to move to."
        }
      },
      "required": [
        "x",
        "y"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ComputerAction"
        }
      ],
      "x-ms-discriminator-value": "move"
    },
    "OpenAI.ComputerActionScreenshot": {
      "type": "object",
      "description": "A screenshot action.",
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ComputerAction"
        }
      ],
      "x-ms-discriminator-value": "screenshot"
    },
    "OpenAI.ComputerActionScroll": {
      "type": "object",
      "description": "A scroll action.",
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "The x-coordinate where the scroll occurred."
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "The y-coordinate where the scroll occurred."
        },
        "scroll_x": {
          "type": "integer",
          "format": "int32",
          "description": "The horizontal scroll distance."
        },
        "scroll_y": {
          "type": "integer",
          "format": "int32",
          "description": "The vertical scroll distance."
        }
      },
      "required": [
        "x",
        "y",
        "scroll_x",
        "scroll_y"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ComputerAction"
        }
      ],
      "x-ms-discriminator-value": "scroll"
    },
    "OpenAI.ComputerActionType": {
      "type": "string",
      "enum": [
        "screenshot",
        "click",
        "double_click",
        "scroll",
        "type",
        "wait",
        "keypress",
        "drag",
        "move"
      ],
      "x-ms-enum": {
        "name": "ComputerActionType",
        "modelAsString": false,
        "values": [
          {
            "name": "screenshot",
            "value": "screenshot"
          },
          {
            "name": "click",
            "value": "click"
          },
          {
            "name": "double_click",
            "value": "double_click"
          },
          {
            "name": "scroll",
            "value": "scroll"
          },
          {
            "name": "type",
            "value": "type"
          },
          {
            "name": "wait",
            "value": "wait"
          },
          {
            "name": "keypress",
            "value": "keypress"
          },
          {
            "name": "drag",
            "value": "drag"
          },
          {
            "name": "move",
            "value": "move"
          }
        ]
      }
    },
    "OpenAI.ComputerActionTypeKeys": {
      "type": "object",
      "description": "An action to type in text.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text to type."
        }
      },
      "required": [
        "text"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ComputerAction"
        }
      ],
      "x-ms-discriminator-value": "type"
    },
    "OpenAI.ComputerActionWait": {
      "type": "object",
      "description": "A wait action.",
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ComputerAction"
        }
      ],
      "x-ms-discriminator-value": "wait"
    },
    "OpenAI.ComputerToolCallItemParam": {
      "type": "object",
      "description": "A tool call to a computer use tool. See the\n[computer use guide](/docs/guides/tools-computer-use) for more information.\n",
      "properties": {
        "call_id": {
          "type": "string",
          "description": "An identifier used when responding to the tool call with output."
        },
        "action": {
          "$ref": "#/definitions/OpenAI.ComputerAction"
        },
        "pending_safety_checks": {
          "type": "array",
          "description": "The pending safety checks for the computer call.",
          "items": {
            "$ref": "#/definitions/OpenAI.ComputerToolCallSafetyCheck"
          }
        }
      },
      "required": [
        "call_id",
        "action",
        "pending_safety_checks"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "computer_call"
    },
    "OpenAI.ComputerToolCallItemResource": {
      "type": "object",
      "description": "A tool call to a computer use tool. See the\n[computer use guide](/docs/guides/tools-computer-use) for more information.\n",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the item. One of `in_progress`, `completed`, or\n`incomplete`. Populated when items are returned via API.",
          "enum": [
            "in_progress",
            "completed",
            "incomplete"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "call_id": {
          "type": "string",
          "description": "An identifier used when responding to the tool call with output."
        },
        "action": {
          "$ref": "#/definitions/OpenAI.ComputerAction"
        },
        "pending_safety_checks": {
          "type": "array",
          "description": "The pending safety checks for the computer call.",
          "items": {
            "$ref": "#/definitions/OpenAI.ComputerToolCallSafetyCheck"
          }
        }
      },
      "required": [
        "status",
        "call_id",
        "action",
        "pending_safety_checks"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "computer_call"
    },
    "OpenAI.ComputerToolCallOutputItemOutput": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.ComputerToolCallOutputItemOutputType"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.ComputerToolCallOutputItemOutputComputerScreenshot": {
      "type": "object",
      "properties": {
        "image_url": {
          "type": "string"
        },
        "file_id": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ComputerToolCallOutputItemOutput"
        }
      ],
      "x-ms-discriminator-value": "computer_screenshot"
    },
    "OpenAI.ComputerToolCallOutputItemOutputType": {
      "type": "string",
      "description": "A computer screenshot image used with the computer use tool.",
      "enum": [
        "computer_screenshot"
      ],
      "x-ms-enum": {
        "name": "ComputerToolCallOutputItemOutputType",
        "modelAsString": true,
        "values": [
          {
            "name": "screenshot",
            "value": "computer_screenshot"
          }
        ]
      }
    },
    "OpenAI.ComputerToolCallOutputItemParam": {
      "type": "object",
      "description": "The output of a computer tool call.\n",
      "properties": {
        "call_id": {
          "type": "string",
          "description": "The ID of the computer tool call that produced the output."
        },
        "acknowledged_safety_checks": {
          "type": "array",
          "description": "The safety checks reported by the API that have been acknowledged by the\ndeveloper.",
          "items": {
            "$ref": "#/definitions/OpenAI.ComputerToolCallSafetyCheck"
          }
        },
        "output": {
          "$ref": "#/definitions/OpenAI.ComputerToolCallOutputItemOutput"
        }
      },
      "required": [
        "call_id",
        "output"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "computer_call_output"
    },
    "OpenAI.ComputerToolCallOutputItemResource": {
      "type": "object",
      "description": "The output of a computer tool call.\n",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the item. One of `in_progress`, `completed`, or\n`incomplete`. Populated when items are returned via API.",
          "enum": [
            "in_progress",
            "completed",
            "incomplete"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "call_id": {
          "type": "string",
          "description": "The ID of the computer tool call that produced the output."
        },
        "acknowledged_safety_checks": {
          "type": "array",
          "description": "The safety checks reported by the API that have been acknowledged by the\ndeveloper.",
          "items": {
            "$ref": "#/definitions/OpenAI.ComputerToolCallSafetyCheck"
          }
        },
        "output": {
          "$ref": "#/definitions/OpenAI.ComputerToolCallOutputItemOutput"
        }
      },
      "required": [
        "status",
        "call_id",
        "output"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "computer_call_output"
    },
    "OpenAI.ComputerToolCallSafetyCheck": {
      "type": "object",
      "description": "A pending safety check for the computer call.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the pending safety check."
        },
        "code": {
          "type": "string",
          "description": "The type of the pending safety check."
        },
        "message": {
          "type": "string",
          "description": "Details about the pending safety check."
        }
      },
      "required": [
        "id",
        "code",
        "message"
      ]
    },
    "OpenAI.ComputerUsePreviewTool": {
      "type": "object",
      "description": "A tool that controls a virtual computer. Learn more about the [computer tool](https://platform.openai.com/docs/guides/tools-computer-use).",
      "properties": {
        "environment": {
          "type": "string",
          "description": "The type of computer environment to control.",
          "enum": [
            "windows",
            "mac",
            "linux",
            "ubuntu",
            "browser"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "display_width": {
          "type": "integer",
          "format": "int32",
          "description": "The width of the computer display."
        },
        "display_height": {
          "type": "integer",
          "format": "int32",
          "description": "The height of the computer display."
        }
      },
      "required": [
        "environment",
        "display_width",
        "display_height"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "computer_use_preview"
    },
    "OpenAI.ConversationItemList": {
      "type": "object",
      "properties": {
        "object": {
          "type": "string",
          "enum": [
            "list"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenAI.ItemResource"
          }
        },
        "has_more": {
          "type": "boolean"
        },
        "first_id": {
          "type": "string"
        },
        "last_id": {
          "type": "string"
        }
      },
      "required": [
        "object",
        "data",
        "has_more",
        "first_id",
        "last_id"
      ]
    },
    "OpenAI.ConversationResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the conversation."
        },
        "object": {
          "type": "string",
          "description": "The object type, which is always 'conversation'.",
          "enum": [
            "conversation"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "created_at": {
          "type": "integer",
          "format": "unixtime"
        },
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        }
      },
      "required": [
        "id",
        "object",
        "created_at",
        "metadata"
      ]
    },
    "OpenAI.Coordinate": {
      "type": "object",
      "description": "An x/y coordinate pair, e.g. `{ x: 100, y: 200 }`.",
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "The x-coordinate."
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "The y-coordinate."
        }
      },
      "required": [
        "x",
        "y"
      ]
    },
    "OpenAI.CreateConversationRequest": {
      "type": "object",
      "description": "Create a conversation",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        },
        "items": {
          "type": "array",
          "description": "Initial items to include the conversation context.\nYou may add up to 20 items at a time.",
          "items": {}
        }
      }
    },
    "OpenAI.CreateFineTuningJobRequest": {
      "type": "object",
      "properties": {
        "model": {
          "type": "string",
          "description": "The name of the model to fine-tune. You can select one of the\n[supported models](/docs/guides/fine-tuning#which-models-can-be-fine-tuned).",
          "enum": [
            "babbage-002",
            "davinci-002",
            "gpt-3.5-turbo",
            "gpt-4o-mini"
          ],
          "x-ms-enum": {
            "modelAsString": true
          },
          "x-oaiTypeLabel": "string"
        },
        "training_file": {
          "type": "string",
          "description": "The ID of an uploaded file that contains training data.\n\nSee [upload file](/docs/api-reference/files/create) for how to upload a file.\n\nYour dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose `fine-tune`.\n\nThe contents of the file should differ depending on if the model uses the [chat](/docs/api-reference/fine-tuning/chat-input), [completions](/docs/api-reference/fine-tuning/completions-input) format, or if the fine-tuning method uses the [preference](/docs/api-reference/fine-tuning/preference-input) format.\n\nSee the [fine-tuning guide](/docs/guides/model-optimization) for more details."
        },
        "hyperparameters": {
          "type": "object",
          "description": "The hyperparameters used for the fine-tuning job.\nThis value is now deprecated in favor of `method`, and should be passed in under the `method` parameter.",
          "properties": {
            "batch_size": {
              "description": "Number of examples in each batch. A larger batch size means that model parameters\nare updated less frequently, but with lower variance.",
              "default": "auto"
            },
            "learning_rate_multiplier": {
              "description": "Scaling factor for the learning rate. A smaller learning rate may be useful to avoid\noverfitting.",
              "default": "auto"
            },
            "n_epochs": {
              "description": "The number of epochs to train the model for. An epoch refers to one full cycle\nthrough the training dataset.",
              "default": "auto"
            }
          }
        },
        "suffix": {
          "type": "string",
          "description": "A string of up to 64 characters that will be added to your fine-tuned model name.\n\nFor example, a `suffix` of \"custom-model-name\" would produce a model name like `ft:gpt-4o-mini:openai:custom-model-name:7p4lURel`.",
          "default": null,
          "x-nullable": true
        },
        "validation_file": {
          "type": "string",
          "description": "The ID of an uploaded file that contains validation data.\n\nIf you provide this file, the data is used to generate validation\nmetrics periodically during fine-tuning. These metrics can be viewed in\nthe fine-tuning results file.\nThe same data should not be present in both train and validation files.\n\nYour dataset must be formatted as a JSONL file. You must upload your file with the purpose `fine-tune`.\n\nSee the [fine-tuning guide](/docs/guides/model-optimization) for more details.",
          "x-nullable": true
        },
        "integrations": {
          "type": "array",
          "description": "A list of integrations to enable for your fine-tuning job.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/OpenAI.CreateFineTuningJobRequestIntegration"
          }
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "description": "The seed controls the reproducibility of the job. Passing in the same seed and job parameters should produce the same results, but may differ in rare cases.\nIf a seed is not specified, one will be generated for you.",
          "x-nullable": true
        },
        "method": {
          "$ref": "#/definitions/OpenAI.FineTuneMethod"
        },
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        }
      },
      "required": [
        "model",
        "training_file"
      ]
    },
    "OpenAI.CreateFineTuningJobRequestIntegration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "wandb"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.CreateFineTuningJobRequestWandbIntegration": {
      "type": "object",
      "properties": {
        "wandb": {
          "type": "object",
          "properties": {
            "project": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "x-nullable": true
            },
            "entity": {
              "type": "string",
              "x-nullable": true
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "project"
          ]
        }
      },
      "required": [
        "wandb"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.CreateFineTuningJobRequestIntegration"
        }
      ],
      "x-ms-discriminator-value": "wandb"
    },
    "OpenAI.CreateResponse": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        },
        "temperature": {
          "type": "number",
          "format": "float",
          "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\nWe generally recommend altering this or `top_p` but not both.",
          "default": 1,
          "x-nullable": true
        },
        "top_p": {
          "type": "number",
          "format": "float",
          "description": "An alternative to sampling with temperature, called nucleus sampling,\nwhere the model considers the results of the tokens with top_p probability\nmass. So 0.1 means only the tokens comprising the top 10% probability mass\nare considered.\n\nWe generally recommend altering this or `temperature` but not both.",
          "default": 1,
          "x-nullable": true
        },
        "user": {
          "type": "string",
          "description": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices#end-user-ids)."
        },
        "service_tier": {
          "$ref": "#/definitions/OpenAI.ServiceTier",
          "description": "Note: service_tier is not applicable to Azure OpenAI."
        },
        "top_logprobs": {
          "type": "integer",
          "format": "int32",
          "description": "An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability.",
          "minimum": 0,
          "maximum": 20
        },
        "previous_response_id": {
          "type": "string",
          "description": "The unique ID of the previous response to the model. Use this to\ncreate multi-turn conversations. Learn more about\n[conversation state](/docs/guides/conversation-state).",
          "x-nullable": true
        },
        "model": {
          "type": "string",
          "description": "The model deployment to use for the creation of this response."
        },
        "reasoning": {
          "$ref": "#/definitions/OpenAI.Reasoning",
          "x-nullable": true
        },
        "background": {
          "type": "boolean",
          "description": "Whether to run the model response in the background.\n[Learn more](/docs/guides/background).",
          "default": false,
          "x-nullable": true
        },
        "max_output_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "An upper bound for the number of tokens that can be generated for a response, including visible output tokens and [reasoning tokens](/docs/guides/reasoning).",
          "x-nullable": true
        },
        "max_tool_calls": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of total calls to built-in tools that can be processed in a response. This maximum number applies across all built-in tool calls, not per individual tool. Any further attempts to call a tool by the model will be ignored.",
          "x-nullable": true
        },
        "text": {
          "type": "object",
          "description": "Configuration options for a text response from the model. Can be plain\ntext or structured JSON data. Learn more:\n- [Text inputs and outputs](/docs/guides/text)\n- [Structured Outputs](/docs/guides/structured-outputs)",
          "properties": {
            "format": {
              "$ref": "#/definitions/OpenAI.ResponseTextFormatConfiguration"
            }
          }
        },
        "tools": {
          "type": "array",
          "description": "An array of tools the model may call while generating a response. You \ncan specify which tool to use by setting the `tool_choice` parameter.\n\nThe two categories of tools you can provide the model are:\n\n- **Built-in tools**: Tools that are provided by OpenAI that extend the\n  model's capabilities, like file search.\n- **Function calls (custom tools)**: Functions that are defined by you,\n  enabling the model to call your own code.",
          "items": {
            "$ref": "#/definitions/OpenAI.Tool"
          }
        },
        "tool_choice": {
          "description": "How the model should select which tool (or tools) to use when generating\na response. See the `tools` parameter to see how to specify which tools\nthe model can call."
        },
        "prompt": {
          "$ref": "#/definitions/OpenAI.Prompt",
          "x-nullable": true
        },
        "truncation": {
          "type": "string",
          "description": "The truncation strategy to use for the model response.\n- `auto`: If the context of this response and previous ones exceeds\n  the model's context window size, the model will truncate the\n  response to fit the context window by dropping input items in the\n  middle of the conversation.\n- `disabled` (default): If a model response will exceed the context window\n  size for a model, the request will fail with a 400 error.",
          "default": "disabled",
          "enum": [
            "auto",
            "disabled"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "x-nullable": true
        },
        "input": {
          "description": "Text, image, or file inputs to the model, used to generate a response.\n\nLearn more:\n- [Text inputs and outputs](/docs/guides/text)\n- [Image inputs](/docs/guides/images)\n- [File inputs](/docs/guides/pdf-files)\n- [Conversation state](/docs/guides/conversation-state)\n- [Function calling](/docs/guides/function-calling)"
        },
        "include": {
          "type": "array",
          "description": "Specify additional output data to include in the model response. Currently\nsupported values are:\n- `code_interpreter_call.outputs`: Includes the outputs of python code execution\n  in code interpreter tool call items.\n- `computer_call_output.output.image_url`: Include image urls from the computer call output.\n- `file_search_call.results`: Include the search results of\n  the file search tool call.\n- `message.input_image.image_url`: Include image urls from the input message.\n- `message.output_text.logprobs`: Include logprobs with assistant messages.\n- `reasoning.encrypted_content`: Includes an encrypted version of reasoning\n  tokens in reasoning item outputs. This enables reasoning items to be used in\n  multi-turn conversations when using the Responses API statelessly (like\n  when the `store` parameter is set to `false`, or when an organization is\n  enrolled in the zero data retention program).",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/OpenAI.Includable"
          }
        },
        "parallel_tool_calls": {
          "type": "boolean",
          "description": "Whether to allow the model to run tool calls in parallel.",
          "default": true,
          "x-nullable": true
        },
        "store": {
          "type": "boolean",
          "description": "Whether to store the generated model response for later retrieval via\nAPI.",
          "default": true,
          "x-nullable": true
        },
        "instructions": {
          "type": "string",
          "description": "A system (or developer) message inserted into the model's context.\n\nWhen using along with `previous_response_id`, the instructions from a previous\nresponse will not be carried over to the next response. This makes it simple\nto swap out system (or developer) messages in new responses.",
          "x-nullable": true
        },
        "stream": {
          "type": "boolean",
          "description": "If set to true, the model response data will be streamed to the client\nas it is generated using [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\nSee the [Streaming section below](/docs/api-reference/responses-streaming)\nfor more information.",
          "default": false,
          "x-nullable": true
        },
        "conversation": {},
        "agent": {
          "$ref": "#/definitions/AgentReference",
          "description": "The agent to use for generating the response."
        },
        "structured_inputs": {
          "type": "object",
          "description": "The structured inputs to the response that can participate in prompt template substitution or tool argument bindings.",
          "additionalProperties": {}
        }
      }
    },
    "OpenAI.DeletedConversationResource": {
      "type": "object",
      "properties": {
        "object": {
          "type": "string",
          "enum": [
            "conversation.deleted"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "object",
        "deleted",
        "id"
      ]
    },
    "OpenAI.EvalApiError": {
      "type": "object",
      "title": "EvalApiError",
      "description": "An object representing an error response from the Eval API.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      },
      "required": [
        "code",
        "message"
      ],
      "x-oaiMeta": {
        "name": "The API error object",
        "group": "evals",
        "example": "{\n  \"code\": \"internal_error\",\n  \"message\": \"The eval run failed due to an internal error.\"\n}\n"
      }
    },
    "OpenAI.EvalRunOutputItemSample": {
      "type": "object",
      "properties": {
        "input": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenAI.EvalRunOutputItemSampleInput"
          }
        },
        "output": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenAI.EvalRunOutputItemSampleOutput"
          }
        },
        "finish_reason": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "usage": {
          "$ref": "#/definitions/OpenAI.EvalRunOutputItemSampleUsage"
        },
        "error": {
          "$ref": "#/definitions/OpenAI.EvalApiError"
        },
        "temperature": {
          "$ref": "#/definitions/OpenAI.numeric"
        },
        "max_completion_tokens": {
          "$ref": "#/definitions/OpenAI.integer"
        },
        "top_p": {
          "$ref": "#/definitions/OpenAI.numeric"
        },
        "seed": {
          "$ref": "#/definitions/OpenAI.integer"
        }
      },
      "required": [
        "input",
        "output",
        "finish_reason",
        "model",
        "usage",
        "error",
        "temperature",
        "max_completion_tokens",
        "top_p",
        "seed"
      ]
    },
    "OpenAI.EvalRunOutputItemSampleInput": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      },
      "required": [
        "role",
        "content"
      ]
    },
    "OpenAI.EvalRunOutputItemSampleOutput": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "OpenAI.EvalRunOutputItemSampleUsage": {
      "type": "object",
      "properties": {
        "total_tokens": {
          "$ref": "#/definitions/OpenAI.integer"
        },
        "completion_tokens": {
          "$ref": "#/definitions/OpenAI.integer"
        },
        "prompt_tokens": {
          "$ref": "#/definitions/OpenAI.integer"
        },
        "cached_tokens": {
          "$ref": "#/definitions/OpenAI.integer"
        }
      },
      "required": [
        "total_tokens",
        "completion_tokens",
        "prompt_tokens",
        "cached_tokens"
      ]
    },
    "OpenAI.EvalRunPerModelUsage": {
      "type": "object",
      "properties": {
        "model_name": {
          "type": "string",
          "x-stainless-naming": {
            "python": {
              "property_name": "run_model_name"
            }
          }
        },
        "invocation_count": {
          "$ref": "#/definitions/OpenAI.integer"
        },
        "prompt_tokens": {
          "$ref": "#/definitions/OpenAI.integer"
        },
        "completion_tokens": {
          "$ref": "#/definitions/OpenAI.integer"
        },
        "total_tokens": {
          "$ref": "#/definitions/OpenAI.integer"
        },
        "cached_tokens": {
          "$ref": "#/definitions/OpenAI.integer"
        }
      },
      "required": [
        "model_name",
        "invocation_count",
        "prompt_tokens",
        "completion_tokens",
        "total_tokens",
        "cached_tokens"
      ]
    },
    "OpenAI.EvalRunPerTestingCriteriaResults": {
      "type": "object",
      "properties": {
        "testing_criteria": {
          "type": "string"
        },
        "passed": {
          "$ref": "#/definitions/OpenAI.integer"
        },
        "failed": {
          "$ref": "#/definitions/OpenAI.integer"
        }
      },
      "required": [
        "testing_criteria",
        "passed",
        "failed"
      ]
    },
    "OpenAI.EvalRunResultCounts": {
      "type": "object",
      "properties": {
        "total": {
          "$ref": "#/definitions/OpenAI.integer"
        },
        "errored": {
          "$ref": "#/definitions/OpenAI.integer"
        },
        "failed": {
          "$ref": "#/definitions/OpenAI.integer"
        },
        "passed": {
          "$ref": "#/definitions/OpenAI.integer"
        }
      },
      "required": [
        "total",
        "errored",
        "failed",
        "passed"
      ]
    },
    "OpenAI.FileSearchTool": {
      "type": "object",
      "description": "A tool that searches for relevant content from uploaded files. Learn more about the [file search tool](https://platform.openai.com/docs/guides/tools-file-search).",
      "properties": {
        "vector_store_ids": {
          "type": "array",
          "description": "The IDs of the vector stores to search.",
          "items": {
            "type": "string"
          }
        },
        "max_num_results": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of results to return. This number should be between 1 and 50 inclusive."
        },
        "ranking_options": {
          "$ref": "#/definitions/OpenAI.RankingOptions",
          "description": "Ranking options for search."
        },
        "filters": {
          "$ref": "#/definitions/OpenAI.Filters",
          "description": "A filter to apply.",
          "x-nullable": true
        }
      },
      "required": [
        "vector_store_ids"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "file_search"
    },
    "OpenAI.FileSearchToolCallItemParam": {
      "type": "object",
      "description": "The results of a file search tool call. See the\n[file search guide](/docs/guides/tools-file-search) for more information.\n",
      "properties": {
        "queries": {
          "type": "array",
          "description": "The queries used to search for files.",
          "items": {
            "type": "string"
          }
        },
        "results": {
          "type": "array",
          "description": "The results of the file search tool call.",
          "x-nullable": true,
          "items": {
            "type": "object",
            "properties": {
              "file_id": {
                "type": "string",
                "description": "The unique ID of the file."
              },
              "text": {
                "type": "string",
                "description": "The text that was retrieved from the file."
              },
              "filename": {
                "type": "string",
                "description": "The name of the file."
              },
              "attributes": {
                "$ref": "#/definitions/OpenAI.VectorStoreFileAttributes"
              },
              "score": {
                "type": "number",
                "format": "float",
                "description": "The relevance score of the file - a value between 0 and 1."
              }
            }
          }
        }
      },
      "required": [
        "queries"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "file_search_call"
    },
    "OpenAI.FileSearchToolCallItemResource": {
      "type": "object",
      "description": "The results of a file search tool call. See the\n[file search guide](/docs/guides/tools-file-search) for more information.\n",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the file search tool call. One of `in_progress`,\n`searching`, `incomplete` or `failed`,",
          "enum": [
            "in_progress",
            "searching",
            "completed",
            "incomplete",
            "failed"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "queries": {
          "type": "array",
          "description": "The queries used to search for files.",
          "items": {
            "type": "string"
          }
        },
        "results": {
          "type": "array",
          "description": "The results of the file search tool call.",
          "x-nullable": true,
          "items": {
            "type": "object",
            "properties": {
              "file_id": {
                "type": "string",
                "description": "The unique ID of the file."
              },
              "text": {
                "type": "string",
                "description": "The text that was retrieved from the file."
              },
              "filename": {
                "type": "string",
                "description": "The name of the file."
              },
              "attributes": {
                "$ref": "#/definitions/OpenAI.VectorStoreFileAttributes"
              },
              "score": {
                "type": "number",
                "format": "float",
                "description": "The relevance score of the file - a value between 0 and 1."
              }
            }
          }
        }
      },
      "required": [
        "status",
        "queries"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "file_search_call"
    },
    "OpenAI.Filters": {},
    "OpenAI.FineTuneDPOHyperparameters": {
      "type": "object",
      "description": "The hyperparameters used for the DPO fine-tuning job.",
      "properties": {
        "beta": {
          "description": "The beta value for the DPO method. A higher beta value will increase the weight of the penalty between the policy and reference model.",
          "default": "auto"
        },
        "batch_size": {
          "description": "Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but with lower variance.",
          "default": "auto"
        },
        "learning_rate_multiplier": {
          "description": "Scaling factor for the learning rate. A smaller learning rate may be useful to avoid overfitting.",
          "default": "auto"
        },
        "n_epochs": {
          "description": "The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.",
          "default": "auto"
        }
      }
    },
    "OpenAI.FineTuneDPOMethod": {
      "type": "object",
      "description": "Configuration for the DPO fine-tuning method.",
      "properties": {
        "hyperparameters": {
          "$ref": "#/definitions/OpenAI.FineTuneDPOHyperparameters"
        }
      }
    },
    "OpenAI.FineTuneMethod": {
      "type": "object",
      "description": "The method used for fine-tuning.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of method. Is either `supervised`, `dpo`, or `reinforcement`.",
          "enum": [
            "supervised",
            "dpo",
            "reinforcement"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "supervised": {
          "$ref": "#/definitions/OpenAI.FineTuneSupervisedMethod"
        },
        "dpo": {
          "$ref": "#/definitions/OpenAI.FineTuneDPOMethod"
        },
        "reinforcement": {
          "$ref": "#/definitions/OpenAI.FineTuneReinforcementMethod"
        }
      },
      "required": [
        "type"
      ]
    },
    "OpenAI.FineTuneReinforcementHyperparameters": {
      "type": "object",
      "description": "The hyperparameters used for the reinforcement fine-tuning job.",
      "properties": {
        "batch_size": {
          "description": "Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but with lower variance.",
          "default": "auto"
        },
        "learning_rate_multiplier": {
          "description": "Scaling factor for the learning rate. A smaller learning rate may be useful to avoid overfitting.",
          "default": "auto"
        },
        "n_epochs": {
          "description": "The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.",
          "default": "auto"
        },
        "reasoning_effort": {
          "type": "string",
          "description": "Level of reasoning effort.",
          "default": "default",
          "enum": [
            "default",
            "low",
            "medium",
            "high"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "compute_multiplier": {
          "description": "Multiplier on amount of compute used for exploring search space during training.",
          "default": "auto"
        },
        "eval_interval": {
          "description": "The number of training steps between evaluation runs.",
          "default": "auto"
        },
        "eval_samples": {
          "description": "Number of evaluation samples to generate per training step.",
          "default": "auto"
        }
      }
    },
    "OpenAI.FineTuneReinforcementMethod": {
      "type": "object",
      "description": "Configuration for the reinforcement fine-tuning method.",
      "properties": {
        "grader": {
          "description": "The grader used for the fine-tuning job."
        },
        "hyperparameters": {
          "$ref": "#/definitions/OpenAI.FineTuneReinforcementHyperparameters"
        }
      },
      "required": [
        "grader"
      ]
    },
    "OpenAI.FineTuneSupervisedHyperparameters": {
      "type": "object",
      "description": "The hyperparameters used for the fine-tuning job.",
      "properties": {
        "batch_size": {
          "description": "Number of examples in each batch. A larger batch size means that model parameters are updated less frequently, but with lower variance.",
          "default": "auto"
        },
        "learning_rate_multiplier": {
          "description": "Scaling factor for the learning rate. A smaller learning rate may be useful to avoid overfitting.",
          "default": "auto"
        },
        "n_epochs": {
          "description": "The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.",
          "default": "auto"
        }
      }
    },
    "OpenAI.FineTuneSupervisedMethod": {
      "type": "object",
      "description": "Configuration for the supervised fine-tuning method.",
      "properties": {
        "hyperparameters": {
          "$ref": "#/definitions/OpenAI.FineTuneSupervisedHyperparameters"
        }
      }
    },
    "OpenAI.FineTuningIntegration": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "wandb"
          ],
          "x-ms-enum": {
            "modelAsString": true
          }
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.FineTuningIntegrationWandb": {
      "type": "object",
      "properties": {
        "wandb": {
          "type": "object",
          "description": "The settings for your integration with Weights and Biases. This payload specifies the project that\nmetrics will be sent to. Optionally, you can set an explicit display name for your run, add tags\nto your run, and set a default entity (team, username, etc) to be associated with your run.",
          "properties": {
            "project": {
              "type": "string",
              "description": "The name of the project that the new run will be created under."
            },
            "name": {
              "type": "string",
              "description": "A display name to set for the run. If not set, we will use the Job ID as the name.",
              "x-nullable": true
            },
            "entity": {
              "type": "string",
              "description": "The entity to use for the run. This allows you to set the team or username of the WandB user that you would\nlike associated with the run. If not set, the default entity for the registered WandB API key is used.",
              "x-nullable": true
            },
            "tags": {
              "type": "array",
              "description": "A list of tags to be attached to the newly created run. These tags are passed through directly to WandB. Some\ndefault tags are generated by OpenAI: \"openai/finetune\", \"openai/{base-model}\", \"openai/{ftjob-abcdef}\".",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "project"
          ]
        }
      },
      "required": [
        "wandb"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.FineTuningIntegration"
        }
      ],
      "x-ms-discriminator-value": "wandb"
    },
    "OpenAI.FineTuningJob": {
      "type": "object",
      "description": "The `fine_tuning.job` object represents a fine-tuning job that has been created through the API.",
      "properties": {
        "user_provided_suffix": {
          "type": "string",
          "description": "The descriptive suffix applied to the job, as specified in the job creation request.",
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "description": "The object identifier, which can be referenced in the API endpoints."
        },
        "created_at": {
          "type": "integer",
          "format": "unixtime",
          "description": "The Unix timestamp (in seconds) for when the fine-tuning job was created."
        },
        "error": {
          "type": "object",
          "description": "For fine-tuning jobs that have `failed`, this will contain more information on the cause of the failure.",
          "properties": {
            "code": {
              "type": "string",
              "description": "A machine-readable error code."
            },
            "message": {
              "type": "string",
              "description": "A human-readable error message."
            },
            "param": {
              "type": "string",
              "description": "The parameter that was invalid, usually `training_file` or `validation_file`. This field will be null if the failure was not parameter-specific.",
              "x-nullable": true
            }
          },
          "required": [
            "code",
            "message",
            "param"
          ],
          "x-nullable": true
        },
        "fine_tuned_model": {
          "type": "string",
          "description": "The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.",
          "x-nullable": true
        },
        "finished_at": {
          "type": "integer",
          "format": "unixtime",
          "description": "The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running.",
          "x-nullable": true
        },
        "hyperparameters": {
          "type": "object",
          "description": "The hyperparameters used for the fine-tuning job. This value will only be returned when running `supervised` jobs.",
          "properties": {
            "batch_size": {
              "description": "Number of examples in each batch. A larger batch size means that model parameters\nare updated less frequently, but with lower variance.",
              "default": "auto"
            },
            "learning_rate_multiplier": {
              "description": "Scaling factor for the learning rate. A smaller learning rate may be useful to avoid\noverfitting.",
              "default": "auto"
            },
            "n_epochs": {
              "description": "The number of epochs to train the model for. An epoch refers to one full cycle\nthrough the training dataset.",
              "default": "auto"
            }
          }
        },
        "model": {
          "type": "string",
          "description": "The base model that is being fine-tuned."
        },
        "object": {
          "type": "string",
          "description": "The object type, which is always \"fine_tuning.job\".",
          "enum": [
            "fine_tuning.job"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "organization_id": {
          "type": "string",
          "description": "The organization that owns the fine-tuning job."
        },
        "result_files": {
          "type": "array",
          "description": "The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API](/docs/api-reference/files/retrieve-contents).",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "description": "The current status of the fine-tuning job, which can be either `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.",
          "enum": [
            "validating_files",
            "queued",
            "running",
            "succeeded",
            "failed",
            "cancelled"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "trained_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running.",
          "x-nullable": true
        },
        "training_file": {
          "type": "string",
          "description": "The file ID used for training. You can retrieve the training data with the [Files API](/docs/api-reference/files/retrieve-contents)."
        },
        "validation_file": {
          "type": "string",
          "description": "The file ID used for validation. You can retrieve the validation results with the [Files API](/docs/api-reference/files/retrieve-contents).",
          "x-nullable": true
        },
        "integrations": {
          "type": "array",
          "description": "A list of integrations to enable for this fine-tuning job.",
          "x-nullable": true,
          "items": {
            "$ref": "#/definitions/OpenAI.FineTuningIntegration"
          }
        },
        "seed": {
          "type": "integer",
          "format": "int32",
          "description": "The seed used for the fine-tuning job."
        },
        "estimated_finish": {
          "type": "integer",
          "format": "unixtime",
          "description": "The Unix timestamp (in seconds) for when the fine-tuning job is estimated to finish. The value will be null if the fine-tuning job is not running.",
          "x-nullable": true
        },
        "method": {
          "$ref": "#/definitions/OpenAI.FineTuneMethod"
        },
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        }
      },
      "required": [
        "id",
        "created_at",
        "error",
        "fine_tuned_model",
        "finished_at",
        "hyperparameters",
        "model",
        "object",
        "organization_id",
        "result_files",
        "status",
        "trained_tokens",
        "training_file",
        "validation_file",
        "seed",
        "metadata"
      ]
    },
    "OpenAI.FineTuningJobCheckpoint": {
      "type": "object",
      "description": "The `fine_tuning.job.checkpoint` object represents a model checkpoint for a fine-tuning job that is ready to use.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The checkpoint identifier, which can be referenced in the API endpoints."
        },
        "created_at": {
          "type": "integer",
          "format": "unixtime",
          "description": "The Unix timestamp (in seconds) for when the checkpoint was created."
        },
        "fine_tuned_model_checkpoint": {
          "type": "string",
          "description": "The name of the fine-tuned checkpoint model that is created."
        },
        "step_number": {
          "type": "integer",
          "format": "int32",
          "description": "The step number that the checkpoint was created at."
        },
        "metrics": {
          "type": "object",
          "description": "Metrics at the step number during the fine-tuning job.",
          "properties": {
            "step": {
              "type": "number",
              "format": "float"
            },
            "train_loss": {
              "type": "number",
              "format": "float"
            },
            "train_mean_token_accuracy": {
              "type": "number",
              "format": "float"
            },
            "valid_loss": {
              "type": "number",
              "format": "float"
            },
            "valid_mean_token_accuracy": {
              "type": "number",
              "format": "float"
            },
            "full_valid_loss": {
              "type": "number",
              "format": "float"
            },
            "full_valid_mean_token_accuracy": {
              "type": "number",
              "format": "float"
            }
          }
        },
        "fine_tuning_job_id": {
          "type": "string",
          "description": "The name of the fine-tuning job that this checkpoint was created from."
        },
        "object": {
          "type": "string",
          "description": "The object type, which is always \"fine_tuning.job.checkpoint\".",
          "enum": [
            "fine_tuning.job.checkpoint"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "id",
        "created_at",
        "fine_tuned_model_checkpoint",
        "step_number",
        "metrics",
        "fine_tuning_job_id",
        "object"
      ]
    },
    "OpenAI.FineTuningJobEvent": {
      "type": "object",
      "description": "Fine-tuning job event object",
      "properties": {
        "object": {
          "type": "string",
          "description": "The object type, which is always \"fine_tuning.job.event\".",
          "enum": [
            "fine_tuning.job.event"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "id": {
          "type": "string",
          "description": "The object identifier."
        },
        "created_at": {
          "type": "integer",
          "format": "unixtime",
          "description": "The Unix timestamp (in seconds) for when the fine-tuning job was created."
        },
        "level": {
          "type": "string",
          "description": "The log level of the event.",
          "enum": [
            "info",
            "warn",
            "error"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "message": {
          "type": "string",
          "description": "The message of the event."
        },
        "type": {
          "type": "string",
          "description": "The type of event.",
          "enum": [
            "message",
            "metrics"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "data": {
          "description": "The data associated with the event."
        }
      },
      "required": [
        "object",
        "id",
        "created_at",
        "level",
        "message"
      ]
    },
    "OpenAI.FunctionTool": {
      "type": "object",
      "description": "Defines a function in your own code the model can choose to call. Learn more about [function calling](https://platform.openai.com/docs/guides/function-calling).",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the function to call."
        },
        "description": {
          "type": "string",
          "description": "A description of the function. Used by the model to determine whether or not to call the function.",
          "x-nullable": true
        },
        "parameters": {
          "description": "A JSON schema object describing the parameters of the function.",
          "x-nullable": true
        },
        "strict": {
          "type": "boolean",
          "description": "Whether to enforce strict parameter validation. Default `true`.",
          "x-nullable": true
        }
      },
      "required": [
        "name",
        "parameters",
        "strict"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "function"
    },
    "OpenAI.FunctionToolCallItemParam": {
      "type": "object",
      "description": "A tool call to run a function. See the\n[function calling guide](/docs/guides/function-calling) for more information.\n",
      "properties": {
        "call_id": {
          "type": "string",
          "description": "The unique ID of the function tool call generated by the model."
        },
        "name": {
          "type": "string",
          "description": "The name of the function to run."
        },
        "arguments": {
          "type": "string",
          "description": "A JSON string of the arguments to pass to the function."
        }
      },
      "required": [
        "call_id",
        "name",
        "arguments"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "function_call"
    },
    "OpenAI.FunctionToolCallItemResource": {
      "type": "object",
      "description": "A tool call to run a function. See the\n[function calling guide](/docs/guides/function-calling) for more information.\n",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the item. One of `in_progress`, `completed`, or\n`incomplete`. Populated when items are returned via API.",
          "enum": [
            "in_progress",
            "completed",
            "incomplete"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "call_id": {
          "type": "string",
          "description": "The unique ID of the function tool call generated by the model."
        },
        "name": {
          "type": "string",
          "description": "The name of the function to run."
        },
        "arguments": {
          "type": "string",
          "description": "A JSON string of the arguments to pass to the function."
        }
      },
      "required": [
        "status",
        "call_id",
        "name",
        "arguments"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "function_call"
    },
    "OpenAI.FunctionToolCallOutputItemParam": {
      "type": "object",
      "description": "The output of a function tool call.\n",
      "properties": {
        "call_id": {
          "type": "string",
          "description": "The unique ID of the function tool call generated by the model."
        },
        "output": {
          "type": "string",
          "description": "A JSON string of the output of the function tool call."
        }
      },
      "required": [
        "call_id",
        "output"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "function_call_output"
    },
    "OpenAI.FunctionToolCallOutputItemResource": {
      "type": "object",
      "description": "The output of a function tool call.\n",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the item. One of `in_progress`, `completed`, or\n`incomplete`. Populated when items are returned via API.",
          "enum": [
            "in_progress",
            "completed",
            "incomplete"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "call_id": {
          "type": "string",
          "description": "The unique ID of the function tool call generated by the model."
        },
        "output": {
          "type": "string",
          "description": "A JSON string of the output of the function tool call."
        }
      },
      "required": [
        "status",
        "call_id",
        "output"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "function_call_output"
    },
    "OpenAI.ImageGenTool": {
      "type": "object",
      "description": "A tool that generates images using a model like `gpt-image-1`.",
      "properties": {
        "model": {
          "type": "string",
          "description": "The image generation model to use. Default: `gpt-image-1`.",
          "default": "gpt-image-1",
          "enum": [
            "gpt-image-1"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "quality": {
          "type": "string",
          "description": "The quality of the generated image. One of `low`, `medium`, `high`,\nor `auto`. Default: `auto`.",
          "default": "auto",
          "enum": [
            "low",
            "medium",
            "high",
            "auto"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "size": {
          "type": "string",
          "description": "The size of the generated image. One of `1024x1024`, `1024x1536`,\n`1536x1024`, or `auto`. Default: `auto`.",
          "default": "auto",
          "enum": [
            "1024x1024",
            "1024x1536",
            "1536x1024",
            "auto"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "output_format": {
          "type": "string",
          "description": "The output format of the generated image. One of `png`, `webp`, or\n`jpeg`. Default: `png`.",
          "default": "png",
          "enum": [
            "png",
            "webp",
            "jpeg"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "output_compression": {
          "type": "integer",
          "format": "int32",
          "description": "Compression level for the output image. Default: 100.",
          "default": 100,
          "minimum": 0,
          "maximum": 100
        },
        "moderation": {
          "type": "string",
          "description": "Moderation level for the generated image. Default: `auto`.",
          "default": "auto",
          "enum": [
            "auto",
            "low"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "background": {
          "type": "string",
          "description": "Background type for the generated image. One of `transparent`,\n`opaque`, or `auto`. Default: `auto`.",
          "default": "auto",
          "enum": [
            "transparent",
            "opaque",
            "auto"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "input_image_mask": {
          "type": "object",
          "description": "Optional mask for inpainting. Contains `image_url`\n(string, optional) and `file_id` (string, optional).",
          "properties": {
            "image_url": {
              "type": "string",
              "description": "Base64-encoded mask image."
            },
            "file_id": {
              "type": "string",
              "description": "File ID for the mask image."
            }
          }
        },
        "partial_images": {
          "type": "integer",
          "format": "int32",
          "description": "Number of partial images to generate in streaming mode, from 0 (default value) to 3.",
          "default": 0,
          "minimum": 0,
          "maximum": 3
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "image_generation"
    },
    "OpenAI.ImageGenToolCallItemParam": {
      "type": "object",
      "description": "An image generation request made by the model.\n",
      "properties": {
        "result": {
          "type": "string",
          "description": "The generated image encoded in base64.",
          "x-nullable": true
        }
      },
      "required": [
        "result"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "image_generation_call"
    },
    "OpenAI.ImageGenToolCallItemResource": {
      "type": "object",
      "description": "An image generation request made by the model.\n",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "in_progress",
            "completed",
            "generating",
            "failed"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "result": {
          "type": "string",
          "description": "The generated image encoded in base64.",
          "x-nullable": true
        }
      },
      "required": [
        "status",
        "result"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "image_generation_call"
    },
    "OpenAI.Includable": {
      "type": "string",
      "description": "Specify additional output data to include in the model response. Currently\nsupported values are:\n- `code_interpreter_call.outputs`: Includes the outputs of python code execution\n  in code interpreter tool call items.\n- `computer_call_output.output.image_url`: Include image urls from the computer call output.\n- `file_search_call.results`: Include the search results of\n  the file search tool call.\n- `message.input_image.image_url`: Include image urls from the input message.\n- `message.output_text.logprobs`: Include logprobs with assistant messages.\n- `reasoning.encrypted_content`: Includes an encrypted version of reasoning\n  tokens in reasoning item outputs. This enables reasoning items to be used in\n  multi-turn conversations when using the Responses API statelessly (like\n  when the `store` parameter is set to `false`, or when an organization is\n  enrolled in the zero data retention program).",
      "enum": [
        "code_interpreter_call.outputs",
        "computer_call_output.output.image_url",
        "file_search_call.results",
        "message.input_image.image_url",
        "message.output_text.logprobs",
        "reasoning.encrypted_content",
        "web_search_call.results",
        "web_search_call.action.sources",
        "memory_search_call.results"
      ],
      "x-ms-enum": {
        "name": "Includable",
        "modelAsString": false
      }
    },
    "OpenAI.ItemContent": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.ItemContentType"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.ItemContentInputAudio": {
      "type": "object",
      "description": "An audio input to the model.",
      "properties": {
        "data": {
          "type": "string",
          "description": "Base64-encoded audio data."
        },
        "format": {
          "type": "string",
          "description": "The format of the audio data. Currently supported formats are `mp3` and\n`wav`.",
          "enum": [
            "mp3",
            "wav"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "data",
        "format"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemContent"
        }
      ],
      "x-ms-discriminator-value": "input_audio"
    },
    "OpenAI.ItemContentInputFile": {
      "type": "object",
      "description": "A file input to the model.",
      "properties": {
        "file_id": {
          "type": "string",
          "description": "The ID of the file to be sent to the model.",
          "x-nullable": true
        },
        "filename": {
          "type": "string",
          "description": "The name of the file to be sent to the model."
        },
        "file_data": {
          "type": "string",
          "description": "The content of the file to be sent to the model."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemContent"
        }
      ],
      "x-ms-discriminator-value": "input_file"
    },
    "OpenAI.ItemContentInputImage": {
      "type": "object",
      "description": "An image input to the model. Learn about [image inputs](/docs/guides/vision).",
      "properties": {
        "image_url": {
          "type": "string",
          "description": "The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL.",
          "x-nullable": true
        },
        "file_id": {
          "type": "string",
          "description": "The ID of the file to be sent to the model.",
          "x-nullable": true
        },
        "detail": {
          "type": "string",
          "description": "The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.",
          "default": "auto",
          "enum": [
            "low",
            "high",
            "auto"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemContent"
        }
      ],
      "x-ms-discriminator-value": "input_image"
    },
    "OpenAI.ItemContentInputText": {
      "type": "object",
      "description": "A text input to the model.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text input to the model."
        }
      },
      "required": [
        "text"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemContent"
        }
      ],
      "x-ms-discriminator-value": "input_text"
    },
    "OpenAI.ItemContentOutputAudio": {
      "type": "object",
      "description": "An audio output from the model.",
      "properties": {
        "data": {
          "type": "string",
          "description": "Base64-encoded audio data from the model."
        },
        "transcript": {
          "type": "string",
          "description": "The transcript of the audio data from the model."
        }
      },
      "required": [
        "data",
        "transcript"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemContent"
        }
      ],
      "x-ms-discriminator-value": "output_audio"
    },
    "OpenAI.ItemContentOutputText": {
      "type": "object",
      "description": "A text output from the model.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text output from the model."
        },
        "annotations": {
          "type": "array",
          "description": "The annotations of the text output.",
          "items": {
            "$ref": "#/definitions/OpenAI.Annotation"
          }
        },
        "logprobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenAI.LogProb"
          }
        }
      },
      "required": [
        "text",
        "annotations"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemContent"
        }
      ],
      "x-ms-discriminator-value": "output_text"
    },
    "OpenAI.ItemContentRefusal": {
      "type": "object",
      "description": "A refusal from the model.",
      "properties": {
        "refusal": {
          "type": "string",
          "description": "The refusal explanationfrom the model."
        }
      },
      "required": [
        "refusal"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemContent"
        }
      ],
      "x-ms-discriminator-value": "refusal"
    },
    "OpenAI.ItemContentType": {
      "type": "string",
      "description": "Multi-modal input and output contents.",
      "enum": [
        "input_text",
        "input_audio",
        "input_image",
        "input_file",
        "output_text",
        "output_audio",
        "refusal"
      ],
      "x-ms-enum": {
        "name": "ItemContentType",
        "modelAsString": false,
        "values": [
          {
            "name": "input_text",
            "value": "input_text"
          },
          {
            "name": "input_audio",
            "value": "input_audio"
          },
          {
            "name": "input_image",
            "value": "input_image"
          },
          {
            "name": "input_file",
            "value": "input_file"
          },
          {
            "name": "output_text",
            "value": "output_text"
          },
          {
            "name": "output_audio",
            "value": "output_audio"
          },
          {
            "name": "refusal",
            "value": "refusal"
          }
        ]
      }
    },
    "OpenAI.ItemParam": {
      "type": "object",
      "description": "Content item used to generate a response.",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.ItemType"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.ItemReferenceItemParam": {
      "type": "object",
      "description": "An internal identifier for an item to reference.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The service-originated ID of the previously generated response item being referenced."
        }
      },
      "required": [
        "id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "item_reference"
    },
    "OpenAI.ItemResource": {
      "type": "object",
      "description": "Content item used to generate a response.",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.ItemType"
        },
        "id": {
          "type": "string"
        },
        "created_by": {
          "$ref": "#/definitions/CreatedBy",
          "description": "The information about the creator of the item"
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "id"
      ]
    },
    "OpenAI.ItemType": {
      "type": "string",
      "enum": [
        "message",
        "file_search_call",
        "function_call",
        "function_call_output",
        "computer_call",
        "computer_call_output",
        "web_search_call",
        "reasoning",
        "item_reference",
        "image_generation_call",
        "code_interpreter_call",
        "local_shell_call",
        "local_shell_call_output",
        "mcp_list_tools",
        "mcp_approval_request",
        "mcp_approval_response",
        "mcp_call",
        "structured_outputs",
        "workflow_action",
        "memory_search_call",
        "oauth_consent_request"
      ],
      "x-ms-enum": {
        "name": "ItemType",
        "modelAsString": true,
        "values": [
          {
            "name": "message",
            "value": "message"
          },
          {
            "name": "file_search_call",
            "value": "file_search_call"
          },
          {
            "name": "function_call",
            "value": "function_call"
          },
          {
            "name": "function_call_output",
            "value": "function_call_output"
          },
          {
            "name": "computer_call",
            "value": "computer_call"
          },
          {
            "name": "computer_call_output",
            "value": "computer_call_output"
          },
          {
            "name": "web_search_call",
            "value": "web_search_call"
          },
          {
            "name": "reasoning",
            "value": "reasoning"
          },
          {
            "name": "item_reference",
            "value": "item_reference"
          },
          {
            "name": "image_generation_call",
            "value": "image_generation_call"
          },
          {
            "name": "code_interpreter_call",
            "value": "code_interpreter_call"
          },
          {
            "name": "local_shell_call",
            "value": "local_shell_call"
          },
          {
            "name": "local_shell_call_output",
            "value": "local_shell_call_output"
          },
          {
            "name": "mcp_list_tools",
            "value": "mcp_list_tools"
          },
          {
            "name": "mcp_approval_request",
            "value": "mcp_approval_request"
          },
          {
            "name": "mcp_approval_response",
            "value": "mcp_approval_response"
          },
          {
            "name": "mcp_call",
            "value": "mcp_call"
          },
          {
            "name": "structured_outputs",
            "value": "structured_outputs"
          },
          {
            "name": "workflow_action",
            "value": "workflow_action"
          },
          {
            "name": "memory_search_call",
            "value": "memory_search_call"
          },
          {
            "name": "oauth_consent_request",
            "value": "oauth_consent_request"
          }
        ]
      }
    },
    "OpenAI.ListFineTuningJobCheckpointsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenAI.FineTuningJobCheckpoint"
          }
        },
        "object": {
          "type": "string",
          "enum": [
            "list"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "first_id": {
          "type": "string",
          "x-nullable": true
        },
        "last_id": {
          "type": "string",
          "x-nullable": true
        },
        "has_more": {
          "type": "boolean"
        }
      },
      "required": [
        "data",
        "object",
        "has_more"
      ]
    },
    "OpenAI.ListFineTuningJobEventsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenAI.FineTuningJobEvent"
          }
        },
        "object": {
          "type": "string",
          "enum": [
            "list"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "has_more": {
          "type": "boolean"
        }
      },
      "required": [
        "data",
        "object",
        "has_more"
      ]
    },
    "OpenAI.ListPaginatedFineTuningJobsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenAI.FineTuningJob"
          }
        },
        "has_more": {
          "type": "boolean"
        },
        "object": {
          "type": "string",
          "enum": [
            "list"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "data",
        "has_more",
        "object"
      ]
    },
    "OpenAI.LocalShellExecAction": {
      "type": "object",
      "description": "Execute a shell command on the server.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of the local shell action. Always `exec`.",
          "enum": [
            "exec"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "command": {
          "type": "array",
          "description": "The command to run.",
          "items": {
            "type": "string"
          }
        },
        "timeout_ms": {
          "type": "integer",
          "format": "int32",
          "description": "Optional timeout in milliseconds for the command.",
          "x-nullable": true
        },
        "working_directory": {
          "type": "string",
          "description": "Optional working directory to run the command in.",
          "x-nullable": true
        },
        "env": {
          "type": "object",
          "description": "Environment variables to set for the command.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "user": {
          "type": "string",
          "description": "Optional user to run the command as.",
          "x-nullable": true
        }
      },
      "required": [
        "type",
        "command",
        "env"
      ]
    },
    "OpenAI.LocalShellTool": {
      "type": "object",
      "description": "A tool that allows the model to execute shell commands in a local environment.",
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "local_shell"
    },
    "OpenAI.LocalShellToolCallItemParam": {
      "type": "object",
      "description": "A tool call to run a command on the local shell.\n",
      "properties": {
        "call_id": {
          "type": "string",
          "description": "The unique ID of the local shell tool call generated by the model."
        },
        "action": {
          "$ref": "#/definitions/OpenAI.LocalShellExecAction"
        }
      },
      "required": [
        "call_id",
        "action"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "local_shell_call"
    },
    "OpenAI.LocalShellToolCallItemResource": {
      "type": "object",
      "description": "A tool call to run a command on the local shell.\n",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "in_progress",
            "completed",
            "incomplete"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "call_id": {
          "type": "string",
          "description": "The unique ID of the local shell tool call generated by the model."
        },
        "action": {
          "$ref": "#/definitions/OpenAI.LocalShellExecAction"
        }
      },
      "required": [
        "status",
        "call_id",
        "action"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "local_shell_call"
    },
    "OpenAI.LocalShellToolCallOutputItemParam": {
      "type": "object",
      "description": "The output of a local shell tool call.\n",
      "properties": {
        "output": {
          "type": "string",
          "description": "A JSON string of the output of the local shell tool call."
        }
      },
      "required": [
        "output"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "local_shell_call_output"
    },
    "OpenAI.LocalShellToolCallOutputItemResource": {
      "type": "object",
      "description": "The output of a local shell tool call.\n",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "in_progress",
            "completed",
            "incomplete"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "output": {
          "type": "string",
          "description": "A JSON string of the output of the local shell tool call."
        }
      },
      "required": [
        "status",
        "output"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "local_shell_call_output"
    },
    "OpenAI.Location": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.LocationType"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.LocationType": {
      "type": "string",
      "enum": [
        "approximate"
      ],
      "x-ms-enum": {
        "name": "LocationType",
        "modelAsString": true,
        "values": [
          {
            "name": "approximate",
            "value": "approximate"
          }
        ]
      }
    },
    "OpenAI.LogProb": {
      "type": "object",
      "description": "The log probability of a token.",
      "properties": {
        "token": {
          "type": "string"
        },
        "logprob": {
          "type": "number",
          "format": "float"
        },
        "bytes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "top_logprobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenAI.TopLogProb"
          }
        }
      },
      "required": [
        "token",
        "logprob",
        "bytes",
        "top_logprobs"
      ]
    },
    "OpenAI.MCPApprovalRequestItemParam": {
      "type": "object",
      "description": "A request for human approval of a tool invocation.\n",
      "properties": {
        "server_label": {
          "type": "string",
          "description": "The label of the MCP server making the request."
        },
        "name": {
          "type": "string",
          "description": "The name of the tool to run."
        },
        "arguments": {
          "type": "string",
          "description": "A JSON string of arguments for the tool."
        }
      },
      "required": [
        "server_label",
        "name",
        "arguments"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "mcp_approval_request"
    },
    "OpenAI.MCPApprovalRequestItemResource": {
      "type": "object",
      "description": "A request for human approval of a tool invocation.\n",
      "properties": {
        "server_label": {
          "type": "string",
          "description": "The label of the MCP server making the request."
        },
        "name": {
          "type": "string",
          "description": "The name of the tool to run."
        },
        "arguments": {
          "type": "string",
          "description": "A JSON string of arguments for the tool."
        }
      },
      "required": [
        "server_label",
        "name",
        "arguments"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "mcp_approval_request"
    },
    "OpenAI.MCPApprovalResponseItemParam": {
      "type": "object",
      "description": "A response to an MCP approval request.\n",
      "properties": {
        "approval_request_id": {
          "type": "string",
          "description": "The ID of the approval request being answered."
        },
        "approve": {
          "type": "boolean",
          "description": "Whether the request was approved."
        },
        "reason": {
          "type": "string",
          "description": "Optional reason for the decision.",
          "x-nullable": true
        }
      },
      "required": [
        "approval_request_id",
        "approve"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "mcp_approval_response"
    },
    "OpenAI.MCPApprovalResponseItemResource": {
      "type": "object",
      "description": "A response to an MCP approval request.\n",
      "properties": {
        "approval_request_id": {
          "type": "string",
          "description": "The ID of the approval request being answered."
        },
        "approve": {
          "type": "boolean",
          "description": "Whether the request was approved."
        },
        "reason": {
          "type": "string",
          "description": "Optional reason for the decision.",
          "x-nullable": true
        }
      },
      "required": [
        "approval_request_id",
        "approve"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "mcp_approval_response"
    },
    "OpenAI.MCPCallItemParam": {
      "type": "object",
      "description": "An invocation of a tool on an MCP server.\n",
      "properties": {
        "server_label": {
          "type": "string",
          "description": "The label of the MCP server running the tool."
        },
        "name": {
          "type": "string",
          "description": "The name of the tool that was run."
        },
        "arguments": {
          "type": "string",
          "description": "A JSON string of the arguments passed to the tool."
        },
        "output": {
          "type": "string",
          "description": "The output from the tool call.",
          "x-nullable": true
        },
        "error": {
          "type": "string",
          "description": "The error from the tool call, if any.",
          "x-nullable": true
        }
      },
      "required": [
        "server_label",
        "name",
        "arguments"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "mcp_call"
    },
    "OpenAI.MCPCallItemResource": {
      "type": "object",
      "description": "An invocation of a tool on an MCP server.\n",
      "properties": {
        "server_label": {
          "type": "string",
          "description": "The label of the MCP server running the tool."
        },
        "name": {
          "type": "string",
          "description": "The name of the tool that was run."
        },
        "arguments": {
          "type": "string",
          "description": "A JSON string of the arguments passed to the tool."
        },
        "output": {
          "type": "string",
          "description": "The output from the tool call.",
          "x-nullable": true
        },
        "error": {
          "type": "string",
          "description": "The error from the tool call, if any.",
          "x-nullable": true
        }
      },
      "required": [
        "server_label",
        "name",
        "arguments"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "mcp_call"
    },
    "OpenAI.MCPListToolsItemParam": {
      "type": "object",
      "description": "A list of tools available on an MCP server.\n",
      "properties": {
        "server_label": {
          "type": "string",
          "description": "The label of the MCP server."
        },
        "tools": {
          "type": "array",
          "description": "The tools available on the server.",
          "items": {
            "$ref": "#/definitions/OpenAI.MCPListToolsTool"
          }
        },
        "error": {
          "type": "string",
          "description": "Error message if the server could not list tools.",
          "x-nullable": true
        }
      },
      "required": [
        "server_label",
        "tools"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "mcp_list_tools"
    },
    "OpenAI.MCPListToolsItemResource": {
      "type": "object",
      "description": "A list of tools available on an MCP server.\n",
      "properties": {
        "server_label": {
          "type": "string",
          "description": "The label of the MCP server."
        },
        "tools": {
          "type": "array",
          "description": "The tools available on the server.",
          "items": {
            "$ref": "#/definitions/OpenAI.MCPListToolsTool"
          }
        },
        "error": {
          "type": "string",
          "description": "Error message if the server could not list tools.",
          "x-nullable": true
        }
      },
      "required": [
        "server_label",
        "tools"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "mcp_list_tools"
    },
    "OpenAI.MCPListToolsTool": {
      "type": "object",
      "description": "A tool available on an MCP server.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the tool."
        },
        "description": {
          "type": "string",
          "description": "The description of the tool.",
          "x-nullable": true
        },
        "input_schema": {
          "description": "The JSON schema describing the tool's input."
        },
        "annotations": {
          "description": "Additional annotations about the tool.",
          "x-nullable": true
        }
      },
      "required": [
        "name",
        "input_schema"
      ]
    },
    "OpenAI.MCPTool": {
      "type": "object",
      "description": "Give the model access to additional tools via remote Model Context Protocol\n(MCP) servers. [Learn more about MCP](/docs/guides/tools-remote-mcp).",
      "properties": {
        "server_label": {
          "type": "string",
          "description": "A label for this MCP server, used to identify it in tool calls."
        },
        "server_url": {
          "type": "string",
          "description": "The URL for the MCP server."
        },
        "headers": {
          "type": "object",
          "description": "Optional HTTP headers to send to the MCP server. Use for authentication\nor other purposes.",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "allowed_tools": {
          "description": "List of allowed tool names or a filter object."
        },
        "require_approval": {
          "description": "Specify which of the MCP server's tools require approval.",
          "default": "always"
        },
        "project_connection_id": {
          "type": "string",
          "description": "The connection ID in the project for the MCP server. The connection stores authentication and other connection details needed to connect to the MCP server."
        }
      },
      "required": [
        "server_label",
        "server_url"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "mcp"
    },
    "OpenAI.Metadata": {
      "type": "object",
      "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
      "x-oaiTypeLabel": "map"
    },
    "OpenAI.Prompt": {
      "type": "object",
      "description": "Reference to a prompt template and its variables.\n[Learn more](/docs/guides/text?api-mode=responses#reusable-prompts).",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the prompt template to use."
        },
        "version": {
          "type": "string",
          "description": "Optional version of the prompt template.",
          "x-nullable": true
        },
        "variables": {
          "$ref": "#/definitions/OpenAI.ResponsePromptVariables",
          "x-nullable": true
        }
      },
      "required": [
        "id"
      ]
    },
    "OpenAI.RankingOptions": {
      "type": "object",
      "properties": {
        "ranker": {
          "type": "string",
          "description": "The ranker to use for the file search.",
          "enum": [
            "auto",
            "default-2024-11-15"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "score_threshold": {
          "type": "number",
          "format": "float",
          "description": "The score threshold for the file search, a number between 0 and 1. Numbers closer to 1 will attempt to return only the most relevant results, but may return fewer results."
        }
      }
    },
    "OpenAI.Reasoning": {
      "type": "object",
      "description": "**o-series models only**\n\nConfiguration options for\n[reasoning models](https://platform.openai.com/docs/guides/reasoning).",
      "properties": {
        "effort": {
          "type": "string",
          "default": "medium",
          "enum": [
            "low",
            "medium",
            "high"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "x-nullable": true
        },
        "summary": {
          "type": "string",
          "description": "A summary of the reasoning performed by the model. This can be\nuseful for debugging and understanding the model's reasoning process.\nOne of `auto`, `concise`, or `detailed`.",
          "enum": [
            "auto",
            "concise",
            "detailed"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "x-nullable": true
        },
        "generate_summary": {
          "type": "string",
          "description": "**Deprecated:** use `summary` instead.\n\nA summary of the reasoning performed by the model. This can be\nuseful for debugging and understanding the model's reasoning process.\nOne of `auto`, `concise`, or `detailed`.",
          "default": null,
          "enum": [
            "auto",
            "concise",
            "detailed"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "x-nullable": true
        }
      }
    },
    "OpenAI.ReasoningItemParam": {
      "type": "object",
      "description": "A description of the chain of thought used by a reasoning model while generating\na response. Be sure to include these items in your `input` to the Responses API\nfor subsequent turns of a conversation if you are manually\n[managing context](/docs/guides/conversation-state).\n",
      "properties": {
        "encrypted_content": {
          "type": "string",
          "description": "The encrypted content of the reasoning item - populated when a response is\ngenerated with `reasoning.encrypted_content` in the `include` parameter.",
          "x-nullable": true
        },
        "summary": {
          "type": "array",
          "description": "Reasoning text contents.",
          "items": {
            "$ref": "#/definitions/OpenAI.ReasoningItemSummaryPart"
          }
        }
      },
      "required": [
        "summary"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "reasoning"
    },
    "OpenAI.ReasoningItemResource": {
      "type": "object",
      "description": "A description of the chain of thought used by a reasoning model while generating\na response. Be sure to include these items in your `input` to the Responses API\nfor subsequent turns of a conversation if you are manually\n[managing context](/docs/guides/conversation-state).\n",
      "properties": {
        "encrypted_content": {
          "type": "string",
          "description": "The encrypted content of the reasoning item - populated when a response is\ngenerated with `reasoning.encrypted_content` in the `include` parameter.",
          "x-nullable": true
        },
        "summary": {
          "type": "array",
          "description": "Reasoning text contents.",
          "items": {
            "$ref": "#/definitions/OpenAI.ReasoningItemSummaryPart"
          }
        }
      },
      "required": [
        "summary"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "reasoning"
    },
    "OpenAI.ReasoningItemSummaryPart": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.ReasoningItemSummaryPartType"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.ReasoningItemSummaryPartType": {
      "type": "string",
      "enum": [
        "summary_text"
      ],
      "x-ms-enum": {
        "name": "ReasoningItemSummaryPartType",
        "modelAsString": true,
        "values": [
          {
            "name": "summary_text",
            "value": "summary_text"
          }
        ]
      }
    },
    "OpenAI.ReasoningItemSummaryTextPart": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ReasoningItemSummaryPart"
        }
      ],
      "x-ms-discriminator-value": "summary_text"
    },
    "OpenAI.Response": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        },
        "temperature": {
          "type": "number",
          "format": "float",
          "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\nWe generally recommend altering this or `top_p` but not both.",
          "x-nullable": true
        },
        "top_p": {
          "type": "number",
          "format": "float",
          "description": "An alternative to sampling with temperature, called nucleus sampling,\nwhere the model considers the results of the tokens with top_p probability\nmass. So 0.1 means only the tokens comprising the top 10% probability mass\nare considered.\n\nWe generally recommend altering this or `temperature` but not both.",
          "x-nullable": true
        },
        "user": {
          "type": "string",
          "description": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices#end-user-ids).",
          "x-nullable": true
        },
        "service_tier": {
          "$ref": "#/definitions/OpenAI.ServiceTier",
          "description": "Note: service_tier is not applicable to Azure OpenAI."
        },
        "top_logprobs": {
          "type": "integer",
          "format": "int32",
          "description": "An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability.",
          "x-nullable": true
        },
        "previous_response_id": {
          "type": "string",
          "description": "The unique ID of the previous response to the model. Use this to\ncreate multi-turn conversations. Learn more about\n[conversation state](/docs/guides/conversation-state).",
          "x-nullable": true
        },
        "model": {
          "type": "string",
          "description": "The model deployment to use for the creation of this response."
        },
        "reasoning": {
          "$ref": "#/definitions/OpenAI.Reasoning",
          "x-nullable": true
        },
        "background": {
          "type": "boolean",
          "description": "Whether to run the model response in the background.\n[Learn more](/docs/guides/background).",
          "default": false,
          "x-nullable": true
        },
        "max_output_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "An upper bound for the number of tokens that can be generated for a response, including visible output tokens and [reasoning tokens](/docs/guides/reasoning).",
          "x-nullable": true
        },
        "max_tool_calls": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of total calls to built-in tools that can be processed in a response. This maximum number applies across all built-in tool calls, not per individual tool. Any further attempts to call a tool by the model will be ignored.",
          "x-nullable": true
        },
        "text": {
          "type": "object",
          "description": "Configuration options for a text response from the model. Can be plain\ntext or structured JSON data. Learn more:\n- [Text inputs and outputs](/docs/guides/text)\n- [Structured Outputs](/docs/guides/structured-outputs)",
          "properties": {
            "format": {
              "$ref": "#/definitions/OpenAI.ResponseTextFormatConfiguration"
            }
          }
        },
        "tools": {
          "type": "array",
          "description": "An array of tools the model may call while generating a response. You\ncan specify which tool to use by setting the `tool_choice` parameter.\n\nThe two categories of tools you can provide the model are:\n\n- **Built-in tools**: Tools that are provided by OpenAI that extend the\n  model's capabilities, like [web search](/docs/guides/tools-web-search)\n  or [file search](/docs/guides/tools-file-search). Learn more about\n  [built-in tools](/docs/guides/tools).\n- **Function calls (custom tools)**: Functions that are defined by you,\n  enabling the model to call your own code. Learn more about\n  [function calling](/docs/guides/function-calling).",
          "items": {
            "$ref": "#/definitions/OpenAI.Tool"
          }
        },
        "tool_choice": {
          "description": "How the model should select which tool (or tools) to use when generating\na response. See the `tools` parameter to see how to specify which tools\nthe model can call."
        },
        "prompt": {
          "$ref": "#/definitions/OpenAI.Prompt",
          "x-nullable": true
        },
        "truncation": {
          "type": "string",
          "description": "The truncation strategy to use for the model response.\n- `auto`: If the context of this response and previous ones exceeds\n  the model's context window size, the model will truncate the\n  response to fit the context window by dropping input items in the\n  middle of the conversation.\n- `disabled` (default): If a model response will exceed the context window\n  size for a model, the request will fail with a 400 error.",
          "default": "disabled",
          "enum": [
            "auto",
            "disabled"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "x-nullable": true
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for this Response."
        },
        "object": {
          "type": "string",
          "description": "The object type of this resource - always set to `response`.",
          "enum": [
            "response"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "status": {
          "type": "string",
          "description": "The status of the response generation. One of `completed`, `failed`,\n`in_progress`, `cancelled`, `queued`, or `incomplete`.",
          "enum": [
            "completed",
            "failed",
            "in_progress",
            "cancelled",
            "queued",
            "incomplete"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "created_at": {
          "type": "integer",
          "format": "unixtime",
          "description": "Unix timestamp (in seconds) of when this Response was created."
        },
        "error": {
          "$ref": "#/definitions/OpenAI.ResponseError",
          "x-nullable": true
        },
        "incomplete_details": {
          "type": "object",
          "description": "Details about why the response is incomplete.",
          "properties": {
            "reason": {
              "type": "string",
              "description": "The reason why the response is incomplete.",
              "enum": [
                "max_output_tokens",
                "content_filter"
              ],
              "x-ms-enum": {
                "modelAsString": false
              }
            }
          },
          "x-nullable": true
        },
        "output": {
          "type": "array",
          "description": "An array of content items generated by the model.\n\n- The length and order of items in the `output` array is dependent\n  on the model's response.\n- Rather than accessing the first item in the `output` array and\n  assuming it's an `assistant` message with the content generated by\n  the model, you might consider using the `output_text` property where\n  supported in SDKs.",
          "items": {
            "$ref": "#/definitions/OpenAI.ItemResource"
          }
        },
        "instructions": {
          "description": "A system (or developer) message inserted into the model's context.\n\nWhen using along with `previous_response_id`, the instructions from a previous\nresponse will not be carried over to the next response. This makes it simple\nto swap out system (or developer) messages in new responses."
        },
        "output_text": {
          "type": "string",
          "description": "SDK-only convenience property that contains the aggregated text output\nfrom all `output_text` items in the `output` array, if any are present.\nSupported in the Python and JavaScript SDKs.",
          "x-nullable": true
        },
        "usage": {
          "$ref": "#/definitions/OpenAI.ResponseUsage"
        },
        "parallel_tool_calls": {
          "type": "boolean",
          "description": "Whether to allow the model to run tool calls in parallel.",
          "default": true
        },
        "conversation": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "x-nullable": true
        },
        "agent": {
          "$ref": "#/definitions/AgentId",
          "description": "The agent used for this response"
        },
        "structured_inputs": {
          "type": "object",
          "description": "The structured inputs to the response that can participate in prompt template substitution or tool argument bindings.",
          "additionalProperties": {}
        }
      },
      "required": [
        "metadata",
        "temperature",
        "top_p",
        "user",
        "id",
        "object",
        "created_at",
        "error",
        "incomplete_details",
        "output",
        "instructions",
        "parallel_tool_calls",
        "conversation"
      ]
    },
    "OpenAI.ResponseCodeInterpreterCallCodeDeltaEvent": {
      "type": "object",
      "description": "Emitted when a partial code snippet is streamed by the code interpreter.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response for which the code is being streamed."
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the code interpreter tool call item."
        },
        "delta": {
          "type": "string",
          "description": "The partial code snippet being streamed by the code interpreter."
        }
      },
      "required": [
        "output_index",
        "item_id",
        "delta"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.code_interpreter_call_code.delta"
    },
    "OpenAI.ResponseCodeInterpreterCallCodeDoneEvent": {
      "type": "object",
      "description": "Emitted when the code snippet is finalized by the code interpreter.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response for which the code is finalized."
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the code interpreter tool call item."
        },
        "code": {
          "type": "string",
          "description": "The final code snippet output by the code interpreter."
        }
      },
      "required": [
        "output_index",
        "item_id",
        "code"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.code_interpreter_call_code.done"
    },
    "OpenAI.ResponseCodeInterpreterCallCompletedEvent": {
      "type": "object",
      "description": "Emitted when the code interpreter call is completed.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response for which the code interpreter call is completed."
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the code interpreter tool call item."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.code_interpreter_call.completed"
    },
    "OpenAI.ResponseCodeInterpreterCallInProgressEvent": {
      "type": "object",
      "description": "Emitted when a code interpreter call is in progress.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response for which the code interpreter call is in progress."
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the code interpreter tool call item."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.code_interpreter_call.in_progress"
    },
    "OpenAI.ResponseCodeInterpreterCallInterpretingEvent": {
      "type": "object",
      "description": "Emitted when the code interpreter is actively interpreting the code snippet.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response for which the code interpreter is interpreting code."
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the code interpreter tool call item."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.code_interpreter_call.interpreting"
    },
    "OpenAI.ResponseCompletedEvent": {
      "type": "object",
      "description": "Emitted when the model response is complete.",
      "properties": {
        "response": {
          "$ref": "#/definitions/OpenAI.Response",
          "description": "Properties of the completed response."
        }
      },
      "required": [
        "response"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.completed"
    },
    "OpenAI.ResponseContentPartAddedEvent": {
      "type": "object",
      "description": "Emitted when a new content part is added.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the output item that the content part was added to."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the content part was added to."
        },
        "content_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the content part that was added."
        },
        "part": {
          "$ref": "#/definitions/OpenAI.ItemContent",
          "description": "The content part that was added."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "content_index",
        "part"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.content_part.added"
    },
    "OpenAI.ResponseContentPartDoneEvent": {
      "type": "object",
      "description": "Emitted when a content part is done.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the output item that the content part was added to."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the content part was added to."
        },
        "content_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the content part that is done."
        },
        "part": {
          "$ref": "#/definitions/OpenAI.ItemContent",
          "description": "The content part that is done."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "content_index",
        "part"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.content_part.done"
    },
    "OpenAI.ResponseCreatedEvent": {
      "type": "object",
      "description": "An event that is emitted when a response is created.",
      "properties": {
        "response": {
          "$ref": "#/definitions/OpenAI.Response",
          "description": "The response that was created."
        }
      },
      "required": [
        "response"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.created"
    },
    "OpenAI.ResponseError": {
      "type": "object",
      "description": "An error object returned when the model fails to generate a Response.",
      "properties": {
        "code": {
          "$ref": "#/definitions/OpenAI.ResponseErrorCode"
        },
        "message": {
          "type": "string",
          "description": "A human-readable description of the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "OpenAI.ResponseErrorCode": {
      "type": "string",
      "description": "The error code for the response.",
      "enum": [
        "server_error",
        "rate_limit_exceeded",
        "invalid_prompt",
        "vector_store_timeout",
        "invalid_image",
        "invalid_image_format",
        "invalid_base64_image",
        "invalid_image_url",
        "image_too_large",
        "image_too_small",
        "image_parse_error",
        "image_content_policy_violation",
        "invalid_image_mode",
        "image_file_too_large",
        "unsupported_image_media_type",
        "empty_image_file",
        "failed_to_download_image",
        "image_file_not_found"
      ],
      "x-ms-enum": {
        "name": "ResponseErrorCode",
        "modelAsString": false
      }
    },
    "OpenAI.ResponseErrorEvent": {
      "type": "object",
      "description": "Emitted when an error occurs.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "x-nullable": true
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "param": {
          "type": "string",
          "description": "The error parameter.",
          "x-nullable": true
        }
      },
      "required": [
        "code",
        "message",
        "param"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "error"
    },
    "OpenAI.ResponseFailedEvent": {
      "type": "object",
      "description": "An event that is emitted when a response fails.",
      "properties": {
        "response": {
          "$ref": "#/definitions/OpenAI.Response",
          "description": "The response that failed."
        }
      },
      "required": [
        "response"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.failed"
    },
    "OpenAI.ResponseFileSearchCallCompletedEvent": {
      "type": "object",
      "description": "Emitted when a file search call is completed (results found).",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the file search call is initiated."
        },
        "item_id": {
          "type": "string",
          "description": "The ID of the output item that the file search call is initiated."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.file_search_call.completed"
    },
    "OpenAI.ResponseFileSearchCallInProgressEvent": {
      "type": "object",
      "description": "Emitted when a file search call is initiated.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the file search call is initiated."
        },
        "item_id": {
          "type": "string",
          "description": "The ID of the output item that the file search call is initiated."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.file_search_call.in_progress"
    },
    "OpenAI.ResponseFileSearchCallSearchingEvent": {
      "type": "object",
      "description": "Emitted when a file search is currently searching.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the file search call is searching."
        },
        "item_id": {
          "type": "string",
          "description": "The ID of the output item that the file search call is initiated."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.file_search_call.searching"
    },
    "OpenAI.ResponseFormatJsonSchemaSchema": {
      "type": "object",
      "description": "The schema for the response format, described as a JSON Schema object.\nLearn how to build JSON schemas [here](https://json-schema.org/).",
      "additionalProperties": {}
    },
    "OpenAI.ResponseFunctionCallArgumentsDeltaEvent": {
      "type": "object",
      "description": "Emitted when there is a partial function-call arguments delta.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the output item that the function-call arguments delta is added to."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the function-call arguments delta is added to."
        },
        "delta": {
          "type": "string",
          "description": "The function-call arguments delta that is added."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "delta"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.function_call_arguments.delta"
    },
    "OpenAI.ResponseFunctionCallArgumentsDoneEvent": {
      "type": "object",
      "description": "Emitted when function-call arguments are finalized.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the item."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item."
        },
        "arguments": {
          "type": "string",
          "description": "The function-call arguments."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "arguments"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.function_call_arguments.done"
    },
    "OpenAI.ResponseImageGenCallCompletedEvent": {
      "type": "object",
      "description": "Emitted when an image generation tool call has completed and the final image is available.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response's output array."
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the image generation item being processed."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.image_generation_call.completed"
    },
    "OpenAI.ResponseImageGenCallGeneratingEvent": {
      "type": "object",
      "description": "Emitted when an image generation tool call is actively generating an image (intermediate state).",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response's output array."
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the image generation item being processed."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.image_generation_call.generating"
    },
    "OpenAI.ResponseImageGenCallInProgressEvent": {
      "type": "object",
      "description": "Emitted when an image generation tool call is in progress.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response's output array."
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the image generation item being processed."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.image_generation_call.in_progress"
    },
    "OpenAI.ResponseImageGenCallPartialImageEvent": {
      "type": "object",
      "description": "Emitted when a partial image is available during image generation streaming.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response's output array."
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the image generation item being processed."
        },
        "partial_image_index": {
          "type": "integer",
          "format": "int32",
          "description": "0-based index for the partial image (backend is 1-based, but this is 0-based for the user)."
        },
        "partial_image_b64": {
          "type": "string",
          "description": "Base64-encoded partial image data, suitable for rendering as an image."
        }
      },
      "required": [
        "output_index",
        "item_id",
        "partial_image_index",
        "partial_image_b64"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.image_generation_call.partial_image"
    },
    "OpenAI.ResponseInProgressEvent": {
      "type": "object",
      "description": "Emitted when the response is in progress.",
      "properties": {
        "response": {
          "$ref": "#/definitions/OpenAI.Response",
          "description": "The response that is in progress."
        }
      },
      "required": [
        "response"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.in_progress"
    },
    "OpenAI.ResponseIncompleteEvent": {
      "type": "object",
      "description": "An event that is emitted when a response finishes as incomplete.",
      "properties": {
        "response": {
          "$ref": "#/definitions/OpenAI.Response",
          "description": "The response that was incomplete."
        }
      },
      "required": [
        "response"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.incomplete"
    },
    "OpenAI.ResponseMCPCallArgumentsDeltaEvent": {
      "type": "object",
      "description": "Emitted when there is a delta (partial update) to the arguments of an MCP tool call.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response's output array."
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the MCP tool call item being processed."
        },
        "delta": {
          "description": "The partial update to the arguments for the MCP tool call."
        }
      },
      "required": [
        "output_index",
        "item_id",
        "delta"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.mcp_call.arguments_delta"
    },
    "OpenAI.ResponseMCPCallArgumentsDoneEvent": {
      "type": "object",
      "description": "Emitted when the arguments for an MCP tool call are finalized.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response's output array."
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the MCP tool call item being processed."
        },
        "arguments": {
          "description": "The finalized arguments for the MCP tool call."
        }
      },
      "required": [
        "output_index",
        "item_id",
        "arguments"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.mcp_call.arguments_done"
    },
    "OpenAI.ResponseMCPCallCompletedEvent": {
      "type": "object",
      "description": "Emitted when an MCP  tool call has completed successfully.",
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.mcp_call.completed"
    },
    "OpenAI.ResponseMCPCallFailedEvent": {
      "type": "object",
      "description": "Emitted when an MCP  tool call has failed.",
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.mcp_call.failed"
    },
    "OpenAI.ResponseMCPCallInProgressEvent": {
      "type": "object",
      "description": "Emitted when an MCP  tool call is in progress.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response's output array."
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the MCP tool call item being processed."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.mcp_call.in_progress"
    },
    "OpenAI.ResponseMCPListToolsCompletedEvent": {
      "type": "object",
      "description": "Emitted when the list of available MCP tools has been successfully retrieved.",
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.mcp_list_tools.completed"
    },
    "OpenAI.ResponseMCPListToolsFailedEvent": {
      "type": "object",
      "description": "Emitted when the attempt to list available MCP tools has failed.",
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.mcp_list_tools.failed"
    },
    "OpenAI.ResponseMCPListToolsInProgressEvent": {
      "type": "object",
      "description": "Emitted when the system is in the process of retrieving the list of available MCP tools.",
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.mcp_list_tools.in_progress"
    },
    "OpenAI.ResponseOutputItemAddedEvent": {
      "type": "object",
      "description": "Emitted when a new output item is added.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that was added."
        },
        "item": {
          "$ref": "#/definitions/OpenAI.ItemResource",
          "description": "The output item that was added."
        }
      },
      "required": [
        "output_index",
        "item"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.output_item.added"
    },
    "OpenAI.ResponseOutputItemDoneEvent": {
      "type": "object",
      "description": "Emitted when an output item is marked done.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that was marked done."
        },
        "item": {
          "$ref": "#/definitions/OpenAI.ItemResource",
          "description": "The output item that was marked done."
        }
      },
      "required": [
        "output_index",
        "item"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.output_item.done"
    },
    "OpenAI.ResponsePromptVariables": {
      "type": "object",
      "description": "Optional map of values to substitute in for variables in your\nprompt. The substitution values can either be strings, or other\nResponse input types like images or files.",
      "additionalProperties": {
        "$ref": "#/definitions/OpenAI.ItemParam"
      },
      "x-oaiExpandable": true,
      "x-oaiTypeLabel": "map"
    },
    "OpenAI.ResponseQueuedEvent": {
      "type": "object",
      "description": "Emitted when a response is queued and waiting to be processed.",
      "properties": {
        "response": {
          "$ref": "#/definitions/OpenAI.Response",
          "description": "The full response object that is queued."
        }
      },
      "required": [
        "response"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.queued"
    },
    "OpenAI.ResponseReasoningDeltaEvent": {
      "type": "object",
      "description": "Emitted when there is a delta (partial update) to the reasoning content.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the item for which reasoning is being updated."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response's output array."
        },
        "content_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the reasoning content part within the output item."
        },
        "delta": {
          "description": "The partial update to the reasoning content."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "content_index",
        "delta"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.reasoning.delta"
    },
    "OpenAI.ResponseReasoningDoneEvent": {
      "type": "object",
      "description": "Emitted when the reasoning content is finalized for an item.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the item for which reasoning is finalized."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response's output array."
        },
        "content_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the reasoning content part within the output item."
        },
        "text": {
          "type": "string",
          "description": "The finalized reasoning text."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "content_index",
        "text"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.reasoning.done"
    },
    "OpenAI.ResponseReasoningSummaryDeltaEvent": {
      "type": "object",
      "description": "Emitted when there is a delta (partial update) to the reasoning summary content.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the item for which the reasoning summary is being updated."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response's output array."
        },
        "summary_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the summary part within the output item."
        },
        "delta": {
          "description": "The partial update to the reasoning summary content."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "summary_index",
        "delta"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.reasoning_summary.delta"
    },
    "OpenAI.ResponseReasoningSummaryDoneEvent": {
      "type": "object",
      "description": "Emitted when the reasoning summary content is finalized for an item.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The unique identifier of the item for which the reasoning summary is finalized."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item in the response's output array."
        },
        "summary_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the summary part within the output item."
        },
        "text": {
          "type": "string",
          "description": "The finalized reasoning summary text."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "summary_index",
        "text"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.reasoning_summary.done"
    },
    "OpenAI.ResponseReasoningSummaryPartAddedEvent": {
      "type": "object",
      "description": "Emitted when a new reasoning summary part is added.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the item this summary part is associated with."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item this summary part is associated with."
        },
        "summary_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the summary part within the reasoning summary."
        },
        "part": {
          "$ref": "#/definitions/OpenAI.ReasoningItemSummaryPart",
          "description": "The summary part that was added."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "summary_index",
        "part"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.reasoning_summary_part.added"
    },
    "OpenAI.ResponseReasoningSummaryPartDoneEvent": {
      "type": "object",
      "description": "Emitted when a reasoning summary part is completed.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the item this summary part is associated with."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item this summary part is associated with."
        },
        "summary_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the summary part within the reasoning summary."
        },
        "part": {
          "$ref": "#/definitions/OpenAI.ReasoningItemSummaryPart",
          "description": "The completed summary part."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "summary_index",
        "part"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.reasoning_summary_part.done"
    },
    "OpenAI.ResponseReasoningSummaryTextDeltaEvent": {
      "type": "object",
      "description": "Emitted when a delta is added to a reasoning summary text.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the item this summary text delta is associated with."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item this summary text delta is associated with."
        },
        "summary_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the summary part within the reasoning summary."
        },
        "delta": {
          "type": "string",
          "description": "The text delta that was added to the summary."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "summary_index",
        "delta"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.reasoning_summary_text.delta"
    },
    "OpenAI.ResponseReasoningSummaryTextDoneEvent": {
      "type": "object",
      "description": "Emitted when a reasoning summary text is completed.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the item this summary text is associated with."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item this summary text is associated with."
        },
        "summary_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the summary part within the reasoning summary."
        },
        "text": {
          "type": "string",
          "description": "The full text of the completed reasoning summary."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "summary_index",
        "text"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.reasoning_summary_text.done"
    },
    "OpenAI.ResponseRefusalDeltaEvent": {
      "type": "object",
      "description": "Emitted when there is a partial refusal text.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the output item that the refusal text is added to."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the refusal text is added to."
        },
        "content_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the content part that the refusal text is added to."
        },
        "delta": {
          "type": "string",
          "description": "The refusal text that is added."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "content_index",
        "delta"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.refusal.delta"
    },
    "OpenAI.ResponseRefusalDoneEvent": {
      "type": "object",
      "description": "Emitted when refusal text is finalized.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the output item that the refusal text is finalized."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the refusal text is finalized."
        },
        "content_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the content part that the refusal text is finalized."
        },
        "refusal": {
          "type": "string",
          "description": "The refusal text that is finalized."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "content_index",
        "refusal"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.refusal.done"
    },
    "OpenAI.ResponseStreamEvent": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.ResponseStreamEventType"
        },
        "sequence_number": {
          "type": "integer",
          "format": "int32",
          "description": "The sequence number for this event."
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "sequence_number"
      ]
    },
    "OpenAI.ResponseStreamEventType": {
      "type": "string",
      "enum": [
        "response.audio.delta",
        "response.audio.done",
        "response.audio_transcript.delta",
        "response.audio_transcript.done",
        "response.code_interpreter_call_code.delta",
        "response.code_interpreter_call_code.done",
        "response.code_interpreter_call.completed",
        "response.code_interpreter_call.in_progress",
        "response.code_interpreter_call.interpreting",
        "response.completed",
        "response.content_part.added",
        "response.content_part.done",
        "response.created",
        "error",
        "response.file_search_call.completed",
        "response.file_search_call.in_progress",
        "response.file_search_call.searching",
        "response.function_call_arguments.delta",
        "response.function_call_arguments.done",
        "response.in_progress",
        "response.failed",
        "response.incomplete",
        "response.output_item.added",
        "response.output_item.done",
        "response.refusal.delta",
        "response.refusal.done",
        "response.output_text.annotation.added",
        "response.output_text.delta",
        "response.output_text.done",
        "response.reasoning_summary_part.added",
        "response.reasoning_summary_part.done",
        "response.reasoning_summary_text.delta",
        "response.reasoning_summary_text.done",
        "response.web_search_call.completed",
        "response.web_search_call.in_progress",
        "response.web_search_call.searching",
        "response.image_generation_call.completed",
        "response.image_generation_call.generating",
        "response.image_generation_call.in_progress",
        "response.image_generation_call.partial_image",
        "response.mcp_call.arguments_delta",
        "response.mcp_call.arguments_done",
        "response.mcp_call.completed",
        "response.mcp_call.failed",
        "response.mcp_call.in_progress",
        "response.mcp_list_tools.completed",
        "response.mcp_list_tools.failed",
        "response.mcp_list_tools.in_progress",
        "response.queued",
        "response.reasoning.delta",
        "response.reasoning.done",
        "response.reasoning_summary.delta",
        "response.reasoning_summary.done"
      ],
      "x-ms-enum": {
        "name": "ResponseStreamEventType",
        "modelAsString": true,
        "values": [
          {
            "name": "response_audio_delta",
            "value": "response.audio.delta"
          },
          {
            "name": "response_audio_done",
            "value": "response.audio.done"
          },
          {
            "name": "response_audio_transcript_delta",
            "value": "response.audio_transcript.delta"
          },
          {
            "name": "response_audio_transcript_done",
            "value": "response.audio_transcript.done"
          },
          {
            "name": "response_code_interpreter_call_code_delta",
            "value": "response.code_interpreter_call_code.delta"
          },
          {
            "name": "response_code_interpreter_call_code_done",
            "value": "response.code_interpreter_call_code.done"
          },
          {
            "name": "response_code_interpreter_call_completed",
            "value": "response.code_interpreter_call.completed"
          },
          {
            "name": "response_code_interpreter_call_in_progress",
            "value": "response.code_interpreter_call.in_progress"
          },
          {
            "name": "response_code_interpreter_call_interpreting",
            "value": "response.code_interpreter_call.interpreting"
          },
          {
            "name": "response_completed",
            "value": "response.completed"
          },
          {
            "name": "response_content_part_added",
            "value": "response.content_part.added"
          },
          {
            "name": "response_content_part_done",
            "value": "response.content_part.done"
          },
          {
            "name": "response_created",
            "value": "response.created"
          },
          {
            "name": "error",
            "value": "error"
          },
          {
            "name": "response_file_search_call_completed",
            "value": "response.file_search_call.completed"
          },
          {
            "name": "response_file_search_call_in_progress",
            "value": "response.file_search_call.in_progress"
          },
          {
            "name": "response_file_search_call_searching",
            "value": "response.file_search_call.searching"
          },
          {
            "name": "response_function_call_arguments_delta",
            "value": "response.function_call_arguments.delta"
          },
          {
            "name": "response_function_call_arguments_done",
            "value": "response.function_call_arguments.done"
          },
          {
            "name": "response_in_progress",
            "value": "response.in_progress"
          },
          {
            "name": "response_failed",
            "value": "response.failed"
          },
          {
            "name": "response_incomplete",
            "value": "response.incomplete"
          },
          {
            "name": "response_output_item_added",
            "value": "response.output_item.added"
          },
          {
            "name": "response_output_item_done",
            "value": "response.output_item.done"
          },
          {
            "name": "response_refusal_delta",
            "value": "response.refusal.delta"
          },
          {
            "name": "response_refusal_done",
            "value": "response.refusal.done"
          },
          {
            "name": "response_output_text_annotation_added",
            "value": "response.output_text.annotation.added"
          },
          {
            "name": "response_output_text_delta",
            "value": "response.output_text.delta"
          },
          {
            "name": "response_output_text_done",
            "value": "response.output_text.done"
          },
          {
            "name": "response_reasoning_summary_part_added",
            "value": "response.reasoning_summary_part.added"
          },
          {
            "name": "response_reasoning_summary_part_done",
            "value": "response.reasoning_summary_part.done"
          },
          {
            "name": "response_reasoning_summary_text_delta",
            "value": "response.reasoning_summary_text.delta"
          },
          {
            "name": "response_reasoning_summary_text_done",
            "value": "response.reasoning_summary_text.done"
          },
          {
            "name": "response_web_search_call_completed",
            "value": "response.web_search_call.completed"
          },
          {
            "name": "response_web_search_call_in_progress",
            "value": "response.web_search_call.in_progress"
          },
          {
            "name": "response_web_search_call_searching",
            "value": "response.web_search_call.searching"
          },
          {
            "name": "response_image_generation_call_completed",
            "value": "response.image_generation_call.completed"
          },
          {
            "name": "response_image_generation_call_generating",
            "value": "response.image_generation_call.generating"
          },
          {
            "name": "response_image_generation_call_in_progress",
            "value": "response.image_generation_call.in_progress"
          },
          {
            "name": "response_image_generation_call_partial_image",
            "value": "response.image_generation_call.partial_image"
          },
          {
            "name": "response_mcp_call_arguments_delta",
            "value": "response.mcp_call.arguments_delta"
          },
          {
            "name": "response_mcp_call_arguments_done",
            "value": "response.mcp_call.arguments_done"
          },
          {
            "name": "response_mcp_call_completed",
            "value": "response.mcp_call.completed"
          },
          {
            "name": "response_mcp_call_failed",
            "value": "response.mcp_call.failed"
          },
          {
            "name": "response_mcp_call_in_progress",
            "value": "response.mcp_call.in_progress"
          },
          {
            "name": "response_mcp_list_tools_completed",
            "value": "response.mcp_list_tools.completed"
          },
          {
            "name": "response_mcp_list_tools_failed",
            "value": "response.mcp_list_tools.failed"
          },
          {
            "name": "response_mcp_list_tools_in_progress",
            "value": "response.mcp_list_tools.in_progress"
          },
          {
            "name": "response_queued",
            "value": "response.queued"
          },
          {
            "name": "response_reasoning_delta",
            "value": "response.reasoning.delta"
          },
          {
            "name": "response_reasoning_done",
            "value": "response.reasoning.done"
          },
          {
            "name": "response_reasoning_summary_delta",
            "value": "response.reasoning_summary.delta"
          },
          {
            "name": "response_reasoning_summary_done",
            "value": "response.reasoning_summary.done"
          }
        ]
      }
    },
    "OpenAI.ResponseTextDeltaEvent": {
      "type": "object",
      "description": "Emitted when there is an additional text delta.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the output item that the text delta was added to."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the text delta was added to."
        },
        "content_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the content part that the text delta was added to."
        },
        "delta": {
          "type": "string",
          "description": "The text delta that was added."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "content_index",
        "delta"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.output_text.delta"
    },
    "OpenAI.ResponseTextDoneEvent": {
      "type": "object",
      "description": "Emitted when text content is finalized.",
      "properties": {
        "item_id": {
          "type": "string",
          "description": "The ID of the output item that the text content is finalized."
        },
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the text content is finalized."
        },
        "content_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the content part that the text content is finalized."
        },
        "text": {
          "type": "string",
          "description": "The text content that is finalized."
        }
      },
      "required": [
        "item_id",
        "output_index",
        "content_index",
        "text"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.output_text.done"
    },
    "OpenAI.ResponseTextFormatConfiguration": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.ResponseTextFormatConfigurationType"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.ResponseTextFormatConfigurationJsonObject": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseTextFormatConfiguration"
        }
      ],
      "x-ms-discriminator-value": "json_object"
    },
    "OpenAI.ResponseTextFormatConfigurationJsonSchema": {
      "type": "object",
      "description": "JSON Schema response format. Used to generate structured JSON responses.\nLearn more about [Structured Outputs](/docs/guides/structured-outputs).",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of what the response format is for, used by the model to\ndetermine how to respond in the format."
        },
        "name": {
          "type": "string",
          "description": "The name of the response format. Must be a-z, A-Z, 0-9, or contain\nunderscores and dashes, with a maximum length of 64."
        },
        "schema": {
          "$ref": "#/definitions/OpenAI.ResponseFormatJsonSchemaSchema"
        },
        "strict": {
          "type": "boolean",
          "description": "Whether to enable strict schema adherence when generating the output.\nIf set to true, the model will always follow the exact schema defined\nin the `schema` field. Only a subset of JSON Schema is supported when\n`strict` is `true`. To learn more, read the [Structured Outputs\nguide](/docs/guides/structured-outputs).",
          "default": false,
          "x-nullable": true
        }
      },
      "required": [
        "name",
        "schema"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseTextFormatConfiguration"
        }
      ],
      "x-ms-discriminator-value": "json_schema"
    },
    "OpenAI.ResponseTextFormatConfigurationText": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseTextFormatConfiguration"
        }
      ],
      "x-ms-discriminator-value": "text"
    },
    "OpenAI.ResponseTextFormatConfigurationType": {
      "type": "string",
      "description": "An object specifying the format that the model must output.\n\nConfiguring `{ \"type\": \"json_schema\" }` enables Structured Outputs,\nwhich ensures the model will match your supplied JSON schema. Learn more in the\n[Structured Outputs guide](/docs/guides/structured-outputs).\n\nThe default format is `{ \"type\": \"text\" }` with no additional options.\n\n**Not recommended for gpt-4o and newer models:**\n\nSetting to `{ \"type\": \"json_object\" }` enables the older JSON mode, which\nensures the message the model generates is valid JSON. Using `json_schema`\nis preferred for models that support it.",
      "enum": [
        "text",
        "json_schema",
        "json_object"
      ],
      "x-ms-enum": {
        "name": "ResponseTextFormatConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "name": "text",
            "value": "text"
          },
          {
            "name": "json_schema",
            "value": "json_schema"
          },
          {
            "name": "json_object",
            "value": "json_object"
          }
        ]
      }
    },
    "OpenAI.ResponseUsage": {
      "type": "object",
      "description": "Represents token usage details including input tokens, output tokens,\na breakdown of output tokens, and the total tokens used.",
      "properties": {
        "input_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The number of input tokens."
        },
        "input_tokens_details": {
          "type": "object",
          "description": "A detailed breakdown of the input tokens.",
          "properties": {
            "cached_tokens": {
              "type": "integer",
              "format": "int32",
              "description": "The number of tokens that were retrieved from the cache.\n[More on prompt caching](/docs/guides/prompt-caching)."
            }
          },
          "required": [
            "cached_tokens"
          ]
        },
        "output_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The number of output tokens."
        },
        "output_tokens_details": {
          "type": "object",
          "description": "A detailed breakdown of the output tokens.",
          "properties": {
            "reasoning_tokens": {
              "type": "integer",
              "format": "int32",
              "description": "The number of reasoning tokens."
            }
          },
          "required": [
            "reasoning_tokens"
          ]
        },
        "total_tokens": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of tokens used."
        }
      },
      "required": [
        "input_tokens",
        "input_tokens_details",
        "output_tokens",
        "output_tokens_details",
        "total_tokens"
      ]
    },
    "OpenAI.ResponseWebSearchCallCompletedEvent": {
      "type": "object",
      "description": "Note: web_search is not yet available via Azure OpenAI.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the web search call is associated with."
        },
        "item_id": {
          "type": "string",
          "description": "Unique ID for the output item associated with the web search call."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.web_search_call.completed"
    },
    "OpenAI.ResponseWebSearchCallInProgressEvent": {
      "type": "object",
      "description": "Note: web_search is not yet available via Azure OpenAI.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the web search call is associated with."
        },
        "item_id": {
          "type": "string",
          "description": "Unique ID for the output item associated with the web search call."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.web_search_call.in_progress"
    },
    "OpenAI.ResponseWebSearchCallSearchingEvent": {
      "type": "object",
      "description": "Note: web_search is not yet available via Azure OpenAI.",
      "properties": {
        "output_index": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output item that the web search call is associated with."
        },
        "item_id": {
          "type": "string",
          "description": "Unique ID for the output item associated with the web search call."
        }
      },
      "required": [
        "output_index",
        "item_id"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponseStreamEvent"
        }
      ],
      "x-ms-discriminator-value": "response.web_search_call.searching"
    },
    "OpenAI.ResponsesAssistantMessageItemParam": {
      "type": "object",
      "description": "A message parameter item with the `assistant` role.",
      "properties": {
        "content": {
          "description": "The content associated with the message."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponsesMessageItemParam"
        }
      ],
      "x-ms-discriminator-value": "assistant"
    },
    "OpenAI.ResponsesAssistantMessageItemResource": {
      "type": "object",
      "description": "A message resource item with the `assistant` role.",
      "properties": {
        "content": {
          "type": "array",
          "description": "The content associated with the message.",
          "items": {
            "$ref": "#/definitions/OpenAI.ItemContent"
          }
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponsesMessageItemResource"
        }
      ],
      "x-ms-discriminator-value": "assistant"
    },
    "OpenAI.ResponsesDeveloperMessageItemParam": {
      "type": "object",
      "description": "A message parameter item with the `developer` role.",
      "properties": {
        "content": {
          "description": "The content associated with the message."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponsesMessageItemParam"
        }
      ],
      "x-ms-discriminator-value": "developer"
    },
    "OpenAI.ResponsesDeveloperMessageItemResource": {
      "type": "object",
      "description": "A message resource item with the `developer` role.",
      "properties": {
        "content": {
          "type": "array",
          "description": "The content associated with the message.",
          "items": {
            "$ref": "#/definitions/OpenAI.ItemContent"
          }
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponsesMessageItemResource"
        }
      ],
      "x-ms-discriminator-value": "developer"
    },
    "OpenAI.ResponsesMessageItemParam": {
      "type": "object",
      "description": "A response message item, representing a role and content, as provided as client request parameters.",
      "properties": {
        "role": {
          "$ref": "#/definitions/OpenAI.ResponsesMessageRole",
          "description": "The role associated with the message."
        }
      },
      "discriminator": "role",
      "required": [
        "role"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "message"
    },
    "OpenAI.ResponsesMessageItemResource": {
      "type": "object",
      "description": "A response message resource item, representing a role and content, as provided on service responses.",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the item. One of `in_progress`, `completed`, or\n`incomplete`. Populated when items are returned via API.",
          "enum": [
            "in_progress",
            "completed",
            "incomplete"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "role": {
          "$ref": "#/definitions/OpenAI.ResponsesMessageRole",
          "description": "The role associated with the message."
        }
      },
      "discriminator": "role",
      "required": [
        "status",
        "role"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "message"
    },
    "OpenAI.ResponsesMessageRole": {
      "type": "string",
      "description": "The collection of valid roles for responses message items.",
      "enum": [
        "system",
        "developer",
        "user",
        "assistant"
      ],
      "x-ms-enum": {
        "name": "ResponsesMessageRole",
        "modelAsString": false,
        "values": [
          {
            "name": "system",
            "value": "system"
          },
          {
            "name": "developer",
            "value": "developer"
          },
          {
            "name": "user",
            "value": "user"
          },
          {
            "name": "assistant",
            "value": "assistant"
          }
        ]
      }
    },
    "OpenAI.ResponsesSystemMessageItemParam": {
      "type": "object",
      "description": "A message parameter item with the `system` role.",
      "properties": {
        "content": {
          "description": "The content associated with the message."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponsesMessageItemParam"
        }
      ],
      "x-ms-discriminator-value": "system"
    },
    "OpenAI.ResponsesSystemMessageItemResource": {
      "type": "object",
      "description": "A message resource item with the `system` role.",
      "properties": {
        "content": {
          "type": "array",
          "description": "The content associated with the message.",
          "items": {
            "$ref": "#/definitions/OpenAI.ItemContent"
          }
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponsesMessageItemResource"
        }
      ],
      "x-ms-discriminator-value": "system"
    },
    "OpenAI.ResponsesUserMessageItemParam": {
      "type": "object",
      "description": "A message parameter item with the `user` role.",
      "properties": {
        "content": {
          "description": "The content associated with the message."
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponsesMessageItemParam"
        }
      ],
      "x-ms-discriminator-value": "user"
    },
    "OpenAI.ResponsesUserMessageItemResource": {
      "type": "object",
      "description": "A message resource item with the `user` role.",
      "properties": {
        "content": {
          "type": "array",
          "description": "The content associated with the message.",
          "items": {
            "$ref": "#/definitions/OpenAI.ItemContent"
          }
        }
      },
      "required": [
        "content"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ResponsesMessageItemResource"
        }
      ],
      "x-ms-discriminator-value": "user"
    },
    "OpenAI.ServiceTier": {
      "type": "string",
      "description": "Specifies the processing type used for serving the request.\n  - If set to 'auto', then the request will be processed with the service tier configured in the Project settings. Unless otherwise configured, the Project will use 'default'.\n  - If set to 'default', then the request will be processed with the standard pricing and performance for the selected model.\n  - If set to '[flex](/docs/guides/flex-processing)' or 'priority', then the request will be processed with the corresponding service tier. [Contact sales](https://openai.com/contact-sales) to learn more about Priority processing.\n  - When not set, the default behavior is 'auto'.\n\n  When the `service_tier` parameter is set, the response body will include the `service_tier` value based on the processing mode actually used to serve the request. This response value may be different from the value set in the parameter.",
      "enum": [
        "auto",
        "default",
        "flex",
        "scale",
        "priority"
      ],
      "x-ms-enum": {
        "name": "ServiceTier",
        "modelAsString": false
      }
    },
    "OpenAI.Tool": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.ToolType"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.ToolType": {
      "type": "string",
      "description": "A tool that can be used to generate a response.",
      "enum": [
        "file_search",
        "function",
        "computer_use_preview",
        "web_search_preview",
        "mcp",
        "code_interpreter",
        "image_generation",
        "local_shell",
        "bing_grounding",
        "browser_automation_preview",
        "fabric_dataagent_preview",
        "sharepoint_grounding_preview",
        "azure_ai_search",
        "openapi",
        "bing_custom_search_preview",
        "capture_structured_outputs",
        "a2a_preview",
        "azure_function",
        "memory_search"
      ],
      "x-ms-enum": {
        "name": "ToolType",
        "modelAsString": true,
        "values": [
          {
            "name": "file_search",
            "value": "file_search"
          },
          {
            "name": "function",
            "value": "function"
          },
          {
            "name": "computer_use_preview",
            "value": "computer_use_preview"
          },
          {
            "name": "web_search_preview",
            "value": "web_search_preview"
          },
          {
            "name": "mcp",
            "value": "mcp"
          },
          {
            "name": "code_interpreter",
            "value": "code_interpreter"
          },
          {
            "name": "image_generation",
            "value": "image_generation"
          },
          {
            "name": "local_shell",
            "value": "local_shell"
          },
          {
            "name": "bing_grounding",
            "value": "bing_grounding"
          },
          {
            "name": "browser_automation_preview",
            "value": "browser_automation_preview"
          },
          {
            "name": "fabric_dataagent_preview",
            "value": "fabric_dataagent_preview"
          },
          {
            "name": "sharepoint_grounding_preview",
            "value": "sharepoint_grounding_preview"
          },
          {
            "name": "azure_ai_search",
            "value": "azure_ai_search"
          },
          {
            "name": "openapi",
            "value": "openapi"
          },
          {
            "name": "bing_custom_search_preview",
            "value": "bing_custom_search_preview"
          },
          {
            "name": "capture_structured_outputs",
            "value": "capture_structured_outputs"
          },
          {
            "name": "a2a_preview",
            "value": "a2a_preview"
          },
          {
            "name": "azure_function",
            "value": "azure_function"
          },
          {
            "name": "memory_search",
            "value": "memory_search"
          }
        ]
      }
    },
    "OpenAI.TopLogProb": {
      "type": "object",
      "description": "The top log probability of a token.",
      "properties": {
        "token": {
          "type": "string"
        },
        "logprob": {
          "type": "number",
          "format": "float"
        },
        "bytes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "token",
        "logprob",
        "bytes"
      ]
    },
    "OpenAI.UpdateConversationRequest": {
      "type": "object",
      "description": "Update a conversation",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        }
      }
    },
    "OpenAI.VectorStoreFileAttributes": {
      "type": "object",
      "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard. Keys are strings\nwith a maximum length of 64 characters. Values are strings with a maximum\nlength of 512 characters, booleans, or numbers.",
      "additionalProperties": {},
      "x-oaiTypeLabel": "map"
    },
    "OpenAI.WebSearchAction": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAI.WebSearchActionType"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenAI.WebSearchActionFind": {
      "type": "object",
      "description": "Action type \"find\": Searches for a pattern within a loaded page.",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The URL of the page searched for the pattern."
        },
        "pattern": {
          "type": "string",
          "description": "The pattern or text to search for within the page."
        }
      },
      "required": [
        "url",
        "pattern"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.WebSearchAction"
        }
      ],
      "x-ms-discriminator-value": "find"
    },
    "OpenAI.WebSearchActionOpenPage": {
      "type": "object",
      "description": "Action type \"open_page\" - Opens a specific URL from search results.",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The URL opened by the model."
        }
      },
      "required": [
        "url"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.WebSearchAction"
        }
      ],
      "x-ms-discriminator-value": "open_page"
    },
    "OpenAI.WebSearchActionSearch": {
      "type": "object",
      "description": "Action type \"search\" - Performs a web search query.",
      "properties": {
        "query": {
          "type": "string",
          "description": "The search query."
        }
      },
      "required": [
        "query"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.WebSearchAction"
        }
      ],
      "x-ms-discriminator-value": "search"
    },
    "OpenAI.WebSearchActionType": {
      "type": "string",
      "enum": [
        "search",
        "open_page",
        "find"
      ],
      "x-ms-enum": {
        "name": "WebSearchActionType",
        "modelAsString": false,
        "values": [
          {
            "name": "search",
            "value": "search"
          },
          {
            "name": "open_page",
            "value": "open_page"
          },
          {
            "name": "find",
            "value": "find"
          }
        ]
      }
    },
    "OpenAI.WebSearchPreviewTool": {
      "type": "object",
      "description": "Note: web_search is not yet available via Azure OpenAI.",
      "properties": {
        "user_location": {
          "$ref": "#/definitions/OpenAI.Location",
          "description": "The user's location.",
          "x-nullable": true
        },
        "search_context_size": {
          "type": "string",
          "description": "High level guidance for the amount of context window space to use for the search. One of `low`, `medium`, or `high`. `medium` is the default.",
          "enum": [
            "low",
            "medium",
            "high"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "web_search_preview"
    },
    "OpenAI.WebSearchToolCallItemParam": {
      "type": "object",
      "description": "The results of a web search tool call. See the\n[web search guide](/docs/guides/tools-web-search) for more information.\n",
      "properties": {
        "action": {
          "$ref": "#/definitions/OpenAI.WebSearchAction",
          "description": "An object describing the specific action taken in this web search call.\nIncludes details on how the model used the web (search, open_page, find)."
        }
      },
      "required": [
        "action"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemParam"
        }
      ],
      "x-ms-discriminator-value": "web_search_call"
    },
    "OpenAI.WebSearchToolCallItemResource": {
      "type": "object",
      "description": "The results of a web search tool call. See the\n[web search guide](/docs/guides/tools-web-search) for more information.\n",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the web search tool call.",
          "enum": [
            "in_progress",
            "searching",
            "completed",
            "failed"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "action": {
          "$ref": "#/definitions/OpenAI.WebSearchAction",
          "description": "An object describing the specific action taken in this web search call.\nIncludes details on how the model used the web (search, open_page, find)."
        }
      },
      "required": [
        "status",
        "action"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "web_search_call"
    },
    "OpenAI.integer": {
      "type": "integer",
      "format": "int64"
    },
    "OpenAI.numeric": {
      "type": "number",
      "format": "double"
    },
    "OpenApiAgentTool": {
      "type": "object",
      "description": "The input definition information for an OpenAPI tool as used to configure an agent.",
      "properties": {
        "openapi": {
          "$ref": "#/definitions/OpenApiFunctionDefinition",
          "description": "The openapi function definition."
        }
      },
      "required": [
        "openapi"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "openapi"
    },
    "OpenApiAnonymousAuthDetails": {
      "type": "object",
      "description": "Security details for OpenApi anonymous authentication",
      "allOf": [
        {
          "$ref": "#/definitions/OpenApiAuthDetails"
        }
      ],
      "x-ms-discriminator-value": "anonymous"
    },
    "OpenApiAuthDetails": {
      "type": "object",
      "description": "authentication details for OpenApiFunctionDefinition",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenApiAuthType",
          "description": "The type of authentication, must be anonymous/project_connection/managed_identity"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "OpenApiAuthType": {
      "type": "string",
      "description": "Authentication type for OpenApi endpoint. Allowed types are:\n- Anonymous (no authentication required)\n- Project Connection (requires project_connection_id to endpoint, as setup in AI Foundry)\n- Managed_Identity (requires audience for identity based auth)",
      "enum": [
        "anonymous",
        "project_connection",
        "managed_identity"
      ],
      "x-ms-enum": {
        "name": "OpenApiAuthType",
        "modelAsString": true,
        "values": [
          {
            "name": "anonymous",
            "value": "anonymous"
          },
          {
            "name": "project_connection",
            "value": "project_connection"
          },
          {
            "name": "managedIdentity",
            "value": "managed_identity"
          }
        ]
      }
    },
    "OpenApiFunctionDefinition": {
      "type": "object",
      "description": "The input definition information for an openapi function.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the function to be called."
        },
        "description": {
          "type": "string",
          "description": "A description of what the function does, used by the model to choose when and how to call the function."
        },
        "spec": {
          "description": "The openapi function shape, described as a JSON Schema object."
        },
        "auth": {
          "$ref": "#/definitions/OpenApiAuthDetails",
          "description": "Open API authentication details"
        },
        "default_params": {
          "type": "array",
          "description": "List of OpenAPI spec parameters that will use user-provided defaults",
          "items": {
            "type": "string"
          }
        },
        "functions": {
          "type": "array",
          "description": "List of function definitions used by OpenApi tool",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the function to be called."
              },
              "description": {
                "type": "string",
                "description": "A description of what the function does, used by the model to choose when and how to call the function."
              },
              "parameters": {
                "description": "The parameters the functions accepts, described as a JSON Schema object."
              }
            },
            "required": [
              "name",
              "parameters"
            ]
          }
        }
      },
      "required": [
        "name",
        "spec",
        "auth"
      ]
    },
    "OpenApiManagedAuthDetails": {
      "type": "object",
      "description": "Security details for OpenApi managed_identity authentication",
      "properties": {
        "security_scheme": {
          "$ref": "#/definitions/OpenApiManagedSecurityScheme",
          "description": "Connection auth security details"
        }
      },
      "required": [
        "security_scheme"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenApiAuthDetails"
        }
      ],
      "x-ms-discriminator-value": "managed_identity"
    },
    "OpenApiManagedSecurityScheme": {
      "type": "object",
      "description": "Security scheme for OpenApi managed_identity authentication",
      "properties": {
        "audience": {
          "type": "string",
          "description": "Authentication scope for managed_identity auth type"
        }
      },
      "required": [
        "audience"
      ]
    },
    "OpenApiProjectConnectionAuthDetails": {
      "type": "object",
      "description": "Security details for OpenApi project connection authentication",
      "properties": {
        "security_scheme": {
          "$ref": "#/definitions/OpenApiProjectConnectionSecurityScheme",
          "description": "Project connection auth security details"
        }
      },
      "required": [
        "security_scheme"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenApiAuthDetails"
        }
      ],
      "x-ms-discriminator-value": "project_connection"
    },
    "OpenApiProjectConnectionSecurityScheme": {
      "type": "object",
      "description": "Security scheme for OpenApi managed_identity authentication",
      "properties": {
        "project_connection_id": {
          "type": "string",
          "description": "Project connection id for Project Connection auth type"
        }
      },
      "required": [
        "project_connection_id"
      ]
    },
    "PagedConnection": {
      "type": "object",
      "description": "Paged collection of Connection items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Connection items on this page",
          "items": {
            "$ref": "#/definitions/Connection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedDatasetVersion": {
      "type": "object",
      "description": "Paged collection of DatasetVersion items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DatasetVersion items on this page",
          "items": {
            "$ref": "#/definitions/DatasetVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedDeployment": {
      "type": "object",
      "description": "Paged collection of Deployment items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Deployment items on this page",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEvaluationRule": {
      "type": "object",
      "description": "Paged collection of EvaluationRule items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EvaluationRule items on this page",
          "items": {
            "$ref": "#/definitions/EvaluationRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEvaluationTaxonomy": {
      "type": "object",
      "description": "Paged collection of EvaluationTaxonomy items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EvaluationTaxonomy items on this page",
          "items": {
            "$ref": "#/definitions/EvaluationTaxonomy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEvaluatorVersion": {
      "type": "object",
      "description": "Paged collection of EvaluatorVersion items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EvaluatorVersion items on this page",
          "items": {
            "$ref": "#/definitions/EvaluatorVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedIndex": {
      "type": "object",
      "description": "Paged collection of Index items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Index items on this page",
          "items": {
            "$ref": "#/definitions/Index"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedInsight": {
      "type": "object",
      "description": "Paged collection of Insight items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Insight items on this page",
          "items": {
            "$ref": "#/definitions/Insight"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedRedTeam": {
      "type": "object",
      "description": "Paged collection of RedTeam items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RedTeam items on this page",
          "items": {
            "$ref": "#/definitions/RedTeam"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedSchedule": {
      "type": "object",
      "description": "Paged collection of Schedule items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Schedule items on this page",
          "items": {
            "$ref": "#/definitions/Schedule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedScheduleRun": {
      "type": "object",
      "description": "Paged collection of ScheduleRun items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScheduleRun items on this page",
          "items": {
            "$ref": "#/definitions/ScheduleRun"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PendingUploadRequest": {
      "type": "object",
      "description": "Represents a request for a pending upload.",
      "properties": {
        "pendingUploadId": {
          "type": "string",
          "description": "If PendingUploadId is not provided, a random GUID will be used."
        },
        "connectionName": {
          "type": "string",
          "description": "Azure Storage Account connection name to use for generating temporary SAS token"
        },
        "pendingUploadType": {
          "type": "string",
          "description": "BlobReference is the only supported type.",
          "enum": [
            "BlobReference"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "pendingUploadType"
      ]
    },
    "PendingUploadResponse": {
      "type": "object",
      "description": "Represents the response for a pending upload request",
      "properties": {
        "blobReference": {
          "$ref": "#/definitions/BlobReference",
          "description": "Container-level read, write, list SAS."
        },
        "pendingUploadId": {
          "type": "string",
          "description": "ID for this upload request."
        },
        "version": {
          "type": "string",
          "description": "Version of asset to be created if user did not specify version when initially creating upload"
        },
        "pendingUploadType": {
          "type": "string",
          "description": "BlobReference is the only supported type",
          "enum": [
            "BlobReference"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "blobReference",
        "pendingUploadId",
        "pendingUploadType"
      ]
    },
    "PromptAgentDefinition": {
      "type": "object",
      "description": "The prompt agent definition",
      "properties": {
        "model": {
          "type": "string",
          "description": "The model deployment to use for this agent."
        },
        "instructions": {
          "type": "string",
          "description": "A system (or developer) message inserted into the model's context.",
          "x-nullable": true
        },
        "temperature": {
          "type": "number",
          "format": "float",
          "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\nWe generally recommend altering this or `top_p` but not both.",
          "default": 1,
          "x-nullable": true
        },
        "top_p": {
          "type": "number",
          "format": "float",
          "description": "An alternative to sampling with temperature, called nucleus sampling,\nwhere the model considers the results of the tokens with top_p probability\nmass. So 0.1 means only the tokens comprising the top 10% probability mass\nare considered.\n\nWe generally recommend altering this or `temperature` but not both.",
          "default": 1,
          "x-nullable": true
        },
        "reasoning": {
          "$ref": "#/definitions/OpenAI.Reasoning",
          "x-nullable": true
        },
        "tools": {
          "type": "array",
          "description": "An array of tools the model may call while generating a response. You\ncan specify which tool to use by setting the `tool_choice` parameter.",
          "items": {
            "$ref": "#/definitions/OpenAI.Tool"
          }
        },
        "text": {
          "type": "object",
          "description": "Configuration options for a text response from the model. Can be plain text or structured JSON data.",
          "properties": {
            "format": {
              "$ref": "#/definitions/OpenAI.ResponseTextFormatConfiguration"
            }
          }
        },
        "structured_inputs": {
          "type": "object",
          "description": "Set of structured inputs that can participate in prompt template substitution or tool argument bindings.",
          "additionalProperties": {
            "$ref": "#/definitions/StructuredInputDefinition"
          }
        }
      },
      "required": [
        "model"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AgentDefinition"
        }
      ],
      "x-ms-discriminator-value": "prompt"
    },
    "PromptBasedEvaluatorDefinition": {
      "type": "object",
      "description": "Prompt-based evaluator",
      "properties": {
        "prompt_text": {
          "type": "string",
          "description": "The prompt text used for evaluation"
        }
      },
      "required": [
        "prompt_text"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EvaluatorDefinition"
        }
      ],
      "x-ms-discriminator-value": "prompt"
    },
    "ProtocolVersionRecord": {
      "type": "object",
      "description": "A record mapping for a single protocol and its version.",
      "properties": {
        "protocol": {
          "$ref": "#/definitions/AgentProtocol",
          "description": "The protocol type."
        },
        "version": {
          "type": "string",
          "description": "The version string for the protocol, e.g. 'v0.1.1'."
        }
      },
      "required": [
        "protocol",
        "version"
      ]
    },
    "RaiConfig": {
      "type": "object",
      "description": "Configuration for Responsible AI (RAI) content filtering and safety features.",
      "properties": {
        "rai_policy_name": {
          "type": "string",
          "description": "The name of the RAI policy to apply."
        }
      },
      "required": [
        "rai_policy_name"
      ]
    },
    "RecurrenceSchedule": {
      "type": "object",
      "description": "Recurrence schedule model.",
      "properties": {
        "type": {
          "$ref": "#/definitions/RecurrenceType",
          "description": "Recurrence type for the recurrence schedule."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "RecurrenceTrigger": {
      "type": "object",
      "description": "Recurrence based trigger.",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Start time for the recurrence schedule in ISO 8601 format."
        },
        "endTime": {
          "type": "string",
          "description": "End time for the recurrence schedule in ISO 8601 format."
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone for the recurrence schedule.",
          "default": "UTC"
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "Interval for the recurrence schedule."
        },
        "schedule": {
          "$ref": "#/definitions/RecurrenceSchedule",
          "description": "Recurrence schedule for the recurrence trigger."
        }
      },
      "required": [
        "interval",
        "schedule"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "x-ms-discriminator-value": "Recurrence"
    },
    "RecurrenceType": {
      "type": "string",
      "description": "Recurrence type.",
      "enum": [
        "Hourly",
        "Daily",
        "Weekly",
        "Monthly"
      ],
      "x-ms-enum": {
        "name": "RecurrenceType",
        "modelAsString": true,
        "values": [
          {
            "name": "Hourly",
            "value": "Hourly",
            "description": "Hourly recurrence pattern."
          },
          {
            "name": "Daily",
            "value": "Daily",
            "description": "Daily recurrence pattern."
          },
          {
            "name": "Weekly",
            "value": "Weekly",
            "description": "Weekly recurrence pattern."
          },
          {
            "name": "Monthly",
            "value": "Monthly",
            "description": "Monthly recurrence pattern."
          }
        ]
      }
    },
    "RedTeam": {
      "type": "object",
      "description": "Red team details.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the red team run.",
          "readOnly": true,
          "x-ms-client-name": "name"
        },
        "displayName": {
          "type": "string",
          "description": "Name of the red-team run."
        },
        "numTurns": {
          "type": "integer",
          "format": "int32",
          "description": "Number of simulation rounds."
        },
        "attackStrategies": {
          "type": "array",
          "description": "List of attack strategies or nested lists of attack strategies.",
          "items": {
            "$ref": "#/definitions/AttackStrategy"
          }
        },
        "simulationOnly": {
          "type": "boolean",
          "description": "Simulation-only or Simulation + Evaluation. Default false, if true the scan outputs conversation not evaluation result.",
          "default": false
        },
        "riskCategories": {
          "type": "array",
          "description": "List of risk categories to generate attack objectives for.",
          "items": {
            "$ref": "#/definitions/RiskCategory"
          }
        },
        "applicationScenario": {
          "type": "string",
          "description": "Application scenario for the red team operation, to generate scenario specific attacks."
        },
        "tags": {
          "type": "object",
          "description": "Red team's tags. Unlike properties, tags are fully mutable.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Red team's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "description": "Status of the red-team. It is set by service and is read-only.",
          "readOnly": true
        },
        "target": {
          "$ref": "#/definitions/TargetConfig",
          "description": "Target configuration for the red-team run."
        }
      },
      "required": [
        "id",
        "target"
      ]
    },
    "RiskCategory": {
      "type": "string",
      "description": "Risk category for the attack objective.",
      "enum": [
        "HateUnfairness",
        "Violence",
        "Sexual",
        "SelfHarm"
      ],
      "x-ms-enum": {
        "name": "RiskCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "HateUnfairness",
            "value": "HateUnfairness",
            "description": "Represents content related to hate or unfairness."
          },
          {
            "name": "Violence",
            "value": "Violence",
            "description": "Represents content related to violence."
          },
          {
            "name": "Sexual",
            "value": "Sexual",
            "description": "Represents content of a sexual nature."
          },
          {
            "name": "SelfHarm",
            "value": "SelfHarm",
            "description": "Represents content related to self-harm."
          }
        ]
      }
    },
    "SASCredentials": {
      "type": "object",
      "description": "Shared Access Signature (SAS) credential definition",
      "properties": {
        "SAS": {
          "type": "string",
          "description": "SAS token",
          "readOnly": true,
          "x-ms-client-name": "sasToken"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseCredentials"
        }
      ],
      "x-ms-discriminator-value": "SAS"
    },
    "SampleType": {
      "type": "string",
      "description": "The type of sample used in the analysis.",
      "enum": [
        "EvaluationResultSample"
      ],
      "x-ms-enum": {
        "name": "SampleType",
        "modelAsString": true,
        "values": [
          {
            "name": "EvaluationResultSample",
            "value": "EvaluationResultSample",
            "description": "A sample from the evaluation result."
          }
        ]
      }
    },
    "SasCredential": {
      "type": "object",
      "description": "SAS Credential definition",
      "properties": {
        "sasUri": {
          "type": "string",
          "description": "SAS uri",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of credential",
          "enum": [
            "SAS"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "readOnly": true
        }
      },
      "required": [
        "sasUri",
        "type"
      ]
    },
    "Schedule": {
      "type": "object",
      "description": "Schedule model.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the schedule.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Name of the schedule."
        },
        "description": {
          "type": "string",
          "description": "Description of the schedule."
        },
        "enabled": {
          "type": "boolean",
          "description": "Enabled status of the schedule."
        },
        "provisioningStatus": {
          "$ref": "#/definitions/ScheduleProvisioningStatus",
          "description": "Provisioning status of the schedule.",
          "readOnly": true
        },
        "trigger": {
          "$ref": "#/definitions/Trigger",
          "description": "Trigger for the schedule."
        },
        "task": {
          "$ref": "#/definitions/ScheduleTask",
          "description": "Task for the schedule."
        },
        "tags": {
          "type": "object",
          "description": "Schedule's tags. Unlike properties, tags are fully mutable.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Schedule's properties. Unlike tags, properties are add-only. Once added, a property cannot be removed.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "systemData": {
          "type": "object",
          "description": "System metadata for the resource.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "id",
        "enabled",
        "trigger",
        "task",
        "systemData"
      ]
    },
    "ScheduleProvisioningStatus": {
      "type": "string",
      "description": "Schedule provisioning status.",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ScheduleProvisioningStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Represents the creation status of the schedule."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Represents the updating status of the schedule."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Represents the deleting status of the schedule."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Represents the succeeded status of the schedule."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Represents the failed status of the schedule."
          }
        ]
      }
    },
    "ScheduleRun": {
      "type": "object",
      "description": "Schedule run model.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the schedule run.",
          "readOnly": true
        },
        "scheduleId": {
          "type": "string",
          "description": "Identifier of the schedule."
        },
        "success": {
          "type": "boolean",
          "description": "Trigger success status of the schedule run.",
          "readOnly": true
        },
        "triggerTime": {
          "type": "string",
          "description": "Trigger time of the schedule run."
        },
        "error": {
          "type": "string",
          "description": "Error information for the schedule run.",
          "readOnly": true
        },
        "properties": {
          "type": "object",
          "description": "Properties of the schedule run.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "id",
        "scheduleId",
        "success",
        "properties"
      ]
    },
    "ScheduleTask": {
      "type": "object",
      "description": "Schedule task model.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ScheduleTaskType",
          "description": "Type of the task."
        },
        "configuration": {
          "type": "object",
          "description": "Configuration for the task.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "ScheduleTaskType": {
      "type": "string",
      "description": "Type of the task.",
      "enum": [
        "Evaluation",
        "Insight"
      ],
      "x-ms-enum": {
        "name": "ScheduleTaskType",
        "modelAsString": true,
        "values": [
          {
            "name": "Evaluation",
            "value": "Evaluation",
            "description": "Evaluation task."
          },
          {
            "name": "Insight",
            "value": "Insight",
            "description": "Insight task."
          }
        ]
      }
    },
    "SharepointAgentTool": {
      "type": "object",
      "description": "The input definition information for a sharepoint tool as used to configure an agent.",
      "properties": {
        "sharepoint_grounding_preview": {
          "$ref": "#/definitions/SharepointGroundingToolParameters",
          "description": "The sharepoint grounding tool parameters."
        }
      },
      "required": [
        "sharepoint_grounding_preview"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.Tool"
        }
      ],
      "x-ms-discriminator-value": "sharepoint_grounding_preview"
    },
    "SharepointGroundingToolParameters": {
      "type": "object",
      "description": "The sharepoint grounding tool parameters.",
      "properties": {
        "project_connections": {
          "type": "array",
          "description": "The project connections attached to this tool. There can be a maximum of 1 connection\nresource attached to the tool.",
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/ToolProjectConnection"
          }
        }
      }
    },
    "Sku": {
      "type": "object",
      "description": "Sku information",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int64",
          "description": "Sku capacity"
        },
        "family": {
          "type": "string",
          "description": "Sku family"
        },
        "name": {
          "type": "string",
          "description": "Sku name"
        },
        "size": {
          "type": "string",
          "description": "Sku size"
        },
        "tier": {
          "type": "string",
          "description": "Sku tier"
        }
      },
      "required": [
        "capacity",
        "family",
        "name",
        "size",
        "tier"
      ]
    },
    "StructuredInputDefinition": {
      "type": "object",
      "description": "An structured input that can participate in prompt template substitutions and tool argument binding.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A human-readable description of the input."
        },
        "default_value": {
          "description": "The default value for the input if no run-time value is provided."
        },
        "tool_argument_bindings": {
          "type": "array",
          "description": "When provided, the input value is bound to the specified tool arguments.",
          "items": {
            "$ref": "#/definitions/ToolArgumentBinding"
          }
        },
        "schema": {
          "description": "The JSON schema for the structured input (optional)."
        },
        "required": {
          "type": "boolean",
          "description": "Whether the input property is required when the agent is invoked.",
          "default": false
        }
      }
    },
    "StructuredOutputDefinition": {
      "type": "object",
      "description": "A structured output that can be produced by the agent.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the structured output."
        },
        "description": {
          "type": "string",
          "description": "A description of the output to emit. Used by the model to determine when to emit the output."
        },
        "schema": {
          "type": "object",
          "description": "The JSON schema for the structured output.",
          "additionalProperties": {}
        },
        "strict": {
          "type": "boolean",
          "description": "Whether to enforce strict validation. Default `true`.",
          "x-nullable": true
        }
      },
      "required": [
        "name",
        "description",
        "schema",
        "strict"
      ]
    },
    "StructuredOutputsItemResource": {
      "type": "object",
      "properties": {
        "output": {
          "description": "The structured output captured during the response."
        }
      },
      "required": [
        "output"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "structured_outputs"
    },
    "Target": {
      "type": "object",
      "description": "Base class for targets with discriminator support.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of target.",
          "x-stainless-const": true
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "TargetConfig": {
      "type": "object",
      "description": "Abstract class for target configuration.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the model configuration."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "TargetUpdate": {
      "type": "object",
      "description": "Base class for targets with discriminator support.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of target.",
          "x-stainless-const": true
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "TaxonomyCategory": {
      "type": "object",
      "description": "Taxonomy category definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the taxonomy category."
        },
        "name": {
          "type": "string",
          "description": "Name of the taxonomy category."
        },
        "description": {
          "type": "string",
          "description": "Description of the taxonomy category."
        },
        "riskCategory": {
          "$ref": "#/definitions/RiskCategory",
          "description": "Risk category associated with this taxonomy category."
        },
        "subCategories": {
          "type": "array",
          "description": "List of taxonomy sub categories.",
          "items": {
            "$ref": "#/definitions/TaxonomySubCategory"
          }
        },
        "properties": {
          "type": "object",
          "description": "Additional properties for the taxonomy category.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "riskCategory",
        "subCategories"
      ]
    },
    "TaxonomySubCategory": {
      "type": "object",
      "description": "Taxonomy sub-category definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the taxonomy sub-category."
        },
        "name": {
          "type": "string",
          "description": "Name of the taxonomy sub-category."
        },
        "description": {
          "type": "string",
          "description": "Description of the taxonomy sub-category."
        },
        "enabled": {
          "type": "boolean",
          "description": "List of taxonomy items under this sub-category."
        },
        "properties": {
          "type": "object",
          "description": "Additional properties for the taxonomy sub-category.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "name",
        "enabled"
      ]
    },
    "ToolArgumentBinding": {
      "type": "object",
      "properties": {
        "tool_name": {
          "type": "string",
          "description": "The name of the tool to participate in the argument binding. If not provided, then all tools with matching arguments will participate in binding."
        },
        "argument_name": {
          "type": "string",
          "description": "The name of the argument within the tool."
        }
      },
      "required": [
        "argument_name"
      ]
    },
    "ToolDescription": {
      "type": "object",
      "description": "Description of a tool that can be used by an agent.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the tool."
        },
        "description": {
          "type": "string",
          "description": "A brief description of the tool's purpose."
        }
      }
    },
    "ToolProjectConnection": {
      "type": "object",
      "description": "A project connection resource.",
      "properties": {
        "project_connection_id": {
          "type": "string",
          "description": "A project connection in a ToolProjectConnectionList attached to this tool."
        }
      },
      "required": [
        "project_connection_id"
      ]
    },
    "TreatmentEffectType": {
      "type": "string",
      "description": "Treatment Effect Type.",
      "enum": [
        "TooFewSamples",
        "Inconclusive",
        "Changed",
        "Improved",
        "Degraded"
      ],
      "x-ms-enum": {
        "name": "TreatmentEffectType",
        "modelAsString": true,
        "values": [
          {
            "name": "TooFewSamples",
            "value": "TooFewSamples",
            "description": "Not enough samples to determine treatment effect."
          },
          {
            "name": "Inconclusive",
            "value": "Inconclusive",
            "description": "No significant difference between treatment and baseline."
          },
          {
            "name": "Changed",
            "value": "Changed",
            "description": "Indicates the metric changed with statistical significance, but the direction is neutral."
          },
          {
            "name": "Improved",
            "value": "Improved",
            "description": "Indicates the treatment significantly improved the metric compared to baseline."
          },
          {
            "name": "Degraded",
            "value": "Degraded",
            "description": "Indicates the treatment significantly degraded the metric compared to baseline."
          }
        ]
      }
    },
    "Trigger": {
      "type": "object",
      "description": "Base model for Trigger of the schedule.",
      "properties": {
        "type": {
          "$ref": "#/definitions/TriggerType",
          "description": "Type of the trigger."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "TriggerType": {
      "type": "string",
      "description": "Type of the trigger.",
      "enum": [
        "Cron",
        "Recurrence",
        "OneTime"
      ],
      "x-ms-enum": {
        "name": "TriggerType",
        "modelAsString": true,
        "values": [
          {
            "name": "Cron",
            "value": "Cron",
            "description": "Cron based trigger."
          },
          {
            "name": "Recurrence",
            "value": "Recurrence",
            "description": "Recurrence based trigger."
          },
          {
            "name": "OneTime",
            "value": "OneTime",
            "description": "One-time trigger."
          }
        ]
      }
    },
    "UpdateAgentFromManifestRequest": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        },
        "description": {
          "type": "string",
          "description": "A human-readable description of the agent.",
          "maxLength": 512
        },
        "manifest_id": {
          "type": "string",
          "description": "The manifest ID to import the agent version from."
        },
        "parameter_values": {
          "type": "object",
          "description": "The inputs to the manifest that will result in a fully materialized Agent.",
          "additionalProperties": {}
        }
      },
      "required": [
        "manifest_id",
        "parameter_values"
      ]
    },
    "UpdateAgentRequest": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          },
          "x-oaiTypeLabel": "map"
        },
        "description": {
          "type": "string",
          "description": "A human-readable description of the agent.",
          "maxLength": 512
        },
        "definition": {
          "$ref": "#/definitions/AgentDefinition",
          "description": "The agent definition. This can be a workflow, hosted agent, or a simple agent definition."
        }
      },
      "required": [
        "definition"
      ]
    },
    "UpdateEvalParametersBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/OpenAI.Metadata"
        },
        "properties": {
          "type": "object",
          "description": "Set of immutable 16 key-value pairs that can be attached to an object for storing additional information.\n    Keys are strings with a maximum length of 64 characters. Values are strings with a maximum length of 512 characters.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "UserProfileMemoryItem": {
      "type": "object",
      "description": "A memory item specifically containing user profile information extracted from conversations, such as preferences, interests, and personal details.",
      "allOf": [
        {
          "$ref": "#/definitions/MemoryItem"
        }
      ],
      "x-ms-discriminator-value": "user_profile"
    },
    "WeeklyRecurrenceSchedule": {
      "type": "object",
      "description": "Weekly recurrence schedule.",
      "properties": {
        "daysOfWeek": {
          "type": "array",
          "description": "Days of the week for the recurrence schedule.",
          "items": {
            "$ref": "#/definitions/DayOfWeek"
          }
        }
      },
      "required": [
        "daysOfWeek"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RecurrenceSchedule"
        }
      ],
      "x-ms-discriminator-value": "Weekly"
    },
    "WorkflowActionOutputItemResource": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of CSDL action (e.g., 'SetVariable', 'InvokeAzureAgent')."
        },
        "action_id": {
          "type": "string",
          "description": "Unique identifier for the action."
        },
        "parent_action_id": {
          "type": "string",
          "description": "ID of the parent action if this is a nested action."
        },
        "previous_action_id": {
          "type": "string",
          "description": "ID of the previous action if this action follows another."
        },
        "status": {
          "type": "string",
          "description": "Status of the action (e.g., 'in_progress', 'completed', 'failed', 'cancelled').",
          "enum": [
            "completed",
            "failed",
            "in_progress",
            "cancelled"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "discriminator": "kind",
      "required": [
        "kind",
        "action_id",
        "status"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/OpenAI.ItemResource"
        }
      ],
      "x-ms-discriminator-value": "workflow_action"
    },
    "WorkflowDefinition": {
      "type": "object",
      "description": "The workflow specification in CSDL format.",
      "properties": {
        "trigger": {
          "type": "object",
          "description": "(Deprecated) The CSDL trigger definition. Use `workflow` property instead to send CSDL yaml definition inline.",
          "additionalProperties": {}
        },
        "workflow": {
          "type": "string",
          "description": "The CSDL YAML definition of the workflow."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AgentDefinition"
        }
      ],
      "x-ms-discriminator-value": "workflow"
    },
    "integer": {
      "type": "integer",
      "format": "int64"
    }
  },
  "parameters": {
    "Azure.Core.ClientRequestIdHeader": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "An opaque, globally-unique, client-generated string identifier for the request.",
      "required": false,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "clientRequestId"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
