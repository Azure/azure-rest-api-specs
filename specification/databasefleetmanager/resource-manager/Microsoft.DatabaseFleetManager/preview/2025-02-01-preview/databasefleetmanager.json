{
  "swagger": "2.0",
  "info": {
    "title": "DatabaseFleetClient",
    "version": "2025-02-01-preview",
    "description": "Database Fleet Client",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "FleetDatabases"
    },
    {
      "name": "Fleetspaces"
    },
    {
      "name": "Fleets"
    },
    {
      "name": "FirewallRules"
    },
    {
      "name": "FleetTiers"
    }
  ],
  "paths": {
    "/providers/Microsoft.DatabaseFleetManager/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DatabaseFleetManager/fleets": {
      "get": {
        "operationId": "Fleets_List",
        "tags": [
          "Fleets"
        ],
        "description": "Gets all fleets in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleets_List_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets": {
      "get": {
        "operationId": "Fleets_ListByResourceGroup",
        "tags": [
          "Fleets"
        ],
        "description": "Gets all fleets in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of elements in the collection to skip.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of elements to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An opaque token that identifies a starting point in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleets_ListByResourceGroup_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}": {
      "get": {
        "operationId": "Fleets_Get",
        "tags": [
          "Fleets"
        ],
        "description": "Gets a fleet resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleets_Get_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Fleets_CreateOrUpdate",
        "tags": [
          "Fleets"
        ],
        "description": "Creates or updates a fleet resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The fleet object to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Fleet' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "201": {
            "description": "Resource 'Fleet' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Fleet"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleets_CreateOrUpdate_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Fleets_Update",
        "tags": [
          "Fleets"
        ],
        "description": "Modifies a fleet resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The fleet object to patch.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Fleet"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleets_Update_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Fleets_Delete",
        "tags": [
          "Fleets"
        ],
        "description": "Deletes a fleet.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleets_Delete_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleets_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces": {
      "get": {
        "operationId": "Fleetspaces_ListByFleet",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Lists fleetspaces in a fleet.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of elements in the collection to skip.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of elements to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An opaque token that identifies a starting point in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleetspaces_ListByFleet_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleetspaces_ListByFleet_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}": {
      "get": {
        "operationId": "Fleetspaces_Get",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Gets fleetspace resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Fleetspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleetspaces_Get_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleetspaces_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Fleetspaces_CreateOrUpdate",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Creates or updates a fleetspace resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The fleet object to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Fleetspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Fleetspace' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Fleetspace"
            }
          },
          "201": {
            "description": "Resource 'Fleetspace' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Fleetspace"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Fleetspace - Generated by Policy": {
            "$ref": "./examples/Fleetspaces_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Fleetspaces_Update",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Modifies a fleetspace resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Fleetspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Fleetspace"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleetspaces_Update_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleetspaces_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Fleetspaces_Delete",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Deletes a fleetspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleetspaces_Delete_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleetspaces_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases": {
      "get": {
        "operationId": "FleetDatabases_ListByFleetspace",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Gets all fleet databases in a fleetspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of elements in the collection to skip.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of elements to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that filters elements in the collection.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An opaque token that identifies a starting point in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetDatabaseListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Databases in Fleetspace - Generated by Policy": {
            "$ref": "./examples/FleetDatabases_ListByFleetspace_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases/{databaseName}": {
      "get": {
        "operationId": "FleetDatabases_Get",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Gets a fleet database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetDatabase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve Database Details in Fleet - Generated by Policy": {
            "$ref": "./examples/FleetDatabases_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "FleetDatabases_CreateOrUpdate",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Creates or updates a fleet database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The database object to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetDatabase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FleetDatabase' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetDatabase"
            }
          },
          "201": {
            "description": "Resource 'FleetDatabase' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetDatabase"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Database in Fleet - Generated by Policy": {
            "$ref": "./examples/FleetDatabases_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "FleetDatabases_Update",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Updates a fleet database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The database object to patch.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetDatabase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetDatabase"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update Database in Fleetspace - Generated by Policy": {
            "$ref": "./examples/FleetDatabases_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FleetDatabases_Delete",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Deletes a fleet database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FleetDatabases_Delete_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetDatabases_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases/{databaseName}/changeTier": {
      "post": {
        "operationId": "FleetDatabases_ChangeTier",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Moves database to a different tier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The details of the change tier operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseChangeTierProperties"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Change Database Tier - Generated by Policy": {
            "$ref": "./examples/FleetDatabases_ChangeTier_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases/{databaseName}/rename": {
      "post": {
        "operationId": "FleetDatabases_Rename",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Renames a database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The details of the rename operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseRenameProperties"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Rename Database in Fleetspace - Generated by Policy": {
            "$ref": "./examples/FleetDatabases_Rename_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases/{databaseName}/revert": {
      "post": {
        "operationId": "FleetDatabases_Revert",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Revert a database transparent data encryption (TDE).",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Revert Transparent Data Encryption in Database - Generated by Policy": {
            "$ref": "./examples/FleetDatabases_Revert_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/firewallRules": {
      "get": {
        "operationId": "FirewallRules_ListByFleetspace",
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets all firewall rules in a fleetspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of elements in the collection to skip.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of elements to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An opaque token that identifies a starting point in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FirewallRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Firewall Rules by Fleetspace - Generated by Policy": {
            "$ref": "./examples/FirewallRules_ListByFleetspace_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/firewallRules/{firewallRuleName}": {
      "get": {
        "operationId": "FirewallRules_Get",
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets a firewall rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "Name of the firewall rule.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Firewall Rule - Generated by Policy": {
            "$ref": "./examples/FirewallRules_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "FirewallRules_CreateOrUpdate",
        "tags": [
          "FirewallRules"
        ],
        "description": "Creates or updates a firewall rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "Name of the firewall rule.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The firewall rule object to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FirewallRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "201": {
            "description": "Resource 'FirewallRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Firewall Rule - Generated by Policy": {
            "$ref": "./examples/FirewallRules_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FirewallRules_Delete",
        "tags": [
          "FirewallRules"
        ],
        "description": "Deletes a firewall rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "Name of the firewall rule.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Firewall Rule - Generated by Policy": {
            "$ref": "./examples/FirewallRules_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/registerServer": {
      "post": {
        "operationId": "Fleetspaces_RegisterServer",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Migrates an existing logical server into fleet.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The details of the register server operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterServerProperties"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleetspaces_RegisterServer_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleetspaces_RegisterServer_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/unregister": {
      "post": {
        "operationId": "Fleetspaces_Unregister",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Unregisters all databases from a fleetspace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Fleetspaces_Unregister_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Fleetspaces_Unregister_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/tiers": {
      "get": {
        "operationId": "FleetTiers_ListByFleet",
        "tags": [
          "FleetTiers"
        ],
        "description": "List tiers in a fleet.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of elements in the collection to skip.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of elements to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An opaque token that identifies a starting point in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetTierListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FleetTiers_ListByFleet_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetTiers_ListByFleet_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/tiers/{tierName}": {
      "get": {
        "operationId": "FleetTiers_Get",
        "tags": [
          "FleetTiers"
        ],
        "description": "Gets a tier resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "tierName",
            "in": "path",
            "description": "Name of the tier.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetTier"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FleetTiers_Get_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetTiers_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "FleetTiers_CreateOrUpdate",
        "tags": [
          "FleetTiers"
        ],
        "description": "Creates or updates a tier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "tierName",
            "in": "path",
            "description": "Name of the tier.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The tier object to create or update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetTier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FleetTier' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetTier"
            }
          },
          "201": {
            "description": "Resource 'FleetTier' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetTier"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FleetTiers_CreateOrUpdate_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetTiers_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "FleetTiers_Update",
        "tags": [
          "FleetTiers"
        ],
        "description": "Updates a tier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "tierName",
            "in": "path",
            "description": "Name of the tier.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetTier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetTier"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FleetTiers_Update_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetTiers_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FleetTiers_Delete",
        "tags": [
          "FleetTiers"
        ],
        "description": "Deletes a tier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "tierName",
            "in": "path",
            "description": "Name of the tier.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FleetTiers_Delete_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetTiers_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/tiers/{tierName}/disable": {
      "post": {
        "operationId": "FleetTiers_Disable",
        "tags": [
          "FleetTiers"
        ],
        "description": "Disables a tier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "tierName",
            "in": "path",
            "description": "Name of the tier.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetTier"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FleetTiers_Disable_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/FleetTiers_Disable_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.uuid": {
      "type": "string",
      "format": "uuid",
      "description": "Universally Unique Identifier"
    },
    "AzureProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "AzureProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Resource is provisioning."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Request on the resource has been accepted."
          }
        ]
      },
      "readOnly": true
    },
    "DatabaseChangeTierProperties": {
      "type": "object",
      "description": "A database change tier definition.",
      "properties": {
        "targetTierName": {
          "type": "string",
          "description": "A target tier name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "DatabaseCreateMode": {
      "type": "string",
      "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
      "enum": [
        "Default",
        "Copy",
        "PointInTimeRestore"
      ],
      "x-ms-enum": {
        "name": "DatabaseCreateMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "Create a database."
          },
          {
            "name": "Copy",
            "value": "Copy",
            "description": "Copy the source database (source database name must be specified)."
          },
          {
            "name": "PointInTimeRestore",
            "value": "PointInTimeRestore",
            "description": "Create a database by restoring source database from a point in time (source database name and restore from time must be specified)."
          }
        ]
      }
    },
    "DatabaseIdentity": {
      "type": "object",
      "description": "Database Identity properties.",
      "properties": {
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource Id of the database identity.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
              }
            ]
          }
        },
        "principalId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Principal Id of the database identity.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "clientId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Client Id of the database identity.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "DatabaseRenameProperties": {
      "type": "object",
      "description": "A database rename definition.",
      "properties": {
        "newName": {
          "type": "string",
          "description": "New database name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "DestinationTierOverride": {
      "type": "object",
      "description": "A destination tier override.",
      "properties": {
        "resourceType": {
          "$ref": "#/definitions/ResourceType",
          "description": "Resource type.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tierName": {
          "type": "string",
          "description": "Destination tier name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "resourceName": {
          "type": "string",
          "description": "Resource name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "resourceType",
        "tierName",
        "resourceName"
      ]
    },
    "FirewallRule": {
      "type": "object",
      "description": "A firewall rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "description": "A Firewall rule properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FirewallRuleListResult": {
      "type": "object",
      "description": "The response of a FirewallRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FirewallRule items on this page",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FirewallRuleProperties": {
      "type": "object",
      "description": "A Firewall rule properties.",
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "Start IP address.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "endIpAddress": {
          "type": "string",
          "description": "End IP address.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/AzureProvisioningState",
          "description": "Provisioning state.",
          "readOnly": true
        }
      }
    },
    "Fleet": {
      "type": "object",
      "description": "A Database Fleet.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetProperties",
          "description": "The fleet properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "FleetDatabase": {
      "type": "object",
      "description": "A fleet database.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetDatabaseProperties",
          "description": "Fleet database properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FleetDatabaseFilterParameters": {
      "type": "object",
      "description": "A database filter parameters.",
      "properties": {
        "tierName": {
          "type": "string",
          "description": "Filter on database tier name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "FleetDatabaseListResult": {
      "type": "object",
      "description": "The response of a FleetDatabase list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FleetDatabase items on this page",
          "items": {
            "$ref": "#/definitions/FleetDatabase"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetDatabaseProperties": {
      "type": "object",
      "description": "Fleet database properties.",
      "properties": {
        "originalDatabaseId": {
          "type": "string",
          "description": "Resource identifier for the underlying database resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/AzureProvisioningState",
          "description": "Database state.",
          "readOnly": true
        },
        "createMode": {
          "$ref": "#/definitions/DatabaseCreateMode",
          "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tierName": {
          "type": "string",
          "description": "Name of the tier this database belongs to.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "connectionString": {
          "type": "string",
          "description": "Connection string to connect to the database with.",
          "readOnly": true
        },
        "recoverable": {
          "type": "boolean",
          "description": "If true, database is recoverable.",
          "readOnly": true
        },
        "restoreFromTime": {
          "type": "string",
          "format": "date-time",
          "description": "Restore from time when CreateMode is PointInTimeRestore.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "earliestRestoreTime": {
          "type": "string",
          "format": "date-time",
          "description": "Earliest restore time.",
          "readOnly": true
        },
        "latestRestoreTime": {
          "type": "string",
          "format": "date-time",
          "description": "Latest restore time.",
          "readOnly": true
        },
        "backupRetentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Backup retention in days.",
          "readOnly": true
        },
        "databaseSizeGbMax": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum database size in Gb.",
          "readOnly": true
        },
        "sourceDatabaseName": {
          "type": "string",
          "description": "Source database name used when CreateMode is Copy or PointInTimeRestore.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "resourceTags": {
          "type": "object",
          "description": "Additional database properties to be applied as the underlying database resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Identity property.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "transparentDataEncryption": {
          "$ref": "#/definitions/TransparentDataEncryption",
          "description": "Transparent Data Encryption properties",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "collation": {
          "type": "string",
          "description": "Database collation.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "FleetListResult": {
      "type": "object",
      "description": "The response of a Fleet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Fleet items on this page",
          "items": {
            "$ref": "#/definitions/Fleet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetProperties": {
      "type": "object",
      "description": "The Database Fleet properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Fleet description.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/AzureProvisioningState",
          "description": "Provisioning state.",
          "readOnly": true
        }
      }
    },
    "FleetTier": {
      "type": "object",
      "description": "A SQL Database Fleet tier.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetTierProperties",
          "description": "A Fleet tier properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FleetTierListResult": {
      "type": "object",
      "description": "The response of a FleetTier list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FleetTier items on this page",
          "items": {
            "$ref": "#/definitions/FleetTier"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetTierProperties": {
      "type": "object",
      "description": "A Fleet tier properties.",
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "If true, tier is disabled.",
          "readOnly": true
        },
        "serverless": {
          "type": "boolean",
          "description": "If true, serverless resources are provisioned in the tier.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "pooled": {
          "type": "boolean",
          "description": "If true, databases are pooled.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "serviceTier": {
          "type": "string",
          "description": "Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "family": {
          "type": "string",
          "description": "Family of provisioned resources, for example Gen5.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "poolNumOfDatabasesMax": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of databases per pool.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "highAvailabilityReplicaCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of high availability replicas for databases in this tier.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "zoneRedundancy": {
          "$ref": "#/definitions/ZoneRedundancy",
          "description": "Enable zone redundancy for all databases in this tier.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "databaseCapacityMin": {
          "type": "number",
          "format": "double",
          "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "databaseCapacityMax": {
          "type": "number",
          "format": "double",
          "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "databaseSizeGbMax": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum database size in Gb.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/AzureProvisioningState",
          "description": "Provisioning state.",
          "readOnly": true
        }
      }
    },
    "FleetUpdate": {
      "type": "object",
      "description": "An update to a Database Fleet.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "properties": {
          "$ref": "#/definitions/FleetProperties",
          "description": "The Database Fleet properties.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "Fleetspace": {
      "type": "object",
      "description": "A fleetspace.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetspaceProperties",
          "description": "A Fleetspace properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FleetspaceListResult": {
      "type": "object",
      "description": "The response of a Fleetspace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Fleetspace items on this page",
          "items": {
            "$ref": "#/definitions/Fleetspace"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetspaceProperties": {
      "type": "object",
      "description": "A Fleetspace properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/AzureProvisioningState",
          "description": "Fleetspace state.",
          "readOnly": true
        },
        "capacityMax": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "mainPrincipal": {
          "$ref": "#/definitions/MainPrincipal",
          "description": "Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Database Identity.",
      "properties": {
        "identityType": {
          "$ref": "#/definitions/IdentityType",
          "description": "Identity type of the main principal.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "userAssignedIdentities": {
          "type": "array",
          "description": "User identity ids",
          "items": {
            "$ref": "#/definitions/DatabaseIdentity"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "federatedClientId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "The federated client id for the SQL Database. It is used for cross tenant CMK scenario.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "IdentityType": {
      "type": "string",
      "description": "Identity type of the main principal.",
      "enum": [
        "None",
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "No identity."
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned",
            "description": "User assigned identity."
          }
        ]
      }
    },
    "MainPrincipal": {
      "type": "object",
      "description": "A main principal.",
      "properties": {
        "login": {
          "type": "string",
          "description": "Login name of the main principal.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "applicationId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Application Id of the main principal.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "objectId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Object Id of the main principal.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tenantId": {
          "$ref": "#/definitions/Azure.Core.uuid",
          "description": "Tenant Id of the main principal.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "principalType": {
          "$ref": "#/definitions/PrincipalType",
          "description": "Principal type of the main principal.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "PrincipalType": {
      "type": "string",
      "description": "Principal type of the authorized principal.",
      "enum": [
        "Application",
        "User"
      ],
      "x-ms-enum": {
        "name": "PrincipalType",
        "modelAsString": true,
        "values": [
          {
            "name": "Application",
            "value": "Application",
            "description": "Application principal type."
          },
          {
            "name": "User",
            "value": "User",
            "description": "User principal type."
          }
        ]
      }
    },
    "RegisterServerProperties": {
      "type": "object",
      "description": "Server registration definition.",
      "properties": {
        "tierName": {
          "type": "string",
          "description": "Destination tier name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceSubscriptionId": {
          "type": "string",
          "description": "Source subscription id.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceResourceGroupName": {
          "type": "string",
          "description": "Source resource group name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceServerName": {
          "type": "string",
          "description": "Source SQL Server name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "destinationTierOverrides": {
          "type": "array",
          "description": "Destination tier overrides.",
          "items": {
            "$ref": "#/definitions/DestinationTierOverride"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "ResourceType": {
      "type": "string",
      "description": "Resource type of the destination tier override.",
      "enum": [
        "Database",
        "Pool"
      ],
      "x-ms-enum": {
        "name": "ResourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "Database",
            "value": "Database",
            "description": "Database resource type."
          },
          {
            "name": "Pool",
            "value": "Pool",
            "description": "Elastic pool resource type."
          }
        ]
      }
    },
    "TransparentDataEncryption": {
      "type": "object",
      "description": "Transparent Data Encryption properties.",
      "properties": {
        "keyUri": {
          "type": "string",
          "format": "uri",
          "description": "Customer Managed Key (CMK) Uri.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "keys": {
          "type": "array",
          "description": "Additional Keys",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "enableAutoRotation": {
          "type": "boolean",
          "description": "Enable key auto rotation",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "ZoneRedundancy": {
      "type": "string",
      "description": "Status of zone redundancy in a tier.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ZoneRedundancy",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Zone redundancy enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Zone redundancy disabled."
          }
        ]
      }
    }
  },
  "parameters": {}
}
