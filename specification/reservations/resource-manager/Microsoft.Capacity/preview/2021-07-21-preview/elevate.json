{
  "swagger": "2.0",
  "info": {
    "title": "Azure Reservation API",
    "description": "This API describe Azure Reservation",
    "version": "2021-07-21-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/elevate": {
      "post": {
        "summary": "Elevate role for reservation order.",
        "description": "Elevate role for a given reservation order.",
        "operationId": "ReservationOrder_Elevate",
        "x-ms-examples": {
          "Elevate": {
            "$ref": "./examples/ElevateReservationOrder.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ReservationOrderIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "tags": [
          "ReservationOrder, Elevate"
        ],
        "responses": {
          "200": {
            "description": "Access granted to reservation order",
            "schema": {
              "$ref": "#/definitions/ElevateResponse"
            }
          },
          "403": {
            "description": "Access denied",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "x-ms-error-response": true
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Capacity/operations": {
      "get": {
        "summary": "Get operations.",
        "description": "List all the operations.",
        "operationId": "Operation_List",
        "x-ms-examples": {
          "GetOperations": {
            "$ref": "./examples/GetOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "tags": [
          "Operation"
        ],
        "responses": {
          "200": {
            "description": "List all the operations.",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ElevateResponse": {
      "type": "object",
      "description": "Elevate response",
      "properties": {}
    },
    "Error": {
      "type": "object",
      "description": "Error response",
      "properties": {
        "error": {
          "$ref": "#/definitions/ExtendedErrorInfo",
          "description": "Error reason if operation failed. Null otherwise"
        }
      }
    },
    "ExtendedErrorInfo": {
      "type": "object",
      "description": "Error Info response",
      "properties": {
        "code": {
          "$ref": "#/definitions/ErrorResponseCode",
          "description": "Error code if operation failed. Null otherwise"
        },
        "message": {
          "type": "string",
          "description": "Error reason if operation failed. Null otherwise"
        }
      }
    },
    "ErrorResponseCode": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "InternalServerError",
        "ServerTimeout",
        "AuthorizationFailed",
        "BadRequest",
        "ClientCertificateThumbprintNotSet",
        "InvalidRequestContent",
        "OperationFailed",
        "HttpMethodNotSupported",
        "InvalidRequestUri",
        "MissingTenantId",
        "InvalidTenantId",
        "InvalidReservationOrderId",
        "InvalidReservationId",
        "ReservationIdNotInReservationOrder",
        "ReservationOrderNotFound",
        "InvalidSubscriptionId",
        "InvalidAccessToken",
        "InvalidLocationId",
        "UnauthenticatedRequestsThrottled",
        "InvalidHealthCheckType",
        "Forbidden",
        "BillingScopeIdCannotBeChanged",
        "AppliedScopesNotAssociatedWithCommerceAccount",
        "PatchValuesSameAsExisting",
        "RoleAssignmentCreationFailed",
        "ReservationOrderCreationFailed",
        "ReservationOrderNotEnabled",
        "CapacityUpdateScopesFailed",
        "UnsupportedReservationTerm",
        "ReservationOrderIdAlreadyExists",
        "RiskCheckFailed",
        "CreateQuoteFailed",
        "ActivateQuoteFailed",
        "NonsupportedAccountId",
        "PaymentInstrumentNotFound",
        "MissingAppliedScopesForSingle",
        "NoValidReservationsToReRate",
        "ReRateOnlyAllowedForEA",
        "OperationCannotBePerformedInCurrentState",
        "InvalidSingleAppliedScopesCount",
        "InvalidFulfillmentRequestParameters",
        "NotSupportedCountry",
        "InvalidRefundQuantity",
        "PurchaseError",
        "BillingCustomerInputError",
        "BillingPaymentInstrumentSoftError",
        "BillingPaymentInstrumentHardError",
        "BillingTransientError",
        "BillingError",
        "FulfillmentConfigurationError",
        "FulfillmentOutOfStockError",
        "FulfillmentTransientError",
        "FulfillmentError",
        "CalculatePriceFailed"
      ],
      "x-ms-enum": {
        "name": "ErrorResponseCode",
        "modelAsString": true
      },
      "description": "Error code if operation failed. Null otherwise"
    },
    "OperationList": {
      "type": "object",
      "description": "List of all operations",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of all operations",
          "items": {
            "$ref": "#/definitions/OperationResponse"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to get the next page of items."
        }
      }
    },
    "OperationResponse": {
      "type": "object",
      "description": "Operation Resonse",
      "properties": {
        "name": {
          "description": "Name of the operation",
          "type": "string"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "Display of the operation"
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of the operation",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "description": "Component of operation uri",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Name of the service provider"
        },
        "resource": {
          "type": "string",
          "description": "Name of the resource"
        },
        "operation": {
          "type": "string",
          "description": "Name of the operation"
        },
        "description": {
          "type": "string",
          "description": "Description of the operation"
        }
      }
    },
    "OperationProperties": {
      "description": "Additional details about an operation.",
      "type": "object",
      "x-ms-client-flatten": true
    }
  },
  "parameters": {
    "ReservationOrderIdParameter": {
      "name": "reservationOrderId",
      "x-ms-parameter-location": "method",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Order Id of the reservation"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "Supported version for this document is 2021-07-21-preview",
      "required": true,
      "type": "string"
    }
  }
}
