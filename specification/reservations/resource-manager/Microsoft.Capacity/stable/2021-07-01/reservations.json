{
  "swagger": "2.0",
  "info": {
    "title": "Azure Reservation API",
    "description": "This API describe Azure Reservation",
    "version": "2017-11-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.Capacity/reservations": {
      "get": {
        "description": "List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.",
        "operationId": "Reservations_List",
        "x-ms-examples": {
          "Catalog": {
            "$ref": "./examples/GetReservations.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "description": "May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. Reservation properties include sku/name, properties/{appliedScopeType, archived, displayName, displayProvisioningState, effectiveDateTime, expiryDate, provisioningState, quantity, renew, reservedResourceType, term, userFriendlyAppliedScopeType, userFriendlyRenewState}",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "description": "May be used to sort order by reservation properties.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "refreshSummary",
            "description": "To indicate whether to refresh the roll up counts of the reservations group by provisioning states",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "The number of reservations to skip from the list before returning results",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "selectedState",
            "description": "The selected provisioning state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "take",
            "description": "To number of reservations to return",
            "in": "query",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ErrorResponseCode": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "InternalServerError",
        "ServerTimeout",
        "AuthorizationFailed",
        "BadRequest",
        "ClientCertificateThumbprintNotSet",
        "InvalidRequestContent",
        "OperationFailed",
        "HttpMethodNotSupported",
        "InvalidRequestUri",
        "MissingTenantId",
        "InvalidTenantId",
        "InvalidReservationOrderId",
        "InvalidReservationId",
        "ReservationIdNotInReservationOrder",
        "ReservationOrderNotFound",
        "InvalidSubscriptionId",
        "InvalidAccessToken",
        "InvalidLocationId",
        "UnauthenticatedRequestsThrottled",
        "InvalidHealthCheckType",
        "Forbidden",
        "BillingScopeIdCannotBeChanged",
        "AppliedScopesNotAssociatedWithCommerceAccount",
        "PatchValuesSameAsExisting",
        "RoleAssignmentCreationFailed",
        "ReservationOrderCreationFailed",
        "ReservationOrderNotEnabled",
        "CapacityUpdateScopesFailed",
        "UnsupportedReservationTerm",
        "ReservationOrderIdAlreadyExists",
        "RiskCheckFailed",
        "CreateQuoteFailed",
        "ActivateQuoteFailed",
        "NonsupportedAccountId",
        "PaymentInstrumentNotFound",
        "MissingAppliedScopesForSingle",
        "NoValidReservationsToReRate",
        "ReRateOnlyAllowedForEA",
        "OperationCannotBePerformedInCurrentState",
        "InvalidSingleAppliedScopesCount",
        "InvalidFulfillmentRequestParameters",
        "NotSupportedCountry",
        "InvalidRefundQuantity",
        "PurchaseError",
        "BillingCustomerInputError",
        "BillingPaymentInstrumentSoftError",
        "BillingPaymentInstrumentHardError",
        "BillingTransientError",
        "BillingError",
        "FulfillmentConfigurationError",
        "FulfillmentOutOfStockError",
        "FulfillmentTransientError",
        "FulfillmentError",
        "CalculatePriceFailed"
      ],
      "x-ms-enum": {
        "name": "ErrorResponseCode",
        "modelAsString": true
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Represent the current state of the Reservation.",
      "enum": [
        "Creating",
        "PendingResourceHold",
        "ConfirmedResourceHold",
        "PendingBilling",
        "ConfirmedBilling",
        "Created",
        "Succeeded",
        "Cancelled",
        "Expired",
        "BillingFailed",
        "Failed",
        "Split",
        "Merged"
      ]
    },
    "ReservedResourceType": {
      "type": "string",
      "description": "The type of the resource that is being reserved.",
      "enum": [
        "VirtualMachines",
        "SqlDatabases",
        "SuseLinux",
        "CosmosDb",
        "RedHat",
        "SqlDataWarehouse",
        "VMwareCloudSimple",
        "RedHatOsa",
        "Databricks",
        "AppService",
        "ManagedDisk",
        "BlockBlob",
        "RedisCache",
        "AzureDataExplorer",
        "MySql",
        "MariaDb",
        "PostgreSql",
        "DedicatedHost",
        "SapHana",
        "SqlAzureHybridBenefit"
      ],
      "x-ms-enum": {
        "name": "ReservedResourceType",
        "modelAsString": true
      }
    },
    "Location": {
      "type": "string",
      "description": "Location in which the Resources needs to be reserved. It cannot be changed after the resource has been created.",
      "enum": [
        "westus",
        "eastus",
        "eastus2",
        "northcentralus",
        "westus2",
        "southcentralus",
        "centralus",
        "westeurope",
        "northeurope",
        "eastasia",
        "southeastasia",
        "japaneast",
        "japanwest",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "westindia",
        "centralindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "westcentralus",
        "ukwest"
      ]
    },
    "DisplayProvisioningState": {
      "type": "string",
      "description": "Represent the current display state of the Reservation.",
      "enum": [
        "Succeeded",
        "Expiring",
        "Expired",
        "Pending",
        "Cancelled",
        "Failed"
      ]
    },
    "UserFriendlyAppliedScopeType": {
      "type": "string",
      "description": "The applied scope type",
      "enum": [
        "None",
        "Shared",
        "Single",
        "ResourceGroup",
        "ManagementGroup"
      ]
    },
    "UserFriendlyRenewState": {
      "type": "string",
      "description": "The renew state of the reservation",
      "enum": [
        "On",
        "Off",
        "Renewed",
        "NotRenewed",
        "NotApplicable"
      ]
    },
    "ReservationTerm": {
      "type": "string",
      "description": "Represent the term of Reservation.",
      "enum": [
        "P1Y",
        "P3Y"
      ],
      "x-ms-enum": {
        "name": "ReservationTerm",
        "modelAsString": true
      }
    },
    "ReservationsListResult": {
      "type": "object",
      "description": "The list of reservations and summary of roll out count of reservations in each state.",
      "properties": {
        "value": {
          "description": "The list of reservations.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ReservationsListResponse"
          }
        },
        "nextLink": {
          "description": "The link (url) to the next page of results.",
          "type": "string",
          "readOnly": true
        },
        "summary": {
          "description": "The roll out count summary of the reservations",
          "type": "object",
          "$ref": "#/definitions/ReservationSummary"
        }
      }
    },
    "ReservationsListResponse": {
      "description": "The definition of the reservation.",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The Azure Region where the reserved resource lives."
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Identifier of the reservation"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the reservation"
        },
        "sku": {
          "description": "The sku information associated to this reservation ",
          "$ref": "#/definitions/SkuName"
        },
        "properties": {
          "description": "The properties associated to this reservation ",
          "$ref": "#/definitions/ReservationsProperties"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Type of resource. \"Microsoft.Capacity/reservationOrders/reservations\""
        }
      }
    },
    "ReservationQuantity": {
      "type": "integer",
      "format": "int32",
      "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero."
    },
    "InstanceFlexibility": {
      "type": "string",
      "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
      "enum": [
        "On",
        "Off"
      ],
      "x-ms-enum": {
        "name": "InstanceFlexibility",
        "modelAsString": true
      }
    },
    "ReservationStatusCode": {
      "type": "string",
      "enum": [
        "None",
        "Pending",
        "Active",
        "PurchaseError",
        "PaymentInstrumentError",
        "Split",
        "Merged",
        "Expired",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "ReservationStatusCode",
        "modelAsString": true
      }
    },
    "ExtendedStatusInfo": {
      "type": "object",
      "properties": {
        "statusCode": {
          "$ref": "#/definitions/ReservationStatusCode"
        },
        "message": {
          "type": "string",
          "description": "The message giving detailed information about the status code."
        }
      }
    },
    "ReservationBillingPlan": {
      "type": "string",
      "description": "Represent the billing plans.",
      "enum": [
        "Upfront",
        "Monthly"
      ],
      "x-ms-enum": {
        "name": "ReservationBillingPlan",
        "modelAsString": true
      }
    },
    "Renew": {
      "type": "boolean",
      "default": false,
      "description": "Setting this to true will automatically purchase a new reservation on the expiration date time."
    },
    "SkuName": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "ReservationsProperties": {
      "type": "object",
      "description": "The properties of the reservations",
      "properties": {
        "reservedResourceType": {
          "description": "The type of the resource that is being reserved.",
          "$ref": "#/definitions/ReservedResourceType"
        },
        "instanceFlexibility": {
          "description": "Allows reservation discount to be applied across skus within the same Autofit group. Not all skus support instance size flexibility.",
          "$ref": "#/definitions/InstanceFlexibility"
        },
        "displayName": {
          "type": "string",
          "description": "Friendly name for user to easily identify the reservation"
        },
        "appliedScopes": {
          "description": "The list of applied scopes",
          "$ref": "#/definitions/AppliedScopes"
        },
        "appliedScopeType": {
          "description": "The applied scope type",
          "$ref": "#/definitions/AppliedScopeType"
        },
        "quantity": {
          "description": "Quantity of the SKUs that are part of the Reservation.",
          "$ref": "#/definitions/ReservationQuantity"
        },
        "provisioningState": {
          "type": "string",
          "description": "Current state of the reservation."
        },
        "effectiveDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "DateTime of the Reservation starting when this version is effective from."
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "DateTime of the last time the Reservation was updated.",
          "readOnly": true
        },
        "expiryDate": {
          "type": "string",
          "format": "date",
          "description": "This is the date when the Reservation will expire."
        },
        "skuDescription": {
          "type": "string",
          "description": "Description of the SKU in english."
        },
        "extendedStatusInfo": {
          "description": "The message giving detailed information about the status code.",
          "$ref": "#/definitions/ExtendedStatusInfo"
        },
        "billingPlan": {
          "description": "The billing plan options available for this SKU.",
          "$ref": "#/definitions/ReservationBillingPlan"
        },
        "displayProvisioningState": {
          "description": "The provisioning state of the reservation for display, e.g. Succeeded",
          "type": "string",
          "readOnly": true
        },
        "provisioningSubState": {
          "description": "The provisioning state of the reservation, e.g. Succeeded",
          "type": "string",
          "readOnly": true
        },
        "purchaseDate": {
          "type": "string",
          "format": "date",
          "description": "This is the date when the Reservation was purchased."
        },
        "renew": {
          "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
          "$ref": "#/definitions/Renew"
        },
        "renewSource": {
          "type": "string",
          "description": "Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}."
        },
        "renewDestination": {
          "type": "string",
          "description": "Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}."
        },
        "term": {
          "description": "Represent the term of Reservation.",
          "$ref": "#/definitions/ReservationTerm"
        },
        "userFriendlyAppliedScopeType": {
          "description": "The applied scope type of the reservation for display, e.g. Shared",
          "type": "string",
          "readOnly": true
        },
        "userFriendlyRenewState": {
          "description": "The renew state of the reservation for display, e.g. On",
          "type": "string",
          "readOnly": true
        },
        "utilization": {
          "readOnly": true,
          "type": "object",
          "description": "Reservation utilization",
          "properties": {
            "trend": {
              "description": "The number of days trend for a reservation",
              "readOnly": true,
              "type": "string"
            },
            "aggregates": {
              "description": "The array of aggregates of a reservation's utilization",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReservationUtilizationAggregates"
              }
            }
          }
        }
      }
    },
    "ReservationUtilizationAggregates": {
      "description": "The aggregate values of reservation utilization",
      "type": "object",
      "properties": {
        "grain": {
          "description": "The grain of the aggregate",
          "readOnly": true,
          "type": "number"
        },
        "grainUnit": {
          "description": "The grain unit of the aggregate",
          "readOnly": true,
          "type": "string"
        },
        "value": {
          "description": "The aggregate value",
          "readOnly": true,
          "type": "number"
        },
        "valueUnit": {
          "description": "The aggregate value unit",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ReservationSummary": {
      "description": "The roll up count summary of reservations in each state",
      "type": "object",
      "properties": {
        "succeededCount": {
          "description": "The number of reservation in Succeeded state",
          "readOnly": true,
          "type": "number"
        },
        "failedCount": {
          "description": "The number of reservation in Failed state",
          "readOnly": true,
          "type": "number"
        },
        "expiringCount": {
          "description": "The number of reservation in Expiring state",
          "readOnly": true,
          "type": "number"
        },
        "expiredCount": {
          "description": "The number of reservation in Expired state",
          "readOnly": true,
          "type": "number"
        },
        "pendingCount": {
          "description": "The number of reservation in Pending state",
          "readOnly": true,
          "type": "number"
        },
        "cancelledCount": {
          "description": "The number of reservation in Cancelled state",
          "readOnly": true,
          "type": "number"
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The details of the error.",
          "$ref": "#/definitions/ErrorDetails"
        }
      }
    },
    "ExtendedErrorInfo": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ErrorResponseCode"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ErrorDetails": {
      "type": "object",
      "description": "The details of the error.",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "The target of the particular error.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AppliedScopeType": {
      "type": "string",
      "description": "Type of the Applied Scope.",
      "enum": [
        "Single",
        "Shared"
      ],
      "x-ms-enum": {
        "name": "AppliedScopeType",
        "modelAsString": true
      }
    },
    "AppliedScopes": {
      "type": "array",
      "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
      "items": {
        "type": "string",
        "minItems": 1,
        "maxItems": 1
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "Supported version.",
      "required": true,
      "type": "string"
    }
  }
}
