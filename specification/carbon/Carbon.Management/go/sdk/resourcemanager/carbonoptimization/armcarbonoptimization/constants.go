// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armcarbonoptimization

const host = "https://management.azure.com"

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/carbonoptimization/armcarbonoptimization"
	moduleVersion = "v0.1.0"
)

// AccessDecisionEnum - Enum for Access Decision
type AccessDecisionEnum string

const (
	// AccessDecisionEnumAllowed - Access allowed
	AccessDecisionEnumAllowed AccessDecisionEnum = "Allowed"
	// AccessDecisionEnumDenied - Access denied
	AccessDecisionEnumDenied AccessDecisionEnum = "Denied"
)

// PossibleAccessDecisionEnumValues returns the possible values for the AccessDecisionEnum const type.
func PossibleAccessDecisionEnumValues() []AccessDecisionEnum {
	return []AccessDecisionEnum{
		AccessDecisionEnumAllowed,
		AccessDecisionEnumDenied,
	}
}

// ActionType - Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	// ActionTypeInternal - Actions are for internal-only APIs.
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

// CategoryTypeEnum - Supported category types to be used with QueryParameter
type CategoryTypeEnum string

const (
	// CategoryTypeEnumLocation - Location level aggregation granularity
	CategoryTypeEnumLocation CategoryTypeEnum = "Location"
	// CategoryTypeEnumResource - Resource level aggregation granularity
	CategoryTypeEnumResource CategoryTypeEnum = "Resource"
	// CategoryTypeEnumResourceGroup - ResourceGroup level aggregation granularity
	CategoryTypeEnumResourceGroup CategoryTypeEnum = "ResourceGroup"
	// CategoryTypeEnumResourceType - ResourceType level aggregation granularity
	CategoryTypeEnumResourceType CategoryTypeEnum = "ResourceType"
	// CategoryTypeEnumServiceType - ServiceType level aggregation granularity
	CategoryTypeEnumServiceType CategoryTypeEnum = "ServiceType"
	// CategoryTypeEnumSubscription - Subscription level aggregation granularity
	CategoryTypeEnumSubscription CategoryTypeEnum = "Subscription"
)

// PossibleCategoryTypeEnumValues returns the possible values for the CategoryTypeEnum const type.
func PossibleCategoryTypeEnumValues() []CategoryTypeEnum {
	return []CategoryTypeEnum{
		CategoryTypeEnumLocation,
		CategoryTypeEnumResource,
		CategoryTypeEnumResourceGroup,
		CategoryTypeEnumResourceType,
		CategoryTypeEnumServiceType,
		CategoryTypeEnumSubscription,
	}
}

// EmissionScopeEnum - Supported emission scopes to be used with QueryParameter
type EmissionScopeEnum string

const (
	// EmissionScopeEnumScope1 - Scope1 carbon emission
	EmissionScopeEnumScope1 EmissionScopeEnum = "Scope1"
	// EmissionScopeEnumScope2 - Scope2 carbon emission
	EmissionScopeEnumScope2 EmissionScopeEnum = "Scope2"
	// EmissionScopeEnumScope3 - Scope3 carbon emission
	EmissionScopeEnumScope3 EmissionScopeEnum = "Scope3"
)

// PossibleEmissionScopeEnumValues returns the possible values for the EmissionScopeEnum const type.
func PossibleEmissionScopeEnumValues() []EmissionScopeEnum {
	return []EmissionScopeEnum{
		EmissionScopeEnumScope1,
		EmissionScopeEnumScope2,
		EmissionScopeEnumScope3,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	// OriginSystem - Indicates the operation is initiated by a system.
	OriginSystem Origin = "system"
	// OriginUser - Indicates the operation is initiated by a user.
	OriginUser Origin = "user"
	// OriginUserSystem - Indicates the operation is initiated by a user or system.
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}
