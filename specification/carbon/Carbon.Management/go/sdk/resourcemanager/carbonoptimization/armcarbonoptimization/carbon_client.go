// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armcarbonoptimization

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"
	"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm"
)

// CarbonClient - Carbon Report Resource Provider query API.
// Don't use this type directly, use NewCarbonClient() instead.
type CarbonClient struct {
	internal *arm.Client
}

// NewCarbonClient creates a new instance of CarbonClient with the specified values.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - options - pass nil to accept the default values.
func NewCarbonClient(credential azcore.TokenCredential, options *arm.ClientOptions) (*CarbonClient, error) {
	cl, err := arm.NewClient(moduleName, moduleVersion, credential, options)
	if err != nil {
		return nil, err
	}
	client := &CarbonClient{
		internal: cl,
	}
	return client, nil
}

// NewCarbonCarbonServiceClient creates a new instance of [CarbonCarbonServiceClient].
func (client *CarbonClient) NewCarbonCarbonServiceClient() *CarbonCarbonServiceClient {
	return &CarbonCarbonServiceClient{
		internal: client.internal,
	}
}

// NewCarbonOperationsClient creates a new instance of [CarbonOperationsClient].
func (client *CarbonClient) NewCarbonOperationsClient() *CarbonOperationsClient {
	return &CarbonOperationsClient{
		internal: client.internal,
	}
}
