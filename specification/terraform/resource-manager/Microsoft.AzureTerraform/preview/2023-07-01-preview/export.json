{
  "swagger": "2.0",
  "info": {
    "title": "AzureTerraformResourceProviderClient",
    "description": "The Azure Terraform management API provides a RESTful set of web services that used to manage your Azure Terraform resources.",
    "version": "2023-07-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.AzureTerraform/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available RP operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get a list of operations for a resource provider": {
            "$ref": "./examples/ListOperations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureTerraform/operationStatuses/{operationId}": {
      "get": {
        "x-ms-examples": {
          "Get specific operation status": {
            "$ref": "./examples/GetOperationStatus.json"
          }
        },
        "tags": [
          "OperationStatuses"
        ],
        "operationId": "OperationStatuses_Get",
        "description": "Get the status of a long running azure asynchronous operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/OperationIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Finalized operation status.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "InProgress operation status.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "The Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error response returned if request was unsuccessful.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureTerraform/exportTerraform": {
      "post": {
        "tags": [
          "ExportTerraform"
        ],
        "operationId": "ExportTerraform",
        "description": "Exports the Terraform configuration of the specified resources.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ExportParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Export request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "The Azure-AsyncOperation header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExportTerraform": {
            "$ref": "./examples/ExportTerraform.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/OperationStatus"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ExportResource": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseExportModel"
        }
      ],
      "description": "Export parameter for individual resources",
      "required": [
        "resourceIds"
      ],
      "properties": {
        "resourceIds": {
          "description": "The id of the resource to be exported",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceName": {
          "description": "The Terraform resource name. Only works when `resourceIds` contains only one item.",
          "type": "string",
          "default": "res-0"
        },
        "resourceType": {
          "description": "The Terraform resource type. Only works when `resourceIds` contains only one item.",
          "type": "string"
        },
        "namePattern": {
          "description": "The name pattern of the Terraform resources",
          "type": "string",
          "default": "res-"
        }
      },
      "type": "object"
    },
    "ExportResourceGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseExportModel"
        }
      ],
      "description": "Export parameter for a resource group",
      "required": [
        "resourceGroupName"
      ],
      "properties": {
        "resourceGroupName": {
          "description": "The name of the resource group to be exported",
          "type": "string"
        },
        "namePattern": {
          "description": "The name pattern of the Terraform resources",
          "type": "string",
          "default": "res-"
        }
      },
      "type": "object"
    },
    "ExportQuery": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseExportModel"
        }
      ],
      "description": "Export parameter for resources queried by ARG (Azure Resource Graph)",
      "required": [
        "query"
      ],
      "properties": {
        "query": {
          "description": "The ARG where predicate. Note that you can combine multiple conditions in one `where` predicate, e.g. `resourceGroup =~ \"my-rg\" and type =~ \"microsoft.network/virtualnetworks\"`",
          "type": "string"
        },
        "namePattern": {
          "description": "The name pattern of the Terraform resources",
          "type": "string",
          "default": "res-"
        },
        "recursive": {
          "description": "Whether to recursively list child resources of the query result",
          "type": "boolean",
          "default": false
        }
      },
      "type": "object"
    },
    "BaseExportModel": {
      "description": "The base export parameter",
      "discriminator": "type",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/Type",
          "description": "The parameter type"
        },
        "targetProvider": {
          "description": "The target Azure Terraform Provider",
          "type": "string",
          "enum": [
            "azurerm",
            "azapi"
          ],
          "default": "azurerm",
          "x-ms-enum": {
            "name": "targetProvider",
            "modelAsString": true
          }
        },
        "fullProperties": {
          "description": "Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications to make it valid",
          "type": "boolean",
          "default": true
        },
        "maskSensitive": {
          "description": "Mask sensitive attributes in the Terraform configuration",
          "type": "boolean",
          "default": true
        }
      },
      "type": "object"
    },
    "Type": {
      "description": "The parameter type",
      "type": "string",
      "enum": [
        "ExportResource",
        "ExportResourceGroup",
        "ExportQuery"
      ],
      "x-ms-enum": {
        "name": "parameterType",
        "modelAsString": true
      }
    },
    "ExportResult": {
      "type": "object",
      "description": "The Terraform export result",
      "properties": {
        "configuration": {
          "type": "string",
          "description": "The Terraform configuration content"
        },
        "skippedResources": {
          "description": "A list of Azure resources which are not exported to Terraform due to there is no corresponding resources in Terraform",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errors": {
          "description": "A list of errors derived during exporting each resource",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorDetail"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "OperationStatus": {
      "description": "The status of the LRO operation.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The operation status resource Id."
        },
        "name": {
          "type": "string",
          "description": "The operation name."
        },
        "resourceId": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource for which the operation was performed",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the operation.",
          "format": "date-time",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the operation.",
          "format": "date-time",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "percentComplete": {
          "description": "The progress percentage of the operation, ranges from 0 to 100",
          "type": "number",
          "format": "double"
        },
        "properties": {
          "$ref": "#/definitions/ExportResult"
        }
      }
    }
  },
  "parameters": {
    "ExportParameter": {
      "description": "The export parameter",
      "in": "body",
      "name": "exportParameter",
      "required": true,
      "schema": {
        "$ref": "#/definitions/BaseExportModel"
      },
      "x-ms-parameter-location": "method"
    }
  }
}