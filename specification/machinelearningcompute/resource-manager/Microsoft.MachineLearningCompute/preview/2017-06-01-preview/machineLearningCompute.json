{
  "swagger": "2.0",
  "info": {
    "title": "Azure Machine Learning Compute Management Client",
    "description": "These APIs allow end users to operate on Azure Machine Learning Compute resources. They support the following operations:<ul><li>Create or update a cluster</li><li>Get a cluster</li><li>Patch a cluster</li><li>Delete a cluster</li><li>Get keys for a cluster</li><li>Check if updates are available for system services in a cluster</li><li>Update system services in a cluster</li><li>Get all clusters in a resource group</li><li>Get all clusters in a subscription</li></ul>",
    "version": "2017-06-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}": {
      "put": {
        "tags": [
          "OperationalizationClusters"
        ],
        "operationId": "OperationalizationClusters_CreateOrUpdate",
        "description": "Create or update an operationalization cluster.",
        "x-ms-examples": {
          "PUT Operationalization Cluster": {
            "$ref": "examples/OperationalizationClusters_CreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperationalizationCluster"
            },
            "description": "Parameters supplied to create or update an Operationalization cluster."
          }
        ],
        "responses": {
          "200": {
            "description": "The create or update succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationalizationCluster"
            }
          },
          "201": {
            "description": "The request was accepted and will complete asynchronously. To get the progress of the operation, call GET operation on the URL in Azure-AsyncOperation header field. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/OperationalizationCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "OperationalizationClusters"
        ],
        "operationId": "OperationalizationClusters_Get",
        "x-ms-examples": {
          "GET Operationalization Cluster": {
            "$ref": "examples/OperationalizationClusters_Get.json"
          }
        },
        "description": "Gets the operationalization cluster resource view. Note that the credentials are not returned by this call. Call ListKeys to get them.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationalizationCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "OperationalizationClusters"
        ],
        "operationId": "OperationalizationClusters_Update",
        "x-ms-examples": {
          "PATCH Operationalization Cluster": {
            "$ref": "examples/OperationalizationClusters_Update.json"
          }
        },
        "description": "The PATCH operation can be used to update only the tags for a cluster. Use PUT operation to update other properties.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "The parameters supplied to patch the cluster.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperationalizationClusterUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The update completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationalizationCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OperationalizationClusters"
        ],
        "operationId": "OperationalizationClusters_Delete",
        "x-ms-examples": {
          "DELETE Operationalization Cluster": {
            "$ref": "examples/OperationalizationClusters_Delete.json"
          }
        },
        "description": "Deletes the specified cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The cluster existed and was deleted successfully."
          },
          "202": {
            "description": "The delete request was accepted and will complete asynchronously. The know the progress of the delete operation do a GET call on the URI in the Location header. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI of the async operation."
              }
            }
          },
          "204": {
            "description": "No Content. The cluster did not exist but the request was well formed."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/listKeys": {
      "post": {
        "tags": [
          "OperationalizationClusters"
        ],
        "operationId": "OperationalizationClusters_ListKeys",
        "x-ms-examples": {
          "List Keys of an Operationalization Cluster": {
            "$ref": "examples/OperationalizationClusters_ListKeys.json"
          }
        },
        "description": "Gets the credentials for the specified cluster such as Storage, ACR and ACS credentials. This is a long running operation because it fetches keys from dependencies.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationalizationClusterCredentials"
            }
          },
          "202": {
            "description": "The request was accepted and will complete asynchronously. The know the progress of the async operation do a GET call on the URI in the Location header. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI of the async operation."
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/checkUpdate": {
      "post": {
        "tags": [
          "OperationalizationClusters"
        ],
        "operationId": "OperationalizationClusters_CheckUpdate",
        "x-ms-examples": {
          "Check Update for an Operationalization Cluster": {
            "$ref": "examples/OperationalizationClusters_CheckUpdate.json"
          }
        },
        "description": "Checks if updates are available for system services in the cluster",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request completed successfully.",
            "schema": {
              "$ref": "#/definitions/CheckUpdateResponse"
            }
          },
          "202": {
            "description": "The request was accepted and will complete asynchronously. The know the progress of the async operation do a GET call on the URI in the Location header. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI of the async operation."
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters/{clusterName}/updateSystem": {
      "post": {
        "tags": [
          "OperationalizationClusters"
        ],
        "operationId": "OperationalizationClusters_UpdateSystem",
        "x-ms-examples": {
          "Update System Services in an Operationalization Cluster": {
            "$ref": "examples/OperationalizationClusters_UpdateSystem.json"
          }
        },
        "description": "Updates system services in a cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request completed successfully. Check the response body for update details.",
            "schema": {
              "$ref": "#/definitions/UpdateSystemResponse"
            }
          },
          "202": {
            "description": "The request was accepted and will complete asynchronously. The know the progress of the async operation do a GET call on the URI in the Location header. For more information about Asynchronous Operations, see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI of the async operation."
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningCompute/operationalizationClusters": {
      "get": {
        "tags": [
          "OperationalizationClusters"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "operationId": "OperationalizationClusters_ListByResourceGroup",
        "x-ms-examples": {
          "List Operationalization Clusters by Resource Group": {
            "$ref": "examples/OperationalizationClusters_ListByResourceGroup.json"
          }
        },
        "description": "Gets the clusters in the specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "type": "string",
            "description": "Continuation token for pagination.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The response includes a paginated array of cluster objects and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/. Note that the cluster objects are sparsely populated to conserve space in the response content. To get the full cluster object, call the GET operation on the cluster.",
            "schema": {
              "$ref": "#/definitions/PaginatedOperationalizationClustersList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningCompute/operationalizationClusters": {
      "get": {
        "tags": [
          "OperationalizationClusters"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "operationId": "OperationalizationClusters_ListBySubscriptionId",
        "x-ms-examples": {
          "List Operationalization Clusters by Subscription": {
            "$ref": "examples/OperationalizationClusters_ListBySubscription.json"
          }
        },
        "description": "Gets the operationalization clusters in the specified subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "type": "string",
            "description": "Continuation token for pagination.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The response includes a paginated array of cluster objects and a URI to the next set of results, if any. Note that the cluster objects are sparsely populated to conserve space in the response content. To get the full cluster object, call the GET operation on the cluster.",
            "schema": {
              "$ref": "#/definitions/PaginatedOperationalizationClustersList"
            }
          }
        }
      }
    },
    "/providers/Microsoft.MachineLearningCompute/operations": {
      "get": {
        "tags": [
          "MachineLearningComputeOperations"
        ],
        "operationId": "MachineLearningCompute_ListAvailableOperations",
        "x-ms-examples": {
          "Machine Learning Compute List Available Operations": {
            "$ref": "examples/MachineLearningCompute_ListAvailableOperations.json"
          }
        },
        "description": "Gets all available operations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AvailableOperations"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "description": "The Azure subscription ID.",
      "in": "path",
      "type": "string",
      "required": true
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "description": "Name of the resource group in which the cluster is located.",
      "in": "path",
      "type": "string",
      "required": true,
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ClusterNameParameter": {
      "name": "clusterName",
      "description": "The name of the cluster.",
      "in": "path",
      "type": "string",
      "required": true,
      "pattern": "^[a-zA-Z][-\\w\\._\\(\\)]+[a-zA-Z0-9]$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "in": "query",
      "name": "api-version",
      "type": "string",
      "description": "The version of the Microsoft.MachineLearningCompute resource provider API to use.",
      "required": true
    }
  },
  "definitions": {
    "Resource": {
      "description": "Azure resource",
      "x-ms-azure-resource": true,
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "description": "Specifies the resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Specifies the name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Specifies the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "OperationalizationCluster": {
      "type": "object",
      "description": "Instance of an Azure ML Operationalization Cluster resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationalizationClusterProperties",
          "description": "Properties of an operationalization cluster."
        }
      }
    },
    "OperationalizationClusterProperties": {
      "type": "object",
      "description": "Properties of an operationalization cluster",
      "required": [
        "clusterType",
        "containerService"
      ],
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the cluster."
        },
        "createdOn": {
          "type": "string",
          "description": "The date and time when the cluster was created.",
          "format": "date-time",
          "readOnly": true
        },
        "modifiedOn": {
          "type": "string",
          "description": "The date and time when the cluster was last modified.",
          "format": "date-time",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "clusterType": {
          "type": "string",
          "description": "The cluster type.",
          "enum": [
            "ACS"
          ],
          "x-ms-enum": {
            "name": "ClusterType",
            "modelAsString": true
          }
        },
        "storageAccount": {
          "description": "Storage Account properties.",
          "$ref": "#/definitions/StorageAccountProperties"
        },
        "containerRegistry": {
          "description": "Container Registry properties.",
          "$ref": "#/definitions/ContainerRegistryProperties"
        },
        "containerService": {
          "$ref": "#/definitions/AcsClusterProperties",
          "description": "Parameters for the Azure Container Service cluster."
        },
        "appInsights": {
          "description": "AppInsights configuration",
          "$ref": "#/definitions/AppInsightsCredentials"
        },
        "globalServiceConfiguration": {
          "$ref": "#/definitions/GlobalServiceConfiguration",
          "description": "Contains global configuration for the web services in the cluster."
        }
      }
    },
    "StorageAccountProperties": {
      "type": "object",
      "description": "Properties of Storage Account.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created."
        }
      }
    },
    "ContainerRegistryProperties": {
      "type": "object",
      "description": "Properties of Azure Container Registry.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "ARM resource ID of the Azure Container Registry used to store Docker images for web services in the cluster. If not provided one will be created. This cannot be changed once the cluster is created."
        }
      }
    },
    "AcsClusterProperties": {
      "type": "object",
      "description": "Information about the container service backing the cluster",
      "required": [
        "orchestratorType",
        "orchestratorProperties"
      ],
      "properties": {
        "clusterFqdn": {
          "type": "string",
          "description": "The FQDN of the cluster. ",
          "readOnly": true
        },
        "orchestratorType": {
          "type": "string",
          "description": "Type of orchestrator. It cannot be changed once the cluster is created.",
          "enum": [
            "Kubernetes"
          ],
          "x-ms-enum": {
            "name": "Orchestrator",
            "modelAsString": true
          }
        },
        "orchestratorProperties": {
          "description": "Orchestrator specific properties",
          "$ref": "#/definitions/KubernetesClusterProperties"
        },
        "systemServices": {
          "type": "array",
          "description": "The system services deployed to the cluster",
          "items": {
            "$ref": "#/definitions/SystemServices"
          }
        },
        "agentCount": {
          "type": "integer",
          "description": "The number of agent nodes in the Container Service. This can be changed to scale the cluster.",
          "minimum": 1,
          "maximum": 100,
          "default": 2
        },
        "agentVmSize": {
          "type": "string",
          "description": "The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created.",
          "default": "Standard_D2_v2",
          "enum": [
            "Standard_A0",
            "Standard_A1",
            "Standard_A2",
            "Standard_A3",
            "Standard_A4",
            "Standard_A5",
            "Standard_A6",
            "Standard_A7",
            "Standard_A8",
            "Standard_A9",
            "Standard_A10",
            "Standard_A11",
            "Standard_D1",
            "Standard_D2",
            "Standard_D3",
            "Standard_D4",
            "Standard_D11",
            "Standard_D12",
            "Standard_D13",
            "Standard_D14",
            "Standard_D1_v2",
            "Standard_D2_v2",
            "Standard_D3_v2",
            "Standard_D4_v2",
            "Standard_D5_v2",
            "Standard_D11_v2",
            "Standard_D12_v2",
            "Standard_D13_v2",
            "Standard_D14_v2",
            "Standard_G1",
            "Standard_G2",
            "Standard_G3",
            "Standard_G4",
            "Standard_G5",
            "Standard_DS1",
            "Standard_DS2",
            "Standard_DS3",
            "Standard_DS4",
            "Standard_DS11",
            "Standard_DS12",
            "Standard_DS13",
            "Standard_DS14",
            "Standard_GS1",
            "Standard_GS2",
            "Standard_GS3",
            "Standard_GS4",
            "Standard_GS5"
          ],
          "x-ms-enum": {
            "name": "AgentVMSizeTypes",
            "modelAsString": true
          }
        }
      }
    },
    "KubernetesClusterProperties": {
      "type": "object",
      "description": "Kubernetes cluster specific properties",
      "x-ms-discriminator-value": "Kubernetes",
      "required": [
        "servicePrincipal"
      ],
      "properties": {
        "servicePrincipal": {
          "description": "The Azure Service Principal used by Kubernetes",
          "$ref": "#/definitions/ServicePrincipalProperties"
        }
      }
    },
    "SystemServices": {
      "type": "string",
      "description": "The choices of system services.",
      "enum": [
        "Scoring",
        "Batch"
      ],
      "x-ms-enum": {
        "name": "SystemServices",
        "modelAsString": true
      }
    },
    "ServicePrincipalProperties": {
      "type": "object",
      "description": "The Azure service principal used by Kubernetes for configuring load balancers",
      "required": [
        "clientId",
        "secret"
      ],
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The service principal client ID"
        },
        "secret": {
          "type": "string",
          "description": "The service principal secret. This is not returned in response of GET/PUT on the resource. To see this please call listKeys."
        }
      }
    },
    "OperationalizationClusterUpdateParameters": {
      "type": "object",
      "description": "Parameters for PATCH operation on an operationalization cluster",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters."
        }
      }
    },
    "GlobalServiceConfiguration": {
      "type": "object",
      "description": "Global configuration for services in the cluster.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "The configuration ETag for updates."
        },
        "ssl": {
          "description": "The SSL configuration properties",
          "$ref": "#/definitions/SslConfiguration"
        },
        "serviceAuth": {
          "description": "Optional global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.",
          "$ref": "#/definitions/ServiceAuthConfiguration"
        },
        "autoScale": {
          "description": "The auto-scale configuration",
          "$ref": "#/definitions/AutoScaleConfiguration"
        }
      },
      "additionalProperties": {
        "type": "string",
        "description": "Any additional configuration key-value pairs."
      }
    },
    "SslConfiguration": {
      "type": "object",
      "description": "SSL configuration. If configured data-plane calls to user services will be exposed over SSL only.",
      "properties": {
        "status": {
          "type": "string",
          "default": "Enabled",
          "description": "SSL status. Allowed values are Enabled and Disabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true
          }
        },
        "cert": {
          "type": "string",
          "description": "The SSL cert data in PEM format encoded as base64 string"
        },
        "key": {
          "type": "string",
          "description": "The SSL key data in PEM format encoded as base64 string. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API."
        }
      }
    },
    "ServiceAuthConfiguration": {
      "type": "object",
      "description": "Global service auth configuration properties. These are the data-plane authorization keys and are used if a service doesn't define it's own.",
      "required": [
        "primaryAuthKeyHash",
        "secondaryAuthKeyHash"
      ],
      "properties": {
        "primaryAuthKeyHash": {
          "type": "string",
          "description": "The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API."
        },
        "secondaryAuthKeyHash": {
          "type": "string",
          "description": "The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API."
        }
      }
    },
    "AutoScaleConfiguration": {
      "type": "object",
      "description": "AutoScale configuration properties.",
      "properties": {
        "status": {
          "type": "string",
          "default": "Disabled",
          "description": "If auto-scale is enabled for all services. Each service can turn it off individually.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true
          }
        },
        "minReplicas": {
          "type": "integer",
          "description": "The minimum number of replicas for each service.",
          "minimum": 1,
          "default": 1
        },
        "maxReplicas": {
          "type": "integer",
          "description": "The maximum number of replicas for each service.",
          "minimum": 1,
          "default": 100
        },
        "targetUtilization": {
          "type": "number",
          "description": "The target utilization."
        },
        "refreshPeriodInSeconds": {
          "type": "integer",
          "description": "Refresh period in seconds."
        }
      }
    },
    "OperationalizationClusterCredentials": {
      "type": "object",
      "description": "Credentials to resources in the cluster.",
      "properties": {
        "storageAccount": {
          "type": "object",
          "description": "Credentials for the Storage Account.",
          "$ref": "#/definitions/StorageAccountCredentials"
        },
        "containerRegistry": {
          "type": "object",
          "description": "Credentials for Azure Container Registry.",
          "$ref": "#/definitions/ContainerRegistryCredentials"
        },
        "containerService": {
          "type": "object",
          "description": "Credentials for Azure Container Service.",
          "$ref": "#/definitions/ContainerServiceCredentials"
        },
        "appInsights": {
          "type": "object",
          "description": "Credentials for Azure AppInsights.",
          "$ref": "#/definitions/AppInsightsCredentials"
        },
        "serviceAuthConfiguration": {
          "type": "object",
          "description": "Global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.",
          "$ref": "#/definitions/ServiceAuthConfiguration"
        },
        "sslConfiguration": {
          "type": "object",
          "description": "The SSL configuration for the services.",
          "$ref": "#/definitions/SslConfiguration"
        }
      }
    },
    "StorageAccountCredentials": {
      "type": "object",
      "description": "Access information for the storage account.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The ARM resource ID of the storage account.",
          "readOnly": true
        },
        "primaryKey": {
          "type": "string",
          "description": "The primary key of the storage account.",
          "readOnly": true
        },
        "secondaryKey": {
          "type": "string",
          "description": "The secondary key of the storage account.",
          "readOnly": true
        }
      }
    },
    "ContainerRegistryCredentials": {
      "type": "object",
      "description": "Information about the Azure Container Registry which contains the images deployed to the cluster.",
      "properties": {
        "loginServer": {
          "type": "string",
          "description": "The ACR login server name. User name is the first part of the FQDN.",
          "readOnly": true
        },
        "password": {
          "type": "string",
          "description": "The ACR primary password.",
          "readOnly": true
        },
        "password2": {
          "type": "string",
          "description": "The ACR secondary password.",
          "readOnly": true
        }
      }
    },
    "ContainerServiceCredentials": {
      "type": "object",
      "description": "Information about the Azure Container Registry which contains the images deployed to the cluster.",
      "properties": {
        "acsKubeConfig": {
          "type": "string",
          "description": "The ACS kube config file.",
          "readOnly": true
        },
        "servicePrincipalConfiguration": {
          "type": "string",
          "description": "Client secret for the Service Principal used by Kubernetes.",
          "readOnly": true,
          "$ref": "#/definitions/ServicePrincipalProperties"
        },
        "imagePullSecretName": {
          "type": "string",
          "description": "The ACR image pull secret name which was created in Kubernetes.",
          "readOnly": true
        }
      }
    },
    "AppInsightsCredentials": {
      "type": "object",
      "description": "AppInsights credentials.",
      "properties": {
        "appId": {
          "type": "string",
          "description": "The AppInsights application ID."
        },
        "apiKey": {
          "type": "string",
          "description": "The AppInsights API key. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API."
        }
      }
    },
    "CheckUpdateResponse": {
      "type": "object",
      "description": "Information about updates available for system services in a cluster.",
      "properties": {
        "updatesAvailable": {
          "type": "string",
          "description": "Yes if updates are available for the system services, No if not.",
          "readOnly": true,
          "enum": [
            "Yes",
            "No"
          ],
          "x-ms-enum": {
            "name": "UpdatesAvailable",
            "modelAsString": true
          }
        }
      }
    },
    "UpdateSystemResponse": {
      "type": "object",
      "description": "Response of the updateSystem API",
      "properties": {
        "updateStatus": {
          "type": "string",
          "description": "Update status",
          "readOnly": true,
          "enum": [
            "InProgress",
            "Completed"
          ],
          "x-ms-enum": {
            "name": "UpdateStatus",
            "modelAsString": true
          }
        },
        "updateStartedOn": {
          "type": "string",
          "description": "Read Only: The date and time when the last system services update was started.",
          "format": "date-time",
          "readOnly": true
        },
        "updateCompletedOn": {
          "type": "string",
          "description": "Read Only: The date and time when the last system services update completed.",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "PaginatedOperationalizationClustersList": {
      "type": "object",
      "description": "Paginated list of operationalization clusters.",
      "properties": {
        "value": {
          "type": "array",
          "description": "An array of cluster objects.",
          "items": {
            "$ref": "#/definitions/OperationalizationCluster"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "A continuation link (absolute URI) to the next page of results in the list."
        }
      }
    },
    "AsyncOperationStatus": {
      "type": "object",
      "description": "Azure async operation status.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Async operation id."
        },
        "name": {
          "type": "string",
          "description": "Async operation name."
        },
        "provisioningState": {
          "type": "string",
          "description": "Read Only: The provisioning state of the cluster. Valid values are Unknown, Provisioning, Succeeded, and Failed.",
          "enum": [
            "Unknown",
            "Updating",
            "Creating",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "description": "The date time that the async operation started.",
          "format": "date-time",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "The date time that the async operation finished.",
          "format": "date-time",
          "readOnly": true
        },
        "percentComplete": {
          "type": "number",
          "description": "Async operation progress."
        },
        "errorInfo": {
          "$ref": "#/definitions/AsyncOperationErrorInfo",
          "description": "If the async operation fails, this structure contains the error details."
        }
      }
    },
    "AsyncOperationErrorInfo": {
      "type": "object",
      "description": "The error detail information for async operation",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "target": {
          "type": "string",
          "description": "The error target."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "details": {
          "type": "array",
          "description": "An array containing error information.",
          "items": {
            "$ref": "#/definitions/AsyncOperationErrorInfo"
          }
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response information",
      "properties": {
        "code": {
          "type": "string",
          "description": "error code"
        },
        "message": {
          "type": "string",
          "description": "Error message"
        },
        "details": {
          "type": "array",
          "description": "An array of error detail objects.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          }
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorDetail": {
      "type": "object",
      "description": "Error detail information.",
      "properties": {
        "code": {
          "type": "string",
          "description": "error code"
        },
        "message": {
          "type": "string",
          "description": "error message"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "AvailableOperations": {
      "type": "object",
      "description": "Available operation list",
      "properties": {
        "value": {
          "type": "array",
          "description": "An array of available operations",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          }
        }
      }
    },
    "ResourceOperation": {
      "type": "object",
      "description": "Resource operation",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this operation."
        },
        "display": {
          "type": "object",
          "description": "Display of the operation",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The resource provider name"
            },
            "resource": {
              "type": "string",
              "description": "The resource name"
            },
            "operation": {
              "type": "string",
              "description": "The operation"
            },
            "description": {
              "type": "string",
              "description": "The description of the operation"
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The operation origin"
        }
      }
    }
  }
}
