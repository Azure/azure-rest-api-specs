{
  "swagger": "2.0",
  "info": {
    "title": "CosmosDB Mongo Cluster",
    "version": "2023-10-01",
    "description": "The Microsoft Azure management API provides create, read, update, and delete functionality for Azure Cosmos DB for MongoDB vCore resources including clusters and firewall rules.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "MongoClusters"
    },
    {
      "name": "FirewallRules"
    }
  ],
  "paths": {
    "/providers/Microsoft.DocumentDB/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/checkMongoClusterNameAvailability": {
      "post": {
        "operationId": "MongoClustersOperations_CheckNameAvailability",
        "description": "Check the availability of name for resource",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The required parameters for checking if resource name is available.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/mongoClusters": {
      "get": {
        "operationId": "MongoClusters_List",
        "tags": [
          "MongoClusters"
        ],
        "description": "List all the mongo clusters in a given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters": {
      "get": {
        "operationId": "MongoClusters_ListByResourceGroup",
        "tags": [
          "MongoClusters"
        ],
        "description": "List all the mongo clusters in a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}": {
      "get": {
        "operationId": "MongoClusters_Get",
        "tags": [
          "MongoClusters"
        ],
        "description": "Gets information about a mongo cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "MongoClusters_CreateOrUpdate",
        "tags": [
          "MongoClusters"
        ],
        "description": "Create or update a mongo cluster. Update overwrites all properties for the resource. To only modify some of the properties, use PATCH.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoCluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MongoCluster' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MongoCluster"
            }
          },
          "201": {
            "description": "Resource 'MongoCluster' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MongoCluster"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "MongoClusters_Update",
        "tags": [
          "MongoClusters"
        ],
        "description": "Updates an existing mongo cluster. The request body can contain one to many of the properties present in the normal mongo cluster definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoClusterUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoCluster"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MongoClusters_Delete",
        "tags": [
          "MongoClusters"
        ],
        "description": "Deletes a mongo cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/firewallRules": {
      "get": {
        "operationId": "FirewallRules_ListByMongoCluster",
        "tags": [
          "FirewallRules"
        ],
        "description": "List all the firewall rules in a given mongo cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FirewallRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/firewallRules/{firewallRuleName}": {
      "get": {
        "operationId": "FirewallRules_GetFirewallRule",
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets information about a mongo cluster firewall rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "The name of the mongo cluster firewall rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9][-_.a-zA-Z0-9]*"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "FirewallRules_CreateOrUpdateFirewallRule",
        "tags": [
          "FirewallRules"
        ],
        "description": "Creates a new firewall rule or updates an existing firewall rule on a mongo cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "The name of the mongo cluster firewall rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9][-_.a-zA-Z0-9]*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FirewallRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "201": {
            "description": "Resource 'FirewallRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FirewallRules_DeleteFirewallRule",
        "tags": [
          "FirewallRules"
        ],
        "description": "Deletes a mongo cluster firewall rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "The name of the mongo cluster firewall rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9][-_.a-zA-Z0-9]*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/mongoClusters/{mongoClusterName}/listConnectionStrings": {
      "post": {
        "operationId": "MongoClusters_ListConnectionStrings",
        "tags": [
          "MongoClusters"
        ],
        "description": "List mongo cluster connection strings. This includes the default connection string using SCRAM-SHA-256, as well as other connection strings supported by the cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mongoClusterName",
            "in": "path",
            "description": "The name of the mongo cluster.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 40,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListConnectionStringsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActionType": {
      "type": "string",
      "enum": [
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "CheckNameAvailabilityReason": {
      "type": "string",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "CheckNameAvailabilityReason",
        "modelAsString": true
      }
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "$ref": "#/definitions/CheckNameAvailabilityReason",
          "description": "The reason why the given name is not available."
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ConnectionString": {
      "type": "object",
      "description": "Connection string for the mongo cluster",
      "properties": {
        "connectionString": {
          "type": "string",
          "description": "Value of the connection string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the connection string",
          "readOnly": true
        }
      }
    },
    "CreateMode": {
      "type": "string",
      "enum": [
        "Default",
        "PointInTimeRestore"
      ],
      "x-ms-enum": {
        "name": "CreateMode",
        "modelAsString": true
      }
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "FirewallRule": {
      "type": "object",
      "description": "Represents a mongo cluster firewall rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FirewallRuleListResult": {
      "type": "object",
      "description": "The response of a FirewallRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FirewallRule items on this page",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FirewallRuleProperties": {
      "type": "object",
      "description": "The properties of a mongo cluster firewall rule.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the firewall rule.",
          "readOnly": true
        },
        "startIpAddress": {
          "type": "string",
          "description": "The start IP address of the mongo cluster firewall rule. Must be IPv4 format.",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        },
        "endIpAddress": {
          "type": "string",
          "description": "The end IP address of the mongo cluster firewall rule. Must be IPv4 format.",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        }
      },
      "required": [
        "startIpAddress",
        "endIpAddress"
      ]
    },
    "ListConnectionStringsResult": {
      "type": "object",
      "description": "The connection strings for the given mongo cluster.",
      "properties": {
        "connectionStrings": {
          "type": "array",
          "description": "An array that contains the connection strings for a mongo cluster.",
          "items": {
            "$ref": "#/definitions/ConnectionString"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "MongoCluster": {
      "type": "object",
      "description": "Represents a mongo cluster resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MongoClusterListResult": {
      "type": "object",
      "description": "The response of a MongoCluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MongoCluster items on this page",
          "items": {
            "$ref": "#/definitions/MongoCluster"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MongoClusterProperties": {
      "type": "object",
      "description": "The properties of a mongo cluster.",
      "properties": {
        "createMode": {
          "$ref": "#/definitions/CreateMode",
          "description": "The mode to create a mongo cluster.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "restoreParameters": {
          "$ref": "#/definitions/MongoClusterRestoreParameters",
          "description": "Parameters used for restore operations",
          "x-ms-mutability": [
            "create"
          ]
        },
        "administratorLogin": {
          "type": "string",
          "description": "The administrator's login for the mongo cluster.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "administratorLoginPassword": {
          "type": "string",
          "format": "password",
          "description": "The password of the administrator login.",
          "x-ms-mutability": [
            "update",
            "create"
          ],
          "x-ms-secret": true
        },
        "serverVersion": {
          "type": "string",
          "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
        },
        "connectionString": {
          "type": "string",
          "description": "The default mongo connection string for the cluster.",
          "readOnly": true
        },
        "earliestRestoreTime": {
          "type": "string",
          "description": "Earliest restore timestamp in UTC ISO8601 format.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "A provisioning state of the mongo cluster.",
          "readOnly": true
        },
        "clusterStatus": {
          "$ref": "#/definitions/MongoClusterStatus",
          "description": "A status of the mongo cluster.",
          "readOnly": true
        },
        "nodeGroupSpecs": {
          "type": "array",
          "description": "The list of node group specs in the cluster.",
          "items": {
            "$ref": "#/definitions/NodeGroupSpec"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MongoClusterRestoreParameters": {
      "type": "object",
      "description": "Parameters used for restore operations",
      "properties": {
        "pointInTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "UTC point in time to restore a mongo cluster"
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Resource ID to locate the source cluster to restore"
        }
      }
    },
    "MongoClusterStatus": {
      "type": "string",
      "enum": [
        "Ready",
        "Provisioning",
        "Updating",
        "Starting",
        "Stopping",
        "Stopped",
        "Dropping"
      ],
      "x-ms-enum": {
        "name": "MongoClusterStatus",
        "modelAsString": true
      }
    },
    "MongoClusterUpdate": {
      "type": "object",
      "description": "The type used for update operations of the MongoCluster.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/MongoClusterUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "MongoClusterUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the MongoCluster.",
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "The administrator's login for the mongo cluster.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "administratorLoginPassword": {
          "type": "string",
          "format": "password",
          "description": "The password of the administrator login.",
          "x-ms-mutability": [
            "update",
            "create"
          ],
          "x-ms-secret": true
        },
        "serverVersion": {
          "type": "string",
          "description": "The Mongo DB server version. Defaults to the latest available version if not specified."
        },
        "nodeGroupSpecs": {
          "type": "array",
          "description": "The list of node group specs in the cluster.",
          "items": {
            "$ref": "#/definitions/NodeGroupSpec"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NodeGroupProperties": {
      "type": "object",
      "description": "The properties of the node group on a cluster.",
      "properties": {
        "sku": {
          "type": "string",
          "description": "The resource sku for the node group. This defines the size of CPU and memory that is provisioned for each node. Example values: 'M30', 'M40'."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "The disk storage size for the node group in GB. Example values: 128, 256, 512, 1024."
        },
        "enableHa": {
          "type": "boolean",
          "description": "Whether high availability is enabled on the node group."
        }
      }
    },
    "NodeGroupSpec": {
      "type": "object",
      "description": "Specification for a node group.",
      "properties": {
        "sku": {
          "type": "string",
          "description": "The resource sku for the node group. This defines the size of CPU and memory that is provisioned for each node. Example values: 'M30', 'M40'."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "The disk storage size for the node group in GB. Example values: 128, 256, 512, 1024."
        },
        "enableHa": {
          "type": "boolean",
          "description": "Whether high availability is enabled on the node group."
        },
        "kind": {
          "$ref": "#/definitions/NodeKind",
          "description": "The node type deployed in the node group."
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes in the node group."
        }
      }
    },
    "NodeKind": {
      "type": "string",
      "enum": [
        "Shard"
      ],
      "x-ms-enum": {
        "name": "NodeKind",
        "modelAsString": true
      }
    },
    "Origin": {
      "type": "string",
      "enum": [
        "user",
        "system",
        "user,system"
      ],
      "x-ms-enum": {
        "name": "Origin",
        "modelAsString": true
      }
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "InProgress",
        "Updating",
        "Dropping"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-10-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_10_01",
            "value": "2023-10-01"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
