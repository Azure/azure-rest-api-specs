import "@typespec/versioning";
using TypeSpec.Versioning;
/** Describes the schema of the Azure Storage events published to Azure Event Grid. This corresponds to the Data property of an EventGridEvent. */
namespace Microsoft.EventGrid.SystemEvents {
  /** The access tier of the blob. */
  union StorageBlobAccessTier {
    /** The blob is in access tier Hot */
    "Hot",

    /** The blob is in access tier Cool */
    "Cool",

    /** The blob is in access tier Cold */
    "Cold",

    /** The blob is in access tier Archive */
    "Archive",

    /** The blob is in access tier Default(Inferred) */
    "Default",

    string,
  }

  const MicrosoftStorageBlobCreatedExample: StorageBlobCreatedEventData = #{
    api: "PutBlob",
    clientRequestId: "89bc72c2-5dfe-4d9f-9706-43612c1bd01b",
    requestId: "beb21a5e-401e-002b-3749-928517000000",
    eTag: "0x8D96060BDA19D9D",
    contentType: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
    contentLength: 17555,
    blobType: "BlockBlob",
    accessTier: "Hot",
    url: "https://jolovstorage.blob.core.windows.net/gaocontainer/Template1.xlsx",
    sequencer: "0000000000000000000000000000B00D0000000005b058d3",
    storageDiagnostics: #{ batchId: "23f68872-a006-0065-0049-9240f2000000" },
  };

  /** Schema of the Data property of an EventGridEvent for a Microsoft.Storage.BlobCreated event. */
  @example(MicrosoftStorageBlobCreatedExample)
  model StorageBlobCreatedEventData {
    /** The name of the API/operation that triggered this event. */
    api?: string;

    /** A request id provided by the client of the storage API operation that triggered this event. */
    clientRequestId?: string;

    /** The request id generated by the storage service for the storage API operation that triggered this event. */
    requestId?: string;

    /** The etag of the blob at the time this event was triggered. */
    eTag?: string;

    /** The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob. */
    contentType?: string;

    /** The size of the blob in bytes. This is the same as what would be returned in the Content-Length header from the blob. */
    contentLength?: int64;

    /** The offset of the blob in bytes. */
    contentOffset?: int64;

    /** The type of blob. */
    blobType?: string;

    /** The current tier of the blob. */
    accessTier: StorageBlobAccessTier;

    /** The path to the blob. */
    url?: string;

    /** An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name. */
    sequencer?: string;

    ...StorageBaseEventData;
  }

  // TODO etag and contentLength are commented out because they are not present in the swagger
  const MicrosoftStorageBlobDeletedExample: StorageBlobDeletedEventData = #{
    api: "DeleteBlob",
    requestId: "3626e710-c01e-005c-794a-920056000000",

    //eTag: "0x8D96061B33FE1D2",
    contentType: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",

    //contentLength: 17555,
    blobType: "BlockBlob",

    url: "https://jolovstorage.blob.core.windows.net/gaocontainer/Template1.xlsx",
    sequencer: "0000000000000000000000000000B00D0000000005b29696",
    storageDiagnostics: #{ batchId: "24045172-a006-0065-004a-9240f2000000" },
  };

  /** Schema of the Data property of an EventGridEvent for a Microsoft.Storage.BlobDeleted event. */
  @example(MicrosoftStorageBlobDeletedExample)
  model StorageBlobDeletedEventData {
    /** The name of the API/operation that triggered this event. */
    api?: string;

    /** A request id provided by the client of the storage API operation that triggered this event. */
    clientRequestId?: string;

    /** The request id generated by the storage service for the storage API operation that triggered this event. */
    requestId?: string;

    /** The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob. */
    contentType?: string;

    /** The type of blob. */
    blobType?: string;

    /** The path to the blob. */
    url?: string;

    /** An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name. */
    sequencer?: string;

    ...StorageBaseEventData;
  }

  // TODO DirectoryProperties and blobUrl are commented out because they are not present in the swagger
  const MicrosoftStorageDirectoryCreatedExample: StorageDirectoryCreatedEventData = #{
    api: "CreateDirectory",
    requestId: "d706a817-d01f-0002-3e60-92fcb5000000",
    eTag: "0x8D96077BE69372E",

    // directoryProperties: #[
    //   #{
    //     acl: #[
    //       #{
    //         access: "u::rwx,g::rx,o::",
    //         permission: "0750",
    //         owner: "$superuser",
    //         group: "$superuser"
    //       }
    //     ]
    //   }
    // ],
    // blobUrl: "https://jolovdfs.blob.core.windows.net/gaocontainer/gaodir",
    url: "https://jolovdfs.dfs.core.windows.net/gaocontainer/gaodir",

    sequencer: "00000000000000000000000000000102000000000001e192",
    storageDiagnostics: #{ batchId: "e4b5c5d5-b727-4429-b35f-babb83eb15f1" },
  };
  /** Schema of the Data property of an EventGridEvent for a Microsoft.Storage.DirectoryCreated event. */
  @example(MicrosoftStorageDirectoryCreatedExample)
  model StorageDirectoryCreatedEventData {
    /** The name of the API/operation that triggered this event. */
    api?: string;

    /** A request id provided by the client of the storage API operation that triggered this event. */
    clientRequestId?: string;

    /** The request id generated by the storage service for the storage API operation that triggered this event. */
    requestId?: string;

    /** The etag of the directory at the time this event was triggered. */
    eTag?: string;

    /** The path to the directory. */
    url?: string;

    /** An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name. */
    sequencer?: string;

    ...StorageBaseEventData;
  }

  // TODO blobUrl is commented out because it is not present in the swagger
  const MicrosoftStorageDirectoryDeletedExample: StorageDirectoryDeletedEventData = #{
    api: "DeleteDirectory",
    requestId: "45a3a9fa-001f-0001-1b60-921dd1000000",

    // blobUrl: "https://jolovdfs.blob.core.windows.net/gaocontainer/gaodir",
    url: "https://jolovdfs.dfs.core.windows.net/gaocontainer/gaodir",

    recursive: "false",
    sequencer: "00000000000000000000000000000102000000000001e1a4",
    storageDiagnostics: #{ batchId: "c41d46e2-dfa5-4dd1-832a-9a63bed28ebc" },
  };
  /** Schema of the Data property of an EventGridEvent for a Microsoft.Storage.DirectoryDeleted event. */
  @example(MicrosoftStorageDirectoryDeletedExample)
  model StorageDirectoryDeletedEventData {
    /** The name of the API/operation that triggered this event. */
    api?: string;

    /** A request id provided by the client of the storage API operation that triggered this event. */
    clientRequestId?: string;

    /** The request id generated by the storage service for the storage API operation that triggered this event. */
    requestId?: string;

    /** The path to the deleted directory. */
    url?: string;

    /** Is this event for a recursive delete operation. */
    recursive?: string;

    /** An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name. */
    sequencer?: string;

    ...StorageBaseEventData;
  }

  // TODO destinationBlobUrl and sourceBlobUrl are commented out because they are not present in the swagger
  const MicrosoftStorageBlobRenamedExample: StorageBlobRenamedEventData = #{
    api: "RenameFile",
    requestId: "707665f1-a01f-0037-799a-9490a1000000",

    // destinationBlobUrl: "https://jolovdfs.blob.core.windows.net/gaocontainer/newname",
    // sourceBlobUrl: "https://jolovdfs.blob.core.windows.net/gaocontainer/metrics.txt",
    destinationUrl: "https://jolovdfs.dfs.core.windows.net/gaocontainer/newname",

    sourceUrl: "https://jolovdfs.dfs.core.windows.net/gaocontainer/metrics.txt",
    sequencer: "0000000000000000000000000000010200000000000364db",
    storageDiagnostics: #{ batchId: "69bbaf93-267f-4752-9267-b575e61e0d5d" },
  };
  /** Schema of the Data property of an EventGridEvent for a Microsoft.Storage.BlobRenamed event. */
  @example(MicrosoftStorageBlobRenamedExample)
  model StorageBlobRenamedEventData {
    /** The name of the API/operation that triggered this event. */
    api?: string;

    /** A request id provided by the client of the storage API operation that triggered this event. */
    clientRequestId?: string;

    /** The request id generated by the storage service for the storage API operation that triggered this event. */
    requestId?: string;

    /** The path to the blob that was renamed. */
    sourceUrl?: string;

    /** The new path to the blob after the rename operation. */
    destinationUrl?: string;

    /** An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name. */
    sequencer?: string;

    ...StorageBaseEventData;
  }

  // TODO destinationBlobUrl and sourceBlobUrl are commented out because they are not present in the swagger
  const MicrosoftStorageDirectoryRenamedExample: StorageDirectoryRenamedEventData = #{
    api: "RenameDirectory",
    requestId: "45a3aa46-001f-0001-2d60-921dd1000000",

    // destinationBlobUrl: "https://jolovdfs.blob.core.windows.net/gaocontainer/gaonewdir",
    // sourceBlobUrl: "https://jolovdfs.blob.core.windows.net/gaocontainer/gaoname",
    destinationUrl: "https://jolovdfs.dfs.core.windows.net/gaocontainer/gaonewdir",

    sourceUrl: "https://jolovdfs.dfs.core.windows.net/gaocontainer/gaoname",
    sequencer: "00000000000000000000000000000102000000000001e1c6",
    storageDiagnostics: #{ batchId: "5f991456-5dcf-4b1b-9d49-562ee2b0757f" },
  };
  /** Schema of the Data property of an EventGridEvent for a Microsoft.Storage.DirectoryRenamed event. */
  @example(MicrosoftStorageDirectoryRenamedExample)
  model StorageDirectoryRenamedEventData {
    /** The name of the API/operation that triggered this event. */
    api?: string;

    /** A request id provided by the client of the storage API operation that triggered this event. */
    clientRequestId?: string;

    /** The request id generated by the storage service for the storage API operation that triggered this event. */
    requestId?: string;

    /** The path to the directory that was renamed. */
    sourceUrl?: string;

    /** The new path to the directory after the rename operation. */
    destinationUrl?: string;

    /** An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name. */
    sequencer?: string;

    ...StorageBaseEventData;
  }

  /** Schema of the Data property of an EventGridEvent for a Microsoft.Storage.LifecyclePolicyCompleted event. */
  model StorageLifecyclePolicyCompletedEventData {
    /** The time the policy task was scheduled. */
    scheduleTime?: string;

    /** Policy execution summary which shows the completion status of a LCM run" */
    policyRunSummary: StorageLifecyclePolicyRunSummary;

    /** Execution statistics of a specific policy action in a Blob Management cycle. */
    deleteSummary: StorageLifecyclePolicyActionSummaryDetail;

    /** Execution statistics of a specific policy action in a Blob Management cycle. */
    tierToCoolSummary: StorageLifecyclePolicyActionSummaryDetail;

    /** Execution statistics of a specific policy action in a Blob Management cycle. */
    tierToArchiveSummary: StorageLifecyclePolicyActionSummaryDetail;

    /** Execution statistics of a specific policy action in a Blob Management cycle. */
    tierToColdSummary: StorageLifecyclePolicyActionSummaryDetail;
  }

  /** Execution statistics of a specific policy action in a Blob Management cycle. */
  model StorageLifecyclePolicyActionSummaryDetail {
    /** Total number of objects to be acted on by this action. */
    totalObjectsCount?: int64;

    /** Number of success operations of this action. */
    successCount?: int64;

    /** Error messages of this action if any. */
    errorList?: string;
  }

  /** Policy run status of an account in a Blob Management cycle. */
  model StorageLifecyclePolicyRunSummary {
    /** Policy status can be Completed/CompletedWithError/Incomplete. */
    completionStatus: StorageLifecycleCompletionStatus;
  }

  // TODO etag commented out bc not in swagger
  const MicrosoftStorageBlobTierChangedExample: StorageBlobTierChangedEventData = #{
    api: "SetBlobTier",
    requestId: "5ed67fc9-401e-0009-354c-92eb21000000",

    // eTag: "0x8D9606211320D17",
    contentType: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",

    contentLength: 17555,
    blobType: "BlockBlob",
    accessTier: "Hot",
    previousTier: "Cool",
    url: "https://jolovstorage.blob.core.windows.net/gaocontainer/Template1.xlsx",
    sequencer: "0000000000000000000000000000B00D0000000005b7c63a",
    storageDiagnostics: #{ batchId: "24231d1f-a006-0065-004c-9240f2000000" },
  };
  /** Schema of the Data property of an EventGridEvent for a Microsoft.Storage.BlobTierChanged event. */
  @example(MicrosoftStorageBlobTierChangedExample)
  model StorageBlobTierChangedEventData {
    /** The name of the API/operation that triggered this event. */
    api?: string;

    /** A request id provided by the client of the storage API operation that triggered this event. */
    clientRequestId?: string;

    /** The request id generated by the storage service for the storage API operation that triggered this event. */
    requestId?: string;

    /** The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob. */
    contentType?: string;

    /** The size of the blob in bytes. This is the same as what would be returned in the Content-Length header from the blob. */
    contentLength?: int64;

    /** The type of blob. */
    blobType?: string;

    /** The current tier of the blob. */
    accessTier: StorageBlobAccessTier;

    /** The previous tier of the blob. */
    previousTier: StorageBlobAccessTier;

    /** The path to the blob. */
    url?: string;

    /** An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name. */
    sequencer?: string;

    ...StorageBaseEventData;
  }

  /** Schema of the Data property of an EventGridEvent for a Microsoft.Storage.AsyncOperationInitiated event. */
  model StorageAsyncOperationInitiatedEventData {
    /** The name of the API/operation that triggered this event. */
    api?: string;

    /** A request id provided by the client of the storage API operation that triggered this event. */
    clientRequestId?: string;

    /** The request id generated by the storage service for the storage API operation that triggered this event. */
    requestId?: string;

    /** The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob. */
    contentType?: string;

    /** The size of the blob in bytes. This is the same as what would be returned in the Content-Length header from the blob. */
    contentLength?: int64;

    /** The type of blob. */
    blobType?: string;

    /** The path to the blob. */
    url?: string;

    /** An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name. */
    sequencer?: string;

    ...StorageBaseEventData;
  }

  const MicrosoftStorageBlobInventoryPolicyCompletedExample: StorageBlobInventoryPolicyCompletedEventData = #{
    scheduleDateTime: utcDateTime.fromISO("2021-08-20T22:04:55Z"),
    accountName: "jolovstorage",
    ruleName: "gao8.20",
    policyRunStatus: "Succeeded",
    policyRunStatusMessage: "Inventory run succeeded, refer manifest file for inventory details.",
    policyRunId: "83e7c94c-6973-4fbc-acdc-88277e448bf5",
    manifestBlobUrl: "https://jolovstorage.blob.core.windows.net/gaoaugcontainer/2021/08/20/22-04-55/gao8.20/gao8.20-manifest.json",
  };
  /** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.BlobInventoryPolicyCompleted event. */
  @example(MicrosoftStorageBlobInventoryPolicyCompletedExample)
  model StorageBlobInventoryPolicyCompletedEventData {
    /** The time at which inventory policy was scheduled. */
    @madeRequired(ServiceApiVersions.v2024_01_01)
    scheduleDateTime: utcDateTime;

    /** The account name for which inventory policy is registered. */
    accountName?: string;

    /** The rule name for inventory policy. */
    ruleName?: string;

    /** The status of inventory run, it can be Succeeded/PartiallySucceeded/Failed. */
    policyRunStatus?: string;

    /** The status message for inventory run. */
    policyRunStatusMessage?: string;

    /** The policy run id for inventory run. */
    policyRunId?: string;

    /** The blob URL for manifest file for inventory run. */
    manifestBlobUrl?: string;
  }

  const MicrosoftStorageStorageTaskCompletedExample: StorageTaskCompletedEventData = #{
    status: "Succeeded",
    completedDateTime: utcDateTime.fromISO("2023-03-23T16:52:58Z"),
    taskExecutionId: "deletetest-2023-03-23T16:42:33.8658256Z_2023-03-23T16:42:58.8983000Z",
    taskName: "delete123",
    summaryReportBlobUrl: "https://shulinstcanest2.blob.core.windows.net/report/delete123_deletetest_2023-03-23T16:43:50/SummaryReport.json",
  };
  /** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.StorageTaskCompleted event. */
  @example(MicrosoftStorageStorageTaskCompletedExample)
  model StorageTaskCompletedEventData {
    /** The status for a storage task. */
    @madeRequired(ServiceApiVersions.v2024_01_01)
    status: StorageTaskCompletedStatus;

    /** The time at which a storage task was completed. */
    @madeRequired(ServiceApiVersions.v2024_01_01)
    completedDateTime: utcDateTime;

    /** The execution id for a storage task. */
    taskExecutionId?: string;

    /** The task name for a storage task. */
    taskName?: string;

    /** The summary report blob url for a storage task */
    summaryReportBlobUrl: url;
  }

  const MicrosoftStorageStorageTaskQueuedExample: StorageTaskQueuedEventData = #{
    queuedDateTime: utcDateTime.fromISO("2023-03-23T16:43:50Z"),
    taskExecutionId: "deletetest-2023-03-23T16:42:33.8658256Z_2023-03-23T16:42:58.8983000Z",
  };
  /** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.StorageTaskQueued event. */
  @example(MicrosoftStorageStorageTaskQueuedExample)
  model StorageTaskQueuedEventData {
    /** The time at which a storage task was queued. */
    @madeRequired(ServiceApiVersions.v2024_01_01)
    queuedDateTime: utcDateTime;

    /** The execution id for a storage task. */
    taskExecutionId?: string;
  }

  const MicrosoftStorageStorageTaskAssignmentQueuedExample: StorageTaskAssignmentQueuedEventData = #{
    queuedDateTime: utcDateTime.fromISO("2023-11-27T21:17:53Z"),
    taskExecutionId: "testtest2-2023-11-27T21:16:43.4491131Z",
  };
  /** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.StorageTaskAssignmentQueued event. */
  @example(MicrosoftStorageStorageTaskAssignmentQueuedExample)
  model StorageTaskAssignmentQueuedEventData {
    /** The time at which a storage task was queued. */
    // @encode("ISO8601")
    @madeRequired(ServiceApiVersions.v2024_01_01)
    queuedDateTime: utcDateTime;

    /** The execution id for a storage task. */
    taskExecutionId?: string;
  }

  const MicrosoftStorageStorageTaskAssignmentCompletedExample: StorageTaskAssignmentCompletedEventData = #{
    status: "Succeeded",
    completedDateTime: utcDateTime.fromISO("2023-11-27T23:09:21Z"),
    taskExecutionId: "testtest2-2023-11-27T21:16:43.4491131Z",
    taskName: "dizbbcanary2",
    summaryReportBlobUrl: "https://canaryfns.blob.core.windows.net/reports/dizbbcanary2/testtest2/2023-11-27T21:17:53/SummaryReport.json",
  };
  /** Schema of the Data property of an EventGridEvent for an Microsoft.Storage.StorageTaskAssignmentCompleted event. */
  @example(MicrosoftStorageStorageTaskAssignmentCompletedExample)
  model StorageTaskAssignmentCompletedEventData {
    /** The status for a storage task. */
    @madeRequired(ServiceApiVersions.v2024_01_01)
    status: StorageTaskAssignmentCompletedStatus;

    /** The time at which a storage task was completed. */
    // @encode("ISO8601")
    @madeRequired(ServiceApiVersions.v2024_01_01)
    completedDateTime: utcDateTime;

    /** The execution id for a storage task. */
    taskExecutionId?: string;

    /** The task name for a storage task. */
    taskName?: string;

    /** The summary report blob url for a storage task */
    summaryReportBlobUrl: url;
  }

  /** The status for a LCM policy. */
  union StorageLifecycleCompletionStatus {
    /** Completed */
    "Completed",

    /** CompletedWithError */
    "CompletedWithError",

    /** Incomplete */
    "Incomplete",

    string,
  }

  /** The status for a storage task. */
  union StorageTaskAssignmentCompletedStatus {
    /** Succeeded */
    "Succeeded",

    /** Failed */
    "Failed",

    string,
  }

  /** The status for a storage task. */
  union StorageTaskCompletedStatus {
    /** Succeeded */
    "Succeeded",

    /** Failed */
    "Failed",

    string,
  }

  alias StorageBaseEventData = {
    /** The identity of the requester that triggered this event. */
    identity?: string;

    /** For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers. */
    #suppress "@azure-tools/typespec-azure-core/bad-record-type" "Type is Object in swagger"
    storageDiagnostics: Record<unknown>;
  };
}
