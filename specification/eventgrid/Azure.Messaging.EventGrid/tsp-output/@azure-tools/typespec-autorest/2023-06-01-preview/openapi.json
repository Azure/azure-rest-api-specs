{
  "swagger": "2.0",
  "info": {
    "title": "Azure.Messaging.EventGridMessagingClient",
    "version": "2023-06-01-preview",
    "description": "Azure Messaging EventGrid Client",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "required": true,
        "description": "The host name of the namespace, e.g. namespaceName1.westus-1.eventgrid.azure.net",
        "type": "string",
        "format": "uri",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "OAuth2Auth": [
        "https://eventgrid.azure.net/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "SharedAccessKey"
    },
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://eventgrid.azure.net/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/topics/{topicName}:publish": {
      "post": {
        "operationId": "PublishBatchOfCloudEvents",
        "description": "Publish Batch of Cloud Events to namespace topic.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "description": "Topic Name.",
            "type": "string"
          },
          {
            "name": "events",
            "in": "body",
            "required": true,
            "description": "Array of Cloud Events being published.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CloudEvent"
              },
              "x-typespec-name": "CloudEvent[]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-typespec-name": "{}"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/cloudevents-batch+json; charset=utf-8"
        ]
      }
    },
    "/topics/{topicName}/eventsubscriptions/{eventSubscriptionName}:receive": {
      "post": {
        "operationId": "ReceiveBatchOfCloudEvents",
        "description": "Receive Batch of Cloud Events from the Event Subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "description": "Topic Name.",
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "required": true,
            "description": "Event subscription name.",
            "type": "string"
          },
          {
            "name": "maxEvents",
            "in": "query",
            "required": false,
            "description": "Max Events count to be received.",
            "default": 1,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "description": "Timeout value for receive operation in Seconds. Default is 60 seconds.",
            "default": 60,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/ReceiveResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/topics/{topicName}/eventsubscriptions/{eventSubscriptionName}:acknowledge": {
      "post": {
        "operationId": "AcknowledgeBatchOfCloudEvents",
        "description": "Acknowledge Cloud Events.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "description": "Topic Name.",
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "required": true,
            "description": "Event subscription name.",
            "type": "string"
          },
          {
            "name": "lockTokens",
            "in": "body",
            "required": true,
            "description": "Array of LockTokens for the corresponding received Cloud Events to be acknowledged.",
            "schema": {
              "$ref": "#/definitions/LockTokenInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LockTokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/json; charset=utf-8"
        ]
      }
    },
    "/topics/{topicName}/eventsubscriptions/{eventSubscriptionName}:release": {
      "post": {
        "operationId": "ReleaseBatchOfCloudEvents",
        "description": "Release Cloud Events.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "topicName",
            "in": "path",
            "required": true,
            "description": "Topic Name.",
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "required": true,
            "description": "Event subscription name.",
            "type": "string"
          },
          {
            "name": "tokens",
            "in": "body",
            "required": true,
            "description": "Array of LockTokens for the corresponding received Cloud Events to be acknowledged.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LockToken"
              },
              "x-ms-identifiers": [],
              "x-typespec-name": "LockToken[]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LockTokensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/json; charset=utf-8"
        ]
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Azure.Core.Foundations.Error[]",
          "description": "An array of details about specific errors that led to this reported error."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message",
        "details"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "description": "A response containing error details.",
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      },
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "required": [
        "code"
      ]
    },
    "BrokerProperties": {
      "type": "object",
      "properties": {
        "lockToken": {
          "$ref": "#/definitions/LockToken",
          "description": "The token used to lock the event."
        }
      },
      "description": "Properties of the Event Broker operation.",
      "required": [
        "lockToken"
      ]
    },
    "CloudEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "An identifier for the event. The combination of id and source must be unique for each distinct event."
        },
        "source": {
          "type": "string",
          "description": "Identifies the context in which an event happened. The combination of id and source must be unique for each distinct event."
        },
        "data": {
          "$ref": "#/definitions/object",
          "description": "Event data specific to the event type."
        },
        "data_base64": {
          "type": "string",
          "format": "byte",
          "description": "Event data specific to the event type, encoded as a base64 string."
        },
        "type": {
          "type": "string",
          "description": "Type of event related to the originating occurrence."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time (in UTC) the event was generated, in RFC3339 format."
        },
        "specversion": {
          "type": "string",
          "description": "The version of the CloudEvents specification which the event uses."
        },
        "dataschema": {
          "type": "string",
          "description": "Identifies the schema that data adheres to."
        },
        "datacontenttype": {
          "type": "string",
          "description": "Content type of data value."
        },
        "subject": {
          "type": "string",
          "description": "This describes the subject of the event in the context of the event producer (identified by source)."
        }
      },
      "description": "Properties of an event published to an Azure Messaging EventGrid Namespace topic using the CloudEvent 1.0 Schema.",
      "required": [
        "id",
        "source",
        "type",
        "specversion"
      ]
    },
    "EventSubscription": {
      "type": "object",
      "properties": {
        "eventSubscriptionName": {
          "type": "string",
          "description": "Event subscription name.",
          "readOnly": true
        }
      },
      "description": "Event Subscription Resource.",
      "required": [
        "eventSubscriptionName"
      ]
    },
    "FailedLockToken": {
      "type": "object",
      "properties": {
        "lockToken": {
          "$ref": "#/definitions/LockToken",
          "description": "LockToken value"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32",
          "description": "Error code"
        },
        "errorDescription": {
          "type": "string",
          "description": "Description of the error"
        }
      },
      "description": "Failed LockToken information.",
      "required": [
        "lockToken",
        "errorCode",
        "errorDescription"
      ]
    },
    "LockToken": {
      "type": "object",
      "properties": {
        "lockToken": {
          "type": "string",
          "description": "The token used to lock the event."
        }
      },
      "description": "LockToken information.",
      "required": [
        "lockToken"
      ]
    },
    "LockTokenInput": {
      "type": "object",
      "properties": {
        "lockTokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "LockTokens"
        }
      },
      "description": "Lock token input formatting.",
      "required": [
        "lockTokens"
      ]
    },
    "LockTokensResponse": {
      "type": "object",
      "properties": {
        "failedLockTokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailedLockToken"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "FailedLockToken[]",
          "description": "Array of LockToken values for failed cloud events."
        },
        "succeededLockTokens": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "Array of LockToken values for succeeded cloud events."
        }
      },
      "description": "Details of the LockTokens information. This is used for both Acknowledge and Release operation response.",
      "required": [
        "failedLockTokens",
        "succeededLockTokens"
      ]
    },
    "PublishResponse": {
      "type": "object",
      "properties": {},
      "description": "Publish operation Response"
    },
    "ReceiveDetails": {
      "type": "object",
      "properties": {
        "brokerProperties": {
          "$ref": "#/definitions/BrokerProperties",
          "description": "The Event Broker details."
        },
        "event": {
          "$ref": "#/definitions/CloudEvent",
          "description": "Cloud Event details."
        }
      },
      "description": "Receive operation details per Cloud Event.",
      "required": [
        "brokerProperties",
        "event"
      ]
    },
    "ReceiveResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReceiveDetails"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ReceiveDetails[]",
          "description": "Array of receive responses, one per cloud event."
        }
      },
      "description": "Details of the Receive operation response.",
      "required": [
        "value"
      ]
    },
    "Topic": {
      "type": "object",
      "properties": {
        "topicName": {
          "type": "string",
          "description": "Topic Name.",
          "readOnly": true
        }
      },
      "description": "Topic Resource.",
      "required": [
        "topicName"
      ]
    },
    "object": {
      "type": "object",
      "properties": {}
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "description": "The API version to use for this operation.",
      "x-ms-client-name": "apiVersion",
      "minLength": 1,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
