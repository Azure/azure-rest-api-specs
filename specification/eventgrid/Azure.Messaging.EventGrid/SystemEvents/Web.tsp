@doc("Describes the schema of the Azure App Service events published to Azure Event Grid. This corresponds to the Data property of an EventGridEvent.")
namespace EventGrid.Web {
  // @doc("sku of app service plan.")
  @doc("Detail of action on the app.")
  model AppEventTypeDetail {
    @doc("Type of action of the operation.")
    action?: AppAction;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.AppUpdated event.")
  model WebAppUpdatedEventData {
    ...WebAppBaseEventData;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.BackupOperationStarted event.")
  model WebBackupOperationStartedEventData {
    ...WebAppBaseEventData;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.BackupOperationCompleted event.")
  model WebBackupOperationCompletedEventData {
    ...WebAppBaseEventData;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.BackupOperationFailed event.")
  model WebBackupOperationFailedEventData {
    ...WebAppBaseEventData;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.RestoreOperationStarted event.")
  model WebRestoreOperationStartedEventData {
    ...WebAppBaseEventData;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.RestoreOperationCompleted event.")
  model WebRestoreOperationCompletedEventData {
    ...WebAppBaseEventData;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.RestoreOperationFailed event.")
  model WebRestoreOperationFailedEventData {
    ...WebAppBaseEventData;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.SlotSwapStarted event.")
  model WebSlotSwapStartedEventData {
    ...WebAppBaseEventData;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.SlotSwapCompleted event.")
  model WebSlotSwapCompletedEventData {
    ...WebAppBaseEventData;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.SlotSwapFailed event.")
  model WebSlotSwapFailedEventData {
    ...WebAppBaseEventData;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.SlotSwapWithPreviewStarted event.")
  model WebSlotSwapWithPreviewStartedEventData {
    ...WebAppBaseEventData;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.SlotSwapWithPreviewCancelled event.")
  model WebSlotSwapWithPreviewCancelledEventData {
    ...WebAppBaseEventData;
  }

  @doc("Schema of the Data property of an EventGridEvent for a Microsoft.Web.AppServicePlanUpdated event.")
  model WebAppServicePlanUpdatedEventData {
    @doc("Detail of action on the app service plan.")
    appServicePlanEventTypeDetail?: AppServicePlanEventTypeDetail;

    @doc("name of the app service plan that had this event.")
    name?: string;

    @doc("The client request id generated by the app service for the app service plan API operation that triggered this event.")
    clientRequestId?: string;

    @doc("The correlation request id generated by the app service for the app service plan API operation that triggered this event.")
    correlationRequestId?: string;

    @doc("The request id generated by the app service for the app service plan API operation that triggered this event.")
    requestId?: string;

    @doc("HTTP request URL of this operation.")
    address?: string;

    @doc("HTTP verb of this operation.")
    verb?: string;

    @doc("sku of app service plan.")
    sku?: sku;
  }

  @doc("App Action Type")
  enum AppAction {
    @doc("Web app was restarted.")
    Restarted,

    @doc("Web app was stopped.")
    Stopped,

    @doc("There was an operation to change app setting on the web app.")
    ChangedAppSettings,

    @doc("The job has started.")
    Started,

    @doc("The job has completed.")
    Completed,

    @doc("The job has failed to complete.")
    Failed,
  }

  @doc("Kind of environment where app service plan is.")
  enum StampKind {
    @doc("App Service Plan is running on a public stamp.")
    Public,

    @doc("App Service Plan is running on an App Service Environment V1.")
    AseV1,

    @doc("App Service Plan is running on an App Service Environment V2.")
    AseV2,
  }

  @doc("Type of action on the app service plan.")
  enum AppServicePlanAction {
    @doc("App Service plan is being updated.")
    Updated,
  }

  @doc("Detail of action on the app service plan.")
  model AppServicePlanEventTypeDetail {
    @doc("Kind of environment where app service plan is.")
    stampKind?: StampKind;

    @doc("Type of action on the app service plan.")
    action?: AppServicePlanAction;

    @doc("Asynchronous operation status of the operation on the app service plan.")
    status?: AsyncStatus;
  }

  @doc("Asynchronous operation status of the operation on the app service plan.")
  enum AsyncStatus {
    @doc("Async operation has started.")
    Started,

    @doc("Async operation has completed.")
    Completed,

    @doc("Async operation failed to complete.")
    Failed,
  }

  alias WebAppBaseEventData = {
    @doc("Detail of action on the app.")
    appEventTypeDetail?: AppEventTypeDetail;

    @doc("name of the web site that had this event.")
    name?: string;

    @doc("The client request id generated by the app service for the site API operation that triggered this event.")
    clientRequestId?: string;

    @doc("The correlation request id generated by the app service for the site API operation that triggered this event.")
    correlationRequestId?: string;

    @doc("The request id generated by the app service for the site API operation that triggered this event.")
    requestId?: string;

    @doc("HTTP request URL of this operation.")
    address?: string;

    @doc("HTTP verb of this operation.")
    verb?: string;
  };

  alias sku = {
    @doc("name of app service plan sku.")
    name?: string;

    #suppress "@azure-tools/typespec-azure-core/casing-style" "Modeling after original service swagger."
    @doc("tier of app service plan sku.")
    Tier?: string;

    #suppress "@azure-tools/typespec-azure-core/casing-style" "Modeling after original service swagger."
    @doc("size of app service plan sku.")
    Size?: string;

    #suppress "@azure-tools/typespec-azure-core/casing-style" "Modeling after original service swagger."
    @doc("family of app service plan sku.")
    Family?: string;

    #suppress "@azure-tools/typespec-azure-core/casing-style" "Modeling after original service swagger."
    @doc("capacity of app service plan sku.")
    Capacity?: string;
  };
}
