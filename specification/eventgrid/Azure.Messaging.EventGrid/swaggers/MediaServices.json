{
  "swagger": "2.0",
  "info": {
    "version": "2018-01-01",
    "title": "Schema of MediaServices events published to Azure Event Grid",
    "description": "Describes the schema of the MediaServices events published to Azure Event Grid. This corresponds to the Data property of an EventGridEvent."
  },
  "paths": {},
  "definitions": {
    "MediaJobCanceledEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobCanceled": {
          "type": "string",
          "description": "Discriminator property for MediaJobCanceledEventData."
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaServices.MediaJobOutput"
          },
          "x-ms-identifiers": [],
          "description": "Gets the Job outputs.",
          "x-typespec-name": "MediaServices.MediaJobOutput[]"
        }
      },
      "description": "Job canceled event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobCanceled event.",
      "discriminator": "#Microsoft.Media.JobCanceled",
      "required": [
        "#Microsoft.Media.JobCanceled"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaJobStateChangeEventData"
        }
      ]
    },
    "MediaJobCancelingEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobCanceling": {
          "type": "string",
          "description": "Discriminator property for MediaJobCancelingEventData."
        }
      },
      "description": "Job canceling event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobCanceling event.",
      "discriminator": "#Microsoft.Media.JobCanceling",
      "required": [
        "#Microsoft.Media.JobCanceling"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaJobStateChangeEventData"
        }
      ]
    },
    "MediaJobError": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/MediaServices.MediaJobErrorCode",
          "description": "Error code describing the error.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A human-readable language-dependent representation of the error.",
          "readOnly": true
        },
        "category": {
          "$ref": "#/definitions/MediaServices.MediaJobErrorCategory",
          "description": "Helps with categorization of errors.",
          "readOnly": true
        },
        "retry": {
          "$ref": "#/definitions/MediaServices.MediaJobRetry",
          "description": "Indicates that it may be possible to retry the Job. If retry is unsuccessful, please contact Azure support via Azure Portal.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaServices.MediaJobErrorDetail"
          },
          "x-ms-identifiers": [],
          "description": "An array of details about specific errors that led to this reported error.",
          "x-typespec-name": "MediaServices.MediaJobErrorDetail[]",
          "readOnly": true
        }
      },
      "description": "Details of JobOutput errors."
    },
    "MediaJobErrorCategory": {
      "type": "string",
      "description": "Error categories for Media Job Errors.",
      "enum": [
        "Service",
        "Download",
        "Upload",
        "Configuration",
        "Content",
        "Account"
      ],
      "x-ms-enum": {
        "name": "MediaJobErrorCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "Service",
            "value": "Service",
            "description": "The error is service related."
          },
          {
            "name": "Download",
            "value": "Download",
            "description": "The error is download related."
          },
          {
            "name": "Upload",
            "value": "Upload",
            "description": "The error is upload related."
          },
          {
            "name": "Configuration",
            "value": "Configuration",
            "description": "The error is configuration related."
          },
          {
            "name": "Content",
            "value": "Content",
            "description": "The error is related to data in the input files."
          },
          {
            "name": "Account",
            "value": "Account",
            "description": "The error is related to account information."
          }
        ]
      }
    },
    "MediaJobErrorCode": {
      "type": "string",
      "description": "Media Job Error Codes.",
      "enum": [
        "ServiceError",
        "ServiceTransientError",
        "DownloadNotAccessible",
        "DownloadTransientError",
        "UploadNotAccessible",
        "UploadTransientError",
        "ConfigurationUnsupported",
        "ContentMalformed",
        "ContentUnsupported",
        "IdentityUnsupported"
      ],
      "x-ms-enum": {
        "name": "MediaJobErrorCode",
        "modelAsString": true,
        "values": [
          {
            "name": "ServiceError",
            "value": "ServiceError",
            "description": "Fatal service error, please contact support."
          },
          {
            "name": "ServiceTransientError",
            "value": "ServiceTransientError",
            "description": "Transient error, please retry, if retry is unsuccessful, please contact support."
          },
          {
            "name": "DownloadNotAccessible",
            "value": "DownloadNotAccessible",
            "description": "While trying to download the input files, the files were not accessible, please check the availability of the source."
          },
          {
            "name": "DownloadTransientError",
            "value": "DownloadTransientError",
            "description": "While trying to download the input files, there was an issue during transfer (storage service, network errors), see details and check your source."
          },
          {
            "name": "UploadNotAccessible",
            "value": "UploadNotAccessible",
            "description": "While trying to upload the output files, the destination was not reachable, please check the availability of the destination."
          },
          {
            "name": "UploadTransientError",
            "value": "UploadTransientError",
            "description": "While trying to upload the output files, there was an issue during transfer (storage service, network errors), see details and check your destination."
          },
          {
            "name": "ConfigurationUnsupported",
            "value": "ConfigurationUnsupported",
            "description": "There was a problem with the combination of input files and the configuration settings applied, fix the configuration settings and retry with the same input, or change input to match the configuration."
          },
          {
            "name": "ContentMalformed",
            "value": "ContentMalformed",
            "description": "There was a problem with the input content (for example: zero byte files, or corrupt/non-decodable files), check the input files."
          },
          {
            "name": "ContentUnsupported",
            "value": "ContentUnsupported",
            "description": "There was a problem with the format of the input (not valid media file, or an unsupported file/codec), check the validity of the input files."
          },
          {
            "name": "IdentityUnsupported",
            "value": "IdentityUnsupported",
            "description": "There is an error verifying to the account identity. Check and fix the identity configurations and retry. If unsuccessful, please contact support."
          }
        ]
      }
    },
    "MediaJobErrorDetail": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code describing the error detail.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error.",
          "readOnly": true
        }
      },
      "description": "Details of JobOutput errors."
    },
    "MediaJobErroredEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobErrored": {
          "type": "string",
          "description": "Discriminator property for MediaJobErroredEventData."
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaServices.MediaJobOutput"
          },
          "x-ms-identifiers": [],
          "description": "Gets the Job outputs.",
          "x-typespec-name": "MediaServices.MediaJobOutput[]"
        }
      },
      "description": "Job error state event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobErrored event.",
      "discriminator": "#Microsoft.Media.JobErrored",
      "required": [
        "#Microsoft.Media.JobErrored"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaJobStateChangeEventData"
        }
      ]
    },
    "MediaJobFinishedEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobFinished": {
          "type": "string",
          "description": "Discriminator property for MediaJobFinishedEventData."
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaServices.MediaJobOutput"
          },
          "x-ms-identifiers": [],
          "description": "Gets the Job outputs.",
          "x-typespec-name": "MediaServices.MediaJobOutput[]"
        }
      },
      "description": "Job finished event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobFinished event.",
      "discriminator": "#Microsoft.Media.JobFinished",
      "required": [
        "#Microsoft.Media.JobFinished"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaJobStateChangeEventData"
        }
      ]
    },
    "MediaJobOutput": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types.",
          "x-ms-client-name": "OdataType"
        },
        "error": {
          "$ref": "#/definitions/MediaServices.MediaJobError",
          "description": "Gets the Job output error."
        },
        "label": {
          "type": "string",
          "description": "Gets the Job output label."
        },
        "progress": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the Job output progress."
        },
        "state": {
          "$ref": "#/definitions/MediaServices.MediaJobState",
          "description": "Gets the Job output state."
        }
      },
      "description": "The event data for a Job output.",
      "discriminator": "@odata.type",
      "required": [
        "@odata.type",
        "progress",
        "state"
      ]
    },
    "MediaJobOutputAsset": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputAsset": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputAsset."
        },
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types.",
          "x-ms-client-name": "OdataType"
        },
        "error": {
          "$ref": "#/definitions/MediaServices.MediaJobError",
          "description": "Gets the Job output error."
        },
        "label": {
          "type": "string",
          "description": "Gets the Job output label."
        },
        "progress": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the Job output progress."
        },
        "state": {
          "$ref": "#/definitions/MediaServices.MediaJobState",
          "description": "Gets the Job output state."
        },
        "assetName": {
          "type": "string",
          "description": "Gets the Job output asset name."
        }
      },
      "description": "The event data for a Job output asset.",
      "discriminator": "#Microsoft.Media.JobOutputAsset",
      "required": [
        "#Microsoft.Media.JobOutputAsset",
        "progress",
        "state"
      ]
    },
    "MediaJobOutputCanceledEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputCanceled": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputCanceledEventData."
        }
      },
      "description": "Job output canceled event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobOutputCanceled event.",
      "discriminator": "#Microsoft.Media.JobOutputCanceled",
      "required": [
        "#Microsoft.Media.JobOutputCanceled"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaJobOutputStateChangeEventData"
        }
      ]
    },
    "MediaJobOutputCancelingEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputCanceling": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputCancelingEventData."
        }
      },
      "description": "Job output canceling event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobOutputCanceling event.",
      "discriminator": "#Microsoft.Media.JobOutputCanceling",
      "required": [
        "#Microsoft.Media.JobOutputCanceling"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaJobOutputStateChangeEventData"
        }
      ]
    },
    "MediaJobOutputErroredEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputErrored": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputErroredEventData."
        }
      },
      "description": "Job output error event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobOutputErrored event.",
      "discriminator": "#Microsoft.Media.JobOutputErrored",
      "required": [
        "#Microsoft.Media.JobOutputErrored"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaJobOutputStateChangeEventData"
        }
      ]
    },
    "MediaJobOutputFinishedEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputFinished": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputFinishedEventData."
        }
      },
      "description": "Job output finished event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobOutputFinished event.",
      "discriminator": "#Microsoft.Media.JobOutputFinished",
      "required": [
        "#Microsoft.Media.JobOutputFinished"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaJobOutputStateChangeEventData"
        }
      ]
    },
    "MediaJobOutputProcessingEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputProcessing": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputProcessingEventData."
        }
      },
      "description": "Job output processing event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobOutputProcessing event.",
      "discriminator": "#Microsoft.Media.JobOutputProcessing",
      "required": [
        "#Microsoft.Media.JobOutputProcessing"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaJobOutputStateChangeEventData"
        }
      ]
    },
    "MediaJobOutputProgressEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputProgress": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputProgressEventData."
        },
        "label": {
          "type": "string",
          "description": "Gets the Job output label."
        },
        "progress": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the Job output progress."
        },
        "jobCorrelationData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets the Job correlation data.",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Job Output Progress Event Data. Schema of the Data property of an EventGridEvent for a Microsoft.Media.JobOutputProgress event.",
      "discriminator": "#Microsoft.Media.JobOutputProgress",
      "required": [
        "#Microsoft.Media.JobOutputProgress"
      ]
    },
    "MediaJobOutputScheduledEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputCanceled": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputScheduledEventData."
        }
      },
      "description": "Job output scheduled event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobOutputScheduled event.",
      "discriminator": "#Microsoft.Media.JobOutputCanceled",
      "required": [
        "#Microsoft.Media.JobOutputCanceled"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaJobOutputStateChangeEventData"
        }
      ]
    },
    "MediaJobOutputStateChangeEventData": {
      "type": "object",
      "properties": {
        "previousState": {
          "$ref": "#/definitions/MediaServices.MediaJobState",
          "description": "The previous state of the Job."
        },
        "output": {
          "$ref": "#/definitions/MediaServices.MediaJobOutput",
          "description": "Gets the output."
        },
        "jobCorrelationData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets the Job correlation data.",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Media.JobOutputStateChange event."
    },
    "MediaJobProcessingEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobProcessing": {
          "type": "string",
          "description": "Discriminator property for MediaJobProcessingEventData."
        }
      },
      "description": "Job processing event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobProcessing event.",
      "discriminator": "#Microsoft.Media.JobProcessing",
      "required": [
        "#Microsoft.Media.JobProcessing"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaJobStateChangeEventData"
        }
      ]
    },
    "MediaJobRetry": {
      "type": "string",
      "description": "Media Job Retry Options.",
      "enum": [
        "DoNotRetry",
        "MayRetry"
      ],
      "x-ms-enum": {
        "name": "MediaJobRetry",
        "modelAsString": true,
        "values": [
          {
            "name": "DoNotRetry",
            "value": "DoNotRetry",
            "description": "Issue needs to be investigated and then the job resubmitted with corrections or retried once the underlying issue has been corrected."
          },
          {
            "name": "MayRetry",
            "value": "MayRetry",
            "description": "Issue may be resolved after waiting for a period of time and resubmitting the same Job."
          }
        ]
      }
    },
    "MediaJobScheduledEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobScheduled": {
          "type": "string",
          "description": "Discriminator property for MediaJobScheduledEventData."
        }
      },
      "description": "Job scheduled event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobScheduled event.",
      "discriminator": "#Microsoft.Media.JobScheduled",
      "required": [
        "#Microsoft.Media.JobScheduled"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaJobStateChangeEventData"
        }
      ]
    },
    "MediaJobState": {
      "type": "string",
      "description": "State of a Media Job.",
      "enum": [
        "Canceled",
        "Canceling",
        "Error",
        "Finished",
        "Processing",
        "Queued",
        "Scheduled"
      ],
      "x-ms-enum": {
        "name": "MediaJobState",
        "modelAsString": true,
        "values": [
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The job was canceled. This is a final state for the job."
          },
          {
            "name": "Canceling",
            "value": "Canceling",
            "description": "The job is in the process of being canceled. This is a transient state for the job."
          },
          {
            "name": "Error",
            "value": "Error",
            "description": "The job has encountered an error. This is a final state for the job."
          },
          {
            "name": "Finished",
            "value": "Finished",
            "description": "The job is finished. This is a final state for the job."
          },
          {
            "name": "Processing",
            "value": "Processing",
            "description": "The job is processing. This is a transient state for the job."
          },
          {
            "name": "Queued",
            "value": "Queued",
            "description": "The job is in a queued state, waiting for resources to become available. This is a transient state."
          },
          {
            "name": "Scheduled",
            "value": "Scheduled",
            "description": "The job is being scheduled to run on an available resource. This is a transient state, between queued and processing states."
          }
        ]
      }
    },
    "MediaJobStateChangeEventData": {
      "type": "object",
      "properties": {
        "previousState": {
          "$ref": "#/definitions/MediaServices.MediaJobState",
          "description": "The previous state of the Job."
        },
        "state": {
          "$ref": "#/definitions/MediaServices.MediaJobState",
          "description": "The new state of the Job."
        },
        "correlationData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets the Job correlation data.",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Media.JobStateChange event."
    },
    "MediaLiveEventChannelArchiveHeartbeatEventData": {
      "type": "object",
      "properties": {
        "channelLatencyMs": {
          "type": "string",
          "description": "Gets the channel latency in ms.",
          "readOnly": true
        },
        "latencyResultCode": {
          "type": "string",
          "description": "Gets the latency result code.",
          "readOnly": true
        }
      },
      "description": "Channel Archive heartbeat event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventChannelArchiveHeartbeat event.",
      "required": [
        "channelLatencyMs",
        "latencyResultCode"
      ]
    },
    "MediaLiveEventConnectionRejectedEventData": {
      "type": "object",
      "properties": {
        "ingestUrl": {
          "type": "string",
          "description": "Gets the ingest URL provided by the live event.",
          "readOnly": true
        },
        "streamId": {
          "type": "string",
          "description": "Gets the stream Id.",
          "readOnly": true
        },
        "encoderIp": {
          "type": "string",
          "description": "Gets the remote IP.",
          "readOnly": true
        },
        "encoderPort": {
          "type": "string",
          "description": "Gets the remote port.",
          "readOnly": true
        },
        "resultCode": {
          "type": "string",
          "description": "Gets the result code."
        }
      },
      "description": "Encoder connection rejected event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventConnectionRejected event."
    },
    "MediaLiveEventEncoderConnectedEventData": {
      "type": "object",
      "properties": {
        "ingestUrl": {
          "type": "string",
          "description": "Gets the ingest URL provided by the live event.",
          "readOnly": true
        },
        "streamId": {
          "type": "string",
          "description": "Gets the stream Id.",
          "readOnly": true
        },
        "encoderIp": {
          "type": "string",
          "description": "Gets the remote IP.",
          "readOnly": true
        },
        "encoderPort": {
          "type": "string",
          "description": "Gets the remote port.",
          "readOnly": true
        }
      },
      "description": "Encoder connect event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventEncoderConnected event."
    },
    "MediaLiveEventEncoderDisconnectedEventData": {
      "type": "object",
      "properties": {
        "ingestUrl": {
          "type": "string",
          "description": "Gets the ingest URL provided by the live event.",
          "readOnly": true
        },
        "streamId": {
          "type": "string",
          "description": "Gets the stream Id.",
          "readOnly": true
        },
        "encoderIp": {
          "type": "string",
          "description": "Gets the remote IP.",
          "readOnly": true
        },
        "encoderPort": {
          "type": "string",
          "description": "Gets the remote port.",
          "readOnly": true
        },
        "resultCode": {
          "type": "string",
          "description": "Gets the result code."
        }
      },
      "description": "Encoder disconnected event data. Schema of the Data property of an EventGridEvent for a Microsoft.Media.LiveEventEncoderDisconnected event."
    },
    "MediaLiveEventIncomingDataChunkDroppedEventData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "description": "Gets the timestamp of the data chunk dropped.",
          "readOnly": true
        },
        "trackType": {
          "type": "string",
          "description": "Gets the type of the track (Audio / Video).",
          "readOnly": true
        },
        "bitrate": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the bitrate of the track.",
          "readOnly": true
        },
        "timescale": {
          "type": "string",
          "description": "Gets the timescale of the Timestamp."
        },
        "resultCode": {
          "type": "string",
          "description": "Gets the result code for fragment drop operation.",
          "readOnly": true
        },
        "trackName": {
          "type": "string",
          "description": "Gets the name of the track for which fragment is dropped.",
          "readOnly": true
        }
      },
      "description": "Ingest fragment dropped event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventIncomingDataChunkDropped event."
    },
    "MediaLiveEventIncomingStreamReceivedEventData": {
      "type": "object",
      "properties": {
        "ingestUrl": {
          "type": "string",
          "description": "Gets the ingest URL provided by the live event.",
          "readOnly": true
        },
        "trackType": {
          "type": "string",
          "description": "Gets the type of the track (Audio / Video).",
          "readOnly": true
        },
        "trackName": {
          "type": "string",
          "description": "Gets the track name.",
          "readOnly": true
        },
        "bitrate": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the bitrate of the track.",
          "readOnly": true
        },
        "encoderIp": {
          "type": "string",
          "description": "Gets the remote IP.",
          "readOnly": true
        },
        "encoderPort": {
          "type": "string",
          "description": "Gets the remote port.",
          "readOnly": true
        },
        "timestamp": {
          "type": "string",
          "description": "Gets the first timestamp of the data chunk received.",
          "readOnly": true
        },
        "duration": {
          "type": "string",
          "description": "Gets the duration of the first data chunk.",
          "readOnly": true
        },
        "timescale": {
          "type": "string",
          "description": "Gets the timescale in which timestamp is represented.",
          "readOnly": true
        }
      },
      "description": "Encoder connect event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventIncomingStreamReceived event."
    },
    "MediaLiveEventIncomingStreamsOutOfSyncEventData": {
      "type": "object",
      "properties": {
        "minLastTimestamp": {
          "type": "string",
          "description": "Gets the minimum last timestamp received.",
          "readOnly": true
        },
        "typeOfStreamWithMinLastTimestamp": {
          "type": "string",
          "description": "Gets the type of stream with minimum last timestamp.",
          "readOnly": true
        },
        "maxLastTimestamp": {
          "type": "string",
          "description": "Gets the maximum timestamp among all the tracks (audio or video).",
          "readOnly": true
        },
        "typeOfStreamWithMaxLastTimestamp": {
          "type": "string",
          "description": "Gets the type of stream with maximum last timestamp.",
          "readOnly": true
        },
        "timescaleOfMinLastTimestamp": {
          "type": "string",
          "description": "Gets the timescale in which \"MinLastTimestamp\" is represented.",
          "readOnly": true
        },
        "timescaleOfMaxLastTimestamp": {
          "type": "string",
          "description": "Gets the timescale in which \"MaxLastTimestamp\" is represented.",
          "readOnly": true
        }
      },
      "description": "Incoming streams out of sync event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventIncomingStreamsOutOfSync event."
    },
    "MediaLiveEventIncomingVideoStreamsOutOfSyncEventData": {
      "type": "object",
      "properties": {
        "firstTimestamp": {
          "type": "string",
          "description": "Gets the first timestamp received for one of the quality levels.",
          "readOnly": true
        },
        "firstDuration": {
          "type": "string",
          "description": "Gets the duration of the data chunk with first timestamp.",
          "readOnly": true
        },
        "secondTimestamp": {
          "type": "string",
          "description": "Gets the timestamp received for some other quality levels.",
          "readOnly": true
        },
        "secondDuration": {
          "type": "string",
          "description": "Gets the duration of the data chunk with second timestamp.",
          "readOnly": true
        },
        "timescale": {
          "type": "string",
          "description": "Gets the timescale in which both the timestamps and durations are represented.",
          "readOnly": true
        }
      },
      "description": "Incoming video stream out of sync event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventIncomingVideoStreamsOutOfSync event."
    },
    "MediaLiveEventIngestHeartbeatEventData": {
      "type": "object",
      "properties": {
        "trackType": {
          "type": "string",
          "description": "Gets the type of the track (Audio / Video).",
          "readOnly": true
        },
        "trackName": {
          "type": "string",
          "description": "Gets the track name.",
          "readOnly": true
        },
        "transcriptionLanguage": {
          "type": "string",
          "description": "Gets the Live Transcription language.",
          "readOnly": true
        },
        "transcriptionState": {
          "type": "string",
          "description": "Gets the Live Transcription state.",
          "readOnly": true
        },
        "bitrate": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the bitrate of the track.",
          "readOnly": true
        },
        "incomingBitrate": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the incoming bitrate.",
          "readOnly": true
        },
        "ingestDriftValue": {
          "type": "string",
          "description": "Gets the track ingest drift value.",
          "readOnly": true
        },
        "lastFragmentArrivalTime": {
          "type": "string",
          "description": "Gets the arrival UTC time of the last fragment.",
          "readOnly": true
        },
        "lastTimestamp": {
          "type": "string",
          "description": "Gets the last timestamp.",
          "readOnly": true
        },
        "timescale": {
          "type": "string",
          "description": "Gets the timescale of the last timestamp.",
          "readOnly": true
        },
        "overlapCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the fragment Overlap count.",
          "readOnly": true
        },
        "discontinuityCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the fragment Discontinuity count.",
          "readOnly": true
        },
        "nonincreasingCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets Non increasing count.",
          "readOnly": true
        },
        "unexpectedBitrate": {
          "type": "boolean",
          "description": "Gets a value indicating whether unexpected bitrate is present or not.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "Gets the state of the live event.",
          "readOnly": true
        },
        "healthy": {
          "type": "boolean",
          "description": "Gets a value indicating whether preview is healthy or not.",
          "readOnly": true
        }
      },
      "description": "Ingest heartbeat event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventIngestHeartbeat event."
    },
    "MediaLiveEventTrackDiscontinuityDetectedEventData": {
      "type": "object",
      "properties": {
        "trackType": {
          "type": "string",
          "description": "Gets the type of the track (Audio / Video).",
          "readOnly": true
        },
        "trackName": {
          "type": "string",
          "description": "Gets the track name.",
          "readOnly": true
        },
        "bitrate": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the bitrate.",
          "readOnly": true
        },
        "previousTimestamp": {
          "type": "string",
          "description": "Gets the timestamp of the previous fragment.",
          "readOnly": true
        },
        "newTimestamp": {
          "type": "string",
          "description": "Gets the timestamp of the current fragment.",
          "readOnly": true
        },
        "timescale": {
          "type": "string",
          "description": "Gets the timescale in which both timestamps and discontinuity gap are represented.",
          "readOnly": true
        },
        "discontinuityGap": {
          "type": "string",
          "description": "Gets the discontinuity gap between PreviousTimestamp and NewTimestamp.",
          "readOnly": true
        }
      },
      "description": "Ingest track discontinuity detected event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventTrackDiscontinuityDetected event."
    }
  }
}
