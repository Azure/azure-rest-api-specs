{
  "swagger": "2.0",
  "info": {
    "title": "EventGridClient",
    "version": "2018-01-01",
    "description": "Azure EventGrid Client",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "required": true,
        "description": "The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net",
        "type": "string",
        "format": "uri",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "OAuth2Auth": [
        "https://eventgrid.azure.net/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "aeg-sas-key"
    },
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://eventgrid.azure.net/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {},
  "x-ms-paths": {
    "/send?api-version={apiVersion}": {
      "post": {
        "operationId": "PublishEventGridEvent",
        "description": "Publish EventGridEvents",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "events",
            "in": "body",
            "required": true,
            "description": "Events being published.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventGridEvent"
              },
              "x-typespec-name": "EventGridEvent[]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-typespec-name": "{}"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/cloudevents-batch+json; charset=utf-8"
        ]
      }
    }
  },
  "definitions": {
    "ApiManagement.ApiManagementApiCreatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.APICreated event."
    },
    "ApiManagement.ApiManagementApiDeletedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.APIDeleted event."
    },
    "ApiManagement.ApiManagementApiReleaseCreatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.APIReleaseCreated event."
    },
    "ApiManagement.ApiManagementApiReleaseDeletedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.APIReleaseDeleted event."
    },
    "ApiManagement.ApiManagementApiReleaseUpdatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.APIReleaseUpdated event."
    },
    "ApiManagement.ApiManagementApiUpdatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.APIUpdated event."
    },
    "ApiManagement.ApiManagementGatewayApiAddedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/gateways/<GatewayName>/apis/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.GatewayAPIAdded event."
    },
    "ApiManagement.ApiManagementGatewayApiRemovedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/gateways/<GatewayName>/apis/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.GatewayAPIRemoved event."
    },
    "ApiManagement.ApiManagementGatewayCertificateAuthorityCreatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/gateways/<GatewayName>/certificateAuthorities/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.GatewayCertificateAuthorityCreated event."
    },
    "ApiManagement.ApiManagementGatewayCertificateAuthorityDeletedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/gateways/<GatewayName>/certificateAuthorities/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.GatewayCertificateAuthorityDeleted event."
    },
    "ApiManagement.ApiManagementGatewayCertificateAuthorityUpdatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/gateways/<GatewayName>/certificateAuthorities/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.GatewayCertificateAuthorityUpdated event."
    },
    "ApiManagement.ApiManagementGatewayCreatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/gateways/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.GatewayCreated event."
    },
    "ApiManagement.ApiManagementGatewayDeletedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/gateways/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.GatewayDeleted event."
    },
    "ApiManagement.ApiManagementGatewayHostnameConfigurationCreatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/gateways/<GatewayName>/hostnameConfigurations/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.GatewayHostnameConfigurationCreated event."
    },
    "ApiManagement.ApiManagementGatewayHostnameConfigurationDeletedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/gateways/<GatewayName>/hostnameConfigurations/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.GatewayHostnameConfigurationDeleted event."
    },
    "ApiManagement.ApiManagementGatewayHostnameConfigurationUpdatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/gateways/<GatewayName>/hostnameConfigurations/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.GatewayHostnameConfigurationUpdated event."
    },
    "ApiManagement.ApiManagementGatewayUpdatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/gateways/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.GatewayUpdated event."
    },
    "ApiManagement.ApiManagementProductCreatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.ProductCreated event."
    },
    "ApiManagement.ApiManagementProductDeletedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.ProductDeleted event."
    },
    "ApiManagement.ApiManagementProductUpdatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.ProductUpdated event."
    },
    "ApiManagement.ApiManagementSubscriptionCreatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.SubscriptionCreated event."
    },
    "ApiManagement.ApiManagementSubscriptionDeletedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.SubscriptionDeleted event."
    },
    "ApiManagement.ApiManagementSubscriptionUpdatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.SubscriptionUpdated event."
    },
    "ApiManagement.ApiManagementUserCreatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.UserCreated event."
    },
    "ApiManagement.ApiManagementUserDeletedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.UserDeleted event."
    },
    "ApiManagement.ApiManagementUserUpdatedEventData": {
      "type": "object",
      "properties": {
        "resourceUri": {
          "type": "string",
          "description": "The fully qualified ID of the resource that the compliance state change is for, including the resource name and resource type. Uses the format, `/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroup>/Microsoft.ApiManagement/service/<ServiceName>/<ResourceType>/<ResourceName>`"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ApiManagement.UserUpdated event."
    },
    "AppConfiguration.AppConfigurationKeyValueDeletedEventData": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key used to identify the key-value that was deleted."
        },
        "label": {
          "type": "string",
          "description": "The label, if any, used to identify the key-value that was deleted."
        },
        "etag": {
          "type": "string",
          "description": "The etag representing the key-value that was deleted."
        },
        "syncToken": {
          "type": "string",
          "description": "The sync token representing the server state after the event."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.AppConfiguration.KeyValueDeleted event."
    },
    "AppConfiguration.AppConfigurationKeyValueModifiedEventData": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key used to identify the key-value that was modified."
        },
        "label": {
          "type": "string",
          "description": "The label, if any, used to identify the key-value that was modified."
        },
        "etag": {
          "type": "string",
          "description": "The etag representing the new state of the key-value."
        },
        "syncToken": {
          "type": "string",
          "description": "The sync token representing the server state after the event."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.AppConfiguration.KeyValueModified event."
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": [],
          "description": "An array of details about specific errors that led to this reported error.",
          "x-typespec-name": "Azure.Core.Foundations.Error[]"
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "description": "A response containing error details.",
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      },
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses."
    },
    "AzureCommunicationServices.AcsChatEventBaseProperties": {
      "type": "object",
      "properties": {
        "recipientCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the target user"
        },
        "transactionId": {
          "type": "string",
          "description": "The transaction id will be used as co-relation vector"
        },
        "threadId": {
          "type": "string",
          "description": "The chat thread id"
        }
      },
      "description": "Schema of common properties of all chat events"
    },
    "AzureCommunicationServices.AcsChatEventInThreadBaseProperties": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "The transaction id will be used as co-relation vector"
        },
        "threadId": {
          "type": "string",
          "description": "The chat thread id"
        }
      },
      "description": "Schema of common properties of all thread-level chat events"
    },
    "AzureCommunicationServices.AcsChatMessageDeletedEventData": {
      "type": "object",
      "properties": {
        "deleteTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the message was deleted"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatMessageDeleted event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatMessageEventBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatMessageDeletedInThreadEventData": {
      "type": "object",
      "properties": {
        "deleteTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the message was deleted"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatMessageDeletedInThread event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatMessageEventInThreadBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatMessageEditedEventData": {
      "type": "object",
      "properties": {
        "messageBody": {
          "type": "string",
          "description": "The body of the chat message"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The chat message metadata",
          "x-typespec-name": "Record<string>"
        },
        "editTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the message was edited"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatMessageEdited event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatMessageEventBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatMessageEditedInThreadEventData": {
      "type": "object",
      "properties": {
        "messageBody": {
          "type": "string",
          "description": "The body of the chat message"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The chat message metadata",
          "x-typespec-name": "Record<string>"
        },
        "editTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the message was edited"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatMessageEditedInThread event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatMessageEventInThreadBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatMessageEventBaseProperties": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The chat message id"
        },
        "senderCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the sender"
        },
        "senderDisplayName": {
          "type": "string",
          "description": "The display name of the sender"
        },
        "composeTime": {
          "type": "string",
          "format": "date-time",
          "description": "The original compose time of the message"
        },
        "type": {
          "type": "string",
          "description": "The type of the message"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version of the message"
        }
      },
      "description": "Schema of common properties of all chat message events",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatEventBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatMessageEventInThreadBaseProperties": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The chat message id"
        },
        "senderCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the sender"
        },
        "senderDisplayName": {
          "type": "string",
          "description": "The display name of the sender"
        },
        "composeTime": {
          "type": "string",
          "format": "date-time",
          "description": "The original compose time of the message"
        },
        "type": {
          "type": "string",
          "description": "The type of the message"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version of the message"
        }
      },
      "description": "Schema of common properties of all thread-level chat message events",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatEventInThreadBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatMessageReceivedEventData": {
      "type": "object",
      "properties": {
        "messageBody": {
          "type": "string",
          "description": "The body of the chat message"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The chat message metadata",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatMessageReceived event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatMessageEventBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatMessageReceivedInThreadEventData": {
      "type": "object",
      "properties": {
        "messageBody": {
          "type": "string",
          "description": "The body of the chat message"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The chat message metadata",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatMessageReceivedInThread event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatMessageEventInThreadBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatParticipantAddedToThreadEventData": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the user was added to the thread"
        },
        "addedByCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user who added the user"
        },
        "participantAdded": {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadParticipantProperties",
          "description": "The details of the user who was added"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version of the thread"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatThreadParticipantAdded event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatEventInThreadBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatParticipantAddedToThreadWithUserEventData": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the user was added to the thread"
        },
        "addedByCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user who added the user"
        },
        "participantAdded": {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadParticipantProperties",
          "description": "The details of the user who was added"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatParticipantAddedToThreadWithUser event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadEventBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatParticipantRemovedFromThreadEventData": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the user was removed to the thread"
        },
        "removedByCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user who removed the user"
        },
        "participantRemoved": {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadParticipantProperties",
          "description": "The details of the user who was removed"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version of the thread"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatThreadParticipantRemoved event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatEventInThreadBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatParticipantRemovedFromThreadWithUserEventData": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the user was removed to the thread"
        },
        "removedByCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user who removed the user"
        },
        "participantRemoved": {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadParticipantProperties",
          "description": "The details of the user who was removed"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatParticipantRemovedFromThreadWithUser event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadEventBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatThreadCreatedEventData": {
      "type": "object",
      "properties": {
        "createdByCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user who created the thread"
        },
        "properties": {
          "type": "object",
          "additionalProperties": true,
          "description": "The thread properties",
          "x-typespec-name": "Record<unknown>"
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadParticipantProperties"
          },
          "x-ms-identifiers": [],
          "description": "The list of properties of participants who are part of the thread",
          "x-typespec-name": "AzureCommunicationServices.AcsChatThreadParticipantProperties[]"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatThreadCreated event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadEventInThreadBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatThreadCreatedWithUserEventData": {
      "type": "object",
      "properties": {
        "createdByCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user who created the thread"
        },
        "properties": {
          "type": "object",
          "additionalProperties": true,
          "description": "The thread properties",
          "x-typespec-name": "Record<unknown>"
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadParticipantProperties"
          },
          "x-ms-identifiers": [],
          "description": "The list of properties of participants who are part of the thread",
          "x-typespec-name": "AzureCommunicationServices.AcsChatThreadParticipantProperties[]"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatThreadCreatedWithUser event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadEventBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatThreadDeletedEventData": {
      "type": "object",
      "properties": {
        "deletedByCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user who deleted the thread"
        },
        "deleteTime": {
          "type": "string",
          "format": "date-time",
          "description": "The deletion time of the thread"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatThreadDeleted event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadEventInThreadBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatThreadEventBaseProperties": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "The original creation time of the thread"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version of the thread"
        }
      },
      "description": "Schema of common properties of all chat thread events",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatEventBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatThreadEventInThreadBaseProperties": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "The original creation time of the thread"
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "The version of the thread"
        }
      },
      "description": "Schema of common properties of all chat thread events",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatEventInThreadBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatThreadParticipantProperties": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The name of the user"
        },
        "participantCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user"
        }
      },
      "description": "Schema of the chat thread participant"
    },
    "AzureCommunicationServices.AcsChatThreadPropertiesUpdatedEventData": {
      "type": "object",
      "properties": {
        "editedByCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user who updated the thread properties"
        },
        "editTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the properties of the thread were updated"
        },
        "properties": {
          "type": "object",
          "additionalProperties": true,
          "description": "The updated thread properties",
          "x-typespec-name": "Record<unknown>"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatThreadPropertiesUpdated event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadEventInThreadBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatThreadPropertiesUpdatedPerUserEventData": {
      "type": "object",
      "properties": {
        "editedByCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user who updated the thread properties"
        },
        "editTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the properties of the thread were updated"
        },
        "properties": {
          "type": "object",
          "additionalProperties": true,
          "description": "The updated thread properties",
          "x-typespec-name": "Record<unknown>"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatThreadPropertiesUpdatedPerUser event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadEventBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsChatThreadWithUserDeletedEventData": {
      "type": "object",
      "properties": {
        "deletedByCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user who deleted the thread"
        },
        "deleteTime": {
          "type": "string",
          "format": "date-time",
          "description": "The deletion time of the thread"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.ChatThreadWithUserDeleted event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsChatThreadEventBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsEmailDeliveryReportReceivedEventData": {
      "type": "object",
      "properties": {
        "sender": {
          "type": "string",
          "description": "The Sender Email Address"
        },
        "recipient": {
          "type": "string",
          "description": "The recipient Email Address"
        },
        "messageId": {
          "type": "string",
          "description": "The Id of the email been sent"
        },
        "status": {
          "$ref": "#/definitions/AzureCommunicationServices.AcsEmailDeliveryReportStatus",
          "description": "The status of the email. Any value other than Delivered is considered failed."
        },
        "deliveryStatusDetails": {
          "$ref": "#/definitions/AzureCommunicationServices.AcsEmailDeliveryReportStatusDetails",
          "description": "Detailed information about the status if any"
        },
        "deliveryAttemptTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the email delivery report received timestamp"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.EmailDeliveryReportReceived event."
    },
    "AzureCommunicationServices.AcsEmailDeliveryReportStatus": {
      "type": "string",
      "description": "The status of the email. Any value other than Delivered is considered failed.",
      "enum": [
        "Bounced",
        "Delivered",
        "Failed",
        "FilteredSpam",
        "Quarantined",
        "Suppressed"
      ],
      "x-ms-enum": {
        "name": "AcsEmailDeliveryReportStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Bounced",
            "value": "Bounced",
            "description": "Hard bounce detected while sending the email"
          },
          {
            "name": "Delivered",
            "value": "Delivered",
            "description": "The email was delivered"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The email failed to be delivered"
          },
          {
            "name": "FilteredSpam",
            "value": "FilteredSpam",
            "description": "The message was identified as spam and was rejected or blocked (not quarantined)."
          },
          {
            "name": "Quarantined",
            "value": "Quarantined",
            "description": "The message was quarantined (as spam, bulk mail, or phishing). For more information, see Quarantined email messages in EOP (EXCHANGE ONLINE PROTECTION)."
          },
          {
            "name": "Suppressed",
            "value": "Suppressed",
            "description": "The email was suppressed"
          }
        ]
      }
    },
    "AzureCommunicationServices.AcsEmailDeliveryReportStatusDetails": {
      "type": "object",
      "properties": {
        "statusMessage": {
          "type": "string",
          "description": "Detailed status message"
        }
      },
      "description": "Detailed information about the status if any"
    },
    "AzureCommunicationServices.AcsEmailEngagementTrackingReportReceivedEventData": {
      "type": "object",
      "properties": {
        "sender": {
          "type": "string",
          "description": "The Sender Email Address"
        },
        "messageId": {
          "type": "string",
          "description": "The Id of the email that has been sent"
        },
        "userActionTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the user interacted with the email"
        },
        "engagementContext": {
          "type": "string",
          "description": "The context of the type of engagement user had with email"
        },
        "userAgent": {
          "type": "string",
          "description": "The user agent interacting with the email"
        },
        "engagementType": {
          "$ref": "#/definitions/AzureCommunicationServices.AcsUserEngagement",
          "description": "The type of engagement user have with email"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.EmailEngagementTrackingReportReceived event."
    },
    "AzureCommunicationServices.AcsIncomingCallCustomContext": {
      "type": "object",
      "properties": {
        "sipHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Sip Headers for incoming call",
          "x-typespec-name": "Record<string>"
        },
        "viopHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Voip Headers for incoming call",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Custom Context of Incoming Call"
    },
    "AzureCommunicationServices.AcsIncomingCallEventData": {
      "type": "object",
      "properties": {
        "to": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the target user."
        },
        "from": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user who initiated the call."
        },
        "serverCallId": {
          "type": "string",
          "description": "The Id of the server call"
        },
        "callerDisplayName": {
          "type": "string",
          "description": "Display name of caller."
        },
        "customContext": {
          "$ref": "#/definitions/AzureCommunicationServices.AcsIncomingCallCustomContext",
          "description": "Custom Context of Incoming Call"
        },
        "incomingCallContext": {
          "type": "string",
          "description": "Signed incoming call context."
        },
        "correlationId": {
          "type": "string",
          "description": "CorrelationId (CallId)."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for an Microsoft.Communication.IncomingCall event"
    },
    "AzureCommunicationServices.AcsRecordingChunkInfoProperties": {
      "type": "object",
      "properties": {
        "documentId": {
          "type": "string",
          "description": "The documentId of the recording chunk"
        },
        "index": {
          "type": "integer",
          "format": "int64",
          "description": "The index of the recording chunk"
        },
        "endReason": {
          "type": "string",
          "description": "The reason for ending the recording chunk"
        },
        "metadataLocation": {
          "type": "string",
          "description": "The location of the metadata for this chunk"
        },
        "contentLocation": {
          "type": "string",
          "description": "The location of the content for this chunk"
        },
        "deleteLocation": {
          "type": "string",
          "description": "The location to delete all chunk storage"
        }
      },
      "description": "Schema for all properties of  Recording Chunk Information."
    },
    "AzureCommunicationServices.AcsRecordingFileStatusUpdatedEventData": {
      "type": "object",
      "properties": {
        "recordingStorageInfo": {
          "$ref": "#/definitions/AzureCommunicationServices.AcsRecordingStorageInfoProperties",
          "description": "The details of recording storage information"
        },
        "recordingStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the recording started"
        },
        "recordingDurationMs": {
          "type": "integer",
          "format": "int64",
          "description": "The recording duration in milliseconds"
        },
        "recordingContentType": {
          "$ref": "#/definitions/AzureCommunicationServices.recordingContentType",
          "description": "The recording content type- AudioVideo, or Audio"
        },
        "recordingChannelType": {
          "$ref": "#/definitions/AzureCommunicationServices.recordingChannelType",
          "description": "The recording  channel type - Mixed, Unmixed"
        },
        "recordingFormatType": {
          "$ref": "#/definitions/AzureCommunicationServices.recordingFormatType",
          "description": "The recording format type - Mp4, Mp3, Wav"
        },
        "sessionEndReason": {
          "type": "string",
          "description": "The reason for ending recording session"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.RecordingFileStatusUpdated event."
    },
    "AzureCommunicationServices.AcsRecordingStorageInfoProperties": {
      "type": "object",
      "properties": {
        "recordingChunks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureCommunicationServices.AcsRecordingChunkInfoProperties"
          },
          "x-ms-identifiers": [],
          "description": "List of details of recording chunks information",
          "x-typespec-name": "AzureCommunicationServices.AcsRecordingChunkInfoProperties[]"
        }
      },
      "description": "Schema for all properties of Recording Storage Information."
    },
    "AzureCommunicationServices.AcsSmsDeliveryAttemptProperties": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "TimeStamp when delivery was attempted"
        },
        "segmentsSucceeded": {
          "description": "Number of segments that were successfully delivered"
        },
        "segmentsFailed": {
          "description": "Number of segments whose delivery failed"
        }
      },
      "description": "Schema for details of a delivery attempt"
    },
    "AzureCommunicationServices.AcsSmsDeliveryReportReceivedEventData": {
      "type": "object",
      "properties": {
        "deliveryStatus": {
          "type": "string",
          "description": "Status of Delivery"
        },
        "deliveryStatusDetails": {
          "type": "string",
          "description": "Details about Delivery Status"
        },
        "deliveryAttempts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureCommunicationServices.AcsSmsDeliveryAttemptProperties"
          },
          "x-ms-identifiers": [],
          "description": "List of details of delivery attempts made",
          "x-typespec-name": "AzureCommunicationServices.AcsSmsDeliveryAttemptProperties[]"
        },
        "receivedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the SMS delivery report was received"
        },
        "tag": {
          "type": "string",
          "description": "Customer Content"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.SMSDeliveryReportReceived event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsSmsEventBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsSmsEventBaseProperties": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The identity of the SMS message"
        },
        "from": {
          "type": "string",
          "description": "The identity of SMS message sender"
        },
        "to": {
          "type": "string",
          "description": "The identity of SMS message receiver"
        }
      },
      "description": "Schema of common properties of all SMS events"
    },
    "AzureCommunicationServices.AcsSmsReceivedEventData": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "The SMS content"
        },
        "receivedTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the SMS was received"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Communication.SMSReceived event.",
      "allOf": [
        {
          "$ref": "#/definitions/AzureCommunicationServices.AcsSmsEventBaseProperties"
        }
      ]
    },
    "AzureCommunicationServices.AcsUserDisconnectedEventData": {
      "type": "object",
      "properties": {
        "userCommunicationIdentifier": {
          "$ref": "#/definitions/CommunicationIdentifierModel",
          "description": "The communication identifier of the user who was disconnected"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for an Microsoft.Communication.UserDisconnected event."
    },
    "AzureCommunicationServices.AcsUserEngagement": {
      "type": "string",
      "description": "The type of engagement user have with email.",
      "enum": [
        "view",
        "click"
      ],
      "x-ms-enum": {
        "name": "AcsUserEngagement",
        "modelAsString": true,
        "values": [
          {
            "name": "view",
            "value": "view",
            "description": "View"
          },
          {
            "name": "click",
            "value": "click",
            "description": "Click"
          }
        ]
      }
    },
    "AzureCommunicationServices.recordingChannelType": {
      "type": "string",
      "description": "Recording channel type",
      "enum": [
        "Mixed",
        "Unmixed"
      ],
      "x-ms-enum": {
        "name": "recordingChannelType",
        "modelAsString": true,
        "values": [
          {
            "name": "Mixed",
            "value": "Mixed",
            "description": "Mixed channel type"
          },
          {
            "name": "Unmixed",
            "value": "Unmixed",
            "description": "Unmixed channel type"
          }
        ]
      }
    },
    "AzureCommunicationServices.recordingContentType": {
      "type": "string",
      "description": "Recording content type",
      "enum": [
        "AudioVideo",
        "Audio"
      ],
      "x-ms-enum": {
        "name": "recordingContentType",
        "modelAsString": true,
        "values": [
          {
            "name": "AudioVideo",
            "value": "AudioVideo",
            "description": "AudioVideo content type"
          },
          {
            "name": "Audio",
            "value": "Audio",
            "description": "Audio content type"
          }
        ]
      }
    },
    "AzureCommunicationServices.recordingFormatType": {
      "type": "string",
      "description": "Recording format type",
      "enum": [
        "Wav",
        "Mp3",
        "Mp4"
      ],
      "x-ms-enum": {
        "name": "recordingFormatType",
        "modelAsString": true,
        "values": [
          {
            "name": "Wav",
            "value": "Wav",
            "description": "WAV format"
          },
          {
            "name": "Mp3",
            "value": "Mp3",
            "description": "MP3 format"
          },
          {
            "name": "Mp4",
            "value": "Mp4",
            "description": "MP4 format"
          }
        ]
      }
    },
    "CloudEventEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "An identifier for the event. The combination of id and source must be unique for each distinct event."
        },
        "source": {
          "type": "string",
          "description": "Identifies the context in which an event happened. The combination of id and source must be unique for each distinct event."
        },
        "data": {
          "description": "Event data specific to the event type."
        },
        "data_base64": {
          "type": "string",
          "format": "byte",
          "description": "Event data specific to the event type, encoded as a base64 string."
        },
        "type": {
          "type": "string",
          "description": "Type of event related to the originating occurrence."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time (in UTC) the event was generated, in RFC3339 format."
        },
        "specversion": {
          "type": "string",
          "description": "The version of the CloudEvents specification which the event uses."
        },
        "dataschema": {
          "type": "string",
          "description": "Identifies the schema that data adheres to."
        },
        "datacontenttype": {
          "type": "string",
          "description": "Content type of data value."
        },
        "subject": {
          "type": "string",
          "description": "This describes the subject of the event in the context of the event producer (identified by source)."
        }
      },
      "description": "Properties of an event published to an Azure Messaging EventGrid Namespace topic using the CloudEvent 1.0 Schema.",
      "required": [
        "id",
        "source",
        "type",
        "specversion"
      ]
    },
    "CommunicationCloudEnvironmentModel": {
      "type": "string",
      "description": "Communication cloud environment model.",
      "enum": [
        "public",
        "dod",
        "gcch"
      ],
      "x-ms-enum": {
        "name": "CommunicationCloudEnvironmentModel",
        "modelAsString": true,
        "values": [
          {
            "name": "public",
            "value": "public",
            "description": "Public"
          },
          {
            "name": "dod",
            "value": "dod",
            "description": "Dod"
          },
          {
            "name": "gcch",
            "value": "gcch",
            "description": "Gcch"
          }
        ]
      }
    },
    "CommunicationIdentifierModel": {
      "type": "object",
      "properties": {
        "rawId": {
          "type": "string",
          "description": "Raw Id of the identifier. Optional in requests, required in responses."
        },
        "communicationUser": {
          "$ref": "#/definitions/CommunicationUserIdentifierModel",
          "description": "The communication user."
        },
        "phoneNumber": {
          "$ref": "#/definitions/PhoneNumberIdentifierModel",
          "description": "The phone number."
        },
        "microsoftTeamsUser": {
          "$ref": "#/definitions/MicrosoftTeamsUserIdentifierModel",
          "description": "The Microsoft Teams user."
        }
      },
      "description": "Identifies a participant in Azure Communication services. A participant is, for example, a phone number or an Azure communication user. This model must be interpreted as a union: Apart from rawId, at most one further property may be set."
    },
    "CommunicationUserIdentifierModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Id of the communication user."
        }
      },
      "description": "A user that got created with an Azure Communication Services resource.",
      "required": [
        "id"
      ]
    },
    "ContainerRegistry.ContainerRegistryArtifactEventData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The event ID."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the event occurred."
        },
        "action": {
          "type": "string",
          "description": "The action that encompasses the provided event."
        },
        "location": {
          "type": "string",
          "description": "The location of the event."
        },
        "target": {
          "$ref": "#/definitions/ContainerRegistry.ContainerRegistryArtifactEventTarget",
          "description": "The target of the event."
        },
        "connectedRegistry": {
          "$ref": "#/definitions/ContainerRegistry.ContainerRegistryEventConnectedRegistry",
          "description": "The connected registry information if the event is generated by a connected registry."
        }
      },
      "description": "The content of the event request message."
    },
    "ContainerRegistry.ContainerRegistryArtifactEventTarget": {
      "type": "object",
      "properties": {
        "mediaType": {
          "type": "string",
          "description": "The MIME type of the artifact."
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "The size in bytes of the artifact."
        },
        "digest": {
          "type": "string",
          "description": "The digest of the artifact."
        },
        "repository": {
          "type": "string",
          "description": "The repository name of the artifact."
        },
        "tag": {
          "type": "string",
          "description": "The tag of the artifact."
        },
        "name": {
          "type": "string",
          "description": "The name of the artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the artifact."
        }
      },
      "description": "The target of the event."
    },
    "ContainerRegistry.ContainerRegistryChartDeletedEventData": {
      "type": "object",
      "properties": {},
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ContainerRegistry.ChartDeleted event.",
      "allOf": [
        {
          "$ref": "#/definitions/ContainerRegistry.ContainerRegistryArtifactEventData"
        }
      ]
    },
    "ContainerRegistry.ContainerRegistryChartPushedEventData": {
      "type": "object",
      "properties": {},
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ContainerRegistry.ChartPushed event.",
      "allOf": [
        {
          "$ref": "#/definitions/ContainerRegistry.ContainerRegistryArtifactEventData"
        }
      ]
    },
    "ContainerRegistry.ContainerRegistryEventActor": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The subject or username associated with the request context that generated the event."
        }
      },
      "description": "The agent that initiated the event. For most situations, this could be from the authorization context of the request."
    },
    "ContainerRegistry.ContainerRegistryEventConnectedRegistry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the connected registry that generated this event."
        }
      },
      "description": "The connected registry information if the event is generated by a connected registry."
    },
    "ContainerRegistry.ContainerRegistryEventData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The event ID."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the event occurred."
        },
        "action": {
          "type": "string",
          "description": "The action that encompasses the provided event."
        },
        "location": {
          "type": "string",
          "description": "The location of the event."
        },
        "target": {
          "$ref": "#/definitions/ContainerRegistry.ContainerRegistryEventTarget",
          "description": "The target of the event."
        },
        "request": {
          "$ref": "#/definitions/ContainerRegistry.ContainerRegistryEventRequest",
          "description": "The request that generated the event."
        },
        "actor": {
          "$ref": "#/definitions/ContainerRegistry.ContainerRegistryEventActor",
          "description": "The agent that initiated the event. For most situations, this could be from the authorization context of the request."
        },
        "source": {
          "$ref": "#/definitions/ContainerRegistry.ContainerRegistryEventSource",
          "description": "The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it."
        },
        "connectedRegistry": {
          "$ref": "#/definitions/ContainerRegistry.ContainerRegistryEventConnectedRegistry",
          "description": "The connected registry information if the event is generated by a connected registry."
        }
      },
      "description": "The content of the event request message."
    },
    "ContainerRegistry.ContainerRegistryEventRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the request that initiated the event."
        },
        "addr": {
          "type": "string",
          "description": "The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request."
        },
        "host": {
          "type": "string",
          "description": "The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests."
        },
        "method": {
          "type": "string",
          "description": "The request method that generated the event."
        },
        "useragent": {
          "type": "string",
          "description": "The user agent header of the request."
        }
      },
      "description": "The request that generated the event."
    },
    "ContainerRegistry.ContainerRegistryEventSource": {
      "type": "object",
      "properties": {
        "addr": {
          "type": "string",
          "description": "The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port."
        },
        "instanceID": {
          "type": "string",
          "description": "The running instance of an application. Changes after each restart."
        }
      },
      "description": "The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it."
    },
    "ContainerRegistry.ContainerRegistryEventTarget": {
      "type": "object",
      "properties": {
        "mediaType": {
          "type": "string",
          "description": "The MIME type of the referenced object."
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "The number of bytes of the content. Same as Length field."
        },
        "digest": {
          "type": "string",
          "description": "The digest of the content, as defined by the Registry V2 HTTP API Specification."
        },
        "repository": {
          "type": "string",
          "description": "The repository name."
        },
        "tag": {
          "type": "string",
          "description": "The tag name."
        },
        "length": {
          "type": "integer",
          "format": "int64",
          "description": "The number of bytes of the content. Same as Size field."
        },
        "url": {
          "type": "string",
          "description": "The direct URL to the content."
        }
      },
      "description": "The target of the event."
    },
    "ContainerRegistry.ContainerRegistryImageDeletedEventData": {
      "type": "object",
      "properties": {},
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ContainerRegistry.ImageDeleted event.",
      "allOf": [
        {
          "$ref": "#/definitions/ContainerRegistry.ContainerRegistryEventData"
        }
      ]
    },
    "ContainerRegistry.ContainerRegistryImagePushedEventData": {
      "type": "object",
      "properties": {},
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ContainerRegistry.ImagePushed event.",
      "allOf": [
        {
          "$ref": "#/definitions/ContainerRegistry.ContainerRegistryEventData"
        }
      ]
    },
    "ContainerService.ContainerServiceClusterSupportEndedEventData": {
      "type": "object",
      "properties": {},
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ContainerService.ClusterSupportEnded event",
      "allOf": [
        {
          "$ref": "#/definitions/ContainerService.ContainerServiceClusterSupportEventData"
        }
      ]
    },
    "ContainerService.ContainerServiceClusterSupportEndingEventData": {
      "type": "object",
      "properties": {},
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ContainerService.ClusterSupportEnding event",
      "allOf": [
        {
          "$ref": "#/definitions/ContainerService.ContainerServiceClusterSupportEventData"
        }
      ]
    },
    "ContainerService.ContainerServiceClusterSupportEventData": {
      "type": "object",
      "properties": {
        "kubernetesVersion": {
          "type": "string",
          "description": "The Kubernetes version of the ManagedCluster resource"
        }
      },
      "description": "Schema of common properties of cluster support events"
    },
    "ContainerService.ContainerServiceNewKubernetesVersionAvailableEventData": {
      "type": "object",
      "properties": {
        "latestSupportedKubernetesVersion": {
          "type": "string",
          "description": "The highest PATCH Kubernetes version for the highest MINOR version supported by ManagedCluster resource"
        },
        "latestStableKubernetesVersion": {
          "type": "string",
          "description": "The highest PATCH Kubernetes version for the MINOR version considered stable for the ManagedCluster resource"
        },
        "lowestMinorKubernetesVersion": {
          "type": "string",
          "description": "The highest PATCH Kubernetes version for the lowest applicable MINOR version available for the ManagedCluster resource"
        },
        "latestPreviewKubernetesVersion": {
          "type": "string",
          "description": "The highest PATCH Kubernetes version considered preview for the ManagedCluster resource. There might not be any version in preview at the time of publishing the event"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ContainerService.NewKubernetesVersionAvailable event"
    },
    "ContainerService.ContainerServiceNodePoolRollingEventData": {
      "type": "object",
      "properties": {
        "nodePoolName": {
          "type": "string",
          "description": "The name of the node pool in the ManagedCluster resource"
        }
      },
      "description": "Schema of common properties of node pool rolling events"
    },
    "ContainerService.ContainerServiceNodePoolRollingFailedEventData": {
      "type": "object",
      "properties": {},
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ContainerService.NodePoolRollingFailed event",
      "allOf": [
        {
          "$ref": "#/definitions/ContainerService.ContainerServiceNodePoolRollingEventData"
        }
      ]
    },
    "ContainerService.ContainerServiceNodePoolRollingStartedEventData": {
      "type": "object",
      "properties": {},
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ContainerService.NodePoolRollingStarted event",
      "allOf": [
        {
          "$ref": "#/definitions/ContainerService.ContainerServiceNodePoolRollingEventData"
        }
      ]
    },
    "ContainerService.ContainerServiceNodePoolRollingSucceededEventData": {
      "type": "object",
      "properties": {},
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ContainerService.NodePoolRollingSucceeded event",
      "allOf": [
        {
          "$ref": "#/definitions/ContainerService.ContainerServiceNodePoolRollingEventData"
        }
      ]
    },
    "CustomEventEvent": {
      "type": "object",
      "properties": {},
      "description": "Properties of an event published to an Event Grid topic using a custom schema"
    },
    "DataBox.DataBoxCopyCompletedEventData": {
      "type": "object",
      "properties": {
        "serialNumber": {
          "type": "string",
          "description": "Serial Number of the device associated with the event. The list is comma separated if more than one serial number is associated."
        },
        "stageName": {
          "$ref": "#/definitions/DataBox.DataBoxStageName",
          "description": "Name of the current Stage"
        },
        "stageTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the stage happened."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.DataBox.CopyCompleted event."
    },
    "DataBox.DataBoxCopyStartedEventData": {
      "type": "object",
      "properties": {
        "serialNumber": {
          "type": "string",
          "description": "Serial Number of the device associated with the event. The list is comma separated if more than one serial number is associated."
        },
        "stageName": {
          "$ref": "#/definitions/DataBox.DataBoxStageName",
          "description": "Name of the current Stage"
        },
        "stageTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the stage happened."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.DataBox.CopyStarted event."
    },
    "DataBox.DataBoxOrderCompletedEventData": {
      "type": "object",
      "properties": {
        "serialNumber": {
          "type": "string",
          "description": "Serial Number of the device associated with the event. The list is comma separated if more than one serial number is associated."
        },
        "stageName": {
          "$ref": "#/definitions/DataBox.DataBoxStageName",
          "description": "Name of the current Stage"
        },
        "stageTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the stage happened."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.DataBox.OrderCompleted event."
    },
    "DataBox.DataBoxStageName": {
      "type": "string",
      "description": "Schema of DataBox Stage Name enumeration.",
      "enum": [
        "CopyStarted",
        "CopyCompleted",
        "OrderCompleted"
      ],
      "x-ms-enum": {
        "name": "DataBoxStageName",
        "modelAsString": true,
        "values": [
          {
            "name": "CopyStarted",
            "value": "CopyStarted",
            "description": "Copy has started"
          },
          {
            "name": "CopyCompleted",
            "value": "CopyCompleted",
            "description": "Copy has completed"
          },
          {
            "name": "OrderCompleted",
            "value": "OrderCompleted",
            "description": "Order has been completed"
          }
        ]
      }
    },
    "EventGrid.SubscriptionDeletedEventData": {
      "type": "object",
      "properties": {
        "eventSubscriptionId": {
          "type": "string",
          "description": "The Azure resource ID of the deleted event subscription.",
          "readOnly": true
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.EventGrid.SubscriptionDeletedEvent event."
    },
    "EventGrid.SubscriptionValidationEventData": {
      "type": "object",
      "properties": {
        "validationCode": {
          "type": "string",
          "description": "The validation code sent by Azure Event Grid to validate an event subscription. To complete the validation handshake, the subscriber must either respond with this validation code as part of the validation response, or perform a GET request on the validationUrl (available starting version 2018-05-01-preview).",
          "readOnly": true
        },
        "validationUrl": {
          "type": "string",
          "description": "The validation URL sent by Azure Event Grid (available starting version 2018-05-01-preview). To complete the validation handshake, the subscriber must either respond with the validationCode as part of the validation response, or perform a GET request on the validationUrl (available starting version 2018-05-01-preview).",
          "readOnly": true
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.EventGrid.SubscriptionValidationEvent event."
    },
    "EventGrid.SubscriptionValidationResponse": {
      "type": "object",
      "properties": {
        "validationResponse": {
          "type": "string",
          "description": "The validation response sent by the subscriber to Azure Event Grid to complete the validation of an event subscription."
        }
      },
      "description": "To complete an event subscription validation handshake, a subscriber can use either the validationCode or the validationUrl received in a SubscriptionValidationEvent. When the validationCode is used, the SubscriptionValidationResponse can be used to build the response."
    },
    "EventGridEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "An unique identifier for the event."
        },
        "topic": {
          "type": "string",
          "description": "The resource path of the event source."
        },
        "subject": {
          "type": "string",
          "description": "A resource path relative to the topic path."
        },
        "data": {
          "description": "Event data specific to the event type."
        },
        "eventType": {
          "type": "string",
          "description": "The type of the event that occurred."
        },
        "eventTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time (in UTC) the event was generated."
        },
        "metadataVersion": {
          "type": "string",
          "description": "The schema version of the event metadata.",
          "readOnly": true
        },
        "dataVersion": {
          "type": "string",
          "description": "The schema version of the data object."
        }
      },
      "description": "Properties of an event published to an Event Grid topic using the EventGrid Schema.",
      "required": [
        "id",
        "subject",
        "data",
        "eventType",
        "eventTime",
        "dataVersion"
      ]
    },
    "EventHub.EventHubCaptureFileCreatedEventData": {
      "type": "object",
      "properties": {
        "fileUrl": {
          "type": "string",
          "description": "The path to the capture file."
        },
        "fileType": {
          "type": "string",
          "description": "The file type of the capture file."
        },
        "partitionId": {
          "type": "string",
          "description": "The shard ID."
        },
        "sizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "The file size."
        },
        "eventCount": {
          "type": "integer",
          "format": "int64",
          "description": "The number of events in the file."
        },
        "firstSequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "The smallest sequence number from the queue."
        },
        "lastSequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "The last sequence number from the queue."
        },
        "firstEnqueueTime": {
          "type": "string",
          "format": "date-time",
          "description": "The first time from the queue."
        },
        "lastEnqueueTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last time from the queue."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.EventHub.CaptureFileCreated event."
    },
    "HealthCareApis.HealthcareDicomImageCreatedEventData": {
      "type": "object",
      "properties": {
        "partitionName": {
          "type": "string",
          "description": "Data partition name"
        },
        "imageStudyInstanceUid": {
          "type": "string",
          "description": "Unique identifier for the Study"
        },
        "imageSeriesInstanceUid": {
          "type": "string",
          "description": "Unique identifier for the Series"
        },
        "imageSopInstanceUid": {
          "type": "string",
          "description": "Unique identifier for the DICOM Image"
        },
        "serviceHostName": {
          "type": "string",
          "description": "Domain name of the DICOM account for this image."
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence number of the DICOM Service within Azure Health Data Services. It is unique for every image creation and deletion within the service."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.HealthcareApis.DicomImageCreated event."
    },
    "HealthCareApis.HealthcareDicomImageDeletedEventData": {
      "type": "object",
      "properties": {
        "partitionName": {
          "type": "string",
          "description": "Data partition name"
        },
        "imageStudyInstanceUid": {
          "type": "string",
          "description": "Unique identifier for the Study"
        },
        "imageSeriesInstanceUid": {
          "type": "string",
          "description": "Unique identifier for the Series"
        },
        "imageSopInstanceUid": {
          "type": "string",
          "description": "Unique identifier for the DICOM Image"
        },
        "serviceHostName": {
          "type": "string",
          "description": "Host name of the DICOM account for this image."
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence number of the DICOM Service within Azure Health Data Services. It is unique for every image creation and deletion within the service."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.HealthcareApis.DicomImageDeleted event."
    },
    "HealthCareApis.HealthcareDicomImageUpdatedEventData": {
      "type": "object",
      "properties": {
        "partitionName": {
          "type": "string",
          "description": "Data partition name"
        },
        "imageStudyInstanceUid": {
          "type": "string",
          "description": "Unique identifier for the Study"
        },
        "imageSeriesInstanceUid": {
          "type": "string",
          "description": "Unique identifier for the Series"
        },
        "imageSopInstanceUid": {
          "type": "string",
          "description": "Unique identifier for the DICOM Image"
        },
        "serviceHostName": {
          "type": "string",
          "description": "Domain name of the DICOM account for this image."
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64",
          "description": "Sequence number of the DICOM Service within Azure Health Data Services. It is unique for every image creation, updation and deletion within the service."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.HealthcareApis.DicomImageUpdated event.",
      "required": [
        "partitionName"
      ]
    },
    "HealthCareApis.HealthcareFhirResourceCreatedEventData": {
      "type": "object",
      "properties": {
        "resourceFhirAccount": {
          "type": "string",
          "description": "Domain name of FHIR account for this resource."
        },
        "resourceFhirId": {
          "type": "string",
          "description": "Id of HL7 FHIR resource."
        },
        "resourceVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "VersionId of HL7 FHIR resource. It changes when the resource is created, updated, or deleted(soft-deletion)."
        },
        "resourceType": {
          "$ref": "#/definitions/HealthCareApis.HealthcareFhirResourceType",
          "description": "Type of HL7 FHIR resource."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.HealthcareApis.FhirResourceCreated event."
    },
    "HealthCareApis.HealthcareFhirResourceDeletedEventData": {
      "type": "object",
      "properties": {
        "resourceFhirAccount": {
          "type": "string",
          "description": "Domain name of FHIR account for this resource."
        },
        "resourceFhirId": {
          "type": "string",
          "description": "Id of HL7 FHIR resource."
        },
        "resourceVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "VersionId of HL7 FHIR resource. It changes when the resource is created, updated, or deleted(soft-deletion)."
        },
        "resourceType": {
          "$ref": "#/definitions/HealthCareApis.HealthcareFhirResourceType",
          "description": "Type of HL7 FHIR resource."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.HealthcareApis.FhirResourceDeleted event."
    },
    "HealthCareApis.HealthcareFhirResourceType": {
      "type": "string",
      "description": "Schema of FHIR resource type enumeration.",
      "enum": [
        "Account",
        "ActivityDefinition",
        "AdverseEvent",
        "AllergyIntolerance",
        "Appointment",
        "AppointmentResponse",
        "AuditEvent",
        "Basic",
        "Binary",
        "BiologicallyDerivedProduct",
        "BodySite",
        "BodyStructure",
        "Bundle",
        "CapabilityStatement",
        "CarePlan",
        "CareTeam",
        "CatalogEntry",
        "ChargeItem",
        "ChargeItemDefinition",
        "Claim",
        "ClaimResponse",
        "ClinicalImpression",
        "CodeSystem",
        "Communication",
        "CommunicationRequest",
        "CompartmentDefinition",
        "Composition",
        "ConceptMap",
        "Condition",
        "Consent",
        "Contract",
        "Coverage",
        "CoverageEligibilityRequest",
        "CoverageEligibilityResponse",
        "DataElement",
        "DetectedIssue",
        "Device",
        "DeviceComponent",
        "DeviceDefinition",
        "DeviceMetric",
        "DeviceRequest",
        "DeviceUseStatement",
        "DiagnosticReport",
        "DocumentManifest",
        "DocumentReference",
        "DomainResource",
        "EffectEvidenceSynthesis",
        "EligibilityRequest",
        "EligibilityResponse",
        "Encounter",
        "Endpoint",
        "EnrollmentRequest",
        "EnrollmentResponse",
        "EpisodeOfCare",
        "EventDefinition",
        "Evidence",
        "EvidenceVariable",
        "ExampleScenario",
        "ExpansionProfile",
        "ExplanationOfBenefit",
        "FamilyMemberHistory",
        "Flag",
        "Goal",
        "GraphDefinition",
        "Group",
        "GuidanceResponse",
        "HealthcareService",
        "ImagingManifest",
        "ImagingStudy",
        "Immunization",
        "ImmunizationEvaluation",
        "ImmunizationRecommendation",
        "ImplementationGuide",
        "InsurancePlan",
        "Invoice",
        "Library",
        "Linkage",
        "List",
        "Location",
        "Measure",
        "MeasureReport",
        "Media",
        "Medication",
        "MedicationAdministration",
        "MedicationDispense",
        "MedicationKnowledge",
        "MedicationRequest",
        "MedicationStatement",
        "MedicinalProduct",
        "MedicinalProductAuthorization",
        "MedicinalProductContraindication",
        "MedicinalProductIndication",
        "MedicinalProductIngredient",
        "MedicinalProductInteraction",
        "MedicinalProductManufactured",
        "MedicinalProductPackaged",
        "MedicinalProductPharmaceutical",
        "MedicinalProductUndesirableEffect",
        "MessageDefinition",
        "MessageHeader",
        "MolecularSequence",
        "NamingSystem",
        "NutritionOrder",
        "Observation",
        "ObservationDefinition",
        "OperationDefinition",
        "OperationOutcome",
        "Organization",
        "OrganizationAffiliation",
        "Parameters",
        "Patient",
        "PaymentNotice",
        "PaymentReconciliation",
        "Person",
        "PlanDefinition",
        "Practitioner",
        "PractitionerRole",
        "Procedure",
        "ProcedureRequest",
        "ProcessRequest",
        "ProcessResponse",
        "Provenance",
        "Questionnaire",
        "QuestionnaireResponse",
        "ReferralRequest",
        "RelatedPerson",
        "RequestGroup",
        "ResearchDefinition",
        "ResearchElementDefinition",
        "ResearchStudy",
        "ResearchSubject",
        "Resource",
        "RiskAssessment",
        "RiskEvidenceSynthesis",
        "Schedule",
        "SearchParameter",
        "Sequence",
        "ServiceDefinition",
        "ServiceRequest",
        "Slot",
        "Specimen",
        "SpecimenDefinition",
        "StructureDefinition",
        "StructureMap",
        "Subscription",
        "Substance",
        "SubstanceNucleicAcid",
        "SubstancePolymer",
        "SubstanceProtein",
        "SubstanceReferenceInformation",
        "SubstanceSourceMaterial",
        "SubstanceSpecification",
        "SupplyDelivery",
        "SupplyRequest",
        "Task",
        "TerminologyCapabilities",
        "TestReport",
        "TestScript",
        "ValueSet",
        "VerificationResult",
        "VisionPrescription"
      ],
      "x-ms-enum": {
        "name": "HealthcareFhirResourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "Account",
            "value": "Account",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ActivityDefinition",
            "value": "ActivityDefinition",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "AdverseEvent",
            "value": "AdverseEvent",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "AllergyIntolerance",
            "value": "AllergyIntolerance",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Appointment",
            "value": "Appointment",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "AppointmentResponse",
            "value": "AppointmentResponse",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "AuditEvent",
            "value": "AuditEvent",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Basic",
            "value": "Basic",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Binary",
            "value": "Binary",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "BiologicallyDerivedProduct",
            "value": "BiologicallyDerivedProduct",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "BodySite",
            "value": "BodySite",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "BodyStructure",
            "value": "BodyStructure",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "Bundle",
            "value": "Bundle",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "CapabilityStatement",
            "value": "CapabilityStatement",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "CarePlan",
            "value": "CarePlan",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "CareTeam",
            "value": "CareTeam",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "CatalogEntry",
            "value": "CatalogEntry",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "ChargeItem",
            "value": "ChargeItem",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ChargeItemDefinition",
            "value": "ChargeItemDefinition",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "Claim",
            "value": "Claim",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ClaimResponse",
            "value": "ClaimResponse",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ClinicalImpression",
            "value": "ClinicalImpression",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "CodeSystem",
            "value": "CodeSystem",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Communication",
            "value": "Communication",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "CommunicationRequest",
            "value": "CommunicationRequest",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "CompartmentDefinition",
            "value": "CompartmentDefinition",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Composition",
            "value": "Composition",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ConceptMap",
            "value": "ConceptMap",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Condition",
            "value": "Condition",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Consent",
            "value": "Consent",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Contract",
            "value": "Contract",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Coverage",
            "value": "Coverage",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "CoverageEligibilityRequest",
            "value": "CoverageEligibilityRequest",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "CoverageEligibilityResponse",
            "value": "CoverageEligibilityResponse",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "DataElement",
            "value": "DataElement",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "DetectedIssue",
            "value": "DetectedIssue",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Device",
            "value": "Device",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "DeviceComponent",
            "value": "DeviceComponent",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "DeviceDefinition",
            "value": "DeviceDefinition",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "DeviceMetric",
            "value": "DeviceMetric",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "DeviceRequest",
            "value": "DeviceRequest",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "DeviceUseStatement",
            "value": "DeviceUseStatement",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "DiagnosticReport",
            "value": "DiagnosticReport",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "DocumentManifest",
            "value": "DocumentManifest",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "DocumentReference",
            "value": "DocumentReference",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "DomainResource",
            "value": "DomainResource",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "EffectEvidenceSynthesis",
            "value": "EffectEvidenceSynthesis",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "EligibilityRequest",
            "value": "EligibilityRequest",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "EligibilityResponse",
            "value": "EligibilityResponse",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "Encounter",
            "value": "Encounter",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Endpoint",
            "value": "Endpoint",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "EnrollmentRequest",
            "value": "EnrollmentRequest",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "EnrollmentResponse",
            "value": "EnrollmentResponse",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "EpisodeOfCare",
            "value": "EpisodeOfCare",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "EventDefinition",
            "value": "EventDefinition",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "Evidence",
            "value": "Evidence",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "EvidenceVariable",
            "value": "EvidenceVariable",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "ExampleScenario",
            "value": "ExampleScenario",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "ExpansionProfile",
            "value": "ExpansionProfile",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "ExplanationOfBenefit",
            "value": "ExplanationOfBenefit",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "FamilyMemberHistory",
            "value": "FamilyMemberHistory",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Flag",
            "value": "Flag",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Goal",
            "value": "Goal",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "GraphDefinition",
            "value": "GraphDefinition",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Group",
            "value": "Group",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "GuidanceResponse",
            "value": "GuidanceResponse",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "HealthcareService",
            "value": "HealthcareService",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ImagingManifest",
            "value": "ImagingManifest",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "ImagingStudy",
            "value": "ImagingStudy",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Immunization",
            "value": "Immunization",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ImmunizationEvaluation",
            "value": "ImmunizationEvaluation",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "ImmunizationRecommendation",
            "value": "ImmunizationRecommendation",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ImplementationGuide",
            "value": "ImplementationGuide",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "InsurancePlan",
            "value": "InsurancePlan",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "Invoice",
            "value": "Invoice",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "Library",
            "value": "Library",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Linkage",
            "value": "Linkage",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "List",
            "value": "List",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Location",
            "value": "Location",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Measure",
            "value": "Measure",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "MeasureReport",
            "value": "MeasureReport",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Media",
            "value": "Media",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Medication",
            "value": "Medication",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "MedicationAdministration",
            "value": "MedicationAdministration",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "MedicationDispense",
            "value": "MedicationDispense",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "MedicationKnowledge",
            "value": "MedicationKnowledge",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "MedicationRequest",
            "value": "MedicationRequest",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "MedicationStatement",
            "value": "MedicationStatement",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "MedicinalProduct",
            "value": "MedicinalProduct",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "MedicinalProductAuthorization",
            "value": "MedicinalProductAuthorization",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "MedicinalProductContraindication",
            "value": "MedicinalProductContraindication",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "MedicinalProductIndication",
            "value": "MedicinalProductIndication",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "MedicinalProductIngredient",
            "value": "MedicinalProductIngredient",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "MedicinalProductInteraction",
            "value": "MedicinalProductInteraction",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "MedicinalProductManufactured",
            "value": "MedicinalProductManufactured",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "MedicinalProductPackaged",
            "value": "MedicinalProductPackaged",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "MedicinalProductPharmaceutical",
            "value": "MedicinalProductPharmaceutical",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "MedicinalProductUndesirableEffect",
            "value": "MedicinalProductUndesirableEffect",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "MessageDefinition",
            "value": "MessageDefinition",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "MessageHeader",
            "value": "MessageHeader",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "MolecularSequence",
            "value": "MolecularSequence",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "NamingSystem",
            "value": "NamingSystem",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "NutritionOrder",
            "value": "NutritionOrder",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Observation",
            "value": "Observation",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ObservationDefinition",
            "value": "ObservationDefinition",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "OperationDefinition",
            "value": "OperationDefinition",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "OperationOutcome",
            "value": "OperationOutcome",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Organization",
            "value": "Organization",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "OrganizationAffiliation",
            "value": "OrganizationAffiliation",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "Parameters",
            "value": "Parameters",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Patient",
            "value": "Patient",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "PaymentNotice",
            "value": "PaymentNotice",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "PaymentReconciliation",
            "value": "PaymentReconciliation",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Person",
            "value": "Person",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "PlanDefinition",
            "value": "PlanDefinition",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Practitioner",
            "value": "Practitioner",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "PractitionerRole",
            "value": "PractitionerRole",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Procedure",
            "value": "Procedure",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ProcedureRequest",
            "value": "ProcedureRequest",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "ProcessRequest",
            "value": "ProcessRequest",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "ProcessResponse",
            "value": "ProcessResponse",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "Provenance",
            "value": "Provenance",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Questionnaire",
            "value": "Questionnaire",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "QuestionnaireResponse",
            "value": "QuestionnaireResponse",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ReferralRequest",
            "value": "ReferralRequest",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "RelatedPerson",
            "value": "RelatedPerson",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "RequestGroup",
            "value": "RequestGroup",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ResearchDefinition",
            "value": "ResearchDefinition",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "ResearchElementDefinition",
            "value": "ResearchElementDefinition",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "ResearchStudy",
            "value": "ResearchStudy",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ResearchSubject",
            "value": "ResearchSubject",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Resource",
            "value": "Resource",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "RiskAssessment",
            "value": "RiskAssessment",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "RiskEvidenceSynthesis",
            "value": "RiskEvidenceSynthesis",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "Schedule",
            "value": "Schedule",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "SearchParameter",
            "value": "SearchParameter",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Sequence",
            "value": "Sequence",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "ServiceDefinition",
            "value": "ServiceDefinition",
            "description": "The FHIR resource type defined in STU3."
          },
          {
            "name": "ServiceRequest",
            "value": "ServiceRequest",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "Slot",
            "value": "Slot",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Specimen",
            "value": "Specimen",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "SpecimenDefinition",
            "value": "SpecimenDefinition",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "StructureDefinition",
            "value": "StructureDefinition",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "StructureMap",
            "value": "StructureMap",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Subscription",
            "value": "Subscription",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Substance",
            "value": "Substance",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "SubstanceNucleicAcid",
            "value": "SubstanceNucleicAcid",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "SubstancePolymer",
            "value": "SubstancePolymer",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "SubstanceProtein",
            "value": "SubstanceProtein",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "SubstanceReferenceInformation",
            "value": "SubstanceReferenceInformation",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "SubstanceSourceMaterial",
            "value": "SubstanceSourceMaterial",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "SubstanceSpecification",
            "value": "SubstanceSpecification",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "SupplyDelivery",
            "value": "SupplyDelivery",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "SupplyRequest",
            "value": "SupplyRequest",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "Task",
            "value": "Task",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "TerminologyCapabilities",
            "value": "TerminologyCapabilities",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "TestReport",
            "value": "TestReport",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "TestScript",
            "value": "TestScript",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "ValueSet",
            "value": "ValueSet",
            "description": "The FHIR resource type defined in STU3 and R4."
          },
          {
            "name": "VerificationResult",
            "value": "VerificationResult",
            "description": "The FHIR resource type defined in R4."
          },
          {
            "name": "VisionPrescription",
            "value": "VisionPrescription",
            "description": "The FHIR resource type defined in STU3 and R4."
          }
        ]
      }
    },
    "HealthCareApis.HealthcareFhirResourceUpdatedEventData": {
      "type": "object",
      "properties": {
        "resourceFhirAccount": {
          "type": "string",
          "description": "Domain name of FHIR account for this resource."
        },
        "resourceFhirId": {
          "type": "string",
          "description": "Id of HL7 FHIR resource."
        },
        "resourceVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "VersionId of HL7 FHIR resource. It changes when the resource is created, updated, or deleted(soft-deletion)."
        },
        "resourceType": {
          "$ref": "#/definitions/HealthCareApis.HealthcareFhirResourceType",
          "description": "Type of HL7 FHIR resource."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.HealthcareApis.FhirResourceUpdated event."
    },
    "IoTHub.DeviceConnectionStateEventInfo": {
      "type": "object",
      "properties": {
        "sequenceNumber": {
          "type": "string",
          "description": "Sequence number is string representation of a hexadecimal number. string compare can be used to identify the larger number because both in ASCII and HEX numbers come after alphabets. If you are converting the string to hex, then the number is a 256 bit number."
        }
      },
      "description": "Information about the device connection state event."
    },
    "IoTHub.DeviceConnectionStateEventProperties": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The unique identifier of the device. This case-sensitive string can be up to 128 characters long, and supports ASCII 7-bit alphanumeric characters plus the following special characters: - : . + % _ &#35; * ? ! ( ) , = @ ; $ '."
        },
        "moduleId": {
          "type": "string",
          "description": "The unique identifier of the module. This case-sensitive string can be up to 128 characters long, and supports ASCII 7-bit alphanumeric characters plus the following special characters: - : . + % _ &#35; * ? ! ( ) , = @ ; $ '."
        },
        "hubName": {
          "type": "string",
          "description": "Name of the IoT Hub where the device was created or deleted."
        },
        "deviceConnectionStateEventInfo": {
          "$ref": "#/definitions/IoTHub.DeviceConnectionStateEventInfo",
          "description": "Information about the device connection state event."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a device connection state event (DeviceConnected, DeviceDisconnected)."
    },
    "IoTHub.DeviceLifeCycleEventProperties": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The unique identifier of the device. This case-sensitive string can be up to 128 characters long, and supports ASCII 7-bit alphanumeric characters plus the following special characters: - : . + % _ &#35; * ? ! ( ) , = @ ; $ '."
        },
        "hubName": {
          "type": "string",
          "description": "Name of the IoT Hub where the device was created or deleted."
        },
        "twin": {
          "$ref": "#/definitions/IoTHub.DeviceTwinInfo",
          "description": "Information about the device twin, which is the cloud representation of application device metadata."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a device life cycle event (DeviceCreated, DeviceDeleted)."
    },
    "IoTHub.DeviceTelemetryEventProperties": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "additionalProperties": true,
          "description": "The content of the message from the device.",
          "x-typespec-name": "Record<unknown>"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application properties are user-defined strings that can be added to the message. These fields are optional.",
          "x-typespec-name": "Record<string>"
        },
        "systemProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "System properties help identify contents and source of the messages.",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a device telemetry event (DeviceTelemetry)."
    },
    "IoTHub.DeviceTwinInfo": {
      "type": "object",
      "properties": {
        "authenticationType": {
          "type": "string",
          "description": "Authentication type used for this device: either SAS, SelfSigned, or CertificateAuthority."
        },
        "cloudToDeviceMessageCount": {
          "description": "Count of cloud to device messages sent to this device."
        },
        "connectionState": {
          "type": "string",
          "description": "Whether the device is connected or disconnected."
        },
        "deviceId": {
          "type": "string",
          "description": "The unique identifier of the device twin."
        },
        "etag": {
          "type": "string",
          "description": "A piece of information that describes the content of the device twin. Each etag is guaranteed to be unique per device twin."
        },
        "lastActivityTime": {
          "type": "string",
          "description": "The ISO8601 timestamp of the last activity."
        },
        "properties": {
          "type": "object",
          "properties": {
            "desired": {
              "$ref": "#/definitions/IoTHub.DeviceTwinProperties",
              "description": "A portion of the properties that can be written only by the application back-end, and read by the device."
            },
            "reported": {
              "$ref": "#/definitions/IoTHub.DeviceTwinProperties",
              "description": "A portion of the properties that can be written only by the device, and read by the application back-end."
            }
          },
          "description": "Properties JSON element.",
          "x-typespec-name": "IoTHub.(anonymous model)"
        },
        "status": {
          "type": "string",
          "description": "Whether the device twin is enabled or disabled."
        },
        "statusUpdateTime": {
          "type": "string",
          "description": "The ISO8601 timestamp of the last device twin status update."
        },
        "version": {
          "description": "An integer that is incremented by one each time the device twin is updated."
        },
        "x509Thumbprint": {
          "type": "object",
          "properties": {
            "primaryThumbprint": {
              "type": "string",
              "description": "Primary thumbprint for the x509 certificate."
            },
            "secondaryThumbprint": {
              "type": "string",
              "description": "Secondary thumbprint for the x509 certificate."
            }
          },
          "description": "The thumbprint is a unique value for the x509 certificate, commonly used to find a particular certificate in a certificate store. The thumbprint is dynamically generated using the SHA1 algorithm, and does not physically exist in the certificate.",
          "x-typespec-name": "(anonymous model)"
        }
      },
      "description": "Information about the device twin, which is the cloud representation of application device metadata."
    },
    "IoTHub.DeviceTwinMetadata": {
      "type": "object",
      "properties": {
        "lastUpdated": {
          "type": "string",
          "description": "The ISO8601 timestamp of the last time the properties were updated."
        }
      },
      "description": "Metadata information for the properties JSON document."
    },
    "IoTHub.DeviceTwinProperties": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/IoTHub.DeviceTwinMetadata",
          "description": "Metadata information for the properties JSON document."
        },
        "version": {
          "type": "number",
          "format": "double",
          "description": "Version of device twin properties."
        }
      },
      "description": "A portion of the properties that can be written only by the application back-end, and read by the device."
    },
    "IoTHub.IotHubDeviceConnectedEventData": {
      "type": "object",
      "properties": {},
      "description": "Event data for Microsoft.Devices.DeviceConnected event.",
      "allOf": [
        {
          "$ref": "#/definitions/IoTHub.DeviceConnectionStateEventProperties"
        }
      ]
    },
    "IoTHub.IotHubDeviceCreatedEventData": {
      "type": "object",
      "properties": {},
      "description": "Event data for Microsoft.Devices.DeviceCreated event.",
      "allOf": [
        {
          "$ref": "#/definitions/IoTHub.DeviceLifeCycleEventProperties"
        }
      ]
    },
    "IoTHub.IotHubDeviceDeletedEventData": {
      "type": "object",
      "properties": {},
      "description": "Event data for Microsoft.Devices.DeviceDeleted event.",
      "allOf": [
        {
          "$ref": "#/definitions/IoTHub.DeviceLifeCycleEventProperties"
        }
      ]
    },
    "IoTHub.IotHubDeviceDisconnectedEventData": {
      "type": "object",
      "properties": {},
      "description": "Event data for Microsoft.Devices.DeviceDisconnected event.",
      "allOf": [
        {
          "$ref": "#/definitions/IoTHub.DeviceConnectionStateEventProperties"
        }
      ]
    },
    "IoTHub.IotHubDeviceTelemetryEventData": {
      "type": "object",
      "properties": {},
      "description": "Event data for Microsoft.Devices.DeviceTelemetry event.",
      "allOf": [
        {
          "$ref": "#/definitions/IoTHub.DeviceTelemetryEventProperties"
        }
      ]
    },
    "KeyVault.KeyVaultCertificateExpiredEventData": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The id of the object that triggered this event."
        },
        "VaultName": {
          "type": "string",
          "description": "Key vault name of the object that triggered this event."
        },
        "ObjectType": {
          "type": "string",
          "description": "The type of the object that triggered this event"
        },
        "ObjectName": {
          "type": "string",
          "description": "The name of the object that triggered this event"
        },
        "Version": {
          "type": "string",
          "description": "The version of the object that triggered this event"
        },
        "NBF": {
          "type": "number",
          "format": "double",
          "description": "Not before date of the object that triggered this event"
        },
        "EXP": {
          "type": "number",
          "format": "double",
          "description": "The expiration date of the object that triggered this event"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.KeyVault.CertificateExpired event."
    },
    "KeyVault.KeyVaultCertificateNearExpiryEventData": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The id of the object that triggered this event."
        },
        "VaultName": {
          "type": "string",
          "description": "Key vault name of the object that triggered this event."
        },
        "ObjectType": {
          "type": "string",
          "description": "The type of the object that triggered this event"
        },
        "ObjectName": {
          "type": "string",
          "description": "The name of the object that triggered this event"
        },
        "Version": {
          "type": "string",
          "description": "The version of the object that triggered this event"
        },
        "NBF": {
          "type": "number",
          "format": "double",
          "description": "Not before date of the object that triggered this event"
        },
        "EXP": {
          "type": "number",
          "format": "double",
          "description": "The expiration date of the object that triggered this event"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.KeyVault.CertificateNearExpiry event."
    },
    "KeyVault.KeyVaultCertificateNewVersionCreatedEventData": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The id of the object that triggered this event."
        },
        "VaultName": {
          "type": "string",
          "description": "Key vault name of the object that triggered this event."
        },
        "ObjectType": {
          "type": "string",
          "description": "The type of the object that triggered this event"
        },
        "ObjectName": {
          "type": "string",
          "description": "The name of the object that triggered this event"
        },
        "Version": {
          "type": "string",
          "description": "The version of the object that triggered this event"
        },
        "NBF": {
          "type": "number",
          "format": "double",
          "description": "Not before date of the object that triggered this event"
        },
        "EXP": {
          "type": "number",
          "format": "double",
          "description": "The expiration date of the object that triggered this event"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.KeyVault.CertificateNewVersionCreated event."
    },
    "KeyVault.KeyVaultKeyExpiredEventData": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The id of the object that triggered this event."
        },
        "VaultName": {
          "type": "string",
          "description": "Key vault name of the object that triggered this event."
        },
        "ObjectType": {
          "type": "string",
          "description": "The type of the object that triggered this event"
        },
        "ObjectName": {
          "type": "string",
          "description": "The name of the object that triggered this event"
        },
        "Version": {
          "type": "string",
          "description": "The version of the object that triggered this event"
        },
        "NBF": {
          "type": "number",
          "format": "double",
          "description": "Not before date of the object that triggered this event"
        },
        "EXP": {
          "type": "number",
          "format": "double",
          "description": "The expiration date of the object that triggered this event"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.KeyVault.KeyExpired event."
    },
    "KeyVault.KeyVaultKeyNearExpiryEventData": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The id of the object that triggered this event."
        },
        "VaultName": {
          "type": "string",
          "description": "Key vault name of the object that triggered this event."
        },
        "ObjectType": {
          "type": "string",
          "description": "The type of the object that triggered this event"
        },
        "ObjectName": {
          "type": "string",
          "description": "The name of the object that triggered this event"
        },
        "Version": {
          "type": "string",
          "description": "The version of the object that triggered this event"
        },
        "NBF": {
          "type": "number",
          "format": "double",
          "description": "Not before date of the object that triggered this event"
        },
        "EXP": {
          "type": "number",
          "format": "double",
          "description": "The expiration date of the object that triggered this event"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.KeyVault.KeyNearExpiry event."
    },
    "KeyVault.KeyVaultKeyNewVersionCreatedEventData": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The id of the object that triggered this event."
        },
        "VaultName": {
          "type": "string",
          "description": "Key vault name of the object that triggered this event."
        },
        "ObjectType": {
          "type": "string",
          "description": "The type of the object that triggered this event"
        },
        "ObjectName": {
          "type": "string",
          "description": "The name of the object that triggered this event"
        },
        "Version": {
          "type": "string",
          "description": "The version of the object that triggered this event"
        },
        "NBF": {
          "type": "number",
          "format": "double",
          "description": "Not before date of the object that triggered this event"
        },
        "EXP": {
          "type": "number",
          "format": "double",
          "description": "The expiration date of the object that triggered this event"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.KeyVault.KeyNewVersionCreated event."
    },
    "KeyVault.KeyVaultSecretExpiredEventData": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The id of the object that triggered this event."
        },
        "VaultName": {
          "type": "string",
          "description": "Key vault name of the object that triggered this event."
        },
        "ObjectType": {
          "type": "string",
          "description": "The type of the object that triggered this event"
        },
        "ObjectName": {
          "type": "string",
          "description": "The name of the object that triggered this event"
        },
        "Version": {
          "type": "string",
          "description": "The version of the object that triggered this event"
        },
        "NBF": {
          "type": "number",
          "format": "double",
          "description": "Not before date of the object that triggered this event"
        },
        "EXP": {
          "type": "number",
          "format": "double",
          "description": "The expiration date of the object that triggered this event"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.KeyVault.SecretExpired event."
    },
    "KeyVault.KeyVaultSecretNearExpiryEventData": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The id of the object that triggered this event."
        },
        "VaultName": {
          "type": "string",
          "description": "Key vault name of the object that triggered this event."
        },
        "ObjectType": {
          "type": "string",
          "description": "The type of the object that triggered this event"
        },
        "ObjectName": {
          "type": "string",
          "description": "The name of the object that triggered this event"
        },
        "Version": {
          "type": "string",
          "description": "The version of the object that triggered this event"
        },
        "NBF": {
          "type": "number",
          "format": "double",
          "description": "Not before date of the object that triggered this event"
        },
        "EXP": {
          "type": "number",
          "format": "double",
          "description": "The expiration date of the object that triggered this event"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.KeyVault.SecretNearExpiry event."
    },
    "KeyVault.KeyVaultSecretNewVersionCreatedEventData": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The id of the object that triggered this event."
        },
        "VaultName": {
          "type": "string",
          "description": "Key vault name of the object that triggered this event."
        },
        "ObjectType": {
          "type": "string",
          "description": "The type of the object that triggered this event"
        },
        "ObjectName": {
          "type": "string",
          "description": "The name of the object that triggered this event"
        },
        "Version": {
          "type": "string",
          "description": "The version of the object that triggered this event"
        },
        "NBF": {
          "type": "number",
          "format": "double",
          "description": "Not before date of the object that triggered this event"
        },
        "EXP": {
          "type": "number",
          "format": "double",
          "description": "The expiration date of the object that triggered this event"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.KeyVault.SecretNewVersionCreated event."
    },
    "KeyVault.KeyVaultVaultAccessPolicyChangedEventData": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "description": "The id of the object that triggered this event."
        },
        "VaultName": {
          "type": "string",
          "description": "Key vault name of the object that triggered this event."
        },
        "ObjectType": {
          "type": "string",
          "description": "The type of the object that triggered this event"
        },
        "ObjectName": {
          "type": "string",
          "description": "The name of the object that triggered this event"
        },
        "Version": {
          "type": "string",
          "description": "The version of the object that triggered this event"
        },
        "NBF": {
          "type": "number",
          "format": "double",
          "description": "Not before date of the object that triggered this event"
        },
        "EXP": {
          "type": "number",
          "format": "double",
          "description": "The expiration date of the object that triggered this event"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.KeyVault.VaultAccessPolicyChanged event."
    },
    "MachineLearningServices.MachineLearningServicesDatasetDriftDetectedEventData": {
      "type": "object",
      "properties": {
        "dataDriftId": {
          "type": "string",
          "description": "The ID of the data drift monitor that triggered the event."
        },
        "dataDriftName": {
          "type": "string",
          "description": "The name of the data drift monitor that triggered the event."
        },
        "runId": {
          "type": "string",
          "description": "The ID of the Run that detected data drift."
        },
        "baseDatasetId": {
          "type": "string",
          "description": "The ID of the base Dataset used to detect drift."
        },
        "targetDatasetId": {
          "type": "string",
          "description": "The ID of the target Dataset used to detect drift."
        },
        "driftCoefficient": {
          "type": "number",
          "format": "double",
          "description": "The coefficient result that triggered the event."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the target dataset time series that resulted in drift detection."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the target dataset time series that resulted in drift detection."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.MachineLearningServices.DatasetDriftDetected event."
    },
    "MachineLearningServices.MachineLearningServicesModelDeployedEventData": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The name of the deployed service."
        },
        "serviceComputeType": {
          "type": "string",
          "description": "The compute type (e.g. ACI, AKS) of the deployed service."
        },
        "modelIds": {
          "type": "string",
          "description": "A common separated list of model IDs. The IDs of the models deployed in the service."
        },
        "serviceTags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags of the deployed service.",
          "x-typespec-name": "Record<string>"
        },
        "serviceProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the deployed service.",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.MachineLearningServices.ModelDeployed event."
    },
    "MachineLearningServices.MachineLearningServicesModelRegisteredEventData": {
      "type": "object",
      "properties": {
        "modelName": {
          "type": "string",
          "description": "The name of the model that was registered."
        },
        "modelVersion": {
          "type": "string",
          "description": "The version of the model that was registered."
        },
        "modelTags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags of the model that was registered.",
          "x-typespec-name": "Record<string>"
        },
        "modelProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the model that was registered.",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.MachineLearningServices.ModelRegistered event."
    },
    "MachineLearningServices.MachineLearningServicesRunCompletedEventData": {
      "type": "object",
      "properties": {
        "experimentId": {
          "type": "string",
          "description": "The ID of the experiment that the run belongs to."
        },
        "experimentName": {
          "type": "string",
          "description": "The name of the experiment that the run belongs to."
        },
        "runId": {
          "type": "string",
          "description": "The ID of the Run that was completed."
        },
        "runType": {
          "type": "string",
          "description": "The Run Type of the completed Run."
        },
        "runTags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags of the completed Run.",
          "x-typespec-name": "Record<string>"
        },
        "runProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the completed Run.",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.MachineLearningServices.RunCompleted event."
    },
    "MachineLearningServices.MachineLearningServicesRunStatusChangedEventData": {
      "type": "object",
      "properties": {
        "experimentId": {
          "type": "string",
          "description": "The ID of the experiment that the Machine Learning Run belongs to."
        },
        "experimentName": {
          "type": "string",
          "description": "The name of the experiment that the Machine Learning Run belongs to."
        },
        "runId": {
          "type": "string",
          "description": "The ID of the Machine Learning Run."
        },
        "runType": {
          "type": "string",
          "description": "The Run Type of the Machine Learning Run."
        },
        "runTags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags of the Machine Learning Run.",
          "x-typespec-name": "Record<string>"
        },
        "runProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the Machine Learning Run.",
          "x-typespec-name": "Record<string>"
        },
        "runStatus": {
          "type": "string",
          "description": "The status of the Machine Learning Run."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.MachineLearningServices.RunStatusChanged event."
    },
    "Maps.MapsGeofenceEnteredEventData": {
      "type": "object",
      "properties": {},
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Maps.GeofenceEntered event.",
      "allOf": [
        {
          "$ref": "#/definitions/Maps.MapsGeofenceEventProperties"
        }
      ]
    },
    "Maps.MapsGeofenceEventProperties": {
      "type": "object",
      "properties": {
        "expiredGeofenceGeometryId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Lists of the geometry ID of the geofence which is expired relative to the user time in the request.",
          "x-typespec-name": "string[]"
        },
        "geometries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Maps.MapsGeofenceGeometry"
          },
          "x-ms-identifiers": [],
          "description": "Lists the fence geometries that either fully contain the coordinate position or have an overlap with the searchBuffer around the fence.",
          "x-typespec-name": "Maps.MapsGeofenceGeometry[]"
        },
        "invalidPeriodGeofenceGeometryId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Lists of the geometry ID of the geofence which is in invalid period relative to the user time in the request.",
          "x-typespec-name": "string[]"
        },
        "isEventPublished": {
          "type": "boolean",
          "description": "True if at least one event is published to the Azure Maps event subscriber, false if no event is published to the Azure Maps event subscriber."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Geofence event (GeofenceEntered, GeofenceExited, GeofenceResult)."
    },
    "Maps.MapsGeofenceExitedEventData": {
      "type": "object",
      "properties": {},
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Maps.GeofenceExited event.",
      "allOf": [
        {
          "$ref": "#/definitions/Maps.MapsGeofenceEventProperties"
        }
      ]
    },
    "Maps.MapsGeofenceGeometry": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ID of the device."
        },
        "distance": {
          "type": "number",
          "format": "double",
          "description": "Distance from the coordinate to the closest border of the geofence. Positive means the coordinate is outside of the geofence. If the coordinate is outside of the geofence, but more than the value of searchBuffer away from the closest geofence border, then the value is 999. Negative means the coordinate is inside of the geofence. If the coordinate is inside the polygon, but more than the value of searchBuffer away from the closest geofencing border,then the value is -999. A value of 999 means that there is great confidence the coordinate is well outside the geofence. A value of -999 means that there is great confidence the coordinate is well within the geofence."
        },
        "geometryId": {
          "type": "string",
          "description": "The unique ID for the geofence geometry."
        },
        "nearestLat": {
          "type": "number",
          "format": "double",
          "description": "Latitude of the nearest point of the geometry."
        },
        "nearestLon": {
          "type": "number",
          "format": "double",
          "description": "Longitude of the nearest point of the geometry."
        },
        "udId": {
          "type": "string",
          "description": "The unique id returned from user upload service when uploading a geofence. Will not be included in geofencing post API."
        }
      },
      "description": "The geofence geometry."
    },
    "Maps.MapsGeofenceResultEventData": {
      "type": "object",
      "properties": {},
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Maps.GeofenceResult event.",
      "allOf": [
        {
          "$ref": "#/definitions/Maps.MapsGeofenceEventProperties"
        }
      ]
    },
    "MediaServices.MediaJobCanceledEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobCanceled": {
          "type": "string",
          "description": "Discriminator property for MediaJobCanceledEventData."
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaServices.MediaJobOutput"
          },
          "x-ms-identifiers": [],
          "description": "Gets the Job outputs.",
          "x-typespec-name": "MediaServices.MediaJobOutput[]"
        }
      },
      "description": "Job canceled event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobCanceled event.",
      "discriminator": "#Microsoft.Media.JobCanceled",
      "required": [
        "#Microsoft.Media.JobCanceled"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaServices.MediaJobStateChangeEventData"
        }
      ]
    },
    "MediaServices.MediaJobCancelingEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobCanceling": {
          "type": "string",
          "description": "Discriminator property for MediaJobCancelingEventData."
        }
      },
      "description": "Job canceling event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobCanceling event.",
      "discriminator": "#Microsoft.Media.JobCanceling",
      "required": [
        "#Microsoft.Media.JobCanceling"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaServices.MediaJobStateChangeEventData"
        }
      ]
    },
    "MediaServices.MediaJobError": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/MediaServices.MediaJobErrorCode",
          "description": "Error code describing the error.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A human-readable language-dependent representation of the error.",
          "readOnly": true
        },
        "category": {
          "$ref": "#/definitions/MediaServices.MediaJobErrorCategory",
          "description": "Helps with categorization of errors.",
          "readOnly": true
        },
        "retry": {
          "$ref": "#/definitions/MediaServices.MediaJobRetry",
          "description": "Indicates that it may be possible to retry the Job. If retry is unsuccessful, please contact Azure support via Azure Portal.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaServices.MediaJobErrorDetail"
          },
          "x-ms-identifiers": [],
          "description": "An array of details about specific errors that led to this reported error.",
          "x-typespec-name": "MediaServices.MediaJobErrorDetail[]",
          "readOnly": true
        }
      },
      "description": "Details of JobOutput errors."
    },
    "MediaServices.MediaJobErrorCategory": {
      "type": "string",
      "description": "Error categories for Media Job Errors.",
      "enum": [
        "Service",
        "Download",
        "Upload",
        "Configuration",
        "Content",
        "Account"
      ],
      "x-ms-enum": {
        "name": "MediaJobErrorCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "Service",
            "value": "Service",
            "description": "The error is service related."
          },
          {
            "name": "Download",
            "value": "Download",
            "description": "The error is download related."
          },
          {
            "name": "Upload",
            "value": "Upload",
            "description": "The error is upload related."
          },
          {
            "name": "Configuration",
            "value": "Configuration",
            "description": "The error is configuration related."
          },
          {
            "name": "Content",
            "value": "Content",
            "description": "The error is related to data in the input files."
          },
          {
            "name": "Account",
            "value": "Account",
            "description": "The error is related to account information."
          }
        ]
      }
    },
    "MediaServices.MediaJobErrorCode": {
      "type": "string",
      "description": "Media Job Error Codes.",
      "enum": [
        "ServiceError",
        "ServiceTransientError",
        "DownloadNotAccessible",
        "DownloadTransientError",
        "UploadNotAccessible",
        "UploadTransientError",
        "ConfigurationUnsupported",
        "ContentMalformed",
        "ContentUnsupported",
        "IdentityUnsupported"
      ],
      "x-ms-enum": {
        "name": "MediaJobErrorCode",
        "modelAsString": true,
        "values": [
          {
            "name": "ServiceError",
            "value": "ServiceError",
            "description": "Fatal service error, please contact support."
          },
          {
            "name": "ServiceTransientError",
            "value": "ServiceTransientError",
            "description": "Transient error, please retry, if retry is unsuccessful, please contact support."
          },
          {
            "name": "DownloadNotAccessible",
            "value": "DownloadNotAccessible",
            "description": "While trying to download the input files, the files were not accessible, please check the availability of the source."
          },
          {
            "name": "DownloadTransientError",
            "value": "DownloadTransientError",
            "description": "While trying to download the input files, there was an issue during transfer (storage service, network errors), see details and check your source."
          },
          {
            "name": "UploadNotAccessible",
            "value": "UploadNotAccessible",
            "description": "While trying to upload the output files, the destination was not reachable, please check the availability of the destination."
          },
          {
            "name": "UploadTransientError",
            "value": "UploadTransientError",
            "description": "While trying to upload the output files, there was an issue during transfer (storage service, network errors), see details and check your destination."
          },
          {
            "name": "ConfigurationUnsupported",
            "value": "ConfigurationUnsupported",
            "description": "There was a problem with the combination of input files and the configuration settings applied, fix the configuration settings and retry with the same input, or change input to match the configuration."
          },
          {
            "name": "ContentMalformed",
            "value": "ContentMalformed",
            "description": "There was a problem with the input content (for example: zero byte files, or corrupt/non-decodable files), check the input files."
          },
          {
            "name": "ContentUnsupported",
            "value": "ContentUnsupported",
            "description": "There was a problem with the format of the input (not valid media file, or an unsupported file/codec), check the validity of the input files."
          },
          {
            "name": "IdentityUnsupported",
            "value": "IdentityUnsupported",
            "description": "There is an error verifying to the account identity. Check and fix the identity configurations and retry. If unsuccessful, please contact support."
          }
        ]
      }
    },
    "MediaServices.MediaJobErrorDetail": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code describing the error detail.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error.",
          "readOnly": true
        }
      },
      "description": "Details of JobOutput errors."
    },
    "MediaServices.MediaJobErroredEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobErrored": {
          "type": "string",
          "description": "Discriminator property for MediaJobErroredEventData."
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaServices.MediaJobOutput"
          },
          "x-ms-identifiers": [],
          "description": "Gets the Job outputs.",
          "x-typespec-name": "MediaServices.MediaJobOutput[]"
        }
      },
      "description": "Job error state event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobErrored event.",
      "discriminator": "#Microsoft.Media.JobErrored",
      "required": [
        "#Microsoft.Media.JobErrored"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaServices.MediaJobStateChangeEventData"
        }
      ]
    },
    "MediaServices.MediaJobFinishedEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobFinished": {
          "type": "string",
          "description": "Discriminator property for MediaJobFinishedEventData."
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaServices.MediaJobOutput"
          },
          "x-ms-identifiers": [],
          "description": "Gets the Job outputs.",
          "x-typespec-name": "MediaServices.MediaJobOutput[]"
        }
      },
      "description": "Job finished event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobFinished event.",
      "discriminator": "#Microsoft.Media.JobFinished",
      "required": [
        "#Microsoft.Media.JobFinished"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaServices.MediaJobStateChangeEventData"
        }
      ]
    },
    "MediaServices.MediaJobOutput": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types.",
          "x-ms-client-name": "OdataType"
        },
        "error": {
          "$ref": "#/definitions/MediaServices.MediaJobError",
          "description": "Gets the Job output error."
        },
        "label": {
          "type": "string",
          "description": "Gets the Job output label."
        },
        "progress": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the Job output progress."
        },
        "state": {
          "$ref": "#/definitions/MediaServices.MediaJobState",
          "description": "Gets the Job output state."
        }
      },
      "description": "The event data for a Job output.",
      "discriminator": "@odata.type",
      "required": [
        "@odata.type",
        "progress",
        "state"
      ]
    },
    "MediaServices.MediaJobOutputAsset": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputAsset": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputAsset."
        },
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types.",
          "x-ms-client-name": "OdataType"
        },
        "error": {
          "$ref": "#/definitions/MediaServices.MediaJobError",
          "description": "Gets the Job output error."
        },
        "label": {
          "type": "string",
          "description": "Gets the Job output label."
        },
        "progress": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the Job output progress."
        },
        "state": {
          "$ref": "#/definitions/MediaServices.MediaJobState",
          "description": "Gets the Job output state."
        },
        "assetName": {
          "type": "string",
          "description": "Gets the Job output asset name."
        }
      },
      "description": "The event data for a Job output asset.",
      "discriminator": "#Microsoft.Media.JobOutputAsset",
      "required": [
        "#Microsoft.Media.JobOutputAsset",
        "progress",
        "state"
      ]
    },
    "MediaServices.MediaJobOutputCanceledEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputCanceled": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputCanceledEventData."
        }
      },
      "description": "Job output canceled event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobOutputCanceled event.",
      "discriminator": "#Microsoft.Media.JobOutputCanceled",
      "required": [
        "#Microsoft.Media.JobOutputCanceled"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaServices.MediaJobOutputStateChangeEventData"
        }
      ]
    },
    "MediaServices.MediaJobOutputCancelingEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputCanceling": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputCancelingEventData."
        }
      },
      "description": "Job output canceling event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobOutputCanceling event.",
      "discriminator": "#Microsoft.Media.JobOutputCanceling",
      "required": [
        "#Microsoft.Media.JobOutputCanceling"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaServices.MediaJobOutputStateChangeEventData"
        }
      ]
    },
    "MediaServices.MediaJobOutputErroredEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputErrored": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputErroredEventData."
        }
      },
      "description": "Job output error event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobOutputErrored event.",
      "discriminator": "#Microsoft.Media.JobOutputErrored",
      "required": [
        "#Microsoft.Media.JobOutputErrored"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaServices.MediaJobOutputStateChangeEventData"
        }
      ]
    },
    "MediaServices.MediaJobOutputFinishedEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputFinished": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputFinishedEventData."
        }
      },
      "description": "Job output finished event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobOutputFinished event.",
      "discriminator": "#Microsoft.Media.JobOutputFinished",
      "required": [
        "#Microsoft.Media.JobOutputFinished"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaServices.MediaJobOutputStateChangeEventData"
        }
      ]
    },
    "MediaServices.MediaJobOutputProcessingEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputProcessing": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputProcessingEventData."
        }
      },
      "description": "Job output processing event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobOutputProcessing event.",
      "discriminator": "#Microsoft.Media.JobOutputProcessing",
      "required": [
        "#Microsoft.Media.JobOutputProcessing"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaServices.MediaJobOutputStateChangeEventData"
        }
      ]
    },
    "MediaServices.MediaJobOutputProgressEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputProgress": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputProgressEventData."
        },
        "label": {
          "type": "string",
          "description": "Gets the Job output label."
        },
        "progress": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the Job output progress."
        },
        "jobCorrelationData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets the Job correlation data.",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Job Output Progress Event Data. Schema of the Data property of an EventGridEvent for a Microsoft.Media.JobOutputProgress event.",
      "discriminator": "#Microsoft.Media.JobOutputProgress",
      "required": [
        "#Microsoft.Media.JobOutputProgress"
      ]
    },
    "MediaServices.MediaJobOutputScheduledEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobOutputCanceled": {
          "type": "string",
          "description": "Discriminator property for MediaJobOutputScheduledEventData."
        }
      },
      "description": "Job output scheduled event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobOutputScheduled event.",
      "discriminator": "#Microsoft.Media.JobOutputCanceled",
      "required": [
        "#Microsoft.Media.JobOutputCanceled"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaServices.MediaJobOutputStateChangeEventData"
        }
      ]
    },
    "MediaServices.MediaJobOutputStateChangeEventData": {
      "type": "object",
      "properties": {
        "previousState": {
          "$ref": "#/definitions/MediaServices.MediaJobState",
          "description": "The previous state of the Job."
        },
        "output": {
          "$ref": "#/definitions/MediaServices.MediaJobOutput",
          "description": "Gets the output."
        },
        "jobCorrelationData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets the Job correlation data.",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Media.JobOutputStateChange event."
    },
    "MediaServices.MediaJobProcessingEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobProcessing": {
          "type": "string",
          "description": "Discriminator property for MediaJobProcessingEventData."
        }
      },
      "description": "Job processing event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobProcessing event.",
      "discriminator": "#Microsoft.Media.JobProcessing",
      "required": [
        "#Microsoft.Media.JobProcessing"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaServices.MediaJobStateChangeEventData"
        }
      ]
    },
    "MediaServices.MediaJobRetry": {
      "type": "string",
      "description": "Media Job Retry Options.",
      "enum": [
        "DoNotRetry",
        "MayRetry"
      ],
      "x-ms-enum": {
        "name": "MediaJobRetry",
        "modelAsString": true,
        "values": [
          {
            "name": "DoNotRetry",
            "value": "DoNotRetry",
            "description": "Issue needs to be investigated and then the job resubmitted with corrections or retried once the underlying issue has been corrected."
          },
          {
            "name": "MayRetry",
            "value": "MayRetry",
            "description": "Issue may be resolved after waiting for a period of time and resubmitting the same Job."
          }
        ]
      }
    },
    "MediaServices.MediaJobScheduledEventData": {
      "type": "object",
      "properties": {
        "#Microsoft.Media.JobScheduled": {
          "type": "string",
          "description": "Discriminator property for MediaJobScheduledEventData."
        }
      },
      "description": "Job scheduled event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.JobScheduled event.",
      "discriminator": "#Microsoft.Media.JobScheduled",
      "required": [
        "#Microsoft.Media.JobScheduled"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MediaServices.MediaJobStateChangeEventData"
        }
      ]
    },
    "MediaServices.MediaJobState": {
      "type": "string",
      "description": "State of a Media Job.",
      "enum": [
        "Canceled",
        "Canceling",
        "Error",
        "Finished",
        "Processing",
        "Queued",
        "Scheduled"
      ],
      "x-ms-enum": {
        "name": "MediaJobState",
        "modelAsString": true,
        "values": [
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The job was canceled. This is a final state for the job."
          },
          {
            "name": "Canceling",
            "value": "Canceling",
            "description": "The job is in the process of being canceled. This is a transient state for the job."
          },
          {
            "name": "Error",
            "value": "Error",
            "description": "The job has encountered an error. This is a final state for the job."
          },
          {
            "name": "Finished",
            "value": "Finished",
            "description": "The job is finished. This is a final state for the job."
          },
          {
            "name": "Processing",
            "value": "Processing",
            "description": "The job is processing. This is a transient state for the job."
          },
          {
            "name": "Queued",
            "value": "Queued",
            "description": "The job is in a queued state, waiting for resources to become available. This is a transient state."
          },
          {
            "name": "Scheduled",
            "value": "Scheduled",
            "description": "The job is being scheduled to run on an available resource. This is a transient state, between queued and processing states."
          }
        ]
      }
    },
    "MediaServices.MediaJobStateChangeEventData": {
      "type": "object",
      "properties": {
        "previousState": {
          "$ref": "#/definitions/MediaServices.MediaJobState",
          "description": "The previous state of the Job."
        },
        "state": {
          "$ref": "#/definitions/MediaServices.MediaJobState",
          "description": "The new state of the Job."
        },
        "correlationData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets the Job correlation data.",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Media.JobStateChange event."
    },
    "MediaServices.MediaLiveEventChannelArchiveHeartbeatEventData": {
      "type": "object",
      "properties": {
        "channelLatencyMs": {
          "type": "string",
          "description": "Gets the channel latency in ms.",
          "readOnly": true
        },
        "latencyResultCode": {
          "type": "string",
          "description": "Gets the latency result code.",
          "readOnly": true
        }
      },
      "description": "Channel Archive heartbeat event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventChannelArchiveHeartbeat event.",
      "required": [
        "channelLatencyMs",
        "latencyResultCode"
      ]
    },
    "MediaServices.MediaLiveEventConnectionRejectedEventData": {
      "type": "object",
      "properties": {
        "ingestUrl": {
          "type": "string",
          "description": "Gets the ingest URL provided by the live event.",
          "readOnly": true
        },
        "streamId": {
          "type": "string",
          "description": "Gets the stream Id.",
          "readOnly": true
        },
        "encoderIp": {
          "type": "string",
          "description": "Gets the remote IP.",
          "readOnly": true
        },
        "encoderPort": {
          "type": "string",
          "description": "Gets the remote port.",
          "readOnly": true
        },
        "resultCode": {
          "type": "string",
          "description": "Gets the result code."
        }
      },
      "description": "Encoder connection rejected event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventConnectionRejected event."
    },
    "MediaServices.MediaLiveEventEncoderConnectedEventData": {
      "type": "object",
      "properties": {
        "ingestUrl": {
          "type": "string",
          "description": "Gets the ingest URL provided by the live event.",
          "readOnly": true
        },
        "streamId": {
          "type": "string",
          "description": "Gets the stream Id.",
          "readOnly": true
        },
        "encoderIp": {
          "type": "string",
          "description": "Gets the remote IP.",
          "readOnly": true
        },
        "encoderPort": {
          "type": "string",
          "description": "Gets the remote port.",
          "readOnly": true
        }
      },
      "description": "Encoder connect event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventEncoderConnected event."
    },
    "MediaServices.MediaLiveEventEncoderDisconnectedEventData": {
      "type": "object",
      "properties": {
        "ingestUrl": {
          "type": "string",
          "description": "Gets the ingest URL provided by the live event.",
          "readOnly": true
        },
        "streamId": {
          "type": "string",
          "description": "Gets the stream Id.",
          "readOnly": true
        },
        "encoderIp": {
          "type": "string",
          "description": "Gets the remote IP.",
          "readOnly": true
        },
        "encoderPort": {
          "type": "string",
          "description": "Gets the remote port.",
          "readOnly": true
        },
        "resultCode": {
          "type": "string",
          "description": "Gets the result code."
        }
      },
      "description": "Encoder disconnected event data. Schema of the Data property of an EventGridEvent for a Microsoft.Media.LiveEventEncoderDisconnected event."
    },
    "MediaServices.MediaLiveEventIncomingDataChunkDroppedEventData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "description": "Gets the timestamp of the data chunk dropped.",
          "readOnly": true
        },
        "trackType": {
          "type": "string",
          "description": "Gets the type of the track (Audio / Video).",
          "readOnly": true
        },
        "bitrate": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the bitrate of the track.",
          "readOnly": true
        },
        "timescale": {
          "type": "string",
          "description": "Gets the timescale of the Timestamp."
        },
        "resultCode": {
          "type": "string",
          "description": "Gets the result code for fragment drop operation.",
          "readOnly": true
        },
        "trackName": {
          "type": "string",
          "description": "Gets the name of the track for which fragment is dropped.",
          "readOnly": true
        }
      },
      "description": "Ingest fragment dropped event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventIncomingDataChunkDropped event."
    },
    "MediaServices.MediaLiveEventIncomingStreamReceivedEventData": {
      "type": "object",
      "properties": {
        "ingestUrl": {
          "type": "string",
          "description": "Gets the ingest URL provided by the live event.",
          "readOnly": true
        },
        "trackType": {
          "type": "string",
          "description": "Gets the type of the track (Audio / Video).",
          "readOnly": true
        },
        "trackName": {
          "type": "string",
          "description": "Gets the track name.",
          "readOnly": true
        },
        "bitrate": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the bitrate of the track.",
          "readOnly": true
        },
        "encoderIp": {
          "type": "string",
          "description": "Gets the remote IP.",
          "readOnly": true
        },
        "encoderPort": {
          "type": "string",
          "description": "Gets the remote port.",
          "readOnly": true
        },
        "timestamp": {
          "type": "string",
          "description": "Gets the first timestamp of the data chunk received.",
          "readOnly": true
        },
        "duration": {
          "type": "string",
          "description": "Gets the duration of the first data chunk.",
          "readOnly": true
        },
        "timescale": {
          "type": "string",
          "description": "Gets the timescale in which timestamp is represented.",
          "readOnly": true
        }
      },
      "description": "Encoder connect event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventIncomingStreamReceived event."
    },
    "MediaServices.MediaLiveEventIncomingStreamsOutOfSyncEventData": {
      "type": "object",
      "properties": {
        "minLastTimestamp": {
          "type": "string",
          "description": "Gets the minimum last timestamp received.",
          "readOnly": true
        },
        "typeOfStreamWithMinLastTimestamp": {
          "type": "string",
          "description": "Gets the type of stream with minimum last timestamp.",
          "readOnly": true
        },
        "maxLastTimestamp": {
          "type": "string",
          "description": "Gets the maximum timestamp among all the tracks (audio or video).",
          "readOnly": true
        },
        "typeOfStreamWithMaxLastTimestamp": {
          "type": "string",
          "description": "Gets the type of stream with maximum last timestamp.",
          "readOnly": true
        },
        "timescaleOfMinLastTimestamp": {
          "type": "string",
          "description": "Gets the timescale in which \"MinLastTimestamp\" is represented.",
          "readOnly": true
        },
        "timescaleOfMaxLastTimestamp": {
          "type": "string",
          "description": "Gets the timescale in which \"MaxLastTimestamp\" is represented.",
          "readOnly": true
        }
      },
      "description": "Incoming streams out of sync event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventIncomingStreamsOutOfSync event."
    },
    "MediaServices.MediaLiveEventIncomingVideoStreamsOutOfSyncEventData": {
      "type": "object",
      "properties": {
        "firstTimestamp": {
          "type": "string",
          "description": "Gets the first timestamp received for one of the quality levels.",
          "readOnly": true
        },
        "firstDuration": {
          "type": "string",
          "description": "Gets the duration of the data chunk with first timestamp.",
          "readOnly": true
        },
        "secondTimestamp": {
          "type": "string",
          "description": "Gets the timestamp received for some other quality levels.",
          "readOnly": true
        },
        "secondDuration": {
          "type": "string",
          "description": "Gets the duration of the data chunk with second timestamp.",
          "readOnly": true
        },
        "timescale": {
          "type": "string",
          "description": "Gets the timescale in which both the timestamps and durations are represented.",
          "readOnly": true
        }
      },
      "description": "Incoming video stream out of sync event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventIncomingVideoStreamsOutOfSync event."
    },
    "MediaServices.MediaLiveEventIngestHeartbeatEventData": {
      "type": "object",
      "properties": {
        "trackType": {
          "type": "string",
          "description": "Gets the type of the track (Audio / Video).",
          "readOnly": true
        },
        "trackName": {
          "type": "string",
          "description": "Gets the track name.",
          "readOnly": true
        },
        "transcriptionLanguage": {
          "type": "string",
          "description": "Gets the Live Transcription language.",
          "readOnly": true
        },
        "transcriptionState": {
          "type": "string",
          "description": "Gets the Live Transcription state.",
          "readOnly": true
        },
        "bitrate": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the bitrate of the track.",
          "readOnly": true
        },
        "incomingBitrate": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the incoming bitrate.",
          "readOnly": true
        },
        "ingestDriftValue": {
          "type": "string",
          "description": "Gets the track ingest drift value.",
          "readOnly": true
        },
        "lastFragmentArrivalTime": {
          "type": "string",
          "description": "Gets the arrival UTC time of the last fragment.",
          "readOnly": true
        },
        "lastTimestamp": {
          "type": "string",
          "description": "Gets the last timestamp.",
          "readOnly": true
        },
        "timescale": {
          "type": "string",
          "description": "Gets the timescale of the last timestamp.",
          "readOnly": true
        },
        "overlapCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the fragment Overlap count.",
          "readOnly": true
        },
        "discontinuityCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the fragment Discontinuity count.",
          "readOnly": true
        },
        "nonincreasingCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets Non increasing count.",
          "readOnly": true
        },
        "unexpectedBitrate": {
          "type": "boolean",
          "description": "Gets a value indicating whether unexpected bitrate is present or not.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "Gets the state of the live event.",
          "readOnly": true
        },
        "healthy": {
          "type": "boolean",
          "description": "Gets a value indicating whether preview is healthy or not.",
          "readOnly": true
        }
      },
      "description": "Ingest heartbeat event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventIngestHeartbeat event."
    },
    "MediaServices.MediaLiveEventTrackDiscontinuityDetectedEventData": {
      "type": "object",
      "properties": {
        "trackType": {
          "type": "string",
          "description": "Gets the type of the track (Audio / Video).",
          "readOnly": true
        },
        "trackName": {
          "type": "string",
          "description": "Gets the track name.",
          "readOnly": true
        },
        "bitrate": {
          "type": "integer",
          "format": "int64",
          "description": "Gets the bitrate.",
          "readOnly": true
        },
        "previousTimestamp": {
          "type": "string",
          "description": "Gets the timestamp of the previous fragment.",
          "readOnly": true
        },
        "newTimestamp": {
          "type": "string",
          "description": "Gets the timestamp of the current fragment.",
          "readOnly": true
        },
        "timescale": {
          "type": "string",
          "description": "Gets the timescale in which both timestamps and discontinuity gap are represented.",
          "readOnly": true
        },
        "discontinuityGap": {
          "type": "string",
          "description": "Gets the discontinuity gap between PreviousTimestamp and NewTimestamp.",
          "readOnly": true
        }
      },
      "description": "Ingest track discontinuity detected event data. Schema of the data property of an EventGridEvent for a Microsoft.Media.LiveEventTrackDiscontinuityDetected event."
    },
    "MicrosoftTeamsUserIdentifierModel": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The Id of the Microsoft Teams user. If not anonymous, this is the AAD object Id of the user."
        },
        "isAnonymous": {
          "type": "boolean",
          "description": "True if the Microsoft Teams user is anonymous. By default false if missing."
        },
        "cloud": {
          "$ref": "#/definitions/CommunicationCloudEnvironmentModel",
          "description": "The cloud that the Microsoft Teams user belongs to. By default 'public' if missing."
        }
      },
      "description": "A Microsoft Teams user.",
      "required": [
        "userId"
      ]
    },
    "PhoneNumberIdentifierModel": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The phone number in E.164 format."
        }
      },
      "description": "A phone number.",
      "required": [
        "value"
      ]
    },
    "PolicyInsights.PolicyInsightsPolicyStateChangedEventData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time that the resource was scanned by Azure Policy in the Universal ISO 8601 DateTime format yyyy-MM-ddTHH:mm:ss.fffffffZ."
        },
        "policyAssignmentId": {
          "type": "string",
          "description": "The resource ID of the policy assignment."
        },
        "policyDefinitionId": {
          "type": "string",
          "description": "The resource ID of the policy definition."
        },
        "policyDefinitionReferenceId": {
          "type": "string",
          "description": "The reference ID for the policy definition inside the initiative definition, if the policy assignment is for an initiative. May be empty."
        },
        "complianceState": {
          "type": "string",
          "description": "The compliance state of the resource with respect to the policy assignment."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the resource."
        },
        "complianceReasonCode": {
          "type": "string",
          "description": "The compliance reason code. May be empty."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.PolicyInsights.PolicyStateChanged event."
    },
    "PolicyInsights.PolicyInsightsPolicyStateCreatedEventData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time that the resource was scanned by Azure Policy in the Universal ISO 8601 DateTime format yyyy-MM-ddTHH:mm:ss.fffffffZ."
        },
        "policyAssignmentId": {
          "type": "string",
          "description": "The resource ID of the policy assignment."
        },
        "policyDefinitionId": {
          "type": "string",
          "description": "The resource ID of the policy definition."
        },
        "policyDefinitionReferenceId": {
          "type": "string",
          "description": "The reference ID for the policy definition inside the initiative definition, if the policy assignment is for an initiative. May be empty."
        },
        "complianceState": {
          "type": "string",
          "description": "The compliance state of the resource with respect to the policy assignment."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the resource."
        },
        "complianceReasonCode": {
          "type": "string",
          "description": "The compliance reason code. May be empty."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.PolicyInsights.PolicyStateCreated event."
    },
    "PolicyInsights.PolicyInsightsPolicyStateDeletedEventData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time that the resource was scanned by Azure Policy in the Universal ISO 8601 DateTime format yyyy-MM-ddTHH:mm:ss.fffffffZ."
        },
        "policyAssignmentId": {
          "type": "string",
          "description": "The resource ID of the policy assignment."
        },
        "policyDefinitionId": {
          "type": "string",
          "description": "The resource ID of the policy definition."
        },
        "policyDefinitionReferenceId": {
          "type": "string",
          "description": "The reference ID for the policy definition inside the initiative definition, if the policy assignment is for an initiative. May be empty."
        },
        "complianceState": {
          "type": "string",
          "description": "The compliance state of the resource with respect to the policy assignment."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the resource."
        },
        "complianceReasonCode": {
          "type": "string",
          "description": "The compliance reason code. May be empty."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.PolicyInsights.PolicyStateDeleted event."
    },
    "RedisCache.RedisExportRDBCompletedEventData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the event occurred."
        },
        "name": {
          "type": "string",
          "description": "The name of this event."
        },
        "status": {
          "type": "string",
          "description": "The status of this event. Failed or  succeeded "
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Cache.ExportRDBCompleted event."
    },
    "RedisCache.RedisImportRDBCompletedEventData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the event occurred."
        },
        "name": {
          "type": "string",
          "description": "The name of this event."
        },
        "status": {
          "type": "string",
          "description": "The status of this event. Failed or  succeeded "
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Cache.ImportRDBCompleted event."
    },
    "RedisCache.RedisPatchingCompletedEventData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the event occurred."
        },
        "name": {
          "type": "string",
          "description": "The name of this event."
        },
        "status": {
          "type": "string",
          "description": "The status of this event. Failed or  succeeded "
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Cache.PatchingCompleted event."
    },
    "RedisCache.RedisScalingCompletedEventData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the event occurred."
        },
        "name": {
          "type": "string",
          "description": "The name of this event."
        },
        "status": {
          "type": "string",
          "description": "The status of this event. Failed or  succeeded "
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Cache.ScalingCompleted event."
    },
    "Resources.ResourceActionCancelData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the resource."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the resource."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group of the resource."
        },
        "resourceProvider": {
          "type": "string",
          "description": "The resource provider performing the operation."
        },
        "resourceUri": {
          "type": "string",
          "description": "The URI of the resource in the operation."
        },
        "operationName": {
          "type": "string",
          "description": "The operation that was performed."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "authorization": {
          "$ref": "#/definitions/Resources.ResourceAuthorization",
          "description": "The requested authorization for the operation."
        },
        "claims": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the claims.",
          "x-typespec-name": "Record<string>"
        },
        "correlationId": {
          "type": "string",
          "description": "An operation ID used for troubleshooting."
        },
        "httpRequest": {
          "$ref": "#/definitions/Resources.ResourceHttpRequest",
          "description": "The details of the operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Resources.ResourceActionCancel event. This is raised when a resource action operation is canceled."
    },
    "Resources.ResourceActionFailureData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the resource."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the resource."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group of the resource."
        },
        "resourceProvider": {
          "type": "string",
          "description": "The resource provider performing the operation."
        },
        "resourceUri": {
          "type": "string",
          "description": "The URI of the resource in the operation."
        },
        "operationName": {
          "type": "string",
          "description": "The operation that was performed."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "authorization": {
          "$ref": "#/definitions/Resources.ResourceAuthorization",
          "description": "The requested authorization for the operation."
        },
        "claims": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the claims.",
          "x-typespec-name": "Record<string>"
        },
        "correlationId": {
          "type": "string",
          "description": "An operation ID used for troubleshooting."
        },
        "httpRequest": {
          "$ref": "#/definitions/Resources.ResourceHttpRequest",
          "description": "The details of the operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Resources.ResourceActionFailure event. This is raised when a resource action operation fails."
    },
    "Resources.ResourceActionSuccessData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the resource."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the resource."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group of the resource."
        },
        "resourceProvider": {
          "type": "string",
          "description": "The resource provider performing the operation."
        },
        "resourceUri": {
          "type": "string",
          "description": "The URI of the resource in the operation."
        },
        "operationName": {
          "type": "string",
          "description": "The operation that was performed."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "authorization": {
          "$ref": "#/definitions/Resources.ResourceAuthorization",
          "description": "The requested authorization for the operation."
        },
        "claims": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the claims.",
          "x-typespec-name": "Record<string>"
        },
        "correlationId": {
          "type": "string",
          "description": "An operation ID used for troubleshooting."
        },
        "httpRequest": {
          "$ref": "#/definitions/Resources.ResourceHttpRequest",
          "description": "The details of the operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Resources.ResourceActionSuccess event. This is raised when a resource action operation succeeds."
    },
    "Resources.ResourceAuthorization": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string",
          "description": "The scope of the authorization."
        },
        "action": {
          "type": "string",
          "description": "The action being requested."
        },
        "evidence": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The evidence for the authorization.",
          "x-typespec-name": "Record<string>"
        }
      },
      "description": "The details of the authorization for the resource."
    },
    "Resources.ResourceDeleteCancelData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the resource."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the resource."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group of the resource."
        },
        "resourceProvider": {
          "type": "string",
          "description": "The resource provider performing the operation."
        },
        "resourceUri": {
          "type": "string",
          "description": "The URI of the resource in the operation."
        },
        "operationName": {
          "type": "string",
          "description": "The operation that was performed."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "authorization": {
          "$ref": "#/definitions/Resources.ResourceAuthorization",
          "description": "The requested authorization for the operation."
        },
        "claims": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the claims.",
          "x-typespec-name": "Record<string>"
        },
        "correlationId": {
          "type": "string",
          "description": "An operation ID used for troubleshooting."
        },
        "httpRequest": {
          "$ref": "#/definitions/Resources.ResourceHttpRequest",
          "description": "The details of the operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Resources.ResourceDeleteCancel event. This is raised when a resource delete operation is canceled."
    },
    "Resources.ResourceDeleteFailureData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the resource."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the resource."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group of the resource."
        },
        "resourceProvider": {
          "type": "string",
          "description": "The resource provider performing the operation."
        },
        "resourceUri": {
          "type": "string",
          "description": "The URI of the resource in the operation."
        },
        "operationName": {
          "type": "string",
          "description": "The operation that was performed."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "authorization": {
          "$ref": "#/definitions/Resources.ResourceAuthorization",
          "description": "The requested authorization for the operation."
        },
        "claims": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the claims.",
          "x-typespec-name": "Record<string>"
        },
        "correlationId": {
          "type": "string",
          "description": "An operation ID used for troubleshooting."
        },
        "httpRequest": {
          "$ref": "#/definitions/Resources.ResourceHttpRequest",
          "description": "The details of the operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Resources.ResourceDeleteFailure event. This is raised when a resource delete operation fails."
    },
    "Resources.ResourceDeleteSuccessData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the resource."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the resource."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group of the resource."
        },
        "resourceProvider": {
          "type": "string",
          "description": "The resource provider performing the operation."
        },
        "resourceUri": {
          "type": "string",
          "description": "The URI of the resource in the operation."
        },
        "operationName": {
          "type": "string",
          "description": "The operation that was performed."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "authorization": {
          "$ref": "#/definitions/Resources.ResourceAuthorization",
          "description": "The requested authorization for the operation."
        },
        "claims": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the claims.",
          "x-typespec-name": "Record<string>"
        },
        "correlationId": {
          "type": "string",
          "description": "An operation ID used for troubleshooting."
        },
        "httpRequest": {
          "$ref": "#/definitions/Resources.ResourceHttpRequest",
          "description": "The details of the operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Resources.ResourceDeleteSuccess event. This is raised when a resource delete operation succeeds."
    },
    "Resources.ResourceHttpRequest": {
      "type": "object",
      "properties": {
        "clientRequestId": {
          "type": "string",
          "description": "The client request ID."
        },
        "clientIpAddress": {
          "type": "string",
          "description": "The client IP address."
        },
        "method": {
          "type": "string",
          "description": "The request method."
        },
        "url": {
          "type": "string",
          "description": "The url used in the request."
        }
      },
      "description": "The details of the HTTP request."
    },
    "Resources.ResourceWriteCancelData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the resource."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the resource."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group of the resource."
        },
        "resourceProvider": {
          "type": "string",
          "description": "The resource provider performing the operation."
        },
        "resourceUri": {
          "type": "string",
          "description": "The URI of the resource in the operation."
        },
        "operationName": {
          "type": "string",
          "description": "The operation that was performed."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "authorization": {
          "$ref": "#/definitions/Resources.ResourceAuthorization",
          "description": "The requested authorization for the operation."
        },
        "claims": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the claims.",
          "x-typespec-name": "Record<string>"
        },
        "correlationId": {
          "type": "string",
          "description": "An operation ID used for troubleshooting."
        },
        "httpRequest": {
          "$ref": "#/definitions/Resources.ResourceHttpRequest",
          "description": "The details of the operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Resources.ResourceWriteCancel event. This is raised when a resource create or update operation is canceled."
    },
    "Resources.ResourceWriteFailureData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the resource."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the resource."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group of the resource."
        },
        "resourceProvider": {
          "type": "string",
          "description": "The resource provider performing the operation."
        },
        "resourceUri": {
          "type": "string",
          "description": "The URI of the resource in the operation."
        },
        "operationName": {
          "type": "string",
          "description": "The operation that was performed."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "authorization": {
          "$ref": "#/definitions/Resources.ResourceAuthorization",
          "description": "The requested authorization for the operation."
        },
        "claims": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the claims.",
          "x-typespec-name": "Record<string>"
        },
        "correlationId": {
          "type": "string",
          "description": "An operation ID used for troubleshooting."
        },
        "httpRequest": {
          "$ref": "#/definitions/Resources.ResourceHttpRequest",
          "description": "The details of the operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Resources.ResourceWriteFailure event. This is raised when a resource create or update operation fails."
    },
    "Resources.ResourceWriteSuccessData": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of the resource."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID of the resource."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group of the resource."
        },
        "resourceProvider": {
          "type": "string",
          "description": "The resource provider performing the operation."
        },
        "resourceUri": {
          "type": "string",
          "description": "The URI of the resource in the operation."
        },
        "operationName": {
          "type": "string",
          "description": "The operation that was performed."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "authorization": {
          "$ref": "#/definitions/Resources.ResourceAuthorization",
          "description": "The requested authorization for the operation."
        },
        "claims": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The properties of the claims.",
          "x-typespec-name": "Record<string>"
        },
        "correlationId": {
          "type": "string",
          "description": "An operation ID used for troubleshooting."
        },
        "httpRequest": {
          "$ref": "#/definitions/Resources.ResourceHttpRequest",
          "description": "The details of the operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Resources.ResourceWriteSuccess event. This is raised when a resource create or update operation succeeds."
    },
    "ServiceApiVersions": {
      "type": "string",
      "description": "The API version of the EventGrid service.",
      "enum": [
        "2018-01-01"
      ],
      "x-ms-enum": {
        "name": "ServiceApiVersions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2018_01_01",
            "value": "2018-01-01",
            "description": "2018-01-01"
          }
        ]
      }
    },
    "ServiceBus.ServiceBusActiveMessagesAvailablePeriodicNotificationsEventData": {
      "type": "object",
      "properties": {
        "namespaceName": {
          "type": "string",
          "description": "The namespace name of the Microsoft.ServiceBus resource."
        },
        "requestUri": {
          "type": "string",
          "description": "The endpoint of the Microsoft.ServiceBus resource."
        },
        "entityType": {
          "type": "string",
          "description": "The entity type of the Microsoft.ServiceBus resource. Could be one of 'queue' or 'subscriber'."
        },
        "queueName": {
          "type": "string",
          "description": "The name of the Microsoft.ServiceBus queue. If the entity type is of type 'subscriber', then this value will be null."
        },
        "topicName": {
          "type": "string",
          "description": "The name of the Microsoft.ServiceBus topic. If the entity type is of type 'queue', then this value will be null."
        },
        "subscriptionName": {
          "type": "string",
          "description": "The name of the Microsoft.ServiceBus topic's subscription. If the entity type is of type 'queue', then this value will be null."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ServiceBus.ActiveMessagesAvailablePeriodicNotifications event."
    },
    "ServiceBus.ServiceBusActiveMessagesAvailableWithNoListenersEventData": {
      "type": "object",
      "properties": {
        "namespaceName": {
          "type": "string",
          "description": "The namespace name of the Microsoft.ServiceBus resource."
        },
        "requestUri": {
          "type": "string",
          "description": "The endpoint of the Microsoft.ServiceBus resource."
        },
        "entityType": {
          "type": "string",
          "description": "The entity type of the Microsoft.ServiceBus resource. Could be one of 'queue' or 'subscriber'."
        },
        "queueName": {
          "type": "string",
          "description": "The name of the Microsoft.ServiceBus queue. If the entity type is of type 'subscriber', then this value will be null."
        },
        "topicName": {
          "type": "string",
          "description": "The name of the Microsoft.ServiceBus topic. If the entity type is of type 'queue', then this value will be null."
        },
        "subscriptionName": {
          "type": "string",
          "description": "The name of the Microsoft.ServiceBus topic's subscription. If the entity type is of type 'queue', then this value will be null."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ServiceBus.ActiveMessagesAvailableWithNoListeners event."
    },
    "ServiceBus.ServiceBusDeadletterMessagesAvailablePeriodicNotificationsEventData": {
      "type": "object",
      "properties": {
        "namespaceName": {
          "type": "string",
          "description": "The namespace name of the Microsoft.ServiceBus resource."
        },
        "requestUri": {
          "type": "string",
          "description": "The endpoint of the Microsoft.ServiceBus resource."
        },
        "entityType": {
          "type": "string",
          "description": "The entity type of the Microsoft.ServiceBus resource. Could be one of 'queue' or 'subscriber'."
        },
        "queueName": {
          "type": "string",
          "description": "The name of the Microsoft.ServiceBus queue. If the entity type is of type 'subscriber', then this value will be null."
        },
        "topicName": {
          "type": "string",
          "description": "The name of the Microsoft.ServiceBus topic. If the entity type is of type 'queue', then this value will be null."
        },
        "subscriptionName": {
          "type": "string",
          "description": "The name of the Microsoft.ServiceBus topic's subscription. If the entity type is of type 'queue', then this value will be null."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ServiceBus.DeadletterMessagesAvailablePeriodicNotifications event."
    },
    "ServiceBus.ServiceBusDeadletterMessagesAvailableWithNoListenersEventData": {
      "type": "object",
      "properties": {
        "namespaceName": {
          "type": "string",
          "description": "The namespace name of the Microsoft.ServiceBus resource."
        },
        "requestUri": {
          "type": "string",
          "description": "The endpoint of the Microsoft.ServiceBus resource."
        },
        "entityType": {
          "type": "string",
          "description": "The entity type of the Microsoft.ServiceBus resource. Could be one of 'queue' or 'subscriber'."
        },
        "queueName": {
          "type": "string",
          "description": "The name of the Microsoft.ServiceBus queue. If the entity type is of type 'subscriber', then this value will be null."
        },
        "topicName": {
          "type": "string",
          "description": "The name of the Microsoft.ServiceBus topic. If the entity type is of type 'queue', then this value will be null."
        },
        "subscriptionName": {
          "type": "string",
          "description": "The name of the Microsoft.ServiceBus topic's subscription. If the entity type is of type 'queue', then this value will be null."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.ServiceBus.DeadletterMessagesAvailableWithNoListeners event."
    },
    "SignalRService.SignalRServiceClientConnectionConnectedEventData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the event occurred."
        },
        "hubName": {
          "type": "string",
          "description": "The hub of connected client connection."
        },
        "connectionId": {
          "type": "string",
          "description": "The connection Id of connected client connection."
        },
        "userId": {
          "type": "string",
          "description": "The user Id of connected client connection."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.SignalRService.ClientConnectionConnected event."
    },
    "SignalRService.SignalRServiceClientConnectionDisconnectedEventData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the event occurred."
        },
        "hubName": {
          "type": "string",
          "description": "The hub of connected client connection."
        },
        "connectionId": {
          "type": "string",
          "description": "The connection Id of connected client connection."
        },
        "userId": {
          "type": "string",
          "description": "The user Id of connected client connection."
        },
        "errorMessage": {
          "type": "string",
          "description": "The message of error that cause the client connection disconnected."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.SignalRService.ClientConnectionDisconnected event."
    },
    "Storage.StorageAsyncOperationInitiatedEventData": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string",
          "description": "The name of the API/operation that triggered this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "A request id provided by the client of the storage API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the storage service for the storage API operation that triggered this event."
        },
        "identity": {
          "type": "string",
          "description": "The identity of the requester that triggered this event."
        },
        "storageDiagnostics": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.",
          "x-typespec-name": "Record<string>"
        },
        "sequencer": {
          "type": "string",
          "description": "An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name."
        },
        "contentLength": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the blob in bytes. This is the same as what would be returned in the Content-Length header from the blob."
        },
        "url": {
          "type": "string",
          "description": "The path to the blob."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob."
        },
        "blobType": {
          "type": "string",
          "description": "The type of blob."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Storage.AsyncOperationInitiated event."
    },
    "Storage.StorageBlobCreatedEventData": {
      "type": "object",
      "properties": {
        "eTag": {
          "type": "string",
          "description": "The etag of the blob at the time this event was triggered."
        },
        "contentOffset": {
          "type": "integer",
          "format": "int64",
          "description": "The offset of the blob in bytes."
        },
        "api": {
          "type": "string",
          "description": "The name of the API/operation that triggered this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "A request id provided by the client of the storage API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the storage service for the storage API operation that triggered this event."
        },
        "identity": {
          "type": "string",
          "description": "The identity of the requester that triggered this event."
        },
        "storageDiagnostics": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.",
          "x-typespec-name": "Record<string>"
        },
        "sequencer": {
          "type": "string",
          "description": "An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name."
        },
        "contentLength": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the blob in bytes. This is the same as what would be returned in the Content-Length header from the blob."
        },
        "url": {
          "type": "string",
          "description": "The path to the blob."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob."
        },
        "blobType": {
          "type": "string",
          "description": "The type of blob."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Storage.BlobCreated event."
    },
    "Storage.StorageBlobDeletedEventData": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The path to the blob."
        },
        "api": {
          "type": "string",
          "description": "The name of the API/operation that triggered this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "A request id provided by the client of the storage API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the storage service for the storage API operation that triggered this event."
        },
        "identity": {
          "type": "string",
          "description": "The identity of the requester that triggered this event."
        },
        "storageDiagnostics": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.",
          "x-typespec-name": "Record<string>"
        },
        "sequencer": {
          "type": "string",
          "description": "An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob."
        },
        "blobType": {
          "type": "string",
          "description": "The type of blob."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Storage.BlobDeleted event."
    },
    "Storage.StorageBlobInventoryPolicyCompletedEventData": {
      "type": "object",
      "properties": {
        "scheduleDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which inventory policy was scheduled."
        },
        "accountName": {
          "type": "string",
          "description": "The account name for which inventory policy is registered."
        },
        "ruleName": {
          "type": "string",
          "description": "The rule name for inventory policy."
        },
        "policyRunStatus": {
          "type": "string",
          "description": "The status of inventory run, it can be Succeeded/PartiallySucceeded/Failed."
        },
        "policyRunStatusMessage": {
          "type": "string",
          "description": "The status message for inventory run."
        },
        "policyRunId": {
          "type": "string",
          "description": "The policy run id for inventory run."
        },
        "manifestBlobUrl": {
          "type": "string",
          "description": "The blob URL for manifest file for inventory run."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for an Microsoft.Storage.BlobInventoryPolicyCompleted event."
    },
    "Storage.StorageBlobRenamedEventData": {
      "type": "object",
      "properties": {
        "sourceUrl": {
          "type": "string",
          "description": "The path to the blob that was renamed."
        },
        "destinationUrl": {
          "type": "string",
          "description": "The new path to the blob after the rename operation."
        },
        "api": {
          "type": "string",
          "description": "The name of the API/operation that triggered this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "A request id provided by the client of the storage API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the storage service for the storage API operation that triggered this event."
        },
        "identity": {
          "type": "string",
          "description": "The identity of the requester that triggered this event."
        },
        "storageDiagnostics": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.",
          "x-typespec-name": "Record<string>"
        },
        "sequencer": {
          "type": "string",
          "description": "An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Storage.BlobRenamed event."
    },
    "Storage.StorageBlobTierChangedEventData": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string",
          "description": "The name of the API/operation that triggered this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "A request id provided by the client of the storage API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the storage service for the storage API operation that triggered this event."
        },
        "identity": {
          "type": "string",
          "description": "The identity of the requester that triggered this event."
        },
        "storageDiagnostics": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.",
          "x-typespec-name": "Record<string>"
        },
        "sequencer": {
          "type": "string",
          "description": "An opaque string value representing the logical sequence of events for any particular blob name. Users can use standard string comparison to understand the relative sequence of two events on the same blob name."
        },
        "contentLength": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the blob in bytes. This is the same as what would be returned in the Content-Length header from the blob."
        },
        "url": {
          "type": "string",
          "description": "The path to the blob."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the blob. This is the same as what would be returned in the Content-Type header from the blob."
        },
        "blobType": {
          "type": "string",
          "description": "The type of blob."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Storage.BlobTierChanged event."
    },
    "Storage.StorageDirectoryCreatedEventData": {
      "type": "object",
      "properties": {
        "eTag": {
          "type": "string",
          "description": "The etag of the directory at the time this event was triggered."
        },
        "url": {
          "type": "string",
          "description": "The path to the directory."
        },
        "api": {
          "type": "string",
          "description": "The name of the API/operation that triggered this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "A request id provided by the client of the storage API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the storage service for the storage API operation that triggered this event."
        },
        "identity": {
          "type": "string",
          "description": "The identity of the requester that triggered this event."
        },
        "storageDiagnostics": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.",
          "x-typespec-name": "Record<string>"
        },
        "sequencer": {
          "type": "string",
          "description": "An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Storage.DirectoryCreated event."
    },
    "Storage.StorageDirectoryDeletedEventData": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The path to the deleted directory."
        },
        "recursive": {
          "type": "string",
          "description": "Is this event for a recursive delete operation."
        },
        "api": {
          "type": "string",
          "description": "The name of the API/operation that triggered this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "A request id provided by the client of the storage API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the storage service for the storage API operation that triggered this event."
        },
        "identity": {
          "type": "string",
          "description": "The identity of the requester that triggered this event."
        },
        "storageDiagnostics": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.",
          "x-typespec-name": "Record<string>"
        },
        "sequencer": {
          "type": "string",
          "description": "An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Storage.DirectoryDeleted event."
    },
    "Storage.StorageDirectoryRenamedEventData": {
      "type": "object",
      "properties": {
        "sourceUrl": {
          "type": "string",
          "description": "The path to the directory that was renamed."
        },
        "destinationUrl": {
          "type": "string",
          "description": "The new path to the directory after the rename operation."
        },
        "api": {
          "type": "string",
          "description": "The name of the API/operation that triggered this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "A request id provided by the client of the storage API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the storage service for the storage API operation that triggered this event."
        },
        "identity": {
          "type": "string",
          "description": "The identity of the requester that triggered this event."
        },
        "storageDiagnostics": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "For service use only. Diagnostic data occasionally included by the Azure Storage service. This property should be ignored by event consumers.",
          "x-typespec-name": "Record<string>"
        },
        "sequencer": {
          "type": "string",
          "description": "An opaque string value representing the logical sequence of events for any particular directory name. Users can use standard string comparison to understand the relative sequence of two events on the same directory name."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Storage.DirectoryRenamed event."
    },
    "Storage.StorageLifecyclePolicyActionSummaryDetail": {
      "type": "object",
      "properties": {
        "totalObjectsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of objects to be acted on by this action."
        },
        "successCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of success operations of this action."
        },
        "errorList": {
          "type": "string",
          "description": "Error messages of this action if any."
        }
      },
      "description": "Execution statistics of a specific policy action in a Blob Management cycle."
    },
    "Storage.StorageLifecyclePolicyCompletedEventData": {
      "type": "object",
      "properties": {
        "scheduleTime": {
          "type": "string",
          "description": "The time the policy task was scheduled."
        },
        "deleteSummary": {
          "$ref": "#/definitions/Storage.StorageLifecyclePolicyActionSummaryDetail",
          "description": "Execution statistics of a specific policy action in a Blob Management cycle."
        },
        "tierToCoolSummary": {
          "$ref": "#/definitions/Storage.StorageLifecyclePolicyActionSummaryDetail",
          "description": "Execution statistics of a specific policy action in a Blob Management cycle."
        },
        "tierToArchiveSummary": {
          "$ref": "#/definitions/Storage.StorageLifecyclePolicyActionSummaryDetail",
          "description": "Execution statistics of a specific policy action in a Blob Management cycle."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Storage.LifecyclePolicyCompleted event."
    },
    "Storage.StorageTaskCompletedEventData": {
      "type": "object",
      "properties": {
        "completedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which a storage task was completed."
        },
        "status": {
          "$ref": "#/definitions/Storage.StorageTaskCompletedStatus",
          "description": "The status for a storage task."
        },
        "summaryReportBlobUrl": {
          "type": "string",
          "format": "uri",
          "description": "The summary report blob url for a storage task"
        },
        "taskExecutionId": {
          "type": "string",
          "description": "The execution id for a storage task."
        },
        "taskName": {
          "type": "string",
          "description": "The task name for a storage task."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for an Microsoft.Storage.StorageTaskCompleted event.",
      "required": [
        "completedDateTime",
        "status",
        "summaryReportBlobUrl",
        "taskExecutionId",
        "taskName"
      ]
    },
    "Storage.StorageTaskCompletedStatus": {
      "type": "string",
      "description": "The status for a storage task.",
      "enum": [
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "StorageTaskCompletedStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed"
          }
        ]
      }
    },
    "Storage.StorageTaskQueuedEventData": {
      "type": "object",
      "properties": {
        "queuedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which a storage task was queued."
        },
        "taskExecutionId": {
          "type": "string",
          "description": "The execution id for a storage task."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for an Microsoft.Storage.StorageTaskQueued event.",
      "required": [
        "queuedDateTime",
        "taskExecutionId"
      ]
    },
    "Web.AppAction": {
      "type": "string",
      "description": "App Action Type",
      "enum": [
        "Restarted",
        "Stopped",
        "ChangedAppSettings",
        "Started",
        "Completed",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "AppAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Restarted",
            "value": "Restarted",
            "description": "Web app was restarted."
          },
          {
            "name": "Stopped",
            "value": "Stopped",
            "description": "Web app was stopped."
          },
          {
            "name": "ChangedAppSettings",
            "value": "ChangedAppSettings",
            "description": "There was an operation to change app setting on the web app."
          },
          {
            "name": "Started",
            "value": "Started",
            "description": "The job has started."
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "The job has completed."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The job has failed to complete."
          }
        ]
      }
    },
    "Web.AppEventTypeDetail": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/Web.AppAction",
          "description": "Type of action of the operation."
        }
      },
      "description": "Detail of action on the app."
    },
    "Web.AppServicePlanAction": {
      "type": "string",
      "description": "Type of action on the app service plan.",
      "enum": [
        "Updated"
      ],
      "x-ms-enum": {
        "name": "AppServicePlanAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Updated",
            "value": "Updated",
            "description": "App Service plan is being updated."
          }
        ]
      }
    },
    "Web.AppServicePlanEventTypeDetail": {
      "type": "object",
      "properties": {
        "stampKind": {
          "$ref": "#/definitions/Web.StampKind",
          "description": "Kind of environment where app service plan is."
        },
        "action": {
          "$ref": "#/definitions/Web.AppServicePlanAction",
          "description": "Type of action on the app service plan."
        },
        "status": {
          "$ref": "#/definitions/Web.AsyncStatus",
          "description": "Asynchronous operation status of the operation on the app service plan."
        }
      },
      "description": "Detail of action on the app service plan."
    },
    "Web.AsyncStatus": {
      "type": "string",
      "description": "Asynchronous operation status of the operation on the app service plan.",
      "enum": [
        "Started",
        "Completed",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "AsyncStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Started",
            "value": "Started",
            "description": "Async operation has started."
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Async operation has completed."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Async operation failed to complete."
          }
        ]
      }
    },
    "Web.StampKind": {
      "type": "string",
      "description": "Kind of environment where app service plan is.",
      "enum": [
        "Public",
        "AseV1",
        "AseV2"
      ],
      "x-ms-enum": {
        "name": "StampKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Public",
            "value": "Public",
            "description": "App Service Plan is running on a public stamp."
          },
          {
            "name": "AseV1",
            "value": "AseV1",
            "description": "App Service Plan is running on an App Service Environment V1."
          },
          {
            "name": "AseV2",
            "value": "AseV2",
            "description": "App Service Plan is running on an App Service Environment V2."
          }
        ]
      }
    },
    "Web.WebAppServicePlanUpdatedEventData": {
      "type": "object",
      "properties": {
        "appServicePlanEventTypeDetail": {
          "$ref": "#/definitions/Web.AppServicePlanEventTypeDetail",
          "description": "Detail of action on the app service plan."
        },
        "name": {
          "type": "string",
          "description": "name of the app service plan that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the app service plan API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the app service plan API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the app service plan API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        },
        "sku": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "name of app service plan sku."
            },
            "Tier": {
              "type": "string",
              "description": "tier of app service plan sku."
            },
            "Size": {
              "type": "string",
              "description": "size of app service plan sku."
            },
            "Family": {
              "type": "string",
              "description": "family of app service plan sku."
            },
            "Capacity": {
              "type": "string",
              "description": "capacity of app service plan sku."
            }
          },
          "description": "sku of app service plan.",
          "x-typespec-name": "(anonymous model)"
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.AppServicePlanUpdated event."
    },
    "Web.WebAppUpdatedEventData": {
      "type": "object",
      "properties": {
        "appEventTypeDetail": {
          "$ref": "#/definitions/Web.AppEventTypeDetail",
          "description": "Detail of action on the app."
        },
        "name": {
          "type": "string",
          "description": "name of the web site that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the site API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the site API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the site API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.AppUpdated event."
    },
    "Web.WebBackupOperationCompletedEventData": {
      "type": "object",
      "properties": {
        "appEventTypeDetail": {
          "$ref": "#/definitions/Web.AppEventTypeDetail",
          "description": "Detail of action on the app."
        },
        "name": {
          "type": "string",
          "description": "name of the web site that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the site API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the site API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the site API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.BackupOperationCompleted event."
    },
    "Web.WebBackupOperationFailedEventData": {
      "type": "object",
      "properties": {
        "appEventTypeDetail": {
          "$ref": "#/definitions/Web.AppEventTypeDetail",
          "description": "Detail of action on the app."
        },
        "name": {
          "type": "string",
          "description": "name of the web site that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the site API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the site API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the site API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.BackupOperationFailed event."
    },
    "Web.WebBackupOperationStartedEventData": {
      "type": "object",
      "properties": {
        "appEventTypeDetail": {
          "$ref": "#/definitions/Web.AppEventTypeDetail",
          "description": "Detail of action on the app."
        },
        "name": {
          "type": "string",
          "description": "name of the web site that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the site API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the site API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the site API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.BackupOperationStarted event."
    },
    "Web.WebRestoreOperationCompletedEventData": {
      "type": "object",
      "properties": {
        "appEventTypeDetail": {
          "$ref": "#/definitions/Web.AppEventTypeDetail",
          "description": "Detail of action on the app."
        },
        "name": {
          "type": "string",
          "description": "name of the web site that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the site API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the site API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the site API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.RestoreOperationCompleted event."
    },
    "Web.WebRestoreOperationFailedEventData": {
      "type": "object",
      "properties": {
        "appEventTypeDetail": {
          "$ref": "#/definitions/Web.AppEventTypeDetail",
          "description": "Detail of action on the app."
        },
        "name": {
          "type": "string",
          "description": "name of the web site that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the site API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the site API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the site API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.RestoreOperationFailed event."
    },
    "Web.WebRestoreOperationStartedEventData": {
      "type": "object",
      "properties": {
        "appEventTypeDetail": {
          "$ref": "#/definitions/Web.AppEventTypeDetail",
          "description": "Detail of action on the app."
        },
        "name": {
          "type": "string",
          "description": "name of the web site that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the site API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the site API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the site API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.RestoreOperationStarted event."
    },
    "Web.WebSlotSwapCompletedEventData": {
      "type": "object",
      "properties": {
        "appEventTypeDetail": {
          "$ref": "#/definitions/Web.AppEventTypeDetail",
          "description": "Detail of action on the app."
        },
        "name": {
          "type": "string",
          "description": "name of the web site that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the site API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the site API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the site API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.SlotSwapCompleted event."
    },
    "Web.WebSlotSwapFailedEventData": {
      "type": "object",
      "properties": {
        "appEventTypeDetail": {
          "$ref": "#/definitions/Web.AppEventTypeDetail",
          "description": "Detail of action on the app."
        },
        "name": {
          "type": "string",
          "description": "name of the web site that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the site API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the site API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the site API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.SlotSwapFailed event."
    },
    "Web.WebSlotSwapStartedEventData": {
      "type": "object",
      "properties": {
        "appEventTypeDetail": {
          "$ref": "#/definitions/Web.AppEventTypeDetail",
          "description": "Detail of action on the app."
        },
        "name": {
          "type": "string",
          "description": "name of the web site that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the site API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the site API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the site API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.SlotSwapStarted event."
    },
    "Web.WebSlotSwapWithPreviewCancelledEventData": {
      "type": "object",
      "properties": {
        "appEventTypeDetail": {
          "$ref": "#/definitions/Web.AppEventTypeDetail",
          "description": "Detail of action on the app."
        },
        "name": {
          "type": "string",
          "description": "name of the web site that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the site API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the site API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the site API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.SlotSwapWithPreviewCancelled event."
    },
    "Web.WebSlotSwapWithPreviewStartedEventData": {
      "type": "object",
      "properties": {
        "appEventTypeDetail": {
          "$ref": "#/definitions/Web.AppEventTypeDetail",
          "description": "Detail of action on the app."
        },
        "name": {
          "type": "string",
          "description": "name of the web site that had this event."
        },
        "clientRequestId": {
          "type": "string",
          "description": "The client request id generated by the app service for the site API operation that triggered this event."
        },
        "correlationRequestId": {
          "type": "string",
          "description": "The correlation request id generated by the app service for the site API operation that triggered this event."
        },
        "requestId": {
          "type": "string",
          "description": "The request id generated by the app service for the site API operation that triggered this event."
        },
        "address": {
          "type": "string",
          "description": "HTTP request URL of this operation."
        },
        "verb": {
          "type": "string",
          "description": "HTTP verb of this operation."
        }
      },
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.Web.SlotSwapWithPreviewStarted event."
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "description": "The API version to use for this operation.",
      "x-ms-client-name": "apiVersion",
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    }
  }
}
