{
  "swagger": "2.0",
  "info": {
    "title": "EventGridClient",
    "version": "2018-01-01",
    "description": "Azure EventGrid Client",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "required": true,
        "description": "The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net",
        "type": "string",
        "format": "uri",
        "x-ms-skip-url-encoding": true
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "http": []
    }
  ],
  "securityDefinitions": {
    "http": {
      "type": "basic"
    }
  },
  "tags": [],
  "paths": {},
  "x-ms-paths": {
    "/send?api-version={apiVersion}": {
      "post": {
        "operationId": "PublishCustomEvent",
        "description": "Publish custom events",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "events",
            "in": "body",
            "required": true,
            "description": "Events being published.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomEventEvent"
              },
              "x-ms-identifiers": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/cloudevents-batch+json; charset=utf-8"
        ]
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "CloudEventEvent": {
      "type": "object",
      "description": "Properties of an event published to an Azure Messaging EventGrid Namespace topic using the CloudEvent 1.0 Schema.",
      "properties": {
        "id": {
          "type": "string",
          "description": "An identifier for the event. The combination of id and source must be unique for each distinct event."
        },
        "source": {
          "type": "string",
          "description": "Identifies the context in which an event happened. The combination of id and source must be unique for each distinct event."
        },
        "data": {
          "description": "Event data specific to the event type."
        },
        "data_base64": {
          "type": "string",
          "format": "byte",
          "description": "Event data specific to the event type, encoded as a base64 string."
        },
        "type": {
          "type": "string",
          "description": "Type of event related to the originating occurrence."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time (in UTC) the event was generated, in RFC3339 format."
        },
        "specversion": {
          "type": "string",
          "description": "The version of the CloudEvents specification which the event uses."
        },
        "dataschema": {
          "type": "string",
          "description": "Identifies the schema that data adheres to."
        },
        "datacontenttype": {
          "type": "string",
          "description": "Content type of data value."
        },
        "subject": {
          "type": "string",
          "description": "This describes the subject of the event in the context of the event producer (identified by source)."
        }
      },
      "required": [
        "id",
        "source",
        "type",
        "specversion"
      ]
    },
    "CustomEventEvent": {
      "type": "object",
      "description": "Properties of an event published to an Event Grid topic using a custom schema",
      "properties": {}
    },
    "EventGridEvent": {
      "type": "object",
      "description": "Properties of an event published to an Event Grid topic using the EventGrid Schema.",
      "properties": {
        "id": {
          "type": "string",
          "description": "An unique identifier for the event."
        },
        "topic": {
          "type": "string",
          "description": "The resource path of the event source."
        },
        "subject": {
          "type": "string",
          "description": "A resource path relative to the topic path."
        },
        "data": {
          "description": "Event data specific to the event type."
        },
        "eventType": {
          "type": "string",
          "description": "The type of the event that occurred."
        },
        "eventTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time (in UTC) the event was generated."
        },
        "metadataVersion": {
          "type": "string",
          "description": "The schema version of the event metadata.",
          "readOnly": true
        },
        "dataVersion": {
          "type": "string",
          "description": "The schema version of the data object."
        }
      },
      "required": [
        "id",
        "subject",
        "data",
        "eventType",
        "eventTime",
        "dataVersion"
      ]
    },
    "EventGridNamespaceMQTTClientCreatedOrUpdatedEventData": {
      "type": "object",
      "description": "Event data for Microsoft.EventGrid.MQTTClientCreatedOrUpdated event.",
      "properties": {
        "clientAuthenticationName": {
          "type": "string",
          "description": "Unique identifier for the MQTT client that the client presents to the service for authentication. This case-insensitive string can be up to 128 characters long, and supports UTF-8 characters."
        },
        "clientName": {
          "type": "string",
          "description": "Name of the client resource in the Event Grid namespace."
        },
        "namespaceName": {
          "type": "string",
          "description": "Name of the Event Grid namespace where the MQTT client was created or updated."
        },
        "state": {
          "type": "string",
          "description": "Configured state of the client. The value could be Enabled or Disabled."
        },
        "createdOn": {
          "type": "string",
          "description": "Time the client resource is created based on the provider's UTC time."
        },
        "updatedOn": {
          "type": "string",
          "description": "Time the client resource is last updated based on the provider's UTC time. If the client resource was never updated, this value is identical to the value of the `createdOn` property."
        },
        "attributes": {
          "type": "object",
          "description": "The key-value attributes that are assigned to the client resource.",
          "additionalProperties": true
        }
      }
    },
    "EventGridNamespaceMQTTClientDeletedEventData": {
      "type": "object",
      "description": "Event data for Microsoft.EventGrid.MQTTClientDeleted event.",
      "properties": {
        "clientAuthenticationName": {
          "type": "string",
          "description": "Unique identifier for the MQTT client that the client presents to the service for authentication. This case-insensitive string can be up to 128 characters long, and supports UTF-8 characters."
        },
        "clientName": {
          "type": "string",
          "description": "Name of the client resource in the Event Grid namespace."
        },
        "namespaceName": {
          "type": "string",
          "description": "Name of the Event Grid namespace where the MQTT client was deleted."
        }
      }
    },
    "EventGridNamespaceMQTTClientSessionConnectedEventData": {
      "type": "object",
      "description": "Event data for Microsoft.EventGrid.MQTTClientSessionConnected event.",
      "properties": {
        "clientAuthenticationName": {
          "type": "string",
          "description": "Unique identifier for the MQTT client that the client presents to the service for authentication. This case-insensitive string can be up to 128 characters long, and supports UTF-8 characters."
        },
        "clientSessionName": {
          "type": "string",
          "description": "Unique identifier for the MQTT client's session. This case-sensitive string can be up to 128 characters long, and supports UTF-8 characters."
        },
        "namespaceName": {
          "type": "string",
          "description": "Name of the Event Grid namespace where the MQTT client was connected."
        },
        "sequenceNumber": {
          "type": "string",
          "description": "A number that helps indicate order of MQTT client session connected or disconnected events. Latest event will have a sequence number that is higher than the previous event."
        }
      }
    },
    "EventGridNamespaceMQTTClientSessionDisconnectedEventData": {
      "type": "object",
      "description": "Event data for Microsoft.EventGrid.MQTTClientSessionDisconnected event.",
      "properties": {
        "clientAuthenticationName": {
          "type": "string",
          "description": "Unique identifier for the MQTT client that the client presents to the service for authentication. This case-insensitive string can be up to 128 characters long, and supports UTF-8 characters."
        },
        "clientSessionName": {
          "type": "string",
          "description": "Unique identifier for the MQTT client's session. This case-sensitive string can be up to 128 characters long, and supports UTF-8 characters."
        },
        "namespaceName": {
          "type": "string",
          "description": "Name of the Event Grid namespace where the MQTT client was disconnected."
        },
        "sequenceNumber": {
          "type": "string",
          "description": "A number that helps indicate order of MQTT client session connected or disconnected events. Latest event will have a sequence number that is higher than the previous event."
        },
        "disconnectionReason": {
          "type": "string",
          "description": "Reason for the disconnection of the MQTT client's session. The value could be one of the values in the disconnection reasons table."
        }
      }
    },
    "ServiceApiVersions": {
      "type": "string",
      "description": "The API version of the EventGrid service.",
      "enum": [
        "2018-01-01"
      ],
      "x-ms-enum": {
        "name": "ServiceApiVersions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2018_01_01",
            "value": "2018-01-01",
            "description": "2018-01-01"
          }
        ]
      }
    },
    "SubscriptionDeletedEventData": {
      "type": "object",
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.EventGrid.SubscriptionDeletedEvent event.",
      "properties": {
        "eventSubscriptionId": {
          "type": "string",
          "description": "The Azure resource ID of the deleted event subscription.",
          "readOnly": true
        }
      }
    },
    "SubscriptionValidationEventData": {
      "type": "object",
      "description": "Schema of the Data property of an EventGridEvent for a Microsoft.EventGrid.SubscriptionValidationEvent event.",
      "properties": {
        "validationCode": {
          "type": "string",
          "description": "The validation code sent by Azure Event Grid to validate an event subscription. To complete the validation handshake, the subscriber must either respond with this validation code as part of the validation response, or perform a GET request on the validationUrl (available starting version 2018-05-01-preview).",
          "readOnly": true
        },
        "validationUrl": {
          "type": "string",
          "description": "The validation URL sent by Azure Event Grid (available starting version 2018-05-01-preview). To complete the validation handshake, the subscriber must either respond with the validationCode as part of the validation response, or perform a GET request on the validationUrl (available starting version 2018-05-01-preview).",
          "readOnly": true
        }
      }
    },
    "SubscriptionValidationResponse": {
      "type": "object",
      "description": "To complete an event subscription validation handshake, a subscriber can use either the validationCode or the validationUrl received in a SubscriptionValidationEvent. When the validationCode is used, the SubscriptionValidationResponse can be used to build the response.",
      "properties": {
        "validationResponse": {
          "type": "string",
          "description": "The validation response sent by the subscriber to Azure Event Grid to complete the validation of an event subscription."
        }
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
