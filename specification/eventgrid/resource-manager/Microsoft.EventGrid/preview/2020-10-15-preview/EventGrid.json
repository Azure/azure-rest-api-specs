{
  "swagger": "2.0",
  "info": {
    "version": "2020-10-15-preview",
    "title": "EventGridManagementClient",
    "description": "Azure EventGrid Management Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "Get a domain.",
        "description": "Get properties of a domain.",
        "operationId": "Domains_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Domains_Get": {
            "$ref": "./examples/Domains_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Domains"
        ],
        "summary": "Create or update a domain.",
        "description": "Asynchronously creates or updates a new domain with the specified parameters.",
        "operationId": "Domains_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainInfo",
            "in": "body",
            "description": "Domain information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Domains_CreateOrUpdate": {
            "$ref": "./examples/Domains_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Domains"
        ],
        "summary": "Delete a domain.",
        "description": "Delete existing domain.",
        "operationId": "Domains_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Domains_Delete": {
            "$ref": "./examples/Domains_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Domains"
        ],
        "summary": "Update a domain.",
        "description": "Asynchronously updates a domain with the specified parameters.",
        "operationId": "Domains_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainUpdateParameters",
            "in": "body",
            "description": "Domain update information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Domain update request accepted.",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Domains_Update": {
            "$ref": "./examples/Domains_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/domains": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "List domains under an Azure subscription.",
        "description": "List all the domains under an Azure subscription.",
        "operationId": "Domains_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DomainsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Domains_ListBySubscription": {
            "$ref": "./examples/Domains_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "List domains under a resource group.",
        "description": "List all the domains under a resource group.",
        "operationId": "Domains_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DomainsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Domains_ListByResourceGroup": {
            "$ref": "./examples/Domains_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/listKeys": {
      "post": {
        "tags": [
          "Domains"
        ],
        "summary": "List keys for a domain.",
        "description": "List the two keys used to publish to a domain.",
        "operationId": "Domains_ListSharedAccessKeys",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DomainSharedAccessKeys"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Domains_ListSharedAccessKeys": {
            "$ref": "./examples/Domains_ListSharedAccessKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/regenerateKey": {
      "post": {
        "tags": [
          "Domains"
        ],
        "summary": "Regenerate key for a domain.",
        "description": "Regenerate a shared access key for a domain.",
        "operationId": "Domains_RegenerateKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "regenerateKeyRequest",
            "in": "body",
            "description": "Request body to regenerate key.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainRegenerateKeyRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DomainSharedAccessKeys"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Domains_RegenerateKey": {
            "$ref": "./examples/Domains_RegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{domainTopicName}": {
      "get": {
        "tags": [
          "DomainTopics"
        ],
        "summary": "Get a domain topic.",
        "description": "Get properties of a domain topic.",
        "operationId": "DomainTopics_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainTopicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DomainTopic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "DomainTopics_Get": {
            "$ref": "./examples/DomainTopics_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "DomainTopics"
        ],
        "summary": "Create or update a domain topic.",
        "description": "Asynchronously creates or updates a new domain topic with the specified parameters.",
        "operationId": "DomainTopics_CreateOrUpdate",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainTopicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DomainTopic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "DomainTopics_CreateOrUpdate": {
            "$ref": "./examples/DomainTopics_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "DomainTopics"
        ],
        "summary": "Delete a domain topic.",
        "description": "Delete existing domain topic.",
        "operationId": "DomainTopics_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainTopicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "DomainTopics_Delete": {
            "$ref": "./examples/DomainTopics_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics": {
      "get": {
        "tags": [
          "DomainTopics"
        ],
        "summary": "List domain topics.",
        "description": "List all the topics in a domain.",
        "operationId": "DomainTopics_ListByDomain",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Domain name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DomainTopicsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "DomainTopics_ListByDomain": {
            "$ref": "./examples/DomainTopics_ListByDomain.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/eventChannels/{eventChannelName}": {
      "get": {
        "tags": [
          "EventChannels"
        ],
        "summary": "Get an event channel.",
        "description": "Get properties of an event channel.",
        "operationId": "EventChannels_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventChannelName",
            "in": "path",
            "description": "Name of the event channel.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventChannel"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventChannels_Get": {
            "$ref": "./examples/EventChannels_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "EventChannels"
        ],
        "summary": "Create an event channel.",
        "description": "Asynchronously creates a new event channel with the specified parameters.",
        "operationId": "EventChannels_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventChannelName",
            "in": "path",
            "description": "Name of the event channel.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventChannelInfo",
            "in": "body",
            "description": "EventChannel information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventChannel"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventChannel"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventChannels_CreateOrUpdate": {
            "$ref": "./examples/EventChannels_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "EventChannels"
        ],
        "summary": "Delete an event channel.",
        "description": "Delete existing event channel.",
        "operationId": "EventChannels_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventChannelName",
            "in": "path",
            "description": "Name of the event channel.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventChannels_Delete": {
            "$ref": "./examples/EventChannels_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/eventChannels": {
      "get": {
        "tags": [
          "EventChannels"
        ],
        "summary": "List event channels.",
        "description": "List all the event channels in a partner namespace.",
        "operationId": "EventChannels_ListByPartnerNamespace",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventChannelsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventChannels_ListByPartnerNamespace": {
            "$ref": "./examples/EventChannels_ListByPartnerNamespace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get an event subscription.",
        "description": "Get properties of an event subscription.",
        "operationId": "EventSubscriptions_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_GetForSubscription": {
            "$ref": "./examples/EventSubscriptions_GetForSubscription.json"
          },
          "EventSubscriptions_GetForResourceGroup": {
            "$ref": "./examples/EventSubscriptions_GetForResourceGroup.json"
          },
          "EventSubscriptions_GetForResource": {
            "$ref": "./examples/EventSubscriptions_GetForResource.json"
          },
          "EventSubscriptions_GetForCustomTopic": {
            "$ref": "./examples/EventSubscriptions_GetForCustomTopic.json"
          }
        }
      },
      "put": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Create or update an event subscription.",
        "description": "Asynchronously creates a new event subscription or updates an existing event subscription based on the specified scope.",
        "operationId": "EventSubscriptions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The identifier of the resource to which the event subscription needs to be created or updated. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription. Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionInfo",
            "in": "body",
            "description": "Event subscription properties containing the destination and filter information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "EventSubscription CreateOrUpdate request accepted.",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_CreateOrUpdateForSubscription": {
            "$ref": "./examples/EventSubscriptions_CreateOrUpdateForSubscription.json"
          },
          "EventSubscriptions_CreateOrUpdateForResourceGroup": {
            "$ref": "./examples/EventSubscriptions_CreateOrUpdateForResourceGroup.json"
          },
          "EventSubscriptions_CreateOrUpdateForResource": {
            "$ref": "./examples/EventSubscriptions_CreateOrUpdateForResource.json"
          },
          "EventSubscriptions_CreateOrUpdateForCustomTopic_WebhookDestination": {
            "$ref": "./examples/EventSubscriptions_CreateOrUpdateForCustomTopic_WebhookDestination.json"
          },
          "EventSubscriptions_CreateOrUpdateForCustomTopic_EventHubDestination": {
            "$ref": "./examples/EventSubscriptions_CreateOrUpdateForCustomTopic_EventHubDestination.json"
          },
          "EventSubscriptions_CreateOrUpdateForCustomTopic_HybridConnectionDestination": {
            "$ref": "./examples/EventSubscriptions_CreateOrUpdateForCustomTopic_HybridConnectionDestination.json"
          },
          "EventSubscriptions_CreateOrUpdateForCustomTopic_StorageQueueDestination": {
            "$ref": "./examples/EventSubscriptions_CreateOrUpdateForCustomTopic_StorageQueueDestination.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Delete an event subscription.",
        "description": "Delete an existing event subscription.",
        "operationId": "EventSubscriptions_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_DeleteForSubscription": {
            "$ref": "./examples/EventSubscriptions_DeleteForSubscription.json"
          },
          "EventSubscriptions_DeleteForResourceGroup": {
            "$ref": "./examples/EventSubscriptions_DeleteForResourceGroup.json"
          },
          "EventSubscriptions_DeleteForResource": {
            "$ref": "./examples/EventSubscriptions_DeleteForResource.json"
          },
          "EventSubscriptions_DeleteForCustomTopic": {
            "$ref": "./examples/EventSubscriptions_DeleteForCustomTopic.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Update an event subscription.",
        "description": "Asynchronously updates an existing event subscription.",
        "operationId": "EventSubscriptions_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of existing event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be updated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionUpdateParameters",
            "in": "body",
            "description": "Updated event subscription information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscriptionUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "EventSubscription update request accepted.",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_UpdateForSubscription": {
            "$ref": "./examples/EventSubscriptions_UpdateForSubscription.json"
          },
          "EventSubscriptions_UpdateForResourceGroup": {
            "$ref": "./examples/EventSubscriptions_UpdateForResourceGroup.json"
          },
          "EventSubscriptions_UpdateForResource": {
            "$ref": "./examples/EventSubscriptions_UpdateForResource.json"
          },
          "EventSubscriptions_UpdateForCustomTopic": {
            "$ref": "./examples/EventSubscriptions_UpdateForCustomTopic.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/{eventSubscriptionName}": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get an event subscription of a system topic.",
        "description": "Get an event subscription.",
        "operationId": "SystemTopicEventSubscriptions_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopicEventSubscriptions_Get": {
            "$ref": "./examples/SystemTopicEventSubscriptions_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Create or update an event subscription for a system topic.",
        "description": "Asynchronously creates or updates an event subscription with the specified parameters. Existing event subscriptions will be updated with this API.",
        "operationId": "SystemTopicEventSubscriptions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionInfo",
            "in": "body",
            "description": "Event subscription properties containing the destination and filter information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopicEventSubscriptions_CreateOrUpdate": {
            "$ref": "./examples/SystemTopicEventSubscriptions_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Delete an event subscription of a system topic.",
        "description": "Delete an event subscription of a system topic.",
        "operationId": "SystemTopicEventSubscriptions_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopicEventSubscriptions_Delete": {
            "$ref": "./examples/SystemTopicEventSubscriptions_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Update event subscription of a system topic.",
        "description": "Update event subscription of a system topic.",
        "operationId": "SystemTopicEventSubscriptions_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionUpdateParameters",
            "in": "body",
            "description": "Updated event subscription information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscriptionUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopicEventSubscriptions_Update": {
            "$ref": "./examples/SystemTopicEventSubscriptions_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get full URL of an event subscription of a system topic",
        "description": "Get the full endpoint URL for an event subscription of a system topic.",
        "operationId": "SystemTopicEventSubscriptions_GetFullUrl",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionFullUrl"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopicEventSubscriptions_GetFullUrl": {
            "$ref": "./examples/SystemTopicEventSubscriptions_GetFullUrl.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}/getFullUrl": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get full URL of an event subscription.",
        "description": "Get the full endpoint URL for an event subscription.",
        "operationId": "EventSubscriptions_GetFullUrl",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionFullUrl"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_GetFullUrlForSubscription": {
            "$ref": "./examples/EventSubscriptions_GetFullUrlForSubscription.json"
          },
          "EventSubscriptions_GetFullUrlForResourceGroup": {
            "$ref": "./examples/EventSubscriptions_GetFullUrlForResourceGroup.json"
          },
          "EventSubscriptions_GetFullUrlForResource": {
            "$ref": "./examples/EventSubscriptions_GetFullUrlForResource.json"
          },
          "EventSubscriptions_GetFullUrlForCustomTopic": {
            "$ref": "./examples/EventSubscriptions_GetFullUrlForCustomTopic.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List event subscriptions of a system topic.",
        "description": "List event subscriptions that belong to a specific system topic.",
        "operationId": "SystemTopicEventSubscriptions_ListBySystemTopic",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopicEventSubscriptions_ListBySystemTopic": {
            "$ref": "./examples/SystemTopicEventSubscriptions_ListBySystemTopic.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/{eventSubscriptionName}": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get an event subscription of a partner topic.",
        "description": "Get an event subscription of a partner topic.",
        "operationId": "PartnerTopicEventSubscriptions_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be found. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopicEventSubscriptions_Get": {
            "$ref": "./examples/PartnerTopicEventSubscriptions_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Create or update an event subscription of a partner topic.",
        "description": "Asynchronously creates or updates an event subscription of a partner topic with the specified parameters. Existing event subscriptions will be updated with this API.",
        "operationId": "PartnerTopicEventSubscriptions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionInfo",
            "in": "body",
            "description": "Event subscription properties containing the destination and filter information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopicEventSubscriptions_CreateOrUpdate": {
            "$ref": "./examples/PartnerTopicEventSubscriptions_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Delete an event subscription of a partner topic.",
        "description": "Delete an event subscription of a partner topic.",
        "operationId": "PartnerTopicEventSubscriptions_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopicEventSubscriptions_Delete": {
            "$ref": "./examples/PartnerTopicEventSubscriptions_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Update event subscription of a partner topic.",
        "description": "Update event subscription of a partner topic.",
        "operationId": "PartnerTopicEventSubscriptions_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionUpdateParameters",
            "in": "body",
            "description": "Updated event subscription information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscriptionUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopicEventSubscriptions_Update": {
            "$ref": "./examples/PartnerTopicEventSubscriptions_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/{eventSubscriptionName}/getFullUrl": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get full URL of an event subscription of a partner topic.",
        "description": "Get the full endpoint URL for an event subscription of a partner topic.",
        "operationId": "PartnerTopicEventSubscriptions_GetFullUrl",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionFullUrl"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopicEventSubscriptions_GetFullUrl": {
            "$ref": "./examples/PartnerTopicEventSubscriptions_GetFullUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List event subscriptions of a partner topic.",
        "description": "List event subscriptions that belong to a specific partner topic.",
        "operationId": "PartnerTopicEventSubscriptions_ListByPartnerTopic",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopicEventSubscriptions_ListByPartnerTopic": {
            "$ref": "./examples/PartnerTopicEventSubscriptions_ListByPartnerTopic.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get an aggregated list of all global event subscriptions under an Azure subscription.",
        "description": "List all aggregated global event subscriptions under a specific Azure subscription.",
        "operationId": "EventSubscriptions_ListGlobalBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_ListGlobalBySubscription": {
            "$ref": "./examples/EventSubscriptions_ListGlobalBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all global event subscriptions for a topic type.",
        "description": "List all global event subscriptions under an Azure subscription for a topic type.",
        "operationId": "EventSubscriptions_ListGlobalBySubscriptionForTopicType",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "topicTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_ListGlobalBySubscriptionForTopicType": {
            "$ref": "./examples/EventSubscriptions_ListGlobalBySubscriptionForTopicType.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all global event subscriptions under an Azure subscription and resource group.",
        "description": "List all global event subscriptions under a specific Azure subscription and resource group.",
        "operationId": "EventSubscriptions_ListGlobalByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_ListGlobalByResourceGroup": {
            "$ref": "./examples/EventSubscriptions_ListGlobalByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all global event subscriptions under a resource group for a topic type.",
        "description": "List all global event subscriptions under a resource group for a specific topic type.",
        "operationId": "EventSubscriptions_ListGlobalByResourceGroupForTopicType",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_ListGlobalByResourceGroupForTopicType": {
            "$ref": "./examples/EventSubscriptions_ListGlobalByResourceGroupForTopicType.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all regional event subscriptions under an Azure subscription.",
        "description": "List all event subscriptions from the given location under a specific Azure subscription.",
        "operationId": "EventSubscriptions_ListRegionalBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Name of the location.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_ListRegionalBySubscription": {
            "$ref": "./examples/EventSubscriptions_ListRegionalBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all regional event subscriptions under an Azure subscription and resource group.",
        "description": "List all event subscriptions from the given location under a specific Azure subscription and resource group.",
        "operationId": "EventSubscriptions_ListRegionalByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Name of the location.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_ListRegionalByResourceGroup": {
            "$ref": "./examples/EventSubscriptions_ListRegionalByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all regional event subscriptions under an Azure subscription for a topic type.",
        "description": "List all event subscriptions from the given location under a specific Azure subscription and topic type.",
        "operationId": "EventSubscriptions_ListRegionalBySubscriptionForTopicType",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Name of the location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_ListRegionalBySubscriptionForTopicType": {
            "$ref": "./examples/EventSubscriptions_ListRegionalBySubscriptionForTopicType.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/locations/{location}/topicTypes/{topicTypeName}/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all regional event subscriptions under an Azure subscription and resource group for a topic type.",
        "description": "List all event subscriptions from the given location under a specific Azure subscription and resource group and topic type.",
        "operationId": "EventSubscriptions_ListRegionalByResourceGroupForTopicType",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Name of the location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_ListRegionalByResourceGroupForTopicType": {
            "$ref": "./examples/EventSubscriptions_ListRegionalByResourceGroupForTopicType.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all event subscriptions for a specific topic.",
        "description": "List all event subscriptions that have been created for a specific topic.",
        "operationId": "EventSubscriptions_ListByResource",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "Namespace of the provider of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceTypeName",
            "in": "path",
            "description": "Name of the resource type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_ListByResource": {
            "$ref": "./examples/EventSubscriptions_ListByResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/domains/{domainName}/topics/{topicName}/providers/Microsoft.EventGrid/eventSubscriptions": {
      "get": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "List all event subscriptions for a specific domain topic.",
        "description": "List all event subscriptions that have been created for a specific domain topic.",
        "operationId": "EventSubscriptions_ListByDomainTopic",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Name of the top level domain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the domain topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscriptionsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_ListByDomainTopic": {
            "$ref": "./examples/EventSubscriptions_ListByDomainTopic.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.EventGrid/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get delivery attributes for an event subscription.",
        "description": "Get all delivery attributes for an event subscription.",
        "operationId": "EventSubscriptions_GetDeliveryAttributes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the event subscription. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryAttributeListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "EventSubscriptions_GetDeliveryAttributes": {
            "$ref": "./examples/EventSubscriptions_GetDeliveryAttributes.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get delivery attributes for an event subscription.",
        "description": "Get all delivery attributes for an event subscription.",
        "operationId": "SystemTopicEventSubscriptions_GetDeliveryAttributes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryAttributeListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopicEventSubscriptions_GetDeliveryAttributes": {
            "$ref": "./examples/SystemTopicEventSubscriptions_GetDeliveryAttributes.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/eventSubscriptions/{eventSubscriptionName}/getDeliveryAttributes": {
      "post": {
        "tags": [
          "EventSubscriptions"
        ],
        "summary": "Get delivery attributes for an event subscription of a partner topic.",
        "description": "Get all delivery attributes for an event subscription of a partner topic.",
        "operationId": "PartnerTopicEventSubscriptions_GetDeliveryAttributes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventSubscriptionName",
            "in": "path",
            "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeliveryAttributeListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopicEventSubscriptions_GetDeliveryAttributes": {
            "$ref": "./examples/PartnerTopicEventSubscriptions_GetDeliveryAttributes.json"
          }
        }
      }
    },
    "/providers/Microsoft.EventGrid/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "List available operations.",
        "description": "List the available operations supported by the Microsoft.EventGrid resource provider.",
        "operationId": "Operations_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}": {
      "get": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "Get a partner namespace.",
        "description": "Get properties of a partner namespace.",
        "operationId": "PartnerNamespaces_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerNamespace"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerNamespaces_Get": {
            "$ref": "./examples/PartnerNamespaces_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "Create a partner namespace.",
        "description": "Asynchronously creates a new partner namespace with the specified parameters.",
        "operationId": "PartnerNamespaces_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceInfo",
            "in": "body",
            "description": "PartnerNamespace information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerNamespace"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PartnerNamespace"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerNamespaces_CreateOrUpdate": {
            "$ref": "./examples/PartnerNamespaces_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "Delete a partner namespace.",
        "description": "Delete existing partner namespace.",
        "operationId": "PartnerNamespaces_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerNamespaces_Delete": {
            "$ref": "./examples/PartnerNamespaces_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "Update a partner namespace.",
        "description": "Asynchronously updates a partner namespace with the specified parameters.",
        "operationId": "PartnerNamespaces_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceUpdateParameters",
            "in": "body",
            "description": "Partner namespace update information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerNamespaceUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Partner namespace update request accepted.",
            "schema": {
              "$ref": "#/definitions/PartnerNamespace"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerNamespaces_Update": {
            "$ref": "./examples/PartnerNamespaces_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerNamespaces": {
      "get": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "List partner namespaces under an Azure subscription.",
        "description": "List all the partner namespaces under an Azure subscription.",
        "operationId": "PartnerNamespaces_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerNamespacesListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerNamespaces_ListBySubscription": {
            "$ref": "./examples/PartnerNamespaces_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces": {
      "get": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "List partner namespaces under a resource group.",
        "description": "List all the partner namespaces under a resource group.",
        "operationId": "PartnerNamespaces_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerNamespacesListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerNamespaces_ListByResourceGroup": {
            "$ref": "./examples/PartnerNamespaces_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/listKeys": {
      "post": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "List keys for a partner namespace.",
        "description": "List the two keys used to publish to a partner namespace.",
        "operationId": "PartnerNamespaces_ListSharedAccessKeys",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerNamespaceSharedAccessKeys"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerNamespaces_ListSharedAccessKeys": {
            "$ref": "./examples/PartnerNamespaces_ListSharedAccessKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerNamespaces/{partnerNamespaceName}/regenerateKey": {
      "post": {
        "tags": [
          "PartnerNamespaces"
        ],
        "summary": "Regenerate key for a partner namespace.",
        "description": "Regenerate a shared access key for a partner namespace.",
        "operationId": "PartnerNamespaces_RegenerateKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerNamespaceName",
            "in": "path",
            "description": "Name of the partner namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "regenerateKeyRequest",
            "in": "body",
            "description": "Request body to regenerate key.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerNamespaceRegenerateKeyRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerNamespaceSharedAccessKeys"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerNamespaces_RegenerateKey": {
            "$ref": "./examples/PartnerNamespaces_RegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}": {
      "get": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "Get a partner registration.",
        "description": "Gets a partner registration with the specified parameters.",
        "operationId": "PartnerRegistrations_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerRegistrationName",
            "in": "path",
            "description": "Name of the partner registration.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerRegistration"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerRegistrations_Get": {
            "$ref": "./examples/PartnerRegistrations_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "Create a partner registration.",
        "description": "Creates a new partner registration with the specified parameters.",
        "operationId": "PartnerRegistrations_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerRegistrationName",
            "in": "path",
            "description": "Name of the partner registration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerRegistrationInfo",
            "in": "body",
            "description": "PartnerRegistration information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerRegistration"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerRegistration"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/PartnerRegistration"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerRegistrations_CreateOrUpdate": {
            "$ref": "./examples/PartnerRegistrations_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "Delete a partner registration.",
        "description": "Deletes a partner registration with the specified parameters.",
        "operationId": "PartnerRegistrations_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerRegistrationName",
            "in": "path",
            "description": "Name of the partner registration.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerRegistrations_Delete": {
            "$ref": "./examples/PartnerRegistrations_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "Update a partner registration.",
        "description": "Updates a partner registration with the specified parameters.",
        "operationId": "PartnerRegistrations_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerRegistrationName",
            "in": "path",
            "description": "Name of the partner registration.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerRegistrationUpdateParameters",
            "in": "body",
            "description": "Partner registration update information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerRegistrationUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Partner registration update request accepted.",
            "schema": {
              "$ref": "#/definitions/PartnerRegistration"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerRegistrations_Update": {
            "$ref": "./examples/PartnerRegistrations_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerRegistrations": {
      "get": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "List partner registrations under an Azure subscription.",
        "description": "List all the partner registrations under an Azure subscription.",
        "operationId": "PartnerRegistrations_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerRegistrationsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerRegistrations_ListBySubscription": {
            "$ref": "./examples/PartnerRegistrations_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations": {
      "get": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "List partner registrations under a resource group.",
        "description": "List all the partner registrations under a resource group.",
        "operationId": "PartnerRegistrations_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerRegistrationsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerRegistrations_ListByResourceGroup": {
            "$ref": "./examples/PartnerRegistrations_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.EventGrid/partnerRegistrations": {
      "get": {
        "tags": [
          "PartnerRegistrations"
        ],
        "summary": "List all available partners registrations.",
        "description": "List all partners registrations.",
        "operationId": "PartnerRegistrations_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerRegistrationsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerRegistrations_List": {
            "$ref": "./examples/PartnerRegistrations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}": {
      "get": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "Get a partner topic.",
        "description": "Get properties of a partner topic.",
        "operationId": "PartnerTopics_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerTopic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopics_Get": {
            "$ref": "./examples/PartnerTopics_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "Delete a partner topic.",
        "description": "Delete existing partner topic.",
        "operationId": "PartnerTopics_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopics_Delete": {
            "$ref": "./examples/PartnerTopics_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "Update a partner topic.",
        "description": "Asynchronously updates a partner topic with the specified parameters.",
        "operationId": "PartnerTopics_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicUpdateParameters",
            "in": "body",
            "description": "PartnerTopic update information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnerTopicUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Partner Topic update request accepted.",
            "schema": {
              "$ref": "#/definitions/PartnerTopic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopics_Update": {
            "$ref": "./examples/PartnerTopics_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/partnerTopics": {
      "get": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "List partner topics under an Azure subscription.",
        "description": "List all the partner topics under an Azure subscription.",
        "operationId": "PartnerTopics_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerTopicsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopics_ListBySubscription": {
            "$ref": "./examples/PartnerTopics_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics": {
      "get": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "List partner topics under a resource group.",
        "description": "List all the partner topics under a resource group.",
        "operationId": "PartnerTopics_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerTopicsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopics_ListByResourceGroup": {
            "$ref": "./examples/PartnerTopics_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/activate": {
      "post": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "Activate a partner topic.",
        "description": "Activate a newly created partner topic.",
        "operationId": "PartnerTopics_Activate",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerTopic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopics_Activate": {
            "$ref": "./examples/PartnerTopics_Activate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerTopics/{partnerTopicName}/deactivate": {
      "post": {
        "tags": [
          "PartnerTopics"
        ],
        "summary": "Deactivate a partner topic.",
        "description": "Deactivate specific partner topic.",
        "operationId": "PartnerTopics_Deactivate",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerTopicName",
            "in": "path",
            "description": "Name of the partner topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PartnerTopic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PartnerTopics_Deactivate": {
            "$ref": "./examples/PartnerTopics_Deactivate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "summary": "Get a specific private endpoint connection.",
        "description": "Get a specific private endpoint connection under a topic or domain.",
        "operationId": "PrivateEndpointConnections_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentType",
            "in": "path",
            "description": "The type of the parent resource. This can be either \\'topics\\' or \\'domains\\'.",
            "required": true,
            "type": "string",
            "enum": [
              "topics",
              "domains"
            ]
          },
          {
            "name": "parentName",
            "in": "path",
            "description": "The name of the parent resource (namely, either, the topic name or domain name).",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection connection.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Get": {
            "$ref": "./examples/PrivateEndpointConnections_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "summary": "Update a specific private endpoint connection.",
        "description": "Update a specific private endpoint connection under a topic or domain.",
        "operationId": "PrivateEndpointConnections_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentType",
            "in": "path",
            "description": "The type of the parent resource. This can be either \\'topics\\' or \\'domains\\'.",
            "required": true,
            "type": "string",
            "enum": [
              "topics",
              "domains"
            ]
          },
          {
            "name": "parentName",
            "in": "path",
            "description": "The name of the parent resource (namely, either, the topic name or domain name).",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "description": "The private endpoint connection object to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Update": {
            "$ref": "./examples/PrivateEndpointConnections_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "summary": "Delete a specific private endpoint connection.",
        "description": "Delete a specific private endpoint connection under a topic or domain.",
        "operationId": "PrivateEndpointConnections_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentType",
            "in": "path",
            "description": "The type of the parent resource. This can be either \\'topics\\' or \\'domains\\'.",
            "required": true,
            "type": "string",
            "enum": [
              "topics",
              "domains"
            ]
          },
          {
            "name": "parentName",
            "in": "path",
            "description": "The name of the parent resource (namely, either, the topic name or domain name).",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection connection.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Delete": {
            "$ref": "./examples/PrivateEndpointConnections_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "summary": "Lists all private endpoint connections under a resource.",
        "description": "Get all private endpoint connections under a topic or domain.",
        "operationId": "PrivateEndpointConnections_ListByResource",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentType",
            "in": "path",
            "description": "The type of the parent resource. This can be either \\'topics\\' or \\'domains\\'.",
            "required": true,
            "type": "string",
            "enum": [
              "topics",
              "domains"
            ]
          },
          {
            "name": "parentName",
            "in": "path",
            "description": "The name of the parent resource (namely, either, the topic name or domain name).",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_ListByResource": {
            "$ref": "./examples/PrivateEndpointConnections_ListByResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources/{privateLinkResourceName}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "summary": "Get a private link resource.",
        "description": "Get properties of a private link resource.",
        "operationId": "PrivateLinkResources_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentType",
            "in": "path",
            "description": "The type of the parent resource. This can be either \\'topics\\' or \\'domains\\'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentName",
            "in": "path",
            "description": "The name of the parent resource (namely, either, the topic name or domain name).",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateLinkResourceName",
            "in": "path",
            "description": "The name of private link resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_Get": {
            "$ref": "./examples/PrivateLinkResources_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/{parentType}/{parentName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "summary": "List private link resources under specific topic or domain.",
        "description": "List all the private link resources under a topic or domain.",
        "operationId": "PrivateLinkResources_ListByResource",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentType",
            "in": "path",
            "description": "The type of the parent resource. This can be either \\'topics\\' or \\'domains\\'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentName",
            "in": "path",
            "description": "The name of the parent resource (namely, either, the topic name or domain name).",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourcesListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_ListByResource": {
            "$ref": "./examples/PrivateLinkResources_ListByResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics/{systemTopicName}": {
      "get": {
        "tags": [
          "SystemTopics"
        ],
        "summary": "Get a system topic.",
        "description": "Get properties of a system topic.",
        "operationId": "SystemTopics_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SystemTopic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopics_Get": {
            "$ref": "./examples/SystemTopics_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "SystemTopics"
        ],
        "summary": "Create a system topic.",
        "description": "Asynchronously creates a new system topic with the specified parameters.",
        "operationId": "SystemTopics_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicInfo",
            "in": "body",
            "description": "System Topic information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemTopic"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SystemTopic"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SystemTopic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopics_CreateOrUpdate": {
            "$ref": "./examples/SystemTopics_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "SystemTopics"
        ],
        "summary": "Delete a system topic.",
        "description": "Delete existing system topic.",
        "operationId": "SystemTopics_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopics_Delete": {
            "$ref": "./examples/SystemTopics_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "SystemTopics"
        ],
        "summary": "Update a system topic.",
        "description": "Asynchronously updates a system topic with the specified parameters.",
        "operationId": "SystemTopics_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicName",
            "in": "path",
            "description": "Name of the system topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemTopicUpdateParameters",
            "in": "body",
            "description": "SystemTopic update information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemTopicUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "System Topic update request accepted.",
            "schema": {
              "$ref": "#/definitions/SystemTopic"
            }
          },
          "201": {
            "description": "System Topic update request accepted.",
            "schema": {
              "$ref": "#/definitions/SystemTopic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopics_Update": {
            "$ref": "./examples/SystemTopics_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/systemTopics": {
      "get": {
        "tags": [
          "SystemTopics"
        ],
        "summary": "List system topics under an Azure subscription.",
        "description": "List all the system topics under an Azure subscription.",
        "operationId": "SystemTopics_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SystemTopicsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopics_ListBySubscription": {
            "$ref": "./examples/SystemTopics_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/systemTopics": {
      "get": {
        "tags": [
          "SystemTopics"
        ],
        "summary": "List system topics under a resource group.",
        "description": "List all the system topics under a resource group.",
        "operationId": "SystemTopics_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SystemTopicsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "SystemTopics_ListByResourceGroup": {
            "$ref": "./examples/SystemTopics_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Get a topic.",
        "description": "Get properties of a topic.",
        "operationId": "Topics_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Topics_Get": {
            "$ref": "./examples/Topics_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Topics"
        ],
        "summary": "Create a topic.",
        "description": "Asynchronously creates a new topic with the specified parameters.",
        "operationId": "Topics_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicInfo",
            "in": "body",
            "description": "Topic information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Topics_CreateOrUpdate": {
            "$ref": "./examples/Topics_CreateOrUpdate.json"
          },
          "Topics_CreateOrUpdateForAzureArc": {
            "$ref": "./examples/Topics_CreateOrUpdateForAzureArc.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Topics"
        ],
        "summary": "Delete a topic.",
        "description": "Delete existing topic.",
        "operationId": "Topics_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Topics_Delete": {
            "$ref": "./examples/Topics_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Topics"
        ],
        "summary": "Update a topic.",
        "description": "Asynchronously updates a topic with the specified parameters.",
        "operationId": "Topics_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicUpdateParameters",
            "in": "body",
            "description": "Topic update information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TopicUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Topic update request accepted.",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Topics_Update": {
            "$ref": "./examples/Topics_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/topics": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "List topics under an Azure subscription.",
        "description": "List all the topics under an Azure subscription.",
        "operationId": "Topics_ListBySubscription",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TopicsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Topics_ListBySubscription": {
            "$ref": "./examples/Topics_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "List topics under a resource group.",
        "description": "List all the topics under a resource group.",
        "operationId": "Topics_ListByResourceGroup",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TopicsListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Topics_ListByResourceGroup": {
            "$ref": "./examples/Topics_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/listKeys": {
      "post": {
        "tags": [
          "Topics"
        ],
        "summary": "List keys for a topic.",
        "description": "List the two keys used to publish to a topic.",
        "operationId": "Topics_ListSharedAccessKeys",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TopicSharedAccessKeys"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Topics_ListSharedAccessKeys": {
            "$ref": "./examples/Topics_ListSharedAccessKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}/regenerateKey": {
      "post": {
        "tags": [
          "Topics"
        ],
        "summary": "Regenerate key for a topic.",
        "description": "Regenerate a shared access key for a topic.",
        "operationId": "Topics_RegenerateKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "regenerateKeyRequest",
            "in": "body",
            "description": "Request body to regenerate key.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TopicRegenerateKeyRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TopicSharedAccessKeys"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Topics_RegenerateKey": {
            "$ref": "./examples/Topics_RegenerateKey.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{providerNamespace}/{resourceTypeName}/{resourceName}/providers/Microsoft.EventGrid/eventTypes": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "List topic event types.",
        "description": "List event types for a topic.",
        "operationId": "Topics_ListEventTypes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group within the user's subscription.",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerNamespace",
            "in": "path",
            "description": "Namespace of the provider of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Name of the topic.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventTypesListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "Topics_ListEventTypes": {
            "$ref": "./examples/Topics_ListEventTypes.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/{scope}/providers/Microsoft.EventGrid/extensionTopics/default": {
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Get properties of an extension topic.",
        "description": "Get the properties of an extension topic.",
        "operationId": "ExtensionTopics_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The identifier of the resource to which extension topic is queried. The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace. For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for Azure resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtensionTopic"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "ExtensionTopics_Get": {
            "$ref": "./examples/ExtensionTopics_Get.json"
          }
        }
      }
    },
    "/providers/Microsoft.EventGrid/topicTypes": {
      "get": {
        "tags": [
          "TopicTypes"
        ],
        "summary": "List topic types.",
        "description": "List all registered topic types.",
        "operationId": "TopicTypes_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TopicTypesListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "TopicTypes_List": {
            "$ref": "./examples/TopicTypes_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}": {
      "get": {
        "tags": [
          "TopicTypes"
        ],
        "summary": "Get a topic type.",
        "description": "Get information about a topic type.",
        "operationId": "TopicTypes_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "topicTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TopicTypeInfo"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "TopicTypes_Get": {
            "$ref": "./examples/TopicTypes_Get.json"
          }
        }
      }
    },
    "/providers/Microsoft.EventGrid/topicTypes/{topicTypeName}/eventTypes": {
      "get": {
        "tags": [
          "TopicTypes"
        ],
        "summary": "List event types.",
        "description": "List event types for a topic type.",
        "operationId": "TopicTypes_ListEventTypes",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "topicTypeName",
            "in": "path",
            "description": "Name of the topic type.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventTypesListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 404 Not Found.\n\n * 500 Internal Server Error."
          }
        },
        "x-ms-examples": {
          "TopicTypes_ListEventTypes": {
            "$ref": "./examples/TopicTypes_ListEventTypes.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    }
  },
  "definitions": {
    "DomainProperties": {
      "description": "Properties of the Domain.",
      "type": "object",
      "properties": {
        "privateEndpointConnections": {
          "description": "List of private endpoint connections.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the domain.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DomainProvisioningState",
            "modelAsString": true
          }
        },
        "endpoint": {
          "description": "Endpoint for the domain.",
          "type": "string",
          "readOnly": true
        },
        "inputSchema": {
          "description": "This determines the format that Event Grid should expect for incoming events published to the domain.",
          "enum": [
            "EventGridSchema",
            "CustomEventSchema",
            "CloudEventSchemaV1_0"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InputSchema",
            "modelAsString": true
          },
          "default": "EventGridSchema"
        },
        "inputSchemaMapping": {
          "$ref": "#/definitions/InputSchemaMapping",
          "description": "Information about the InputSchemaMapping which specified the info about mapping event payload."
        },
        "metricResourceId": {
          "description": "Metric resource id for the domain.",
          "type": "string",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundIpRule"
          }
        }
      }
    },
    "ResourceSku": {
      "description": "Describes an EventGrid Resource Sku.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The Sku name of the resource. The possible values are: Basic or Premium.",
          "default": "Basic",
          "enum": [
            "Basic",
            "Premium"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Sku",
            "modelAsString": true
          }
        }
      }
    },
    "IdentityInfo": {
      "description": "The identity information for the resource.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true
          }
        },
        "principalId": {
          "description": "The principal ID of resource identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant ID of resource.",
          "type": "string"
        },
        "userAssignedIdentities": {
          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserIdentityProperties"
          }
        }
      }
    },
    "InboundIpRule": {
      "type": "object",
      "properties": {
        "ipMask": {
          "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
          "type": "string"
        },
        "action": {
          "description": "Action to perform based on the match or no match of the IpMask.",
          "enum": [
            "Allow"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IpActionType",
            "modelAsString": true
          }
        }
      }
    },
    "UserIdentityProperties": {
      "description": "The information about the user identity.",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "The principal id of user assigned identity.",
          "type": "string"
        },
        "clientId": {
          "description": "The client id of user assigned identity.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "Definition of a Resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection resource.",
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The Private Endpoint resource for this Connection."
        },
        "groupIds": {
          "description": "GroupIds from the private link service resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/ConnectionState",
          "description": "Details about the state of the connection."
        },
        "provisioningState": {
          "description": "Provisioning state of the Private Endpoint Connection.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateEndpoint": {
      "description": "PrivateEndpoint information.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ARM identifier for Private Endpoint.",
          "type": "string"
        }
      }
    },
    "ConnectionState": {
      "description": "ConnectionState information.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the connection.",
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PersistedConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "description": "Description of the connection state.",
          "type": "string"
        },
        "actionsRequired": {
          "description": "Actions required (if any).",
          "type": "string"
        }
      }
    },
    "JsonInputSchemaMappingProperties": {
      "description": "This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema.",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/JsonField",
          "description": "The mapping information for the Id property of the Event Grid Event."
        },
        "topic": {
          "$ref": "#/definitions/JsonField",
          "description": "The mapping information for the Topic property of the Event Grid Event."
        },
        "eventTime": {
          "$ref": "#/definitions/JsonField",
          "description": "The mapping information for the EventTime property of the Event Grid Event."
        },
        "eventType": {
          "$ref": "#/definitions/JsonFieldWithDefault",
          "description": "The mapping information for the EventType property of the Event Grid Event."
        },
        "subject": {
          "$ref": "#/definitions/JsonFieldWithDefault",
          "description": "The mapping information for the Subject property of the Event Grid Event."
        },
        "dataVersion": {
          "$ref": "#/definitions/JsonFieldWithDefault",
          "description": "The mapping information for the DataVersion property of the Event Grid Event."
        }
      }
    },
    "JsonField": {
      "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema.",
      "type": "object",
      "properties": {
        "sourceField": {
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
          "type": "string"
        }
      }
    },
    "JsonFieldWithDefault": {
      "description": "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided.",
      "type": "object",
      "properties": {
        "sourceField": {
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
          "type": "string"
        },
        "defaultValue": {
          "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
          "type": "string"
        }
      }
    },
    "JsonInputSchemaMapping": {
      "description": "This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/InputSchemaMapping"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/JsonInputSchemaMappingProperties",
          "description": "JSON Properties of the input schema mapping",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "Json"
    },
    "InputSchemaMapping": {
      "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.",
      "required": [
        "inputSchemaMappingType"
      ],
      "type": "object",
      "properties": {
        "inputSchemaMappingType": {
          "description": "Type of the custom mapping",
          "enum": [
            "Json"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InputSchemaMappingType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "inputSchemaMappingType"
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Properties of the PrivateEndpointConnection.",
          "x-ms-client-flatten": true
        }
      }
    },
    "TrackedResource": {
      "description": "Definition of a Tracked Resource.",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "location": {
          "description": "Location of the resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Domain": {
      "description": "EventGrid Domain.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DomainProperties",
          "description": "Properties of the domain.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/ResourceSku",
          "description": "The Sku pricing tier for the domain."
        },
        "identity": {
          "$ref": "#/definitions/IdentityInfo",
          "description": "Identity information for the resource."
        },
        "systemData": {
          "description": "The system metadata relating to Domain resource.",
          "type": "object",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "DomainUpdateParameters": {
      "description": "Properties of the Domain update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the domains resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/DomainUpdateParameterProperties",
          "description": "Properties of the resource.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/IdentityInfo",
          "description": "Identity information for the resource."
        },
        "sku": {
          "$ref": "#/definitions/ResourceSku",
          "description": "The Sku pricing tier for the domain."
        }
      }
    },
    "DomainUpdateParameterProperties": {
      "description": "Information of domain update parameter properties.",
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainUpdateParameterProperties.InboundIpRules\" />",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundIpRule"
          }
        }
      }
    },
    "DomainsListResult": {
      "description": "Result of the List Domains operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Domains",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Domain"
          }
        },
        "nextLink": {
          "description": "A link for the next page of domains",
          "type": "string"
        }
      }
    },
    "DomainSharedAccessKeys": {
      "description": "Shared access keys of the Domain.",
      "type": "object",
      "properties": {
        "key1": {
          "description": "Shared access key1 for the domain.",
          "type": "string"
        },
        "key2": {
          "description": "Shared access key2 for the domain.",
          "type": "string"
        }
      }
    },
    "DomainRegenerateKeyRequest": {
      "description": "Domain regenerate share access key request.",
      "required": [
        "keyName"
      ],
      "type": "object",
      "properties": {
        "keyName": {
          "description": "Key name to regenerate key1 or key2.",
          "type": "string"
        }
      }
    },
    "DomainTopicProperties": {
      "description": "Properties of the Domain Topic.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the domain topic.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DomainTopicProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "DomainTopic": {
      "description": "Domain Topic.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DomainTopicProperties",
          "description": "Properties of the Domain Topic.",
          "readOnly": true,
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "The system metadata relating to Domain Topic resource.",
          "type": "object",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "DomainTopicsListResult": {
      "description": "Result of the List Domain Topics operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Domain Topics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DomainTopic"
          }
        },
        "nextLink": {
          "description": "A link for the next page of domain topics.",
          "type": "string"
        }
      }
    },
    "EventChannelProperties": {
      "description": "Properties of the Event Channel.",
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/EventChannelSource",
          "description": "Source of the event channel. This represents a unique resource in the partner's resource model."
        },
        "destination": {
          "$ref": "#/definitions/EventChannelDestination",
          "description": "Represents the destination of an event channel."
        },
        "provisioningState": {
          "description": "Provisioning state of the event channel.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "EventChannelProvisioningState",
            "modelAsString": true
          }
        },
        "partnerTopicReadinessState": {
          "description": "The readiness state of the corresponding partner topic.",
          "enum": [
            "NotActivatedByUserYet",
            "ActivatedByUser",
            "DeactivatedByUser",
            "DeletedByUser"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PartnerTopicReadinessState",
            "modelAsString": true
          }
        },
        "expirationTimeIfNotActivatedUtc": {
          "format": "date-time",
          "description": "Expiration time of the event channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe event channel and corresponding partner topic are deleted.",
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/EventChannelFilter",
          "description": "Information about the filter for the event channel."
        },
        "partnerTopicFriendlyDescription": {
          "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
          "type": "string"
        }
      }
    },
    "EventChannelSource": {
      "description": "Properties of the source of an event channel.",
      "type": "object",
      "properties": {
        "source": {
          "description": "The identifier of the resource that's the source of the events.\r\nThis represents a unique resource in the partner's resource model.",
          "type": "string"
        }
      }
    },
    "EventChannelDestination": {
      "description": "Properties of the destination of an event channel.",
      "type": "object",
      "properties": {
        "azureSubscriptionId": {
          "description": "Azure subscription ID of the customer creating the event channel. The partner topic\r\nassociated with the event channel will be created under this Azure subscription.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "Azure Resource Group of the customer creating the event channel. The partner topic\r\nassociated with the event channel will be created under this resource group.",
          "type": "string"
        },
        "partnerTopicName": {
          "description": "Name of the partner topic associated with the event channel.",
          "type": "string"
        }
      }
    },
    "EventChannelFilter": {
      "description": "Filter for the Event Channel.",
      "type": "object",
      "properties": {
        "enableAdvancedFilteringOnArrays": {
          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
          "type": "boolean"
        },
        "advancedFilters": {
          "description": "An array of advanced filters that are used for filtering event channels.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedFilter"
          }
        }
      }
    },
    "NumberInAdvancedFilter": {
      "description": "NumberIn Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "x-ms-discriminator-value": "NumberIn"
    },
    "NumberNotInAdvancedFilter": {
      "description": "NumberNotIn Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "x-ms-discriminator-value": "NumberNotIn"
    },
    "NumberLessThanAdvancedFilter": {
      "description": "NumberLessThan Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "NumberLessThan"
    },
    "NumberGreaterThanAdvancedFilter": {
      "description": "NumberGreaterThan Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "NumberGreaterThan"
    },
    "NumberLessThanOrEqualsAdvancedFilter": {
      "description": "NumberLessThanOrEquals Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "NumberLessThanOrEquals"
    },
    "NumberGreaterThanOrEqualsAdvancedFilter": {
      "description": "NumberGreaterThanOrEquals Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      },
      "x-ms-discriminator-value": "NumberGreaterThanOrEquals"
    },
    "BoolEqualsAdvancedFilter": {
      "description": "BoolEquals Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "value": {
          "description": "The boolean filter value.",
          "type": "boolean"
        }
      },
      "x-ms-discriminator-value": "BoolEquals"
    },
    "StringInAdvancedFilter": {
      "description": "StringIn Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringIn"
    },
    "StringNotInAdvancedFilter": {
      "description": "StringNotIn Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringNotIn"
    },
    "StringBeginsWithAdvancedFilter": {
      "description": "StringBeginsWith Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringBeginsWith"
    },
    "StringEndsWithAdvancedFilter": {
      "description": "StringEndsWith Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringEndsWith"
    },
    "StringContainsAdvancedFilter": {
      "description": "StringContains Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringContains"
    },
    "NumberInRangeAdvancedFilter": {
      "description": "NumberInRange Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          }
        }
      },
      "x-ms-discriminator-value": "NumberInRange"
    },
    "NumberNotInRangeAdvancedFilter": {
      "description": "NumberNotInRange Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "format": "double",
              "type": "number"
            }
          }
        }
      },
      "x-ms-discriminator-value": "NumberNotInRange"
    },
    "StringNotBeginsWithAdvancedFilter": {
      "description": "StringNotBeginsWith Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringNotBeginsWith"
    },
    "StringNotEndsWithAdvancedFilter": {
      "description": "StringNotEndsWith Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringNotEndsWith"
    },
    "StringNotContainsAdvancedFilter": {
      "description": "StringNotContains Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "StringNotContains"
    },
    "IsNullOrUndefinedAdvancedFilter": {
      "description": "IsNullOrUndefined Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "IsNullOrUndefined"
    },
    "IsNotNullAdvancedFilter": {
      "description": "IsNotNull Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "IsNotNull"
    },
    "AdvancedFilter": {
      "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
      "required": [
        "operatorType"
      ],
      "type": "object",
      "properties": {
        "operatorType": {
          "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
          "enum": [
            "NumberIn",
            "NumberNotIn",
            "NumberLessThan",
            "NumberGreaterThan",
            "NumberLessThanOrEquals",
            "NumberGreaterThanOrEquals",
            "BoolEquals",
            "StringIn",
            "StringNotIn",
            "StringBeginsWith",
            "StringEndsWith",
            "StringContains",
            "NumberInRange",
            "NumberNotInRange",
            "StringNotBeginsWith",
            "StringNotEndsWith",
            "StringNotContains",
            "IsNullOrUndefined",
            "IsNotNull"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AdvancedFilterOperatorType",
            "modelAsString": true
          }
        },
        "key": {
          "description": "The field/property in the event based on which you want to filter.",
          "type": "string"
        }
      },
      "discriminator": "operatorType"
    },
    "EventChannel": {
      "description": "Event Channel.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventChannelProperties",
          "description": "Properties of the EventChannel.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "The system metadata relating to Event Channel resource.",
          "type": "object",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "EventChannelsListResult": {
      "description": "Result of the List Event Channels operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Event Channels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventChannel"
          }
        },
        "nextLink": {
          "description": "A link for the next page of event channels",
          "type": "string"
        }
      }
    },
    "EventSubscriptionProperties": {
      "description": "Properties of the Event Subscription.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Name of the topic of the event subscription.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the event subscription.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "AwaitingManualAction"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "EventSubscriptionProvisioningState",
            "modelAsString": true
          }
        },
        "destination": {
          "$ref": "#/definitions/EventSubscriptionDestination",
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        },
        "deliveryWithResourceIdentity": {
          "$ref": "#/definitions/DeliveryWithResourceIdentity",
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering."
        },
        "filter": {
          "$ref": "#/definitions/EventSubscriptionFilter",
          "description": "Information about the filter for the event subscription."
        },
        "labels": {
          "description": "List of user defined labels.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expirationTimeUtc": {
          "format": "date-time",
          "description": "Expiration time of the event subscription.",
          "type": "string"
        },
        "eventDeliverySchema": {
          "description": "The event delivery schema for the event subscription.",
          "default": "EventGridSchema",
          "enum": [
            "EventGridSchema",
            "CustomInputSchema",
            "CloudEventSchemaV1_0"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EventDeliverySchema",
            "modelAsString": true
          }
        },
        "retryPolicy": {
          "$ref": "#/definitions/RetryPolicy",
          "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events."
        },
        "deadLetterDestination": {
          "$ref": "#/definitions/DeadLetterDestination",
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        },
        "deadLetterWithResourceIdentity": {
          "$ref": "#/definitions/DeadLetterWithResourceIdentity",
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering."
        }
      }
    },
    "DeliveryWithResourceIdentity": {
      "description": "Information about the delivery for an event subscription with resource identity.",
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/EventSubscriptionIdentity",
          "description": "The identity to use when delivering events."
        },
        "destination": {
          "$ref": "#/definitions/EventSubscriptionDestination",
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        }
      }
    },
    "EventSubscriptionFilter": {
      "description": "Filter for the Event Subscription.",
      "type": "object",
      "properties": {
        "subjectBeginsWith": {
          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
          "type": "string"
        },
        "subjectEndsWith": {
          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
          "type": "string"
        },
        "includedEventTypes": {
          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isSubjectCaseSensitive": {
          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
          "default": false,
          "type": "boolean"
        },
        "enableAdvancedFilteringOnArrays": {
          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
          "type": "boolean"
        },
        "advancedFilters": {
          "description": "An array of advanced filters that are used for filtering event subscriptions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedFilter"
          }
        }
      }
    },
    "RetryPolicy": {
      "description": "Information about the retry policy for an event subscription.",
      "type": "object",
      "properties": {
        "maxDeliveryAttempts": {
          "format": "int32",
          "description": "Maximum number of delivery retry attempts for events.",
          "default": 30,
          "type": "integer"
        },
        "eventTimeToLiveInMinutes": {
          "format": "int32",
          "description": "Time To Live (in minutes) for events.",
          "default": 1440,
          "type": "integer"
        }
      }
    },
    "DeadLetterWithResourceIdentity": {
      "description": "Information about the deadletter destination with resource identity.",
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/EventSubscriptionIdentity",
          "description": "The identity to use when dead-lettering events."
        },
        "deadLetterDestination": {
          "$ref": "#/definitions/DeadLetterDestination",
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering."
        }
      }
    },
    "EventSubscriptionIdentity": {
      "description": "The identity information with the event subscription.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
          "enum": [
            "SystemAssigned",
            "UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EventSubscriptionIdentityType",
            "modelAsString": true
          }
        },
        "userAssignedIdentity": {
          "description": "The user identity associated with the resource.",
          "type": "string"
        }
      }
    },
    "WebHookEventSubscriptionDestinationProperties": {
      "description": "Information about the webhook destination properties for an event subscription.",
      "type": "object",
      "properties": {
        "endpointUrl": {
          "description": "The URL that represents the endpoint of the destination of an event subscription.",
          "type": "string",
          "x-ms-secret": true
        },
        "endpointBaseUrl": {
          "description": "The base URL that represents the endpoint of the destination of an event subscription.",
          "type": "string",
          "readOnly": true
        },
        "maxEventsPerBatch": {
          "format": "int32",
          "description": "Maximum number of events per batch.",
          "default": 1,
          "type": "integer"
        },
        "preferredBatchSizeInKilobytes": {
          "format": "int32",
          "description": "Preferred batch size in Kilobytes.",
          "default": 64,
          "type": "integer"
        },
        "azureActiveDirectoryTenantId": {
          "description": "The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.",
          "type": "string"
        },
        "azureActiveDirectoryApplicationIdOrUri": {
          "description": "The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.",
          "type": "string"
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryAttributeMapping"
          }
        }
      }
    },
    "StorageBlobDeadLetterDestinationProperties": {
      "description": "Properties of the storage blob based dead letter destination.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource ID of the storage account that is the destination of the deadletter events",
          "type": "string"
        },
        "blobContainerName": {
          "description": "The name of the Storage blob container that is the destination of the deadletter events",
          "type": "string"
        }
      }
    },
    "StaticDeliveryAttributeMappingProperties": {
      "description": "Properties of static delivery attribute mapping.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of the delivery attribute.",
          "type": "string"
        },
        "isSecret": {
          "description": "Boolean flag to tell if the attribute contains sensitive information .",
          "type": "boolean"
        }
      }
    },
    "StaticDeliveryAttributeMapping": {
      "description": "Static delivery attribute mapping details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryAttributeMapping"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StaticDeliveryAttributeMappingProperties",
          "description": "Properties of static delivery attribute mapping.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "Static"
    },
    "DynamicDeliveryAttributeMappingProperties": {
      "description": "Properties of dynamic delivery attribute mapping.",
      "type": "object",
      "properties": {
        "sourceField": {
          "description": "JSON path in the event which contains attribute value.",
          "type": "string"
        }
      }
    },
    "DynamicDeliveryAttributeMapping": {
      "description": "Dynamic delivery attribute mapping details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryAttributeMapping"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DynamicDeliveryAttributeMappingProperties",
          "description": "Properties of dynamic delivery attribute mapping.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "Dynamic"
    },
    "DeliveryAttributeMapping": {
      "description": "Delivery attribute mapping details.",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the delivery attribute or header.",
          "type": "string"
        },
        "type": {
          "description": "Type of the delivery attribute or header name.",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeliveryAttributeMappingType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "type"
    },
    "StorageBlobDeadLetterDestination": {
      "description": "Information about the storage blob based dead letter destination.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeadLetterDestination"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageBlobDeadLetterDestinationProperties",
          "description": "The properties of the Storage Blob based deadletter destination",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "StorageBlob"
    },
    "WebHookEventSubscriptionDestination": {
      "description": "Information about the webhook destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventSubscriptionDestination"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebHookEventSubscriptionDestinationProperties",
          "description": "WebHook Properties of the event subscription destination.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "WebHook"
    },
    "DeadLetterDestination": {
      "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
      "required": [
        "endpointType"
      ],
      "type": "object",
      "properties": {
        "endpointType": {
          "description": "Type of the endpoint for the dead letter destination",
          "enum": [
            "StorageBlob"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeadLetterEndPointType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "endpointType"
    },
    "EventHubEventSubscriptionDestinationProperties": {
      "description": "The properties for a event hub destination.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription.",
          "type": "string"
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryAttributeMapping"
          }
        }
      }
    },
    "EventHubEventSubscriptionDestination": {
      "description": "Information about the event hub destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventSubscriptionDestination"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventHubEventSubscriptionDestinationProperties",
          "description": "Event Hub Properties of the event subscription destination.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "EventHub"
    },
    "StorageQueueEventSubscriptionDestinationProperties": {
      "description": "The properties for a storage queue destination.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.",
          "type": "string"
        },
        "queueName": {
          "description": "The name of the Storage queue under a storage account that is the destination of an event subscription.",
          "type": "string"
        },
        "queueMessageTimeToLiveInSeconds": {
          "format": "int64",
          "description": "Storage queue message time to live in seconds.",
          "type": "integer"
        }
      }
    },
    "StorageQueueEventSubscriptionDestination": {
      "description": "Information about the storage queue destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventSubscriptionDestination"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageQueueEventSubscriptionDestinationProperties",
          "description": "Storage Queue Properties of the event subscription destination.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "StorageQueue"
    },
    "HybridConnectionEventSubscriptionDestinationProperties": {
      "description": "The properties for a hybrid connection destination.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource ID of an hybrid connection that is the destination of an event subscription.",
          "type": "string"
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryAttributeMapping"
          }
        }
      }
    },
    "HybridConnectionEventSubscriptionDestination": {
      "description": "Information about the HybridConnection destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventSubscriptionDestination"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/HybridConnectionEventSubscriptionDestinationProperties",
          "description": "Hybrid connection Properties of the event subscription destination.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "HybridConnection"
    },
    "ServiceBusQueueEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Service Bus destination of an event subscription.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of the Service Bus destination of an event subscription.",
          "type": "string"
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryAttributeMapping"
          }
        }
      }
    },
    "ServiceBusQueueEventSubscriptionDestination": {
      "description": "Information about the service bus destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventSubscriptionDestination"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceBusQueueEventSubscriptionDestinationProperties",
          "description": "Service Bus Properties of the event subscription destination.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "ServiceBusQueue"
    },
    "ServiceBusTopicEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Service Bus Topic destination of an event subscription.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of the Service Bus Topic destination of an event subscription.",
          "type": "string"
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryAttributeMapping"
          }
        }
      }
    },
    "ServiceBusTopicEventSubscriptionDestination": {
      "description": "Information about the service bus topic destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventSubscriptionDestination"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceBusTopicEventSubscriptionDestinationProperties",
          "description": "Service Bus Topic Properties of the event subscription destination.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "ServiceBusTopic"
    },
    "AzureFunctionEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Azure Function destination of an event subscription.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription.",
          "type": "string"
        },
        "maxEventsPerBatch": {
          "format": "int32",
          "description": "Maximum number of events per batch.",
          "default": 1,
          "type": "integer"
        },
        "preferredBatchSizeInKilobytes": {
          "format": "int32",
          "description": "Preferred batch size in Kilobytes.",
          "default": 64,
          "type": "integer"
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryAttributeMapping"
          }
        }
      }
    },
    "AzureFunctionEventSubscriptionDestination": {
      "description": "Information about the azure function destination for an event subscription.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventSubscriptionDestination"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureFunctionEventSubscriptionDestinationProperties",
          "description": "Azure Function Properties of the event subscription destination.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-discriminator-value": "AzureFunction"
    },
    "EventSubscriptionDestination": {
      "description": "Information about the destination for an event subscription.",
      "required": [
        "endpointType"
      ],
      "type": "object",
      "properties": {
        "endpointType": {
          "description": "Type of the endpoint for the event subscription destination.",
          "enum": [
            "WebHook",
            "EventHub",
            "StorageQueue",
            "HybridConnection",
            "ServiceBusQueue",
            "ServiceBusTopic",
            "AzureFunction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "endpointType"
    },
    "EventSubscription": {
      "description": "Event Subscription",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventSubscriptionProperties",
          "description": "Properties of the event subscription.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "The system metadata relating to Event Subscription resource.",
          "type": "object",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "EventSubscriptionUpdateParameters": {
      "description": "Properties of the Event Subscription update.",
      "type": "object",
      "properties": {
        "destination": {
          "$ref": "#/definitions/EventSubscriptionDestination",
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        },
        "deliveryWithResourceIdentity": {
          "$ref": "#/definitions/DeliveryWithResourceIdentity",
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering."
        },
        "filter": {
          "$ref": "#/definitions/EventSubscriptionFilter",
          "description": "Information about the filter for the event subscription."
        },
        "labels": {
          "description": "List of user defined labels.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expirationTimeUtc": {
          "format": "date-time",
          "description": "Information about the expiration time for the event subscription.",
          "type": "string"
        },
        "eventDeliverySchema": {
          "description": "The event delivery schema for the event subscription.",
          "enum": [
            "EventGridSchema",
            "CustomInputSchema",
            "CloudEventSchemaV1_0"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EventDeliverySchema",
            "modelAsString": true
          }
        },
        "retryPolicy": {
          "$ref": "#/definitions/RetryPolicy",
          "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events."
        },
        "deadLetterDestination": {
          "$ref": "#/definitions/DeadLetterDestination",
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering."
        },
        "deadLetterWithResourceIdentity": {
          "$ref": "#/definitions/DeadLetterWithResourceIdentity",
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (topic / domain) to acquire the authentication tokens being used during delivery / dead-lettering."
        }
      }
    },
    "EventSubscriptionFullUrl": {
      "description": "Full endpoint url of an event subscription",
      "type": "object",
      "properties": {
        "endpointUrl": {
          "description": "The URL that represents the endpoint of the destination of an event subscription.",
          "type": "string"
        }
      }
    },
    "EventSubscriptionsListResult": {
      "description": "Result of the List EventSubscriptions operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of EventSubscriptions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventSubscription"
          }
        },
        "nextLink": {
          "description": "A link for the next page of event subscriptions",
          "type": "string"
        }
      }
    },
    "DeliveryAttributeListResult": {
      "description": "Result of the Get delivery attributes operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of DeliveryAttributeMapping",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryAttributeMapping"
          }
        }
      }
    },
    "OperationsListResult": {
      "description": "Result of the List Operations operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of operations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        }
      }
    },
    "Operation": {
      "description": "Represents an operation returned by the GetOperations request",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation",
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/OperationInfo",
          "description": "Display name of the operation"
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the operation",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationInfo": {
      "description": "Information about an operation",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Name of the provider",
          "type": "string"
        },
        "resource": {
          "description": "Name of the resource type",
          "type": "string"
        },
        "operation": {
          "description": "Name of the operation",
          "type": "string"
        },
        "description": {
          "description": "Description of the operation",
          "type": "string"
        }
      }
    },
    "PartnerNamespaceProperties": {
      "description": "Properties of the partner namespace.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the partner namespace.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PartnerNamespaceProvisioningState",
            "modelAsString": true
          }
        },
        "partnerRegistrationFullyQualifiedId": {
          "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
          "type": "string"
        },
        "endpoint": {
          "description": "Endpoint for the partner namespace.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PartnerNamespace": {
      "description": "EventGrid Partner Namespace.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PartnerNamespaceProperties",
          "description": "Properties of the partner namespace.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "The system metadata relating to Partner Namespace resource.",
          "type": "object",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "PartnerNamespaceUpdateParameters": {
      "description": "Properties of the PartnerNamespace update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the partner namespace.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PartnerNamespacesListResult": {
      "description": "Result of the List Partner Namespaces operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of partner namespaces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartnerNamespace"
          }
        },
        "nextLink": {
          "description": "A link for the next page of partner namespaces.",
          "type": "string"
        }
      }
    },
    "PartnerNamespaceSharedAccessKeys": {
      "description": "Shared access keys of the partner namespace.",
      "type": "object",
      "properties": {
        "key1": {
          "description": "Shared access key1 for the partner namespace.",
          "type": "string"
        },
        "key2": {
          "description": "Shared access key2 for the partner namespace.",
          "type": "string"
        }
      }
    },
    "PartnerNamespaceRegenerateKeyRequest": {
      "description": "PartnerNamespace regenerate shared access key request.",
      "required": [
        "keyName"
      ],
      "type": "object",
      "properties": {
        "keyName": {
          "description": "Key name to regenerate (key1 or key2).",
          "type": "string"
        }
      }
    },
    "PartnerRegistrationProperties": {
      "description": "Properties of the partner registration.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the partner registration.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PartnerRegistrationProvisioningState",
            "modelAsString": true
          }
        },
        "partnerName": {
          "description": "Official name of the partner name. For example: \"Contoso\".",
          "type": "string"
        },
        "partnerResourceTypeName": {
          "description": "Name of the partner resource type.",
          "type": "string"
        },
        "partnerResourceTypeDisplayName": {
          "description": "Display name of the partner resource type.",
          "type": "string"
        },
        "partnerResourceTypeDescription": {
          "description": "Short description of the partner resource type. The length of this description should not exceed 256 characters.",
          "type": "string"
        },
        "longDescription": {
          "description": "Long description for the custom scenarios and integration to be displayed in the portal if needed.\r\nLength of this description should not exceed 2048 characters.",
          "type": "string"
        },
        "partnerCustomerServiceNumber": {
          "description": "The customer service number of the publisher. The expected phone format should start with a '+' sign \r\nfollowed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its\r\nlength cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and\r\n+966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551 1234 43",
          "type": "string"
        },
        "partnerCustomerServiceExtension": {
          "description": "The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not exceed 10.",
          "type": "string"
        },
        "customerServiceUri": {
          "description": "The extension of the customer service URI of the publisher.",
          "type": "string"
        },
        "setupUri": {
          "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source.",
          "type": "string"
        },
        "logoUri": {
          "description": "URI of the logo.",
          "type": "string"
        },
        "visibilityState": {
          "description": "Visibility state of the partner registration.",
          "enum": [
            "Hidden",
            "PublicPreview",
            "GenerallyAvailable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PartnerRegistrationVisibilityState",
            "modelAsString": true
          }
        },
        "authorizedAzureSubscriptionIds": {
          "description": "List of Azure subscription Ids that are authorized to create a partner namespace\r\nassociated with this partner registration. This is an optional property. Creating\r\npartner namespaces is always permitted under the same Azure subscription as the one used\r\nfor creating the partner registration.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PartnerRegistration": {
      "description": "Information about a partner registration.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PartnerRegistrationProperties",
          "description": "Properties of the partner registration.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "description": "The system metadata relating to Partner Registration resource.",
          "type": "object",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "PartnerRegistrationUpdateParameters": {
      "description": "Properties of the Partner Registration update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the partner registration resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "partnerTopicTypeName": {
          "description": "Name of the partner topic type.",
          "type": "string"
        },
        "partnerTopicTypeDisplayName": {
          "description": "Display name of the partner topic type.",
          "type": "string"
        },
        "partnerTopicTypeDescription": {
          "description": "Description of the partner topic type.",
          "type": "string"
        },
        "setupUri": {
          "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source.",
          "type": "string"
        },
        "logoUri": {
          "description": "URI of the partner logo.",
          "type": "string"
        },
        "authorizedAzureSubscriptionIds": {
          "description": "List of IDs of Azure AD applications that are authorized to create a partner namespace\r\nassociated with this partner registration. This is an optional property. Creating\r\npartner namespaces is always permitted under the same Azure subscription as the one used\r\nfor creating the partner registration.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PartnerRegistrationsListResult": {
      "description": "Result of the List Partner Registrations operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of partner registrations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartnerRegistration"
          }
        },
        "nextLink": {
          "description": "A link for the next page of partner registrations.",
          "type": "string"
        }
      }
    },
    "EventTypeProperties": {
      "description": "Properties of the event type",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the event type.",
          "type": "string"
        },
        "description": {
          "description": "Description of the event type.",
          "type": "string"
        },
        "schemaUrl": {
          "description": "Url of the schema for this event type.",
          "type": "string"
        },
        "isInDefaultSet": {
          "description": "IsInDefaultSet flag of the event type.",
          "type": "boolean"
        }
      }
    },
    "EventType": {
      "description": "Event Type for a subject under a topic",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventTypeProperties",
          "description": "Properties of the event type.",
          "x-ms-client-flatten": true
        }
      }
    },
    "PartnerRegistrationEventTypesListResult": {
      "description": "Result of the List Partner Registration Event Types operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of partner registration event types.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventType"
          }
        },
        "nextLink": {
          "description": "A link for the next page of partner registration event types.",
          "type": "string"
        }
      }
    },
    "PartnerTopicUpdateParameters": {
      "description": "Properties of the Partner Topic update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the partner topic.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PartnerTopicProperties": {
      "description": "Properties of the Partner Topic.",
      "type": "object",
      "properties": {
        "source": {
          "description": "Source associated with this partner topic. This represents a unique partner resource.",
          "type": "string"
        },
        "expirationTimeIfNotActivatedUtc": {
          "format": "date-time",
          "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the partner topic.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PartnerTopicProvisioningState",
            "modelAsString": true
          }
        },
        "activationState": {
          "description": "Activation state of the partner topic.",
          "enum": [
            "NeverActivated",
            "Activated",
            "Deactivated"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PartnerTopicActivationState",
            "modelAsString": true
          }
        },
        "partnerTopicFriendlyDescription": {
          "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
          "type": "string"
        }
      }
    },
    "PartnerTopic": {
      "description": "EventGrid Partner Topic.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PartnerTopicProperties",
          "description": "Properties of the partner topic.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/IdentityInfo",
          "description": "Identity information for the resource."
        },
        "systemData": {
          "description": "The system metadata relating to Partner Topic resource.",
          "type": "object",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "PartnerTopicsListResult": {
      "description": "Result of the List Partner Topics operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of partner topics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartnerTopic"
          }
        },
        "nextLink": {
          "description": "A link for the next page of partner topics.",
          "type": "string"
        }
      }
    },
    "PartnerTopicTypesListResult": {
      "description": "Result of the List Partner Topic Types operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of partner topic types.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartnerTopicType"
          }
        }
      }
    },
    "PartnerTopicTypeProperties": {
      "description": "Properties of a partner topic type.",
      "type": "object",
      "properties": {
        "partnerName": {
          "description": "Official name of the partner.",
          "type": "string"
        },
        "topicTypeName": {
          "description": "Name of the partner topic type. This name should be unique among all partner topic types names.",
          "type": "string"
        },
        "displayName": {
          "description": "Display Name for the partner topic type.",
          "type": "string"
        },
        "description": {
          "description": "Description of the partner topic type.",
          "type": "string"
        },
        "setupUri": {
          "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source.",
          "type": "string"
        },
        "authorizationState": {
          "description": "Status of whether the customer has authorized a partner to create partner topics\r\nin the customer's subscription.",
          "enum": [
            "NotApplicable",
            "NotAuthorized",
            "Authorized"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PartnerTopicTypeAuthorizationState",
            "modelAsString": true
          }
        }
      }
    },
    "PartnerTopicType": {
      "description": "Properties of a partner topic type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PartnerTopicTypeProperties",
          "description": "Properties of the partner topic type.",
          "x-ms-client-flatten": true
        }
      }
    },
    "EventTypesListResult": {
      "description": "Result of the List Event Types operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of event types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventType"
          }
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "description": "Result of the list of all private endpoint connections operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of private endpoint connection resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "description": "A link for the next page of private endpoint connection resources.",
          "type": "string"
        }
      }
    },
    "PrivateLinkResource": {
      "description": "Information of the private link resource.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Properties of the private link resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string"
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "requiredMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkResourcesListResult": {
      "description": "Result of the List private link resources operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of private link resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "description": "A link for the next page of private link resources.",
          "type": "string"
        }
      }
    },
    "SystemTopicProperties": {
      "description": "Properties of the System Topic.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the system topic.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ResourceProvisioningState",
            "modelAsString": true
          }
        },
        "source": {
          "description": "Source for the system topic.",
          "type": "string"
        },
        "topicType": {
          "description": "TopicType for the system topic.",
          "type": "string"
        },
        "metricResourceId": {
          "description": "Metric resource id for the system topic.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SystemTopic": {
      "description": "EventGrid System Topic.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SystemTopicProperties",
          "description": "Properties of the system topic.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/IdentityInfo",
          "description": "Identity information for the resource."
        },
        "systemData": {
          "description": "The system metadata relating to System Topic resource.",
          "type": "object",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "SystemTopicUpdateParameters": {
      "description": "Properties of the System Topic update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the system topic.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/IdentityInfo",
          "description": "Resource identity information."
        }
      }
    },
    "SystemTopicsListResult": {
      "description": "Result of the List System topics operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of system Topics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SystemTopic"
          }
        },
        "nextLink": {
          "description": "A link for the next page of topics.",
          "type": "string"
        }
      }
    },
    "TopicProperties": {
      "description": "Properties of the Topic",
      "type": "object",
      "properties": {
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the topic.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "TopicProvisioningState",
            "modelAsString": true
          }
        },
        "endpoint": {
          "description": "Endpoint for the topic.",
          "type": "string",
          "readOnly": true
        },
        "inputSchema": {
          "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
          "enum": [
            "EventGridSchema",
            "CustomEventSchema",
            "CloudEventSchemaV1_0"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InputSchema",
            "modelAsString": true
          },
          "default": "EventGridSchema"
        },
        "inputSchemaMapping": {
          "$ref": "#/definitions/InputSchemaMapping",
          "description": "This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema."
        },
        "metricResourceId": {
          "description": "Metric resource id for the topic.",
          "type": "string",
          "readOnly": true
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundIpRule"
          }
        }
      }
    },
    "ExtendedLocation": {
      "description": "Definition of an Extended Location",
      "type": "object",
      "properties": {
        "name": {
          "description": "Fully qualified name of the extended location.",
          "type": "string"
        },
        "type": {
          "description": "Type of the extended location.",
          "type": "string"
        }
      }
    },
    "Topic": {
      "description": "EventGrid Topic",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/TopicProperties",
          "description": "Properties of the topic.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/ResourceSku",
          "description": "The Sku pricing tier for the topic."
        },
        "identity": {
          "$ref": "#/definitions/IdentityInfo",
          "description": "Identity information for the resource."
        },
        "kind": {
          "description": "Kind of the resource.",
          "enum": [
            "Azure",
            "AzureArc"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceKind",
            "modelAsString": true
          }
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Extended location of the resource."
        },
        "systemData": {
          "description": "The system metadata relating to Topic resource.",
          "type": "object",
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "TopicUpdateParameters": {
      "description": "Properties of the Topic update",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/IdentityInfo",
          "description": "Resource identity information."
        },
        "properties": {
          "$ref": "#/definitions/TopicUpdateParameterProperties",
          "description": "Properties of the resource.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/ResourceSku",
          "description": "The Sku pricing tier for the topic."
        }
      }
    },
    "TopicUpdateParameterProperties": {
      "description": "Information of topic update parameter properties.",
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicUpdateParameterProperties.InboundIpRules\" />",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundIpRule"
          }
        }
      }
    },
    "TopicsListResult": {
      "description": "Result of the List Topics operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of Topics",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Topic"
          }
        },
        "nextLink": {
          "description": "A link for the next page of topics",
          "type": "string"
        }
      }
    },
    "TopicSharedAccessKeys": {
      "description": "Shared access keys of the Topic",
      "type": "object",
      "properties": {
        "key1": {
          "description": "Shared access key1 for the topic.",
          "type": "string"
        },
        "key2": {
          "description": "Shared access key2 for the topic.",
          "type": "string"
        }
      }
    },
    "TopicRegenerateKeyRequest": {
      "description": "Topic regenerate share access key request",
      "required": [
        "keyName"
      ],
      "type": "object",
      "properties": {
        "keyName": {
          "description": "Key name to regenerate key1 or key2",
          "type": "string"
        }
      }
    },
    "ExtensionTopicProperties": {
      "description": "Properties of the Extension Topic",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the extension topic.",
          "type": "string"
        },
        "systemTopic": {
          "description": "System topic resource id which is mapped to the source.",
          "type": "string"
        }
      }
    },
    "ExtensionTopic": {
      "description": "Event grid Extension Topic. This is used for getting Event Grid related metrics for Azure resources.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExtensionTopicProperties",
          "description": "Properties of the extension topic",
          "x-ms-client-flatten": true
        }
      }
    },
    "TopicTypesListResult": {
      "description": "Result of the List Topic Types operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of topic types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopicTypeInfo"
          }
        }
      }
    },
    "TopicTypeProperties": {
      "description": "Properties of a topic type.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Namespace of the provider of the topic type.",
          "type": "string"
        },
        "displayName": {
          "description": "Display Name for the topic type.",
          "type": "string"
        },
        "description": {
          "description": "Description of the topic type.",
          "type": "string"
        },
        "resourceRegionType": {
          "description": "Region type of the resource.",
          "enum": [
            "RegionalResource",
            "GlobalResource"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceRegionType",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the topic type",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TopicTypeProvisioningState",
            "modelAsString": true
          }
        },
        "supportedLocations": {
          "description": "List of locations supported by this topic type.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sourceResourceFormat": {
          "description": "Source resource format.",
          "type": "string"
        },
        "supportedScopesForSource": {
          "description": "Supported source scopes.",
          "type": "array",
          "items": {
            "enum": [
              "Resource",
              "ResourceGroup",
              "AzureSubscription"
            ],
            "type": "string"
          }
        }
      }
    },
    "TopicTypeInfo": {
      "description": "Properties of a topic type info.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/TopicTypeProperties",
          "description": "Properties of the topic type info",
          "x-ms-client-flatten": true
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
      "required": true,
      "type": "string"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to be used with the client request.",
      "required": true,
      "type": "string"
    },
    "FilterParameter": {
      "name": "$filter",
      "in": "query",
      "description": "The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "TopParameter": {
      "name": "$top",
      "in": "query",
      "description": "The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
