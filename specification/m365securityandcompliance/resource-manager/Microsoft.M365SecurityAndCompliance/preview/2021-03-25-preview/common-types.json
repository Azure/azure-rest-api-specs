{
  "swagger": "2.0",
  "info": {
    "version": "2021-03-25-preview",
    "title": "M365SecurityAndComplianceAPIs"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.M365SecurityAndCompliance/operations": {
      "get": {
        "tags": [
          "Proxy"
        ],
        "description": "Lists all of the available M365SecurityAndCompliance REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "List operations": {
            "$ref": "./examples/OperationsList.json"
          },
          "List SecurityCenter operations": {
            "$ref": "./examples/SecurityCenterOperationsList.json"
          },
          "List ComplianceCenter operations": {
            "$ref": "./examples/ComplianceCenterOperationsList.json"
          },
          "List EDMUpload operations": {
            "$ref": "./examples/EdmUploadOperationsList.json"
          },
          "List ManagementAPI operations": {
            "$ref": "./examples/ManagementAPIOperationsList.json"
          },
          "List SCCPowershell operations": {
            "$ref": "./examples/SCCPowershellOperationsList.json"
          },
          "List MIPPolicySync operations": {
            "$ref": "./examples/MIPPolicySyncOperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.M365SecurityAndCompliance/locations/{locationName}/operationresults/{operationResultId}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "description": "Get the operation result for a long running operation.",
        "operationId": "OperationResults_Get",
        "x-ms-examples": {
          "Get operation result": {
            "$ref": "./examples/OperationResultsGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/locationName"
          },
          {
            "$ref": "#/parameters/operationResultId"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains all of the properties of the operation result.",
            "schema": {
              "$ref": "#/definitions/OperationResultsDescription"
            }
          },
          "default": {
            "description": "Default error response",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "ServicesProperties": {
      "description": "The properties of a service instance.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state.",
          "enum": [
            "Deleting",
            "Succeeded",
            "Creating",
            "Accepted",
            "Verifying",
            "Updating",
            "Failed",
            "Canceled",
            "Deprovisioned"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        },
        "accessPolicies": {
          "$ref": "#/definitions/ServiceAccessPoliciesInfo",
          "description": "The access policies of the service instance."
        },
        "cosmosDbConfiguration": {
          "$ref": "#/definitions/ServiceCosmosDbConfigurationInfo",
          "description": "The settings for the Cosmos DB database backing the service."
        },
        "authenticationConfiguration": {
          "$ref": "#/definitions/ServiceAuthenticationConfigurationInfo",
          "description": "The authentication configuration for the service instance."
        },
        "corsConfiguration": {
          "$ref": "#/definitions/ServiceCorsConfigurationInfo",
          "description": "The settings for the CORS configuration of the service instance."
        },
        "exportConfiguration": {
          "$ref": "#/definitions/ServiceExportConfigurationInfo",
          "description": "The settings for the export operation of the service instance."
        },
        "privateEndpointConnections": {
          "description": "The list of private endpoint connections that are set up for this resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "publicNetworkAccess": {
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        }
      }
    },
    "ServiceAccessPoliciesInfo": {
      "description": "The access policies of the service instance.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ServiceAccessPolicyEntry"
      }
    },
    "ServiceAccessPolicyEntry": {
      "description": "An access policy entry.",
      "properties": {
        "objectId": {
          "description": "An Azure AD object ID (User or Apps) that is allowed access to the FHIR service.",
          "type": "string",
          "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$"
        }
      },
      "required": [
        "objectId"
      ]
    },
    "ServiceCosmosDbConfigurationInfo": {
      "description": "The settings for the Cosmos DB database backing the service.",
      "type": "object",
      "properties": {
        "offerThroughput": {
          "type": "integer",
          "format": "int64",
          "description": "The provisioned throughput for the backing database.",
          "readOnly": false,
          "minimum": 400,
          "maximum": 10000
        },
        "keyVaultKeyUri": {
          "type": "string",
          "description": "The URI of the customer-managed key for the backing database.",
          "readOnly": false
        }
      }
    },
    "ServiceAuthenticationConfigurationInfo": {
      "description": "Authentication configuration information",
      "type": "object",
      "properties": {
        "authority": {
          "type": "string",
          "description": "The authority url for the service",
          "readOnly": false
        },
        "audience": {
          "type": "string",
          "description": "The audience url for the service",
          "readOnly": false
        },
        "smartProxyEnabled": {
          "type": "boolean",
          "description": "If the SMART on FHIR proxy is enabled",
          "readOnly": false
        }
      }
    },
    "ServiceCorsConfigurationInfo": {
      "description": "The settings for the CORS configuration of the service instance.",
      "type": "object",
      "properties": {
        "origins": {
          "type": "array",
          "description": "The origins to be allowed via CORS.",
          "readOnly": false,
          "items": {
            "$ref": "#/definitions/ServiceCorsConfigurationOriginEntry"
          }
        },
        "headers": {
          "type": "array",
          "description": "The headers to be allowed via CORS.",
          "readOnly": false,
          "items": {
            "$ref": "#/definitions/ServiceCorsConfigurationHeaderEntry"
          }
        },
        "methods": {
          "type": "array",
          "description": "The methods to be allowed via CORS.",
          "readOnly": false,
          "items": {
            "$ref": "#/definitions/ServiceCorsConfigurationMethodEntry"
          }
        },
        "maxAge": {
          "type": "integer",
          "format": "int64",
          "description": "The max age to be allowed via CORS.",
          "readOnly": false,
          "minimum": 0,
          "maximum": 99999
        },
        "allowCredentials": {
          "type": "boolean",
          "description": "If credentials are allowed via CORS.",
          "readOnly": false
        }
      }
    },
    "ServiceExportConfigurationInfo": {
      "description": "Export operation configuration information",
      "type": "object",
      "properties": {
        "storageAccountName": {
          "type": "string",
          "description": "The name of the default export storage account.",
          "readOnly": false
        }
      }
    },
    "ServiceCorsConfigurationOriginEntry": {
      "description": "An origin for CORS.",
      "type": "string",
      "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$"
    },
    "ServiceCorsConfigurationHeaderEntry": {
      "description": "A header for CORS.",
      "type": "string"
    },
    "ServiceCorsConfigurationMethodEntry": {
      "description": "A method for CORS.",
      "type": "string"
    },
    "ServicesPatchDescription": {
      "description": "The description of the service.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Instance tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ServicesPropertiesUpdateParameters",
          "description": "The properties for updating a service instance.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ServicesResource": {
      "description": "The common properties of a service.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "systemData": {
          "description": "Required property for system data",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "kind": {
          "readOnly": false,
          "type": "string",
          "description": "The kind of the service.",
          "enum": [
            "fhir",
            "fhir-Stu3",
            "fhir-R4"
          ],
          "x-ms-enum": {
            "name": "kind",
            "modelAsString": false
          }
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "etag": {
          "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
          "type": "string"
        },
        "identity": {
          "type": "object",
          "description": "Setting indicating whether the service has a managed identity associated with it.",
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The principal ID of the resource identity."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant ID of the resource."
            },
            "type": {
              "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
              "type": "string",
              "enum": [
                "SystemAssigned",
                "None"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            }
          }
        }
      },
      "x-ms-azure-resource": true,
      "required": [
        "location",
        "kind"
      ]
    },
    "ServicesPropertiesUpdateParameters": {
      "description": "The properties for updating a service instance.",
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateEndpoint": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ARM identifier for Private Endpoint"
        }
      },
      "description": "The Private Endpoint resource."
    },
    "PrivateEndpointConnection": {
      "properties": {
        "systemData": {
          "description": "Required property for system data",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Resource properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "description": "The Private Endpoint Connection resource."
    },
    "PrivateEndpointConnectionProperties": {
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "description": "Properties of the PrivateEndpointConnectProperties."
    },
    "PrivateLinkServiceConnectionState": {
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider."
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "PrivateLinkResource": {
      "properties": {
        "systemData": {
          "description": "Required property for system data",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "description": "A private link resource"
    },
    "PrivateLinkResourceProperties": {
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private link resource Private link DNS zone name."
        }
      },
      "description": "Properties of a private link resource."
    },
    "PrivateEndpointConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "List of private endpoint connection associated with the specified storage account"
    },
    "PrivateLinkResourceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results.",
          "readOnly": true
        }
      },
      "description": "A list of private link resources"
    },
    "OperationResultsDescription": {
      "description": "The properties indicating the operation result of an operation on a service.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the operation returned.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the operation result.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the operation being performed.",
          "enum": [
            "Canceled",
            "Succeeded",
            "Failed",
            "Requested",
            "Running"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "name": "OperationResultStatus",
            "modelAsString": true
          }
        },
        "startTime": {
          "description": "The time that the operation was started.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": false,
          "description": "Additional properties of the operation result."
        }
      }
    },
    "OperationListResult": {
      "description": "A list of service operations. It contains a list of operations and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of service description objects.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "A list of service operations supported by the Microsoft.M365SecurityAndCompliance resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        }
      }
    },
    "Operation": {
      "description": "Service REST API operation.",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{read | write | action | delete}"
        },
        "isDataAction": {
          "readOnly": true,
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "origin": {
          "readOnly": true,
          "type": "string",
          "description": "Default value is 'user,system'."
        },
        "display": {
          "readOnly": true,
          "description": "The information displayed about the operation.",
          "$ref": "#/definitions/OperationDisplay"
        }
      }
    },
    "OperationDisplay": {
      "description": "The object that represents the operation.",
      "type": "object",
      "properties": {
        "provider": {
          "readOnly": true,
          "type": "string",
          "description": "Service provider: Microsoft.M365SecurityAndCompliance"
        },
        "resource": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Type: Services"
        },
        "operation": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the operation"
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Friendly description for the operation,"
        }
      }
    },
    "ErrorDetails": {
      "description": "Error details.",
      "type": "object",
      "properties": {
        "error": {
          "description": "Object containing error details.",
          "$ref": "#/definitions/ErrorDetailsInternal"
        }
      }
    },
    "ErrorDetailsInternal": {
      "description": "Error details.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The error message.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "The target of the particular error.",
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "PrivateEndpointConnectionName": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the private endpoint connection associated with the Azure resource",
      "x-ms-parameter-location": "method"
    },
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription identifier.",
      "required": true,
      "type": "string"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group that contains the service instance.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90
    },
    "resourceName": {
      "name": "resourceName",
      "in": "path",
      "description": "The name of the service instance.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "minLength": 3,
      "maxLength": 24
    },
    "locationName": {
      "name": "locationName",
      "in": "path",
      "description": "The location of the operation.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "operationResultId": {
      "name": "operationResultId",
      "in": "path",
      "description": "The ID of the operation result to get.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
