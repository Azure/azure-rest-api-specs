{
  "swagger": "2.0",
  "info": {
    "title": "ManagedServicesClient",
    "version": "2022-10-01",
    "description": "The specification for ManagedServices.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "RegistrationDefinitions"
    },
    {
      "name": "RegistrationAssignments"
    },
    {
      "name": "MarketplaceRegistrationDefinitions"
    }
  ],
  "paths": {
    "/{resourceUri}/{registrationId}/providers/Azure.ResourceManager.ManagedServices/registrationDefinitions/{registrationDefinitionId}": {
      "get": {
        "operationId": "RegistrationDefinitions_Get",
        "tags": [
          "RegistrationDefinitions"
        ],
        "description": "Gets the registration definition details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "registrationId",
            "in": "path",
            "description": "The GUID of the registration definition.",
            "required": true,
            "type": "string"
          },
          {
            "name": "registrationDefinitionId",
            "in": "path",
            "description": "The GUID of the registration definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegistrationDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "RegistrationDefinitions_CreateOrUpdate",
        "tags": [
          "RegistrationDefinitions"
        ],
        "description": "Creates or updates a registration definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "registrationId",
            "in": "path",
            "description": "The GUID of the registration definition.",
            "required": true,
            "type": "string"
          },
          {
            "name": "registrationDefinitionId",
            "in": "path",
            "description": "The GUID of the registration definition.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistrationDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'RegistrationDefinition' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/RegistrationDefinition"
            }
          },
          "201": {
            "description": "Resource 'RegistrationDefinition' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RegistrationDefinition"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistrationDefinitions_Delete",
        "tags": [
          "RegistrationDefinitions"
        ],
        "description": "Deletes the registration definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "registrationId",
            "in": "path",
            "description": "The GUID of the registration definition.",
            "required": true,
            "type": "string"
          },
          {
            "name": "registrationDefinitionId",
            "in": "path",
            "description": "The GUID of the registration definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Azure.ResourceManager.ManagedServices/marketplaceRegistrationDefinitions": {
      "get": {
        "operationId": "MarketplaceRegistrationDefinitions_List",
        "tags": [
          "MarketplaceRegistrationDefinitions"
        ],
        "description": "Gets a list of the marketplace registration definitions for the marketplace identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter query parameter to filter managed services resources by.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MarketplaceRegistrationDefinitionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Azure.ResourceManager.ManagedServices/marketplaceRegistrationDefinitions/{marketplaceIdentifier}": {
      "get": {
        "operationId": "MarketplaceRegistrationDefinitions_Get",
        "tags": [
          "MarketplaceRegistrationDefinitions"
        ],
        "description": "Get the marketplace registration definition for the marketplace identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "marketplaceIdentifier",
            "in": "path",
            "description": "The Azure Marketplace identifier. Expected formats: {publisher}.{product[-preview]}.{planName}.{version} or {publisher}.{product[-preview]}.{planName} or {publisher}.{product[-preview]} or {publisher}).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MarketplaceRegistrationDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Azure.ResourceManager.ManagedServices/registrationAssignments": {
      "get": {
        "operationId": "RegistrationAssignments_List",
        "tags": [
          "RegistrationAssignments"
        ],
        "description": "Gets a list of the registration assignments.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "$expandRegistrationDefinition",
            "in": "query",
            "description": "The flag indicating whether to return the registration definition details along with the registration assignment details.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter query parameter to filter managed services resources by.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegistrationAssignmentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Azure.ResourceManager.ManagedServices/registrationAssignments/{registrationAssignmentId}": {
      "get": {
        "operationId": "RegistrationAssignments_Get",
        "tags": [
          "RegistrationAssignments"
        ],
        "description": "Gets the details of the specified registration assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "$expandRegistrationDefinition",
            "in": "query",
            "description": "The flag indicating whether to return the registration definition details along with the registration assignment details.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "registrationAssignmentId",
            "in": "path",
            "description": "The GUID of the registration assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegistrationAssignment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "RegistrationAssignments_CreateOrUpdate",
        "tags": [
          "RegistrationAssignments"
        ],
        "description": "Creates or updates a registration assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "registrationAssignmentId",
            "in": "path",
            "description": "The GUID of the registration assignment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistrationAssignment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'RegistrationAssignment' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/RegistrationAssignment"
            }
          },
          "201": {
            "description": "Resource 'RegistrationAssignment' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/RegistrationAssignment"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "RegistrationAssignments_Delete",
        "tags": [
          "RegistrationAssignments"
        ],
        "description": "Deletes the specified registration assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "registrationAssignmentId",
            "in": "path",
            "description": "The GUID of the registration assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/{resourceUri}/providers/Azure.ResourceManager.ManagedServices/registrationDefinitions": {
      "get": {
        "operationId": "RegistrationDefinitions_List",
        "tags": [
          "RegistrationDefinitions"
        ],
        "description": "Gets a list of the registration definitions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter query parameter to filter managed services resources by.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegistrationDefinitionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Azure.ResourceManager.ManagedServices/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Authorization": {
      "type": "object",
      "description": "The Azure Active Directory principal identifier and Azure built-in role that describes the access the principal will receive on the delegated resource in the managed tenant.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The identifier of the Azure Active Directory principal."
        },
        "principalIdDisplayName": {
          "type": "string",
          "description": "The display name of the Azure Active Directory principal."
        },
        "roleDefinitionId": {
          "type": "string",
          "description": "The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope."
        },
        "delegatedRoleDefinitionIds": {
          "type": "array",
          "description": "The delegatedRoleDefinitionIds field is required when the roleDefinitionId refers to the User Access Administrator Role. It is the list of role definition ids which define all the permissions that the user in the authorization can assign to other principals.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "principalId",
        "roleDefinitionId"
      ]
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "EligibleApprover": {
      "type": "object",
      "description": "Defines the Azure Active Directory principal that can approve any just-in-time access requests by the principal defined in the EligibleAuthorization.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The identifier of the Azure Active Directory principal."
        },
        "principalIdDisplayName": {
          "type": "string",
          "description": "The display name of the Azure Active Directory principal."
        }
      },
      "required": [
        "principalId"
      ]
    },
    "EligibleAuthorization": {
      "type": "object",
      "description": "The Azure Active Directory principal identifier, Azure built-in role, and just-in-time access policy that describes the just-in-time access the principal will receive on the delegated resource in the managed tenant.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The identifier of the Azure Active Directory principal."
        },
        "principalIdDisplayName": {
          "type": "string",
          "description": "The display name of the Azure Active Directory principal."
        },
        "roleDefinitionId": {
          "type": "string",
          "description": "The identifier of the Azure built-in role that defines the permissions that the Azure Active Directory principal will have on the projected scope."
        },
        "justInTimeAccessPolicy": {
          "$ref": "#/definitions/JustInTimeAccessPolicy",
          "description": "The just-in-time access policy setting."
        }
      },
      "required": [
        "principalId",
        "roleDefinitionId"
      ]
    },
    "ErrorDefinition": {
      "type": "object",
      "description": "The error response indicating why the incoming request wasn’t able to be processed",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "The error message indicating why the operation failed."
        },
        "details": {
          "type": "array",
          "description": "The internal error details.",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "JustInTimeAccessPolicy": {
      "type": "object",
      "description": "Just-in-time access policy setting.",
      "properties": {
        "multiFactorAuthProvider": {
          "$ref": "#/definitions/MultiFactorAuthProvider",
          "description": "The multi-factor authorization provider to be used for just-in-time access requests."
        },
        "maximumActivationDuration": {
          "type": "string",
          "format": "duration",
          "description": "The maximum access duration in ISO 8601 format for just-in-time access requests."
        },
        "managedByTenantApprovers": {
          "type": "array",
          "description": "The list of managedByTenant approvers for the eligible authorization.",
          "items": {
            "$ref": "#/definitions/EligibleApprover"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "multiFactorAuthProvider"
      ]
    },
    "MarketplaceRegistrationDefinition": {
      "type": "object",
      "description": "Concrete extension resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MarketplaceRegistrationDefinitionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Azure Marketplace identifier. Expected formats: {publisher}.{product[-preview]}.{planName}.{version} or {publisher}.{product[-preview]}.{planName} or {publisher}.{product[-preview]} or {publisher}).",
          "readOnly": true
        },
        "plan": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Plan",
          "description": "Details of the resource plan."
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MarketplaceRegistrationDefinitionListResult": {
      "type": "object",
      "description": "The response of a MarketplaceRegistrationDefinition list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MarketplaceRegistrationDefinition items on this page",
          "items": {
            "$ref": "#/definitions/MarketplaceRegistrationDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MarketplaceRegistrationDefinitionProperties": {
      "type": "object",
      "description": "The properties of the marketplace registration definition.",
      "properties": {
        "managedByTenantId": {
          "type": "string",
          "description": "The identifier of the managedBy tenant."
        },
        "authorizations": {
          "type": "array",
          "description": "The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.",
          "items": {
            "$ref": "#/definitions/Authorization"
          },
          "x-ms-identifiers": []
        },
        "eligibleAuthorizations": {
          "type": "array",
          "description": "The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.",
          "items": {
            "$ref": "#/definitions/EligibleAuthorization"
          },
          "x-ms-identifiers": []
        },
        "offerDisplayName": {
          "type": "string",
          "description": "The marketplace offer display name."
        },
        "publisherDisplayName": {
          "type": "string",
          "description": "The marketplace publisher display name."
        },
        "planDisplayName": {
          "type": "string",
          "description": "The marketplace plan display name."
        }
      },
      "required": [
        "managedByTenantId",
        "authorizations"
      ]
    },
    "MultiFactorAuthProvider": {
      "type": "string",
      "enum": [
        "Azure",
        "None"
      ],
      "x-ms-enum": {
        "name": "MultiFactorAuthProvider",
        "modelAsString": true
      }
    },
    "Plan": {
      "type": "object",
      "description": "The details for the Managed Services offer’s plan in Azure Marketplace.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Azure Marketplace plan name."
        },
        "publisher": {
          "type": "string",
          "description": "Azure Marketplace publisher ID."
        },
        "product": {
          "type": "string",
          "description": "Azure Marketplace product code."
        },
        "version": {
          "type": "string",
          "description": "Azure Marketplace plan's version."
        }
      },
      "required": [
        "name",
        "publisher",
        "product",
        "version"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Ready",
        "Creating",
        "Created",
        "Deleting",
        "Deleted",
        "Canceled",
        "Failed",
        "Succeeded",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "RegistrationAssignment": {
      "type": "object",
      "description": "The registration assignment.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RegistrationAssignmentProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The GUID of the registration assignment.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RegistrationAssignmentListResult": {
      "type": "object",
      "description": "The response of a RegistrationAssignment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RegistrationAssignment items on this page",
          "items": {
            "$ref": "#/definitions/RegistrationAssignment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RegistrationAssignmentProperties": {
      "type": "object",
      "description": "The properties of the registration assignment.",
      "properties": {
        "registrationDefinitionId": {
          "type": "string",
          "description": "The fully qualified path of the registration definition."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the registration assignment.",
          "readOnly": true
        },
        "registrationDefinition": {
          "$ref": "#/definitions/RegistrationAssignmentPropertiesRegistrationDefinition",
          "description": "The registration definition associated with the registration assignment.",
          "readOnly": true
        }
      },
      "required": [
        "registrationDefinitionId"
      ]
    },
    "RegistrationAssignmentPropertiesRegistrationDefinition": {
      "type": "object",
      "description": "The registration definition associated with the registration assignment.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RegistrationAssignmentPropertiesRegistrationDefinitionProperties",
          "description": "The properties of the registration definition associated with the registration assignment."
        },
        "plan": {
          "$ref": "#/definitions/Plan",
          "description": "The details for the Managed Services offer’s plan in Azure Marketplace."
        },
        "id": {
          "type": "string",
          "description": "The fully qualified path of the registration definition.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the Azure resource (Microsoft.ManagedServices/registrationDefinitions).",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the registration definition.",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "The metadata for the registration definition resource.",
          "readOnly": true
        }
      }
    },
    "RegistrationAssignmentPropertiesRegistrationDefinitionProperties": {
      "type": "object",
      "description": "The properties of the registration definition associated with the registration assignment.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the registration definition."
        },
        "authorizations": {
          "type": "array",
          "description": "The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.",
          "items": {
            "$ref": "#/definitions/Authorization"
          },
          "x-ms-identifiers": []
        },
        "eligibleAuthorizations": {
          "type": "array",
          "description": "The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.",
          "items": {
            "$ref": "#/definitions/EligibleAuthorization"
          },
          "x-ms-identifiers": []
        },
        "registrationDefinitionName": {
          "type": "string",
          "description": "The name of the registration definition."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the registration definition."
        },
        "manageeTenantId": {
          "type": "string",
          "description": "The identifier of the managed tenant."
        },
        "manageeTenantName": {
          "type": "string",
          "description": "The name of the managed tenant."
        },
        "managedByTenantId": {
          "type": "string",
          "description": "The identifier of the managedBy tenant."
        },
        "managedByTenantName": {
          "type": "string",
          "description": "The name of the managedBy tenant."
        }
      }
    },
    "RegistrationDefinition": {
      "type": "object",
      "description": "The registration definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RegistrationDefinitionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The GUID of the registration definition.",
          "readOnly": true
        },
        "plan": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Plan",
          "description": "Details of the resource plan."
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RegistrationDefinitionListResult": {
      "type": "object",
      "description": "The response of a RegistrationDefinition list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RegistrationDefinition items on this page",
          "items": {
            "$ref": "#/definitions/RegistrationDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RegistrationDefinitionProperties": {
      "type": "object",
      "description": "The properties of a registration definition.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the registration definition."
        },
        "authorizations": {
          "type": "array",
          "description": "The collection of authorization objects describing the access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.",
          "items": {
            "$ref": "#/definitions/Authorization"
          },
          "x-ms-identifiers": []
        },
        "eligibleAuthorizations": {
          "type": "array",
          "description": "The collection of eligible authorization objects describing the just-in-time access Azure Active Directory principals in the managedBy tenant will receive on the delegated resource in the managed tenant.",
          "items": {
            "$ref": "#/definitions/EligibleAuthorization"
          },
          "x-ms-identifiers": []
        },
        "registrationDefinitionName": {
          "type": "string",
          "description": "The name of the registration definition."
        },
        "managedByTenantId": {
          "type": "string",
          "description": "The identifier of the managedBy tenant."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the registration definition.",
          "readOnly": true
        },
        "manageeTenantId": {
          "type": "string",
          "description": "The identifier of the managed tenant.",
          "readOnly": true
        },
        "manageeTenantName": {
          "type": "string",
          "description": "The name of the managed tenant.",
          "readOnly": true
        },
        "managedByTenantName": {
          "type": "string",
          "description": "The name of the managedBy tenant.",
          "readOnly": true
        }
      },
      "required": [
        "authorizations",
        "managedByTenantId"
      ]
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2022-10-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_10_01",
            "value": "2022-10-01"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    }
  }
}
