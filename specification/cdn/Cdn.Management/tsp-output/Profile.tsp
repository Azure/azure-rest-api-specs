import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";
import "@typespec/rest";
import "./models.tsp";

using TypeSpec.Rest;
using Azure.ResourceManager;
using Azure.ResourceManager.Foundations;
using TypeSpec.Http;

namespace Azure.ResourceManager.Cdn;
@doc("A profile is a logical grouping of endpoints that share the same settings.")
model Profile is TrackedResource<ProfileProperties> {
  @doc("Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.")
  @path
  @key("profileName")
  @segment("profiles")
  name: string;

  ...Azure.ResourceManager.ResourceSku;
  ...Azure.ResourceManager.ResourceKind;
}

@armResourceOperations
interface Profiles {
  @doc("Gets an Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified profile name under the specified subscription and resource group.")
  get is ArmResourceRead<Profile>;
  @doc("Creates a new Azure Front Door Standard or Azure Front Door Premium or CDN profile with a profile name under the specified subscription and resource group.")
  create is ArmResourceCreateOrUpdateAsync<Profile>;
  @doc("Updates an existing Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified profile name under the specified subscription and resource group.")
  update is ArmResourcePatchAsync<Profile, ProfileProperties>;
  @doc("Deletes an existing  Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified parameters. Deleting a profile will result in the deletion of all of the sub-resources including endpoints, origins and custom domains.")
  delete is ArmResourceDeleteAsync<Profile>;
  @doc("Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within a resource group.")
  listByResourceGroup is ArmResourceListByParent<Profile>;
  @doc("Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within an Azure subscription.")
  list is ArmListBySubscription<Profile>;
  @doc("Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is used to configure advanced feature capabilities that are not yet available in the Azure portal, such as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and alerts in a premium profile. The SSO URI changes approximately every 10 minutes.")
  generateSsoUri is ArmResourceActionSync<Profile, void, SsoUri>;
  @doc("Gets the supported optimization types for the current profile. A user can create an endpoint with an optimization type from the listed values.")
  listSupportedOptimizationTypes is ArmResourceActionSync<
    Profile,
    void,
    SupportedOptimizationTypesListResult
  >;
  @doc("Checks the quota and actual usage of endpoints under the given Azure Front Door Standard or Azure Front Door Premium or CDN profile.")
  listResourceUsage is ArmResourceActionSync<
    Profile,
    void,
    ResourceUsageListResult
  >;
}

@armResourceOperations
interface FrontDoorProfiles {
  @doc("Checks the quota and actual usage of AzureFrontDoor endpoints under the given CDN profile.")
  listResourceUsage is ArmResourceActionSync<Profile, void, UsagesListResult>;
  @doc("Check the name availability of a host name.")
  checkHostNameAvailability is ArmResourceActionSync<
    Profile,
    HostNameAvailabilityContent,
    CdnNameAvailabilityResult
  >;
}

@armResourceOperations
interface LogAnalytics {
  @doc("Get log report for AFD profile")
  @route("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsMetrics")
  @get
  GetLogAnalyticsMetrics is Azure.Core.Foundations.Operation<
    {
      @doc("Azure Subscription ID.")
      @path
      subscriptionId: string;

      @doc("Name of the Resource group within the Azure subscription.")
      @maxLength(90)
      @minLength(1)
      @pattern("^[-\\w\\._\\(\\)]+$")
      @path
      resourceGroupName: string;

      @doc("Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.")
      @path
      profileName: string;

      @query({
        name: "metrics",
        format: "multi",
      })
      metrics: LogMetric[];

      @query("dateTimeBegin")
      dateTimeBegin: utcDateTime;

      @query("dateTimeEnd")
      dateTimeEnd: utcDateTime;

      @query("granularity")
      granularity: LogMetricsGranularity;

      @query({
        name: "groupBy",
        format: "multi",
      })
      groupBy?: LogMetricsGroupBy[];

      @query({
        name: "continents",
        format: "multi",
      })
      continents?: string[];

      @query({
        name: "countryOrRegions",
        format: "multi",
      })
      countryOrRegions?: string[];

      @query({
        name: "customDomains",
        format: "multi",
      })
      customDomains: string[];

      @query({
        name: "protocols",
        format: "multi",
      })
      protocols: string[];
    },
    MetricsResponse
  >;

  @doc("Get log analytics ranking report for AFD profile")
  @route("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsRankings")
  @get
  GetLogAnalyticsRankings is Azure.Core.Foundations.Operation<
    {
      @doc("Azure Subscription ID.")
      @path
      subscriptionId: string;

      @doc("Name of the Resource group within the Azure subscription.")
      @maxLength(90)
      @minLength(1)
      @pattern("^[-\\w\\._\\(\\)]+$")
      @path
      resourceGroupName: string;

      @doc("Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.")
      @path
      profileName: string;

      @query({
        name: "rankings",
        format: "multi",
      })
      rankings: LogRanking[];

      @query({
        name: "metrics",
        format: "multi",
      })
      metrics: LogRankingMetric[];

      @query("maxRanking")
      maxRanking: int32;

      @query("dateTimeBegin")
      dateTimeBegin: utcDateTime;

      @query("dateTimeEnd")
      dateTimeEnd: utcDateTime;

      @query({
        name: "customDomains",
        format: "multi",
      })
      customDomains?: string[];
    },
    RankingsResponse
  >;

  @doc("Get all available location names for AFD log analytics report.")
  @route("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsLocations")
  @get
  GetLogAnalyticsLocations is Azure.Core.Foundations.Operation<
    {
      @doc("Azure Subscription ID.")
      @path
      subscriptionId: string;

      @doc("Name of the Resource group within the Azure subscription.")
      @maxLength(90)
      @minLength(1)
      @pattern("^[-\\w\\._\\(\\)]+$")
      @path
      resourceGroupName: string;

      @doc("Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.")
      @path
      profileName: string;
    },
    ContinentsResponse
  >;

  @doc("Get all endpoints and custom domains available for AFD log report")
  @route("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsResources")
  @get
  GetLogAnalyticsResources is Azure.Core.Foundations.Operation<
    {
      @doc("Azure Subscription ID.")
      @path
      subscriptionId: string;

      @doc("Name of the Resource group within the Azure subscription.")
      @maxLength(90)
      @minLength(1)
      @pattern("^[-\\w\\._\\(\\)]+$")
      @path
      resourceGroupName: string;

      @doc("Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.")
      @path
      profileName: string;
    },
    ResourcesResponse
  >;

  @doc("Get Waf related log analytics report for AFD profile.")
  @route("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsMetrics")
  @get
  GetWafLogAnalyticsMetrics is Azure.Core.Foundations.Operation<
    {
      @doc("Azure Subscription ID.")
      @path
      subscriptionId: string;

      @doc("Name of the Resource group within the Azure subscription.")
      @maxLength(90)
      @minLength(1)
      @pattern("^[-\\w\\._\\(\\)]+$")
      @path
      resourceGroupName: string;

      @doc("Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.")
      @path
      profileName: string;

      @query({
        name: "metrics",
        format: "multi",
      })
      metrics: WafMetric[];

      @query("dateTimeBegin")
      dateTimeBegin: utcDateTime;

      @query("dateTimeEnd")
      dateTimeEnd: utcDateTime;

      @query("granularity")
      granularity: WafGranularity;

      @query({
        name: "actions",
        format: "multi",
      })
      actions?: WafAction[];

      @query({
        name: "groupBy",
        format: "multi",
      })
      groupBy?: WafRankingGroupBy[];

      @query({
        name: "ruleTypes",
        format: "multi",
      })
      ruleTypes?: WafRuleType[];
    },
    WafMetricsResponse
  >;

  @doc("Get WAF log analytics charts for AFD profile")
  @route("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsRankings")
  @get
  GetWafLogAnalyticsRankings is Azure.Core.Foundations.Operation<
    {
      @doc("Azure Subscription ID.")
      @path
      subscriptionId: string;

      @doc("Name of the Resource group within the Azure subscription.")
      @maxLength(90)
      @minLength(1)
      @pattern("^[-\\w\\._\\(\\)]+$")
      @path
      resourceGroupName: string;

      @doc("Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.")
      @path
      profileName: string;

      @query({
        name: "metrics",
        format: "multi",
      })
      metrics: WafMetric[];

      @query("dateTimeBegin")
      dateTimeBegin: utcDateTime;

      @query("dateTimeEnd")
      dateTimeEnd: utcDateTime;

      @query("maxRanking")
      maxRanking: int32;

      @query({
        name: "rankings",
        format: "multi",
      })
      rankings: WafRankingType[];

      @query({
        name: "actions",
        format: "multi",
      })
      actions?: WafAction[];

      @query({
        name: "ruleTypes",
        format: "multi",
      })
      ruleTypes?: WafRuleType[];
    },
    WafRankingsResponse
  >;
}
