{
  "swagger": "2.0",
  "info": {
    "title": "CdnManagementClient",
    "version": "2021-06-01",
    "description": "Cdn Management Client",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "AFDDomains"
    },
    {
      "name": "Profiles"
    },
    {
      "name": "AFDEndpoints"
    },
    {
      "name": "AFDOriginGroups"
    },
    {
      "name": "AFDOrigins"
    },
    {
      "name": "FrontDoorRoutes"
    },
    {
      "name": "FrontDoorRuleSets"
    },
    {
      "name": "FrontDoorRules"
    },
    {
      "name": "FrontDoorSecurityPolicies"
    },
    {
      "name": "FrontDoorSecrets"
    },
    {
      "name": "CdnEndpoints"
    },
    {
      "name": "CdnOrigins"
    },
    {
      "name": "CdnOriginGroups"
    },
    {
      "name": "CdnCustomDomains"
    },
    {
      "name": "CdnWebApplicationFirewallPolicies"
    }
  ],
  "paths": {
    "/providers/Microsoft.Cdn/checkNameAvailability": {
      "post": {
        "operationId": "CheckNameAvailability",
        "description": "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CdnNameAvailabilityContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CdnNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Cdn/edgenodes": {
      "get": {
        "operationId": "EdgeNodesOperations_List",
        "description": "Edgenodes are the global Point of Presence (POP) locations used to deliver CDN content to end users.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedEdgeNode"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Cdn/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/cdnWebApplicationFirewallManagedRuleSets": {
      "get": {
        "operationId": "ManagedRuleSetsOperations_List",
        "description": "Lists all available managed rule sets.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedManagedRuleSetDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/checkNameAvailability": {
      "post": {
        "operationId": "CheckNameAvailabilityWithSubscription",
        "description": "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkNameAvailabilityInput",
            "in": "body",
            "description": "Input to check.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CdnNameAvailabilityContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CdnNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/checkResourceUsage": {
      "post": {
        "operationId": "ResourceUsageOperations_List",
        "description": "Check the quota and actual usage of the CDN profiles under the given subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedCdnUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/profiles": {
      "get": {
        "operationId": "Profiles_List",
        "tags": [
          "Profiles"
        ],
        "description": "Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProfileListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Profiles_List": {
            "$ref": "./examples/Profiles_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/validateProbe": {
      "post": {
        "operationId": "ValidateProbe",
        "description": "Check if the probe path is a valid path and the file can be accessed. Probe path is the path to a file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN endpoint. This path is relative to the origin path specified in the endpoint configuration.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "validateProbeInput",
            "in": "body",
            "description": "Input to check.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateProbeInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ValidateProbeResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/cdnWebApplicationFirewallPolicies": {
      "get": {
        "operationId": "Policies_List",
        "tags": [
          "CdnWebApplicationFirewallPolicies"
        ],
        "description": "Lists all of the protection policies within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnWebApplicationFirewallPolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Policies in a Resource Group": {
            "$ref": "./examples/Policies_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/cdnWebApplicationFirewallPolicies/{policyName}": {
      "get": {
        "operationId": "Policies_Get",
        "tags": [
          "CdnWebApplicationFirewallPolicies"
        ],
        "description": "Retrieve protection policy with specified name within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the CdnWebApplicationFirewallPolicy.",
            "required": true,
            "type": "string",
            "maxLength": 128
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnWebApplicationFirewallPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Policy": {
            "$ref": "./examples/Policies_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Policies_CreateOrUpdate",
        "tags": [
          "CdnWebApplicationFirewallPolicies"
        ],
        "description": "Create or update policy with specified rule set name within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the CdnWebApplicationFirewallPolicy.",
            "required": true,
            "type": "string",
            "maxLength": 128
          },
          {
            "name": "cdnWebApplicationFirewallPolicy",
            "in": "body",
            "description": "Policy to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CdnWebApplicationFirewallPolicy"
            },
            "x-ms-client-name": "cdnWebApplicationFirewallPolicy"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CdnWebApplicationFirewallPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CdnWebApplicationFirewallPolicy"
            }
          },
          "201": {
            "description": "Resource 'CdnWebApplicationFirewallPolicy' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CdnWebApplicationFirewallPolicy"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates specific policy": {
            "$ref": "./examples/Policies_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Policies_Update",
        "tags": [
          "CdnWebApplicationFirewallPolicies"
        ],
        "description": "Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the specified subscription and resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the CdnWebApplicationFirewallPolicy.",
            "required": true,
            "type": "string",
            "maxLength": 128
          },
          {
            "name": "cdnWebApplicationFirewallPolicyPatchParameters",
            "in": "body",
            "description": "CdnWebApplicationFirewallPolicy parameters to be patched.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CdnWebApplicationFirewallPolicyPatchParameters"
            },
            "x-ms-client-name": "cdnWebApplicationFirewallPolicyPatchParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnWebApplicationFirewallPolicy"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates specific policy": {
            "$ref": "./examples/Policies_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Policies_Delete",
        "tags": [
          "CdnWebApplicationFirewallPolicies"
        ],
        "description": "Deletes Policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "The name of the CdnWebApplicationFirewallPolicy.",
            "required": true,
            "type": "string",
            "maxLength": 128
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete protection policy": {
            "$ref": "./examples/Policies_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/checkEndpointNameAvailability": {
      "post": {
        "operationId": "CheckEndpointNameAvailability",
        "description": "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a afdx endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "checkEndpointNameAvailabilityInput",
            "in": "body",
            "description": "Input to check.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointNameAvailabilityContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EndpointNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles": {
      "get": {
        "operationId": "Profiles_ListByResourceGroup",
        "tags": [
          "Profiles"
        ],
        "description": "Lists all of the Azure Front Door Standard, Azure Front Door Premium, and CDN profiles within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProfileListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Profiles_ListByResourceGroup": {
            "$ref": "./examples/Profiles_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}": {
      "get": {
        "operationId": "Profiles_Get",
        "tags": [
          "Profiles"
        ],
        "description": "Gets an Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified profile name under the specified subscription and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Profiles_Get": {
            "$ref": "./examples/Profiles_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Profiles_Create",
        "tags": [
          "Profiles"
        ],
        "description": "Creates a new Azure Front Door Standard or Azure Front Door Premium or CDN profile with a profile name under the specified subscription and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile",
            "in": "body",
            "description": "Profile properties needed to create a new profile.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Profile"
            },
            "x-ms-client-name": "profile"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Profile' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "201": {
            "description": "Resource 'Profile' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Profile"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Profiles_Create": {
            "$ref": "./examples/Profiles_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Profiles_Update",
        "tags": [
          "Profiles"
        ],
        "description": "Updates an existing Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified profile name under the specified subscription and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileUpdateParameters",
            "in": "body",
            "description": "Profile properties needed to update an existing profile.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfileUpdateParameters"
            },
            "x-ms-client-name": "profileUpdateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Profiles_Update": {
            "$ref": "./examples/Profiles_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Profiles_Delete",
        "tags": [
          "Profiles"
        ],
        "description": "Deletes an existing  Azure Front Door Standard or Azure Front Door Premium or CDN profile with the specified parameters. Deleting a profile will result in the deletion of all of the sub-resources including endpoints, origins and custom domains.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Profiles_Delete": {
            "$ref": "./examples/Profiles_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints": {
      "get": {
        "operationId": "FrontDoorEndpoints_ListByProfile",
        "tags": [
          "AFDEndpoints"
        ],
        "description": "Lists existing AzureFrontDoor endpoints.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AFDEndpointListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDEndpoints_ListByProfile": {
            "$ref": "./examples/FrontDoorEndpoints_ListByProfile.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}": {
      "get": {
        "operationId": "FrontDoorEndpoints_Get",
        "tags": [
          "AFDEndpoints"
        ],
        "description": "Gets an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource group and profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AFDEndpoint"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDEndpoints_Get": {
            "$ref": "./examples/FrontDoorEndpoints_Get.json"
          }
        }
      },
      "put": {
        "operationId": "FrontDoorEndpoints_Create",
        "tags": [
          "AFDEndpoints"
        ],
        "description": "Creates a new AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource group and profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointInput",
            "in": "body",
            "description": "Endpoint properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AFDEndpoint"
            },
            "x-ms-client-name": "endpointInput"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AFDEndpoint' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AFDEndpoint"
            }
          },
          "201": {
            "description": "Resource 'AFDEndpoint' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AFDEndpoint"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDEndpoints_Create": {
            "$ref": "./examples/FrontDoorEndpoints_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "FrontDoorEndpoints_Update",
        "tags": [
          "AFDEndpoints"
        ],
        "description": "Updates an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource group and profile. Only tags can be updated after creating an endpoint. To update origins, use the Update Origin operation. To update origin groups, use the Update Origin group operation. To update domains, use the Update Custom Domain operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointUpdateProperties",
            "in": "body",
            "description": "Endpoint update properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AFDEndpointUpdateParameters"
            },
            "x-ms-client-name": "endpointUpdateProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AFDEndpoint"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDEndpoints_Update": {
            "$ref": "./examples/FrontDoorEndpoints_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FrontDoorEndpoints_Delete",
        "tags": [
          "AFDEndpoints"
        ],
        "description": "Deletes an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource group and profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDEndpoints_Delete": {
            "$ref": "./examples/FrontDoorEndpoints_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/listResourceUsage": {
      "post": {
        "operationId": "FrontDoorEndpoints_ListResourceUsage",
        "tags": [
          "AFDEndpoints"
        ],
        "description": "Checks the quota and actual usage of the given AzureFrontDoor endpoint under the given CDN profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedFrontDoorUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDEndpoints_ListResourceUsage": {
            "$ref": "./examples/FrontDoorEndpoints_ListResourceUsage.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/purgeContent": {
      "post": {
        "operationId": "FrontDoorEndpoints_PurgeContent",
        "tags": [
          "AFDEndpoints"
        ],
        "description": "Removes a content from AzureFrontDoor.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "contents",
            "in": "body",
            "description": "The list of paths to the content and the list of linked domains to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrontDoorPurgeParameters"
            },
            "x-ms-client-name": "contents"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDEndpoints_PurgeContent": {
            "$ref": "./examples/FrontDoorEndpoints_PurgeContent.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes": {
      "get": {
        "operationId": "FrontDoorRoutes_ListByEndpoint",
        "tags": [
          "FrontDoorRoutes"
        ],
        "description": "Lists all of the existing origins within a profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorRouteListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Routes_ListByEndpoint": {
            "$ref": "./examples/FrontDoorRoutes_ListByEndpoint.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/routes/{routeName}": {
      "get": {
        "operationId": "FrontDoorRoutes_Get",
        "tags": [
          "FrontDoorRoutes"
        ],
        "description": "Gets an existing route with the specified route name under the specified subscription, resource group, profile, and AzureFrontDoor endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "routeName",
            "in": "path",
            "description": "Name of the routing rule.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorRoute"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Routes_Get": {
            "$ref": "./examples/FrontDoorRoutes_Get.json"
          }
        }
      },
      "put": {
        "operationId": "FrontDoorRoutes_Create",
        "tags": [
          "FrontDoorRoutes"
        ],
        "description": "Creates a new route with the specified route name under the specified subscription, resource group, profile, and AzureFrontDoor endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "routeName",
            "in": "path",
            "description": "Name of the routing rule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "route",
            "in": "body",
            "description": "Route properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrontDoorRoute"
            },
            "x-ms-client-name": "route"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FrontDoorRoute' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FrontDoorRoute"
            }
          },
          "201": {
            "description": "Resource 'FrontDoorRoute' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FrontDoorRoute"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Routes_Create": {
            "$ref": "./examples/FrontDoorRoutes_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "FrontDoorRoutes_Update",
        "tags": [
          "FrontDoorRoutes"
        ],
        "description": "Updates an existing route with the specified route name under the specified subscription, resource group, profile, and AzureFrontDoor endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "routeName",
            "in": "path",
            "description": "Name of the routing rule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "routeUpdateProperties",
            "in": "body",
            "description": "Route update properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteUpdateParameters"
            },
            "x-ms-client-name": "routeUpdateProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorRoute"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Routes_Update": {
            "$ref": "./examples/FrontDoorRoutes_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FrontDoorRoutes_Delete",
        "tags": [
          "FrontDoorRoutes"
        ],
        "description": "Deletes an existing route with the specified route name under the specified subscription, resource group, profile, and AzureFrontDoor endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "routeName",
            "in": "path",
            "description": "Name of the routing rule.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Routes_Delete": {
            "$ref": "./examples/FrontDoorRoutes_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}/validateCustomDomain": {
      "post": {
        "operationId": "FrontDoorEndpoints_ValidateCustomDomain",
        "tags": [
          "AFDEndpoints"
        ],
        "description": "Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.This api isn't work for apex domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainProperties",
            "in": "body",
            "description": "Custom domain to be validated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCustomDomainContent"
            },
            "x-ms-client-name": "customDomainProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidateCustomDomainResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoints_ValidateCustomDomain": {
            "$ref": "./examples/FrontDoorEndpoints_ValidateCustomDomain.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/checkHostNameAvailability": {
      "post": {
        "operationId": "FrontDoorProfiles_CheckHostNameAvailability",
        "tags": [
          "Profiles"
        ],
        "description": "Check the name availability of a host name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkHostNameAvailabilityInput",
            "in": "body",
            "description": "Custom domain to be validated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostNameAvailabilityContent"
            },
            "x-ms-client-name": "checkHostNameAvailabilityInput"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDProfiles_CheckHostNameAvailability": {
            "$ref": "./examples/FrontDoorProfiles_CheckHostNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains": {
      "get": {
        "operationId": "FrontDoorCustomDomains_ListByProfile",
        "tags": [
          "AFDDomains"
        ],
        "description": "Lists existing AzureFrontDoor domains.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AFDDomainListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDCustomDomains_ListByProfile": {
            "$ref": "./examples/FrontDoorCustomDomains_ListByProfile.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains/{customDomainName}": {
      "get": {
        "operationId": "FrontDoorCustomDomains_Get",
        "tags": [
          "AFDDomains"
        ],
        "description": "Gets an existing AzureFrontDoor domain with the specified domain name under the specified subscription, resource group and profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainName",
            "in": "path",
            "description": "Name of the domain under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AFDDomain"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDCustomDomains_Get": {
            "$ref": "./examples/FrontDoorCustomDomains_Get.json"
          }
        }
      },
      "put": {
        "operationId": "FrontDoorCustomDomains_Create",
        "tags": [
          "AFDDomains"
        ],
        "description": "Creates a new domain within the specified profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainName",
            "in": "path",
            "description": "Name of the domain under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomain",
            "in": "body",
            "description": "Domain properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AFDDomain"
            },
            "x-ms-client-name": "customDomain"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AFDDomain' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AFDDomain"
            }
          },
          "201": {
            "description": "Resource 'AFDDomain' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AFDDomain"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDCustomDomains_Create": {
            "$ref": "./examples/FrontDoorCustomDomains_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "FrontDoorCustomDomains_Update",
        "tags": [
          "AFDDomains"
        ],
        "description": "Updates an existing domain within a profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainName",
            "in": "path",
            "description": "Name of the domain under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainUpdateProperties",
            "in": "body",
            "description": "Domain properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AFDDomainUpdateParameters"
            },
            "x-ms-client-name": "customDomainUpdateProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AFDDomain"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDCustomDomains_Update": {
            "$ref": "./examples/FrontDoorCustomDomains_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FrontDoorCustomDomains_Delete",
        "tags": [
          "AFDDomains"
        ],
        "description": "Deletes an existing AzureFrontDoor domain with the specified domain name under the specified subscription, resource group and profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainName",
            "in": "path",
            "description": "Name of the domain under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDCustomDomains_Delete": {
            "$ref": "./examples/FrontDoorCustomDomains_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains/{customDomainName}/refreshValidationToken": {
      "post": {
        "operationId": "FrontDoorCustomDomains_RefreshValidationToken",
        "tags": [
          "AFDDomains"
        ],
        "description": "Updates the domain validation token.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainName",
            "in": "path",
            "description": "Name of the domain under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDCustomDomains_Delete": {
            "$ref": "./examples/FrontDoorCustomDomains_RefreshValidationToken.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints": {
      "get": {
        "operationId": "CdnEndpoints_ListByProfile",
        "tags": [
          "CdnEndpoints"
        ],
        "description": "Lists existing CDN endpoints.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnEndpointListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoints_ListByProfile": {
            "$ref": "./examples/CdnEndpoints_ListByProfile.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}": {
      "get": {
        "operationId": "CdnEndpoints_Get",
        "tags": [
          "CdnEndpoints"
        ],
        "description": "Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnEndpoint"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoints_Get": {
            "$ref": "./examples/CdnEndpoints_Get.json"
          }
        }
      },
      "put": {
        "operationId": "CdnEndpoints_Create",
        "tags": [
          "CdnEndpoints"
        ],
        "description": "Creates a new CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointInput",
            "in": "body",
            "description": "Endpoint properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CdnEndpoint"
            },
            "x-ms-client-name": "endpointInput"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CdnEndpoint' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CdnEndpoint"
            }
          },
          "201": {
            "description": "Resource 'CdnEndpoint' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CdnEndpoint"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoints_Create": {
            "$ref": "./examples/CdnEndpoints_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CdnEndpoints_Update",
        "tags": [
          "CdnEndpoints"
        ],
        "description": "Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. Only tags can be updated after creating an endpoint. To update origins, use the Update Origin operation. To update origin groups, use the Update Origin group operation. To update custom domains, use the Update Custom Domain operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointUpdateProperties",
            "in": "body",
            "description": "Endpoint update properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointUpdateParameters"
            },
            "x-ms-client-name": "endpointUpdateProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnEndpoint"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoints_Update": {
            "$ref": "./examples/CdnEndpoints_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CdnEndpoints_Delete",
        "tags": [
          "CdnEndpoints"
        ],
        "description": "Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoints_Delete": {
            "$ref": "./examples/CdnEndpoints_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains": {
      "get": {
        "operationId": "CdnCustomDomains_ListByEndpoint",
        "tags": [
          "CdnCustomDomains"
        ],
        "description": "Lists all of the existing custom domains within an endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnCustomDomainListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomDomains_ListByEndpoint": {
            "$ref": "./examples/CdnCustomDomains_ListByEndpoint.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}": {
      "get": {
        "operationId": "CdnCustomDomains_Get",
        "tags": [
          "CdnCustomDomains"
        ],
        "description": "Gets an existing custom domain within an endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainName",
            "in": "path",
            "description": "Name of the custom domain within an endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnCustomDomain"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomDomains_Get": {
            "$ref": "./examples/CdnCustomDomains_Get.json"
          }
        }
      },
      "put": {
        "operationId": "CdnCustomDomains_Create",
        "tags": [
          "CdnCustomDomains"
        ],
        "description": "Creates a new custom domain within an endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainName",
            "in": "path",
            "description": "Name of the custom domain within an endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainProperties",
            "in": "body",
            "description": "Properties required to create a new custom domain.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CdnCustomDomain"
            },
            "x-ms-client-name": "customDomainProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CdnCustomDomain' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CdnCustomDomain"
            }
          },
          "201": {
            "description": "Resource 'CdnCustomDomain' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CdnCustomDomain"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomDomains_Create": {
            "$ref": "./examples/CdnCustomDomains_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CdnCustomDomains_Delete",
        "tags": [
          "CdnCustomDomains"
        ],
        "description": "Deletes an existing custom domain within an endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainName",
            "in": "path",
            "description": "Name of the custom domain within an endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomDomains_Delete": {
            "$ref": "./examples/CdnCustomDomains_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/disableCustomHttps": {
      "post": {
        "operationId": "CdnCustomDomains_DisableCustomHttps",
        "tags": [
          "CdnCustomDomains"
        ],
        "description": "Disable https delivery of the custom domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainName",
            "in": "path",
            "description": "Name of the custom domain within an endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnCustomDomain"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomDomains_DisableCustomHttps": {
            "$ref": "./examples/CdnCustomDomains_DisableCustomHttps.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/enableCustomHttps": {
      "post": {
        "operationId": "CdnCustomDomains_EnableCustomHttps",
        "tags": [
          "CdnCustomDomains"
        ],
        "description": "Enable https delivery of the custom domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainName",
            "in": "path",
            "description": "Name of the custom domain within an endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainHttpsParameters",
            "in": "body",
            "description": "The configuration specifying how to enable HTTPS for the custom domain - using CDN managed certificate or user's own certificate. If not specified, enabling ssl uses CDN managed certificate by default.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomDomainHttpsParameters"
            },
            "x-ms-client-name": "customDomainHttpsParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnCustomDomain"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CustomDomains_EnableCustomHttpsUsingCDNManagedCertificate": {
            "$ref": "./examples/CdnCustomDomains_EnableCustomHttps_Custom_Domains_Enable_Custom_Https_Using_Cdn_Managed_Certificate.json"
          },
          "CustomDomains_EnableCustomHttpsUsingYourOwnCertificate": {
            "$ref": "./examples/CdnCustomDomains_EnableCustomHttps_Custom_Domains_Enable_Custom_Https_Using_Your_Own_Certificate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/listResourceUsage": {
      "post": {
        "operationId": "CdnEndpoints_ListResourceUsage",
        "tags": [
          "CdnEndpoints"
        ],
        "description": "Checks the quota and usage of geo filters and custom domains under the given endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedCdnUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoints_ListResourceUsage": {
            "$ref": "./examples/CdnEndpoints_ListResourceUsage.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/loadContent": {
      "post": {
        "operationId": "CdnEndpoints_LoadContent",
        "tags": [
          "CdnEndpoints"
        ],
        "description": "Pre-loads a content to CDN. Available for Verizon Profiles.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "contentFilePaths",
            "in": "body",
            "description": "The path to the content to be loaded. Path should be a full URL, e.g. ‘/pictures/city.png' which loads a single file ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoadParameters"
            },
            "x-ms-client-name": "contentFilePaths"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoints_LoadContent": {
            "$ref": "./examples/CdnEndpoints_LoadContent.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups": {
      "get": {
        "operationId": "CdnOriginGroups_ListByEndpoint",
        "tags": [
          "CdnOriginGroups"
        ],
        "description": "Lists all of the existing origin groups within an endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnOriginGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OriginsGroups_ListByEndpoint": {
            "$ref": "./examples/CdnOriginGroups_ListByEndpoint.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/originGroups/{originGroupName}": {
      "get": {
        "operationId": "CdnOriginGroups_Get",
        "tags": [
          "CdnOriginGroups"
        ],
        "description": "Gets an existing origin group within an endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnOriginGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OriginGroups_Get": {
            "$ref": "./examples/CdnOriginGroups_Get.json"
          }
        }
      },
      "put": {
        "operationId": "CdnOriginGroups_Create",
        "tags": [
          "CdnOriginGroups"
        ],
        "description": "Creates a new origin group within the specified endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroup",
            "in": "body",
            "description": "Origin group properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CdnOriginGroup"
            },
            "x-ms-client-name": "originGroup"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CdnOriginGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CdnOriginGroup"
            }
          },
          "201": {
            "description": "Resource 'CdnOriginGroup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CdnOriginGroup"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OriginGroups_Create": {
            "$ref": "./examples/CdnOriginGroups_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CdnOriginGroups_Update",
        "tags": [
          "CdnOriginGroups"
        ],
        "description": "Updates an existing origin group within an endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupUpdateProperties",
            "in": "body",
            "description": "Origin group properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OriginGroupUpdateParameters"
            },
            "x-ms-client-name": "originGroupUpdateProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnOriginGroup"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OriginGroups_Update": {
            "$ref": "./examples/CdnOriginGroups_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CdnOriginGroups_Delete",
        "tags": [
          "CdnOriginGroups"
        ],
        "description": "Deletes an existing origin group within an endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OriginGroups_Delete": {
            "$ref": "./examples/CdnOriginGroups_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins": {
      "get": {
        "operationId": "CdnOrigins_ListByEndpoint",
        "tags": [
          "CdnOrigins"
        ],
        "description": "Lists all of the existing origins within an endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnOriginListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Origins_ListByEndpoint": {
            "$ref": "./examples/CdnOrigins_ListByEndpoint.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/origins/{originName}": {
      "get": {
        "operationId": "CdnOrigins_Get",
        "tags": [
          "CdnOrigins"
        ],
        "description": "Gets an existing origin within an endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originName",
            "in": "path",
            "description": "Name of the origin which is unique within the endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnOrigin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Origins_Get": {
            "$ref": "./examples/CdnOrigins_Get.json"
          }
        }
      },
      "put": {
        "operationId": "CdnOrigins_Create",
        "tags": [
          "CdnOrigins"
        ],
        "description": "Creates a new origin within the specified endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originName",
            "in": "path",
            "description": "Name of the origin which is unique within the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "origin",
            "in": "body",
            "description": "Origin properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CdnOrigin"
            },
            "x-ms-client-name": "origin"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CdnOrigin' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CdnOrigin"
            }
          },
          "201": {
            "description": "Resource 'CdnOrigin' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CdnOrigin"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Origins_Create": {
            "$ref": "./examples/CdnOrigins_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CdnOrigins_Update",
        "tags": [
          "CdnOrigins"
        ],
        "description": "Updates an existing origin within an endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originName",
            "in": "path",
            "description": "Name of the origin which is unique within the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originUpdateProperties",
            "in": "body",
            "description": "Origin properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OriginUpdateParameters"
            },
            "x-ms-client-name": "originUpdateProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnOrigin"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Origins_Update": {
            "$ref": "./examples/CdnOrigins_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CdnOrigins_Delete",
        "tags": [
          "CdnOrigins"
        ],
        "description": "Deletes an existing origin within an endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originName",
            "in": "path",
            "description": "Name of the origin which is unique within the endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Origins_Delete": {
            "$ref": "./examples/CdnOrigins_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/purgeContent": {
      "post": {
        "operationId": "CdnEndpoints_PurgeContent",
        "tags": [
          "CdnEndpoints"
        ],
        "description": "Removes a content from CDN.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "contentFilePaths",
            "in": "body",
            "description": "The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurgeParameters"
            },
            "x-ms-client-name": "contentFilePaths"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoints_PurgeContent": {
            "$ref": "./examples/CdnEndpoints_PurgeContent.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/start": {
      "post": {
        "operationId": "CdnEndpoints_Start",
        "tags": [
          "CdnEndpoints"
        ],
        "description": "Starts an existing CDN endpoint that is on a stopped state.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnEndpoint"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoints_Start": {
            "$ref": "./examples/CdnEndpoints_Start.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/stop": {
      "post": {
        "operationId": "CdnEndpoints_Stop",
        "tags": [
          "CdnEndpoints"
        ],
        "description": "Stops an existing running CDN endpoint.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CdnEndpoint"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoints_Stop": {
            "$ref": "./examples/CdnEndpoints_Stop.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/validateCustomDomain": {
      "post": {
        "operationId": "CdnEndpoints_ValidateCustomDomain",
        "tags": [
          "CdnEndpoints"
        ],
        "description": "Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "endpointName",
            "in": "path",
            "description": "Name of the endpoint under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customDomainProperties",
            "in": "body",
            "description": "Custom domain to be validated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCustomDomainContent"
            },
            "x-ms-client-name": "customDomainProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidateCustomDomainResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Endpoints_ValidateCustomDomain": {
            "$ref": "./examples/CdnEndpoints_ValidateCustomDomain.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/generateSsoUri": {
      "post": {
        "operationId": "Profiles_GenerateSsoUri",
        "tags": [
          "Profiles"
        ],
        "description": "Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is used to configure advanced feature capabilities that are not yet available in the Azure portal, such as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and alerts in a premium profile. The SSO URI changes approximately every 10 minutes.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SsoUri"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Profiles_GenerateSsoUri": {
            "$ref": "./examples/Profiles_GenerateSsoUri.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsLocations/{subscriptionId}/{resourceGroupName}/{profileName}": {
      "get": {
        "operationId": "LogAnalytics_GetLogAnalyticsLocations",
        "tags": [
          "Profiles"
        ],
        "description": "Get all available location names for AFD log analytics report.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ContinentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "LogAnalytics_GetLogAnalyticsLocations": {
            "$ref": "./examples/LogAnalytics_GetLogAnalyticsLocations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsMetrics/{subscriptionId}/{resourceGroupName}/{profileName}": {
      "get": {
        "operationId": "LogAnalytics_GetLogAnalyticsMetrics",
        "tags": [
          "Profiles"
        ],
        "description": "Get log report for AFD profile",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "metrics",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "clientRequestCount",
                "clientRequestTraffic",
                "clientRequestBandwidth",
                "originRequestTraffic",
                "originRequestBandwidth",
                "totalLatency"
              ],
              "x-ms-enum": {
                "name": "LogMetric",
                "modelAsString": true
              }
            },
            "collectionFormat": "multi"
          },
          {
            "name": "dateTimeBegin",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTimeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "granularity",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "PT5M",
              "PT1H",
              "P1D"
            ],
            "x-ms-enum": {
              "name": "LogMetricsGranularity",
              "modelAsString": true
            }
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "httpStatusCode",
                "protocol",
                "cacheStatus",
                "countryOrRegion",
                "customDomain"
              ],
              "x-ms-enum": {
                "name": "LogMetricsGroupBy",
                "modelAsString": true
              }
            },
            "collectionFormat": "multi"
          },
          {
            "name": "continents",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "countryOrRegions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "customDomains",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "protocols",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/MetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "LogAnalytics_GetLogAnalyticsMetrics": {
            "$ref": "./examples/LogAnalytics_GetLogAnalyticsMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsRankings/{subscriptionId}/{resourceGroupName}/{profileName}": {
      "get": {
        "operationId": "LogAnalytics_GetLogAnalyticsRankings",
        "tags": [
          "Profiles"
        ],
        "description": "Get log analytics ranking report for AFD profile",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rankings",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "url",
                "referrer",
                "browser",
                "userAgent",
                "countryOrRegion"
              ],
              "x-ms-enum": {
                "name": "LogRanking",
                "modelAsString": true
              }
            },
            "collectionFormat": "multi"
          },
          {
            "name": "metrics",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "clientRequestCount",
                "clientRequestTraffic",
                "hitCount",
                "missCount",
                "userErrorCount",
                "errorCount"
              ],
              "x-ms-enum": {
                "name": "LogRankingMetric",
                "modelAsString": true
              }
            },
            "collectionFormat": "multi"
          },
          {
            "name": "maxRanking",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dateTimeBegin",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTimeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "customDomains",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RankingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "LogAnalytics_GetLogAnalyticsRankings": {
            "$ref": "./examples/LogAnalytics_GetLogAnalyticsRankings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsResources/{subscriptionId}/{resourceGroupName}/{profileName}": {
      "get": {
        "operationId": "LogAnalytics_GetLogAnalyticsResources",
        "tags": [
          "Profiles"
        ],
        "description": "Get all endpoints and custom domains available for AFD log report",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "LogAnalytics_GetLogAnalyticsResources": {
            "$ref": "./examples/LogAnalytics_GetLogAnalyticsResources.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsMetrics/{subscriptionId}/{resourceGroupName}/{profileName}": {
      "get": {
        "operationId": "LogAnalytics_GetWafLogAnalyticsMetrics",
        "tags": [
          "Profiles"
        ],
        "description": "Get Waf related log analytics report for AFD profile.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "metrics",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "clientRequestCount"
              ],
              "x-ms-enum": {
                "name": "WafMetric",
                "modelAsString": true
              }
            },
            "collectionFormat": "multi"
          },
          {
            "name": "dateTimeBegin",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTimeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "granularity",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "PT5M",
              "PT1H",
              "P1D"
            ],
            "x-ms-enum": {
              "name": "WafGranularity",
              "modelAsString": true
            }
          },
          {
            "name": "actions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "allow",
                "block",
                "log",
                "redirect"
              ],
              "x-ms-enum": {
                "name": "WafAction",
                "modelAsString": true
              }
            },
            "collectionFormat": "multi"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "httpStatusCode",
                "customDomain"
              ],
              "x-ms-enum": {
                "name": "WafRankingGroupBy",
                "modelAsString": true
              }
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ruleTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "managed",
                "custom",
                "bot"
              ],
              "x-ms-enum": {
                "name": "WafRuleType",
                "modelAsString": true
              }
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WafMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "LogAnalytics_GetWafLogAnalyticsMetrics": {
            "$ref": "./examples/LogAnalytics_GetWafLogAnalyticsMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsRankings/{subscriptionId}/{resourceGroupName}/{profileName}": {
      "get": {
        "operationId": "LogAnalytics_GetWafLogAnalyticsRankings",
        "tags": [
          "Profiles"
        ],
        "description": "Get WAF log analytics charts for AFD profile",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group. which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "metrics",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "clientRequestCount"
              ],
              "x-ms-enum": {
                "name": "WafMetric",
                "modelAsString": true
              }
            },
            "collectionFormat": "multi"
          },
          {
            "name": "dateTimeBegin",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTimeEnd",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "maxRanking",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rankings",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "action",
                "ruleGroup",
                "ruleId",
                "userAgent",
                "clientIp",
                "url",
                "countryOrRegion",
                "ruleType"
              ],
              "x-ms-enum": {
                "name": "WafRankingType",
                "modelAsString": true
              }
            },
            "collectionFormat": "multi"
          },
          {
            "name": "actions",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "allow",
                "block",
                "log",
                "redirect"
              ],
              "x-ms-enum": {
                "name": "WafAction",
                "modelAsString": true
              }
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ruleTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "managed",
                "custom",
                "bot"
              ],
              "x-ms-enum": {
                "name": "WafRuleType",
                "modelAsString": true
              }
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/WafRankingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "LogAnalytics_GetWafLogAnalyticsRankings": {
            "$ref": "./examples/LogAnalytics_GetWafLogAnalyticsRankings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/listResourceUsage": {
      "post": {
        "operationId": "FrontDoorProfiles_ListResourceUsage",
        "tags": [
          "Profiles"
        ],
        "description": "Checks the quota and actual usage of AzureFrontDoor endpoints under the given CDN profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedFrontDoorUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDProfiles_ListResourceUsage": {
            "$ref": "./examples/FrontDoorProfiles_ListResourceUsage.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/listSupportedOptimizationTypes": {
      "post": {
        "operationId": "Profiles_ListSupportedOptimizationTypes",
        "tags": [
          "Profiles"
        ],
        "description": "Gets the supported optimization types for the current profile. A user can create an endpoint with an optimization type from the listed values.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SupportedOptimizationTypesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Profiles_ListSupportedOptimizationTypes": {
            "$ref": "./examples/Profiles_ListSupportedOptimizationTypes.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups": {
      "get": {
        "operationId": "FrontDoorOriginGroups_ListByProfile",
        "tags": [
          "AFDOriginGroups"
        ],
        "description": "Lists all of the existing origin groups within a profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AFDOriginGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDOriginGroups_ListByProfile": {
            "$ref": "./examples/FrontDoorOriginGroups_ListByProfile.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}": {
      "get": {
        "operationId": "FrontDoorOriginGroups_Get",
        "tags": [
          "AFDOriginGroups"
        ],
        "description": "Gets an existing origin group within a profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AFDOriginGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDOriginGroups_Get": {
            "$ref": "./examples/FrontDoorOriginGroups_Get.json"
          }
        }
      },
      "put": {
        "operationId": "FrontDoorOriginGroups_Create",
        "tags": [
          "AFDOriginGroups"
        ],
        "description": "Creates a new origin group within the specified profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroup",
            "in": "body",
            "description": "Origin group properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AFDOriginGroup"
            },
            "x-ms-client-name": "originGroup"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AFDOriginGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AFDOriginGroup"
            }
          },
          "201": {
            "description": "Resource 'AFDOriginGroup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AFDOriginGroup"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDOriginGroups_Create": {
            "$ref": "./examples/FrontDoorOriginGroups_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "FrontDoorOriginGroups_Update",
        "tags": [
          "AFDOriginGroups"
        ],
        "description": "Updates an existing origin group within a profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupUpdateProperties",
            "in": "body",
            "description": "Origin group properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AFDOriginGroupUpdateParameters"
            },
            "x-ms-client-name": "originGroupUpdateProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AFDOriginGroup"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDOriginGroups_Update": {
            "$ref": "./examples/FrontDoorOriginGroups_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FrontDoorOriginGroups_Delete",
        "tags": [
          "AFDOriginGroups"
        ],
        "description": "Deletes an existing origin group within a profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDOriginGroups_Delete": {
            "$ref": "./examples/FrontDoorOriginGroups_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/listResourceUsage": {
      "post": {
        "operationId": "FrontDoorOriginGroups_ListResourceUsage",
        "tags": [
          "AFDOriginGroups"
        ],
        "description": "Checks the quota and actual usage of the given AzureFrontDoor origin group under the given CDN profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedFrontDoorUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDOriginGroups_ListResourceUsage": {
            "$ref": "./examples/FrontDoorOriginGroups_ListResourceUsage.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/origins": {
      "get": {
        "operationId": "FrontDoorOrigins_ListByOriginGroup",
        "tags": [
          "AFDOrigins"
        ],
        "description": "Lists all of the existing origins within an origin group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AFDOriginListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDOrigins_ListByOriginGroup": {
            "$ref": "./examples/FrontDoorOrigins_ListByOriginGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/origins/{originName}": {
      "get": {
        "operationId": "FrontDoorOrigins_Get",
        "tags": [
          "AFDOrigins"
        ],
        "description": "Gets an existing origin within an origin group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originName",
            "in": "path",
            "description": "Name of the origin which is unique within the profile.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AFDOrigin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDOrigins_Get": {
            "$ref": "./examples/FrontDoorOrigins_Get.json"
          }
        }
      },
      "put": {
        "operationId": "FrontDoorOrigins_Create",
        "tags": [
          "AFDOrigins"
        ],
        "description": "Creates a new origin within the specified origin group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originName",
            "in": "path",
            "description": "Name of the origin which is unique within the profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "origin",
            "in": "body",
            "description": "Origin properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AFDOrigin"
            },
            "x-ms-client-name": "origin"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AFDOrigin' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AFDOrigin"
            }
          },
          "201": {
            "description": "Resource 'AFDOrigin' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AFDOrigin"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDOrigins_Create": {
            "$ref": "./examples/FrontDoorOrigins_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "FrontDoorOrigins_Update",
        "tags": [
          "AFDOrigins"
        ],
        "description": "Updates an existing origin within an origin group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originName",
            "in": "path",
            "description": "Name of the origin which is unique within the profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originUpdateProperties",
            "in": "body",
            "description": "Origin properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AFDOriginUpdateParameters"
            },
            "x-ms-client-name": "originUpdateProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AFDOrigin"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDOrigins_Update": {
            "$ref": "./examples/FrontDoorOrigins_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FrontDoorOrigins_Delete",
        "tags": [
          "AFDOrigins"
        ],
        "description": "Deletes an existing origin within an origin group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originGroupName",
            "in": "path",
            "description": "Name of the origin group which is unique within the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "originName",
            "in": "path",
            "description": "Name of the origin which is unique within the profile.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AFDOrigins_Delete": {
            "$ref": "./examples/FrontDoorOrigins_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets": {
      "get": {
        "operationId": "FrontDoorRuleSets_ListByProfile",
        "tags": [
          "FrontDoorRuleSets"
        ],
        "description": "Lists existing AzureFrontDoor rule sets within a profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorRuleSetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RuleSets_ListByProfile": {
            "$ref": "./examples/FrontDoorRuleSets_ListByProfile.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}": {
      "get": {
        "operationId": "FrontDoorRuleSets_Get",
        "tags": [
          "FrontDoorRuleSets"
        ],
        "description": "Gets an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription, resource group and profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Name of the rule set under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorRuleSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RuleSets_Get": {
            "$ref": "./examples/FrontDoorRuleSets_Get.json"
          }
        }
      },
      "put": {
        "operationId": "FrontDoorRuleSets_Create",
        "tags": [
          "FrontDoorRuleSets"
        ],
        "description": "Creates a new rule set within the specified profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Name of the rule set under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrontDoorRuleSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FrontDoorRuleSet' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FrontDoorRuleSet"
            }
          },
          "201": {
            "description": "Resource 'FrontDoorRuleSet' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FrontDoorRuleSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RuleSets_Create": {
            "$ref": "./examples/FrontDoorRuleSets_Create.json"
          }
        }
      },
      "delete": {
        "operationId": "FrontDoorRuleSets_Delete",
        "tags": [
          "FrontDoorRuleSets"
        ],
        "description": "Deletes an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription, resource group and profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Name of the rule set under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RuleSets_Delete": {
            "$ref": "./examples/FrontDoorRuleSets_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/listResourceUsage": {
      "post": {
        "operationId": "FrontDoorRuleSets_ListResourceUsage",
        "tags": [
          "FrontDoorRuleSets"
        ],
        "description": "Checks the quota and actual usage of the given AzureFrontDoor rule set under the given CDN profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Name of the rule set under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedFrontDoorUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RuleSets_ListResourceUsage": {
            "$ref": "./examples/FrontDoorRuleSets_ListResourceUsage.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/rules": {
      "get": {
        "operationId": "FrontDoorRules_ListByRuleSet",
        "tags": [
          "FrontDoorRules"
        ],
        "description": "Lists all of the existing delivery rules within a rule set.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Name of the rule set under the profile which is unique globally.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Rules_ListByRuleSet": {
            "$ref": "./examples/FrontDoorRules_ListByRuleSet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/rules/{ruleName}": {
      "get": {
        "operationId": "FrontDoorRules_Get",
        "tags": [
          "FrontDoorRules"
        ],
        "description": "Gets an existing delivery rule within a rule set.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Name of the rule set under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleName",
            "in": "path",
            "description": "Name of the delivery rule which is unique within the endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Rules_Get": {
            "$ref": "./examples/FrontDoorRules_Get.json"
          }
        }
      },
      "put": {
        "operationId": "FrontDoorRules_Create",
        "tags": [
          "FrontDoorRules"
        ],
        "description": "Creates a new delivery rule within the specified rule set.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Name of the rule set under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleName",
            "in": "path",
            "description": "Name of the delivery rule which is unique within the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "rule",
            "in": "body",
            "description": "The delivery rule properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrontDoorRule"
            },
            "x-ms-client-name": "rule"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FrontDoorRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FrontDoorRule"
            }
          },
          "201": {
            "description": "Resource 'FrontDoorRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FrontDoorRule"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Rules_Create": {
            "$ref": "./examples/FrontDoorRules_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "FrontDoorRules_Update",
        "tags": [
          "FrontDoorRules"
        ],
        "description": "Updates an existing delivery rule within a rule set.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Name of the rule set under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleName",
            "in": "path",
            "description": "Name of the delivery rule which is unique within the endpoint.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleUpdateProperties",
            "in": "body",
            "description": "Delivery rule properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuleUpdateParameters"
            },
            "x-ms-client-name": "ruleUpdateProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorRule"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Rules_Update": {
            "$ref": "./examples/FrontDoorRules_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FrontDoorRules_Delete",
        "tags": [
          "FrontDoorRules"
        ],
        "description": "Deletes an existing delivery rule within a rule set.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "description": "Name of the rule set under the profile which is unique globally.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleName",
            "in": "path",
            "description": "Name of the delivery rule which is unique within the endpoint.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Rules_Delete": {
            "$ref": "./examples/FrontDoorRules_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets": {
      "get": {
        "operationId": "FrontDoorSecrets_ListByProfile",
        "tags": [
          "FrontDoorSecrets"
        ],
        "description": "Lists existing AzureFrontDoor secrets.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorSecretListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Secrets_ListByProfile": {
            "$ref": "./examples/FrontDoorSecrets_ListByProfile.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets/{secretName}": {
      "get": {
        "operationId": "FrontDoorSecrets_Get",
        "tags": [
          "FrontDoorSecrets"
        ],
        "description": "Gets an existing Secret within a profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "Name of the Secret under the profile.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorSecret"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Secrets_Get": {
            "$ref": "./examples/FrontDoorSecrets_Get.json"
          }
        }
      },
      "put": {
        "operationId": "FrontDoorSecrets_Create",
        "tags": [
          "FrontDoorSecrets"
        ],
        "description": "Creates a new Secret within the specified profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "Name of the Secret under the profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "secret",
            "in": "body",
            "description": "The Secret properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrontDoorSecret"
            },
            "x-ms-client-name": "secret"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FrontDoorSecret' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FrontDoorSecret"
            }
          },
          "201": {
            "description": "Resource 'FrontDoorSecret' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FrontDoorSecret"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Secrets_Create": {
            "$ref": "./examples/FrontDoorSecrets_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FrontDoorSecrets_Delete",
        "tags": [
          "FrontDoorSecrets"
        ],
        "description": "Deletes an existing Secret within profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "Name of the Secret under the profile.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Secrets_Delete": {
            "$ref": "./examples/FrontDoorSecrets_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/securityPolicies": {
      "get": {
        "operationId": "FrontDoorSecurityPolicies_ListByProfile",
        "tags": [
          "FrontDoorSecurityPolicies"
        ],
        "description": "Lists security policies associated with the profile",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorSecurityPolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SecurityPolicies_ListByProfile": {
            "$ref": "./examples/FrontDoorSecurityPolicies_ListByProfile.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/securityPolicies/{securityPolicyName}": {
      "get": {
        "operationId": "FrontDoorSecurityPolicies_Get",
        "tags": [
          "FrontDoorSecurityPolicies"
        ],
        "description": "Gets an existing security policy within a profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityPolicyName",
            "in": "path",
            "description": "Name of the security policy under the profile.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorSecurityPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SecurityPolicies_Get": {
            "$ref": "./examples/FrontDoorSecurityPolicies_Get.json"
          }
        }
      },
      "put": {
        "operationId": "FrontDoorSecurityPolicies_Create",
        "tags": [
          "FrontDoorSecurityPolicies"
        ],
        "description": "Creates a new security policy within the specified profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityPolicyName",
            "in": "path",
            "description": "Name of the security policy under the profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityPolicy",
            "in": "body",
            "description": "The security policy properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FrontDoorSecurityPolicy"
            },
            "x-ms-client-name": "securityPolicy"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FrontDoorSecurityPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FrontDoorSecurityPolicy"
            }
          },
          "201": {
            "description": "Resource 'FrontDoorSecurityPolicy' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FrontDoorSecurityPolicy"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SecurityPolicies_Create": {
            "$ref": "./examples/FrontDoorSecurityPolicies_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "FrontDoorSecurityPolicies_Patch",
        "tags": [
          "FrontDoorSecurityPolicies"
        ],
        "description": "Updates an existing security policy within a profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityPolicyName",
            "in": "path",
            "description": "Name of the security policy under the profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityPolicyUpdateProperties",
            "in": "body",
            "description": "Security policy update properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityPolicyUpdateParameters"
            },
            "x-ms-client-name": "securityPolicyUpdateProperties"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FrontDoorSecurityPolicy"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SecurityPolicies_Patch": {
            "$ref": "./examples/FrontDoorSecurityPolicies_Patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FrontDoorSecurityPolicies_Delete",
        "tags": [
          "FrontDoorSecurityPolicies"
        ],
        "description": "Deletes an existing security policy within profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Name of the Azure Front Door Standard or Azure Front Door Premium or CDN profile which is unique within the resource group.",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityPolicyName",
            "in": "path",
            "description": "Name of the security policy under the profile.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SecurityPolicies_Delete": {
            "$ref": "./examples/FrontDoorSecurityPolicies_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AFDDomain": {
      "type": "object",
      "description": "Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AFDDomainProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AFDDomainHttpsParameters": {
      "type": "object",
      "description": "The JSON object that contains the properties to secure a domain.",
      "properties": {
        "certificateType": {
          "$ref": "#/definitions/FrontDoorCertificateType",
          "description": "Defines the source of the SSL certificate."
        },
        "minimumTlsVersion": {
          "$ref": "#/definitions/FrontDoorMinimumTlsVersion",
          "description": "TLS protocol version that will be used for Https"
        },
        "secret": {
          "$ref": "#/definitions/AFDDomainHttpsParametersSecret",
          "description": "Resource reference to the secret. ie. subs/rg/profile/secret"
        }
      },
      "required": [
        "certificateType"
      ]
    },
    "AFDDomainHttpsParametersSecret": {
      "type": "object",
      "description": "Resource reference to the secret. ie. subs/rg/profile/secret",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "AFDDomainListResult": {
      "type": "object",
      "description": "The response of a AFDDomain list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AFDDomain items on this page",
          "items": {
            "$ref": "#/definitions/AFDDomain"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AFDDomainProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties of the domain to create.",
      "properties": {
        "profileName": {
          "type": "string",
          "description": "The name of the profile which holds the domain.",
          "readOnly": true
        },
        "tlsSettings": {
          "$ref": "#/definitions/AFDDomainHttpsParameters",
          "description": "The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default."
        },
        "azureDnsZone": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Resource reference to the Azure DNS zone",
          "x-ms-client-name": "dnsZone"
        },
        "preValidatedCustomDomainResourceId": {
          "$ref": "#/definitions/AFDDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId",
          "description": "Resource reference to the Azure resource where custom domain ownership was prevalidated",
          "x-ms-client-name": "preValidatedCustomDomainResource"
        },
        "provisioningState": {
          "$ref": "#/definitions/FrontDoorProvisioningState",
          "description": "Provisioning status",
          "readOnly": true
        },
        "deploymentStatus": {
          "$ref": "#/definitions/FrontDoorDeploymentStatus",
          "readOnly": true
        },
        "domainValidationState": {
          "$ref": "#/definitions/DomainValidationState",
          "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step. DCV stands for DomainControlValidation.",
          "readOnly": true
        },
        "hostName": {
          "type": "string",
          "description": "The host name of the domain. Must be a domain name."
        },
        "validationProperties": {
          "$ref": "#/definitions/DomainValidationProperties",
          "description": "Values the customer needs to validate domain ownership",
          "readOnly": true
        }
      },
      "required": [
        "hostName"
      ]
    },
    "AFDDomainUpdateParameters": {
      "type": "object",
      "description": "The domain JSON object required for domain creation or update.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AFDDomainUpdatePropertiesParameters",
          "description": "The JSON object that contains the properties of the domain to create."
        }
      }
    },
    "AFDDomainUpdatePropertiesParameters": {
      "type": "object",
      "description": "The JSON object that contains the properties of the domain to create.",
      "properties": {
        "profileName": {
          "type": "string",
          "description": "The name of the profile which holds the domain.",
          "readOnly": true
        },
        "tlsSettings": {
          "$ref": "#/definitions/AFDDomainHttpsParameters",
          "description": "The configuration specifying how to enable HTTPS for the domain - using AzureFrontDoor managed certificate or user's own certificate. If not specified, enabling ssl uses AzureFrontDoor managed certificate by default."
        },
        "azureDnsZone": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Resource reference to the Azure DNS zone",
          "x-ms-client-name": "dnsZone"
        },
        "preValidatedCustomDomainResourceId": {
          "$ref": "#/definitions/AFDDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId",
          "description": "Resource reference to the Azure resource where custom domain ownership was prevalidated",
          "x-ms-client-name": "preValidatedCustomDomainResource"
        }
      }
    },
    "AFDDomainUpdatePropertiesParametersPreValidatedCustomDomainResourceId": {
      "type": "object",
      "description": "Resource reference to the Azure resource where custom domain ownership was prevalidated",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "AFDEndpoint": {
      "type": "object",
      "description": "CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The AzureFrontDoor endpoint uses the URL format <endpointname>.azureedge.net.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AFDEndpointProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AFDEndpointListResult": {
      "type": "object",
      "description": "The response of a AFDEndpoint list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AFDEndpoint items on this page",
          "items": {
            "$ref": "#/definitions/AFDEndpoint"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AFDEndpointProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties required to create an endpoint.",
      "properties": {
        "profileName": {
          "type": "string",
          "description": "The name of the profile which holds the endpoint.",
          "readOnly": true
        },
        "enabledState": {
          "$ref": "#/definitions/EnabledState",
          "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'"
        },
        "provisioningState": {
          "$ref": "#/definitions/FrontDoorProvisioningState",
          "description": "Provisioning status",
          "readOnly": true
        },
        "deploymentStatus": {
          "$ref": "#/definitions/FrontDoorDeploymentStatus",
          "readOnly": true
        },
        "hostName": {
          "type": "string",
          "description": "The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net",
          "readOnly": true
        },
        "autoGeneratedDomainNameLabelScope": {
          "$ref": "#/definitions/DomainNameLabelScope",
          "description": "Indicates the endpoint name reuse scope. The default value is TenantReuse."
        }
      }
    },
    "AFDEndpointPropertiesUpdateParameters": {
      "type": "object",
      "description": "The JSON object containing endpoint update parameters.",
      "properties": {
        "profileName": {
          "type": "string",
          "description": "The name of the profile which holds the endpoint.",
          "readOnly": true
        },
        "enabledState": {
          "$ref": "#/definitions/EnabledState",
          "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'"
        }
      }
    },
    "AFDEndpointUpdateParameters": {
      "type": "object",
      "description": "Properties required to create or update an endpoint.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Endpoint tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AFDEndpointPropertiesUpdateParameters",
          "description": "The JSON object containing endpoint update parameters."
        }
      }
    },
    "AFDOrigin": {
      "type": "object",
      "description": "CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AFDOriginProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AFDOriginGroup": {
      "type": "object",
      "description": "AFDOrigin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AFDOriginGroupProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AFDOriginGroupListResult": {
      "type": "object",
      "description": "The response of a AFDOriginGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AFDOriginGroup items on this page",
          "items": {
            "$ref": "#/definitions/AFDOriginGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AFDOriginGroupProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties of the origin group.",
      "properties": {
        "profileName": {
          "type": "string",
          "description": "The name of the profile which holds the origin group.",
          "readOnly": true
        },
        "loadBalancingSettings": {
          "$ref": "#/definitions/LoadBalancingSettings",
          "description": "Load balancing settings for a backend pool"
        },
        "healthProbeSettings": {
          "$ref": "#/definitions/HealthProbeSettings",
          "description": "Health probe settings to the origin that is used to determine the health of the origin."
        },
        "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.",
          "maximum": 50,
          "x-ms-client-name": "trafficRestorationTimeInMinutes"
        },
        "sessionAffinityState": {
          "$ref": "#/definitions/EnabledState",
          "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'"
        },
        "provisioningState": {
          "$ref": "#/definitions/FrontDoorProvisioningState",
          "description": "Provisioning status",
          "readOnly": true
        },
        "deploymentStatus": {
          "$ref": "#/definitions/FrontDoorDeploymentStatus",
          "readOnly": true
        }
      }
    },
    "AFDOriginGroupUpdateParameters": {
      "type": "object",
      "description": "AFDOrigin group properties needed for origin group creation or update.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AFDOriginGroupUpdatePropertiesParameters",
          "description": "The JSON object that contains the properties of the origin group."
        }
      }
    },
    "AFDOriginGroupUpdatePropertiesParameters": {
      "type": "object",
      "description": "The JSON object that contains the properties of the origin group.",
      "properties": {
        "profileName": {
          "type": "string",
          "description": "The name of the profile which holds the origin group.",
          "readOnly": true
        },
        "loadBalancingSettings": {
          "$ref": "#/definitions/LoadBalancingSettings",
          "description": "Load balancing settings for a backend pool"
        },
        "healthProbeSettings": {
          "$ref": "#/definitions/HealthProbeSettings",
          "description": "Health probe settings to the origin that is used to determine the health of the origin."
        },
        "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.",
          "maximum": 50,
          "x-ms-client-name": "trafficRestorationTimeInMinutes"
        },
        "sessionAffinityState": {
          "$ref": "#/definitions/EnabledState",
          "description": "Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'"
        }
      }
    },
    "AFDOriginListResult": {
      "type": "object",
      "description": "The response of a AFDOrigin list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AFDOrigin items on this page",
          "items": {
            "$ref": "#/definitions/AFDOrigin"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AFDOriginProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties of the origin.",
      "properties": {
        "originGroupName": {
          "type": "string",
          "description": "The name of the origin group which contains this origin.",
          "readOnly": true
        },
        "azureOrigin": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Resource reference to the Azure origin resource.",
          "x-ms-client-name": "origin"
        },
        "hostName": {
          "type": "string",
          "description": "The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint."
        },
        "httpPort": {
          "type": "integer",
          "format": "int32",
          "description": "The value of the HTTP port. Must be between 1 and 65535.",
          "minimum": 1,
          "maximum": 65535
        },
        "httpsPort": {
          "type": "integer",
          "format": "int32",
          "description": "The value of the HTTPS port. Must be between 1 and 65535.",
          "minimum": 1,
          "maximum": 65535
        },
        "originHostHeader": {
          "type": "string",
          "description": "The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5",
          "minimum": 1,
          "maximum": 5
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight of the origin in given origin group for load balancing. Must be between 1 and 1000",
          "minimum": 1,
          "maximum": 1000
        },
        "sharedPrivateLinkResource": {
          "$ref": "#/definitions/SharedPrivateLinkResourceProperties",
          "description": "The properties of the private link resource for private origin."
        },
        "enabledState": {
          "$ref": "#/definitions/EnabledState",
          "description": "Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool."
        },
        "enforceCertificateNameCheck": {
          "type": "boolean",
          "description": "Whether to enable certificate name check at origin level",
          "default": true
        },
        "provisioningState": {
          "$ref": "#/definitions/FrontDoorProvisioningState",
          "description": "Provisioning status",
          "readOnly": true
        },
        "deploymentStatus": {
          "$ref": "#/definitions/FrontDoorDeploymentStatus",
          "readOnly": true
        }
      }
    },
    "AFDOriginUpdateParameters": {
      "type": "object",
      "description": "AFDOrigin properties needed for origin update.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AFDOriginUpdatePropertiesParameters",
          "description": "The JSON object that contains the properties of the origin."
        }
      }
    },
    "AFDOriginUpdatePropertiesParameters": {
      "type": "object",
      "description": "The JSON object that contains the properties of the origin.",
      "properties": {
        "originGroupName": {
          "type": "string",
          "description": "The name of the origin group which contains this origin.",
          "readOnly": true
        },
        "azureOrigin": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Resource reference to the Azure origin resource.",
          "x-ms-client-name": "origin"
        },
        "hostName": {
          "type": "string",
          "description": "The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint."
        },
        "httpPort": {
          "type": "integer",
          "format": "int32",
          "description": "The value of the HTTP port. Must be between 1 and 65535.",
          "minimum": 1,
          "maximum": 65535
        },
        "httpsPort": {
          "type": "integer",
          "format": "int32",
          "description": "The value of the HTTPS port. Must be between 1 and 65535.",
          "minimum": 1,
          "maximum": 65535
        },
        "originHostHeader": {
          "type": "string",
          "description": "The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5",
          "minimum": 1,
          "maximum": 5
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight of the origin in given origin group for load balancing. Must be between 1 and 1000",
          "minimum": 1,
          "maximum": 1000
        },
        "sharedPrivateLinkResource": {
          "$ref": "#/definitions/SharedPrivateLinkResourceProperties",
          "description": "The properties of the private link resource for private origin."
        },
        "enabledState": {
          "$ref": "#/definitions/EnabledState",
          "description": "Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool."
        },
        "enforceCertificateNameCheck": {
          "type": "boolean",
          "description": "Whether to enable certificate name check at origin level",
          "default": true
        }
      }
    },
    "AFDStateProperties": {
      "type": "object",
      "description": "The tracking states for afd resources.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/FrontDoorProvisioningState",
          "description": "Provisioning status",
          "readOnly": true
        },
        "deploymentStatus": {
          "$ref": "#/definitions/FrontDoorDeploymentStatus",
          "readOnly": true
        }
      }
    },
    "AfdErrorResponse": {
      "type": "object",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "AzureFirstPartyManagedCertificate": {
      "type": "object",
      "description": "Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS.",
      "allOf": [
        {
          "$ref": "#/definitions/Certificate"
        }
      ]
    },
    "AzureFirstPartyManagedCertificateProperties": {
      "type": "object",
      "description": "Azure FirstParty Managed Certificate provided by other first party resource providers to enable HTTPS.",
      "allOf": [
        {
          "$ref": "#/definitions/SecretProperties"
        }
      ],
      "x-ms-discriminator-value": "AzureFirstPartyManagedCertificate"
    },
    "CacheBehaviorSetting": {
      "type": "string",
      "description": "Caching behavior for the requests",
      "enum": [
        "BypassCache",
        "Override",
        "SetIfMissing"
      ],
      "x-ms-enum": {
        "name": "CacheBehaviorSetting",
        "modelAsString": true
      }
    },
    "CacheConfiguration": {
      "type": "object",
      "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
      "properties": {
        "queryStringCachingBehavior": {
          "$ref": "#/definitions/RuleQueryStringCachingBehavior",
          "description": "Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings."
        },
        "queryParameters": {
          "type": "string",
          "description": "query parameters to include or exclude (comma separated)."
        },
        "isCompressionEnabled": {
          "$ref": "#/definitions/RuleIsCompressionEnabled",
          "description": "Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB."
        },
        "cacheBehavior": {
          "$ref": "#/definitions/RuleCacheBehavior",
          "description": "Caching behavior for the requests"
        },
        "cacheDuration": {
          "type": "string",
          "description": "The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss"
        }
      }
    },
    "CacheExpirationActionProperties": {
      "type": "object",
      "description": "Defines the parameters for the cache expiration action.",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/CacheExpirationActionType",
          "x-ms-client-name": "type"
        },
        "cacheBehavior": {
          "$ref": "#/definitions/CacheBehaviorSetting",
          "description": "Caching behavior for the requests"
        },
        "cacheType": {
          "$ref": "#/definitions/CacheLevel",
          "description": "The level at which the content needs to be cached."
        },
        "cacheDuration": {
          "type": "string",
          "description": "The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss"
        }
      },
      "required": [
        "typeName",
        "cacheBehavior",
        "cacheType"
      ]
    },
    "CacheExpirationActionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleCacheExpirationActionParameters"
      ],
      "x-ms-enum": {
        "name": "CacheExpirationActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "CacheExpirationAction",
            "value": "DeliveryRuleCacheExpirationActionParameters"
          }
        ]
      }
    },
    "CacheKeyQueryStringActionProperties": {
      "type": "object",
      "description": "Defines the parameters for the cache-key query string action.",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/CacheKeyQueryStringActionType",
          "x-ms-client-name": "type"
        },
        "queryStringBehavior": {
          "$ref": "#/definitions/QueryStringBehavior",
          "description": "Caching behavior for the requests"
        },
        "queryParameters": {
          "type": "string",
          "description": "query parameters to include or exclude (comma separated)."
        }
      },
      "required": [
        "typeName",
        "queryStringBehavior"
      ]
    },
    "CacheKeyQueryStringActionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"
      ],
      "x-ms-enum": {
        "name": "CacheKeyQueryStringActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "CacheKeyQueryStringBehaviorAction",
            "value": "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"
          }
        ]
      }
    },
    "CacheLevel": {
      "type": "string",
      "description": "The level at which the content needs to be cached.",
      "enum": [
        "All"
      ],
      "x-ms-enum": {
        "name": "CacheLevel",
        "modelAsString": true
      }
    },
    "CdnCertificateSource": {
      "type": "object",
      "description": "Defines the parameters for using CDN managed certificate for securing custom domain.",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/CdnCertificateSourceType",
          "x-ms-client-name": "type"
        },
        "certificateType": {
          "$ref": "#/definitions/CdnManagedCertificateType",
          "description": "Type of certificate used"
        }
      },
      "required": [
        "typeName",
        "certificateType"
      ]
    },
    "CdnCertificateSourceType": {
      "type": "string",
      "enum": [
        "CdnCertificateSourceParameters"
      ],
      "x-ms-enum": {
        "name": "CdnCertificateSourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "CdnCertificateSource",
            "value": "CdnCertificateSourceParameters"
          }
        ]
      }
    },
    "CdnCustomDomain": {
      "type": "object",
      "description": "Friendly domain name mapping to the endpoint hostname that the customer provides for branding purposes, e.g. www.contoso.com.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomDomainProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CdnCustomDomainListResult": {
      "type": "object",
      "description": "The response of a CdnCustomDomain list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CdnCustomDomain items on this page",
          "items": {
            "$ref": "#/definitions/CdnCustomDomain"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CdnEndpoint": {
      "type": "object",
      "description": "CDN endpoint is the entity within a CDN profile containing configuration information such as origin, protocol, content caching and delivery behavior. The CDN endpoint uses the URL format <endpointname>.azureedge.net.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EndpointProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CdnEndpointListResult": {
      "type": "object",
      "description": "The response of a CdnEndpoint list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CdnEndpoint items on this page",
          "items": {
            "$ref": "#/definitions/CdnEndpoint"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CdnEndpointProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the endpoint.",
      "enum": [
        "Succeeded",
        "Failed",
        "Updating",
        "Deleting",
        "Creating"
      ],
      "x-ms-enum": {
        "name": "CdnEndpointProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "CdnEndpointReference": {
      "type": "object",
      "description": "Defines the ARM Resource ID for the linked endpoints",
      "properties": {
        "id": {
          "type": "string",
          "description": "ARM Resource ID string."
        }
      }
    },
    "CdnManagedCertificateType": {
      "type": "string",
      "description": "Type of certificate used",
      "enum": [
        "Shared",
        "Dedicated"
      ],
      "x-ms-enum": {
        "name": "CdnManagedCertificateType",
        "modelAsString": true
      }
    },
    "CdnManagedHttpsContent": {
      "type": "object",
      "description": "Defines the certificate source parameters using CDN managed certificate for enabling SSL.",
      "properties": {
        "certificateSourceParameters": {
          "$ref": "#/definitions/CdnCertificateSource",
          "description": "Defines the certificate source parameters using CDN managed certificate for enabling SSL."
        }
      },
      "required": [
        "certificateSourceParameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CustomDomainHttpsParameters"
        }
      ],
      "x-ms-discriminator-value": "Cdn"
    },
    "CdnMinimumTlsVersion": {
      "type": "string",
      "description": "TLS protocol version that will be used for Https",
      "enum": [
        "None",
        "TLS10",
        "TLS12"
      ],
      "x-ms-enum": {
        "name": "CdnMinimumTlsVersion",
        "modelAsString": false
      }
    },
    "CdnNameAvailabilityContent": {
      "type": "object",
      "description": "Input of CheckNameAvailability API.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name to validate."
        },
        "type": {
          "$ref": "#/definitions/CdnResourceType",
          "description": "The type of the resource whose name is to be validated."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "CdnNameAvailabilityResult": {
      "type": "object",
      "description": "Output of check name availability API.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates whether the name is available.",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "description": "The reason why the name is not available.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The detailed error message describing why the name is not available.",
          "readOnly": true
        }
      }
    },
    "CdnOrigin": {
      "type": "object",
      "description": "CDN origin is the source of the content being delivered via CDN. When the edge nodes represented by an endpoint do not have the requested content cached, they attempt to fetch it from one or more of the configured origins.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OriginProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CdnOriginGroup": {
      "type": "object",
      "description": "Origin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OriginGroupProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CdnOriginGroupListResult": {
      "type": "object",
      "description": "The response of a CdnOriginGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CdnOriginGroup items on this page",
          "items": {
            "$ref": "#/definitions/CdnOriginGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CdnOriginListResult": {
      "type": "object",
      "description": "The response of a CdnOrigin list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CdnOrigin items on this page",
          "items": {
            "$ref": "#/definitions/CdnOrigin"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CdnResourceType": {
      "type": "string",
      "description": "Type of CDN resource used in CheckNameAvailability.",
      "enum": [
        "Microsoft.Cdn/Profiles/Endpoints",
        "Microsoft.Cdn/Profiles/AfdEndpoints"
      ],
      "x-ms-enum": {
        "name": "CdnResourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "Endpoints",
            "value": "Microsoft.Cdn/Profiles/Endpoints"
          },
          {
            "name": "FrontDoorEndpoints",
            "value": "Microsoft.Cdn/Profiles/AfdEndpoints"
          }
        ]
      }
    },
    "CdnUsage": {
      "type": "object",
      "description": "Output of check resource usage API.",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "Resource type for which the usage is provided.",
          "readOnly": true
        },
        "unit": {
          "$ref": "#/definitions/CdnUsageUnit",
          "description": "Unit of the usage. e.g. count.",
          "readOnly": true
        },
        "currentValue": {
          "type": "integer",
          "format": "int32",
          "description": "Actual value of usage on the specified resource type.",
          "readOnly": true
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Quota of the specified resource type.",
          "readOnly": true
        }
      }
    },
    "CdnUsageUnit": {
      "type": "string",
      "description": "Unit of the usage. e.g. count.",
      "enum": [
        "count"
      ],
      "x-ms-enum": {
        "name": "CdnUsageUnit",
        "modelAsString": true
      }
    },
    "CdnWebApplicationFirewallPolicy": {
      "type": "object",
      "description": "Defines web application firewall policy for Azure CDN.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CdnWebApplicationFirewallPolicyProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated."
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CdnWebApplicationFirewallPolicyListResult": {
      "type": "object",
      "description": "The response of a CdnWebApplicationFirewallPolicy list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CdnWebApplicationFirewallPolicy items on this page",
          "items": {
            "$ref": "#/definitions/CdnWebApplicationFirewallPolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CdnWebApplicationFirewallPolicyPatchParameters": {
      "type": "object",
      "description": "Properties required to update a CdnWebApplicationFirewallPolicy.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "CdnWebApplicationFirewallPolicy tags",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CdnWebApplicationFirewallPolicyProperties": {
      "type": "object",
      "description": "Defines CDN web application firewall policy properties.",
      "properties": {
        "policySettings": {
          "$ref": "#/definitions/WafPolicySettings",
          "description": "Describes  policySettings for policy"
        },
        "rateLimitRules": {
          "$ref": "#/definitions/RateLimitRuleList",
          "description": "Describes rate limit rules inside the policy.",
          "x-ms-client-name": "rateLimitSettings"
        },
        "customRules": {
          "$ref": "#/definitions/CustomRuleList",
          "description": "Describes custom rules inside the policy.",
          "x-ms-client-name": "customSettings"
        },
        "managedRules": {
          "$ref": "#/definitions/ManagedRuleSetList",
          "description": "Describes managed rules inside the policy."
        },
        "endpointLinks": {
          "type": "array",
          "description": "Describes Azure CDN endpoints associated with this Web Application Firewall policy.",
          "items": {
            "$ref": "#/definitions/CdnEndpointReference"
          },
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/WebApplicationFirewallPolicyProvisioningState",
          "description": "Provisioning state of the WebApplicationFirewallPolicy.",
          "readOnly": true
        },
        "resourceState": {
          "$ref": "#/definitions/PolicyResourceState",
          "description": "Resource status of the policy.",
          "readOnly": true
        }
      }
    },
    "Certificate": {
      "type": "object",
      "description": "Certificate used for https",
      "properties": {
        "type": {
          "$ref": "#/definitions/SecretType",
          "description": "The type of the secret resource."
        },
        "subject": {
          "type": "string",
          "description": "Subject name in the certificate.",
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "description": "Certificate expiration date.",
          "readOnly": true
        }
      }
    },
    "CertificateDeleteAction": {
      "type": "string",
      "description": "Describes the action that shall be taken when the certificate is removed from Key Vault.",
      "enum": [
        "NoAction"
      ],
      "x-ms-enum": {
        "name": "CertificateDeleteAction",
        "modelAsString": true
      }
    },
    "CertificateSource": {
      "type": "string",
      "description": "Defines the source of the SSL certificate.",
      "enum": [
        "AzureKeyVault",
        "Cdn"
      ],
      "x-ms-enum": {
        "name": "CertificateSource",
        "modelAsString": true
      }
    },
    "CertificateUpdateAction": {
      "type": "string",
      "description": "Describes the action that shall be taken when the certificate is updated in Key Vault.",
      "enum": [
        "NoAction"
      ],
      "x-ms-enum": {
        "name": "CertificateUpdateAction",
        "modelAsString": true
      }
    },
    "CidrIpAddress": {
      "type": "object",
      "description": "CIDR Ip address",
      "properties": {
        "baseIpAddress": {
          "type": "string",
          "description": "Ip address itself."
        },
        "prefixLength": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the prefix of the ip address."
        }
      }
    },
    "ClientPortMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for ClientPort match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/ClientPortMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/ClientPortOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "clientPortOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "ClientPortMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleClientPortConditionParameters"
      ],
      "x-ms-enum": {
        "name": "ClientPortMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "ClientPortCondition",
            "value": "DeliveryRuleClientPortConditionParameters"
          }
        ]
      }
    },
    "ClientPortOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "Equal",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "LessThan",
        "LessThanOrEqual",
        "GreaterThan",
        "GreaterThanOrEqual",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "ClientPortOperator",
        "modelAsString": true
      }
    },
    "Components18OrqelSchemasWafmetricsresponsePropertiesSeriesItemsPropertiesDataItems": {
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "Components1Gs0LlpSchemasMetricsresponsePropertiesSeriesItemsPropertiesDataItems": {
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "ComponentsKpo1PjSchemasWafrankingsresponsePropertiesDataItemsPropertiesMetricsItems": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int64"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ContinentsResponse": {
      "type": "object",
      "description": "Continents Response",
      "properties": {
        "continents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContinentsResponseContinentsItem"
          }
        },
        "countryOrRegions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContinentsResponseCountryOrRegionsItem"
          }
        }
      }
    },
    "ContinentsResponseContinentsItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "ContinentsResponseCountryOrRegionsItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "continentId": {
          "type": "string"
        }
      }
    },
    "CookiesMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for Cookies match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/CookiesMatchConditionType",
          "x-ms-client-name": "type"
        },
        "selector": {
          "type": "string",
          "description": "Name of Cookies to be matched"
        },
        "operator": {
          "$ref": "#/definitions/CookiesOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "cookiesOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "CookiesMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleCookiesConditionParameters"
      ],
      "x-ms-enum": {
        "name": "CookiesMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "CookiesCondition",
            "value": "DeliveryRuleCookiesConditionParameters"
          }
        ]
      }
    },
    "CookiesOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "Equal",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "LessThan",
        "LessThanOrEqual",
        "GreaterThan",
        "GreaterThanOrEqual",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "CookiesOperator",
        "modelAsString": true
      }
    },
    "CustomDomainHttpsParameters": {
      "type": "object",
      "description": "The JSON object that contains the properties to secure a custom domain.",
      "properties": {
        "certificateSource": {
          "type": "string",
          "description": "Discriminator property for CustomDomainHttpsParameters."
        },
        "protocolType": {
          "$ref": "#/definitions/SecureDeliveryProtocolType",
          "description": "Defines the TLS extension protocol that is used for secure delivery."
        },
        "minimumTlsVersion": {
          "$ref": "#/definitions/CdnMinimumTlsVersion",
          "description": "TLS protocol version that will be used for Https"
        }
      },
      "discriminator": "certificateSource",
      "required": [
        "certificateSource",
        "protocolType"
      ]
    },
    "CustomDomainParameters": {
      "type": "object",
      "description": "The customDomain JSON object required for custom domain creation or update.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomDomainPropertiesParameters",
          "description": "The JSON object that contains the properties of the custom domain to create."
        }
      }
    },
    "CustomDomainProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties of the custom domain to create.",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "The host name of the custom domain. Must be a domain name."
        },
        "resourceState": {
          "$ref": "#/definitions/CustomDomainResourceState",
          "description": "Resource status of the custom domain.",
          "readOnly": true
        },
        "customHttpsProvisioningState": {
          "$ref": "#/definitions/CustomHttpsProvisioningState",
          "description": "Provisioning status of the custom domain.",
          "readOnly": true
        },
        "customHttpsProvisioningSubstate": {
          "$ref": "#/definitions/CustomHttpsAvailabilityState",
          "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.",
          "readOnly": true,
          "x-ms-client-name": "customHttpsAvailabilityState"
        },
        "customHttpsParameters": {
          "$ref": "#/definitions/CustomDomainHttpsParameters",
          "description": "Certificate parameters for securing custom HTTPS",
          "x-ms-client-name": "customDomainHttpsContent"
        },
        "validationData": {
          "type": "string",
          "description": "Special validation or data may be required when delivering CDN to some regions due to local compliance reasons. E.g. ICP license number of a custom domain is required to deliver content in China."
        },
        "provisioningState": {
          "$ref": "#/definitions/CustomHttpsProvisioningState",
          "description": "Provisioning status of Custom Https of the custom domain.",
          "readOnly": true
        }
      },
      "required": [
        "hostName"
      ]
    },
    "CustomDomainPropertiesParameters": {
      "type": "object",
      "description": "The JSON object that contains the properties of the custom domain to create.",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "The host name of the custom domain. Must be a domain name."
        }
      },
      "required": [
        "hostName"
      ]
    },
    "CustomDomainResourceState": {
      "type": "string",
      "description": "Resource status of the custom domain.",
      "enum": [
        "Creating",
        "Active",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "CustomDomainResourceState",
        "modelAsString": true
      }
    },
    "CustomHttpsAvailabilityState": {
      "type": "string",
      "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.",
      "enum": [
        "SubmittingDomainControlValidationRequest",
        "PendingDomainControlValidationREquestApproval",
        "DomainControlValidationRequestApproved",
        "DomainControlValidationRequestRejected",
        "DomainControlValidationRequestTimedOut",
        "IssuingCertificate",
        "DeployingCertificate",
        "CertificateDeployed",
        "DeletingCertificate",
        "CertificateDeleted"
      ],
      "x-ms-enum": {
        "name": "CustomHttpsAvailabilityState",
        "modelAsString": true
      }
    },
    "CustomHttpsProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the custom domain.",
      "enum": [
        "Enabling",
        "Enabled",
        "Disabling",
        "Disabled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "CustomHttpsProvisioningState",
        "modelAsString": true
      }
    },
    "CustomRule": {
      "type": "object",
      "description": "Defines the common attributes for a custom rule that can be included in a waf policy",
      "properties": {
        "name": {
          "type": "string",
          "description": "Defines the name of the custom rule"
        },
        "enabledState": {
          "$ref": "#/definitions/CustomRuleEnabledState",
          "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Defines in what order this rule be evaluated in the overall list of custom rules",
          "maximum": 1000
        },
        "matchConditions": {
          "type": "array",
          "description": "List of match conditions.",
          "items": {
            "$ref": "#/definitions/CustomRuleMatchCondition"
          },
          "x-ms-identifiers": []
        },
        "action": {
          "$ref": "#/definitions/OverrideActionType",
          "description": "Describes what action to be applied when rule matches"
        }
      },
      "required": [
        "name",
        "priority",
        "matchConditions",
        "action"
      ]
    },
    "CustomRuleEnabledState": {
      "type": "string",
      "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "CustomRuleEnabledState",
        "modelAsString": true
      }
    },
    "CustomRuleList": {
      "type": "object",
      "description": "Defines contents of custom rules",
      "properties": {
        "rules": {
          "type": "array",
          "description": "List of rules",
          "items": {
            "$ref": "#/definitions/CustomRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CustomRuleMatchCondition": {
      "type": "object",
      "description": "Define match conditions",
      "properties": {
        "matchVariable": {
          "$ref": "#/definitions/WafMatchVariable",
          "description": "Match variable to compare against."
        },
        "selector": {
          "type": "string",
          "description": "Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs."
        },
        "operator": {
          "$ref": "#/definitions/MatchOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "matchOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if the result of this condition should be negated."
        },
        "matchValue": {
          "type": "array",
          "description": "List of possible match values.",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms.",
          "items": {
            "$ref": "#/definitions/TransformType"
          }
        }
      },
      "required": [
        "matchVariable",
        "operator",
        "matchValue"
      ]
    },
    "CustomerCertificate": {
      "type": "object",
      "description": "Customer Certificate used for https",
      "properties": {
        "secretSource": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​"
        },
        "secretVersion": {
          "type": "string",
          "description": "Certificate version."
        },
        "certificateAuthority": {
          "type": "string",
          "description": "Certificate issuing authority.",
          "readOnly": true
        },
        "useLatestVersion": {
          "type": "boolean",
          "description": "Whether to use the latest version for the certificate"
        },
        "subjectAlternativeNames": {
          "type": "array",
          "description": "The list of SANs.",
          "items": {
            "type": "string"
          }
        },
        "thumbprint": {
          "type": "string",
          "description": "Certificate thumbprint.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Certificate"
        }
      ]
    },
    "CustomerCertificateProperties": {
      "type": "object",
      "description": "Customer Certificate used for https",
      "properties": {
        "secretSource": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{certificateName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​"
        },
        "secretVersion": {
          "type": "string",
          "description": "Version of the secret to be used"
        },
        "useLatestVersion": {
          "type": "boolean",
          "description": "Whether to use the latest version for the certificate"
        },
        "subject": {
          "type": "string",
          "description": "Subject name in the certificate.",
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Certificate expiration date.",
          "readOnly": true,
          "x-ms-client-name": "expiresDate"
        },
        "certificateAuthority": {
          "type": "string",
          "description": "Certificate issuing authority.",
          "readOnly": true
        },
        "subjectAlternativeNames": {
          "type": "array",
          "description": "The list of SANs.",
          "items": {
            "type": "string"
          }
        },
        "thumbprint": {
          "type": "string",
          "description": "Certificate thumbprint.",
          "readOnly": true
        }
      },
      "required": [
        "secretSource"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SecretProperties"
        }
      ],
      "x-ms-discriminator-value": "CustomerCertificate"
    },
    "DeepCreatedOrigin": {
      "type": "object",
      "description": "The main origin of CDN content which is added when creating a CDN endpoint.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Origin name which must be unique within the endpoint."
        },
        "properties": {
          "$ref": "#/definitions/DeepCreatedOriginProperties",
          "description": "Properties of the origin created on the CDN endpoint."
        }
      },
      "required": [
        "name"
      ]
    },
    "DeepCreatedOriginGroup": {
      "type": "object",
      "description": "The origin group for CDN content which is added when creating a CDN endpoint. Traffic is sent to the origins within the origin group based on origin health.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Origin group name which must be unique within the endpoint."
        },
        "properties": {
          "$ref": "#/definitions/DeepCreatedOriginGroupProperties",
          "description": "Properties of the origin group created on the CDN endpoint."
        }
      },
      "required": [
        "name"
      ]
    },
    "DeepCreatedOriginGroupProperties": {
      "type": "object",
      "description": "Properties of the origin group created on the CDN endpoint.",
      "properties": {
        "healthProbeSettings": {
          "$ref": "#/definitions/HealthProbeSettings",
          "description": "Health probe settings to the origin that is used to determine the health of the origin."
        },
        "origins": {
          "type": "array",
          "description": "The source of the content being delivered via CDN within given origin group.",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          }
        },
        "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.",
          "maximum": 50
        },
        "responseBasedOriginErrorDetectionSettings": {
          "$ref": "#/definitions/ResponseBasedOriginErrorDetectionSettings",
          "description": "The JSON object that contains the properties to determine origin health using real requests/responses.This property is currently not supported."
        }
      },
      "required": [
        "origins"
      ]
    },
    "DeepCreatedOriginProperties": {
      "type": "object",
      "description": "Properties of the origin created on the CDN endpoint.",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "The address of the origin. It can be a domain name, IPv4 address, or IPv6 address. This should be unique across all origins in an endpoint."
        },
        "httpPort": {
          "type": "integer",
          "format": "int32",
          "description": "The value of the HTTP port. Must be between 1 and 65535.",
          "minimum": 1,
          "maximum": 65535
        },
        "httpsPort": {
          "type": "integer",
          "format": "int32",
          "description": "The value of the HTTPS port. Must be between 1 and 65535.",
          "minimum": 1,
          "maximum": 65535
        },
        "originHostHeader": {
          "type": "string",
          "description": "The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5.",
          "minimum": 1,
          "maximum": 5
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight of the origin in given origin group for load balancing. Must be between 1 and 1000",
          "minimum": 1,
          "maximum": 1000
        },
        "enabled": {
          "type": "boolean",
          "description": "Origin is enabled for load balancing or not. By default, origin is always enabled."
        },
        "privateLinkAlias": {
          "type": "string",
          "description": "The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'"
        },
        "privateLinkResourceId": {
          "type": "string",
          "description": "The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'"
        },
        "privateLinkLocation": {
          "type": "string",
          "description": "The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated"
        },
        "privateLinkApprovalMessage": {
          "type": "string",
          "description": "A custom message to be included in the approval request to connect to the Private Link."
        },
        "privateEndpointStatus": {
          "$ref": "#/definitions/PrivateEndpointStatus",
          "description": "The approval status for the connection to the Private Link",
          "readOnly": true
        }
      },
      "required": [
        "hostName"
      ]
    },
    "DeliveryRule": {
      "type": "object",
      "description": "A rule that specifies a set of actions and conditions",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the rule"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied."
        },
        "conditions": {
          "type": "array",
          "description": "A list of conditions that must be matched for the actions to be executed",
          "items": {
            "$ref": "#/definitions/DeliveryRuleCondition"
          },
          "x-ms-identifiers": []
        },
        "actions": {
          "type": "array",
          "description": "A list of actions that are executed when all the conditions of a rule are satisfied.",
          "items": {
            "$ref": "#/definitions/DeliveryRuleAction"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "order",
        "actions"
      ]
    },
    "DeliveryRuleAction": {
      "type": "object",
      "description": "An action for the delivery rule.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Discriminator property for DeliveryRuleAction."
        }
      },
      "discriminator": "name",
      "required": [
        "name"
      ]
    },
    "DeliveryRuleActionType": {
      "type": "string",
      "description": "The name of the action for the delivery rule.",
      "enum": [
        "CacheExpiration",
        "CacheKeyQueryString",
        "ModifyRequestHeader",
        "ModifyResponseHeader",
        "UrlRedirect",
        "UrlRewrite",
        "UrlSigning",
        "OriginGroupOverride",
        "RouteConfigurationOverride"
      ],
      "x-ms-enum": {
        "name": "DeliveryRuleActionType",
        "modelAsString": true
      }
    },
    "DeliveryRuleCacheExpirationAction": {
      "type": "object",
      "description": "Defines the cache expiration action for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/CacheExpirationActionProperties",
          "description": "Defines the parameters for the action.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleAction"
        }
      ],
      "x-ms-discriminator-value": "CacheExpiration"
    },
    "DeliveryRuleCacheKeyQueryStringAction": {
      "type": "object",
      "description": "Defines the cache-key query string action for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/CacheKeyQueryStringActionProperties",
          "description": "Defines the parameters for the action.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleAction"
        }
      ],
      "x-ms-discriminator-value": "CacheKeyQueryString"
    },
    "DeliveryRuleClientPortCondition": {
      "type": "object",
      "description": "Defines the ClientPort condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/ClientPortMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "ClientPort"
    },
    "DeliveryRuleCondition": {
      "type": "object",
      "description": "A condition for the delivery rule.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Discriminator property for DeliveryRuleCondition."
        }
      },
      "discriminator": "name",
      "required": [
        "name"
      ]
    },
    "DeliveryRuleCookiesCondition": {
      "type": "object",
      "description": "Defines the Cookies condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/CookiesMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "Cookies"
    },
    "DeliveryRuleHostNameCondition": {
      "type": "object",
      "description": "Defines the HostName condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/HostNameMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "HostName"
    },
    "DeliveryRuleHttpVersionCondition": {
      "type": "object",
      "description": "Defines the HttpVersion condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/HttpVersionMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "HttpVersion"
    },
    "DeliveryRuleIsDeviceCondition": {
      "type": "object",
      "description": "Defines the IsDevice condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/IsDeviceMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "IsDevice"
    },
    "DeliveryRulePostArgsCondition": {
      "type": "object",
      "description": "Defines the PostArgs condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/PostArgsMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "PostArgs"
    },
    "DeliveryRuleQueryStringCondition": {
      "type": "object",
      "description": "Defines the QueryString condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/QueryStringMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "QueryString"
    },
    "DeliveryRuleRemoteAddressCondition": {
      "type": "object",
      "description": "Defines the RemoteAddress condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/RemoteAddressMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "RemoteAddress"
    },
    "DeliveryRuleRequestBodyCondition": {
      "type": "object",
      "description": "Defines the RequestBody condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/RequestBodyMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "RequestBody"
    },
    "DeliveryRuleRequestHeaderAction": {
      "type": "object",
      "description": "Defines the request header action for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/HeaderActionProperties",
          "description": "Defines the parameters for the action.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleAction"
        }
      ],
      "x-ms-discriminator-value": "ModifyRequestHeader"
    },
    "DeliveryRuleRequestHeaderCondition": {
      "type": "object",
      "description": "Defines the RequestHeader condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/RequestHeaderMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "RequestHeader"
    },
    "DeliveryRuleRequestMethodCondition": {
      "type": "object",
      "description": "Defines the RequestMethod condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/RequestMethodMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "RequestMethod"
    },
    "DeliveryRuleRequestSchemeCondition": {
      "type": "object",
      "description": "Defines the RequestScheme condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/RequestSchemeMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "RequestScheme"
    },
    "DeliveryRuleRequestUriCondition": {
      "type": "object",
      "description": "Defines the RequestUri condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/RequestUriMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "RequestUri"
    },
    "DeliveryRuleResponseHeaderAction": {
      "type": "object",
      "description": "Defines the response header action for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/HeaderActionProperties",
          "description": "Defines the parameters for the action.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleAction"
        }
      ],
      "x-ms-discriminator-value": "ModifyResponseHeader"
    },
    "DeliveryRuleRouteConfigurationOverrideAction": {
      "type": "object",
      "description": "Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/RouteConfigurationOverrideActionProperties",
          "description": "Defines the parameters for the action.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleAction"
        }
      ],
      "x-ms-discriminator-value": "RouteConfigurationOverride"
    },
    "DeliveryRuleServerPortCondition": {
      "type": "object",
      "description": "Defines the ServerPort condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/ServerPortMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "ServerPort"
    },
    "DeliveryRuleSocketAddressCondition": {
      "type": "object",
      "description": "Defines the SocketAddress condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/SocketAddressMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "SocketAddr"
    },
    "DeliveryRuleSslProtocolCondition": {
      "type": "object",
      "description": "Defines the SslProtocol condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/SslProtocolMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "SslProtocol"
    },
    "DeliveryRuleUrlFileExtensionCondition": {
      "type": "object",
      "description": "Defines the UrlFileExtension condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/UrlFileExtensionMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "UrlFileExtension"
    },
    "DeliveryRuleUrlFileNameCondition": {
      "type": "object",
      "description": "Defines the UrlFileName condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/UrlFileNameMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "UrlFileName"
    },
    "DeliveryRuleUrlPathCondition": {
      "type": "object",
      "description": "Defines the UrlPath condition for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/UrlPathMatchCondition",
          "description": "Defines the parameters for the condition.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "UrlPath"
    },
    "DestinationProtocol": {
      "type": "string",
      "description": "Protocol to use for the redirect. The default value is MatchRequest",
      "enum": [
        "MatchRequest",
        "Http",
        "Https"
      ],
      "x-ms-enum": {
        "name": "DestinationProtocol",
        "modelAsString": true
      }
    },
    "DimensionProperties": {
      "type": "object",
      "description": "Type of operation: get, read, delete, etc.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of dimension."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of dimension."
        },
        "internalName": {
          "type": "string",
          "description": "Internal name of dimension."
        }
      }
    },
    "DomainNameLabelScope": {
      "type": "string",
      "description": "Indicates the endpoint name reuse scope. The default value is TenantReuse.",
      "enum": [
        "TenantReuse",
        "SubscriptionReuse",
        "ResourceGroupReuse",
        "NoReuse"
      ],
      "x-ms-enum": {
        "name": "DomainNameLabelScope",
        "modelAsString": true
      }
    },
    "DomainValidationProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties to validate a domain.",
      "properties": {
        "validationToken": {
          "type": "string",
          "description": "Challenge used for DNS TXT record or file based validation",
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date time that the token expires",
          "readOnly": true,
          "x-ms-client-name": "expiresDate"
        }
      }
    },
    "DomainValidationState": {
      "type": "string",
      "description": "Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step. DCV stands for DomainControlValidation.",
      "enum": [
        "Unknown",
        "Submitting",
        "Pending",
        "Rejected",
        "TimedOut",
        "PendingRevalidation",
        "Approved",
        "RefreshingValidationToken",
        "InternalError"
      ],
      "x-ms-enum": {
        "name": "DomainValidationState",
        "modelAsString": true
      }
    },
    "EdgeNode": {
      "type": "object",
      "description": "Edgenode is a global Point of Presence (POP) location used to deliver CDN content to end users.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EdgeNodeProperties",
          "description": "The JSON object that contains the properties required to create an edgenode."
        }
      }
    },
    "EdgeNodeProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties required to create an edgenode.",
      "properties": {
        "ipAddressGroups": {
          "type": "array",
          "description": "List of ip address groups.",
          "items": {
            "$ref": "#/definitions/IpAddressGroup"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "ipAddressGroups"
      ]
    },
    "EnabledState": {
      "type": "string",
      "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EnabledState",
        "modelAsString": true
      }
    },
    "EndpointNameAvailabilityContent": {
      "type": "object",
      "description": "Input of CheckNameAvailability API.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name to validate."
        },
        "type": {
          "$ref": "#/definitions/CdnResourceType",
          "description": "The type of the resource whose name is to be validated."
        },
        "autoGeneratedDomainNameLabelScope": {
          "$ref": "#/definitions/DomainNameLabelScope",
          "description": "Indicates the endpoint name reuse scope. The default value is TenantReuse."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "EndpointNameAvailabilityResult": {
      "type": "object",
      "description": "Output of check name availability API.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates whether the name is available.",
          "readOnly": true
        },
        "availableHostname": {
          "type": "string",
          "description": "Returns the available hostname generated based on the AutoGeneratedDomainNameLabelScope when the name is available, otherwise it returns empty string",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "description": "The reason why the name is not available.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The detailed error message describing why the name is not available.",
          "readOnly": true
        }
      }
    },
    "EndpointProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties required to create an endpoint.",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "The host name of the endpoint structured as {endpointName}.{DNSZone}, e.g. contoso.azureedge.net",
          "readOnly": true
        },
        "origins": {
          "type": "array",
          "description": "The source of the content being delivered via CDN.",
          "items": {
            "$ref": "#/definitions/DeepCreatedOrigin"
          },
          "x-ms-identifiers": []
        },
        "originGroups": {
          "type": "array",
          "description": "The origin groups comprising of origins that are used for load balancing the traffic based on availability.",
          "items": {
            "$ref": "#/definitions/DeepCreatedOriginGroup"
          },
          "x-ms-identifiers": []
        },
        "customDomains": {
          "type": "array",
          "description": "The custom domains under the endpoint.",
          "items": {
            "$ref": "#/definitions/CdnCustomDomain"
          },
          "readOnly": true
        },
        "resourceState": {
          "$ref": "#/definitions/EndpointResourceState",
          "description": "Resource status of the endpoint.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/CdnEndpointProvisioningState",
          "description": "Provisioning status of the endpoint.",
          "readOnly": true
        }
      },
      "required": [
        "origins"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EndpointPropertiesUpdateParameters"
        }
      ]
    },
    "EndpointPropertiesUpdateParameters": {
      "type": "object",
      "description": "The JSON object containing endpoint update parameters.",
      "properties": {
        "originPath": {
          "type": "string",
          "description": "A directory path on the origin that CDN can use to retrieve content from, e.g. contoso.cloudapp.net/originpath."
        },
        "contentTypesToCompress": {
          "type": "array",
          "description": "List of content types on which compression applies. The value should be a valid MIME type.",
          "items": {
            "type": "string"
          }
        },
        "originHostHeader": {
          "type": "string",
          "description": "The host header value sent to the origin with each request. This property at Endpoint is only allowed when endpoint uses single origin and can be overridden by the same property specified at origin.If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default."
        },
        "isCompressionEnabled": {
          "type": "boolean",
          "description": "Indicates whether content compression is enabled on CDN. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on CDN when requested content is smaller than 1 byte or larger than 1 MB."
        },
        "isHttpAllowed": {
          "type": "boolean",
          "description": "Indicates whether HTTP traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed."
        },
        "isHttpsAllowed": {
          "type": "boolean",
          "description": "Indicates whether HTTPS traffic is allowed on the endpoint. Default value is true. At least one protocol (HTTP or HTTPS) must be allowed."
        },
        "queryStringCachingBehavior": {
          "$ref": "#/definitions/QueryStringCachingBehavior",
          "description": "Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL."
        },
        "optimizationType": {
          "$ref": "#/definitions/OptimizationType",
          "description": "Specifies what scenario the customer wants this CDN endpoint to optimize for, e.g. Download, Media services. With this information, CDN can apply scenario driven optimization."
        },
        "probePath": {
          "type": "string",
          "description": "Path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin path. This property is only relevant when using a single origin."
        },
        "geoFilters": {
          "type": "array",
          "description": "List of rules defining the user's geo access within a CDN endpoint. Each geo filter defines an access rule to a specified path or content, e.g. block APAC for path /pictures/",
          "items": {
            "$ref": "#/definitions/GeoFilter"
          },
          "x-ms-identifiers": []
        },
        "defaultOriginGroup": {
          "$ref": "#/definitions/EndpointPropertiesUpdateParametersDefaultOriginGroup",
          "description": "A reference to the origin group."
        },
        "urlSigningKeys": {
          "type": "array",
          "description": "List of keys used to validate the signed URL hashes.",
          "items": {
            "$ref": "#/definitions/UrlSigningKey"
          },
          "x-ms-identifiers": []
        },
        "deliveryPolicy": {
          "$ref": "#/definitions/EndpointPropertiesUpdateParametersDeliveryPolicy",
          "description": "A policy that specifies the delivery rules to be used for an endpoint."
        },
        "webApplicationFirewallPolicyLink": {
          "$ref": "#/definitions/EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink",
          "description": "Defines the Web Application Firewall policy for the endpoint (if applicable)"
        }
      }
    },
    "EndpointPropertiesUpdateParametersDefaultOriginGroup": {
      "type": "object",
      "description": "A reference to the origin group.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "EndpointPropertiesUpdateParametersDeliveryPolicy": {
      "type": "object",
      "description": "A policy that specifies the delivery rules to be used for an endpoint.",
      "properties": {
        "description": {
          "type": "string",
          "description": "User-friendly description of the policy."
        },
        "rules": {
          "type": "array",
          "description": "A list of the delivery rules.",
          "items": {
            "$ref": "#/definitions/DeliveryRule"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "rules"
      ]
    },
    "EndpointPropertiesUpdateParametersWebApplicationFirewallPolicyLink": {
      "type": "object",
      "description": "Defines the Web Application Firewall policy for the endpoint (if applicable)",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "EndpointResourceState": {
      "type": "string",
      "description": "Resource status of the endpoint.",
      "enum": [
        "Creating",
        "Deleting",
        "Running",
        "Starting",
        "Stopped",
        "Stopping"
      ],
      "x-ms-enum": {
        "name": "EndpointResourceState",
        "modelAsString": true
      }
    },
    "EndpointUpdateParameters": {
      "type": "object",
      "description": "Properties required to create or update an endpoint.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Endpoint tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/EndpointPropertiesUpdateParameters",
          "description": "The JSON object containing endpoint update parameters."
        }
      }
    },
    "ForwardingProtocol": {
      "type": "string",
      "description": "Protocol this rule will use when forwarding traffic to backends.",
      "enum": [
        "HttpOnly",
        "HttpsOnly",
        "MatchRequest"
      ],
      "x-ms-enum": {
        "name": "ForwardingProtocol",
        "modelAsString": true
      }
    },
    "FrontDoorActivatedResourceInfo": {
      "type": "object",
      "description": "Reference to another resource along with its state.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        },
        "isActive": {
          "type": "boolean",
          "description": "Whether the resource is active or inactive",
          "readOnly": true
        }
      }
    },
    "FrontDoorCertificateType": {
      "type": "string",
      "description": "Defines the source of the SSL certificate.",
      "enum": [
        "CustomerCertificate",
        "ManagedCertificate",
        "AzureFirstPartyManagedCertificate"
      ],
      "x-ms-enum": {
        "name": "FrontDoorCertificateType",
        "modelAsString": true
      }
    },
    "FrontDoorDeploymentStatus": {
      "type": "string",
      "enum": [
        "NotStarted",
        "InProgress",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "FrontDoorDeploymentStatus",
        "modelAsString": true
      },
      "readOnly": true
    },
    "FrontDoorEndpointProtocol": {
      "type": "string",
      "description": "Supported protocols for the customer's endpoint.",
      "enum": [
        "Http",
        "Https"
      ],
      "x-ms-enum": {
        "name": "FrontDoorEndpointProtocol",
        "modelAsString": true
      }
    },
    "FrontDoorMinimumTlsVersion": {
      "type": "string",
      "description": "TLS protocol version that will be used for Https",
      "enum": [
        "TLS10",
        "TLS12"
      ],
      "x-ms-enum": {
        "name": "FrontDoorMinimumTlsVersion",
        "modelAsString": false
      }
    },
    "FrontDoorProvisioningState": {
      "type": "string",
      "description": "Provisioning status",
      "enum": [
        "Succeeded",
        "Failed",
        "Updating",
        "Deleting",
        "Creating"
      ],
      "x-ms-enum": {
        "name": "FrontDoorProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "FrontDoorPurgeParameters": {
      "type": "object",
      "description": "Parameters required for content purge.",
      "properties": {
        "contentPaths": {
          "type": "array",
          "description": "The path to the content to be purged. Can describe a file path or a wild card directory.",
          "items": {
            "type": "string"
          }
        },
        "domains": {
          "type": "array",
          "description": "List of domains.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "contentPaths"
      ]
    },
    "FrontDoorQueryStringCachingBehavior": {
      "type": "string",
      "description": "Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.",
      "enum": [
        "IgnoreQueryString",
        "UseQueryString",
        "IgnoreSpecifiedQueryStrings",
        "IncludeSpecifiedQueryStrings"
      ],
      "x-ms-enum": {
        "name": "FrontDoorQueryStringCachingBehavior",
        "modelAsString": true
      }
    },
    "FrontDoorRoute": {
      "type": "object",
      "description": "Friendly Routes name mapping to the any Routes or secret related information.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RouteProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FrontDoorRouteCacheConfiguration": {
      "type": "object",
      "description": "Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.",
      "properties": {
        "queryStringCachingBehavior": {
          "$ref": "#/definitions/FrontDoorQueryStringCachingBehavior",
          "description": "Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings."
        },
        "queryParameters": {
          "type": "string",
          "description": "query parameters to include or exclude (comma separated)."
        },
        "compressionSettings": {
          "$ref": "#/definitions/RouteCacheCompressionSettings",
          "description": "compression settings."
        }
      }
    },
    "FrontDoorRouteListResult": {
      "type": "object",
      "description": "The response of a FrontDoorRoute list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FrontDoorRoute items on this page",
          "items": {
            "$ref": "#/definitions/FrontDoorRoute"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FrontDoorRule": {
      "type": "object",
      "description": "Friendly Rules name mapping to the any Rules or secret related information.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RuleProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FrontDoorRuleListResult": {
      "type": "object",
      "description": "The response of a FrontDoorRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FrontDoorRule items on this page",
          "items": {
            "$ref": "#/definitions/FrontDoorRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FrontDoorRuleSet": {
      "type": "object",
      "description": "Friendly RuleSet name mapping to the any RuleSet or secret related information.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RuleSetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FrontDoorRuleSetListResult": {
      "type": "object",
      "description": "The response of a FrontDoorRuleSet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FrontDoorRuleSet items on this page",
          "items": {
            "$ref": "#/definitions/FrontDoorRuleSet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FrontDoorSecret": {
      "type": "object",
      "description": "Friendly Secret name mapping to the any Secret or secret related information.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecretDetails",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FrontDoorSecretListResult": {
      "type": "object",
      "description": "The response of a FrontDoorSecret list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FrontDoorSecret items on this page",
          "items": {
            "$ref": "#/definitions/FrontDoorSecret"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FrontDoorSecurityPolicy": {
      "type": "object",
      "description": "SecurityPolicy association for AzureFrontDoor profile",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecurityPolicyDetails",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FrontDoorSecurityPolicyListResult": {
      "type": "object",
      "description": "The response of a FrontDoorSecurityPolicy list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FrontDoorSecurityPolicy items on this page",
          "items": {
            "$ref": "#/definitions/FrontDoorSecurityPolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FrontDoorUsage": {
      "type": "object",
      "description": "Describes resource usage.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource identifier.",
          "readOnly": true
        },
        "unit": {
          "$ref": "#/definitions/FrontDoorUsageUnit",
          "description": "An enum describing the unit of measurement."
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "description": "The current value of the usage."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "The limit of usage."
        },
        "name": {
          "$ref": "#/definitions/FrontDoorUsageResourceName",
          "description": "The name of the type of usage."
        }
      },
      "required": [
        "unit",
        "currentValue",
        "limit",
        "name"
      ]
    },
    "FrontDoorUsageResourceName": {
      "type": "object",
      "description": "The usage names.",
      "properties": {
        "value": {
          "type": "string",
          "description": "A string describing the resource name."
        },
        "localizedValue": {
          "type": "string",
          "description": "A localized string describing the resource name."
        }
      }
    },
    "FrontDoorUsageUnit": {
      "type": "string",
      "description": "An enum describing the unit of measurement.",
      "enum": [
        "Count"
      ],
      "x-ms-enum": {
        "name": "FrontDoorUsageUnit",
        "modelAsString": true
      }
    },
    "GeoFilter": {
      "type": "object",
      "description": "Rules defining user's geo access within a CDN endpoint.",
      "properties": {
        "relativePath": {
          "type": "string",
          "description": "Relative path applicable to geo filter. (e.g. '/mypictures', '/mypicture/kitty.jpg', and etc.)"
        },
        "action": {
          "$ref": "#/definitions/GeoFilterActions",
          "description": "Action of the geo filter, i.e. allow or block access."
        },
        "countryCodes": {
          "type": "array",
          "description": "Two letter country or region codes defining user country or region access in a geo filter, e.g. AU, MX, US.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "relativePath",
        "action",
        "countryCodes"
      ]
    },
    "GeoFilterActions": {
      "type": "string",
      "description": "Action of the geo filter, i.e. allow or block access.",
      "enum": [
        "Block",
        "Allow"
      ],
      "x-ms-enum": {
        "name": "GeoFilterActions",
        "modelAsString": false
      }
    },
    "HeaderAction": {
      "type": "string",
      "description": "Action to perform",
      "enum": [
        "Append",
        "Overwrite",
        "Delete"
      ],
      "x-ms-enum": {
        "name": "HeaderAction",
        "modelAsString": true
      }
    },
    "HeaderActionProperties": {
      "type": "object",
      "description": "Defines the parameters for the request header action.",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/HeaderActionType",
          "x-ms-client-name": "type"
        },
        "headerAction": {
          "$ref": "#/definitions/HeaderAction",
          "description": "Action to perform"
        },
        "headerName": {
          "type": "string",
          "description": "Name of the header to modify"
        },
        "value": {
          "type": "string",
          "description": "Value for the specified action"
        }
      },
      "required": [
        "typeName",
        "headerAction",
        "headerName"
      ]
    },
    "HeaderActionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleHeaderActionParameters"
      ],
      "x-ms-enum": {
        "name": "HeaderActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "HeaderAction",
            "value": "DeliveryRuleHeaderActionParameters"
          }
        ]
      }
    },
    "HealthProbeProtocol": {
      "type": "string",
      "description": "Protocol to use for health probe.",
      "enum": [
        "NotSet",
        "Http",
        "Https"
      ],
      "x-ms-enum": {
        "name": "HealthProbeProtocol",
        "modelAsString": false
      }
    },
    "HealthProbeRequestType": {
      "type": "string",
      "description": "The type of health probe request that is made.",
      "enum": [
        "NotSet",
        "GET",
        "HEAD"
      ],
      "x-ms-enum": {
        "name": "HealthProbeRequestType",
        "modelAsString": false
      }
    },
    "HealthProbeSettings": {
      "type": "object",
      "description": "The JSON object that contains the properties to send health probes to origin.",
      "properties": {
        "probePath": {
          "type": "string",
          "description": "The path relative to the origin that is used to determine the health of the origin."
        },
        "probeRequestType": {
          "$ref": "#/definitions/HealthProbeRequestType",
          "description": "The type of health probe request that is made."
        },
        "probeProtocol": {
          "$ref": "#/definitions/HealthProbeProtocol",
          "description": "Protocol to use for health probe."
        },
        "probeIntervalInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The number of seconds between health probes.Default is 240sec.",
          "minimum": 1,
          "maximum": 255
        }
      }
    },
    "HostNameAvailabilityContent": {
      "type": "object",
      "description": "Input of CheckHostNameAvailability API.",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "The host name to validate."
        }
      },
      "required": [
        "hostName"
      ]
    },
    "HostNameMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for HostName match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/HostNameMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/HostNameOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "hostNameOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "HostNameMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleHostNameConditionParameters"
      ],
      "x-ms-enum": {
        "name": "HostNameMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "HostNameCondition",
            "value": "DeliveryRuleHostNameConditionParameters"
          }
        ]
      }
    },
    "HostNameOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "Equal",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "LessThan",
        "LessThanOrEqual",
        "GreaterThan",
        "GreaterThanOrEqual",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "HostNameOperator",
        "modelAsString": true
      }
    },
    "HttpErrorRange": {
      "type": "object",
      "description": "The JSON object that represents the range for http status codes",
      "properties": {
        "begin": {
          "type": "integer",
          "format": "int32",
          "description": "The inclusive start of the http status code range.",
          "minimum": 100,
          "maximum": 999
        },
        "end": {
          "type": "integer",
          "format": "int32",
          "description": "The inclusive end of the http status code range.",
          "minimum": 100,
          "maximum": 999
        }
      }
    },
    "HttpVersionMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for HttpVersion match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/HttpVersionMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/HttpVersionOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "httpVersionOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "HttpVersionMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleHttpVersionConditionParameters"
      ],
      "x-ms-enum": {
        "name": "HttpVersionMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "HttpVersionCondition",
            "value": "DeliveryRuleHttpVersionConditionParameters"
          }
        ]
      }
    },
    "HttpVersionOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Equal"
      ],
      "x-ms-enum": {
        "name": "HttpVersionOperator",
        "modelAsString": true
      }
    },
    "HttpsRedirect": {
      "type": "string",
      "description": "Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "HttpsRedirect",
        "modelAsString": true
      }
    },
    "IdentityType": {
      "type": "string",
      "description": "The type of identity that creates/modifies resources",
      "enum": [
        "user",
        "application",
        "managedIdentity",
        "key"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true
      }
    },
    "IpAddressGroup": {
      "type": "object",
      "description": "CDN Ip address group",
      "properties": {
        "deliveryRegion": {
          "type": "string",
          "description": "The delivery region of the ip address group"
        },
        "ipv4Addresses": {
          "type": "array",
          "description": "The list of ip v4 addresses.",
          "items": {
            "$ref": "#/definitions/CidrIpAddress"
          },
          "x-ms-identifiers": []
        },
        "ipv6Addresses": {
          "type": "array",
          "description": "The list of ip v6 addresses.",
          "items": {
            "$ref": "#/definitions/CidrIpAddress"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IsDeviceMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for IsDevice match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/IsDeviceMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/IsDeviceOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "IsDeviceOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "$ref": "#/definitions/IsDeviceMatchConditionMatchValue"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "IsDeviceMatchConditionMatchValue": {
      "type": "string",
      "enum": [
        "Mobile",
        "Desktop"
      ],
      "x-ms-enum": {
        "name": "IsDeviceMatchConditionMatchValue",
        "modelAsString": true
      }
    },
    "IsDeviceMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleIsDeviceConditionParameters"
      ],
      "x-ms-enum": {
        "name": "IsDeviceMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "IsDeviceCondition",
            "value": "DeliveryRuleIsDeviceConditionParameters"
          }
        ]
      }
    },
    "IsDeviceOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Equal"
      ],
      "x-ms-enum": {
        "name": "IsDeviceOperator",
        "modelAsString": true
      }
    },
    "KeyVaultCertificateSource": {
      "type": "object",
      "description": "Describes the parameters for using a user's KeyVault certificate for securing custom domain.",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/KeyVaultCertificateSourceType",
          "x-ms-client-name": "type"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription Id of the user's Key Vault containing the SSL certificate"
        },
        "resourceGroupName": {
          "type": "string",
          "description": "Resource group of the user's Key Vault containing the SSL certificate"
        },
        "vaultName": {
          "type": "string",
          "description": "The name of the user's Key Vault containing the SSL certificate"
        },
        "secretName": {
          "type": "string",
          "description": "The name of Key Vault Secret (representing the full certificate PFX) in Key Vault."
        },
        "secretVersion": {
          "type": "string",
          "description": "The version(GUID) of Key Vault Secret in Key Vault."
        },
        "updateRule": {
          "$ref": "#/definitions/CertificateUpdateAction",
          "description": "Describes the action that shall be taken when the certificate is updated in Key Vault."
        },
        "deleteRule": {
          "$ref": "#/definitions/CertificateDeleteAction",
          "description": "Describes the action that shall be taken when the certificate is removed from Key Vault."
        }
      },
      "required": [
        "typeName",
        "subscriptionId",
        "resourceGroupName",
        "vaultName",
        "secretName",
        "updateRule",
        "deleteRule"
      ]
    },
    "KeyVaultCertificateSourceType": {
      "type": "string",
      "enum": [
        "KeyVaultCertificateSourceParameters"
      ],
      "x-ms-enum": {
        "name": "KeyVaultCertificateSourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "KeyVaultCertificateSource",
            "value": "KeyVaultCertificateSourceParameters"
          }
        ]
      }
    },
    "KeyVaultSigningKey": {
      "type": "object",
      "description": "Describes the parameters for using a user's KeyVault for URL Signing Key.",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/KeyVaultSigningKeyType",
          "x-ms-client-name": "type"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription Id of the user's Key Vault containing the secret"
        },
        "resourceGroupName": {
          "type": "string",
          "description": "Resource group of the user's Key Vault containing the secret"
        },
        "vaultName": {
          "type": "string",
          "description": "The name of the user's Key Vault containing the secret"
        },
        "secretName": {
          "type": "string",
          "description": "The name of secret in Key Vault."
        },
        "secretVersion": {
          "type": "string",
          "description": "The version(GUID) of secret in Key Vault."
        }
      },
      "required": [
        "typeName",
        "subscriptionId",
        "resourceGroupName",
        "vaultName",
        "secretName",
        "secretVersion"
      ]
    },
    "KeyVaultSigningKeyType": {
      "type": "string",
      "enum": [
        "KeyVaultSigningKeyParameters"
      ],
      "x-ms-enum": {
        "name": "KeyVaultSigningKeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "KeyVaultSigningKey",
            "value": "KeyVaultSigningKeyParameters"
          }
        ]
      }
    },
    "LinkToDefaultDomain": {
      "type": "string",
      "description": "whether this route will be linked to the default endpoint domain.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "LinkToDefaultDomain",
        "modelAsString": true
      }
    },
    "LoadBalancingSettings": {
      "type": "object",
      "description": "Round-Robin load balancing settings for a backend pool",
      "properties": {
        "sampleSize": {
          "type": "integer",
          "format": "int32",
          "description": "The number of samples to consider for load balancing decisions"
        },
        "successfulSamplesRequired": {
          "type": "integer",
          "format": "int32",
          "description": "The number of samples within the sample period that must succeed"
        },
        "additionalLatencyInMilliseconds": {
          "type": "integer",
          "format": "int32",
          "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket"
        }
      }
    },
    "LoadParameters": {
      "type": "object",
      "description": "Parameters required for content load.",
      "properties": {
        "contentPaths": {
          "type": "array",
          "description": "The path to the content to be loaded. Path should be a relative file URL of the origin.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "contentPaths"
      ]
    },
    "LogMetric": {
      "type": "string",
      "enum": [
        "clientRequestCount",
        "clientRequestTraffic",
        "clientRequestBandwidth",
        "originRequestTraffic",
        "originRequestBandwidth",
        "totalLatency"
      ],
      "x-ms-enum": {
        "name": "LogMetric",
        "modelAsString": true
      }
    },
    "LogMetricsGranularity": {
      "type": "string",
      "enum": [
        "PT5M",
        "PT1H",
        "P1D"
      ],
      "x-ms-enum": {
        "name": "LogMetricsGranularity",
        "modelAsString": true
      }
    },
    "LogMetricsGroupBy": {
      "type": "string",
      "enum": [
        "httpStatusCode",
        "protocol",
        "cacheStatus",
        "countryOrRegion",
        "customDomain"
      ],
      "x-ms-enum": {
        "name": "LogMetricsGroupBy",
        "modelAsString": true
      }
    },
    "LogRanking": {
      "type": "string",
      "enum": [
        "url",
        "referrer",
        "browser",
        "userAgent",
        "countryOrRegion"
      ],
      "x-ms-enum": {
        "name": "LogRanking",
        "modelAsString": true
      }
    },
    "LogRankingMetric": {
      "type": "string",
      "enum": [
        "clientRequestCount",
        "clientRequestTraffic",
        "hitCount",
        "missCount",
        "userErrorCount",
        "errorCount"
      ],
      "x-ms-enum": {
        "name": "LogRankingMetric",
        "modelAsString": true
      }
    },
    "LogSpecification": {
      "type": "object",
      "description": "Log specification of operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of log specification."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of log specification."
        },
        "blobDuration": {
          "type": "string",
          "description": "Blob duration of specification."
        },
        "logFilterPattern": {
          "type": "string",
          "description": "Pattern to filter based on name"
        }
      }
    },
    "ManagedCertificate": {
      "type": "object",
      "description": "Managed Certificate used for https",
      "allOf": [
        {
          "$ref": "#/definitions/Certificate"
        }
      ]
    },
    "ManagedCertificateProperties": {
      "type": "object",
      "description": "Managed Certificate used for https",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Subject name in the certificate.",
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Certificate expiration date.",
          "readOnly": true,
          "x-ms-client-name": "expiresDate"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SecretProperties"
        }
      ],
      "x-ms-discriminator-value": "ManagedCertificate"
    },
    "ManagedRuleDefinition": {
      "type": "object",
      "description": "Describes a managed rule definition.",
      "properties": {
        "ruleId": {
          "type": "string",
          "description": "Identifier for the managed rule.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Describes the functionality of the managed rule.",
          "readOnly": true
        }
      }
    },
    "ManagedRuleGroupDefinition": {
      "type": "object",
      "description": "Describes a managed rule group.",
      "properties": {
        "ruleGroupName": {
          "type": "string",
          "description": "Name of the managed rule group.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the managed rule group.",
          "readOnly": true
        },
        "rules": {
          "type": "array",
          "description": "List of rules within the managed rule group.",
          "items": {
            "$ref": "#/definitions/ManagedRuleDefinition"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ManagedRuleGroupOverrideSetting": {
      "type": "object",
      "description": "Defines a managed rule group override setting.",
      "properties": {
        "ruleGroupName": {
          "type": "string",
          "description": "Describes the managed rule group within the rule set to override"
        },
        "rules": {
          "type": "array",
          "description": "List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
          "items": {
            "$ref": "#/definitions/ManagedRuleOverrideSetting"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "ruleGroupName"
      ]
    },
    "ManagedRuleOverrideSetting": {
      "type": "object",
      "description": "Defines a managed rule group override setting.",
      "properties": {
        "ruleId": {
          "type": "string",
          "description": "Identifier for the managed rule."
        },
        "enabledState": {
          "$ref": "#/definitions/ManagedRuleSetupState",
          "description": "Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified."
        },
        "action": {
          "$ref": "#/definitions/OverrideActionType",
          "description": "Describes the override action to be applied when rule matches."
        }
      },
      "required": [
        "ruleId"
      ]
    },
    "ManagedRuleSetDefinition": {
      "type": "object",
      "description": "Describes a managed rule set definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedRuleSetDefinitionProperties",
          "description": "Describes managed rule set definition properties."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ManagedRuleSetDefinitionProperties": {
      "type": "object",
      "description": "Properties for a managed rule set definition.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the managed rule set.",
          "readOnly": true
        },
        "ruleSetType": {
          "type": "string",
          "description": "Type of the managed rule set.",
          "readOnly": true
        },
        "ruleSetVersion": {
          "type": "string",
          "description": "Version of the managed rule set type.",
          "readOnly": true
        },
        "ruleGroups": {
          "type": "array",
          "description": "Rule groups of the managed rule set.",
          "items": {
            "$ref": "#/definitions/ManagedRuleGroupDefinition"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ManagedRuleSetList": {
      "type": "object",
      "description": "Defines the list of managed rule sets for the policy.",
      "properties": {
        "managedRuleSets": {
          "type": "array",
          "description": "List of rule sets.",
          "items": {
            "$ref": "#/definitions/WafPolicyManagedRuleSet"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ManagedRuleSetupState": {
      "type": "string",
      "description": "Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "ManagedRuleSetupState",
        "modelAsString": true
      }
    },
    "MatchOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "IPMatch",
        "GeoMatch",
        "Equal",
        "Contains",
        "LessThan",
        "GreaterThan",
        "LessThanOrEqual",
        "GreaterThanOrEqual",
        "BeginsWith",
        "EndsWith",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "MatchOperator",
        "modelAsString": true
      }
    },
    "MatchProcessingBehavior": {
      "type": "string",
      "description": "If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.",
      "enum": [
        "Continue",
        "Stop"
      ],
      "x-ms-enum": {
        "name": "MatchProcessingBehavior",
        "modelAsString": true
      }
    },
    "MatchVariable": {
      "type": "string",
      "description": "The name of the condition for the delivery rule.",
      "enum": [
        "RemoteAddress",
        "RequestMethod",
        "QueryString",
        "PostArgs",
        "RequestUri",
        "RequestHeader",
        "RequestBody",
        "RequestScheme",
        "UrlPath",
        "UrlFileExtension",
        "UrlFileName",
        "HttpVersion",
        "Cookies",
        "IsDevice",
        "SocketAddr",
        "ClientPort",
        "ServerPort",
        "HostName",
        "SslProtocol"
      ],
      "x-ms-enum": {
        "name": "MatchVariable",
        "modelAsString": true
      }
    },
    "MetricAvailability": {
      "type": "object",
      "description": "Retention policy of a resource metric.",
      "properties": {
        "timeGrain": {
          "type": "string"
        },
        "blobDuration": {
          "type": "string"
        }
      }
    },
    "MetricSpecification": {
      "type": "object",
      "description": "Metric specification of operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of metric specification."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of metric specification."
        },
        "displayDescription": {
          "type": "string",
          "description": "Display description of metric specification."
        },
        "unit": {
          "type": "string",
          "description": "The metric unit. Possible values include: 'Bytes', 'Count', 'Milliseconds'."
        },
        "aggregationType": {
          "type": "string",
          "description": "The metric aggregation type. Possible values include: 'Average', 'Count', 'Total'."
        },
        "availabilities": {
          "type": "array",
          "description": "Retention policies of a resource metric.",
          "items": {
            "$ref": "#/definitions/MetricAvailability"
          },
          "x-ms-identifiers": []
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "description": "The supported time grain types for the metrics.",
          "items": {
            "type": "string"
          }
        },
        "dimensions": {
          "type": "array",
          "description": "The dimensions of metric",
          "items": {
            "$ref": "#/definitions/DimensionProperties"
          },
          "x-ms-identifiers": []
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "Property to specify whether to fill gap with zero."
        },
        "metricFilterPattern": {
          "type": "string",
          "description": "Pattern to filter based on name"
        },
        "isInternal": {
          "type": "boolean",
          "description": "Property to specify metric is internal or not."
        }
      }
    },
    "MetricsResponse": {
      "type": "object",
      "description": "Metrics Response",
      "properties": {
        "dateTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "granularity": {
          "$ref": "#/definitions/MetricsResponseGranularity"
        },
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricsResponseSeriesItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MetricsResponseGranularity": {
      "type": "string",
      "enum": [
        "PT5M",
        "PT1H",
        "P1D"
      ],
      "x-ms-enum": {
        "name": "MetricsResponseGranularity",
        "modelAsString": true
      }
    },
    "MetricsResponseSeriesItem": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string"
        },
        "unit": {
          "$ref": "#/definitions/MetricsResponseSeriesItemUnit"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricsResponseSeriesPropertiesItemsItem"
          },
          "x-ms-identifiers": []
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Components1Gs0LlpSchemasMetricsresponsePropertiesSeriesItemsPropertiesDataItems"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MetricsResponseSeriesItemUnit": {
      "type": "string",
      "enum": [
        "count",
        "bytes",
        "bitsPerSecond",
        "milliSeconds"
      ],
      "x-ms-enum": {
        "name": "MetricsResponseSeriesItemUnit",
        "modelAsString": true
      }
    },
    "MetricsResponseSeriesPropertiesItemsItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "OperationProperties": {
      "type": "object",
      "description": "Properties of operation, include metric specifications.",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "One property of operation, include metric specifications."
        }
      }
    },
    "OptimizationType": {
      "type": "string",
      "description": "Specifies what scenario the customer wants this CDN endpoint to optimize, e.g. Download, Media services. With this information we can apply scenario driven optimization.",
      "enum": [
        "GeneralWebDelivery",
        "GeneralMediaStreaming",
        "VideoOnDemandMediaStreaming",
        "LargeFileDownload",
        "DynamicSiteAcceleration"
      ],
      "x-ms-enum": {
        "name": "OptimizationType",
        "modelAsString": true
      }
    },
    "OriginGroupOverride": {
      "type": "object",
      "description": "Defines the parameters for the origin group override configuration.",
      "properties": {
        "originGroup": {
          "$ref": "#/definitions/ResourceReference",
          "description": "defines the OriginGroup that would override the DefaultOriginGroup on route."
        },
        "forwardingProtocol": {
          "$ref": "#/definitions/ForwardingProtocol",
          "description": "Protocol this rule will use when forwarding traffic to backends."
        }
      }
    },
    "OriginGroupOverrideAction": {
      "type": "object",
      "description": "Defines the origin group override action for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/OriginGroupOverrideActionProperties",
          "description": "Defines the parameters for the action.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleAction"
        }
      ],
      "x-ms-discriminator-value": "OriginGroupOverride"
    },
    "OriginGroupOverrideActionProperties": {
      "type": "object",
      "description": "Defines the parameters for the origin group override action.",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/OriginGroupOverrideActionType",
          "x-ms-client-name": "type"
        },
        "originGroup": {
          "$ref": "#/definitions/ResourceReference",
          "description": "defines the OriginGroup that would override the DefaultOriginGroup."
        }
      },
      "required": [
        "typeName",
        "originGroup"
      ]
    },
    "OriginGroupOverrideActionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleOriginGroupOverrideActionParameters"
      ],
      "x-ms-enum": {
        "name": "OriginGroupOverrideActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "OriginGroupOverrideAction",
            "value": "DeliveryRuleOriginGroupOverrideActionParameters"
          }
        ]
      }
    },
    "OriginGroupProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties of the origin group.",
      "properties": {
        "resourceState": {
          "$ref": "#/definitions/OriginGroupResourceState",
          "description": "Resource status of the origin group.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/OriginGroupProvisioningState",
          "description": "Provisioning status of the origin group.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OriginGroupUpdatePropertiesParameters"
        }
      ]
    },
    "OriginGroupProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the origin group.",
      "enum": [
        "Succeeded",
        "Failed",
        "Updating",
        "Deleting",
        "Creating"
      ],
      "x-ms-enum": {
        "name": "OriginGroupProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "OriginGroupResourceState": {
      "type": "string",
      "description": "Resource status of the origin group.",
      "enum": [
        "Creating",
        "Active",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "OriginGroupResourceState",
        "modelAsString": true
      }
    },
    "OriginGroupUpdateParameters": {
      "type": "object",
      "description": "Origin group properties needed for origin group creation or update.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OriginGroupUpdatePropertiesParameters",
          "description": "The JSON object that contains the properties of the origin group."
        }
      }
    },
    "OriginGroupUpdatePropertiesParameters": {
      "type": "object",
      "description": "The JSON object that contains the properties of the origin group.",
      "properties": {
        "healthProbeSettings": {
          "$ref": "#/definitions/HealthProbeSettings",
          "description": "Health probe settings to the origin that is used to determine the health of the origin."
        },
        "origins": {
          "type": "array",
          "description": "The source of the content being delivered via CDN within given origin group.",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          }
        },
        "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.",
          "maximum": 50
        },
        "responseBasedOriginErrorDetectionSettings": {
          "$ref": "#/definitions/ResponseBasedOriginErrorDetectionSettings",
          "description": "The JSON object that contains the properties to determine origin health using real requests/responses. This property is currently not supported."
        }
      }
    },
    "OriginProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties of the origin.",
      "properties": {
        "resourceState": {
          "$ref": "#/definitions/OriginResourceState",
          "description": "Resource status of the origin.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/OriginProvisioningState",
          "description": "Provisioning status of the origin.",
          "readOnly": true
        },
        "privateEndpointStatus": {
          "$ref": "#/definitions/PrivateEndpointStatus",
          "description": "The approval status for the connection to the Private Link",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OriginUpdatePropertiesParameters"
        }
      ]
    },
    "OriginProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the origin.",
      "enum": [
        "Succeeded",
        "Failed",
        "Updating",
        "Deleting",
        "Creating"
      ],
      "x-ms-enum": {
        "name": "OriginProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "OriginResourceState": {
      "type": "string",
      "description": "Resource status of the origin.",
      "enum": [
        "Creating",
        "Active",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "OriginResourceState",
        "modelAsString": true
      }
    },
    "OriginUpdateParameters": {
      "type": "object",
      "description": "Origin properties needed for origin update.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OriginUpdatePropertiesParameters",
          "description": "The JSON object that contains the properties of the origin."
        }
      }
    },
    "OriginUpdatePropertiesParameters": {
      "type": "object",
      "description": "The JSON object that contains the properties of the origin.",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be unique across all origins in an endpoint."
        },
        "httpPort": {
          "type": "integer",
          "format": "int32",
          "description": "The value of the HTTP port. Must be between 1 and 65535.",
          "minimum": 1,
          "maximum": 65535
        },
        "httpsPort": {
          "type": "integer",
          "format": "int32",
          "description": "The value of the HTTPS port. Must be between 1 and 65535.",
          "minimum": 1,
          "maximum": 65535
        },
        "originHostHeader": {
          "type": "string",
          "description": "The host header value sent to the origin with each request. If you leave this blank, the request hostname determines this value. Azure CDN origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin hostname by default. This overrides the host header defined at Endpoint"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy.Must be between 1 and 5",
          "minimum": 1,
          "maximum": 5
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Weight of the origin in given origin group for load balancing. Must be between 1 and 1000",
          "minimum": 1,
          "maximum": 1000
        },
        "enabled": {
          "type": "boolean",
          "description": "Origin is enabled for load balancing or not"
        },
        "privateLinkAlias": {
          "type": "string",
          "description": "The Alias of the Private Link resource. Populating this optional field indicates that this origin is 'Private'"
        },
        "privateLinkResourceId": {
          "type": "string",
          "description": "The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'"
        },
        "privateLinkLocation": {
          "type": "string",
          "description": "The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated"
        },
        "privateLinkApprovalMessage": {
          "type": "string",
          "description": "A custom message to be included in the approval request to connect to the Private Link."
        }
      }
    },
    "OverrideActionType": {
      "type": "string",
      "description": "Defines the action to take on rule match.",
      "enum": [
        "Allow",
        "Block",
        "Log",
        "Redirect"
      ],
      "x-ms-enum": {
        "name": "OverrideActionType",
        "modelAsString": true
      }
    },
    "PagedCdnUsage": {
      "type": "object",
      "description": "Output of check resource usage API.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CdnUsage items on this page",
          "items": {
            "$ref": "#/definitions/CdnUsage"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedEdgeNode": {
      "type": "object",
      "description": "Result of the request to list CDN edgenodes. It contains a list of ip address group and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EdgeNode items on this page",
          "items": {
            "$ref": "#/definitions/EdgeNode"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedFrontDoorUsage": {
      "type": "object",
      "description": "The list usages operation response.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FrontDoorUsage items on this page",
          "items": {
            "$ref": "#/definitions/FrontDoorUsage"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedManagedRuleSetDefinition": {
      "type": "object",
      "description": "List of managed rule set definitions available for use in a policy.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ManagedRuleSetDefinition items on this page",
          "items": {
            "$ref": "#/definitions/ManagedRuleSetDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ParamIndicator": {
      "type": "string",
      "description": "Indicates the purpose of the parameter",
      "enum": [
        "Expires",
        "KeyId",
        "Signature"
      ],
      "x-ms-enum": {
        "name": "ParamIndicator",
        "modelAsString": true
      }
    },
    "PolicyEnabledState": {
      "type": "string",
      "description": "describes if the policy is in enabled state or disabled state",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "PolicyEnabledState",
        "modelAsString": true
      }
    },
    "PolicyMode": {
      "type": "string",
      "description": "Describes if it is in detection mode or prevention mode at policy level.",
      "enum": [
        "Prevention",
        "Detection"
      ],
      "x-ms-enum": {
        "name": "PolicyMode",
        "modelAsString": true
      }
    },
    "PolicyResourceState": {
      "type": "string",
      "description": "Resource status of the policy.",
      "enum": [
        "Creating",
        "Enabling",
        "Enabled",
        "Disabling",
        "Disabled",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "PolicyResourceState",
        "modelAsString": true
      }
    },
    "PolicySettingsDefaultCustomBlockResponseStatusCode": {
      "type": "number",
      "description": "If the action type is block, this field defines the default customer overridable http response status code.",
      "enum": [
        200,
        403,
        405,
        406,
        429
      ],
      "x-ms-enum": {
        "name": "PolicySettingsDefaultCustomBlockResponseStatusCode",
        "modelAsString": true,
        "values": [
          {
            "name": "200",
            "value": 200
          },
          {
            "name": "403",
            "value": 403
          },
          {
            "name": "405",
            "value": 405
          },
          {
            "name": "406",
            "value": 406
          },
          {
            "name": "429",
            "value": 429
          }
        ]
      }
    },
    "PostArgsMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for PostArgs match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/PostArgsMatchConditionType",
          "x-ms-client-name": "type"
        },
        "selector": {
          "type": "string",
          "description": "Name of PostArg to be matched"
        },
        "operator": {
          "$ref": "#/definitions/PostArgsOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "postArgsOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "PostArgsMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRulePostArgsConditionParameters"
      ],
      "x-ms-enum": {
        "name": "PostArgsMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "PostArgsCondition",
            "value": "DeliveryRulePostArgsConditionParameters"
          }
        ]
      }
    },
    "PostArgsOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "Equal",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "LessThan",
        "LessThanOrEqual",
        "GreaterThan",
        "GreaterThanOrEqual",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "PostArgsOperator",
        "modelAsString": true
      }
    },
    "PreTransformCategory": {
      "type": "string",
      "description": "Describes what transforms are applied before matching",
      "enum": [
        "Lowercase",
        "Uppercase",
        "Trim",
        "UrlDecode",
        "UrlEncode",
        "RemoveNulls"
      ],
      "x-ms-enum": {
        "name": "PreTransformCategory",
        "modelAsString": true
      }
    },
    "PrivateEndpointStatus": {
      "type": "string",
      "description": "The approval status for the connection to the Private Link",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected",
        "Timeout"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointStatus",
        "modelAsString": true
      }
    },
    "Profile": {
      "type": "object",
      "description": "A profile is a logical grouping of endpoints that share the same settings.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProfileProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "pattern": "^[-\\w\\._,\\(\\\\\\)]+$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ProfileListResult": {
      "type": "object",
      "description": "The response of a Profile list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Profile items on this page",
          "items": {
            "$ref": "#/definitions/Profile"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProfileProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties required to create a profile.",
      "properties": {
        "resourceState": {
          "$ref": "#/definitions/ProfileResourceState",
          "description": "Resource status of the profile.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProfileProvisioningState",
          "description": "Provisioning status of the profile.",
          "readOnly": true
        },
        "frontDoorId": {
          "type": "string",
          "description": "The Id of the frontdoor.",
          "readOnly": true
        },
        "originResponseTimeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.",
          "minimum": 16
        }
      }
    },
    "ProfilePropertiesUpdateParameters": {
      "type": "object",
      "description": "The JSON object containing profile update parameters.",
      "properties": {
        "originResponseTimeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Send and receive timeout on forwarding request to the origin. When timeout is reached, the request fails and returns.",
          "minimum": 16
        }
      }
    },
    "ProfileProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the profile.",
      "enum": [
        "Succeeded",
        "Failed",
        "Updating",
        "Deleting",
        "Creating"
      ],
      "x-ms-enum": {
        "name": "ProfileProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "ProfileResourceState": {
      "type": "string",
      "description": "Resource status of the profile.",
      "enum": [
        "Creating",
        "Active",
        "Deleting",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ProfileResourceState",
        "modelAsString": true
      }
    },
    "ProfileUpdateParameters": {
      "type": "object",
      "description": "Properties required to update a profile.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Profile tags",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ProfilePropertiesUpdateParameters",
          "description": "The JSON object containing profile update parameters."
        }
      }
    },
    "PurgeParameters": {
      "type": "object",
      "description": "Parameters required for content purge.",
      "properties": {
        "contentPaths": {
          "type": "array",
          "description": "The path to the content to be purged. Can describe a file path or a wild card directory.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "contentPaths"
      ]
    },
    "QueryStringBehavior": {
      "type": "string",
      "description": "Caching behavior for the requests",
      "enum": [
        "Include",
        "IncludeAll",
        "Exclude",
        "ExcludeAll"
      ],
      "x-ms-enum": {
        "name": "QueryStringBehavior",
        "modelAsString": true
      }
    },
    "QueryStringCachingBehavior": {
      "type": "string",
      "description": "Defines how CDN caches requests that include query strings. You can ignore any query strings when caching, bypass caching to prevent requests that contain query strings from being cached, or cache every request with a unique URL.",
      "enum": [
        "IgnoreQueryString",
        "BypassCaching",
        "UseQueryString",
        "NotSet"
      ],
      "x-ms-enum": {
        "name": "QueryStringCachingBehavior",
        "modelAsString": false
      }
    },
    "QueryStringMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for QueryString match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/QueryStringMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/QueryStringOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "queryStringOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "QueryStringMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleQueryStringConditionParameters"
      ],
      "x-ms-enum": {
        "name": "QueryStringMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "QueryStringCondition",
            "value": "DeliveryRuleQueryStringConditionParameters"
          }
        ]
      }
    },
    "QueryStringOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "Equal",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "LessThan",
        "LessThanOrEqual",
        "GreaterThan",
        "GreaterThanOrEqual",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "QueryStringOperator",
        "modelAsString": true
      }
    },
    "RankingsResponse": {
      "type": "object",
      "description": "Rankings Response",
      "properties": {
        "dateTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "tables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RankingsResponseTablesItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RankingsResponseTablesItem": {
      "type": "object",
      "properties": {
        "ranking": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RankingsResponseTablesPropertiesItemsItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RankingsResponseTablesPropertiesItemsItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RankingsResponseTablesPropertiesItemsMetricsItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RankingsResponseTablesPropertiesItemsMetricsItem": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int64"
        },
        "percentage": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "RateLimitRule": {
      "type": "object",
      "description": "Defines a rate limiting rule that can be included in a waf policy",
      "properties": {
        "rateLimitThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Defines rate limit threshold."
        },
        "rateLimitDurationInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Defines rate limit duration. Default is 1 minute.",
          "maximum": 60
        }
      },
      "required": [
        "rateLimitThreshold",
        "rateLimitDurationInMinutes"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CustomRule"
        }
      ]
    },
    "RateLimitRuleList": {
      "type": "object",
      "description": "Defines contents of rate limit rules",
      "properties": {
        "rules": {
          "type": "array",
          "description": "List of rules",
          "items": {
            "$ref": "#/definitions/RateLimitRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RedirectType": {
      "type": "string",
      "description": "The redirect type the rule will use when redirecting traffic.",
      "enum": [
        "Moved",
        "Found",
        "TemporaryRedirect",
        "PermanentRedirect"
      ],
      "x-ms-enum": {
        "name": "RedirectType",
        "modelAsString": true
      }
    },
    "RemoteAddressMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for RemoteAddress match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/RemoteAddressMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/RemoteAddressOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "remoteAddressOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "RemoteAddressMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleRemoteAddressConditionParameters"
      ],
      "x-ms-enum": {
        "name": "RemoteAddressMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "RemoteAddressCondition",
            "value": "DeliveryRuleRemoteAddressConditionParameters"
          }
        ]
      }
    },
    "RemoteAddressOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "IPMatch",
        "GeoMatch"
      ],
      "x-ms-enum": {
        "name": "RemoteAddressOperator",
        "modelAsString": true
      }
    },
    "RequestBodyMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for RequestBody match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/RequestBodyMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/RequestBodyOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "requestBodyOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "RequestBodyMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleRequestBodyConditionParameters"
      ],
      "x-ms-enum": {
        "name": "RequestBodyMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "RequestBodyCondition",
            "value": "DeliveryRuleRequestBodyConditionParameters"
          }
        ]
      }
    },
    "RequestBodyOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "Equal",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "LessThan",
        "LessThanOrEqual",
        "GreaterThan",
        "GreaterThanOrEqual",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "RequestBodyOperator",
        "modelAsString": true
      }
    },
    "RequestHeaderMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for RequestHeader match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/RequestHeaderMatchConditionType",
          "x-ms-client-name": "type"
        },
        "selector": {
          "type": "string",
          "description": "Name of Header to be matched"
        },
        "operator": {
          "$ref": "#/definitions/RequestHeaderOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "requestHeaderOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "RequestHeaderMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleRequestHeaderConditionParameters"
      ],
      "x-ms-enum": {
        "name": "RequestHeaderMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "RequestHeaderCondition",
            "value": "DeliveryRuleRequestHeaderConditionParameters"
          }
        ]
      }
    },
    "RequestHeaderOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "Equal",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "LessThan",
        "LessThanOrEqual",
        "GreaterThan",
        "GreaterThanOrEqual",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "RequestHeaderOperator",
        "modelAsString": true
      }
    },
    "RequestMethodMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for RequestMethod match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/RequestMethodMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/RequestMethodOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "requestMethodOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "$ref": "#/definitions/RequestMethodMatchConditionMatchValue"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "RequestMethodMatchConditionMatchValue": {
      "type": "string",
      "enum": [
        "GET",
        "HEAD",
        "POST",
        "PUT",
        "DELETE",
        "OPTIONS",
        "TRACE"
      ],
      "x-ms-enum": {
        "name": "RequestMethodMatchConditionMatchValue",
        "modelAsString": true
      }
    },
    "RequestMethodMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleRequestMethodConditionParameters"
      ],
      "x-ms-enum": {
        "name": "RequestMethodMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "RequestMethodCondition",
            "value": "DeliveryRuleRequestMethodConditionParameters"
          }
        ]
      }
    },
    "RequestMethodOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Equal"
      ],
      "x-ms-enum": {
        "name": "RequestMethodOperator",
        "modelAsString": true
      }
    },
    "RequestSchemeMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for RequestScheme match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/RequestSchemeMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/RequestSchemeOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "requestSchemeOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "$ref": "#/definitions/RequestSchemeMatchConditionMatchValue"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "RequestSchemeMatchConditionMatchValue": {
      "type": "string",
      "enum": [
        "HTTP",
        "HTTPS"
      ],
      "x-ms-enum": {
        "name": "RequestSchemeMatchConditionMatchValue",
        "modelAsString": true
      }
    },
    "RequestSchemeMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleRequestSchemeConditionParameters"
      ],
      "x-ms-enum": {
        "name": "RequestSchemeMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "RequestSchemeCondition",
            "value": "DeliveryRuleRequestSchemeConditionParameters"
          }
        ]
      }
    },
    "RequestSchemeOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Equal"
      ],
      "x-ms-enum": {
        "name": "RequestSchemeOperator",
        "modelAsString": true
      }
    },
    "RequestUriMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for RequestUri match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/RequestUriMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/RequestUriOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "requestUriOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "RequestUriMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleRequestUriConditionParameters"
      ],
      "x-ms-enum": {
        "name": "RequestUriMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "RequestUriCondition",
            "value": "DeliveryRuleRequestUriConditionParameters"
          }
        ]
      }
    },
    "RequestUriOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "Equal",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "LessThan",
        "LessThanOrEqual",
        "GreaterThan",
        "GreaterThanOrEqual",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "RequestUriOperator",
        "modelAsString": true
      }
    },
    "Resource": {
      "type": "object",
      "description": "The core properties of ARM resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Read only system data",
          "readOnly": true
        }
      }
    },
    "ResourceReference": {
      "type": "object",
      "description": "Reference to another resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "ResourcesResponse": {
      "type": "object",
      "description": "Resources Response",
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourcesResponseEndpointsItem"
          }
        },
        "customDomains": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourcesResponseCustomDomainsItem"
          }
        }
      }
    },
    "ResourcesResponseCustomDomainsItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "endpointId": {
          "type": "string"
        },
        "history": {
          "type": "boolean"
        }
      }
    },
    "ResourcesResponseEndpointsItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "history": {
          "type": "boolean"
        },
        "customDomains": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourcesResponseEndpointsPropertiesItemsItem"
          }
        }
      }
    },
    "ResourcesResponseEndpointsPropertiesItemsItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "endpointId": {
          "type": "string"
        },
        "history": {
          "type": "boolean"
        }
      }
    },
    "ResponseBasedDetectedErrorTypes": {
      "type": "string",
      "description": "Type of response errors for real user requests for which origin will be deemed unhealthy",
      "enum": [
        "None",
        "TcpErrorsOnly",
        "TcpAndHttpErrors"
      ],
      "x-ms-enum": {
        "name": "ResponseBasedDetectedErrorTypes",
        "modelAsString": false
      }
    },
    "ResponseBasedOriginErrorDetectionSettings": {
      "type": "object",
      "description": "The JSON object that contains the properties to determine origin health using real requests/responses.",
      "properties": {
        "responseBasedDetectedErrorTypes": {
          "$ref": "#/definitions/ResponseBasedDetectedErrorTypes",
          "description": "Type of response errors for real user requests for which origin will be deemed unhealthy",
          "x-ms-client-name": "responseBasedDetectedErrorType"
        },
        "responseBasedFailoverThresholdPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "The percentage of failed requests in the sample where failover should trigger.",
          "maximum": 100
        },
        "httpErrorRanges": {
          "type": "array",
          "description": "The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.",
          "items": {
            "$ref": "#/definitions/HttpErrorRange"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RouteCacheCompressionSettings": {
      "type": "object",
      "description": "settings for compression.",
      "properties": {
        "contentTypesToCompress": {
          "type": "array",
          "description": "List of content types on which compression applies. The value should be a valid MIME type.",
          "items": {
            "type": "string"
          }
        },
        "isCompressionEnabled": {
          "type": "boolean",
          "description": "Indicates whether content compression is enabled on AzureFrontDoor. Default value is false. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB."
        }
      }
    },
    "RouteConfigurationOverrideActionProperties": {
      "type": "object",
      "description": "Defines the parameters for the route configuration override action.",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/RouteConfigurationOverrideActionType",
          "x-ms-client-name": "type"
        },
        "originGroupOverride": {
          "$ref": "#/definitions/OriginGroupOverride",
          "description": "A reference to the origin group override configuration. Leave empty to use the default origin group on route."
        },
        "cacheConfiguration": {
          "$ref": "#/definitions/CacheConfiguration",
          "description": "The caching configuration associated with this rule. To disable caching, do not provide a cacheConfiguration object."
        }
      },
      "required": [
        "typeName"
      ]
    },
    "RouteConfigurationOverrideActionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleRouteConfigurationOverrideActionParameters"
      ],
      "x-ms-enum": {
        "name": "RouteConfigurationOverrideActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "RouteConfigurationOverrideAction",
            "value": "DeliveryRuleRouteConfigurationOverrideActionParameters"
          }
        ]
      }
    },
    "RouteProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties of the Routes to create.",
      "properties": {
        "endpointName": {
          "type": "string",
          "description": "The name of the endpoint which holds the route.",
          "readOnly": true
        },
        "customDomains": {
          "type": "array",
          "description": "Domains referenced by this endpoint.",
          "items": {
            "$ref": "#/definitions/FrontDoorActivatedResourceInfo"
          }
        },
        "originGroup": {
          "$ref": "#/definitions/ResourceReference",
          "description": "A reference to the origin group."
        },
        "originPath": {
          "type": "string",
          "description": "A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath."
        },
        "ruleSets": {
          "type": "array",
          "description": "rule sets referenced by this endpoint.",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          }
        },
        "supportedProtocols": {
          "type": "array",
          "description": "List of supported protocols for this route.",
          "items": {
            "$ref": "#/definitions/FrontDoorEndpointProtocol"
          }
        },
        "patternsToMatch": {
          "type": "array",
          "description": "The route patterns of the rule.",
          "items": {
            "type": "string"
          }
        },
        "cacheConfiguration": {
          "$ref": "#/definitions/FrontDoorRouteCacheConfiguration",
          "description": "The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object."
        },
        "forwardingProtocol": {
          "$ref": "#/definitions/ForwardingProtocol",
          "description": "Protocol this rule will use when forwarding traffic to backends."
        },
        "linkToDefaultDomain": {
          "$ref": "#/definitions/LinkToDefaultDomain",
          "description": "whether this route will be linked to the default endpoint domain."
        },
        "httpsRedirect": {
          "$ref": "#/definitions/HttpsRedirect",
          "description": "Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed."
        },
        "enabledState": {
          "$ref": "#/definitions/EnabledState",
          "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'"
        },
        "provisioningState": {
          "$ref": "#/definitions/FrontDoorProvisioningState",
          "description": "Provisioning status",
          "readOnly": true
        },
        "deploymentStatus": {
          "$ref": "#/definitions/FrontDoorDeploymentStatus",
          "readOnly": true
        }
      }
    },
    "RouteUpdateParameters": {
      "type": "object",
      "description": "The domain JSON object required for domain creation or update.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RouteUpdatePropertiesParameters",
          "description": "The JSON object that contains the properties of the domain to create."
        }
      }
    },
    "RouteUpdatePropertiesParameters": {
      "type": "object",
      "description": "The JSON object that contains the properties of the domain to create.",
      "properties": {
        "endpointName": {
          "type": "string",
          "description": "The name of the endpoint which holds the route.",
          "readOnly": true
        },
        "customDomains": {
          "type": "array",
          "description": "Domains referenced by this endpoint.",
          "items": {
            "$ref": "#/definitions/FrontDoorActivatedResourceInfo"
          }
        },
        "originGroup": {
          "$ref": "#/definitions/ResourceReference",
          "description": "A reference to the origin group."
        },
        "originPath": {
          "type": "string",
          "description": "A directory path on the origin that AzureFrontDoor can use to retrieve content from, e.g. contoso.cloudapp.net/originpath."
        },
        "ruleSets": {
          "type": "array",
          "description": "rule sets referenced by this endpoint.",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          }
        },
        "supportedProtocols": {
          "type": "array",
          "description": "List of supported protocols for this route.",
          "items": {
            "$ref": "#/definitions/FrontDoorEndpointProtocol"
          }
        },
        "patternsToMatch": {
          "type": "array",
          "description": "The route patterns of the rule.",
          "items": {
            "type": "string"
          }
        },
        "cacheConfiguration": {
          "$ref": "#/definitions/FrontDoorRouteCacheConfiguration",
          "description": "The caching configuration for this route. To disable caching, do not provide a cacheConfiguration object."
        },
        "forwardingProtocol": {
          "$ref": "#/definitions/ForwardingProtocol",
          "description": "Protocol this rule will use when forwarding traffic to backends."
        },
        "linkToDefaultDomain": {
          "$ref": "#/definitions/LinkToDefaultDomain",
          "description": "whether this route will be linked to the default endpoint domain."
        },
        "httpsRedirect": {
          "$ref": "#/definitions/HttpsRedirect",
          "description": "Whether to automatically redirect HTTP traffic to HTTPS traffic. Note that this is a easy way to set up this rule and it will be the first rule that gets executed."
        },
        "enabledState": {
          "$ref": "#/definitions/EnabledState",
          "description": "Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'"
        }
      }
    },
    "RuleCacheBehavior": {
      "type": "string",
      "description": "Caching behavior for the requests",
      "enum": [
        "HonorOrigin",
        "OverrideAlways",
        "OverrideIfOriginMissing"
      ],
      "x-ms-enum": {
        "name": "RuleCacheBehavior",
        "modelAsString": true
      }
    },
    "RuleIsCompressionEnabled": {
      "type": "string",
      "description": "Indicates whether content compression is enabled. If compression is enabled, content will be served as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when requested content is smaller than 1 byte or larger than 1 MB.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "RuleIsCompressionEnabled",
        "modelAsString": true
      }
    },
    "RuleProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties of the Rules to create.",
      "properties": {
        "ruleSetName": {
          "type": "string",
          "description": "The name of the rule set containing the rule.",
          "readOnly": true
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied."
        },
        "conditions": {
          "type": "array",
          "description": "A list of conditions that must be matched for the actions to be executed",
          "items": {
            "$ref": "#/definitions/DeliveryRuleCondition"
          },
          "x-ms-identifiers": []
        },
        "actions": {
          "type": "array",
          "description": "A list of actions that are executed when all the conditions of a rule are satisfied.",
          "items": {
            "$ref": "#/definitions/DeliveryRuleAction"
          },
          "x-ms-identifiers": []
        },
        "matchProcessingBehavior": {
          "$ref": "#/definitions/MatchProcessingBehavior",
          "description": "If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue."
        },
        "provisioningState": {
          "$ref": "#/definitions/FrontDoorProvisioningState",
          "description": "Provisioning status",
          "readOnly": true
        },
        "deploymentStatus": {
          "$ref": "#/definitions/FrontDoorDeploymentStatus",
          "readOnly": true
        }
      }
    },
    "RuleQueryStringCachingBehavior": {
      "type": "string",
      "description": "Defines how Frontdoor caches requests that include query strings. You can ignore any query strings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query strings.",
      "enum": [
        "IgnoreQueryString",
        "UseQueryString",
        "IgnoreSpecifiedQueryStrings",
        "IncludeSpecifiedQueryStrings"
      ],
      "x-ms-enum": {
        "name": "RuleQueryStringCachingBehavior",
        "modelAsString": true
      }
    },
    "RuleSetProperties": {
      "type": "object",
      "description": "The JSON object that contains the properties of the Rule Set to create.",
      "properties": {
        "profileName": {
          "type": "string",
          "description": "The name of the profile which holds the rule set.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AFDStateProperties"
        }
      ]
    },
    "RuleUpdateParameters": {
      "type": "object",
      "description": "The domain JSON object required for domain creation or update.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RuleUpdatePropertiesParameters",
          "description": "The JSON object that contains the properties of the rule to update."
        }
      }
    },
    "RuleUpdatePropertiesParameters": {
      "type": "object",
      "description": "The JSON object that contains the properties of the rule to update.",
      "properties": {
        "ruleSetName": {
          "type": "string",
          "description": "The name of the rule set containing the rule.",
          "readOnly": true
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied."
        },
        "conditions": {
          "type": "array",
          "description": "A list of conditions that must be matched for the actions to be executed",
          "items": {
            "$ref": "#/definitions/DeliveryRuleCondition"
          },
          "x-ms-identifiers": []
        },
        "actions": {
          "type": "array",
          "description": "A list of actions that are executed when all the conditions of a rule are satisfied.",
          "items": {
            "$ref": "#/definitions/DeliveryRuleAction"
          },
          "x-ms-identifiers": []
        },
        "matchProcessingBehavior": {
          "$ref": "#/definitions/MatchProcessingBehavior",
          "description": "If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue."
        }
      }
    },
    "SecretDetails": {
      "type": "object",
      "description": "The JSON object that contains the properties of the Secret to create.",
      "properties": {
        "profileName": {
          "type": "string",
          "description": "The name of the profile which holds the secret.",
          "readOnly": true
        },
        "parameters": {
          "$ref": "#/definitions/SecretProperties",
          "description": "object which contains secret parameters",
          "x-ms-client-name": "properties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AFDStateProperties"
        }
      ]
    },
    "SecretProperties": {
      "type": "object",
      "description": "The json object containing secret parameters",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for SecretProperties."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "SecretType": {
      "type": "string",
      "description": "The type of the secret resource.",
      "enum": [
        "UrlSigningKey",
        "CustomerCertificate",
        "ManagedCertificate",
        "AzureFirstPartyManagedCertificate"
      ],
      "x-ms-enum": {
        "name": "SecretType",
        "modelAsString": true
      }
    },
    "SecureDeliveryProtocolType": {
      "type": "string",
      "description": "Defines the TLS extension protocol that is used for secure delivery.",
      "enum": [
        "ServerNameIndication",
        "IPBased"
      ],
      "x-ms-enum": {
        "name": "SecureDeliveryProtocolType",
        "modelAsString": true
      }
    },
    "SecurityPolicyDetails": {
      "type": "object",
      "description": "The json object that contains properties required to create a security policy",
      "properties": {
        "profileName": {
          "type": "string",
          "description": "The name of the profile which holds the security policy.",
          "readOnly": true
        },
        "parameters": {
          "$ref": "#/definitions/SecurityPolicyProperties",
          "description": "object which contains security policy parameters",
          "x-ms-client-name": "properties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AFDStateProperties"
        }
      ]
    },
    "SecurityPolicyProperties": {
      "type": "object",
      "description": "The json object containing security policy parameters",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for SecurityPolicyProperties."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "SecurityPolicyType": {
      "type": "string",
      "description": "The type of the Security policy to create.",
      "enum": [
        "WebApplicationFirewall"
      ],
      "x-ms-enum": {
        "name": "SecurityPolicyType",
        "modelAsString": true
      }
    },
    "SecurityPolicyUpdateParameters": {
      "type": "object",
      "description": "The JSON object containing security policy update parameters.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecurityPolicyUpdateProperties",
          "description": "The json object that contains properties required to update a security policy"
        }
      }
    },
    "SecurityPolicyUpdateProperties": {
      "type": "object",
      "description": "The json object that contains properties required to update a security policy",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/SecurityPolicyProperties",
          "description": "object which contains security policy parameters",
          "x-ms-client-name": "properties"
        }
      }
    },
    "SecurityPolicyWebApplicationFirewall": {
      "type": "object",
      "description": "The json object containing security policy waf parameters",
      "properties": {
        "wafPolicy": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Resource ID."
        },
        "associations": {
          "type": "array",
          "description": "Waf associations",
          "items": {
            "$ref": "#/definitions/SecurityPolicyWebApplicationFirewallAssociation"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SecurityPolicyProperties"
        }
      ],
      "x-ms-discriminator-value": "WebApplicationFirewall"
    },
    "SecurityPolicyWebApplicationFirewallAssociation": {
      "type": "object",
      "description": "settings for security policy patterns to match",
      "properties": {
        "domains": {
          "type": "array",
          "description": "List of domains.",
          "items": {
            "$ref": "#/definitions/FrontDoorActivatedResourceInfo"
          }
        },
        "patternsToMatch": {
          "type": "array",
          "description": "List of paths",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ServerPortMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for ServerPort match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/ServerPortMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/ServerPortOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "serverPortOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "ServerPortMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleServerPortConditionParameters"
      ],
      "x-ms-enum": {
        "name": "ServerPortMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "ServerPortCondition",
            "value": "DeliveryRuleServerPortConditionParameters"
          }
        ]
      }
    },
    "ServerPortOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "Equal",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "LessThan",
        "LessThanOrEqual",
        "GreaterThan",
        "GreaterThanOrEqual",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "ServerPortOperator",
        "modelAsString": true
      }
    },
    "ServiceSpecification": {
      "type": "object",
      "description": "One property of operation, include log specifications.",
      "properties": {
        "logSpecifications": {
          "type": "array",
          "description": "Log specifications of operation.",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "x-ms-identifiers": []
        },
        "metricSpecifications": {
          "type": "array",
          "description": "Metric specifications of operation.",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SharedPrivateLinkResourceProperties": {
      "type": "object",
      "description": "Describes the properties of an existing Shared Private Link Resource to use when connecting to a private origin.",
      "properties": {
        "privateLink": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The resource id of the resource the shared private link resource is for."
        },
        "privateLinkLocation": {
          "type": "string",
          "description": "The location of the shared private link resource"
        },
        "groupId": {
          "type": "string",
          "description": "The group id from the provider of resource the shared private link resource is for."
        },
        "requestMessage": {
          "type": "string",
          "description": "The request message for requesting approval of the shared private link resource."
        },
        "status": {
          "$ref": "#/definitions/SharedPrivateLinkResourceStatus",
          "description": "Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout."
        }
      }
    },
    "SharedPrivateLinkResourceStatus": {
      "type": "string",
      "description": "Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected",
        "Timeout"
      ],
      "x-ms-enum": {
        "name": "SharedPrivateLinkResourceStatus",
        "modelAsString": false
      }
    },
    "Sku": {
      "type": "object",
      "description": "Standard_Verizon = The SKU name for a Standard Verizon CDN profile.\nPremium_Verizon = The SKU name for a Premium Verizon CDN profile.\nCustom_Verizon = The SKU name for a Custom Verizon CDN profile.\nStandard_Akamai = The SKU name for an Akamai CDN profile.\nStandard_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using GB based billing model.\nStandard_Microsoft = The SKU name for a Standard Microsoft CDN profile.\nStandard_AzureFrontDoor =  The SKU name for an Azure Front Door Standard profile.\nPremium_AzureFrontDoor = The SKU name for an Azure Front Door Premium profile.\nStandard_955BandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using 95-5 peak bandwidth billing model.\nStandard_AvgBandWidth_ChinaCdn = The SKU name for a China CDN profile for VOD, Web and download scenarios using monthly average peak bandwidth billing model.\nStandardPlus_ChinaCdn = The SKU name for a China CDN profile for live-streaming using GB based billing model.\nStandardPlus_955BandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using 95-5 peak bandwidth billing model.\nStandardPlus_AvgBandWidth_ChinaCdn = The SKU name for a China CDN live-streaming profile using monthly average peak bandwidth billing model.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "Name of the pricing tier."
        }
      }
    },
    "SkuName": {
      "type": "string",
      "description": "Name of the pricing tier.",
      "enum": [
        "Standard_Verizon",
        "Premium_Verizon",
        "Custom_Verizon",
        "Standard_Akamai",
        "Standard_ChinaCdn",
        "Standard_Microsoft",
        "Standard_AzureFrontDoor",
        "Premium_AzureFrontDoor",
        "Standard_955BandWidth_ChinaCdn",
        "Standard_AvgBandWidth_ChinaCdn",
        "StandardPlus_ChinaCdn",
        "StandardPlus_955BandWidth_ChinaCdn",
        "StandardPlus_AvgBandWidth_ChinaCdn"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true
      }
    },
    "SocketAddressMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for SocketAddress match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/SocketAddressMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/SocketAddressOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "socketAddressOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "SocketAddressMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleSocketAddrConditionParameters"
      ],
      "x-ms-enum": {
        "name": "SocketAddressMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "SocketAddressCondition",
            "value": "DeliveryRuleSocketAddrConditionParameters"
          }
        ]
      }
    },
    "SocketAddressOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "IPMatch"
      ],
      "x-ms-enum": {
        "name": "SocketAddressOperator",
        "modelAsString": true
      }
    },
    "SslProtocol": {
      "type": "string",
      "description": "The protocol of an established TLS connection.",
      "enum": [
        "TLSv1",
        "TLSv1.1",
        "TLSv1.2"
      ],
      "x-ms-enum": {
        "name": "SslProtocol",
        "modelAsString": true
      }
    },
    "SslProtocolMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for SslProtocol match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/SslProtocolMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/SslProtocolOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "sslProtocolOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "$ref": "#/definitions/SslProtocol"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "SslProtocolMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleSslProtocolConditionParameters"
      ],
      "x-ms-enum": {
        "name": "SslProtocolMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "SslProtocolCondition",
            "value": "DeliveryRuleSslProtocolConditionParameters"
          }
        ]
      }
    },
    "SslProtocolOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Equal"
      ],
      "x-ms-enum": {
        "name": "SslProtocolOperator",
        "modelAsString": true
      }
    },
    "SsoUri": {
      "type": "object",
      "description": "The URI required to login to the supplemental portal from the Azure portal.",
      "properties": {
        "ssoUriValue": {
          "type": "string",
          "description": "The URI used to login to the supplemental portal.",
          "readOnly": true,
          "x-ms-client-name": "availableSsoUri"
        }
      }
    },
    "SupportedOptimizationTypesListResult": {
      "type": "object",
      "description": "The result of the GetSupportedOptimizationTypes API",
      "properties": {
        "supportedOptimizationTypes": {
          "type": "array",
          "description": "Supported optimization types for a profile.",
          "items": {
            "$ref": "#/definitions/OptimizationType"
          },
          "readOnly": true
        }
      }
    },
    "TransformType": {
      "type": "string",
      "description": "Describes what transforms were applied before matching.",
      "enum": [
        "Lowercase",
        "Uppercase",
        "Trim",
        "UrlDecode",
        "UrlEncode",
        "RemoveNulls"
      ],
      "x-ms-enum": {
        "name": "TransformType",
        "modelAsString": true
      }
    },
    "UriSigningKeyProperties": {
      "type": "object",
      "description": "Url signing key parameters",
      "properties": {
        "keyId": {
          "type": "string",
          "description": "Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash."
        },
        "secretSource": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​"
        },
        "secretVersion": {
          "type": "string",
          "description": "Version of the secret to be used"
        }
      },
      "required": [
        "keyId",
        "secretSource"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SecretProperties"
        }
      ],
      "x-ms-discriminator-value": "UrlSigningKey"
    },
    "UrlFileExtensionMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for UrlFileExtension match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/UrlFileExtensionMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/UrlFileExtensionOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "urlFileExtensionOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "UrlFileExtensionMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleUrlFileExtensionMatchConditionParameters"
      ],
      "x-ms-enum": {
        "name": "UrlFileExtensionMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "UrlFileExtensionMatchCondition",
            "value": "DeliveryRuleUrlFileExtensionMatchConditionParameters"
          }
        ]
      }
    },
    "UrlFileExtensionOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "Equal",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "LessThan",
        "LessThanOrEqual",
        "GreaterThan",
        "GreaterThanOrEqual",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "UrlFileExtensionOperator",
        "modelAsString": true
      }
    },
    "UrlFileNameMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for UrlFilename match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/UrlFileNameMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/UrlFileNameOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "urlFileNameOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "UrlFileNameMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleUrlFilenameConditionParameters"
      ],
      "x-ms-enum": {
        "name": "UrlFileNameMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "UrlFilenameCondition",
            "value": "DeliveryRuleUrlFilenameConditionParameters"
          }
        ]
      }
    },
    "UrlFileNameOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "Equal",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "LessThan",
        "LessThanOrEqual",
        "GreaterThan",
        "GreaterThanOrEqual",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "UrlFileNameOperator",
        "modelAsString": true
      }
    },
    "UrlPathMatchCondition": {
      "type": "object",
      "description": "Defines the parameters for UrlPath match conditions",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/UrlPathMatchConditionType",
          "x-ms-client-name": "type"
        },
        "operator": {
          "$ref": "#/definitions/UrlPathOperator",
          "description": "Describes operator to be matched",
          "x-ms-client-name": "urlPathOperator"
        },
        "negateCondition": {
          "type": "boolean",
          "description": "Describes if this is negate condition or not"
        },
        "matchValues": {
          "type": "array",
          "description": "The match value for the condition of the delivery rule",
          "items": {
            "type": "string"
          }
        },
        "transforms": {
          "type": "array",
          "description": "List of transforms",
          "items": {
            "$ref": "#/definitions/PreTransformCategory"
          }
        }
      },
      "required": [
        "typeName",
        "operator"
      ]
    },
    "UrlPathMatchConditionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleUrlPathMatchConditionParameters"
      ],
      "x-ms-enum": {
        "name": "UrlPathMatchConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "UrlPathMatchCondition",
            "value": "DeliveryRuleUrlPathMatchConditionParameters"
          }
        ]
      }
    },
    "UrlPathOperator": {
      "type": "string",
      "description": "Describes operator to be matched",
      "enum": [
        "Any",
        "Equal",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "LessThan",
        "LessThanOrEqual",
        "GreaterThan",
        "GreaterThanOrEqual",
        "Wildcard",
        "RegEx"
      ],
      "x-ms-enum": {
        "name": "UrlPathOperator",
        "modelAsString": true
      }
    },
    "UrlRedirectAction": {
      "type": "object",
      "description": "Defines the url redirect action for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/UrlRedirectActionProperties",
          "description": "Defines the parameters for the action.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleAction"
        }
      ],
      "x-ms-discriminator-value": "UrlRedirect"
    },
    "UrlRedirectActionProperties": {
      "type": "object",
      "description": "Defines the parameters for the url redirect action.",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/UrlRedirectActionType",
          "x-ms-client-name": "type"
        },
        "redirectType": {
          "$ref": "#/definitions/RedirectType",
          "description": "The redirect type the rule will use when redirecting traffic."
        },
        "destinationProtocol": {
          "$ref": "#/definitions/DestinationProtocol",
          "description": "Protocol to use for the redirect. The default value is MatchRequest"
        },
        "customPath": {
          "type": "string",
          "description": "The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path."
        },
        "customHostname": {
          "type": "string",
          "description": "Host to redirect. Leave empty to use the incoming host as the destination host."
        },
        "customQueryString": {
          "type": "string",
          "description": "The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them."
        },
        "customFragment": {
          "type": "string",
          "description": "Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #."
        }
      },
      "required": [
        "typeName",
        "redirectType"
      ]
    },
    "UrlRedirectActionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleUrlRedirectActionParameters"
      ],
      "x-ms-enum": {
        "name": "UrlRedirectActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "UrlRedirectAction",
            "value": "DeliveryRuleUrlRedirectActionParameters"
          }
        ]
      }
    },
    "UrlRewriteAction": {
      "type": "object",
      "description": "Defines the url rewrite action for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/UrlRewriteActionProperties",
          "description": "Defines the parameters for the action.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleAction"
        }
      ],
      "x-ms-discriminator-value": "UrlRewrite"
    },
    "UrlRewriteActionProperties": {
      "type": "object",
      "description": "Defines the parameters for the url rewrite action.",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/UrlRewriteActionType",
          "x-ms-client-name": "type"
        },
        "sourcePattern": {
          "type": "string",
          "description": "define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched."
        },
        "destination": {
          "type": "string",
          "description": "Define the relative URL to which the above requests will be rewritten by."
        },
        "preserveUnmatchedPath": {
          "type": "boolean",
          "description": "Whether to preserve unmatched path. Default value is true."
        }
      },
      "required": [
        "typeName",
        "sourcePattern",
        "destination"
      ]
    },
    "UrlRewriteActionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleUrlRewriteActionParameters"
      ],
      "x-ms-enum": {
        "name": "UrlRewriteActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "UrlRewriteAction",
            "value": "DeliveryRuleUrlRewriteActionParameters"
          }
        ]
      }
    },
    "UrlSigningAction": {
      "type": "object",
      "description": "Defines the url signing action for the delivery rule.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/UrlSigningActionProperties",
          "description": "Defines the parameters for the action.",
          "x-ms-client-name": "properties"
        }
      },
      "required": [
        "parameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DeliveryRuleAction"
        }
      ],
      "x-ms-discriminator-value": "UrlSigning"
    },
    "UrlSigningActionProperties": {
      "type": "object",
      "description": "Defines the parameters for the Url Signing action.",
      "properties": {
        "typeName": {
          "$ref": "#/definitions/UrlSigningActionType",
          "x-ms-client-name": "type"
        },
        "algorithm": {
          "$ref": "#/definitions/UrlSigningAlgorithm",
          "description": "Algorithm to use for URL signing"
        },
        "parameterNameOverride": {
          "type": "array",
          "description": "Defines which query string parameters in the url to be considered for expires, key id etc.",
          "items": {
            "$ref": "#/definitions/UrlSigningParamIdentifier"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "typeName"
      ]
    },
    "UrlSigningActionType": {
      "type": "string",
      "enum": [
        "DeliveryRuleUrlSigningActionParameters"
      ],
      "x-ms-enum": {
        "name": "UrlSigningActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "UrlSigningAction",
            "value": "DeliveryRuleUrlSigningActionParameters"
          }
        ]
      }
    },
    "UrlSigningAlgorithm": {
      "type": "string",
      "description": "Algorithm to use for URL signing",
      "enum": [
        "SHA256"
      ],
      "x-ms-enum": {
        "name": "UrlSigningAlgorithm",
        "modelAsString": true
      }
    },
    "UrlSigningKey": {
      "type": "object",
      "description": "Url signing key",
      "properties": {
        "keyId": {
          "type": "string",
          "description": "Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash."
        },
        "keySourceParameters": {
          "$ref": "#/definitions/KeyVaultSigningKey",
          "description": "Defines the parameters for using customer key vault for Url Signing Key."
        }
      },
      "required": [
        "keyId",
        "keySourceParameters"
      ]
    },
    "UrlSigningParamIdentifier": {
      "type": "object",
      "description": "Defines how to identify a parameter for a specific purpose e.g. expires",
      "properties": {
        "paramIndicator": {
          "$ref": "#/definitions/ParamIndicator",
          "description": "Indicates the purpose of the parameter"
        },
        "paramName": {
          "type": "string",
          "description": "Parameter name"
        }
      },
      "required": [
        "paramIndicator",
        "paramName"
      ]
    },
    "UserManagedHttpsContent": {
      "type": "object",
      "description": "Defines the certificate source parameters using user's keyvault certificate for enabling SSL.",
      "properties": {
        "certificateSourceParameters": {
          "$ref": "#/definitions/KeyVaultCertificateSource",
          "description": "Defines the certificate source parameters using user's keyvault certificate for enabling SSL."
        }
      },
      "required": [
        "certificateSourceParameters"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CustomDomainHttpsParameters"
        }
      ],
      "x-ms-discriminator-value": "AzureKeyVault"
    },
    "ValidateCustomDomainContent": {
      "type": "object",
      "description": "Input of the custom domain to be validated for DNS mapping.",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "The host name of the custom domain. Must be a domain name."
        }
      },
      "required": [
        "hostName"
      ]
    },
    "ValidateCustomDomainResult": {
      "type": "object",
      "description": "Output of custom domain validation.",
      "properties": {
        "customDomainValidated": {
          "type": "boolean",
          "description": "Indicates whether the custom domain is valid or not.",
          "readOnly": true,
          "x-ms-client-name": "isCustomDomainValid"
        },
        "reason": {
          "type": "string",
          "description": "The reason why the custom domain is not valid.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error message describing why the custom domain is not valid.",
          "readOnly": true
        }
      }
    },
    "ValidateProbeInput": {
      "type": "object",
      "description": "Input of the validate probe API.",
      "properties": {
        "probeURL": {
          "type": "string",
          "description": "The probe URL to validate."
        }
      },
      "required": [
        "probeURL"
      ]
    },
    "ValidateProbeResult": {
      "type": "object",
      "description": "Output of the validate probe API.",
      "properties": {
        "isValid": {
          "type": "boolean",
          "description": "Indicates whether the probe URL is accepted or not.",
          "readOnly": true
        },
        "errorCode": {
          "type": "string",
          "description": "Specifies the error code when the probe url is not accepted.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The detailed error message describing why the probe URL is not accepted.",
          "readOnly": true
        }
      }
    },
    "ValidateSecretInput": {
      "type": "object",
      "description": "Input of the secret to be validated.",
      "properties": {
        "secretType": {
          "$ref": "#/definitions/SecretType",
          "description": "The secret type."
        },
        "secretSource": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{​​​​​​​​​subscriptionId}​​​​​​​​​/resourceGroups/{​​​​​​​​​resourceGroupName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/providers/Microsoft.KeyVault/vaults/{vaultName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​/secrets/{secretName}​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​"
        },
        "secretVersion": {
          "type": "string",
          "description": "Secret version, if customer is using a specific version."
        }
      },
      "required": [
        "secretType",
        "secretSource"
      ]
    },
    "ValidateSecretResult": {
      "type": "object",
      "description": "Output of the validated secret.",
      "properties": {
        "status": {
          "$ref": "#/definitions/ValidationStatus",
          "description": "The validation status."
        },
        "message": {
          "type": "string",
          "description": "Detailed error message"
        }
      }
    },
    "ValidationStatus": {
      "type": "string",
      "description": "The validation status.",
      "enum": [
        "Valid",
        "Invalid",
        "AccessDenied",
        "CertificateExpired"
      ],
      "x-ms-enum": {
        "name": "ValidationStatus",
        "modelAsString": true
      }
    },
    "ValidationToken": {
      "type": "object",
      "description": "The validation token.",
      "properties": {
        "token": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2021-06-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2021_06_01",
            "value": "2021-06-01",
            "description": "The 2021-06-01 API version."
          }
        ]
      }
    },
    "WafAction": {
      "type": "string",
      "enum": [
        "allow",
        "block",
        "log",
        "redirect"
      ],
      "x-ms-enum": {
        "name": "WafAction",
        "modelAsString": true
      }
    },
    "WafGranularity": {
      "type": "string",
      "enum": [
        "PT5M",
        "PT1H",
        "P1D"
      ],
      "x-ms-enum": {
        "name": "WafGranularity",
        "modelAsString": true
      }
    },
    "WafMatchVariable": {
      "type": "string",
      "description": "Match variable to compare against.",
      "enum": [
        "RemoteAddr",
        "SocketAddr",
        "RequestMethod",
        "RequestHeader",
        "RequestUri",
        "QueryString",
        "RequestBody",
        "Cookies",
        "PostArgs"
      ],
      "x-ms-enum": {
        "name": "WafMatchVariable",
        "modelAsString": true
      }
    },
    "WafMetric": {
      "type": "string",
      "enum": [
        "clientRequestCount"
      ],
      "x-ms-enum": {
        "name": "WafMetric",
        "modelAsString": true
      }
    },
    "WafMetricsResponse": {
      "type": "object",
      "description": "Waf Metrics Response",
      "properties": {
        "dateTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "granularity": {
          "$ref": "#/definitions/WafMetricsResponseGranularity"
        },
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WafMetricsResponseSeriesItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "WafMetricsResponseGranularity": {
      "type": "string",
      "enum": [
        "PT5M",
        "PT1H",
        "P1D"
      ],
      "x-ms-enum": {
        "name": "WafMetricsResponseGranularity",
        "modelAsString": true
      }
    },
    "WafMetricsResponseSeriesItem": {
      "type": "object",
      "properties": {
        "metric": {
          "type": "string"
        },
        "unit": {
          "$ref": "#/definitions/WafMetricsResponseSeriesItemUnit"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WafMetricsResponseSeriesPropertiesItemsItem"
          },
          "x-ms-identifiers": []
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Components18OrqelSchemasWafmetricsresponsePropertiesSeriesItemsPropertiesDataItems"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "WafMetricsResponseSeriesItemUnit": {
      "type": "string",
      "enum": [
        "count"
      ],
      "x-ms-enum": {
        "name": "WafMetricsResponseSeriesItemUnit",
        "modelAsString": true
      }
    },
    "WafMetricsResponseSeriesPropertiesItemsItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "WafPolicyManagedRuleSet": {
      "type": "object",
      "description": "Defines a managed rule set.",
      "properties": {
        "ruleSetType": {
          "type": "string",
          "description": "Defines the rule set type to use."
        },
        "ruleSetVersion": {
          "type": "string",
          "description": "Defines the version of the rule set to use."
        },
        "anomalyScore": {
          "type": "integer",
          "format": "int32",
          "description": "Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.",
          "maximum": 20
        },
        "ruleGroupOverrides": {
          "type": "array",
          "description": "Defines the rule overrides to apply to the rule set.",
          "items": {
            "$ref": "#/definitions/ManagedRuleGroupOverrideSetting"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "ruleSetType",
        "ruleSetVersion"
      ]
    },
    "WafPolicySettings": {
      "type": "object",
      "description": "Defines contents of a web application firewall global configuration",
      "properties": {
        "enabledState": {
          "$ref": "#/definitions/PolicyEnabledState",
          "description": "describes if the policy is in enabled state or disabled state"
        },
        "mode": {
          "$ref": "#/definitions/PolicyMode",
          "description": "Describes if it is in detection mode or prevention mode at policy level."
        },
        "defaultRedirectUrl": {
          "type": "string",
          "description": "If action type is redirect, this field represents the default redirect URL for the client."
        },
        "defaultCustomBlockResponseStatusCode": {
          "$ref": "#/definitions/PolicySettingsDefaultCustomBlockResponseStatusCode",
          "description": "If the action type is block, this field defines the default customer overridable http response status code."
        },
        "defaultCustomBlockResponseBody": {
          "type": "string",
          "description": "If the action type is block, customer can override the response body. The body must be specified in base64 encoding.",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
        }
      }
    },
    "WafRankingGroupBy": {
      "type": "string",
      "enum": [
        "httpStatusCode",
        "customDomain"
      ],
      "x-ms-enum": {
        "name": "WafRankingGroupBy",
        "modelAsString": true
      }
    },
    "WafRankingType": {
      "type": "string",
      "enum": [
        "action",
        "ruleGroup",
        "ruleId",
        "userAgent",
        "clientIp",
        "url",
        "countryOrRegion",
        "ruleType"
      ],
      "x-ms-enum": {
        "name": "WafRankingType",
        "modelAsString": true
      }
    },
    "WafRankingsResponse": {
      "type": "object",
      "description": "Waf Rankings Response",
      "properties": {
        "dateTimeBegin": {
          "type": "string",
          "format": "date-time"
        },
        "dateTimeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WafRankingsResponseDataItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "WafRankingsResponseDataItem": {
      "type": "object",
      "properties": {
        "groupValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentsKpo1PjSchemasWafrankingsresponsePropertiesDataItemsPropertiesMetricsItems"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "WafRuleType": {
      "type": "string",
      "enum": [
        "managed",
        "custom",
        "bot"
      ],
      "x-ms-enum": {
        "name": "WafRuleType",
        "modelAsString": true
      }
    },
    "WebApplicationFirewallPolicyProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the WebApplicationFirewallPolicy.",
      "enum": [
        "Creating",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "WebApplicationFirewallPolicyProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
