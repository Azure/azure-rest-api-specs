{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.Cdn/EdgeAction",
    "version": "2025-09-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "EdgeActionOperations"
    },
    {
      "name": "EdgeActions"
    },
    {
      "name": "EdgeActionVersions"
    },
    {
      "name": "EdgeActionExecutionFilters"
    }
  ],
  "paths": {
    "/providers/Microsoft.Cdn/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/edgeActionOperations": {
      "get": {
        "operationId": "EdgeActionOperations_ListBySubscription",
        "tags": [
          "EdgeActionOperations"
        ],
        "description": "List EdgeActionOperation resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionOperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/edgeActions": {
      "get": {
        "operationId": "EdgeActions_ListBySubscription",
        "tags": [
          "EdgeActions"
        ],
        "description": "List EdgeAction resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List EdgeActions by Subscription": {
            "$ref": "./examples/EdgeActions_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/edgeActions/{edgeActionName}/executionFilters": {
      "get": {
        "operationId": "EdgeActionExecutionFilters_ListBySubscription",
        "tags": [
          "EdgeActionExecutionFilters"
        ],
        "description": "List EdgeActionExecutionFilter resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionExecutionFilterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/edgeActions/{edgeActionName}/versions": {
      "get": {
        "operationId": "EdgeActionVersions_ListBySubscription",
        "tags": [
          "EdgeActionVersions"
        ],
        "description": "List EdgeActionVersion resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActionOperations": {
      "get": {
        "operationId": "EdgeActionOperations_ListByResourceGroup",
        "tags": [
          "EdgeActionOperations"
        ],
        "description": "List EdgeActionOperation resources by resource group",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionOperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActionOperations/{operationId}": {
      "get": {
        "operationId": "EdgeActionOperations_Get",
        "tags": [
          "EdgeActionOperations"
        ],
        "description": "Get a EdgeActionOperation",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The operation id",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionOperation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActions": {
      "get": {
        "operationId": "EdgeActions_ListByResourceGroup",
        "tags": [
          "EdgeActions"
        ],
        "description": "List EdgeAction resources by resource group",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List EdgeActions by ResourceGroup": {
            "$ref": "./examples/EdgeActions_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActions/{edgeActionName}": {
      "get": {
        "operationId": "EdgeActions_Get",
        "tags": [
          "EdgeActions"
        ],
        "description": "Get a EdgeAction",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get EdgeAction": {
            "$ref": "./examples/EdgeActions_Get.json"
          }
        }
      },
      "put": {
        "operationId": "EdgeActions_Create",
        "tags": [
          "EdgeActions"
        ],
        "description": "Create a EdgeAction",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EdgeAction' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EdgeAction"
            }
          },
          "201": {
            "description": "Resource 'EdgeAction' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EdgeAction"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create EdgeAction": {
            "$ref": "./examples/EdgeActions_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "EdgeActions_Update",
        "tags": [
          "EdgeActions"
        ],
        "description": "Update a EdgeAction",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeActionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeAction"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update EdgeAction": {
            "$ref": "./examples/EdgeActions_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "EdgeActions_Delete",
        "tags": [
          "EdgeActions"
        ],
        "description": "Delete a EdgeAction",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete EdgeAction": {
            "$ref": "./examples/EdgeActions_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActions/{edgeActionName}/addAttachment": {
      "post": {
        "operationId": "EdgeActions_AddAttachment",
        "tags": [
          "EdgeActions"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeActionAttachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionAttachmentResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Add Attachment to EdgeAction": {
            "$ref": "./examples/EdgeActions_AddAttachment.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActions/{edgeActionName}/deleteAttachment": {
      "post": {
        "operationId": "EdgeActions_DeleteAttachment",
        "tags": [
          "EdgeActions"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeActionAttachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Attachment from EdgeAction": {
            "$ref": "./examples/EdgeActions_DeleteAttachment.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActions/{edgeActionName}/executionFilters": {
      "get": {
        "operationId": "EdgeActionExecutionFilters_ListByEdgeAction",
        "tags": [
          "EdgeActionExecutionFilters"
        ],
        "description": "List EdgeActionExecutionFilter resources by EdgeAction",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionExecutionFilterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List EdgeActionExecutionFilters by EdgeAction": {
            "$ref": "./examples/EdgeActionsExecutionFilters_ListByEdgeAction.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActions/{edgeActionName}/executionFilters/{executionFilter}": {
      "get": {
        "operationId": "EdgeActionExecutionFilters_Get",
        "tags": [
          "EdgeActionExecutionFilters"
        ],
        "description": "Get a EdgeActionExecutionFilter",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "executionFilter",
            "in": "path",
            "description": "The name of the execution filter",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionExecutionFilter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get EdgeActionExecutionFilter": {
            "$ref": "./examples/EdgeActionsExecutionFilters_Get.json"
          }
        }
      },
      "put": {
        "operationId": "EdgeActionExecutionFilters_Create",
        "tags": [
          "EdgeActionExecutionFilters"
        ],
        "description": "Create a EdgeActionExecutionFilter",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "executionFilter",
            "in": "path",
            "description": "The name of the execution filter",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeActionExecutionFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EdgeActionExecutionFilter' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EdgeActionExecutionFilter"
            }
          },
          "201": {
            "description": "Resource 'EdgeActionExecutionFilter' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EdgeActionExecutionFilter"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create EdgeActionExecutionFilter": {
            "$ref": "./examples/EdgeActionsExecutionFilters_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "EdgeActionExecutionFilters_Update",
        "tags": [
          "EdgeActionExecutionFilters"
        ],
        "description": "Update a EdgeActionExecutionFilter",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "executionFilter",
            "in": "path",
            "description": "The name of the execution filter",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeActionExecutionFilterUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionExecutionFilter"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update EdgeActionExecutionFilter": {
            "$ref": "./examples/EdgeActionsExecutionFilters_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "EdgeActionExecutionFilters_Delete",
        "tags": [
          "EdgeActionExecutionFilters"
        ],
        "description": "Delete a EdgeActionExecutionFilter",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "executionFilter",
            "in": "path",
            "description": "The name of the execution filter",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete EdgeActionExecutionFilter": {
            "$ref": "./examples/EdgeActionsExecutionFilters_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActions/{edgeActionName}/versions": {
      "get": {
        "operationId": "EdgeActionVersions_ListByEdgeAction",
        "tags": [
          "EdgeActionVersions"
        ],
        "description": "List EdgeActionVersion resources by EdgeAction",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List EdgeActionVersions by EdgeAction": {
            "$ref": "./examples/EdgeActionsVersions_ListByEdgeAction.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActions/{edgeActionName}/versions/{version}": {
      "get": {
        "operationId": "EdgeActionVersions_Get",
        "tags": [
          "EdgeActionVersions"
        ],
        "description": "Get a EdgeActionVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The name of the Edge Action version",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get EdgeActionVersion": {
            "$ref": "./examples/EdgeActionsVersions_Get.json"
          }
        }
      },
      "put": {
        "operationId": "EdgeActionVersions_Create",
        "tags": [
          "EdgeActionVersions"
        ],
        "description": "Create a EdgeActionVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The name of the Edge Action version",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeActionVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EdgeActionVersion' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EdgeActionVersion"
            }
          },
          "201": {
            "description": "Resource 'EdgeActionVersion' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EdgeActionVersion"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create EdgeActionVersion": {
            "$ref": "./examples/EdgeActionsVersions_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "EdgeActionVersions_Update",
        "tags": [
          "EdgeActionVersions"
        ],
        "description": "Update a EdgeActionVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The name of the Edge Action version",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EdgeActionVersionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionVersion"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update EdgeActionVersion": {
            "$ref": "./examples/EdgeActionsVersions_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "EdgeActionVersions_Delete",
        "tags": [
          "EdgeActionVersions"
        ],
        "description": "Delete a EdgeActionVersion",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The name of the Edge Action version",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete EdgeActionVersion": {
            "$ref": "./examples/EdgeActionsVersions_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActions/{edgeActionName}/versions/{version}/deployVersionCode": {
      "post": {
        "operationId": "EdgeActionVersions_DeployVersionCode",
        "tags": [
          "EdgeActionVersions"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The name of the Edge Action version",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VersionCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EdgeActionVersionProperties"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deploy Version Code": {
            "$ref": "./examples/EdgeActionVersions_DeployVersionCode.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActions/{edgeActionName}/versions/{version}/getVersionCode": {
      "post": {
        "operationId": "EdgeActionVersions_GetVersionCode",
        "tags": [
          "EdgeActionVersions"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The name of the Edge Action version",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmptyBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VersionCode"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Version Code": {
            "$ref": "./examples/EdgeActionVersions_GetVersionCode.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/edgeActions/{edgeActionName}/versions/{version}/swapDefault": {
      "post": {
        "operationId": "EdgeActionVersions_SwapDefault",
        "tags": [
          "EdgeActionVersions"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "name": "edgeActionName",
            "in": "path",
            "description": "The name of the Edge Action",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The name of the Edge Action version",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "pattern": "[a-zA-Z0-9]+"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmptyBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AttachedResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Cdn/Profiles/afdEndpoints/routes"
          }
        ]
      }
    },
    "Azure.ResourceManager.ErrorResponse": {
      "type": "object",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "Azure.ResourceManager.Foundations.ActionType": {
      "type": "string",
      "description": "Extensible enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
      "enum": [
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Internal",
            "value": "Internal",
            "description": "Actions are for internal-only APIs."
          }
        ]
      }
    },
    "Azure.ResourceManager.Foundations.AzureEntityResource": {
      "type": "object",
      "description": "The resource model definition for an Azure Resource Manager resource with an etag.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Resource Etag.",
          "readOnly": true
        }
      },
      "required": [
        "etag"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.Resource"
        }
      ]
    },
    "Azure.ResourceManager.Foundations.ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "type": "object",
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "Azure.ResourceManager.Foundations.ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/Azure.ResourceManager.Foundations.ErrorDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/Azure.ResourceManager.Foundations.ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "message",
            "target"
          ]
        }
      }
    },
    "Azure.ResourceManager.Foundations.ExtensionResource": {
      "type": "object",
      "description": "The base extension resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.Resource"
        }
      ]
    },
    "Azure.ResourceManager.Foundations.Operation": {
      "type": "object",
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for Azure Resource Manager/control-plane operations.",
          "readOnly": true
        },
        "display": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.OperationDisplay",
          "description": "Localized display information for this particular operation."
        },
        "origin": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.Origin",
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "readOnly": true
        },
        "actionType": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ActionType",
          "description": "Extensible enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs."
        }
      }
    },
    "Azure.ResourceManager.Foundations.OperationDisplay": {
      "type": "object",
      "description": "Localized display information for and operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\"."
        },
        "resource": {
          "type": "string",
          "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\"."
        },
        "operation": {
          "type": "string",
          "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\"."
        },
        "description": {
          "type": "string",
          "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views."
        }
      }
    },
    "Azure.ResourceManager.Foundations.Origin": {
      "type": "string",
      "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
      "enum": [
        "user",
        "system",
        "user,system"
      ],
      "x-ms-enum": {
        "name": "Origin",
        "modelAsString": true,
        "values": [
          {
            "name": "user",
            "value": "user",
            "description": "Indicates the operation is initiated by a user."
          },
          {
            "name": "system",
            "value": "system",
            "description": "Indicates the operation is initiated by a system."
          },
          {
            "name": "user,system",
            "value": "user,system",
            "description": "Indicates the operation is initiated by a user or system."
          }
        ]
      }
    },
    "Azure.ResourceManager.Foundations.ProxyResource": {
      "type": "object",
      "description": "The base proxy resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.Resource"
        }
      ]
    },
    "Azure.ResourceManager.Foundations.Resource": {
      "type": "object",
      "description": "Common properties for all Azure Resource Manager resources.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.SystemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      }
    },
    "Azure.ResourceManager.Foundations.SystemData": {
      "type": "object",
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource.",
          "readOnly": true
        },
        "createdByType": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.createdByType",
          "description": "The type of identity that created the resource.",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date",
          "description": "The type of identity that created the resource.",
          "readOnly": true
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource.",
          "readOnly": true
        },
        "lastModifiedByType": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.createdByType",
          "description": "The type of identity that last modified the resource.",
          "readOnly": true
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date",
          "description": "The timestamp of resource last modification (UTC)",
          "readOnly": true
        }
      }
    },
    "Azure.ResourceManager.Foundations.TrackedResource": {
      "type": "object",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.Resource"
        }
      ]
    },
    "Azure.ResourceManager.Foundations.createdByType": {
      "type": "string",
      "description": "The kind of entity that created the resource.",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "createdByType",
        "modelAsString": true,
        "values": [
          {
            "name": "User",
            "value": "User",
            "description": "The entity was created by a user."
          },
          {
            "name": "Application",
            "value": "Application",
            "description": "The entity was created by an application."
          },
          {
            "name": "ManagedIdentity",
            "value": "ManagedIdentity",
            "description": "The entity was created by a managed identity."
          },
          {
            "name": "Key",
            "value": "Key",
            "description": "The entity was created by a key."
          }
        ]
      }
    },
    "Azure.ResourceManager.PrivateEndpoint": {
      "type": "object",
      "description": "The private endpoint resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource identifier for private endpoint",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateEndpoints"
              }
            ]
          }
        }
      }
    },
    "Azure.ResourceManager.PrivateEndpointConnection": {
      "type": "object",
      "description": "The private endpoint connection resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Azure.ResourceManager.PrivateEndpointConnectionProperties",
          "description": "The private endpoint connection properties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ProxyResource"
        }
      ]
    },
    "Azure.ResourceManager.PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of he private endpoint connection resource",
      "properties": {
        "groupIds": {
          "type": "array",
          "description": "The group identifiers for the private endpoint resource",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "privateEndpoint": {
          "$ref": "#/definitions/Azure.ResourceManager.PrivateEndpoint",
          "description": "The private endpoint resource"
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/Azure.ResourceManager.PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "Azure.ResourceManager.PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the connection",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Creating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Connection is being created"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Connection is being deleted"
          }
        ]
      }
    },
    "Azure.ResourceManager.PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "description": "The private endpoint connection status",
      "enum": [
        "Pending",
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "Connectionaiting for approval or rejection"
          },
          {
            "name": "Approved",
            "value": "Approved",
            "description": "Connection approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected",
            "description": "Connection Rejected"
          }
        ]
      }
    },
    "Azure.ResourceManager.PrivateLinkResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Azure.ResourceManager.PrivateLinkResourceProperties",
          "description": "Properties of the private link resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ProxyResource"
        }
      ]
    },
    "Azure.ResourceManager.PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id.",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Azure.ResourceManager.PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "status": {
          "$ref": "#/definitions/Azure.ResourceManager.PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      }
    },
    "EdgeAction": {
      "type": "object",
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EdgeActionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "$ref": "#/definitions/SkuType",
          "description": "The sku type of the edge action"
        }
      },
      "required": [
        "sku"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.TrackedResource"
        }
      ]
    },
    "EdgeActionAttachment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The edge action attachment id",
          "readOnly": true
        },
        "attachedResourceId": {
          "$ref": "#/definitions/AttachedResourceId",
          "description": "The attached resource Id",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "required": [
        "id",
        "attachedResourceId"
      ]
    },
    "EdgeActionAttachmentResponse": {
      "type": "object",
      "properties": {
        "edgeActionId": {
          "type": "string",
          "description": "Non changing guid to identity edge action",
          "readOnly": true
        }
      },
      "required": [
        "edgeActionId"
      ]
    },
    "EdgeActionExecutionFilter": {
      "type": "object",
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EdgeActionExecutionFilterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.TrackedResource"
        }
      ]
    },
    "EdgeActionExecutionFilterListResult": {
      "type": "object",
      "description": "The response of a EdgeActionExecutionFilter list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EdgeActionExecutionFilter items on this page",
          "items": {
            "$ref": "#/definitions/EdgeActionExecutionFilter"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EdgeActionExecutionFilterProperties": {
      "type": "object",
      "properties": {
        "versionId": {
          "$ref": "#/definitions/EdgeActionVersionId",
          "description": "The referenced versionId of the edgeaction version",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last update time in UTC for the execution filter",
          "readOnly": true
        },
        "executionFilterIdentifierHeaderName": {
          "type": "string",
          "description": "Custom Header Key associated with the execution filter",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "executionFilterIdentifierHeaderValue": {
          "type": "string",
          "description": "Custom Header Value associated with the execution filter",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "versionId",
        "lastUpdateTime",
        "executionFilterIdentifierHeaderName",
        "executionFilterIdentifierHeaderValue"
      ]
    },
    "EdgeActionExecutionFilterUpdate": {
      "type": "object",
      "description": "The type used for update operations of the EdgeActionExecutionFilter.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/EdgeActionExecutionFilterUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "EdgeActionExecutionFilterUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the EdgeActionExecutionFilter.",
      "properties": {
        "versionId": {
          "$ref": "#/definitions/EdgeActionVersionId",
          "description": "The referenced versionId of the edgeaction version",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "executionFilterIdentifierHeaderName": {
          "type": "string",
          "description": "Custom Header Key associated with the execution filter",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "executionFilterIdentifierHeaderValue": {
          "type": "string",
          "description": "Custom Header Value associated with the execution filter",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "EdgeActionIsDefaultVersion": {
      "type": "string",
      "enum": [
        "True",
        "False"
      ],
      "x-ms-enum": {
        "name": "EdgeActionIsDefaultVersion",
        "modelAsString": true
      }
    },
    "EdgeActionListResult": {
      "type": "object",
      "description": "The response of a EdgeAction list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EdgeAction items on this page",
          "items": {
            "$ref": "#/definitions/EdgeAction"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EdgeActionOperation": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EdgeActionOperationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ProxyResource"
        }
      ]
    },
    "EdgeActionOperationListResult": {
      "type": "object",
      "description": "The response of a EdgeActionOperation list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EdgeActionOperation items on this page",
          "items": {
            "$ref": "#/definitions/EdgeActionOperation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EdgeActionOperationProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource id of the operation."
        },
        "operationId": {
          "type": "string",
          "description": "The GUID representing operationID."
        },
        "status": {
          "$ref": "#/definitions/OperationStatus",
          "description": "The current status of the operation."
        },
        "operationType": {
          "type": "string",
          "description": "The operation type."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the operation."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the operation (if completed)."
        },
        "error": {
          "$ref": "#/definitions/ErrorDetails",
          "description": "Error details, if applicable."
        }
      },
      "required": [
        "resourceId",
        "operationId",
        "status",
        "operationType"
      ]
    },
    "EdgeActionProperties": {
      "type": "object",
      "description": "Represents an edge action properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the edge action",
          "readOnly": true
        },
        "attachments": {
          "type": "array",
          "description": "A list of attachments for the edge action",
          "items": {
            "$ref": "#/definitions/EdgeActionAttachment"
          },
          "readOnly": true
        }
      },
      "required": [
        "attachments"
      ]
    },
    "EdgeActionUpdate": {
      "type": "object",
      "description": "The type used for update operations of the EdgeAction.",
      "properties": {
        "sku": {
          "$ref": "#/definitions/SkuTypeUpdate",
          "description": "The sku type of the edge action"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "EdgeActionVersion": {
      "type": "object",
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EdgeActionVersionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.TrackedResource"
        }
      ]
    },
    "EdgeActionVersionDeploymentType": {
      "type": "string",
      "enum": [
        "zip",
        "file",
        "others"
      ],
      "x-ms-enum": {
        "name": "EdgeActionVersionDeploymentType",
        "modelAsString": true
      }
    },
    "EdgeActionVersionId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Cdn/edgeActions/versions"
          }
        ]
      }
    },
    "EdgeActionVersionListResult": {
      "type": "object",
      "description": "The response of a EdgeActionVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EdgeActionVersion items on this page",
          "items": {
            "$ref": "#/definitions/EdgeActionVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EdgeActionVersionProperties": {
      "type": "object",
      "description": "Represents an edge action version",
      "properties": {
        "deploymentType": {
          "$ref": "#/definitions/EdgeActionVersionDeploymentType",
          "description": "The deployment type",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "validationStatus": {
          "$ref": "#/definitions/EdgeActionVersionValidationStatus",
          "description": "The validation status",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state",
          "readOnly": true
        },
        "isDefaultVersion": {
          "$ref": "#/definitions/EdgeActionIsDefaultVersion",
          "description": "The active state",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "lastPackageUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last update time in UTC for package update",
          "readOnly": true
        }
      },
      "required": [
        "deploymentType",
        "validationStatus",
        "isDefaultVersion",
        "lastPackageUpdateTime"
      ]
    },
    "EdgeActionVersionUpdate": {
      "type": "object",
      "description": "The type used for update operations of the EdgeActionVersion.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/EdgeActionVersionUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "EdgeActionVersionUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the EdgeActionVersion.",
      "properties": {
        "deploymentType": {
          "$ref": "#/definitions/EdgeActionVersionDeploymentType",
          "description": "The deployment type",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "isDefaultVersion": {
          "$ref": "#/definitions/EdgeActionIsDefaultVersion",
          "description": "The active state",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "EdgeActionVersionValidationStatus": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "EdgeActionVersionValidationStatus",
        "modelAsString": true
      }
    },
    "EmptyBody": {
      "type": "object"
    },
    "ErrorDetails": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Detailed error message."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "OperationStatus": {
      "type": "string",
      "enum": [
        "Running",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OperationStatus",
        "modelAsString": true
      }
    },
    "PagedOperation": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Operation items on this page",
          "items": {
            "$ref": "#/definitions/Azure.ResourceManager.Foundations.Operation"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Upgrading"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The operation completed successfully"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The operation failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The operation was canceled"
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Initial provisioning in progress"
          },
          {
            "name": "Upgrading",
            "value": "Upgrading",
            "description": "Upgrade in progress"
          }
        ]
      }
    },
    "SkuType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tier": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "tier"
      ]
    },
    "SkuTypeUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tier": {
          "type": "string"
        }
      }
    },
    "VersionCode": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "The version code deployment content ",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The version code name",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "required": [
        "content",
        "name"
      ]
    }
  },
  "parameters": {
    "Azure.ResourceManager.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    },
    "Azure.ResourceManager.ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    },
    "Azure.ResourceManager.SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The ID of the target subscription.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    }
  }
}
