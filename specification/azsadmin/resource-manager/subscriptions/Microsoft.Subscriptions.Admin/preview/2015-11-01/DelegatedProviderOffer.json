{
  "swagger": "2.0",
  "info": {
    "version": "2015-11-01",
    "title": "SubscriptionsManagementClient",
    "description": "The Admin Subscriptions Management Client."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/delegatedProviders/{delegatedProviderSubscriptionId}/offers": {
      "get": {
        "x-ms-examples": {
          "Get the list of delegated provider offers.": {
            "$ref": "./examples/DelegatedProviderOffer/List.json"
          }
        },
        "description": "Get the list of delegated provider offers.",
        "tags": [
          "DelegatedProviderOffers"
        ],
        "operationId": "DelegatedProviderOffers_List",
        "parameters": [
          {
            "$ref": "Subscriptions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Subscriptions.json#/parameters/DelegatedProviderSubscriptionIdParameter"
          },
          {
            "$ref": "Subscriptions.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "Subscriptions.json#/definitions/Error"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DelegatedProviderOfferList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/delegatedProviders/{delegatedProviderSubscriptionId}/offers/{offer}": {
      "get": {
        "x-ms-examples": {
          "Get the specified delegated provider offer.": {
            "$ref": "./examples/DelegatedProviderOffer/Get.json"
          }
        },
        "description": "Get the specified delegated provider offer.",
        "tags": [
          "DelegatedProviderOffers"
        ],
        "operationId": "DelegatedProviderOffers_Get",
        "parameters": [
          {
            "$ref": "Subscriptions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Subscriptions.json#/parameters/DelegatedProviderSubscriptionIdParameter"
          },
          {
            "$ref": "Subscriptions.json#/parameters/OfferParameter"
          },
          {
            "$ref": "Subscriptions.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "Subscriptions.json#/definitions/Error"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DelegatedProviderOffer"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DelegatedProviderOffer": {
      "description": "The delegated provider offer.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties for an delegated provider.",
          "$ref": "#/definitions/DelegatedProviderOfferProperties"
        }
      },
      "allOf": [
        {
          "$ref": "Subscriptions.json#/definitions/Resource"
        }
      ]
    },
    "DelegatedProviderOfferProperties": {
      "description": "Properties for an delegated provider.",
      "type": "object",
      "properties": {
        "delegatedOfferId": {
          "description": "The delegated offer identifier.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of offer.",
          "type": "string"
        },
        "description": {
          "description": "Description of offer.",
          "type": "string"
        },
        "externalReferenceId": {
          "description": "External reference identifier.",
          "type": "string"
        },
        "accessibilityState": {
          "description": "Offer accessibility state.",
          "$ref": "#/definitions/AccessibilityState"
        },
        "subscriptionCount": {
          "description": "Current subscription count.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccessibilityState": {
      "type": "string",
      "description": "Represents the state of the offer",
      "enum": [
        "Private",
        "Public",
        "Decommissioned"
      ],
      "x-ms-enum": {
        "name": "AccessibilityState",
        "modelAsString": true,
        "values": [
          {
            "description": "The offer or plan is private. Only an Admin can see and manage it.",
            "name": "Private",
            "value": "Private"
          },
          {
            "description": "The offer or plan is public. Users can see and self-subscribe to it.",
            "name": "Public",
            "value": "Public"
          },
          {
            "description": "The offer or plan is decommissioned. Current subscriptions can still consume it but new subscriptions cannot.",
            "name": "Decommissioned",
            "value": "Decommissioned"
          }
        ]
      }
    },
    "DelegatedProviderOfferList": {
      "description": "List of delegated provider offers.",
      "properties": {
        "value": {
          "description": "Array of delegated provider offers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegatedProviderOffer"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Continuation token"
        }
      }
    }
  },
  "parameters": {},
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
