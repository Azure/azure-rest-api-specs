{
  "swagger": "2.0",
  "info": {
    "version": "2015-04-01",
    "title": "GalleryManagementClient",
    "description": "The Admin Gallery Management Client."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/microsoft.gallery.admin/galleryItems": {
      "get": {
        "x-ms-examples": {
          "Lists gallery items.": {
            "$ref": "./examples/GalleryItem/List.json"
          }
        },
        "tags": [
          "GalleryItems"
        ],
        "summary": "Lists gallery items.",
        "operationId": "GalleryItems_List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "Gallery.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Gallery.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GalleryItemList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      },
      "post": {
        "x-ms-examples": {
          "uploads a provider gallery item to the storage": {
            "$ref": "./examples/GalleryItem/Create.json"
          }
        },
        "tags": [
          "GalleryItems"
        ],
        "summary": "Uploads a provider gallery item to the storage.",
        "operationId": "GalleryItems_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "Gallery.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Gallery.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/GalleryItemUriPayloadParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GalleryItem"
            }
          },
          "201": {
            "description": "CREATED",
            "schema": {
              "$ref": "#/definitions/GalleryItem"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.gallery.admin/galleryItems/{galleryItemName}": {
      "get": {
        "x-ms-examples": {
          "Get a specific gallery item.": {
            "$ref": "./examples/GalleryItem/Get.json"
          }
        },
        "tags": [
          "GalleryItems"
        ],
        "summary": "Get a specific gallery item.",
        "operationId": "GalleryItems_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "Gallery.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/GalleryItemNameParameter"
          },
          {
            "$ref": "Gallery.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GalleryItem"
            }
          },
          "404": {
            "description": "NOT FOUND"
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Deletes a specific gallery item.": {
            "$ref": "./examples/GalleryItem/Delete.json"
          }
        },
        "tags": [
          "GalleryItems"
        ],
        "summary": "Delete a specific gallery item.",
        "operationId": "GalleryItems_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "Gallery.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/GalleryItemNameParameter"
          },
          {
            "$ref": "Gallery.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "NO CONTENT."
          },
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "GalleryItemUriPayload": {
      "description": "Location of gallery item payload.",
      "type": "object",
      "properties": {
        "galleryItemUri": {
          "description": "URI for your gallery package that has already been uploaded online.",
          "type": "string"
        }
      }
    },
    "GalleryItem": {
      "description": "Properties of a gallery item.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties of a gallery item.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GalleryItemProperties"
        }
      },
      "allOf": [
        {
          "$ref": "Gallery.json#/definitions/Resource"
        }
      ]
    },
    "GalleryItemProperties": {
      "description": "Properties of a gallery item.",
      "type": "object",
      "properties": {
        "identity": {
          "description": "Identity of the gallery item.",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher of the gallery item.",
          "type": "string"
        },
        "publisherDisplayName": {
          "description": "Display name of the publisher.",
          "type": "string"
        },
        "itemName": {
          "description": "The display name for the gallery item, for the locale of the request.",
          "type": "string"
        },
        "itemDisplayName": {
          "description": "Displayed name in the portal.",
          "type": "string"
        },
        "version": {
          "description": "The version identifier of the gallery item, in Major.Minor.Build format.",
          "type": "string"
        },
        "summary": {
          "description": "Short summary of the gallery item.",
          "type": "string"
        },
        "longSummary": {
          "description": "Long summary of the gallery item.",
          "type": "string"
        },
        "description": {
          "description": "The description of the gallery item.",
          "type": "string"
        },
        "uiDefinitionUri": {
          "description": "The URL of the view definition object that defines the UI information that is used when an instance of the gallery item resource definition is created.",
          "type": "string"
        },
        "createdTime": {
          "description": "The date and time that the gallery item was created.",
          "format": "date-time",
          "type": "string"
        },
        "changedTime": {
          "description": "Last update time of gallery item.",
          "format": "date-time",
          "type": "string"
        },
        "marketingMaterial": {
          "description": "Marketing materials for the gallery item.",
          "$ref": "#/definitions/MarketingMaterial"
        },
        "itemType": {
          "description": "Describes the type of the gallery item, either GalleryItem or ItemGroup.",
          "enum": [
            "GalleryItem",
            "ItemGroup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "GalleryItemMenuReferenceType",
            "modelAsString": true,
            "values": [
              {
                "value": "GalleryItem"
              },
              {
                "value": "ItemGroup"
              }
            ]
          }
        },
        "categoryIds": {
          "description": "List of category IDs the gallery item belongs to.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "screenshotUris": {
          "description": "List of screenshot image URIs provided for the item.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "links": {
          "description": "Links provided for the item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkProperties"
          },
          "readOnly": true
        },
        "filters": {
          "description": "List of filters for the gallery item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          },
          "readOnly": true
        },
        "iconFileUris": {
          "description": "URIs to icon files.",
          "type": "object",
          "properties": {
            "small": {
              "description": "URI to the small icon.",
              "type": "string"
            },
            "medium": {
              "description": "URI to the medium icon.",
              "type": "string"
            },
            "large": {
              "description": "URI to the large icon.",
              "type": "string"
            },
            "wide": {
              "description": "URI to the wide icon.",
              "type": "string"
            },
            "hero": {
              "description": "URI to the hero icon.",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "artifacts": {
          "description": "List of artifacts for the gallery item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          },
          "readOnly": true
        },
        "metadata": {
          "description": "Custom item metadata.",
          "$ref": "#/definitions/OpenProperty",
          "readOnly": true
        },
        "properties": {
          "description": "List of properties provided for the gallery item.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "images": {
          "description": "List of images.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageGroup"
          },
          "readOnly": true
        },
        "products": {
          "description": "List of products.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          },
          "readOnly": true
        },
        "resourceGroupName": {
          "description": "Resource group name the gallery item belongs too.",
          "type": "string"
        },
        "definitionTemplates": {
          "description": "Definition template for gallery item.",
          "$ref": "#/definitions/DefinitionTemplates",
          "readOnly": true
        },
        "additionalProperties": {
          "description": "List of additional properties provided for the item.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "GalleryItemList": {
      "description": "List of gallery items.",
      "properties": {
        "value": {
          "description": "List of gallery items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GalleryItem"
          }
        }
      }
    },
    "MarketingMaterial": {
      "description": "Marketing material for a gallery item.",
      "type": "object",
      "properties": {
        "path": {
          "description": "Path to the marketing site.",
          "type": "string"
        },
        "learnUri": {
          "description": "URI to educational material.",
          "type": "string"
        }
      }
    },
    "LinkProperties": {
      "description": "Represents a link item read from the gallery item package.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the link.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the link.",
          "type": "string"
        },
        "uri": {
          "description": "URI of the link.",
          "type": "string"
        }
      }
    },
    "Filter": {
      "description": "Represents a filter item.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Filter type.",
          "type": "string"
        },
        "value": {
          "description": "Filter value.",
          "type": "string"
        }
      }
    },
    "Artifact": {
      "description": "Represents gallery item artifacts.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the artifact.",
          "type": "string"
        },
        "uri": {
          "description": "URI to the artifact.",
          "type": "string"
        },
        "type": {
          "description": "Artifact type.",
          "enum": [
            "template",
            "fragment",
            "custom",
            "metadata"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ArtifactType",
            "modelAsString": true,
            "values": [
              {
                "value": "template"
              },
              {
                "value": "fragment"
              },
              {
                "value": "custom"
              },
              {
                "value": "metadata"
              }
            ]
          }
        }
      }
    },
    "OpenProperty": {
      "description": "Open type used to define dynamic properties.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Dictionary of dynamic properties.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true
        }
      }
    },
    "ImageGroup": {
      "description": "Group of images.",
      "type": "object",
      "properties": {
        "context": {
          "description": "Image group identifier.",
          "type": "string"
        },
        "items": {
          "description": "List of images.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          },
          "readOnly": true
        }
      }
    },
    "Product": {
      "description": "Represents a product item read from the gallery item package.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the product.",
          "type": "string"
        },
        "publisherDisplayName": {
          "description": "Publisher display name of the product.",
          "type": "string"
        },
        "pricingDetailsUri": {
          "description": "URI to the pricing details of the product.",
          "type": "string"
        },
        "offerDetails": {
          "description": "Offer details of the product.",
          "$ref": "#/definitions/OfferDetails"
        },
        "legalTerms": {
          "description": "Legal terms of the product.",
          "type": "string"
        },
        "privacyPolicy": {
          "description": "Privacy policy of the product.",
          "type": "string"
        },
        "legalTermsUri": {
          "description": "URI to the legal terms of the product.",
          "type": "string"
        },
        "privacyPolicyUri": {
          "description": "URI to the privacy policy of the product.",
          "type": "string"
        }
      }
    },
    "DefinitionTemplates": {
      "description": "Holds UI definition file Uri and deployment template file URIs.",
      "type": "object",
      "properties": {
        "uiDefinitionFileUri": {
          "description": "UI definition file URI.",
          "type": "string"
        },
        "defaultDeploymentTemplateId": {
          "description": "Default deployment template ID.",
          "type": "string"
        },
        "deploymentTemplateFileUris": {
          "description": "List of key-value containing the deployment template file IDs defined in the package manifest.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "deploymentFragmentFileUris": {
          "description": "List of key-value pairs containing the deployment fragment file IDs defined in the package manifest.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "Image": {
      "description": "Represents an image item.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the image.",
          "type": "string"
        },
        "uri": {
          "description": "URI to the image.",
          "type": "string"
        },
        "type": {
          "description": "Type of image.",
          "type": "string"
        }
      }
    },
    "OfferDetails": {
      "description": "Represents a offer details item read from the gallery item package.",
      "type": "object",
      "properties": {
        "publisherId": {
          "description": "Publisher identifier.",
          "type": "string"
        },
        "offerId": {
          "description": "Offer identifier.",
          "type": "string"
        },
        "plans": {
          "description": "List of plans available for the offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Plan"
          },
          "readOnly": true
        }
      }
    },
    "Plan": {
      "description": "Represents a plan item read from the gallery item package.",
      "type": "object",
      "properties": {
        "planId": {
          "description": "Plan identifier.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the plan.",
          "type": "string"
        },
        "summary": {
          "description": "Summary of the plan.",
          "type": "string"
        },
        "description": {
          "description": "Description of the plan.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "GalleryItemNameParameter": {
      "name": "galleryItemName",
      "in": "path",
      "description": "Identity of the gallery item. Includes publisher name, item name, and may include version separated by period character.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GalleryItemUriPayloadParameter": {
      "description": "The URI to the gallery item JSON file.",
      "name": "galleryItemUriPayload",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/GalleryItemUriPayload"
      },
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Authorization uses an Azure Active Directory OAuth2 flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
