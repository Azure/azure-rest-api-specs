{
  "swagger": "2.0",
  "info": {
    "version": "2019-01-01",
    "title": "DeploymentAdminClient",
    "description": "Deployment Admin Client."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages/{productId}/secrets": {
      "get": {
        "x-ms-examples": {
          "Return product secrets list.": {
            "$ref": "./examples/ProductSecret/List.json"
          }
        },
        "description": "Returns an array of product secrets.",
        "tags": [
          "ProductSecrets"
        ],
        "operationId": "ProductSecrets_List",
        "parameters": [
          {
            "$ref": "Deployment.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Deployment.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "Deployment.json#/parameters/ProductIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductSecretsList"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productSecrets/{productId}/secrets/{secretName}": {
      "get": {
        "x-ms-examples": {
          "Return the product package details.": {
            "$ref": "./examples/ProductSecret/Get.Json"
          }
        },
        "description": "Retrieves the specific product secret details.",
        "tags": [
          "ProductSecrets"
        ],
        "operationId": "ProductSecrets_Get",
        "parameters": [
          {
            "$ref": "Deployment.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Deployment.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "Deployment.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SecretNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductSecret"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productSecrets/{productId}/secrets/{secretName}/import": {
      "post": {
        "x-ms-examples": {
          "Imports a product secret.": {
            "$ref": "./examples/ProductSecret/Import.json"
          }
        },
        "description": "Imports a product secret.",
        "tags": [
          "ProductSecrets"
        ],
        "operationId": "ProductSecrets_Import",
        "parameters": [
          {
            "$ref": "Deployment.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Deployment.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/SecretNameParameter"
          },
          {
            "$ref": "Deployment.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SecretParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-long-running-operation": true,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productSecrets/{productId}/secrets/{secretName}/validate": {
      "post": {
        "x-ms-examples": {
          "Validates a product secret.": {
            "$ref": "./examples/ProductSecret/Validate.json"
          }
        },
        "description": "Validates a product secret.",
        "tags": [
          "ProductSecrets"
        ],
        "operationId": "ProductSecrets_Validate",
        "parameters": [
          {
            "$ref": "Deployment.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Deployment.json#/parameters/ProductIdParameter"
          },
          {
            "$ref": "#/parameters/SecretNameParameter"
          },
          {
            "$ref": "Deployment.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SecretParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-long-running-operation": true,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "ProductSecret": {
      "description": "Properties for a product secret.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties of a product secret.",
          "$ref": "#/definitions/ProductSecretProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "Deployment.json#/definitions/Resource"
        }
      ]
    },
    "ProductSecretsList": {
      "description": "List of product secrets.",
      "properties": {
        "value": {
          "description": "List of product secrets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductSecret"
          }
        },
        "nextLink": {
          "description": "URI to the next page.",
          "type": "string"
        }
      }
    },
    "ProductSecretProperties": {
      "type": "object",
      "description": "Properties of product secret.",
      "properties": {
        "secretState": {
          "description": "The secret state.",
          "$ref": "#/definitions/SecretState"
        },
        "secretDescriptor": {
          "description": "The secret type-specific descriptor.",
          "$ref": "#/definitions/SecretDescriptor"
        },
        "expiresAfter": {
          "description": "The expiration period of the secret (in ISO8601 format).",
          "type": "string"
        },
        "description": {
          "description": "The secret description.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "type": "string"
        },
        "secretKind": {
          "description": "Specifies the secret kind.",
          "type": "string",
          "enum": [
            "AdHoc",
            "Certificate",
            "Password",
            "StorageAccount",
            "SymmetricKey"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SecretKind"
          }
        }
      }
    },
    "SecretDescriptor": {
      "description": "The secret type-specific descriptor.",
      "type": "object",
      "properties": {
        "keyLength": {
          "description": "The key length.",
          "type": "integer"
        },
        "alternativeDnsNames": {
          "description": "Alternative DNS Names.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlternativeDnsNames"
          }
        },
        "secondaryKeyIsActive": {
          "description": "A value indicating whether the secondary or primary storage account key is active as a secret.",
          "type": "boolean"
        },
        "rotationStatus": {
          "description": "The storage account key secret rotation status.",
          "type": "string",
          "enum": [
            "None",
            "PlantNewSak",
            "RotateInactiveSak",
            "Complete"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RotationStatus"
          }
        },
        "passwordLength": {
          "description": "The minimum password length is 8 characters, and the maximum password length is 128 characters.",
          "type": "integer"
        },
        "allowedCharacters": {
          "description": "The allowed characters in the password",
          "type": "string"
        },
        "passwordValidationRegex": {
          "description": "Password validation regular expression.",
          "type": "string"
        },
        "subject": {
          "description": "Certificate's subject",
          "type": "string"
        },
        "alternativeIpAddresses": {
          "description": "The list of alternative IP addresses.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlternativeIpAddresses"
          }
        }
      }
    },
    "AlternativeDnsNames": {
      "description": "List of alternative DNS names.",
      "type": "string"
    },
    "AlternativeIpAddresses": {
      "description": "List of alternative IP Addresses.",
      "type": "string"
    },
    "SecretState": {
      "description": "Represents the secret state.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The secret status.",
          "$ref": "#/definitions/SecretStatus"
        },
        "rotationStatus": {
          "description": "the secret rotation status.",
          "$ref": "#/definitions/SecretRotationStatus"
        },
        "expirationDate": {
          "description": "The secret expiration date.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SecretStatus": {
      "description": "Specifies the secret status.",
      "type": "string",
      "enum": [
        "NotUploaded",
        "Uploaded",
        "Deployed"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "SecretStatus"
      }
    },
    "SecretRotationStatus": {
      "description": "Specifies the secret rotation status.",
      "type": "string",
      "enum": [
        "None",
        "InProgress",
        "Complete"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "SecretRotationStatus"
      }
    },
    "SecretValue": {
      "description": "The secret value in a secure string format.",
      "type": "string"
    },
    "PfxFileName": {
      "description": "The pfx certificate file location.",
      "type": "string"
    },
    "PfxPassword": {
      "description": "The pfx certificate file password as a secure string.",
      "type": "string"
    },
    "SymmetricKey": {
      "description": "The symmetric key as a secure string.",
      "type": "string"
    },
    "Password": {
      "description": "The password as a secure string.",
      "type": "string"
    },
    "SecretParameters": {
      "description": "Parameters required for creating/updating a product secret.",
      "type": "object",
      "properties": {
        "secretValue": {
          "description": "The secret value in a secure string format.",
          "$ref": "#/definitions/SecretValue"
        },
        "pfxFileName": {
          "description": "The pfx certificate file location.",
          "$ref": "#/definitions/PfxFileName"
        },
        "pfxPassword": {
          "description": "The pfx certificate file password.",
          "$ref": "#/definitions/PfxPassword"
        },
        "symmetricKey": {
          "description": "The symmetric key.",
          "$ref": "#/definitions/SymmetricKey"
        },
        "password": {
          "description": "The pfx certificate file password.",
          "$ref": "#/definitions/Password"
        }
      }
    }
  },
  "parameters": {
    "SecretNameParameter": {
      "description": "The secret name.",
      "name": "secretName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SecretParameters": {
      "description": "The parameters required for creating/updating a product secret.",
      "name": "secretParameters",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/SecretParameters"
      },
      "x-ms-parameter-location": "method"
    },
    "SecretValueParameter": {
      "description": "The secret value in a secure string format.",
      "name": "secretValue",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/SecretValue"
      },
      "x-ms-parameter-location": "method"
    },
    "PfxFileNameParameter": {
      "description": "The pfx certificate file location.",
      "name": "pfxFileName",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/PfxFileName"
      },
      "x-ms-parameter-location": "method"
    },
    "PfxPasswordParameter": {
      "description": "The pfx certificate file password.",
      "name": "pfxPasswordParameter",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/PfxPassword"
      },
      "x-ms-parameter-location": "method"
    },
    "SymmetricKeyParameter": {
      "description": "The symmetric key.",
      "name": "SymmetricKeyParameter",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/SymmetricKey"
      },
      "x-ms-parameter-location": "method"
    },
    "PasswordParameter": {
      "description": "The password.",
      "name": "PasswordParameter",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Password"
      },
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Authorization uses an Azure Active Directory OAuth2 flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
