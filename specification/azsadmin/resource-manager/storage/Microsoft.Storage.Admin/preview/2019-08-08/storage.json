{
  "swagger": "2.0",
  "info": {
    "version": "2019-08-08-preview",
    "title": "StorageManagementClient",
    "description": "The Admin Storage Management Client."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/providers/Microsoft.Storage.Admin/operations": {
      "get": {
        "x-ms-examples": {
          "Get the list of support rest operations.": {
            "$ref": "./examples/Operations/List.json"
          }
        },
        "description": "Get the list of support rest operations.",
        "tags": [
          "Commerce"
        ],
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The list of operations has been returned.",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/asyncOperations/{asyncOperationId}": {
      "get": {
        "x-ms-examples": {
          "Returns the async operation specified by asyncOperationId.": {
            "$ref": "./examples/AsyncOperations/Get.json"
          }
        },
        "tags": [
          "AsyncOperations"
        ],
        "operationId": "AsyncOperations_Get",
        "description": "Returns the async operation specified by asyncOperationId.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/AsyncOperationIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The async operation has been returned.",
            "schema": {
              "$ref": "#/definitions/AsyncOperationModel"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Storage.Admin/storageServices": {
      "get": {
        "x-ms-examples": {
          "Returns the storage services list under the specified resource group and subscription.": {
            "$ref": "./examples/StorageServices/ListResourceGroup.json"
          }
        },
        "tags": [
          "StorageServices"
        ],
        "operationId": "StorageServices_ListRG",
        "description": "Returns the storage services list under the specified resource group and subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The list of storage services has been returned.",
            "schema": {
              "$ref": "#/definitions/StorageServiceList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/storageServices": {
      "get": {
        "x-ms-examples": {
          "Returns the storage services list under the specified subscription.": {
            "$ref": "./examples/StorageServices/ListSubscription.json"
          }
        },
        "tags": [
          "StorageServices"
        ],
        "operationId": "StorageServices_ListSub",
        "description": "Returns the storage services list under the specified subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The list of storage services has been returned.",
            "schema": {
              "$ref": "#/definitions/StorageServiceList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}resourceGroups/{resourceGroup}/providers/Microsoft.Storage.Admin/storageServices/{serviceName}": {
      "get": {
        "x-ms-examples": {
          "Returns the specified storage service.": {
            "$ref": "./examples/StorageServices/Get.json"
          }
        },
        "tags": [
          "StorageServices"
        ],
        "operationId": "StorageServices_Get",
        "description": "Returns the specified storage service.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The specified storage service has been returned.",
            "schema": {
              "$ref": "#/definitions/StorageService"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Create the specified storage resource.": {
            "$ref": "./examples/StorageServices/Put.json"
          }
        },
        "tags": [
          "StorageServices"
        ],
        "operationId": "StorageServices_Create",
        "description": "Create the specified storage resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageServiceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The specified storage service has been created.",
            "schema": {
              "$ref": "#/definitions/StorageService"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Operation": {
      "description": "Describes the supported REST operation.",
      "properties": {
        "name": {
          "description": "The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service.",
          "type": "string",
          "readOnly": true
        },
        "display": {
          "description": "Contains the localized display information for this particular operation / action.",
          "$ref": "#/definitions/Display",
          "readOnly": true
        }
      }
    },
    "Display": {
      "description": "Contains the localized display information for this particular operation / action.",
      "properties": {
        "provider": {
          "description": "The localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. It should use Title Casing and begin with \"Microsoft\" for 1st party services. e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute.\"",
          "type": "string",
          "readOnly": true
        },
        "resource": {
          "description": "The localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider.",
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "description": "The localized friendly name for the operation, as it should be shown to the user.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise – it will be used in tool tips and detailed views.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationList": {
      "description": "Pageable list of supported operations.",
      "properties": {
        "value": {
          "description": "List of operations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        }
      }
    },
    "ServiceNameProperties": {
      "description": "The properties for service name.",
      "type": "object",
      "properties": {
        "serviceName": {
          "description": "Service Name for Storage Service.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StorageService": {
      "description": "MDM storage service resource.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties for service name.",
          "$ref": "#/definitions/ServiceNameProperties",
          "x-ms-client-flatten": true,
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "StorageServiceList": {
      "description": "List for storage services.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/StorageService"
      }
    },
    "AsyncOperationModel": {
      "description": "The async operation body for srp request.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The operation id.",
          "type": "string",
          "readOnly": true
        },
        "operationStartTime": {
          "description": "Operation start time.",
          "type": "string",
          "readOnly": true
        },
        "operationEndTime": {
          "description": "Operation end time.",
          "type": "string",
          "readOnly": true
        },
        "subscriptionId": {
          "description": "Subscription id for async operation.",
          "type": "string",
          "readOnly": true
        },
        "locationHeader": {
          "description": "Location header for async operation.",
          "type": "string",
          "readOnly": true
        },
        "httpStatus": {
          "description": "Http status for the async operation.",
          "type": "string",
          "readOnly": true
        },
        "response": {
          "description": "Response for the async operation.",
          "type": "string",
          "readOnly": true
        },
        "context": {
          "description": "Operation context.",
          "$ref": "#/definitions/OperationRequestContext",
          "x-ms-client-flatten": true,
          "readOnly": true
        },
        "operation": {
          "description": "Async operation content.",
          "$ref": "#/definitions/AsyncOperation",
          "x-ms-client-flatten": true,
          "readOnly": true
        }
      }
    },
    "OperationRequestContext": {
      "description": "Operation request context.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Operation api version.",
          "type": "string",
          "readOnly": true
        },
        "activityId": {
          "description": "Activity id for the operation.",
          "type": "string",
          "readOnly": true
        },
        "operationName": {
          "description": "Async operation name.",
          "type": "string",
          "readOnly": true
        },
        "errorCode": {
          "description": "Async operation error code if operation failed.",
          "type": "string",
          "readOnly": true
        },
        "runtimeException": {
          "description": "Runtime exception if operation failed.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "Start time for the operation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AsyncOperation": {
      "description": "Async operation content",
      "type": "object",
      "properties": {
        "name": {
          "description": "Async operation name",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ErrorResponse": {
      "description": "The error response for request which failed.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error description code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The error description message.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "The error target description.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "The error details information.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "Resource": {
      "description": "Base resource object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource Type.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Resource Location.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "description": "REST Api Version.",
      "name": "api-version",
      "type": "string",
      "in": "query",
      "required": true
    },
    "LocationParameter": {
      "description": "Resource location.",
      "name": "location",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "description": "Subscription Id.",
      "name": "subscriptionId",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "AsyncOperationIdParameter": {
      "description": "Async Operation Id.",
      "name": "asyncOperationId",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "description": "Resource group name.",
      "name": "resourceGroup",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "StorageServiceNameParameter": {
      "description": "Storage service name.",
      "name": "serviceName",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Authorization uses an Azure Active Directory OAuth2 flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
