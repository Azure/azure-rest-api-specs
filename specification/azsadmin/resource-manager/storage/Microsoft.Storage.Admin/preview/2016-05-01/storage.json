{
    "swagger": "2.0",
    "info": {
        "version": "2015-12-01-preview",
        "title": "StorageManagementClient",
        "description": "The Admin Storage Management Client."
    },
    "host": "adminmanagement.local.azurestack.external",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/providers/Microsoft.Storage.Admin/operations": {
            "get": {
                "x-ms-examples": {
                    "Get the list of support rest operations.": {
                        "$ref": "./examples/Operations/List.json"
                    }
                },
                "description": "Get the list of support rest operations.",
                "tags": [
                    "Commerce"
                ],
                "operationId": "Operations_List",
                "parameters": [
                    {
                        "$ref": "storage.json#/parameters/ApiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK -- The list of operations has been returned.",
                        "schema": {
                            "$ref": "storage.json#/definitions/OperationList"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        }
    },
    "definitions": {
        "WritableSettings": {
            "description": "Storage service settings.",
            "type": "object",
            "properties": {
                "frontEndCallbackThreadsCount": {
                    "description": "Front end callback threads count.",
                    "type": "integer",
                    "format": "int32"
                },
                "frontEndCpuBasedKeepAliveThrottlingEnabled": {
                    "description": "Switch of front end CPU based keep-alive throttling.",
                    "type": "boolean"
                },
                "frontEndCpuBasedKeepAliveThrottlingPercentCpuThreshold": {
                    "description": "Threshold (% percentage) of front end CPU based keep-alive throttling.",
                    "type": "number",
                    "format": "float"
                },
                "frontEndCpuBasedKeepAliveThrottlingPercentRequestsToThrottle": {
                    "description": "Threshold (% percentage) of requests to throttle in front end CPU based keep-alive throttling.",
                    "type": "number",
                    "format": "float"
                },
                "frontEndCpuBasedKeepAliveThrottlingCpuMonitorIntervalInSeconds": {
                    "description": "Interval (in second) of CPU monitor for front end CPU based keep-alive throttling.",
                    "type": "integer",
                    "format": "int32"
                },
                "frontEndMemoryThrottlingEnabled": {
                    "description": "Switch of front end memory throttling.",
                    "type": "boolean"
                },
                "frontEndMaxMillisecondsBetweenMemorySamples": {
                    "description": "Maxium interval (in millisecond) between memory samples of front end.",
                    "type": "integer",
                    "format": "int32"
                },
                "frontEndMemoryThrottleThresholdSettings": {
                    "description": "Front end memory throttle threshold settings.",
                    "type": "string"
                },
                "frontEndMinThreadPoolThreads": {
                    "description": "Front end minimum number of threads in thread pool.",
                    "type": "integer",
                    "format": "int32"
                },
                "frontEndThreadPoolBasedKeepAliveIOCompletionThreshold": {
                    "description": "Threshold of front end thread pool based keep-alive IO completion.",
                    "type": "integer",
                    "format": "int32"
                },
                "frontEndThreadPoolBasedKeepAliveWorkerThreadThreshold": {
                    "description": "Threshold of front end thread pool based keep-alive worker thread.",
                    "type": "integer",
                    "format": "int32"
                },
                "frontEndThreadPoolBasedKeepAliveMonitorIntervalInSeconds": {
                    "description": "Monitor interval (in seconds) of front end thread pool based keep-alive monitor.",
                    "type": "integer",
                    "format": "int32"
                },
                "frontEndThreadPoolBasedKeepAlivePercentage": {
                    "description": "Percentage (%) of front end thread pool based keep-alive.",
                    "type": "number",
                    "format": "float"
                },
                "frontEndUseSlaTimeInAvailability": {
                    "description": "Switch of whether front end uses SLA time in availability.",
                    "type": "boolean"
                }
            }
        },
        "WritableServiceSettings": {
            "description": "Settings of storage services.",
            "type": "object",
            "properties": {
                "frontEndHttpsListenPort": {
                    "description": "The HTTPs port of the storage service front end.",
                    "type": "integer",
                    "format": "int32"
                },
                "frontEndHttpListenPort": {
                    "description": "The HTTP port of the storage service front end.",
                    "type": "integer",
                    "format": "int32"
                }
            },
            "allOf": [
                {
                    "$ref": "storage.json#/definitions/WritableSettings"
                }
            ]
        },
        "LocalizableString": {
            "description": "Localizable string.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "Value of the string.",
                    "type": "string"
                },
                "localizedValue": {
                    "description": "Localized value of the string.",
                    "type": "string"
                }
            }
        },
        "MetricAvailability": {
            "description": "Metric availability.",
            "type": "object",
            "properties": {
                "timeGrain": {
                    "description": "Time grain.",
                    "type": "string"
                },
                "retention": {
                    "description": "Retention of metric.",
                    "type": "string"
                }
            }
        },
        "AggregateType": {
            "description": "Aggregate type.",
            "readOnly": true,
            "type": "string",
            "enum": [
                "None",
                "Average",
                "Total",
                "Minimum",
                "Maximum",
                "Last"
            ],
            "x-ms-enum": {
                "name": "AggregateType",
                "modelAsString": true
            }
        },
        "MetricUnit": {
            "description": "Metric unit.",
            "type": "string",
            "enum": [
                "Count",
                "Bytes",
                "Seconds",
                "CountPerSecond",
                "BytesPerSecond"
            ],
            "x-ms-enum": {
                "name": "MetricUnit",
                "modelAsString": true
            }
        },
        "MetricDefinition": {
            "description": "Metric definition.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Metric name.",
                    "$ref": "storage.json#/definitions/LocalizableString",
                    "readOnly": true
                },
                "unit": {
                    "description": "Metric unit.",
                    "$ref": "storage.json#/definitions/MetricUnit",
                    "readOnly": true
                },
                "primaryAggregationType": {
                    "description": "Aggregation type of metric.",
                    "$ref": "storage.json#/definitions/AggregateType",
                    "readOnly": true
                },
                "metricAvailabilities": {
                    "description": "Metric availabilities.",
                    "type": "array",
                    "items": {
                        "$ref": "storage.json#/definitions/MetricAvailability"
                    },
                    "readOnly": true
                }
            }
        },
        "Metric": {
            "description": "Metric information.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Metric Name.",
                    "$ref": "storage.json#/definitions/LocalizableString",
                    "readOnly": true
                },
                "metricUnit": {
                    "description": "Metric Unit.",
                    "$ref": "storage.json#/definitions/MetricUnit",
                    "readOnly": true
                },
                "timeGrain": {
                    "description": "Metric time grain.",
                    "type": "string",
                    "readOnly": true
                },
                "startTime": {
                    "description": "Metric start time.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "endTime": {
                    "description": "Metric end time.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "metricValues": {
                    "description": "List of metric values.",
                    "type": "array",
                    "items": {
                        "$ref": "storage.json#/definitions/MetricValue"
                    },
                    "readOnly": true
                }
            }
        },
        "MetricDefinitionList": {
            "description": "Pageable list of metric definitions.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of metric definitions.",
                    "type": "array",
                    "items": {
                        "$ref": "storage.json#/definitions/MetricDefinition"
                    },
                    "readOnly": true
                },
                "nextLink": {
                    "description": "URI to the next page.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "MetricList": {
            "description": "Pageable list of metrics.",
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of metrics.",
                    "type": "array",
                    "items": {
                        "$ref": "storage.json#/definitions/Metric"
                    },
                    "readOnly": true
                },
                "nextLink": {
                    "description": "URI to the next page.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "MetricValue": {
            "description": "Metric value.",
            "properties": {
                "timeStamp": {
                    "description": "Timestamp of metric value.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "average": {
                    "description": "Average value of metric.",
                    "type": "number",
                    "format": "float",
                    "readOnly": true
                },
                "minimum": {
                    "description": "Minimum value of metric.",
                    "type": "number",
                    "format": "float",
                    "readOnly": true
                },
                "maximum": {
                    "description": "Maximum value of metric.",
                    "type": "number",
                    "format": "float",
                    "readOnly": true
                },
                "total": {
                    "description": "Total value of metric.",
                    "type": "number",
                    "format": "float",
                    "readOnly": true
                },
                "count": {
                    "description": "Count of metric values.",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "properties": {
                    "description": "Metric value properties.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "HealthStatus": {
            "readOnly": true,
            "description": "Current health status.",
            "type": "string",
            "enum": [
                "Unknown",
                "Healthy",
                "Warning",
                "Critical"
            ],
            "x-ms-enum": {
                "name": "HealthStatus",
                "modelAsString": true
            }
        },
        "Resource": {
            "description": "Base resource object.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Resource ID.",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Resource Name.",
                    "type": "string",
                    "readOnly": true
                },
                "type": {
                    "description": "Resource type.",
                    "type": "string",
                    "readOnly": true
                },
                "location": {
                    "description": "Resource location.",
                    "type": "string",
                    "readOnly": true
                },
                "tags": {
                    "description": "Resource tags.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "readOnly": true
                }
            },
            "x-ms-azure-resource": true
        },
        "Service": {
            "description": "Storage service.",
            "properties": {
                "version": {
                    "description": "Storage service version.",
                    "type": "string"
                },
                "healthStatus": {
                    "description": "Health status of storage service.",
                    "$ref": "storage.json#/definitions/HealthStatus"
                }
            }
        },
        "Operation": {
            "description": "Describes the supported REST operation.",
            "properties": {
                "name": {
                    "description": "The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service.",
                    "type": "string",
                    "readOnly": true
                },
                "display": {
                    "description": "Contains the localized display information for this particular operation / action.",
                    "$ref": "storage.json#/definitions/Display",
                    "readOnly": true
                }
            }
        },
        "Display": {
            "description": "Contains the localized display information for this particular operation / action.",
            "properties": {
                "provider": {
                    "description": "The localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. It should use Title Casing and begin with \"Microsoft\" for 1st party services. e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute.\"",
                    "type": "string",
                    "readOnly": true
                },
                "resource": {
                    "description": "The localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider.",
                    "type": "string",
                    "readOnly": true
                },
                "operation": {
                    "description": "The localized friendly name for the operation, as it should be shown to the user.",
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "description": "The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise – it will be used in tool tips and detailed views.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "OperationList": {
            "description": "Pageable list of supported operations.",
            "properties": {
                "value": {
                    "description": "List of operations",
                    "type": "array",
                    "items": {
                        "$ref": "storage.json#/definitions/Operation"
                    }
                },
                "nextLink": {
                    "description": "URI to the next page of operations.",
                    "type": "string",
                    "readOnly": true
                }
            }
        }
    },
    "parameters": {
        "ServiceTypeParameter": {
            "description": "The service type.",
            "name": "serviceType",
            "type": "string",
            "in": "path",
            "required": true,
            "enum": [
                "default"
            ],
            "x-ms-enum": {
                "name": "ServiceType",
                "modelAsString": true
            },
            "x-ms-parameter-location": "method"
        },
        "ShareNameParameter": {
            "description": "Share name.",
            "name": "shareName",
            "type": "string",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method"
        },
        "FilterParameter": {
            "description": "Filter string",
            "name": "$filter",
            "type": "string",
            "in": "query",
            "x-ms-parameter-location": "method"
        },
        "LocationParameter": {
            "description": "Resource location.",
            "name": "location",
            "type": "string",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method"
        },
        "SubscriptionIdParameter": {
            "description": "Subscription Id.",
            "name": "subscriptionId",
            "type": "string",
            "in": "path",
            "required": true
        },
        "FarmIdParameter": {
            "description": "Farm Id.",
            "type": "string",
            "name": "farmId",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method"
        },
        "ApiVersionParameter": {
            "description": "REST Api Version.",
            "name": "api-version",
            "type": "string",
            "in": "query",
            "required": true
        },
        "ResourceGroupNameParameter": {
            "description": "Resource group name.",
            "name": "resourceGroupName",
            "type": "string",
            "in": "path",
            "required": true,
            "x-ms-parameter-location": "method"
        },
        "OperationIdParameter": {
            "description": "Operation Id.",
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
        }
    },
    "securityDefinitions": {
        "azure_auth": {
            "type": "oauth2",
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "flow": "implicit",
            "description": "Authorization uses an Azure Active Directory OAuth2 flow.",
            "scopes": {
                "user_impersonation": "impersonate your user account"
            }
        }
    },
    "security": [
        {
            "azure_auth": [
                "user_impersonation"
            ]
        }
    ]
}
