{
  "swagger": "2.0",
  "info": {
    "title": "NginxManagementClient",
    "version": "2023-04-01",
    "description": "// FIXME: (missing-service-description) Add service description",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "NginxCertificates"
    },
    {
      "name": "NginxDeployments"
    },
    {
      "name": "NginxConfigurations"
    }
  ],
  "paths": {
    "/providers/Nginx.NginxPlus/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Nginx.NginxPlus/nginxDeployments": {
      "get": {
        "operationId": "Deployments_List",
        "tags": [
          "NginxDeployments"
        ],
        "description": "List the NGINX deployments resources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NginxDeploymentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_List": {
            "$ref": "./examples/Deployments_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments": {
      "get": {
        "operationId": "Deployments_ListByResourceGroup",
        "tags": [
          "NginxDeployments"
        ],
        "description": "List all NGINX deployments under the specified resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NginxDeploymentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_ListByResourceGroup": {
            "$ref": "./examples/Deployments_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}": {
      "get": {
        "operationId": "Deployments_Get",
        "tags": [
          "NginxDeployments"
        ],
        "description": "Get the NGINX deployment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of targeted NGINX deployment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NginxDeployment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Get": {
            "$ref": "./examples/Deployments_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Deployments_CreateOrUpdate",
        "tags": [
          "NginxDeployments"
        ],
        "description": "Create or update the NGINX deployment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of targeted NGINX deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NginxDeployment"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NginxDeployment' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NginxDeployment"
            }
          },
          "201": {
            "description": "Resource 'NginxDeployment' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NginxDeployment"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Create": {
            "$ref": "./examples/Deployments_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Deployments_Update",
        "tags": [
          "NginxDeployments"
        ],
        "description": "Update the NGINX deployment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of targeted NGINX deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NginxDeploymentUpdateParameters"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NginxDeployment"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Update": {
            "$ref": "./examples/Deployments_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Deployments_Delete",
        "tags": [
          "NginxDeployments"
        ],
        "description": "Delete the NGINX deployment resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of targeted NGINX deployment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deployments_Delete": {
            "$ref": "./examples/Deployments_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/certificates": {
      "get": {
        "operationId": "Certificates_List",
        "tags": [
          "NginxCertificates"
        ],
        "description": "List all certificates of given NGINX deployment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of targeted NGINX deployment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NginxCertificateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Certificates_List": {
            "$ref": "./examples/Certificates_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/certificates/{certificateName}": {
      "get": {
        "operationId": "Certificates_Get",
        "tags": [
          "NginxCertificates"
        ],
        "description": "Get a certificate of given NGINX deployment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of targeted NGINX deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of certificate",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NginxCertificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Certificates_Get": {
            "$ref": "./examples/Certificates_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Certificates_CreateOrUpdate",
        "tags": [
          "NginxCertificates"
        ],
        "description": "Create or update the NGINX certificates for given NGINX deployment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of targeted NGINX deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of certificate",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The certificate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NginxCertificate"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NginxCertificate' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NginxCertificate"
            }
          },
          "201": {
            "description": "Resource 'NginxCertificate' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NginxCertificate"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Certificates_CreateOrUpdate": {
            "$ref": "./examples/Certificates_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Certificates_Delete",
        "tags": [
          "NginxCertificates"
        ],
        "description": "Deletes a certificate from the NGINX deployment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of targeted NGINX deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of certificate",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Certificates_Delete": {
            "$ref": "./examples/Certificates_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/configurations": {
      "get": {
        "operationId": "Configurations_List",
        "tags": [
          "NginxConfigurations"
        ],
        "description": "List the NGINX configuration of given NGINX deployment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of targeted NGINX deployment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NginxConfigurationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Configurations_List": {
            "$ref": "./examples/Configurations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/configurations/{configurationName}": {
      "get": {
        "operationId": "Configurations_Get",
        "tags": [
          "NginxConfigurations"
        ],
        "description": "Get the NGINX configuration of given NGINX deployment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of targeted NGINX deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "The name of configuration, only 'default' is supported value due to the singleton of NGINX conf",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NginxConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Configurations_Get": {
            "$ref": "./examples/Configurations_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Configurations_CreateOrUpdate",
        "tags": [
          "NginxConfigurations"
        ],
        "description": "Create or update the NGINX configuration for given NGINX deployment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of targeted NGINX deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "The name of configuration, only 'default' is supported value due to the singleton of NGINX conf",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The NGINX configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NginxConfiguration"
            },
            "x-ms-client-name": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NginxConfiguration' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NginxConfiguration"
            }
          },
          "201": {
            "description": "Resource 'NginxConfiguration' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NginxConfiguration"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Configurations_CreateOrUpdate": {
            "$ref": "./examples/Configurations_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Configurations_Delete",
        "tags": [
          "NginxConfigurations"
        ],
        "description": "Reset the NGINX configuration of given NGINX deployment to default",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of targeted NGINX deployment",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationName",
            "in": "path",
            "description": "The name of configuration, only 'default' is supported value due to the singleton of NGINX conf",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Configurations_Delete": {
            "$ref": "./examples/Configurations_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Azure.ResourceManager.ResourceSku": {
      "type": "object",
      "description": "The SKU (Stock Keeping Unit) assigned to this resource.",
      "properties": {
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      }
    },
    "ErrorResponseBody": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorResponseBody"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IdentityProperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/IdentityType"
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "Dictionary of <UserIdentityProperties>",
          "additionalProperties": {
            "$ref": "#/definitions/UserIdentityProperties"
          }
        }
      }
    },
    "IdentityType": {
      "type": "string",
      "enum": [
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true
      }
    },
    "NginxCertificate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NginxCertificateProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NginxCertificateListResult": {
      "type": "object",
      "description": "The response of a NginxCertificate list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NginxCertificate items on this page",
          "items": {
            "$ref": "#/definitions/NginxCertificate"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NginxCertificateProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "keyVirtualPath": {
          "type": "string"
        },
        "certificateVirtualPath": {
          "type": "string"
        },
        "keyVaultSecretId": {
          "type": "string"
        }
      }
    },
    "NginxConfiguration": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NginxConfigurationProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NginxConfigurationFile": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "virtualPath": {
          "type": "string"
        }
      }
    },
    "NginxConfigurationListResult": {
      "type": "object",
      "description": "The response of a NginxConfiguration list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NginxConfiguration items on this page",
          "items": {
            "$ref": "#/definitions/NginxConfiguration"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NginxConfigurationPackage": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "protectedFiles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NginxConfigurationProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NginxConfigurationFile"
          },
          "x-ms-identifiers": []
        },
        "protectedFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NginxConfigurationFile"
          },
          "x-ms-identifiers": []
        },
        "package": {
          "$ref": "#/definitions/NginxConfigurationPackage"
        },
        "rootFile": {
          "type": "string"
        }
      }
    },
    "NginxDeployment": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NginxDeploymentProperties",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NginxDeploymentListResult": {
      "type": "object",
      "description": "The response of a NginxDeployment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NginxDeployment items on this page",
          "items": {
            "$ref": "#/definitions/NginxDeployment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NginxDeploymentProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        },
        "nginxVersion": {
          "type": "string",
          "readOnly": true
        },
        "managedResourceGroup": {
          "type": "string",
          "description": "The managed resource group to deploy VNet injection related network resources."
        },
        "networkProfile": {
          "$ref": "#/definitions/NginxNetworkProfile"
        },
        "ipAddress": {
          "type": "string",
          "description": "The IP address of the deployment.",
          "readOnly": true
        },
        "enableDiagnosticsSupport": {
          "type": "boolean"
        },
        "logging": {
          "$ref": "#/definitions/NginxLogging"
        },
        "scalingProperties": {
          "$ref": "#/definitions/NginxDeploymentScalingProperties"
        },
        "userProfile": {
          "$ref": "#/definitions/NginxDeploymentUserProfile"
        }
      }
    },
    "NginxDeploymentScalingProperties": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NginxDeploymentUpdateParameters": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/IdentityProperties"
        },
        "tags": {
          "type": "object",
          "description": "Dictionary of <string>",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceSku"
        },
        "location": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/NginxDeploymentUpdateProperties"
        }
      }
    },
    "NginxDeploymentUpdateProperties": {
      "type": "object",
      "properties": {
        "enableDiagnosticsSupport": {
          "type": "boolean"
        },
        "logging": {
          "$ref": "#/definitions/NginxLogging"
        },
        "scalingProperties": {
          "$ref": "#/definitions/NginxDeploymentScalingProperties"
        },
        "userProfile": {
          "$ref": "#/definitions/NginxDeploymentUserProfile"
        }
      }
    },
    "NginxDeploymentUserProfile": {
      "type": "object",
      "properties": {
        "preferredEmail": {
          "type": "string",
          "description": "The preferred support contact email address of the user used for sending alerts and notification. Can be an empty string or a valid email address.",
          "pattern": "^$|^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
        }
      }
    },
    "NginxFrontendIPConfiguration": {
      "type": "object",
      "properties": {
        "publicIPAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NginxPublicIPAddress"
          }
        },
        "privateIPAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NginxPrivateIPAddress"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NginxLogging": {
      "type": "object",
      "properties": {
        "storageAccount": {
          "$ref": "#/definitions/NginxStorageAccount"
        }
      }
    },
    "NginxNetworkInterfaceConfiguration": {
      "type": "object",
      "properties": {
        "subnetId": {
          "type": "string"
        }
      }
    },
    "NginxNetworkProfile": {
      "type": "object",
      "properties": {
        "frontEndIPConfiguration": {
          "$ref": "#/definitions/NginxFrontendIPConfiguration"
        },
        "networkInterfaceConfiguration": {
          "$ref": "#/definitions/NginxNetworkInterfaceConfiguration"
        }
      }
    },
    "NginxPrivateIPAddress": {
      "type": "object",
      "properties": {
        "privateIPAddress": {
          "type": "string"
        },
        "privateIPAllocationMethod": {
          "$ref": "#/definitions/NginxPrivateIPAllocationMethod"
        },
        "subnetId": {
          "type": "string"
        }
      }
    },
    "NginxPrivateIPAllocationMethod": {
      "type": "string",
      "enum": [
        "Static",
        "Dynamic"
      ],
      "x-ms-enum": {
        "name": "NginxPrivateIPAllocationMethod",
        "modelAsString": true
      }
    },
    "NginxPublicIPAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "NginxStorageAccount": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        }
      }
    },
    "OperationResult": {
      "type": "object",
      "description": "A Nginx.NginxPlus REST API operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}"
        },
        "display": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationDisplay",
          "description": "The object that represents the operation."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Accepted",
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleted",
        "NotSpecified"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "ResourceProviderDefaultErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorResponseBody"
        }
      }
    },
    "UserIdentityProperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-04-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_04_01",
            "value": "2023-04-01",
            "description": "The 2023-04-01 API version."
          }
        ]
      }
    }
  },
  "parameters": {}
}
