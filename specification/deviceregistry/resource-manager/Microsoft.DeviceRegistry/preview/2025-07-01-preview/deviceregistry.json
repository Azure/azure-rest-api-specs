{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.DeviceRegistry management service",
    "version": "2025-07-01-preview",
    "description": "Microsoft.DeviceRegistry Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "OperationStatus"
    },
    {
      "name": "Assets"
    },
    {
      "name": "AssetEndpointProfiles"
    },
    {
      "name": "BillingContainers"
    },
    {
      "name": "Namespaces"
    },
    {
      "name": "NamespaceAssets"
    },
    {
      "name": "NamespaceDevices"
    },
    {
      "name": "NamespaceDiscoveredAssets"
    },
    {
      "name": "NamespaceDiscoveredDevices"
    },
    {
      "name": "SchemaRegistries"
    },
    {
      "name": "Schemas"
    },
    {
      "name": "SchemaVersions"
    }
  ],
  "paths": {
    "/providers/Microsoft.DeviceRegistry/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_Operations": {
            "$ref": "./examples/List_Operations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/assetEndpointProfiles": {
      "get": {
        "operationId": "AssetEndpointProfiles_ListBySubscription",
        "tags": [
          "AssetEndpointProfiles"
        ],
        "description": "List AssetEndpointProfile resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfileListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_AssetEndpointProfiles_BySubscription": {
            "$ref": "./examples/List_AssetEndpointProfiles_BySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/assets": {
      "get": {
        "operationId": "Assets_ListBySubscription",
        "tags": [
          "Assets"
        ],
        "description": "List Asset resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_Assets_BySubscription": {
            "$ref": "./examples/List_Assets_BySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/billingContainers": {
      "get": {
        "operationId": "BillingContainers_ListBySubscription",
        "tags": [
          "BillingContainers"
        ],
        "description": "List BillingContainer resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BillingContainerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_BillingContainers_BySubscription": {
            "$ref": "./examples/List_BillingContainers_BySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/billingContainers/{billingContainerName}": {
      "get": {
        "operationId": "BillingContainers_Get",
        "tags": [
          "BillingContainers"
        ],
        "description": "Get a BillingContainer",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "billingContainerName",
            "in": "path",
            "description": "Name of the billing container.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[0-9a-zA-Z][a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BillingContainer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_BillingContainer": {
            "$ref": "./examples/Get_BillingContainer.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/locations/{location}/operationStatuses/{operationId}": {
      "get": {
        "operationId": "OperationStatus_Get",
        "tags": [
          "OperationStatus"
        ],
        "description": "Returns the current status of an async operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationStatusResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_OperationStatus": {
            "$ref": "./examples/Get_OperationStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/namespaces": {
      "get": {
        "operationId": "Namespaces_ListBySubscription",
        "tags": [
          "Namespaces"
        ],
        "description": "List Namespace resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_Namespaces_BySubscription": {
            "$ref": "./examples/List_Namespace_BySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/schemaRegistries": {
      "get": {
        "operationId": "SchemaRegistries_ListBySubscription",
        "tags": [
          "SchemaRegistries"
        ],
        "description": "List SchemaRegistry resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaRegistryListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_SchemaRegistries_Subscription": {
            "$ref": "./examples/List_SchemaRegistries_BySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assetEndpointProfiles": {
      "get": {
        "operationId": "AssetEndpointProfiles_ListByResourceGroup",
        "tags": [
          "AssetEndpointProfiles"
        ],
        "description": "List AssetEndpointProfile resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfileListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_AssetEndpointProfiles_ByResourceGroup": {
            "$ref": "./examples/List_AssetEndpointProfiles_ByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assetEndpointProfiles/{assetEndpointProfileName}": {
      "get": {
        "operationId": "AssetEndpointProfiles_Get",
        "tags": [
          "AssetEndpointProfiles"
        ],
        "description": "Get a AssetEndpointProfile",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetEndpointProfileName",
            "in": "path",
            "description": "Asset Endpoint Profile name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_AssetEndpointProfile": {
            "$ref": "./examples/Get_AssetEndpointProfile.json"
          },
          "Get_AssetEndpointProfile_With_SyncStatus": {
            "$ref": "./examples/Get_AssetEndpointProfile_With_SyncStatus.json"
          }
        }
      },
      "put": {
        "operationId": "AssetEndpointProfiles_CreateOrReplace",
        "tags": [
          "AssetEndpointProfiles"
        ],
        "description": "Create a AssetEndpointProfile",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetEndpointProfileName",
            "in": "path",
            "description": "Asset Endpoint Profile name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AssetEndpointProfile' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          },
          "201": {
            "description": "Resource 'AssetEndpointProfile' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrReplace_AssetEndpointProfile": {
            "$ref": "./examples/CreateOrReplace_AssetEndpointProfile.json"
          },
          "CreateOrReplace_AssetEndpointProfile_With_DiscoveredAepRef": {
            "$ref": "./examples/CreateOrReplace_AssetEndpointProfile_With_DiscoveredAepRef.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "AssetEndpointProfiles_Update",
        "tags": [
          "AssetEndpointProfiles"
        ],
        "description": "Update a AssetEndpointProfile",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetEndpointProfileName",
            "in": "path",
            "description": "Asset Endpoint Profile name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfileUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update_AssetEndpointProfile": {
            "$ref": "./examples/Update_AssetEndpointProfile.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AssetEndpointProfiles_Delete",
        "tags": [
          "AssetEndpointProfiles"
        ],
        "description": "Delete a AssetEndpointProfile",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetEndpointProfileName",
            "in": "path",
            "description": "Asset Endpoint Profile name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete_AssetEndpointProfile": {
            "$ref": "./examples/Delete_AssetEndpointProfile.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assets": {
      "get": {
        "operationId": "Assets_ListByResourceGroup",
        "tags": [
          "Assets"
        ],
        "description": "List Asset resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_Assets_ByResourceGroup": {
            "$ref": "./examples/List_Assets_ByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assets/{assetName}": {
      "get": {
        "operationId": "Assets_Get",
        "tags": [
          "Assets"
        ],
        "description": "Get a Asset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetName",
            "in": "path",
            "description": "Asset name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_Asset": {
            "$ref": "./examples/Get_Asset.json"
          },
          "Get_Asset_With_SyncStatus": {
            "$ref": "./examples/Get_Asset_With_SyncStatus.json"
          }
        }
      },
      "put": {
        "operationId": "Assets_CreateOrReplace",
        "tags": [
          "Assets"
        ],
        "description": "Create a Asset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetName",
            "in": "path",
            "description": "Asset name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Asset' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "201": {
            "description": "Resource 'Asset' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Asset"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrReplace_Asset_With_DiscoveredAssetRefs": {
            "$ref": "./examples/CreateOrReplace_Asset_With_DiscoveredAssetRef.json"
          },
          "CreateOrReplace_Asset_With_ExternalAssetId": {
            "$ref": "./examples/CreateOrReplace_Asset_With_ExternalAssetId.json"
          },
          "CreateOrReplace_Asset_Without_DisplayName": {
            "$ref": "./examples/CreateOrReplace_Asset_Without_DisplayName.json"
          },
          "CreateOrReplace_Asset_Without_ExternalAssetId": {
            "$ref": "./examples/CreateOrReplace_Asset_Without_ExternalAssetId.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Assets_Update",
        "tags": [
          "Assets"
        ],
        "description": "Update a Asset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetName",
            "in": "path",
            "description": "Asset name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update_Asset": {
            "$ref": "./examples/Update_Asset.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Assets_Delete",
        "tags": [
          "Assets"
        ],
        "description": "Delete a Asset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "assetName",
            "in": "path",
            "description": "Asset name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete_Asset": {
            "$ref": "./examples/Delete_Asset.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/namespaces": {
      "get": {
        "operationId": "Namespaces_ListByResourceGroup",
        "tags": [
          "Namespaces"
        ],
        "description": "List Namespace resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_Namespaces_ByResourceGroup": {
            "$ref": "./examples/List_Namespace_ByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/namespaces/{namespaceName}": {
      "get": {
        "operationId": "Namespaces_Get",
        "tags": [
          "Namespaces"
        ],
        "description": "Get a Namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_Namespace": {
            "$ref": "./examples/Get_Namespace.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrReplace",
        "tags": [
          "Namespaces"
        ],
        "description": "Create a Namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Namespace' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          },
          "201": {
            "description": "Resource 'Namespace' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Namespace"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrReplace_Namespace_With_Endpoints": {
            "$ref": "./examples/CreateOrReplace_Namespace_With_Endpoints.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Namespaces_Update",
        "tags": [
          "Namespaces"
        ],
        "description": "Update a Namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update_Namespace_Endpoints": {
            "$ref": "./examples/Update_Namespace_Endpoints.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Namespaces_Delete",
        "tags": [
          "Namespaces"
        ],
        "description": "Delete a Namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete_Namespace": {
            "$ref": "./examples/Delete_Namespace.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/namespaces/{namespaceName}/assets": {
      "get": {
        "operationId": "NamespaceAssets_ListByResourceGroup",
        "tags": [
          "NamespaceAssets"
        ],
        "description": "List NamespaceAsset resources by Namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceAssetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_NamespaceAssets_ByResourceGroup": {
            "$ref": "./examples/List_NamespaceAssets_ByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/namespaces/{namespaceName}/assets/{assetName}": {
      "get": {
        "operationId": "NamespaceAssets_Get",
        "tags": [
          "NamespaceAssets"
        ],
        "description": "Get a NamespaceAsset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "assetName",
            "in": "path",
            "description": "The name of the asset.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceAsset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_NamespaceAsset": {
            "$ref": "./examples/Get_NamespaceAsset.json"
          }
        }
      },
      "put": {
        "operationId": "NamespaceAssets_CreateOrReplace",
        "tags": [
          "NamespaceAssets"
        ],
        "description": "Create a NamespaceAsset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "assetName",
            "in": "path",
            "description": "The name of the asset.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NamespaceAsset' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NamespaceAsset"
            }
          },
          "201": {
            "description": "Resource 'NamespaceAsset' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NamespaceAsset"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrReplace_NamespaceAsset": {
            "$ref": "./examples/CreateOrReplace_NamespaceAsset.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NamespaceAssets_Update",
        "tags": [
          "NamespaceAssets"
        ],
        "description": "Update a NamespaceAsset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "assetName",
            "in": "path",
            "description": "The name of the asset.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceAssetUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceAsset"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update_NamespaceAssets": {
            "$ref": "./examples/Update_NamespaceAsset.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NamespaceAssets_Delete",
        "tags": [
          "NamespaceAssets"
        ],
        "description": "Delete a NamespaceAsset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "assetName",
            "in": "path",
            "description": "The name of the asset.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete_NamespaceAsset": {
            "$ref": "./examples/Delete_NamespaceAsset.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/namespaces/{namespaceName}/devices": {
      "get": {
        "operationId": "NamespaceDevices_ListByResourceGroup",
        "tags": [
          "NamespaceDevices"
        ],
        "description": "List NamespaceDevice resources by Namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceDeviceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_NamespaceDevices_ByResourceGroup": {
            "$ref": "./examples/List_NamespaceDevices_ByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/namespaces/{namespaceName}/devices/{deviceName}": {
      "get": {
        "operationId": "NamespaceDevices_Get",
        "tags": [
          "NamespaceDevices"
        ],
        "description": "Get a NamespaceDevice",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[0-9a-zA-Z][a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get NamespaceDevice with Endpoint Error Status": {
            "$ref": "./examples/Get_NamespaceDeviceWithEndpointErrorStatus.json"
          },
          "Get_NamespaceDevice": {
            "$ref": "./examples/Get_NamespaceDevice.json"
          }
        }
      },
      "put": {
        "operationId": "NamespaceDevices_CreateOrReplace",
        "tags": [
          "NamespaceDevices"
        ],
        "description": "Create a NamespaceDevice",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[0-9a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NamespaceDevice' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NamespaceDevice"
            }
          },
          "201": {
            "description": "Resource 'NamespaceDevice' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NamespaceDevice"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create edge enabled device with UsernamesPassword inbound authentication.": {
            "$ref": "./examples/CreateOrReplace_NamespaceDevice_Edge_UsernamePass.json"
          },
          "Create edge enabled device with anonymous host authentication.": {
            "$ref": "./examples/CreateOrReplace_NamespaceDevice_Edge_Anonymous.json"
          },
          "Create edge enabled device with x509 inbound authentication.": {
            "$ref": "./examples/CreateOrReplace_NamespaceDevice_Edge_x509.json"
          },
          "CreateOrReplace_NamespaceDevices": {
            "$ref": "./examples/CreateOrReplace_NamespaceDevice.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NamespaceDevices_Update",
        "tags": [
          "NamespaceDevices"
        ],
        "description": "Update a NamespaceDevice",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[0-9a-zA-Z][a-zA-Z0-9-]*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceDeviceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceDevice"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update_NamespaceDevices": {
            "$ref": "./examples/Update_NamespaceDevice.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NamespaceDevices_Delete",
        "tags": [
          "NamespaceDevices"
        ],
        "description": "Delete a NamespaceDevice",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[0-9a-zA-Z][a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete_NamespaceDevice": {
            "$ref": "./examples/Delete_NamespaceDevice.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/namespaces/{namespaceName}/discoveredAssets": {
      "get": {
        "operationId": "NamespaceDiscoveredAssets_ListByResourceGroup",
        "tags": [
          "NamespaceDiscoveredAssets"
        ],
        "description": "List NamespaceDiscoveredAsset resources by Namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredAssetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_NamespaceDiscoveredAssets_ByResourceGroup": {
            "$ref": "./examples/List_NamespaceDiscoveredAssets_ByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/namespaces/{namespaceName}/discoveredAssets/{discoveredAssetName}": {
      "get": {
        "operationId": "NamespaceDiscoveredAssets_Get",
        "tags": [
          "NamespaceDiscoveredAssets"
        ],
        "description": "Get a NamespaceDiscoveredAsset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "discoveredAssetName",
            "in": "path",
            "description": "The name of the discovered asset.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredAsset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_NamespaceDiscoveredAsset": {
            "$ref": "./examples/Get_NamespaceDiscoveredAsset.json"
          }
        }
      },
      "put": {
        "operationId": "NamespaceDiscoveredAssets_CreateOrReplace",
        "tags": [
          "NamespaceDiscoveredAssets"
        ],
        "description": "Create a NamespaceDiscoveredAsset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "discoveredAssetName",
            "in": "path",
            "description": "The name of the discovered asset.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NamespaceDiscoveredAsset' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredAsset"
            }
          },
          "201": {
            "description": "Resource 'NamespaceDiscoveredAsset' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredAsset"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrReplace_NamespaceDiscoveredAsset": {
            "$ref": "./examples/CreateOrReplace_NamespaceDiscoveredAsset.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NamespaceDiscoveredAssets_Update",
        "tags": [
          "NamespaceDiscoveredAssets"
        ],
        "description": "Update a NamespaceDiscoveredAsset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "discoveredAssetName",
            "in": "path",
            "description": "The name of the discovered asset.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredAssetUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredAsset"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update_NamespaceDiscoveredAsset": {
            "$ref": "./examples/Update_NamespaceDiscoveredAsset.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NamespaceDiscoveredAssets_Delete",
        "tags": [
          "NamespaceDiscoveredAssets"
        ],
        "description": "Delete a NamespaceDiscoveredAsset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "discoveredAssetName",
            "in": "path",
            "description": "The name of the discovered asset.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete_NamespaceDiscoveredAsset": {
            "$ref": "./examples/Delete_NamespaceDiscoveredAsset.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/namespaces/{namespaceName}/discoveredDevices": {
      "get": {
        "operationId": "NamespaceDiscoveredDevices_ListByResourceGroup",
        "tags": [
          "NamespaceDiscoveredDevices"
        ],
        "description": "List NamespaceDiscoveredDevice resources by Namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredDeviceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_NamespaceDiscoveredDevices_ByResourceGroup": {
            "$ref": "./examples/List_NamespaceDiscoveredDevices_ByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/namespaces/{namespaceName}/discoveredDevices/{discoveredDeviceName}": {
      "get": {
        "operationId": "NamespaceDiscoveredDevices_Get",
        "tags": [
          "NamespaceDiscoveredDevices"
        ],
        "description": "Get a NamespaceDiscoveredDevice",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "discoveredDeviceName",
            "in": "path",
            "description": "The name of the discovered device.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_NamespaceDiscoveredDevice": {
            "$ref": "./examples/Get_NamespaceDiscoveredDevice.json"
          }
        }
      },
      "put": {
        "operationId": "NamespaceDiscoveredDevices_CreateOrReplace",
        "tags": [
          "NamespaceDiscoveredDevices"
        ],
        "description": "Create a NamespaceDiscoveredDevice",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "discoveredDeviceName",
            "in": "path",
            "description": "The name of the discovered device.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NamespaceDiscoveredDevice' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredDevice"
            }
          },
          "201": {
            "description": "Resource 'NamespaceDiscoveredDevice' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredDevice"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrReplace_NamespaceDiscoveredDevice": {
            "$ref": "./examples/CreateOrReplace_NamespaceDiscoveredDevice.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "NamespaceDiscoveredDevices_Update",
        "tags": [
          "NamespaceDiscoveredDevices"
        ],
        "description": "Update a NamespaceDiscoveredDevice",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "discoveredDeviceName",
            "in": "path",
            "description": "The name of the discovered device.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredDeviceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceDiscoveredDevice"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update_NamespaceDiscoveredDevice": {
            "$ref": "./examples/Update_NamespaceDiscoveredDevice.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "NamespaceDiscoveredDevices_Delete",
        "tags": [
          "NamespaceDiscoveredDevices"
        ],
        "description": "Delete a NamespaceDiscoveredDevice",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "discoveredDeviceName",
            "in": "path",
            "description": "The name of the discovered device.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete_NamespaceDiscoveredDevice": {
            "$ref": "./examples/Delete_NamespaceDiscoveredDevice.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/namespaces/{namespaceName}/migrate": {
      "post": {
        "operationId": "Namespaces_Migrate",
        "tags": [
          "Namespaces"
        ],
        "description": "Migrate the resources into Namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The name of the namespace.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceMigrateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NamespaceMigrateResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Namespace Migrate": {
            "$ref": "./examples/Migrate_Assets_Namespace.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/schemaRegistries": {
      "get": {
        "operationId": "SchemaRegistries_ListByResourceGroup",
        "tags": [
          "SchemaRegistries"
        ],
        "description": "List SchemaRegistry resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaRegistryListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_SchemaRegistries_ResourceGroup": {
            "$ref": "./examples/List_SchemaRegistries_ByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/schemaRegistries/{schemaRegistryName}": {
      "get": {
        "operationId": "SchemaRegistries_Get",
        "tags": [
          "SchemaRegistries"
        ],
        "description": "Get a SchemaRegistry",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaRegistryName",
            "in": "path",
            "description": "Schema registry name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaRegistry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_SchemaRegistry": {
            "$ref": "./examples/Get_SchemaRegistry.json"
          }
        }
      },
      "put": {
        "operationId": "SchemaRegistries_CreateOrReplace",
        "tags": [
          "SchemaRegistries"
        ],
        "description": "Create a SchemaRegistry",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaRegistryName",
            "in": "path",
            "description": "Schema registry name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaRegistry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SchemaRegistry' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SchemaRegistry"
            }
          },
          "201": {
            "description": "Resource 'SchemaRegistry' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SchemaRegistry"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrReplace_SchemaRegistry": {
            "$ref": "./examples/CreateOrReplace_SchemaRegistry.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "SchemaRegistries_Update",
        "tags": [
          "SchemaRegistries"
        ],
        "description": "Update a SchemaRegistry",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaRegistryName",
            "in": "path",
            "description": "Schema registry name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaRegistryUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaRegistry"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update_SchemaRegistry": {
            "$ref": "./examples/Update_SchemaRegistry.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SchemaRegistries_Delete",
        "tags": [
          "SchemaRegistries"
        ],
        "description": "Delete a SchemaRegistry",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaRegistryName",
            "in": "path",
            "description": "Schema registry name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete_SchemaRegistry": {
            "$ref": "./examples/Delete_SchemaRegistry.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/schemaRegistries/{schemaRegistryName}/schemas": {
      "get": {
        "operationId": "Schemas_ListBySchemaRegistry",
        "tags": [
          "Schemas"
        ],
        "description": "List Schema resources by SchemaRegistry",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaRegistryName",
            "in": "path",
            "description": "Schema registry name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_Schemas_SchemaRegistry": {
            "$ref": "./examples/List_Schemas_BySchemaRegistry.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/schemaRegistries/{schemaRegistryName}/schemas/{schemaName}": {
      "get": {
        "operationId": "Schemas_Get",
        "tags": [
          "Schemas"
        ],
        "description": "Get a Schema",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaRegistryName",
            "in": "path",
            "description": "Schema registry name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Schemas_Get": {
            "$ref": "./examples/Get_Schema.json"
          }
        }
      },
      "put": {
        "operationId": "Schemas_CreateOrReplace",
        "tags": [
          "Schemas"
        ],
        "description": "Create a Schema",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaRegistryName",
            "in": "path",
            "description": "Schema registry name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Schema' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          },
          "201": {
            "description": "Resource 'Schema' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Schema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrReplace_Schema": {
            "$ref": "./examples/CreateOrReplace_Schema.json"
          }
        }
      },
      "delete": {
        "operationId": "Schemas_Delete",
        "tags": [
          "Schemas"
        ],
        "description": "Delete a Schema",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaRegistryName",
            "in": "path",
            "description": "Schema registry name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete_Schema": {
            "$ref": "./examples/Delete_Schema.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/schemaRegistries/{schemaRegistryName}/schemas/{schemaName}/schemaVersions": {
      "get": {
        "operationId": "SchemaVersions_ListBySchema",
        "tags": [
          "SchemaVersions"
        ],
        "description": "List SchemaVersion resources by Schema",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaRegistryName",
            "in": "path",
            "description": "Schema registry name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List_SchemaVersions_Schema": {
            "$ref": "./examples/List_SchemaVersions_BySchema.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/schemaRegistries/{schemaRegistryName}/schemas/{schemaName}/schemaVersions/{schemaVersionName}": {
      "get": {
        "operationId": "SchemaVersions_Get",
        "tags": [
          "SchemaVersions"
        ],
        "description": "Get a SchemaVersion",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaRegistryName",
            "in": "path",
            "description": "Schema registry name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "Schema version name parameter.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 10,
            "pattern": "^[0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get_SchemaVersion": {
            "$ref": "./examples/Get_SchemaVersion.json"
          }
        }
      },
      "put": {
        "operationId": "SchemaVersions_CreateOrReplace",
        "tags": [
          "SchemaVersions"
        ],
        "description": "Create a SchemaVersion",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaRegistryName",
            "in": "path",
            "description": "Schema registry name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "Schema version name parameter.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 10,
            "pattern": "^[0-9]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SchemaVersion' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SchemaVersion"
            }
          },
          "201": {
            "description": "Resource 'SchemaVersion' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SchemaVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrReplace_SchemaVersion": {
            "$ref": "./examples/CreateOrReplace_SchemaVersion.json"
          }
        }
      },
      "delete": {
        "operationId": "SchemaVersions_Delete",
        "tags": [
          "SchemaVersions"
        ],
        "description": "Delete a SchemaVersion",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "schemaRegistryName",
            "in": "path",
            "description": "Schema registry name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "Schema name parameter.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 64,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "schemaVersionName",
            "in": "path",
            "description": "Schema version name parameter.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 10,
            "pattern": "^[0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete_SchemaVersion": {
            "$ref": "./examples/Delete_SchemaVersion.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Asset": {
      "type": "object",
      "description": "Asset definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AssetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AssetEndpointProfile": {
      "type": "object",
      "description": "Asset Endpoint Profile definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AssetEndpointProfileProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AssetEndpointProfileListResult": {
      "type": "object",
      "description": "The response of a AssetEndpointProfile list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AssetEndpointProfile items on this page",
          "items": {
            "$ref": "#/definitions/AssetEndpointProfile"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AssetEndpointProfileProperties": {
      "type": "object",
      "description": "Defines the Asset Endpoint Profile properties.",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Globally unique, immutable, non-reusable id.",
          "readOnly": true
        },
        "targetAddress": {
          "type": "string",
          "format": "uri",
          "description": "The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration."
        },
        "endpointProfileType": {
          "type": "string",
          "description": "Defines the configuration for the connector type that is being used with the endpoint profile."
        },
        "authentication": {
          "$ref": "#/definitions/Authentication",
          "description": "Defines the client authentication mechanism to the server."
        },
        "additionalConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF)."
        },
        "discoveredAssetEndpointProfileRef": {
          "type": "string",
          "description": "Reference to a discovered asset endpoint profile. Populated only if the asset endpoint profile has been created from discovery flow. Discovered asset endpoint profile name must be provided.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "status": {
          "$ref": "#/definitions/AssetEndpointProfileStatus",
          "description": "Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "targetAddress",
        "endpointProfileType"
      ]
    },
    "AssetEndpointProfileStatus": {
      "type": "object",
      "description": "Defines the asset endpoint profile status properties.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Array object to transfer and persist errors that originate from the Edge.",
          "items": {
            "$ref": "#/definitions/AssetEndpointProfileStatusError"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "AssetEndpointProfileStatusError": {
      "type": "object",
      "description": "Defines the asset endpoint profile status error properties.",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Error code for classification of errors (ex: 400, 404, 500, etc.).",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Human readable helpful error message to provide additional context for error (ex: “targetAddress 'foo' is not a valid url”).",
          "readOnly": true
        }
      }
    },
    "AssetEndpointProfileUpdate": {
      "type": "object",
      "description": "The type used for update operations of the AssetEndpointProfile.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AssetEndpointProfileUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AssetEndpointProfileUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the AssetEndpointProfile.",
      "properties": {
        "targetAddress": {
          "type": "string",
          "format": "uri",
          "description": "The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration."
        },
        "endpointProfileType": {
          "type": "string",
          "description": "Defines the configuration for the connector type that is being used with the endpoint profile."
        },
        "authentication": {
          "$ref": "#/definitions/AuthenticationUpdate",
          "description": "Defines the client authentication mechanism to the server."
        },
        "additionalConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF)."
        }
      }
    },
    "AssetListResult": {
      "type": "object",
      "description": "The response of a Asset list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Asset items on this page",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AssetProperties": {
      "type": "object",
      "description": "Defines the asset properties.",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Globally unique, immutable, non-reusable id.",
          "readOnly": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Enabled/Disabled status of the asset."
        },
        "externalAssetId": {
          "type": "string",
          "description": "Asset id provided by the customer.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable display name."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the asset."
        },
        "assetEndpointProfileRef": {
          "type": "string",
          "description": "A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must provide asset endpoint profile name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "An integer that is incremented each time the resource is modified.",
          "readOnly": true
        },
        "manufacturer": {
          "type": "string",
          "description": "Asset manufacturer name."
        },
        "manufacturerUri": {
          "type": "string",
          "description": "Asset manufacturer URI."
        },
        "model": {
          "type": "string",
          "description": "Asset model name."
        },
        "productCode": {
          "type": "string",
          "description": "Asset product code."
        },
        "hardwareRevision": {
          "type": "string",
          "description": "Revision number of the hardware."
        },
        "softwareRevision": {
          "type": "string",
          "description": "Revision number of the software."
        },
        "documentationUri": {
          "type": "string",
          "description": "Reference to the documentation."
        },
        "serialNumber": {
          "type": "string",
          "description": "Asset serial number."
        },
        "attributes": {
          "type": "object",
          "description": "A set of key-value pairs that contain custom attributes set by the customer.",
          "additionalProperties": {}
        },
        "discoveredAssetRefs": {
          "type": "array",
          "description": "Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered asset names must be provided.",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "defaultDatasetsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here."
        },
        "defaultEventsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here."
        },
        "defaultTopic": {
          "$ref": "#/definitions/Topic",
          "description": "Object that describes the default topic information for the asset."
        },
        "datasets": {
          "type": "array",
          "description": "Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.",
          "items": {
            "$ref": "#/definitions/Dataset"
          },
          "x-ms-identifiers": []
        },
        "events": {
          "type": "array",
          "description": "Array of events that are part of the asset. Each event can have per-event configuration.",
          "items": {
            "$ref": "#/definitions/Event"
          },
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/AssetStatus",
          "description": "Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "assetEndpointProfileRef"
      ]
    },
    "AssetStatus": {
      "type": "object",
      "description": "Defines the asset status properties.",
      "properties": {
        "errors": {
          "type": "array",
          "description": "Array object to transfer and persist errors that originate from the Edge.",
          "items": {
            "$ref": "#/definitions/AssetStatusError"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "A read only incremental counter indicating the number of times the configuration has been modified from the perspective of the current actual (Edge) state of the Asset. Edge would be the only writer of this value and would sync back up to the cloud. In steady state, this should equal version.",
          "readOnly": true
        },
        "datasets": {
          "type": "array",
          "description": "Array of dataset statuses that describe the status of each dataset.",
          "items": {
            "$ref": "#/definitions/AssetStatusDataset"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "events": {
          "type": "array",
          "description": "Array of event statuses that describe the status of each event.",
          "items": {
            "$ref": "#/definitions/AssetStatusEvent"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "AssetStatusDataset": {
      "type": "object",
      "description": "Defines the asset status dataset properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the dataset. Must be unique within the status.datasets array. This name is used to correlate between the spec and status dataset information.",
          "readOnly": true
        },
        "messageSchemaReference": {
          "$ref": "#/definitions/MessageSchemaReference",
          "description": "The message schema reference object.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "AssetStatusError": {
      "type": "object",
      "description": "Defines the asset status error properties.",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Error code for classification of errors (ex: 400, 404, 500, etc.).",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Human readable helpful error message to provide additional context for error (ex: “capability Id 'foo' does not exist”).",
          "readOnly": true
        }
      }
    },
    "AssetStatusEvent": {
      "type": "object",
      "description": "Defines the asset status event properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the event. Must be unique within the status.events array. This name is used to correlate between the spec and status event information.",
          "readOnly": true
        },
        "messageSchemaReference": {
          "$ref": "#/definitions/MessageSchemaReference",
          "description": "The message schema reference object.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "AssetUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Asset.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AssetUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AssetUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Asset.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enabled/Disabled status of the asset."
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable display name."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the asset."
        },
        "manufacturer": {
          "type": "string",
          "description": "Asset manufacturer name."
        },
        "manufacturerUri": {
          "type": "string",
          "description": "Asset manufacturer URI."
        },
        "model": {
          "type": "string",
          "description": "Asset model name."
        },
        "productCode": {
          "type": "string",
          "description": "Asset product code."
        },
        "hardwareRevision": {
          "type": "string",
          "description": "Revision number of the hardware."
        },
        "softwareRevision": {
          "type": "string",
          "description": "Revision number of the software."
        },
        "documentationUri": {
          "type": "string",
          "description": "Reference to the documentation."
        },
        "serialNumber": {
          "type": "string",
          "description": "Asset serial number."
        },
        "attributes": {
          "type": "object",
          "description": "A set of key-value pairs that contain custom attributes set by the customer.",
          "additionalProperties": {}
        },
        "defaultDatasetsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here."
        },
        "defaultEventsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here."
        },
        "defaultTopic": {
          "$ref": "#/definitions/TopicUpdate",
          "description": "Object that describes the default topic information for the asset."
        },
        "datasets": {
          "type": "array",
          "description": "Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.",
          "items": {
            "$ref": "#/definitions/Dataset"
          },
          "x-ms-identifiers": []
        },
        "events": {
          "type": "array",
          "description": "Array of events that are part of the asset. Each event can have per-event configuration.",
          "items": {
            "$ref": "#/definitions/Event"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Authentication": {
      "type": "object",
      "description": "Definition of the client authentication mechanism to the server.",
      "properties": {
        "method": {
          "type": "string",
          "description": "Defines the method to authenticate the user of the client at the server.",
          "default": "Certificate",
          "enum": [
            "Anonymous",
            "Certificate",
            "UsernamePassword"
          ],
          "x-ms-enum": {
            "name": "AuthenticationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Anonymous",
                "value": "Anonymous",
                "description": "The user authentication method is anonymous."
              },
              {
                "name": "Certificate",
                "value": "Certificate",
                "description": "The user authentication method is an x509 certificate."
              },
              {
                "name": "UsernamePassword",
                "value": "UsernamePassword",
                "description": "The user authentication method is a username and password."
              }
            ]
          }
        },
        "usernamePasswordCredentials": {
          "$ref": "#/definitions/UsernamePasswordCredentials",
          "description": "Defines the username and password references when UsernamePassword user authentication mode is selected."
        },
        "x509Credentials": {
          "$ref": "#/definitions/X509Credentials",
          "description": "Defines the certificate reference when Certificate user authentication mode is selected."
        }
      },
      "required": [
        "method"
      ]
    },
    "AuthenticationMethod": {
      "type": "string",
      "description": "The method to authenticate the user of the client at the server.",
      "enum": [
        "Anonymous",
        "Certificate",
        "UsernamePassword"
      ],
      "x-ms-enum": {
        "name": "AuthenticationMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "Anonymous",
            "value": "Anonymous",
            "description": "The user authentication method is anonymous."
          },
          {
            "name": "Certificate",
            "value": "Certificate",
            "description": "The user authentication method is an x509 certificate."
          },
          {
            "name": "UsernamePassword",
            "value": "UsernamePassword",
            "description": "The user authentication method is a username and password."
          }
        ]
      }
    },
    "AuthenticationUpdate": {
      "type": "object",
      "description": "Definition of the client authentication mechanism to the server.",
      "properties": {
        "method": {
          "type": "string",
          "description": "Defines the method to authenticate the user of the client at the server.",
          "default": "Certificate",
          "enum": [
            "Anonymous",
            "Certificate",
            "UsernamePassword"
          ],
          "x-ms-enum": {
            "name": "AuthenticationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Anonymous",
                "value": "Anonymous",
                "description": "The user authentication method is anonymous."
              },
              {
                "name": "Certificate",
                "value": "Certificate",
                "description": "The user authentication method is an x509 certificate."
              },
              {
                "name": "UsernamePassword",
                "value": "UsernamePassword",
                "description": "The user authentication method is a username and password."
              }
            ]
          }
        },
        "usernamePasswordCredentials": {
          "$ref": "#/definitions/UsernamePasswordCredentialsUpdate",
          "description": "Defines the username and password references when UsernamePassword user authentication mode is selected."
        },
        "x509Credentials": {
          "$ref": "#/definitions/X509CredentialsUpdate",
          "description": "Defines the certificate reference when Certificate user authentication mode is selected."
        }
      }
    },
    "BillingContainer": {
      "type": "object",
      "description": "billingContainer Model as Azure resource whose sole purpose is to keep track of billables resources under a subscription.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BillingContainerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "Resource ETag",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BillingContainerListResult": {
      "type": "object",
      "description": "The response of a BillingContainer list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BillingContainer items on this page",
          "items": {
            "$ref": "#/definitions/BillingContainer"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BillingContainerProperties": {
      "type": "object",
      "description": "Defines the billingContainer properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "BrokerStateStoreDestinationConfiguration": {
      "type": "object",
      "description": "The configuration for a MQTT broker state store destination.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The MQTT broker state store destination key."
        }
      },
      "required": [
        "key"
      ]
    },
    "DataPoint": {
      "type": "object",
      "description": "Defines the data point properties.",
      "properties": {
        "observabilityMode": {
          "type": "string",
          "description": "An indication of how the data point should be mapped to OpenTelemetry.",
          "default": "None",
          "enum": [
            "None",
            "Counter",
            "Gauge",
            "Histogram",
            "Log"
          ],
          "x-ms-enum": {
            "name": "DataPointObservabilityMode",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No mapping to OpenTelemetry."
              },
              {
                "name": "Counter",
                "value": "Counter",
                "description": "Map as counter to OpenTelemetry."
              },
              {
                "name": "Gauge",
                "value": "Gauge",
                "description": "Map as gauge to OpenTelemetry."
              },
              {
                "name": "Histogram",
                "value": "Histogram",
                "description": "Map as histogram to OpenTelemetry."
              },
              {
                "name": "Log",
                "value": "Log",
                "description": "Map as log to OpenTelemetry."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataPointBase"
        }
      ]
    },
    "DataPointBase": {
      "type": "object",
      "description": "Defines the data point properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the data point."
        },
        "dataSource": {
          "type": "string",
          "description": "The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset."
        },
        "dataPointConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the data point. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
        }
      },
      "required": [
        "name",
        "dataSource"
      ]
    },
    "Dataset": {
      "type": "object",
      "description": "Defines the dataset properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the dataset."
        },
        "datasetConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific JSON string that describes configuration for the specific dataset."
        },
        "topic": {
          "$ref": "#/definitions/Topic",
          "description": "Object that describes the topic information for the specific dataset."
        },
        "dataPoints": {
          "type": "array",
          "description": "Array of data points that are part of the dataset. Each data point can have per-data point configuration.",
          "items": {
            "$ref": "#/definitions/DataPoint"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name"
      ]
    },
    "DatasetBrokerStateStoreDestination": {
      "type": "object",
      "description": "The type for a MQTT broker state store destination.",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/BrokerStateStoreDestinationConfiguration",
          "description": "The MQTT broker state store destination configuration."
        }
      },
      "required": [
        "configuration"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DatasetDestination"
        }
      ],
      "x-ms-discriminator-value": "BrokerStateStore"
    },
    "DatasetDestination": {
      "type": "object",
      "description": "The type of the destination.",
      "properties": {
        "target": {
          "$ref": "#/definitions/DatasetDestinationTarget",
          "description": "Target destination."
        }
      },
      "discriminator": "target",
      "required": [
        "target"
      ]
    },
    "DatasetDestinationTarget": {
      "type": "string",
      "description": "The set of supported dataset destinations for an asset.",
      "enum": [
        "Mqtt",
        "BrokerStateStore",
        "Storage"
      ],
      "x-ms-enum": {
        "name": "DatasetDestinationTarget",
        "modelAsString": true,
        "values": [
          {
            "name": "Mqtt",
            "value": "Mqtt",
            "description": "MQTT target."
          },
          {
            "name": "BrokerStateStore",
            "value": "BrokerStateStore",
            "description": "Broker State Store target."
          },
          {
            "name": "Storage",
            "value": "Storage",
            "description": "Storage target."
          }
        ]
      }
    },
    "DatasetMqttDestination": {
      "type": "object",
      "description": "The type for a MQTT destination.",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/MqttDestinationConfiguration",
          "description": "The MQTT destination configuration."
        }
      },
      "required": [
        "configuration"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DatasetDestination"
        }
      ],
      "x-ms-discriminator-value": "Mqtt"
    },
    "DatasetStorageDestination": {
      "type": "object",
      "description": "The type for a storage destination.",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/StorageDestinationConfiguration",
          "description": "The storage destination configuration."
        }
      },
      "required": [
        "configuration"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DatasetDestination"
        }
      ],
      "x-ms-discriminator-value": "Storage"
    },
    "DeviceMessagingEndpoint": {
      "type": "object",
      "description": "Device messaging endpoint model.",
      "properties": {
        "endpointType": {
          "type": "string",
          "description": "Type of connection used for the messaging endpoint."
        },
        "address": {
          "type": "string",
          "description": "The endpoint address to connect to."
        }
      },
      "required": [
        "address"
      ]
    },
    "DeviceMessagingEndpointUpdate": {
      "type": "object",
      "description": "Device messaging endpoint model.",
      "properties": {
        "endpointType": {
          "type": "string",
          "description": "Type of connection used for the messaging endpoint."
        },
        "address": {
          "type": "string",
          "description": "The endpoint address to connect to."
        }
      }
    },
    "DeviceRef": {
      "type": "object",
      "description": "Defines which device and endpoint to use for this asset",
      "properties": {
        "deviceName": {
          "type": "string",
          "description": "Name of the device resource"
        },
        "endpointName": {
          "type": "string",
          "description": "The name of endpoint to use"
        }
      },
      "required": [
        "deviceName",
        "endpointName"
      ]
    },
    "DeviceRefUpdate": {
      "type": "object",
      "description": "Defines which device and endpoint to use for this asset",
      "properties": {
        "deviceName": {
          "type": "string",
          "description": "Name of the device resource"
        },
        "endpointName": {
          "type": "string",
          "description": "The name of endpoint to use"
        }
      }
    },
    "DeviceStatus": {
      "type": "object",
      "description": "Defines the device status properties.",
      "properties": {
        "config": {
          "$ref": "#/definitions/StatusConfig",
          "description": "Defines the device status config properties.",
          "readOnly": true
        },
        "endpoints": {
          "$ref": "#/definitions/DeviceStatusEndpoints",
          "description": "Defines the device status for inbound/outbound endpoints.",
          "readOnly": true
        }
      }
    },
    "DeviceStatusEndpoint": {
      "type": "object",
      "description": "Defines the device status properties.",
      "properties": {
        "error": {
          "$ref": "#/definitions/StatusError",
          "description": "Defines the error related to this endpoint.",
          "readOnly": true
        }
      }
    },
    "DeviceStatusEndpoints": {
      "type": "object",
      "description": "Defines the device status for inbound/outbound endpoints.",
      "properties": {
        "inbound": {
          "type": "object",
          "description": "KeyValue pair representing status of inbound endpoints.",
          "additionalProperties": {
            "$ref": "#/definitions/DeviceStatusEndpoint"
          },
          "readOnly": true
        }
      }
    },
    "DiscoveredInboundEndpoints": {
      "type": "object",
      "description": "An endpoint to connect to the device.",
      "properties": {
        "endpointType": {
          "type": "string",
          "description": "Type of connection endpoint."
        },
        "address": {
          "type": "string",
          "description": "The endpoint address & port. This can be either an IP address (e.g., 192.168.1.1) or a fully qualified domain name (FQDN, e.g., server.example.com)."
        },
        "version": {
          "type": "string",
          "description": "Protocol version associated with the endpoint e.g. 1 or 2 for endpointType Microsoft.HTTP, and 3.5 or 5.0 for endpointType Microsoft.Mqtt etc."
        },
        "supportedAuthenticationMethods": {
          "type": "array",
          "description": "List of supported authentication methods supported by device for Inbound connections.",
          "items": {
            "$ref": "#/definitions/AuthenticationMethod"
          }
        },
        "additionalConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains configuration to be used by the connector (e.g., OPC UA, ONVIF)."
        },
        "lastUpdatedOn": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp (in UTC) when the endpoint was discovered."
        }
      },
      "required": [
        "endpointType",
        "address"
      ]
    },
    "DiscoveredInboundEndpointsUpdate": {
      "type": "object",
      "description": "An endpoint to connect to the device.",
      "properties": {
        "endpointType": {
          "type": "string",
          "description": "Type of connection endpoint."
        },
        "address": {
          "type": "string",
          "description": "The endpoint address & port. This can be either an IP address (e.g., 192.168.1.1) or a fully qualified domain name (FQDN, e.g., server.example.com)."
        },
        "version": {
          "type": "string",
          "description": "Protocol version associated with the endpoint e.g. 1 or 2 for endpointType Microsoft.HTTP, and 3.5 or 5.0 for endpointType Microsoft.Mqtt etc."
        },
        "supportedAuthenticationMethods": {
          "type": "array",
          "description": "List of supported authentication methods supported by device for Inbound connections.",
          "items": {
            "$ref": "#/definitions/AuthenticationMethod"
          }
        },
        "additionalConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains configuration to be used by the connector (e.g., OPC UA, ONVIF)."
        },
        "lastUpdatedOn": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp (in UTC) when the endpoint was discovered."
        }
      }
    },
    "DiscoveredMessagingEndpoints": {
      "type": "object",
      "description": "Connection endpoint URL a device can use to connect to a service.",
      "properties": {
        "inbound": {
          "type": "object",
          "description": "Set of endpoints to connect to the device.",
          "additionalProperties": {
            "$ref": "#/definitions/DiscoveredInboundEndpoints"
          }
        },
        "outbound": {
          "$ref": "#/definitions/DiscoveredOutboundEndpoints",
          "description": "Set of endpoints a device can connect to."
        }
      }
    },
    "DiscoveredMessagingEndpointsUpdate": {
      "type": "object",
      "description": "Connection endpoint URL a device can use to connect to a service.",
      "properties": {
        "inbound": {
          "type": "object",
          "description": "Set of endpoints to connect to the device.",
          "additionalProperties": {
            "$ref": "#/definitions/DiscoveredInboundEndpointsUpdate"
          }
        },
        "outbound": {
          "$ref": "#/definitions/DiscoveredOutboundEndpointsUpdate",
          "description": "Set of endpoints a device can connect to."
        }
      }
    },
    "DiscoveredOutboundEndpoints": {
      "type": "object",
      "description": "Property bag contains the device's outbound endpoints",
      "properties": {
        "assigned": {
          "type": "object",
          "description": "Endpoints the device can connect to.",
          "additionalProperties": {
            "$ref": "#/definitions/DeviceMessagingEndpoint"
          }
        }
      },
      "required": [
        "assigned"
      ]
    },
    "DiscoveredOutboundEndpointsUpdate": {
      "type": "object",
      "description": "Property bag contains the device's outbound endpoints",
      "properties": {
        "assigned": {
          "type": "object",
          "description": "Endpoints the device can connect to.",
          "additionalProperties": {
            "$ref": "#/definitions/DeviceMessagingEndpointUpdate"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "Defines the error object with properties.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code for classification of errors (ex: '400', '404', '500', etc.).",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "Array of error details that describe the status of each error.",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ErrorDetails": {
      "type": "object",
      "description": "Defines the error details properties.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Multi-part error code for classification and root causing of errors (ex: 400.200.100.432).",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Human-readable helpful error message to provide additional context for error (ex: “Authentication method not supported”).",
          "readOnly": true
        },
        "info": {
          "type": "string",
          "description": "Human-readable helpful detailed text context for debugging (ex: “The following mechanisms are supported...”).",
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "description": "Unique identifier for the transaction to aid in debugging.",
          "readOnly": true
        }
      }
    },
    "Event": {
      "type": "object",
      "description": "Defines the event properties.",
      "properties": {
        "observabilityMode": {
          "type": "string",
          "description": "An indication of how the event should be mapped to OpenTelemetry.",
          "default": "None",
          "enum": [
            "None",
            "Log"
          ],
          "x-ms-enum": {
            "name": "EventObservabilityMode",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No mapping to OpenTelemetry."
              },
              {
                "name": "Log",
                "value": "Log",
                "description": "Map as log to OpenTelemetry."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EventBase"
        }
      ]
    },
    "EventBase": {
      "type": "object",
      "description": "Defines the event properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the event."
        },
        "eventNotifier": {
          "type": "string",
          "description": "The address of the notifier of the event in the asset (e.g. URL) so that a client can access the event on the asset."
        },
        "eventConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the event. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
        },
        "topic": {
          "$ref": "#/definitions/Topic",
          "description": "Object that describes the topic information for the specific event."
        }
      },
      "required": [
        "name",
        "eventNotifier"
      ]
    },
    "EventDestination": {
      "type": "object",
      "description": "The type of the destination.",
      "properties": {
        "target": {
          "$ref": "#/definitions/EventDestinationTarget",
          "description": "Target destination."
        }
      },
      "discriminator": "target",
      "required": [
        "target"
      ]
    },
    "EventDestinationTarget": {
      "type": "string",
      "description": "The set of supported event destinations for an asset.",
      "enum": [
        "Mqtt",
        "Storage"
      ],
      "x-ms-enum": {
        "name": "EventDestinationTarget",
        "modelAsString": true,
        "values": [
          {
            "name": "Mqtt",
            "value": "Mqtt",
            "description": "MQTT target."
          },
          {
            "name": "Storage",
            "value": "Storage",
            "description": "Storage target."
          }
        ]
      }
    },
    "EventMqttDestination": {
      "type": "object",
      "description": "The type for a MQTT destination.",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/MqttDestinationConfiguration",
          "description": "The MQTT destination configuration."
        }
      },
      "required": [
        "configuration"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EventDestination"
        }
      ],
      "x-ms-discriminator-value": "Mqtt"
    },
    "EventStorageDestination": {
      "type": "object",
      "description": "The type for a storage destination.",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/StorageDestinationConfiguration",
          "description": "The storage destination configuration."
        }
      },
      "required": [
        "configuration"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EventDestination"
        }
      ],
      "x-ms-discriminator-value": "Storage"
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "The extended location.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The extended location type."
        },
        "name": {
          "type": "string",
          "description": "The extended location name."
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "Format": {
      "type": "string",
      "description": "Defines the schema format.",
      "enum": [
        "JsonSchema/draft-07",
        "Delta/1.0"
      ],
      "x-ms-enum": {
        "name": "Format",
        "modelAsString": true,
        "values": [
          {
            "name": "JsonSchema_draft7",
            "value": "JsonSchema/draft-07",
            "description": "JSON Schema version draft 7 format"
          },
          {
            "name": "Delta_1_0",
            "value": "Delta/1.0",
            "description": "Delta format"
          }
        ]
      }
    },
    "HostAuthentication": {
      "type": "object",
      "description": "Definition of the client authentication mechanism to the host.",
      "properties": {
        "method": {
          "type": "string",
          "description": "Defines the method to authenticate the user of the client at the server.",
          "default": "Certificate",
          "enum": [
            "Anonymous",
            "Certificate",
            "UsernamePassword"
          ],
          "x-ms-enum": {
            "name": "AuthenticationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Anonymous",
                "value": "Anonymous",
                "description": "The user authentication method is anonymous."
              },
              {
                "name": "Certificate",
                "value": "Certificate",
                "description": "The user authentication method is an x509 certificate."
              },
              {
                "name": "UsernamePassword",
                "value": "UsernamePassword",
                "description": "The user authentication method is a username and password."
              }
            ]
          }
        },
        "usernamePasswordCredentials": {
          "$ref": "#/definitions/UsernamePasswordCredentials",
          "description": "Defines the username and password references when UsernamePassword user authentication mode is selected."
        },
        "x509Credentials": {
          "$ref": "#/definitions/X509Credentials",
          "description": "Defines the certificate reference when Certificate user authentication mode is selected."
        }
      },
      "required": [
        "method"
      ]
    },
    "HostAuthenticationUpdate": {
      "type": "object",
      "description": "Definition of the client authentication mechanism to the host.",
      "properties": {
        "method": {
          "type": "string",
          "description": "Defines the method to authenticate the user of the client at the server.",
          "default": "Certificate",
          "enum": [
            "Anonymous",
            "Certificate",
            "UsernamePassword"
          ],
          "x-ms-enum": {
            "name": "AuthenticationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Anonymous",
                "value": "Anonymous",
                "description": "The user authentication method is anonymous."
              },
              {
                "name": "Certificate",
                "value": "Certificate",
                "description": "The user authentication method is an x509 certificate."
              },
              {
                "name": "UsernamePassword",
                "value": "UsernamePassword",
                "description": "The user authentication method is a username and password."
              }
            ]
          }
        },
        "usernamePasswordCredentials": {
          "$ref": "#/definitions/UsernamePasswordCredentialsUpdate",
          "description": "Defines the username and password references when UsernamePassword user authentication mode is selected."
        },
        "x509Credentials": {
          "$ref": "#/definitions/X509CredentialsUpdate",
          "description": "Defines the certificate reference when Certificate user authentication mode is selected."
        }
      }
    },
    "InboundEndpoints": {
      "type": "object",
      "description": "An endpoint to connect to the device.",
      "properties": {
        "endpointType": {
          "type": "string",
          "description": "Type of connection endpoint."
        },
        "address": {
          "type": "string",
          "description": "The endpoint address & port. This can be either an IP address (e.g., 192.168.1.1) or a fully qualified domain name (FQDN, e.g., server.example.com)."
        },
        "version": {
          "type": "string",
          "description": "Protocol version associated with the endpoint e.g. 1 or 2 for endpointType Microsoft.HTTP, and 3.5 or 5.0 for endpointType Microsoft.Mqtt etc."
        },
        "authentication": {
          "$ref": "#/definitions/HostAuthentication",
          "description": "Defines the client authentication mechanism to the server."
        },
        "trustSettings": {
          "$ref": "#/definitions/TrustSettings",
          "description": "Defines server trust settings for the endpoint."
        },
        "additionalConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains configuration to be used by the connector (e.g., OPC UA, ONVIF)."
        }
      },
      "required": [
        "endpointType",
        "address"
      ]
    },
    "InboundEndpointsUpdate": {
      "type": "object",
      "description": "An endpoint to connect to the device.",
      "properties": {
        "endpointType": {
          "type": "string",
          "description": "Type of connection endpoint."
        },
        "address": {
          "type": "string",
          "description": "The endpoint address & port. This can be either an IP address (e.g., 192.168.1.1) or a fully qualified domain name (FQDN, e.g., server.example.com)."
        },
        "version": {
          "type": "string",
          "description": "Protocol version associated with the endpoint e.g. 1 or 2 for endpointType Microsoft.HTTP, and 3.5 or 5.0 for endpointType Microsoft.Mqtt etc."
        },
        "authentication": {
          "$ref": "#/definitions/HostAuthenticationUpdate",
          "description": "Defines the client authentication mechanism to the server."
        },
        "trustSettings": {
          "$ref": "#/definitions/TrustSettings",
          "description": "Defines server trust settings for the endpoint."
        },
        "additionalConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains configuration to be used by the connector (e.g., OPC UA, ONVIF)."
        }
      }
    },
    "ManagementAction": {
      "type": "object",
      "description": "Defines the action properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the action."
        },
        "actionConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the action."
        },
        "targetUri": {
          "type": "string",
          "description": "The target URI on which a client can invoke the specific action."
        },
        "typeRef": {
          "type": "string",
          "description": "URI or type definition ID."
        },
        "topic": {
          "type": "string",
          "description": "The MQTT topic path on which a client will receive the request for the action."
        },
        "actionType": {
          "type": "string",
          "description": "The type of the action.",
          "default": "Call",
          "enum": [
            "Call",
            "Read",
            "Write"
          ],
          "x-ms-enum": {
            "name": "ManagementActionType",
            "modelAsString": true,
            "values": [
              {
                "name": "Call",
                "value": "Call",
                "description": "Call action type."
              },
              {
                "name": "Read",
                "value": "Read",
                "description": "Read action type."
              },
              {
                "name": "Write",
                "value": "Write",
                "description": "Write action type."
              }
            ]
          }
        },
        "timeoutInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Response timeout for the action."
        }
      },
      "required": [
        "name",
        "targetUri"
      ]
    },
    "ManagementGroup": {
      "type": "object",
      "description": "Defines the management group properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the management group."
        },
        "managementGroupConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the management group."
        },
        "typeRef": {
          "type": "string",
          "description": "URI or type definition ID."
        },
        "defaultTopic": {
          "type": "string",
          "description": "Default MQTT topic path on which a client will receive the request for all actions that are part of the management group."
        },
        "defaultTimeoutInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Default response timeout for all actions that are part of the management group.",
          "default": 100
        },
        "actions": {
          "type": "array",
          "description": "Array of actions that are part of the management group. Each action can have an individual configuration.",
          "items": {
            "$ref": "#/definitions/ManagementAction"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name"
      ]
    },
    "MessageSchemaReference": {
      "type": "object",
      "description": "Defines the message schema reference properties.",
      "properties": {
        "schemaRegistryNamespace": {
          "type": "string",
          "description": "The message schema registry namespace.",
          "readOnly": true
        },
        "schemaName": {
          "type": "string",
          "description": "The message schema name.",
          "readOnly": true
        },
        "schemaVersion": {
          "type": "string",
          "description": "The message schema version.",
          "readOnly": true
        }
      },
      "required": [
        "schemaRegistryNamespace",
        "schemaName",
        "schemaVersion"
      ]
    },
    "Messaging": {
      "type": "object",
      "description": "The namespace messaging endpoints model.",
      "properties": {
        "endpoints": {
          "type": "object",
          "description": "Dictionary of messaging endpoints.",
          "additionalProperties": {
            "$ref": "#/definitions/MessagingEndpoint"
          }
        }
      }
    },
    "MessagingEndpoint": {
      "type": "object",
      "description": "Namespace messaging endpoint model used by a device to connect to a service.",
      "properties": {
        "endpointType": {
          "type": "string",
          "description": "Type of connection used for messaging endpoint."
        },
        "address": {
          "type": "string",
          "description": "The endpoint address to connect to."
        },
        "resourceId": {
          "type": "string",
          "description": "The messaging endpoint Azure resource Id."
        }
      },
      "required": [
        "address"
      ]
    },
    "MessagingEndpoints": {
      "type": "object",
      "description": "Connection endpoint URL a device can use to connect to a service.",
      "properties": {
        "inbound": {
          "type": "object",
          "description": "Set of endpoints to connect to the device.",
          "additionalProperties": {
            "$ref": "#/definitions/InboundEndpoints"
          }
        },
        "outbound": {
          "$ref": "#/definitions/OutboundEndpoints",
          "description": "Set of endpoints a device can connect to."
        }
      }
    },
    "MessagingEndpointsUpdate": {
      "type": "object",
      "description": "Connection endpoint URL a device can use to connect to a service.",
      "properties": {
        "inbound": {
          "type": "object",
          "description": "Set of endpoints to connect to the device.",
          "additionalProperties": {
            "$ref": "#/definitions/InboundEndpointsUpdate"
          }
        },
        "outbound": {
          "$ref": "#/definitions/OutboundEndpointsUpdate",
          "description": "Set of endpoints a device can connect to."
        }
      }
    },
    "MigrateResult": {
      "type": "object",
      "description": "Result of Migrate operation of asset resource into Namespace resource.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource Id of the asset resource."
        },
        "result": {
          "$ref": "#/definitions/MigrateResultType",
          "description": "The result of the migrate operation."
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "The error if the migrate operation is not successful."
        }
      }
    },
    "MigrateResultType": {
      "type": "string",
      "description": "Result Type of Migrate Operation.",
      "enum": [
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "MigrateResultType",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource Migrate operation is successful."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource Migrate operation is not successful."
          }
        ]
      },
      "readOnly": true
    },
    "MqttDestinationConfiguration": {
      "type": "object",
      "description": "The configuration for a MQTT destination.",
      "properties": {
        "topic": {
          "type": "string",
          "description": "The MQTT topic."
        },
        "retain": {
          "type": "string",
          "description": "When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'.",
          "default": "Never",
          "enum": [
            "Keep",
            "Never"
          ],
          "x-ms-enum": {
            "name": "TopicRetainType",
            "modelAsString": true,
            "values": [
              {
                "name": "Keep",
                "value": "Keep",
                "description": "Retain the messages."
              },
              {
                "name": "Never",
                "value": "Never",
                "description": "Never retain messages."
              }
            ]
          }
        },
        "qos": {
          "type": "string",
          "description": "The MQTT QoS setting. Defaults to QoS 1.",
          "default": "Qos1",
          "enum": [
            "Qos0",
            "Qos1"
          ],
          "x-ms-enum": {
            "name": "MqttDestinationQos",
            "modelAsString": true,
            "values": [
              {
                "name": "Qos0",
                "value": "Qos0",
                "description": "QoS 0."
              },
              {
                "name": "Qos1",
                "value": "Qos1",
                "description": "QoS 1."
              }
            ]
          }
        },
        "ttl": {
          "type": "integer",
          "format": "int64",
          "description": "The MQTT TTL setting."
        }
      },
      "required": [
        "topic"
      ]
    },
    "Namespace": {
      "type": "object",
      "description": "Namespace definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NamespaceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/SystemAssignedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NamespaceAsset": {
      "type": "object",
      "description": "Asset definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NamespaceAssetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NamespaceAssetListResult": {
      "type": "object",
      "description": "The response of a NamespaceAsset list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NamespaceAsset items on this page",
          "items": {
            "$ref": "#/definitions/NamespaceAsset"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NamespaceAssetProperties": {
      "type": "object",
      "description": "Defines the asset properties.",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Globally unique, immutable, non-reusable ID.",
          "readOnly": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Enabled/disabled status of the asset."
        },
        "externalAssetId": {
          "type": "string",
          "description": "Asset ID provided by the customer.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable display name."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the asset."
        },
        "deviceRef": {
          "$ref": "#/definitions/DeviceRef",
          "description": "Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "assetTypeRefs": {
          "type": "array",
          "description": "URIs or type definition IDs.",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "An integer that is incremented each time the resource is modified.",
          "readOnly": true
        },
        "lastTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "A timestamp (in UTC) that is updated each time the resource is modified.",
          "readOnly": true
        },
        "manufacturer": {
          "type": "string",
          "description": "Asset manufacturer."
        },
        "manufacturerUri": {
          "type": "string",
          "description": "Asset manufacturer URI."
        },
        "model": {
          "type": "string",
          "description": "Asset model."
        },
        "productCode": {
          "type": "string",
          "description": "Asset product code."
        },
        "hardwareRevision": {
          "type": "string",
          "description": "Asset hardware revision number."
        },
        "softwareRevision": {
          "type": "string",
          "description": "Asset software revision number."
        },
        "documentationUri": {
          "type": "string",
          "description": "Asset documentation reference."
        },
        "serialNumber": {
          "type": "string",
          "description": "Asset serial number."
        },
        "attributes": {
          "type": "object",
          "description": "A set of key-value pairs that contain custom attributes set by the customer.",
          "additionalProperties": {}
        },
        "discoveredAssetRefs": {
          "type": "array",
          "description": "Reference to a list of discovered assets. Populated only if the asset has been created from discovery flow. Discovered asset names must be provided.",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "defaultDatasetsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here."
        },
        "defaultEventsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here."
        },
        "defaultStreamsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here."
        },
        "defaultManagementGroupsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here."
        },
        "defaultDatasetsDestinations": {
          "type": "array",
          "description": "Default destinations for a dataset.",
          "items": {
            "$ref": "#/definitions/DatasetDestination"
          },
          "x-ms-identifiers": []
        },
        "defaultEventsDestinations": {
          "type": "array",
          "description": "Default destinations for an event.",
          "items": {
            "$ref": "#/definitions/EventDestination"
          },
          "x-ms-identifiers": []
        },
        "defaultStreamsDestinations": {
          "type": "array",
          "description": "Default destinations for a stream.",
          "items": {
            "$ref": "#/definitions/StreamDestination"
          },
          "x-ms-identifiers": []
        },
        "datasets": {
          "type": "array",
          "description": "Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.",
          "items": {
            "$ref": "#/definitions/NamespaceDataset"
          },
          "x-ms-identifiers": []
        },
        "events": {
          "type": "array",
          "description": "Array of events that are part of the asset. Each event can have per-event configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceEvent"
          },
          "x-ms-identifiers": []
        },
        "streams": {
          "type": "array",
          "description": "Array of streams that are part of the asset. Each stream can have a per-stream configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceStream"
          },
          "x-ms-identifiers": []
        },
        "managementGroups": {
          "type": "array",
          "description": "Array of management groups that are part of the asset. Each management group can have a per-group configuration.",
          "items": {
            "$ref": "#/definitions/ManagementGroup"
          },
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/NamespaceAssetStatus",
          "description": "Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "deviceRef"
      ]
    },
    "NamespaceAssetStatus": {
      "type": "object",
      "description": "Defines the asset status properties.",
      "properties": {
        "config": {
          "$ref": "#/definitions/StatusConfig",
          "description": "Defines the asset status config properties.",
          "readOnly": true
        },
        "datasets": {
          "type": "array",
          "description": "Array of dataset statuses that describe the status of each dataset.",
          "items": {
            "$ref": "#/definitions/NamespaceAssetStatusDataset"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "events": {
          "type": "array",
          "description": "Array of event statuses that describe the status of each event.",
          "items": {
            "$ref": "#/definitions/NamespaceAssetStatusEvent"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "streams": {
          "type": "array",
          "description": "Array of stream statuses that describe the status of each stream.",
          "items": {
            "$ref": "#/definitions/NamespaceAssetStatusStream"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "managementGroups": {
          "type": "array",
          "description": "Array of management group statuses that describe the status of each management group.",
          "items": {
            "$ref": "#/definitions/NamespaceAssetStatusManagementGroup"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "NamespaceAssetStatusDataset": {
      "type": "object",
      "description": "Defines the asset status dataset properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the dataset. Must be unique within the status.datasets array. This name is used to correlate between the spec and status dataset information.",
          "readOnly": true
        },
        "messageSchemaReference": {
          "$ref": "#/definitions/NamespaceMessageSchemaReference",
          "description": "The message schema reference object.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/StatusError",
          "description": "Object to transfer and persist errors that originate from the edge.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "NamespaceAssetStatusEvent": {
      "type": "object",
      "description": "Defines the asset status event properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the event. Must be unique within the status.events array. This name is used to correlate between the spec and status event information.",
          "readOnly": true
        },
        "messageSchemaReference": {
          "$ref": "#/definitions/NamespaceMessageSchemaReference",
          "description": "The message schema reference object.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/StatusError",
          "description": "Object to transfer and persist errors that originate from the edge.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "NamespaceAssetStatusManagementAction": {
      "type": "object",
      "description": "Defines the asset status action properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the action. Must be unique within the status.actions array. This name is used to correlate between the spec and status event information.",
          "readOnly": true
        },
        "requestMessageSchemaReference": {
          "$ref": "#/definitions/NamespaceMessageSchemaReference",
          "description": "The request message schema reference object for the action.",
          "readOnly": true
        },
        "responseMessageSchemaReference": {
          "$ref": "#/definitions/NamespaceMessageSchemaReference",
          "description": "The response message schema reference object for the action.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/StatusError",
          "description": "Object to transfer and persist errors that originate from the edge.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "NamespaceAssetStatusManagementGroup": {
      "type": "object",
      "description": "Defines the asset status management group properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the management group. Must be unique within the status.managementGroups array. This name is used to correlate between the spec and status event information.",
          "readOnly": true
        },
        "actions": {
          "type": "array",
          "description": "Array of action statuses that describe the status of each action.",
          "items": {
            "$ref": "#/definitions/NamespaceAssetStatusManagementAction"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name"
      ]
    },
    "NamespaceAssetStatusStream": {
      "type": "object",
      "description": "Defines the asset status stream properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the stream. Must be unique within the status.streams array. This name is used to correlate between the spec and status event information.",
          "readOnly": true
        },
        "messageSchemaReference": {
          "$ref": "#/definitions/NamespaceMessageSchemaReference",
          "description": "The message schema reference object.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/StatusError",
          "description": "Object to transfer and persist errors that originate from the edge.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "NamespaceAssetUpdate": {
      "type": "object",
      "description": "The type used for update operations of the NamespaceAsset.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NamespaceAssetUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "NamespaceAssetUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the NamespaceAsset.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enabled/disabled status of the asset."
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable display name."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the asset."
        },
        "assetTypeRefs": {
          "type": "array",
          "description": "URIs or type definition IDs.",
          "items": {
            "type": "string"
          }
        },
        "manufacturer": {
          "type": "string",
          "description": "Asset manufacturer."
        },
        "manufacturerUri": {
          "type": "string",
          "description": "Asset manufacturer URI."
        },
        "model": {
          "type": "string",
          "description": "Asset model."
        },
        "productCode": {
          "type": "string",
          "description": "Asset product code."
        },
        "hardwareRevision": {
          "type": "string",
          "description": "Asset hardware revision number."
        },
        "softwareRevision": {
          "type": "string",
          "description": "Asset software revision number."
        },
        "documentationUri": {
          "type": "string",
          "description": "Asset documentation reference."
        },
        "serialNumber": {
          "type": "string",
          "description": "Asset serial number."
        },
        "attributes": {
          "type": "object",
          "description": "A set of key-value pairs that contain custom attributes set by the customer.",
          "additionalProperties": {}
        },
        "defaultDatasetsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here."
        },
        "defaultEventsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here."
        },
        "defaultStreamsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here."
        },
        "defaultManagementGroupsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here."
        },
        "defaultDatasetsDestinations": {
          "type": "array",
          "description": "Default destinations for a dataset.",
          "items": {
            "$ref": "#/definitions/DatasetDestination"
          },
          "x-ms-identifiers": []
        },
        "defaultEventsDestinations": {
          "type": "array",
          "description": "Default destinations for an event.",
          "items": {
            "$ref": "#/definitions/EventDestination"
          },
          "x-ms-identifiers": []
        },
        "defaultStreamsDestinations": {
          "type": "array",
          "description": "Default destinations for a stream.",
          "items": {
            "$ref": "#/definitions/StreamDestination"
          },
          "x-ms-identifiers": []
        },
        "datasets": {
          "type": "array",
          "description": "Array of datasets that are part of the asset. Each dataset describes the data points that make up the set.",
          "items": {
            "$ref": "#/definitions/NamespaceDataset"
          },
          "x-ms-identifiers": []
        },
        "events": {
          "type": "array",
          "description": "Array of events that are part of the asset. Each event can have per-event configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceEvent"
          },
          "x-ms-identifiers": []
        },
        "streams": {
          "type": "array",
          "description": "Array of streams that are part of the asset. Each stream can have a per-stream configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceStream"
          },
          "x-ms-identifiers": []
        },
        "managementGroups": {
          "type": "array",
          "description": "Array of management groups that are part of the asset. Each management group can have a per-group configuration.",
          "items": {
            "$ref": "#/definitions/ManagementGroup"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NamespaceDataset": {
      "type": "object",
      "description": "Defines the dataset properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the dataset."
        },
        "dataSource": {
          "type": "string",
          "description": "Reference to a data source for a given dataset."
        },
        "typeRef": {
          "type": "string",
          "description": "URI or type definition ID."
        },
        "datasetConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific JSON string that describes configuration for the specific dataset."
        },
        "destinations": {
          "type": "array",
          "description": "Destinations for a dataset.",
          "items": {
            "$ref": "#/definitions/DatasetDestination"
          },
          "x-ms-identifiers": []
        },
        "dataPoints": {
          "type": "array",
          "description": "Array of data points that are part of the dataset. Each data point can have per-data point configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceDatasetDataPoint"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name"
      ]
    },
    "NamespaceDatasetDataPoint": {
      "type": "object",
      "description": "Defines the dataset data point properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the data point."
        },
        "dataSource": {
          "type": "string",
          "description": "The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset."
        },
        "dataPointConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the data point. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
        },
        "typeRef": {
          "type": "string",
          "description": "URI or type definition ID."
        }
      },
      "required": [
        "name",
        "dataSource"
      ]
    },
    "NamespaceDevice": {
      "type": "object",
      "description": "Device definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NamespaceDeviceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "Resource Tag.",
          "readOnly": true
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NamespaceDeviceListResult": {
      "type": "object",
      "description": "The response of a NamespaceDevice list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NamespaceDevice items on this page",
          "items": {
            "$ref": "#/definitions/NamespaceDevice"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NamespaceDeviceProperties": {
      "type": "object",
      "description": "Defines the device properties.",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "A unique identifier for the device.",
          "readOnly": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates if the resource is enabled or not.",
          "default": true
        },
        "externalDeviceId": {
          "type": "string",
          "description": "The Device ID provided by the customer.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "discoveredDeviceRef": {
          "type": "string",
          "description": "Reference to a device. Populated only if the device had been created from discovery flow. Discovered device name must be provided.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "manufacturer": {
          "type": "string",
          "description": "Device manufacturer.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "model": {
          "type": "string",
          "description": "Device model.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "operatingSystem": {
          "type": "string",
          "description": "Device operating system.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "operatingSystemVersion": {
          "type": "string",
          "description": "Device operating system version."
        },
        "endpoints": {
          "$ref": "#/definitions/MessagingEndpoints",
          "description": "Property bag containing the device's unassigned and assigned endpoints."
        },
        "attributes": {
          "type": "object",
          "description": "A set of key-value pairs that contain custom attributes set by the customer.",
          "additionalProperties": {}
        },
        "status": {
          "$ref": "#/definitions/DeviceStatus",
          "description": "Device status updates.",
          "readOnly": true
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "An integer that is incremented each time the resource is modified.",
          "readOnly": true
        },
        "lastTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "A timestamp (in UTC) that is updated each time the resource is modified.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "NamespaceDeviceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the NamespaceDevice.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NamespaceDeviceUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "NamespaceDeviceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the NamespaceDevice.",
      "properties": {
        "operatingSystemVersion": {
          "type": "string",
          "description": "Device operating system version."
        },
        "endpoints": {
          "$ref": "#/definitions/MessagingEndpointsUpdate",
          "description": "Property bag containing the device's unassigned and assigned endpoints."
        },
        "attributes": {
          "type": "object",
          "description": "A set of key-value pairs that contain custom attributes set by the customer.",
          "additionalProperties": {}
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates if the resource and identity are enabled or not. A disabled device cannot authenticate with Microsoft Entra ID."
        }
      }
    },
    "NamespaceDiscoveredAsset": {
      "type": "object",
      "description": "Discovered asset definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NamespaceDiscoveredAssetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NamespaceDiscoveredAssetListResult": {
      "type": "object",
      "description": "The response of a NamespaceDiscoveredAsset list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NamespaceDiscoveredAsset items on this page",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredAsset"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NamespaceDiscoveredAssetProperties": {
      "type": "object",
      "description": "Defines the discovered asset properties.",
      "properties": {
        "deviceRef": {
          "$ref": "#/definitions/DeviceRef",
          "description": "Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use."
        },
        "assetTypeRefs": {
          "type": "array",
          "description": "URIs or type definition IDs.",
          "items": {
            "type": "string"
          }
        },
        "discoveryId": {
          "type": "string",
          "description": "Identifier used to detect changes in the asset."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "An integer that is incremented each time the resource is modified."
        },
        "manufacturer": {
          "type": "string",
          "description": "Asset manufacturer."
        },
        "manufacturerUri": {
          "type": "string",
          "description": "Asset manufacturer URI."
        },
        "model": {
          "type": "string",
          "description": "Asset model."
        },
        "productCode": {
          "type": "string",
          "description": "Asset product code."
        },
        "hardwareRevision": {
          "type": "string",
          "description": "Asset hardware revision number."
        },
        "softwareRevision": {
          "type": "string",
          "description": "Asset software revision number."
        },
        "documentationUri": {
          "type": "string",
          "description": "Asset documentation reference."
        },
        "serialNumber": {
          "type": "string",
          "description": "Asset serial number."
        },
        "attributes": {
          "type": "object",
          "description": "A set of key-value pairs that contain custom attributes.",
          "additionalProperties": {}
        },
        "defaultDatasetsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here."
        },
        "defaultEventsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here."
        },
        "defaultStreamsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here."
        },
        "defaultManagementGroupsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here."
        },
        "defaultDatasetsDestinations": {
          "type": "array",
          "description": "Default destinations for a dataset.",
          "items": {
            "$ref": "#/definitions/DatasetDestination"
          },
          "x-ms-identifiers": []
        },
        "defaultEventsDestinations": {
          "type": "array",
          "description": "Default destinations for an event.",
          "items": {
            "$ref": "#/definitions/EventDestination"
          },
          "x-ms-identifiers": []
        },
        "defaultStreamsDestinations": {
          "type": "array",
          "description": "Default destinations for a stream.",
          "items": {
            "$ref": "#/definitions/StreamDestination"
          },
          "x-ms-identifiers": []
        },
        "datasets": {
          "type": "array",
          "description": "Array of datasets that are part of the asset. Each dataset spec describes the data points that make up the set.",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredDataset"
          },
          "x-ms-identifiers": []
        },
        "events": {
          "type": "array",
          "description": "Array of events that are part of the asset. Each event can have per-event configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredEvent"
          },
          "x-ms-identifiers": []
        },
        "streams": {
          "type": "array",
          "description": "Array of streams that are part of the asset. Each stream can have a per-stream configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredStream"
          },
          "x-ms-identifiers": []
        },
        "managementGroups": {
          "type": "array",
          "description": "Array of management groups that are part of the asset. Each management group can have a per-group configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredManagementGroup"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "deviceRef",
        "discoveryId",
        "version"
      ]
    },
    "NamespaceDiscoveredAssetUpdate": {
      "type": "object",
      "description": "The type used for update operations of the NamespaceDiscoveredAsset.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NamespaceDiscoveredAssetUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "NamespaceDiscoveredAssetUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the NamespaceDiscoveredAsset.",
      "properties": {
        "deviceRef": {
          "$ref": "#/definitions/DeviceRefUpdate",
          "description": "Reference to the device that provides data for this asset. Must provide device name & endpoint on the device to use."
        },
        "assetTypeRefs": {
          "type": "array",
          "description": "URIs or type definition IDs.",
          "items": {
            "type": "string"
          }
        },
        "discoveryId": {
          "type": "string",
          "description": "Identifier used to detect changes in the asset."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "An integer that is incremented each time the resource is modified."
        },
        "manufacturer": {
          "type": "string",
          "description": "Asset manufacturer."
        },
        "manufacturerUri": {
          "type": "string",
          "description": "Asset manufacturer URI."
        },
        "model": {
          "type": "string",
          "description": "Asset model."
        },
        "productCode": {
          "type": "string",
          "description": "Asset product code."
        },
        "hardwareRevision": {
          "type": "string",
          "description": "Asset hardware revision number."
        },
        "softwareRevision": {
          "type": "string",
          "description": "Asset software revision number."
        },
        "documentationUri": {
          "type": "string",
          "description": "Asset documentation reference."
        },
        "serialNumber": {
          "type": "string",
          "description": "Asset serial number."
        },
        "attributes": {
          "type": "object",
          "description": "A set of key-value pairs that contain custom attributes.",
          "additionalProperties": {}
        },
        "defaultDatasetsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all datasets. Each dataset can have its own configuration that overrides the default settings here."
        },
        "defaultEventsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here."
        },
        "defaultStreamsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all streams. Each stream can have its own configuration that overrides the default settings here."
        },
        "defaultManagementGroupsConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific default configuration for all management groups. Each management group can have its own configuration that overrides the default settings here."
        },
        "defaultDatasetsDestinations": {
          "type": "array",
          "description": "Default destinations for a dataset.",
          "items": {
            "$ref": "#/definitions/DatasetDestination"
          },
          "x-ms-identifiers": []
        },
        "defaultEventsDestinations": {
          "type": "array",
          "description": "Default destinations for an event.",
          "items": {
            "$ref": "#/definitions/EventDestination"
          },
          "x-ms-identifiers": []
        },
        "defaultStreamsDestinations": {
          "type": "array",
          "description": "Default destinations for a stream.",
          "items": {
            "$ref": "#/definitions/StreamDestination"
          },
          "x-ms-identifiers": []
        },
        "datasets": {
          "type": "array",
          "description": "Array of datasets that are part of the asset. Each dataset spec describes the data points that make up the set.",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredDataset"
          },
          "x-ms-identifiers": []
        },
        "events": {
          "type": "array",
          "description": "Array of events that are part of the asset. Each event can have per-event configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredEvent"
          },
          "x-ms-identifiers": []
        },
        "streams": {
          "type": "array",
          "description": "Array of streams that are part of the asset. Each stream can have a per-stream configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredStream"
          },
          "x-ms-identifiers": []
        },
        "managementGroups": {
          "type": "array",
          "description": "Array of management groups that are part of the asset. Each management group can have a per-group configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredManagementGroup"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NamespaceDiscoveredDataset": {
      "type": "object",
      "description": "Defines the dataset properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the dataset."
        },
        "dataSource": {
          "type": "string",
          "description": "Reference to a data source for a given dataset."
        },
        "typeRef": {
          "type": "string",
          "description": "URI or type definition ID."
        },
        "datasetConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific properties that describes configuration for the specific dataset."
        },
        "destinations": {
          "type": "array",
          "description": "Destinations for a dataset.",
          "items": {
            "$ref": "#/definitions/DatasetDestination"
          },
          "x-ms-identifiers": []
        },
        "dataPoints": {
          "type": "array",
          "description": "Array of data points that are part of the dataset. Each data point can have per-data point configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredDatasetDataPoint"
          },
          "x-ms-identifiers": []
        },
        "lastUpdatedOn": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp (in UTC) indicating when the dataset was added or modified."
        }
      },
      "required": [
        "name"
      ]
    },
    "NamespaceDiscoveredDatasetDataPoint": {
      "type": "object",
      "description": "Defines the discovered dataset data point properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the data point."
        },
        "dataSource": {
          "type": "string",
          "description": "The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset."
        },
        "dataPointConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the data point. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
        },
        "lastUpdatedOn": {
          "type": "string",
          "format": "date-time",
          "description": "UTC timestamp indicating when the data point was added or modified."
        },
        "typeRef": {
          "type": "string",
          "description": "URI or type definition ID."
        }
      },
      "required": [
        "name",
        "dataSource"
      ]
    },
    "NamespaceDiscoveredDevice": {
      "type": "object",
      "description": "Discovered device definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NamespaceDiscoveredDeviceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NamespaceDiscoveredDeviceListResult": {
      "type": "object",
      "description": "The response of a NamespaceDiscoveredDevice list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NamespaceDiscoveredDevice items on this page",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredDevice"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NamespaceDiscoveredDeviceProperties": {
      "type": "object",
      "description": "Defines the discovered device properties.",
      "properties": {
        "externalDeviceId": {
          "type": "string",
          "description": "A device ID that represents the device in a system external to Azure. Unique within scope of an Azure tenant."
        },
        "endpoints": {
          "$ref": "#/definitions/DiscoveredMessagingEndpoints",
          "description": "Endpoints for discovered devices."
        },
        "manufacturer": {
          "type": "string",
          "description": "Device manufacturer.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "model": {
          "type": "string",
          "description": "Device model.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "operatingSystem": {
          "type": "string",
          "description": "Device operating system name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "operatingSystemVersion": {
          "type": "string",
          "description": "Device operating system version."
        },
        "attributes": {
          "type": "object",
          "description": "A set of key-value pairs that contain custom attributes.",
          "additionalProperties": {}
        },
        "discoveryId": {
          "type": "string",
          "description": "Identifier used to detect changes in the discovered device."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "An integer that is incremented each time the resource is modified."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "discoveryId",
        "version"
      ]
    },
    "NamespaceDiscoveredDeviceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the NamespaceDiscoveredDevice.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NamespaceDiscoveredDeviceUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "NamespaceDiscoveredDeviceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the NamespaceDiscoveredDevice.",
      "properties": {
        "externalDeviceId": {
          "type": "string",
          "description": "A device ID that represents the device in a system external to Azure. Unique within scope of an Azure tenant."
        },
        "endpoints": {
          "$ref": "#/definitions/DiscoveredMessagingEndpointsUpdate",
          "description": "Endpoints for discovered devices."
        },
        "operatingSystemVersion": {
          "type": "string",
          "description": "Device operating system version."
        },
        "attributes": {
          "type": "object",
          "description": "A set of key-value pairs that contain custom attributes.",
          "additionalProperties": {}
        },
        "discoveryId": {
          "type": "string",
          "description": "Identifier used to detect changes in the discovered device."
        },
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "An integer that is incremented each time the resource is modified."
        }
      }
    },
    "NamespaceDiscoveredEvent": {
      "type": "object",
      "description": "Defines the event properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the event."
        },
        "eventNotifier": {
          "type": "string",
          "description": "The address of the notifier of the event in the asset (e.g. URL) so that a client can access the event on the asset."
        },
        "eventConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the event. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
        },
        "destinations": {
          "type": "array",
          "description": "Destinations for an event.",
          "items": {
            "$ref": "#/definitions/EventDestination"
          },
          "x-ms-identifiers": []
        },
        "typeRef": {
          "type": "string",
          "description": "URI or type definition ID."
        },
        "dataPoints": {
          "type": "array",
          "description": "Array of data points that are part of the event. Each data point can have a per-data point configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredEventDataPoint"
          },
          "x-ms-identifiers": []
        },
        "lastUpdatedOn": {
          "type": "string",
          "format": "date-time",
          "description": "UTC timestamp indicating when the event was added or modified."
        }
      },
      "required": [
        "name",
        "eventNotifier"
      ]
    },
    "NamespaceDiscoveredEventDataPoint": {
      "type": "object",
      "description": "Defines the discovered event data point properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the data point."
        },
        "dataSource": {
          "type": "string",
          "description": "The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset."
        },
        "dataPointConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the data point. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
        },
        "lastUpdatedOn": {
          "type": "string",
          "format": "date-time",
          "description": "UTC timestamp indicating when the data point was added or modified."
        }
      },
      "required": [
        "name",
        "dataSource"
      ]
    },
    "NamespaceDiscoveredManagementAction": {
      "type": "object",
      "description": "Defines the action properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the action."
        },
        "actionConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the action."
        },
        "targetUri": {
          "type": "string",
          "description": "The target URI on which a client can invoke the specific action."
        },
        "typeRef": {
          "type": "string",
          "description": "URI or type definition ID."
        },
        "topic": {
          "type": "string",
          "description": "The MQTT topic path on which a client will receive the request for the action."
        },
        "actionType": {
          "type": "string",
          "description": "The type of the action.",
          "default": "Call",
          "enum": [
            "Call",
            "Read",
            "Write"
          ],
          "x-ms-enum": {
            "name": "NamespaceDiscoveredManagementActionType",
            "modelAsString": true,
            "values": [
              {
                "name": "Call",
                "value": "Call",
                "description": "Call action type."
              },
              {
                "name": "Read",
                "value": "Read",
                "description": "Read action type."
              },
              {
                "name": "Write",
                "value": "Write",
                "description": "Write action type."
              }
            ]
          }
        },
        "timeoutInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Response timeout for the action."
        },
        "lastUpdatedOn": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp (in UTC) indicating when the management action was added or modified."
        }
      },
      "required": [
        "name",
        "targetUri"
      ]
    },
    "NamespaceDiscoveredManagementGroup": {
      "type": "object",
      "description": "Defines the management group properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the management group."
        },
        "managementGroupConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the management group."
        },
        "typeRef": {
          "type": "string",
          "description": "URI or type definition ID."
        },
        "defaultTopic": {
          "type": "string",
          "description": "Default MQTT topic path on which a client will receive the request for all actions that are part of the management group."
        },
        "defaultTimeoutInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Default response timeout for all actions that are part of the management group.",
          "default": 100
        },
        "actions": {
          "type": "array",
          "description": "Array of actions that are part of the management group. Each action can have an individual configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceDiscoveredManagementAction"
          },
          "x-ms-identifiers": []
        },
        "lastUpdatedOn": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp (in UTC) indicating when the management group was added or modified."
        }
      },
      "required": [
        "name"
      ]
    },
    "NamespaceDiscoveredStream": {
      "type": "object",
      "description": "Defines the stream properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the stream definition."
        },
        "streamConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the specific stream."
        },
        "typeRef": {
          "type": "string",
          "description": "URI or type definition ID."
        },
        "destinations": {
          "type": "array",
          "description": "Destinations for a stream.",
          "items": {
            "$ref": "#/definitions/StreamDestination"
          },
          "x-ms-identifiers": []
        },
        "lastUpdatedOn": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp (in UTC) indicating when the stream was added or modified."
        }
      },
      "required": [
        "name"
      ]
    },
    "NamespaceEvent": {
      "type": "object",
      "description": "Defines the event properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the event."
        },
        "eventNotifier": {
          "type": "string",
          "description": "The address of the notifier of the event in the asset (e.g. URL) so that a client can access the event on the asset."
        },
        "eventConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the event. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
        },
        "destinations": {
          "type": "array",
          "description": "Destinations for an event.",
          "items": {
            "$ref": "#/definitions/EventDestination"
          },
          "x-ms-identifiers": []
        },
        "typeRef": {
          "type": "string",
          "description": "URI or type definition ID."
        },
        "dataPoints": {
          "type": "array",
          "description": "Array of data points that are part of the event. Each data point can have a per-data point configuration.",
          "items": {
            "$ref": "#/definitions/NamespaceEventDataPoint"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name",
        "eventNotifier"
      ]
    },
    "NamespaceEventDataPoint": {
      "type": "object",
      "description": "Defines the event data point properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the data point."
        },
        "dataSource": {
          "type": "string",
          "description": "The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset."
        },
        "dataPointConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the data point. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
        }
      },
      "required": [
        "name",
        "dataSource"
      ]
    },
    "NamespaceListResult": {
      "type": "object",
      "description": "The response of a Namespace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Namespace items on this page",
          "items": {
            "$ref": "#/definitions/Namespace"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NamespaceMessageSchemaReference": {
      "type": "object",
      "description": "Defines the message schema reference properties.",
      "properties": {
        "schemaRegistryNamespace": {
          "type": "string",
          "description": "The message schema registry namespace.",
          "readOnly": true
        },
        "schemaName": {
          "type": "string",
          "description": "The message schema name.",
          "readOnly": true
        },
        "schemaVersion": {
          "type": "string",
          "description": "The message schema version.",
          "readOnly": true
        }
      },
      "required": [
        "schemaRegistryNamespace",
        "schemaName",
        "schemaVersion"
      ]
    },
    "NamespaceMigrateRequest": {
      "type": "object",
      "description": "Request body for the migrate resources operation in to Namespace resource.",
      "properties": {
        "scope": {
          "$ref": "#/definitions/Scope",
          "description": "Scope of the migrate resources operation."
        },
        "resourceIds": {
          "type": "array",
          "description": "List of asset resources to be migrated.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NamespaceMigrateResponse": {
      "type": "object",
      "description": "Response for the migrate asset resources operation into Namespace resource.",
      "properties": {
        "migrateResults": {
          "type": "array",
          "description": "List of migrate results containing result of each asset migrate operation.",
          "items": {
            "$ref": "#/definitions/MigrateResult"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      }
    },
    "NamespaceProperties": {
      "type": "object",
      "description": "The namespace properties model.",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Globally unique, immutable, non-reusable ID.",
          "readOnly": true
        },
        "messaging": {
          "$ref": "#/definitions/Messaging",
          "description": "Assigned and unassigned messaging endpoints."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "NamespaceStream": {
      "type": "object",
      "description": "Defines the stream properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the stream definition."
        },
        "streamConfiguration": {
          "type": "string",
          "description": "Stringified JSON that contains connector-specific configuration for the specific stream."
        },
        "typeRef": {
          "type": "string",
          "description": "URI or type definition ID."
        },
        "destinations": {
          "type": "array",
          "description": "Destinations for a stream.",
          "items": {
            "$ref": "#/definitions/StreamDestination"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name"
      ]
    },
    "NamespaceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Namespace.",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/SystemAssignedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NamespaceUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "NamespaceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Namespace.",
      "properties": {
        "messaging": {
          "$ref": "#/definitions/Messaging",
          "description": "Assigned and unassigned messaging endpoints."
        }
      }
    },
    "OutboundEndpoints": {
      "type": "object",
      "description": "Property bag contains the device's outbound endpoints",
      "properties": {
        "assigned": {
          "type": "object",
          "description": "Endpoints the device can connect to.",
          "additionalProperties": {
            "$ref": "#/definitions/DeviceMessagingEndpoint"
          }
        },
        "unassigned": {
          "type": "object",
          "description": "Set of most recently removed endpoints.",
          "additionalProperties": {
            "$ref": "#/definitions/DeviceMessagingEndpoint"
          }
        }
      },
      "required": [
        "assigned"
      ]
    },
    "OutboundEndpointsUpdate": {
      "type": "object",
      "description": "Property bag contains the device's outbound endpoints",
      "properties": {
        "assigned": {
          "type": "object",
          "description": "Endpoints the device can connect to.",
          "additionalProperties": {
            "$ref": "#/definitions/DeviceMessagingEndpointUpdate"
          }
        },
        "unassigned": {
          "type": "object",
          "description": "Set of most recently removed endpoints.",
          "additionalProperties": {
            "$ref": "#/definitions/DeviceMessagingEndpointUpdate"
          }
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Resource has been accepted by the server."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource is deleting."
          }
        ]
      },
      "readOnly": true
    },
    "Schema": {
      "type": "object",
      "description": "Schema definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SchemaListResult": {
      "type": "object",
      "description": "The response of a Schema list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Schema items on this page",
          "items": {
            "$ref": "#/definitions/Schema"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SchemaProperties": {
      "type": "object",
      "description": "Defines the schema properties.",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Globally unique, immutable, non-reusable id.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable display name."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the schema."
        },
        "format": {
          "$ref": "#/definitions/Format",
          "description": "Format of the schema.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "schemaType": {
          "$ref": "#/definitions/SchemaType",
          "description": "Type of the schema.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Schema tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "format",
        "schemaType"
      ]
    },
    "SchemaRegistry": {
      "type": "object",
      "description": "Schema registry definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaRegistryProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/SystemAssignedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "SchemaRegistryListResult": {
      "type": "object",
      "description": "The response of a SchemaRegistry list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SchemaRegistry items on this page",
          "items": {
            "$ref": "#/definitions/SchemaRegistry"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SchemaRegistryProperties": {
      "type": "object",
      "description": "Defines the schema registry properties.",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Globally unique, immutable, non-reusable id.",
          "readOnly": true
        },
        "namespace": {
          "type": "string",
          "description": "Schema registry namespace. Uniquely identifies a schema registry within a tenant.",
          "maxLength": 32,
          "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable display name."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the schema registry."
        },
        "storageAccountContainerUrl": {
          "type": "string",
          "description": "The Storage Account's Container URL where schemas will be stored.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "namespace",
        "storageAccountContainerUrl"
      ]
    },
    "SchemaRegistryUpdate": {
      "type": "object",
      "description": "The type used for update operations of the SchemaRegistry.",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/SystemAssignedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/SchemaRegistryUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SchemaRegistryUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the SchemaRegistry.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Human-readable display name."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the schema registry."
        }
      }
    },
    "SchemaType": {
      "type": "string",
      "description": "Defines the schema type.",
      "enum": [
        "MessageSchema"
      ],
      "x-ms-enum": {
        "name": "SchemaType",
        "modelAsString": true,
        "values": [
          {
            "name": "MessageSchema",
            "value": "MessageSchema",
            "description": "Message Schema schema type"
          }
        ]
      }
    },
    "SchemaVersion": {
      "type": "object",
      "description": "Schema version's definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaVersionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SchemaVersionListResult": {
      "type": "object",
      "description": "The response of a SchemaVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SchemaVersion items on this page",
          "items": {
            "$ref": "#/definitions/SchemaVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SchemaVersionProperties": {
      "type": "object",
      "description": "Defines the schema version properties.",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Globally unique, immutable, non-reusable id.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the schema."
        },
        "schemaContent": {
          "type": "string",
          "description": "Schema content.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "hash": {
          "type": "string",
          "description": "Hash of the schema content.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "schemaContent"
      ]
    },
    "Scope": {
      "type": "string",
      "description": "Scope of the migrate resources operation.",
      "enum": [
        "Resources"
      ],
      "x-ms-enum": {
        "name": "Scope",
        "modelAsString": true,
        "values": [
          {
            "name": "Resources",
            "value": "Resources",
            "description": "Scoping the migration to resourceIds provided"
          }
        ]
      }
    },
    "StatusConfig": {
      "type": "object",
      "description": "Defines the status config properties.",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "description": "A read-only incremental counter indicating the number of times the configuration has been modified from the perspective of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud. In steady state, this should equal version.",
          "readOnly": true
        },
        "lastTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "A read-only timestamp indicating the last time the configuration has been modified from the perspective of the current actual (edge) state of the CRD. Edge would be the only writer of this value and would sync back up to the cloud.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/StatusError",
          "description": "Object to transfer and persist errors that originate from the edge.",
          "readOnly": true
        }
      }
    },
    "StatusError": {
      "type": "object",
      "description": "Defines the status config error properties.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code for classification of errors (ex: '400', '404', '500', etc.).",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Human-readable helpful error message to provide additional context for error (e.g.,: “Capability ID 'foo' does not exist”).",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "Array of error details that describe the status of each error.",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "StorageDestinationConfiguration": {
      "type": "object",
      "description": "The configuration for a storage destination.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The storage destination path."
        }
      },
      "required": [
        "path"
      ]
    },
    "StreamDestination": {
      "type": "object",
      "description": "The type of the destination.",
      "properties": {
        "target": {
          "$ref": "#/definitions/StreamDestinationTarget",
          "description": "Target destination."
        }
      },
      "discriminator": "target",
      "required": [
        "target"
      ]
    },
    "StreamDestinationTarget": {
      "type": "string",
      "description": "The set of supported stream destinations for an asset.",
      "enum": [
        "Mqtt",
        "Storage"
      ],
      "x-ms-enum": {
        "name": "StreamDestinationTarget",
        "modelAsString": true,
        "values": [
          {
            "name": "Mqtt",
            "value": "Mqtt",
            "description": "MQTT target."
          },
          {
            "name": "Storage",
            "value": "Storage",
            "description": "Storage target."
          }
        ]
      }
    },
    "StreamMqttDestination": {
      "type": "object",
      "description": "The type for a MQTT destination.",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/MqttDestinationConfiguration",
          "description": "The MQTT destination configuration."
        }
      },
      "required": [
        "configuration"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/StreamDestination"
        }
      ],
      "x-ms-discriminator-value": "Mqtt"
    },
    "StreamStorageDestination": {
      "type": "object",
      "description": "The type for a storage destination.",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/StorageDestinationConfiguration",
          "description": "The storage destination configuration."
        }
      },
      "required": [
        "configuration"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/StreamDestination"
        }
      ],
      "x-ms-discriminator-value": "Storage"
    },
    "Topic": {
      "type": "object",
      "description": "Object that describes the topic information.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The topic path for messages published to an MQTT broker."
        },
        "retain": {
          "type": "string",
          "description": "When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'.",
          "default": "Never",
          "enum": [
            "Keep",
            "Never"
          ],
          "x-ms-enum": {
            "name": "TopicRetainType",
            "modelAsString": true,
            "values": [
              {
                "name": "Keep",
                "value": "Keep",
                "description": "Retain the messages."
              },
              {
                "name": "Never",
                "value": "Never",
                "description": "Never retain messages."
              }
            ]
          }
        }
      },
      "required": [
        "path"
      ]
    },
    "TopicUpdate": {
      "type": "object",
      "description": "Object that describes the topic information.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The topic path for messages published to an MQTT broker."
        },
        "retain": {
          "type": "string",
          "description": "When set to 'Keep', messages published to an MQTT broker will have the retain flag set. Default: 'Never'.",
          "default": "Never",
          "enum": [
            "Keep",
            "Never"
          ],
          "x-ms-enum": {
            "name": "TopicRetainType",
            "modelAsString": true,
            "values": [
              {
                "name": "Keep",
                "value": "Keep",
                "description": "Retain the messages."
              },
              {
                "name": "Never",
                "value": "Never",
                "description": "Never retain messages."
              }
            ]
          }
        }
      }
    },
    "TrustSettings": {
      "type": "object",
      "description": "Defines server trust settings for an endpoint.",
      "properties": {
        "trustList": {
          "type": "string",
          "description": "Defines a secret reference for certificates to trust."
        }
      }
    },
    "UsernamePasswordCredentials": {
      "type": "object",
      "description": "The credentials for authentication mode UsernamePassword.",
      "properties": {
        "usernameSecretName": {
          "type": "string",
          "description": "The name of the secret containing the username."
        },
        "passwordSecretName": {
          "type": "string",
          "description": "The name of the secret containing the password."
        }
      },
      "required": [
        "usernameSecretName",
        "passwordSecretName"
      ]
    },
    "UsernamePasswordCredentialsUpdate": {
      "type": "object",
      "description": "The credentials for authentication mode UsernamePassword.",
      "properties": {
        "usernameSecretName": {
          "type": "string",
          "description": "The name of the secret containing the username."
        },
        "passwordSecretName": {
          "type": "string",
          "description": "The name of the secret containing the password."
        }
      }
    },
    "X509Credentials": {
      "type": "object",
      "description": "The x509 certificate for authentication mode Certificate.",
      "properties": {
        "certificateSecretName": {
          "type": "string",
          "description": "The name of the secret containing the certificate and private key (e.g. stored as .der/.pem or .der/.pfx)."
        }
      },
      "required": [
        "certificateSecretName"
      ]
    },
    "X509CredentialsUpdate": {
      "type": "object",
      "description": "The x509 certificate for authentication mode Certificate.",
      "properties": {
        "certificateSecretName": {
          "type": "string",
          "description": "The name of the secret containing the certificate and private key (e.g. stored as .der/.pem or .der/.pfx)."
        }
      }
    }
  },
  "parameters": {}
}
