{
  "swagger": "2.0",
  "info": {
    "title": "Azure Device Registry",
    "description": "Asset Endpoint Profile resource type.",
    "version": "2023-11-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeviceRegistry/assetEndpointProfiles": {
      "get": {
        "tags": [
          "Asset Endpoint Profiles"
        ],
        "operationId": "AssetEndpointProfiles_ListBySubscription",
        "description": "List all Asset Endpoint Profiles in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Asset Endpoint Profiles.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfileResponseList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Asset Endpoint Profiles in a Subscription": {
            "$ref": "./examples/assetEndpointProfiles/List_AssetEndpointProfiles_Subscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assetEndpointProfiles": {
      "get": {
        "tags": [
          "Asset Endpoint Profiles"
        ],
        "operationId": "AssetEndpointProfiles_ListByResourceGroup",
        "description": "List all Asset Endpoint Profiles in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Asset Endpoint Profiles.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfileResponseList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Asset Endpoint Profiles in a Resource Group": {
            "$ref": "./examples/assetEndpointProfiles/List_AssetEndpointProfiles_ResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeviceRegistry/assetEndpointProfiles/{assetEndpointProfileName}": {
      "put": {
        "tags": [
          "Asset Endpoint Profiles"
        ],
        "operationId": "AssetEndpointProfiles_CreateOrReplace",
        "description": "Create a new Asset Endpoint Profile or replace an existing Asset Endpoint Profile.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/assetEndpointProfileNameParameter"
          },
          {
            "name": "assetEndpointProfile",
            "in": "body",
            "required": true,
            "description": "Resource create or replace parameters.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Asset Endpoint Profile is created or updated (replaced) successfully.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          },
          "201": {
            "x-nullable": false,
            "description": "Async operation to create or update (replace) the Asset Endpoint Profile.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create an Asset Endpoint Profile": {
            "$ref": "./examples/assetEndpointProfiles/Create_AssetEndpointProfile.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Asset Endpoint Profiles"
        ],
        "operationId": "AssetEndpointProfiles_Update",
        "description": "Update specific Asset Endpoint Profile properties.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/assetEndpointProfileNameParameter"
          },
          {
            "name": "assetEndpointProfile",
            "in": "body",
            "required": true,
            "description": "Resource Update parameters.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfilePatchPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Asset Endpoint Profile.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          },
          "202": {
            "x-nullable": false,
            "description": "Async operation to update the Asset Endpoint Profile.",
            "headers": {
              "Location": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch a Asset Endpoint Profile": {
            "$ref": "./examples/assetEndpointProfiles/Update_AssetEndpointProfile.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Asset Endpoint Profiles"
        ],
        "operationId": "AssetEndpointProfiles_Delete",
        "description": "Delete an Asset Endpoint Profile.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/assetEndpointProfileNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Async operation to delete the Asset Endpoint Profile is created.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Asset Endpoint Profile deletion no-op since the resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an Asset Endpoint Profile": {
            "$ref": "./examples/assetEndpointProfiles/Delete_AssetEndpointProfile.json"
          }
        }
      },
      "get": {
        "tags": [
          "Asset Endpoint Profiles"
        ],
        "operationId": "AssetEndpointProfiles_Get",
        "description": "Retrieve a single Asset Endpoint Profile.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/assetEndpointProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A single Asset Endpoint Profile.",
            "schema": {
              "$ref": "#/definitions/AssetEndpointProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an Asset Endpoint Profile": {
            "$ref": "./examples/assetEndpointProfiles/Get_AssetEndpointProfile.json"
          }
        }
      }
    }
  },
  "parameters": {
    "assetEndpointProfileNameParameter": {
      "name": "assetEndpointProfileName",
      "description": "Asset Endpoint Profile name parameter.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
      "maxLength": 63,
      "minLength": 3
    }
  },
  "definitions": {
    "AssetEndpointProfileResponseList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetEndpointProfile"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "description": "List of Asset Endpoint Profiles."
    },
    "AssetEndpointProfile": {
      "type": "object",
      "required": [
        "extendedLocation"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AssetEndpointProfileProperties",
          "description": "Asset Endpoint Profile resource properties."
        },
        "extendedLocation": {
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          },
          "description": "The extended location."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Asset Endpoint Profile definition."
    },
    "AssetEndpointProfilePatchPayload": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/AssetEndpointProfileProperties",
          "description": "Asset Endpoint Profile resource properties."
        }
      },
      "description": "Asset Endpoint Profile definition."
    },
    "AssetEndpointProfileProperties": {
      "description": "Defines the Asset Endpoint Profile properties.",
      "type": "object",
      "required": [
        "targetAddress"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Globally unique, immutable, non-reusable id.",
          "readOnly": true
        },
        "targetAddress": {
          "type": "string",
          "description": "The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.",
          "format": "uri"
        },
        "userAuthentication": {
          "type": "object",
          "description": "Defines the client authentication mechanism to the server.",
          "required": [
            "mode"
          ],
          "properties": {
            "mode": {
              "type": "string",
              "enum": [
                "Anonymous",
                "Certificate",
                "UsernamePassword"
              ],
              "x-ms-enum": {
                "name": "Mode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Anonymous",
                    "value": "Anonymous"
                  },
                  {
                    "name": "Certificate",
                    "value": "Certificate"
                  },
                  {
                    "name": "UsernamePassword",
                    "value": "UsernamePassword"
                  }
                ]
              },
              "default": "Certificate",
              "description": "Defines the mode to authenticate the user of the client at the server."
            },
            "usernamePasswordCredentials": {
              "type": "object",
              "description": "Defines the username and password references when UsernamePassword user authentication mode is selected.",
              "required": [
                "usernameReference",
                "passwordReference"
              ],
              "properties": {
                "usernameReference": {
                  "type": "string",
                  "description": "A reference to secret containing the username."
                },
                "passwordReference": {
                  "type": "string",
                  "description": "A reference to secret containing the password."
                }
              }
            },
            "x509Credentials": {
              "type": "object",
              "description": "Defines the certificate reference when Certificate user authentication mode is selected.",
              "required": [
                "certificateReference"
              ],
              "properties": {
                "certificateReference": {
                  "type": "string",
                  "description": "A reference to secret containing the certificate and private key (e.g. stored as .der/.pem or .der/.pfx)."
                }
              }
            }
          }
        },
        "transportAuthentication": {
          "type": "object",
          "description": "Defines the authentication mechanism for the southbound connector connecting to the shop floor/OT device.",
          "required": [
            "ownCertificates"
          ],
          "properties": {
            "ownCertificates": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "certThumbprint": {
                    "type": "string",
                    "description": "Certificate thumbprint."
                  },
                  "certSecretReference": {
                    "type": "string",
                    "description": "Secret Reference name (cert and private key)."
                  },
                  "certPasswordReference": {
                    "type": "string",
                    "description": "Secret Reference Name (Pfx or Pem password)"
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "Defines a reference to a secret which contains all certificates and private keys that can be used by the southbound connector connecting to the shop floor/OT device. The accepted extensions are .der for certificates and .pfx/.pem for private keys."
            }
          }
        },
        "additionalConfiguration": {
          "type": "string",
          "description": "Contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF)."
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation has been canceled."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been accepted by the server."
              }
            ]
          }
        }
      }
    }
  }
}
