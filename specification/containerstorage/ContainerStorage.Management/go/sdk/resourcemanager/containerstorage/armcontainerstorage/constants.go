// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) Go Code Generator. DO NOT EDIT.

package armcontainerstorage

const host = "https://management.azure.com"

const (
	moduleName    = "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/containerstorage/armcontainerstorage"
	moduleVersion = "v0.1.0"
)

// ActionType - Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
type ActionType string

const (
	// ActionTypeInternal - Actions are for internal-only APIs.
	ActionTypeInternal ActionType = "Internal"
)

// PossibleActionTypeValues returns the possible values for the ActionType const type.
func PossibleActionTypeValues() []ActionType {
	return []ActionType{
		ActionTypeInternal,
	}
}

// AssignmentStatusState - Status of the assignment resource
type AssignmentStatusState string

const (
	// AssignmentStatusStateAssigned - The assignment to the pool was successful.
	AssignmentStatusStateAssigned AssignmentStatusState = "Assigned"
	// AssignmentStatusStateAssigning - The assignment of the pool to the resource is in progress
	AssignmentStatusStateAssigning AssignmentStatusState = "Assigning"
	// AssignmentStatusStateFailed - The operation of assigning or unassigning the pool failed.
	AssignmentStatusStateFailed AssignmentStatusState = "Failed"
	// AssignmentStatusStateUnassigning - The pool is being unassigned.
	AssignmentStatusStateUnassigning AssignmentStatusState = "Unassigning"
)

// PossibleAssignmentStatusStateValues returns the possible values for the AssignmentStatusState const type.
func PossibleAssignmentStatusStateValues() []AssignmentStatusState {
	return []AssignmentStatusState{
		AssignmentStatusStateAssigned,
		AssignmentStatusStateAssigning,
		AssignmentStatusStateFailed,
		AssignmentStatusStateUnassigning,
	}
}

// AzureDiskSKUName - SKU of the underlying managed disk
type AzureDiskSKUName string

const (
	// AzureDiskSKUNamePremiumLRS - Premium_LRS SKU
	AzureDiskSKUNamePremiumLRS AzureDiskSKUName = "Premium_LRS"
	// AzureDiskSKUNamePremiumV2LRS - PremiumV2_LRS SKU
	AzureDiskSKUNamePremiumV2LRS AzureDiskSKUName = "PremiumV2_LRS"
	// AzureDiskSKUNamePremiumZRS - Premium_ZRS SKU
	AzureDiskSKUNamePremiumZRS AzureDiskSKUName = "Premium_ZRS"
	// AzureDiskSKUNameStandardLRS - Standard_LRS SKU
	AzureDiskSKUNameStandardLRS AzureDiskSKUName = "Standard_LRS"
	// AzureDiskSKUNameStandardSSDLRS - StandardSSD_LRS SKU
	AzureDiskSKUNameStandardSSDLRS AzureDiskSKUName = "StandardSSD_LRS"
	// AzureDiskSKUNameStandardSSDZRS - StandardSSD_ZRS SKU
	AzureDiskSKUNameStandardSSDZRS AzureDiskSKUName = "StandardSSD_ZRS"
	// AzureDiskSKUNameUltraSSDLRS - UltraSSD_LRS SKU
	AzureDiskSKUNameUltraSSDLRS AzureDiskSKUName = "UltraSSD_LRS"
)

// PossibleAzureDiskSKUNameValues returns the possible values for the AzureDiskSKUName const type.
func PossibleAzureDiskSKUNameValues() []AzureDiskSKUName {
	return []AzureDiskSKUName{
		AzureDiskSKUNamePremiumLRS,
		AzureDiskSKUNamePremiumV2LRS,
		AzureDiskSKUNamePremiumZRS,
		AzureDiskSKUNameStandardLRS,
		AzureDiskSKUNameStandardSSDLRS,
		AzureDiskSKUNameStandardSSDZRS,
		AzureDiskSKUNameUltraSSDLRS,
	}
}

// CreatedByType - The kind of entity that created the resource.
type CreatedByType string

const (
	// CreatedByTypeApplication - The entity was created by an application.
	CreatedByTypeApplication CreatedByType = "Application"
	// CreatedByTypeKey - The entity was created by a key.
	CreatedByTypeKey CreatedByType = "Key"
	// CreatedByTypeManagedIdentity - The entity was created by a managed identity.
	CreatedByTypeManagedIdentity CreatedByType = "ManagedIdentity"
	// CreatedByTypeUser - The entity was created by a user.
	CreatedByTypeUser CreatedByType = "User"
)

// PossibleCreatedByTypeValues returns the possible values for the CreatedByType const type.
func PossibleCreatedByTypeValues() []CreatedByType {
	return []CreatedByType{
		CreatedByTypeApplication,
		CreatedByTypeKey,
		CreatedByTypeManagedIdentity,
		CreatedByTypeUser,
	}
}

// ElasticSanSKUName - ElasticSAN SKUs
type ElasticSanSKUName string

const (
	// ElasticSanSKUNamePremiumLRS - Premium_LRS SKU
	ElasticSanSKUNamePremiumLRS ElasticSanSKUName = "Premium_LRS"
	// ElasticSanSKUNamePremiumZRS - Premium_ZRS SKU
	ElasticSanSKUNamePremiumZRS ElasticSanSKUName = "Premium_ZRS"
)

// PossibleElasticSanSKUNameValues returns the possible values for the ElasticSanSKUName const type.
func PossibleElasticSanSKUNameValues() []ElasticSanSKUName {
	return []ElasticSanSKUName{
		ElasticSanSKUNamePremiumLRS,
		ElasticSanSKUNamePremiumZRS,
	}
}

// ManagedIdentityType - The kind of managed identity assigned to this resource.
type ManagedIdentityType string

const (
	// ManagedIdentityTypeNone - No managed identity.
	ManagedIdentityTypeNone ManagedIdentityType = "None"
	// ManagedIdentityTypeSystemAndUserAssigned - System and user assigned managed identity.
	ManagedIdentityTypeSystemAndUserAssigned ManagedIdentityType = "SystemAssigned, UserAssigned"
	// ManagedIdentityTypeSystemAssigned - System assigned managed identity.
	ManagedIdentityTypeSystemAssigned ManagedIdentityType = "SystemAssigned"
	// ManagedIdentityTypeUserAssigned - User assigned managed identity.
	ManagedIdentityTypeUserAssigned ManagedIdentityType = "UserAssigned"
)

// PossibleManagedIdentityTypeValues returns the possible values for the ManagedIdentityType const type.
func PossibleManagedIdentityTypeValues() []ManagedIdentityType {
	return []ManagedIdentityType{
		ManagedIdentityTypeNone,
		ManagedIdentityTypeSystemAndUserAssigned,
		ManagedIdentityTypeSystemAssigned,
		ManagedIdentityTypeUserAssigned,
	}
}

// Origin - The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default
// value is "user,system"
type Origin string

const (
	// OriginSystem - Indicates the operation is initiated by a system.
	OriginSystem Origin = "system"
	// OriginUser - Indicates the operation is initiated by a user.
	OriginUser Origin = "user"
	// OriginUserSystem - Indicates the operation is initiated by a user or system.
	OriginUserSystem Origin = "user,system"
)

// PossibleOriginValues returns the possible values for the Origin const type.
func PossibleOriginValues() []Origin {
	return []Origin{
		OriginSystem,
		OriginUser,
		OriginUserSystem,
	}
}

// ProvisioningState - Provisioning state of the resource.
type ProvisioningState string

const (
	// ProvisioningStateAccepted - The resource create request has been accepted
	ProvisioningStateAccepted ProvisioningState = "Accepted"
	// ProvisioningStateCanceled - Resource creation was canceled.
	ProvisioningStateCanceled ProvisioningState = "Canceled"
	// ProvisioningStateDeleting - The resource is being deleted
	ProvisioningStateDeleting ProvisioningState = "Deleting"
	// ProvisioningStateFailed - Resource creation failed.
	ProvisioningStateFailed ProvisioningState = "Failed"
	// ProvisioningStateProvisioning - The resource is being provisioned
	ProvisioningStateProvisioning ProvisioningState = "Provisioning"
	// ProvisioningStateSucceeded - Resource has been created.
	ProvisioningStateSucceeded ProvisioningState = "Succeeded"
	// ProvisioningStateUpdating - The resource is updating
	ProvisioningStateUpdating ProvisioningState = "Updating"
)

// PossibleProvisioningStateValues returns the possible values for the ProvisioningState const type.
func PossibleProvisioningStateValues() []ProvisioningState {
	return []ProvisioningState{
		ProvisioningStateAccepted,
		ProvisioningStateCanceled,
		ProvisioningStateDeleting,
		ProvisioningStateFailed,
		ProvisioningStateProvisioning,
		ProvisioningStateSucceeded,
		ProvisioningStateUpdating,
	}
}

// ReclaimPolicy - Reclaim policy
type ReclaimPolicy string

const (
	// ReclaimPolicyDelete - Delete resource
	ReclaimPolicyDelete ReclaimPolicy = "Delete"
	// ReclaimPolicyRetain - Retain resource
	ReclaimPolicyRetain ReclaimPolicy = "Retain"
)

// PossibleReclaimPolicyValues returns the possible values for the ReclaimPolicy const type.
func PossibleReclaimPolicyValues() []ReclaimPolicy {
	return []ReclaimPolicy{
		ReclaimPolicyDelete,
		ReclaimPolicyRetain,
	}
}

// ResourceOperationStatusState - State of the resource.
type ResourceOperationStatusState string

const (
	// ResourceOperationStatusStateAvailable - The resource is available.
	ResourceOperationStatusStateAvailable ResourceOperationStatusState = "Available"
	// ResourceOperationStatusStatePending - The resource is pending.
	ResourceOperationStatusStatePending ResourceOperationStatusState = "Pending"
	// ResourceOperationStatusStateUnavailable - The resource is unavailable.
	ResourceOperationStatusStateUnavailable ResourceOperationStatusState = "Unavailable"
)

// PossibleResourceOperationStatusStateValues returns the possible values for the ResourceOperationStatusState const type.
func PossibleResourceOperationStatusStateValues() []ResourceOperationStatusState {
	return []ResourceOperationStatusState{
		ResourceOperationStatusStateAvailable,
		ResourceOperationStatusStatePending,
		ResourceOperationStatusStateUnavailable,
	}
}

// Zone - Availability Zones
type Zone string

const (
	// ZoneZone1 - First availability zone.
	ZoneZone1 Zone = "1"
	// ZoneZone2 - Second availability zone.
	ZoneZone2 Zone = "2"
	// ZoneZone3 - Third availability zone.
	ZoneZone3 Zone = "3"
)

// PossibleZoneValues returns the possible values for the Zone const type.
func PossibleZoneValues() []Zone {
	return []Zone{
		ZoneZone1,
		ZoneZone2,
		ZoneZone3,
	}
}
