{
  "swagger": "2.0",
  "info": {
    "title": "EventHubManagementClient",
    "version": "2022-10-01-preview",
    "description": "Azure Event Hubs client for managing Event Hubs Cluster, IPFilter Rules and VirtualNetworkRules resources.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "EventHubsClusters"
    },
    {
      "name": "EventHubsNamespaces"
    },
    {
      "name": "EventHubsNetworkRuleSets"
    },
    {
      "name": "EventHubsAuthorizationRules"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "EventHubsDisasterRecoveries"
    },
    {
      "name": "EventHubs"
    },
    {
      "name": "EventHubsConsumerGroups"
    },
    {
      "name": "EventHubsSchemaGroups"
    },
    {
      "name": "EventHubsApplicationGroups"
    }
  ],
  "paths": {
    "/providers/Microsoft.EventHub/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/checkNameAvailability": {
      "post": {
        "operationId": "Namespaces_CheckNameAvailability",
        "tags": [
          "EventHubsNamespaces"
        ],
        "description": "Check the give Namespace name availability.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The CheckAvailability request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsNameAvailabilityContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EventHubsNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespacesCheckNameAvailability": {
            "$ref": "./examples/Namespaces_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/clusters": {
      "get": {
        "operationId": "Clusters_ListBySubscription",
        "tags": [
          "EventHubsClusters"
        ],
        "description": "Lists the available Event Hubs Clusters within an ARM resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClustersListBySubscription": {
            "$ref": "./examples/Clusters_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "operationId": "Namespaces_List",
        "tags": [
          "EventHubsNamespaces"
        ],
        "description": "Lists all the available Namespaces within a subscription, irrespective of the resource groups.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsNamespaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespacesListBySubscription": {
            "$ref": "./examples/Namespaces_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{resourceAssociationName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/refreshes": {
      "post": {
        "operationId": "NetworkSecurityPerimeterConfigurations_CreateOrUpdate",
        "tags": [
          "EventHubsNamespaces"
        ],
        "description": "Refreshes any information about the association.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceAssociationName",
            "in": "path",
            "description": "The ResourceAssociation Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkSecurityPerimeterConfigurationList": {
            "$ref": "./examples/NetworkSecurityPerimeterConfigurations_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters": {
      "get": {
        "operationId": "Clusters_ListByResourceGroup",
        "tags": [
          "EventHubsClusters"
        ],
        "description": "Lists the available Event Hubs Clusters within an ARM resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClustersListByResourceGroup": {
            "$ref": "./examples/Clusters_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}": {
      "get": {
        "operationId": "Clusters_Get",
        "tags": [
          "EventHubsClusters"
        ],
        "description": "Gets the resource description of the specified Event Hubs Cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClusterGet": {
            "$ref": "./examples/Clusters_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Clusters_CreateOrUpdate",
        "tags": [
          "EventHubsClusters"
        ],
        "description": "Creates or updates an instance of an Event Hubs Cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for creating a eventhub cluster resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsCluster"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EventHubsCluster' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsCluster"
            }
          },
          "201": {
            "description": "Resource 'EventHubsCluster' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsCluster"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClusterPut": {
            "$ref": "./examples/Clusters_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Clusters_Delete",
        "tags": [
          "EventHubsClusters"
        ],
        "description": "Deletes an existing Event Hubs Cluster. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClusterDelete": {
            "$ref": "./examples/Clusters_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}/clusters/{name}": {
      "patch": {
        "operationId": "Clusters_Update",
        "tags": [
          "EventHubsClusters"
        ],
        "description": "Modifies mutable properties on the Event Hubs Cluster. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The properties of the Event Hubs Cluster which should be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsCluster"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsCluster"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClusterPatch": {
            "$ref": "./examples/Clusters_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}/namespaces/{subscriptionId}/{resourceGroupName}/{clusterName}": {
      "get": {
        "operationId": "Clusters_ListNamespaces",
        "tags": [
          "EventHubsClusters"
        ],
        "description": "List all Event Hubs Namespace IDs in an Event Hubs Dedicated Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EHNamespaceIdListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ListNamespacesInCluster": {
            "$ref": "./examples/Clusters_ListNamespaces.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}/quotaConfiguration/default/{subscriptionId}/{resourceGroupName}/{clusterName}": {
      "get": {
        "operationId": "Configuration_Get",
        "tags": [
          "EventHubsClusters"
        ],
        "description": "Get all Event Hubs Cluster settings - a collection of key/value pairs which represent the quotas and settings imposed on the cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ClustersQuotasConfigurationGet": {
            "$ref": "./examples/Configuration_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "operationId": "Namespaces_ListByResourceGroup",
        "tags": [
          "EventHubsNamespaces"
        ],
        "description": "Lists the available Namespaces within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsNamespaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespaceListByResourceGroup": {
            "$ref": "./examples/Namespaces_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}": {
      "get": {
        "operationId": "Namespaces_Get",
        "tags": [
          "EventHubsNamespaces"
        ],
        "description": "Gets the description of the specified namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsNamespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceGet": {
            "$ref": "./examples/Namespaces_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrUpdate",
        "tags": [
          "EventHubsNamespaces"
        ],
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for creating a namespace resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsNamespace"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EventHubsNamespace' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsNamespace"
            }
          },
          "201": {
            "description": "Resource 'EventHubsNamespace' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsNamespace"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespaceCreate": {
            "$ref": "./examples/Namespaces_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Namespaces_Delete",
        "tags": [
          "EventHubsNamespaces"
        ],
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceDelete": {
            "$ref": "./examples/Namespaces_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups": {
      "get": {
        "operationId": "ApplicationGroup_ListByNamespace",
        "tags": [
          "EventHubsApplicationGroups"
        ],
        "description": "Gets a list of application groups for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsApplicationGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListApplicationGroups": {
            "$ref": "./examples/ApplicationGroup_ListByNamespace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups/{applicationGroupName}": {
      "get": {
        "operationId": "ApplicationGroup_Get",
        "tags": [
          "EventHubsApplicationGroups"
        ],
        "description": "Gets an ApplicationGroup for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The Application Group name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsApplicationGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroupGet": {
            "$ref": "./examples/ApplicationGroup_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ApplicationGroup_CreateOrUpdateApplicationGroup",
        "tags": [
          "EventHubsApplicationGroups"
        ],
        "description": "Creates or updates an ApplicationGroup for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The Application Group name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The ApplicationGroup.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsApplicationGroup"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EventHubsApplicationGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsApplicationGroup"
            }
          },
          "201": {
            "description": "Resource 'EventHubsApplicationGroup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsApplicationGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroupCreate": {
            "$ref": "./examples/ApplicationGroup_CreateOrUpdateApplicationGroup.json"
          }
        }
      },
      "delete": {
        "operationId": "ApplicationGroup_Delete",
        "tags": [
          "EventHubsApplicationGroups"
        ],
        "description": "Deletes an ApplicationGroup for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The Application Group name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroupDelete": {
            "$ref": "./examples/ApplicationGroup_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules": {
      "get": {
        "operationId": "Namespaces_ListAuthorizationRules",
        "tags": [
          "EventHubsAuthorizationRules"
        ],
        "description": "Gets a list of authorization rules for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListAuthorizationRules": {
            "$ref": "./examples/Namespaces_ListAuthorizationRules.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "Namespaces_GetAuthorizationRule",
        "tags": [
          "EventHubsAuthorizationRules"
        ],
        "description": "Gets an AuthorizationRule for a Namespace by rule name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsAuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleGet": {
            "$ref": "./examples/Namespaces_GetAuthorizationRule.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "tags": [
          "EventHubsAuthorizationRules"
        ],
        "description": "Creates or updates an AuthorizationRule for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The shared access AuthorizationRule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsAuthorizationRule"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EventHubsAuthorizationRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsAuthorizationRule"
            }
          },
          "201": {
            "description": "Resource 'EventHubsAuthorizationRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsAuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleCreate": {
            "$ref": "./examples/Namespaces_CreateOrUpdateAuthorizationRule.json"
          }
        }
      },
      "delete": {
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "tags": [
          "EventHubsAuthorizationRules"
        ],
        "description": "Deletes an AuthorizationRule for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleDelete": {
            "$ref": "./examples/Namespaces_DeleteAuthorizationRule.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "Namespaces_ListKeys",
        "tags": [
          "EventHubsAuthorizationRules"
        ],
        "description": "Gets the primary and secondary connection strings for the Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsAccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleListKey": {
            "$ref": "./examples/Namespaces_ListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "Namespaces_RegenerateKeys",
        "tags": [
          "EventHubsAuthorizationRules"
        ],
        "description": "Regenerates the primary or secondary connection strings for the specified Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters required to regenerate the connection string.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsRegenerateAccessKeyContent"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsAccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleRegenerateKey": {
            "$ref": "./examples/Namespaces_RegenerateKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/checkNameAvailability": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_CheckNameAvailability",
        "tags": [
          "EventHubsNamespaces"
        ],
        "description": "Check the give Namespace name availability.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters to check availability of the given Alias name",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsNameAvailabilityContent"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespacesCheckNameAvailability": {
            "$ref": "./examples/DisasterRecoveryConfigs_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs": {
      "get": {
        "operationId": "DisasterRecoveryConfigs_List",
        "tags": [
          "EventHubsDisasterRecoveries"
        ],
        "description": "Gets all Alias(Disaster Recovery configurations)",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsDisasterRecoveryListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasList": {
            "$ref": "./examples/DisasterRecoveryConfigs_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}": {
      "get": {
        "operationId": "DisasterRecoveryConfigs_Get",
        "tags": [
          "EventHubsDisasterRecoveries"
        ],
        "description": "Retrieves Alias(Disaster Recovery configuration) for primary or secondary namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsDisasterRecovery"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasGet": {
            "$ref": "./examples/DisasterRecoveryConfigs_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DisasterRecoveryConfigs_CreateOrUpdate",
        "tags": [
          "EventHubsDisasterRecoveries"
        ],
        "description": "Creates or updates a new Alias(Disaster Recovery configuration)",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters required to create an Alias(Disaster Recovery configuration)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsDisasterRecovery"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EventHubsDisasterRecovery' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsDisasterRecovery"
            }
          },
          "201": {
            "description": "Resource 'EventHubsDisasterRecovery' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsDisasterRecovery"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasCreate": {
            "$ref": "./examples/DisasterRecoveryConfigs_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "DisasterRecoveryConfigs_Delete",
        "tags": [
          "EventHubsDisasterRecoveries"
        ],
        "description": "Deletes an Alias(Disaster Recovery configuration)",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasDelete": {
            "$ref": "./examples/DisasterRecoveryConfigs_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules": {
      "get": {
        "operationId": "DisasterRecoveryConfigsOperations_ListAuthorizationRules",
        "description": "Gets a list of authorization rules for a Namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EventHubsAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "DisasterRecoveryConfigsOperations_GetAuthorizationRule",
        "description": "Gets an AuthorizationRule for a Namespace by rule name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EventHubsAuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "DisasterRecoveryConfigsOperations_ListKeys",
        "description": "Gets the primary and secondary connection strings for the Namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EventHubsAccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/breakPairing": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_BreakPairing",
        "tags": [
          "EventHubsDisasterRecoveries"
        ],
        "description": "This operation disables the Disaster Recovery and stops replicating changes from primary to secondary namespaces",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasBreakPairing": {
            "$ref": "./examples/DisasterRecoveryConfigs_BreakPairing.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/failOver": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_FailOver",
        "tags": [
          "EventHubsDisasterRecoveries"
        ],
        "description": "Invokes GEO DR failover and reconfigure the alias to point to the secondary namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasFailOver": {
            "$ref": "./examples/DisasterRecoveryConfigs_FailOver.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs": {
      "get": {
        "operationId": "EventHubs_ListByNamespace",
        "tags": [
          "EventHubs"
        ],
        "description": "Gets all the Event Hubs in a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 1000
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubsListAll": {
            "$ref": "./examples/EventHubs_ListByNamespace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}": {
      "get": {
        "operationId": "EventHubs_Get",
        "tags": [
          "EventHubs"
        ],
        "description": "Gets an Event Hubs description for the specified Event Hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHub"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubGet": {
            "$ref": "./examples/EventHubs_Get.json"
          }
        }
      },
      "put": {
        "operationId": "EventHubs_CreateOrUpdate",
        "tags": [
          "EventHubs"
        ],
        "description": "Creates or updates a new Event Hub as a nested resource within a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to create an Event Hub resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHub"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EventHub' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHub"
            }
          },
          "201": {
            "description": "Resource 'EventHub' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHub"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubCreate": {
            "$ref": "./examples/EventHubs_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "EventHubs_Delete",
        "tags": [
          "EventHubs"
        ],
        "description": "Deletes an Event Hub from the specified Namespace and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubDelete": {
            "$ref": "./examples/EventHubs_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules": {
      "get": {
        "operationId": "EventHubsOperations_ListAuthorizationRules",
        "description": "Gets the authorization rules for an Event Hub.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EventHubsAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "EventHubsOperations_GetAuthorizationRule",
        "description": "Gets an AuthorizationRule for an Event Hub by rule name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EventHubsAuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "EventHubsOperations_CreateOrUpdateAuthorizationRule",
        "description": "Creates or updates an AuthorizationRule for the specified Event Hub. Creation/update of the AuthorizationRule will take a few seconds to take effect.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The shared access AuthorizationRule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsAuthorizationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EventHubsAuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "EventHubsOperations_DeleteAuthorizationRule",
        "description": "Deletes an Event Hub AuthorizationRule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "EventHubsOperations_ListKeys",
        "description": "Gets the ACS and SAS connection strings for the Event Hub.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EventHubsAccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "EventHubsOperations_RegenerateKeys",
        "description": "Regenerates the ACS and SAS connection strings for the Event Hub.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to regenerate the AuthorizationRule Keys (PrimaryKey/SecondaryKey).",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsRegenerateAccessKeyContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EventHubsAccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups": {
      "get": {
        "operationId": "ConsumerGroups_ListByEventHub",
        "tags": [
          "EventHubsConsumerGroups"
        ],
        "description": "Gets all the consumer groups in a Namespace. An empty feed is returned if no consumer group exists in the Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 1000
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsConsumerGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerGroupsListAll": {
            "$ref": "./examples/ConsumerGroups_ListByEventHub.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}": {
      "get": {
        "operationId": "ConsumerGroups_Get",
        "tags": [
          "EventHubsConsumerGroups"
        ],
        "description": "Gets a description for the specified consumer group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "consumerGroupName",
            "in": "path",
            "description": "The consumer group name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsConsumerGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerGroupGet": {
            "$ref": "./examples/ConsumerGroups_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ConsumerGroups_CreateOrUpdate",
        "tags": [
          "EventHubsConsumerGroups"
        ],
        "description": "Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "consumerGroupName",
            "in": "path",
            "description": "The consumer group name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to create or update a consumer group resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsConsumerGroup"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EventHubsConsumerGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsConsumerGroup"
            }
          },
          "201": {
            "description": "Resource 'EventHubsConsumerGroup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsConsumerGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerGroupCreate": {
            "$ref": "./examples/ConsumerGroups_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "ConsumerGroups_Delete",
        "tags": [
          "EventHubsConsumerGroups"
        ],
        "description": "Deletes a consumer group from the specified Event Hub and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "consumerGroupName",
            "in": "path",
            "description": "The consumer group name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerGroupDelete": {
            "$ref": "./examples/ConsumerGroups_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/namespaces/{name}": {
      "patch": {
        "operationId": "Namespaces_Update",
        "tags": [
          "EventHubsNamespaces"
        ],
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "name",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for updating a namespace resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsNamespace"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsNamespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespacesUpdate": {
            "$ref": "./examples/Namespaces_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets": {
      "get": {
        "operationId": "Namespaces_ListNetworkRuleSet",
        "tags": [
          "EventHubsNetworkRuleSets"
        ],
        "description": "Gets NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsNetworkRuleSetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetList": {
            "$ref": "./examples/Namespaces_ListNetworkRuleSet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default": {
      "get": {
        "operationId": "Namespaces_GetNetworkRuleSet",
        "tags": [
          "EventHubsNetworkRuleSets"
        ],
        "description": "Gets NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsNetworkRuleSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetGet": {
            "$ref": "./examples/Namespaces_GetNetworkRuleSet.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrUpdateNetworkRuleSet",
        "tags": [
          "EventHubsNetworkRuleSets"
        ],
        "description": "Create or update NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The Namespace IpFilterRule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsNetworkRuleSet"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EventHubsNetworkRuleSet' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsNetworkRuleSet"
            }
          },
          "201": {
            "description": "Resource 'EventHubsNetworkRuleSet' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsNetworkRuleSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetCreate": {
            "$ref": "./examples/Namespaces_CreateOrUpdateNetworkRuleSet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations/{resourceGroupName}/{namespaceName}/{subscriptionId}": {
      "get": {
        "operationId": "NetworkSecurityPerimeterConfiguration_List",
        "tags": [
          "EventHubsNamespaces"
        ],
        "description": "Gets list of current NetworkSecurityPerimeterConfiguration for Namespace",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "NamspaceNetworkSecurityPerimeterConfigurationList": {
            "$ref": "./examples/NetworkSecurityPerimeterConfiguration_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_List",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the available PrivateEndpointConnections within a namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceCreate": {
            "$ref": "./examples/PrivateEndpointConnections_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets a description for the specified Private Endpoint Connection name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The PrivateEndpointConnection name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionGet": {
            "$ref": "./examples/PrivateEndpointConnections_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Creates or updates PrivateEndpointConnections of service namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The PrivateEndpointConnection name",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to update Status of PrivateEndPoint Connection to namespace resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionCreate": {
            "$ref": "./examples/PrivateEndpointConnections_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The PrivateEndpointConnection name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionDelete": {
            "$ref": "./examples/PrivateEndpointConnections_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateLinkResources/{resourceGroupName}/{namespaceName}/{subscriptionId}": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "tags": [
          "EventHubsNamespaces"
        ],
        "description": "Gets lists of resources that supports Privatelinks.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the resource group within the azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "NameSpacePrivateLinkResourcesGet": {
            "$ref": "./examples/PrivateLinkResources_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/schemagroups": {
      "get": {
        "operationId": "SchemaRegistry_ListByNamespace",
        "tags": [
          "EventHubsSchemaGroups"
        ],
        "description": "Gets all the Schema Groups in a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 1000
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsSchemaGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaRegistryListAll": {
            "$ref": "./examples/SchemaRegistry_ListByNamespace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/schemagroups/{schemaGroupName}": {
      "get": {
        "operationId": "SchemaRegistry_Get",
        "tags": [
          "EventHubsSchemaGroups"
        ],
        "description": "Get a EventHubsSchemaGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "schemaGroupName",
            "in": "path",
            "description": "The Schema Group name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventHubsSchemaGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaRegistryGet": {
            "$ref": "./examples/SchemaRegistry_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SchemaRegistry_CreateOrUpdate",
        "tags": [
          "EventHubsSchemaGroups"
        ],
        "description": "Create a EventHubsSchemaGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "schemaGroupName",
            "in": "path",
            "description": "The Schema Group name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to create an Event Hub resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventHubsSchemaGroup"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EventHubsSchemaGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsSchemaGroup"
            }
          },
          "201": {
            "description": "Resource 'EventHubsSchemaGroup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EventHubsSchemaGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaRegistryCreate": {
            "$ref": "./examples/SchemaRegistry_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "SchemaRegistry_Delete",
        "tags": [
          "EventHubsSchemaGroups"
        ],
        "description": "Delete a EventHubsSchemaGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "schemaGroupName",
            "in": "path",
            "description": "The Schema Group name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaRegistryDelete": {
            "$ref": "./examples/SchemaRegistry_Delete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationGroupPolicyType": {
      "type": "string",
      "description": "Application Group Policy types",
      "enum": [
        "ThrottlingPolicy"
      ],
      "x-ms-enum": {
        "name": "ApplicationGroupPolicyType",
        "modelAsString": true
      }
    },
    "ApplicationGroupProperties": {
      "type": "object",
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"
        },
        "clientAppGroupIdentifier": {
          "type": "string",
          "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"
        },
        "policies": {
          "type": "array",
          "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic.",
          "items": {
            "$ref": "#/definitions/EventHubsApplicationGroupPolicy"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "clientAppGroupIdentifier"
      ]
    },
    "ArmDisasterRecoveryProperties": {
      "type": "object",
      "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/EventHubsDisasterRecoveryProvisioningState",
          "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
          "readOnly": true
        },
        "partnerNamespace": {
          "type": "string",
          "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
        },
        "alternateName": {
          "type": "string",
          "description": "Alternate name specified when alias and namespace names are same."
        },
        "role": {
          "$ref": "#/definitions/EventHubsDisasterRecoveryRole",
          "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
          "readOnly": true
        },
        "pendingReplicationOperationsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of entities pending to be replicated.",
          "readOnly": true
        }
      }
    },
    "AuthorizationRuleProperties": {
      "type": "object",
      "description": "Properties supplied to create or update AuthorizationRule",
      "properties": {
        "rights": {
          "type": "array",
          "description": "The rights associated with the rule.",
          "items": {
            "$ref": "#/definitions/EventHubsAccessRight"
          }
        }
      },
      "required": [
        "rights"
      ]
    },
    "AvailableCluster": {
      "type": "object",
      "description": "Pre-provisioned and readily available Event Hubs Cluster count per region.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Location fo the Available Cluster"
        }
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.Foundations.SkuTier": {
      "type": "string",
      "description": "Available service tiers for the SKU.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Free",
            "value": "Free",
            "description": "The Free service tier."
          },
          {
            "name": "Basic",
            "value": "Basic",
            "description": "The Basic service tier."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "The Standard service tier."
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "The Premium service tier."
          }
        ]
      }
    },
    "Azure.ResourceManager.Foundations.UserAssignedIdentity": {
      "type": "object",
      "description": "A managed identity assigned by the user.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The active directory client identifier for this principal."
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier for this principal."
        }
      }
    },
    "CaptureDescription": {
      "type": "object",
      "description": "Properties to configure capture description for eventhub",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "A value that indicates whether capture description is enabled."
        },
        "encoding": {
          "$ref": "#/definitions/EncodingCaptureDescription",
          "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version"
        },
        "intervalInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"
        },
        "sizeLimitInBytes": {
          "type": "integer",
          "format": "int32",
          "description": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"
        },
        "destination": {
          "$ref": "#/definitions/EventHubDestination",
          "description": "Properties of Destination where capture will be stored. (Storage Account, Blob Names)"
        },
        "skipEmptyArchives": {
          "type": "boolean",
          "description": "A value that indicates whether to Skip Empty Archives"
        }
      }
    },
    "CleanupPolicyRetentionDescription": {
      "type": "string",
      "description": "Enumerates the possible values for cleanup policy",
      "enum": [
        "Delete",
        "Compaction"
      ],
      "x-ms-enum": {
        "name": "CleanupPolicyRetentionDescription",
        "modelAsString": true
      }
    },
    "ClusterProperties": {
      "type": "object",
      "description": "Event Hubs Cluster properties supplied in responses in List or Get operations.",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time when the Event Hubs Cluster was created.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time when the Event Hubs Cluster was last updated.",
          "readOnly": true
        },
        "metricId": {
          "type": "string",
          "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the Cluster resource",
          "readOnly": true
        },
        "supportsScaling": {
          "type": "boolean",
          "description": "A value that indicates whether Scaling is Supported."
        }
      }
    },
    "ClusterQuotaConfigurationProperties": {
      "type": "object",
      "description": "Contains all settings for the cluster.",
      "properties": {
        "settings": {
          "type": "object",
          "description": "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ConsumerGroupProperties": {
      "type": "object",
      "description": "Single item in List or Get Consumer group operation",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Exact time the message was created.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The exact time the message was updated.",
          "readOnly": true
        },
        "userMetadata": {
          "type": "string",
          "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
        }
      }
    },
    "DestinationProperties": {
      "type": "object",
      "description": "Properties describing the storage account, blob container and archive name format for capture destination",
      "properties": {
        "storageAccountResourceId": {
          "type": "string",
          "description": "Resource id of the storage account to be used to create the blobs"
        },
        "blobContainer": {
          "type": "string",
          "description": "Blob container Name"
        },
        "archiveNameFormat": {
          "type": "string",
          "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
        },
        "dataLakeSubscriptionId": {
          "type": "string",
          "description": "Subscription Id of Azure Data Lake Store"
        },
        "dataLakeAccountName": {
          "type": "string",
          "description": "The Azure Data Lake Store name for the captured events"
        },
        "dataLakeFolderPath": {
          "type": "string",
          "description": "The destination folder path for the captured events"
        }
      }
    },
    "EHNamespaceIdContainer": {
      "type": "object",
      "description": "The full ARM ID of an Event Hubs Namespace",
      "properties": {
        "id": {
          "type": "string",
          "description": "id parameter"
        }
      }
    },
    "EHNamespaceIdListResult": {
      "type": "object",
      "description": "The response of the List Namespace IDs operation",
      "properties": {
        "value": {
          "type": "array",
          "description": "Result of the List Namespace IDs operation",
          "items": {
            "$ref": "#/definitions/EHNamespaceIdContainer"
          }
        }
      }
    },
    "EHNamespaceProperties": {
      "type": "object",
      "description": "Namespace properties supplied for create namespace operation.",
      "properties": {
        "minimumTlsVersion": {
          "$ref": "#/definitions/TlsVersion",
          "description": "The minimum TLS version for the cluster to support, e.g. '1.2'"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the Namespace.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the Namespace.",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the Namespace was created.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the Namespace was updated.",
          "readOnly": true
        },
        "serviceBusEndpoint": {
          "type": "string",
          "description": "Endpoint you can use to perform Service Bus operations.",
          "readOnly": true
        },
        "clusterArmId": {
          "type": "string",
          "description": "Cluster ARM ID of the Namespace."
        },
        "metricId": {
          "type": "string",
          "description": "Identifier for Azure Insights metrics.",
          "readOnly": true
        },
        "isAutoInflateEnabled": {
          "type": "boolean",
          "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "This determines if traffic is allowed over public network. By default it is enabled.",
          "default": "Enabled"
        },
        "maximumThroughputUnits": {
          "type": "integer",
          "format": "int32",
          "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
        },
        "kafkaEnabled": {
          "type": "boolean",
          "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
        },
        "zoneRedundant": {
          "type": "boolean",
          "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
        },
        "encryption": {
          "$ref": "#/definitions/EventHubsEncryption",
          "description": "Properties of BYOK Encryption description"
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connections.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "This property disables SAS authentication for the Event Hubs namespace."
        },
        "alternateName": {
          "type": "string",
          "description": "Alternate name specified when alias and namespace names are same."
        }
      }
    },
    "EncodingCaptureDescription": {
      "type": "string",
      "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version",
      "enum": [
        "Avro",
        "AvroDeflate"
      ],
      "x-ms-enum": {
        "name": "EncodingCaptureDescription",
        "modelAsString": false
      }
    },
    "EventHub": {
      "type": "object",
      "description": "Single item in List or Get Event Hub operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventhubProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EventHubDestination": {
      "type": "object",
      "description": "Capture storage details for capture description",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for capture destination"
        },
        "properties": {
          "$ref": "#/definitions/DestinationProperties",
          "description": "Properties describing the storage account, blob container and archive name format for capture destination"
        }
      }
    },
    "EventHubEntityStatus": {
      "type": "string",
      "description": "Enumerates the possible values for the status of the Event Hub.",
      "enum": [
        "Active",
        "Disabled",
        "Restoring",
        "SendDisabled",
        "ReceiveDisabled",
        "Creating",
        "Deleting",
        "Renaming",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "EventHubEntityStatus",
        "modelAsString": false
      }
    },
    "EventHubListResult": {
      "type": "object",
      "description": "The response of a EventHub list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EventHub items on this page",
          "items": {
            "$ref": "#/definitions/EventHub"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EventHubsAccessKeyType": {
      "type": "string",
      "description": "The access key to regenerate.",
      "enum": [
        "PrimaryKey",
        "SecondaryKey"
      ],
      "x-ms-enum": {
        "name": "EventHubsAccessKeyType",
        "modelAsString": true
      }
    },
    "EventHubsAccessKeys": {
      "type": "object",
      "description": "Namespace/EventHub Connection String",
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "description": "Primary connection string of the created namespace AuthorizationRule.",
          "readOnly": true
        },
        "secondaryConnectionString": {
          "type": "string",
          "description": "Secondary connection string of the created namespace AuthorizationRule.",
          "readOnly": true
        },
        "aliasPrimaryConnectionString": {
          "type": "string",
          "description": "Primary connection string of the alias if GEO DR is enabled",
          "readOnly": true
        },
        "aliasSecondaryConnectionString": {
          "type": "string",
          "description": "Secondary  connection string of the alias if GEO DR is enabled",
          "readOnly": true
        },
        "primaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
          "readOnly": true
        },
        "secondaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
          "readOnly": true
        },
        "keyName": {
          "type": "string",
          "description": "A string that describes the AuthorizationRule.",
          "readOnly": true
        }
      }
    },
    "EventHubsAccessRight": {
      "type": "string",
      "enum": [
        "Manage",
        "Send",
        "Listen"
      ],
      "x-ms-enum": {
        "name": "EventHubsAccessRight",
        "modelAsString": true
      }
    },
    "EventHubsApplicationGroup": {
      "type": "object",
      "description": "The Application Group object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationGroupProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EventHubsApplicationGroupListResult": {
      "type": "object",
      "description": "The response of a EventHubsApplicationGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EventHubsApplicationGroup items on this page",
          "items": {
            "$ref": "#/definitions/EventHubsApplicationGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EventHubsApplicationGroupPolicy": {
      "type": "object",
      "description": "Properties of the Application Group policy",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for EventHubsApplicationGroupPolicy."
        },
        "name": {
          "type": "string",
          "description": "The Name of this policy"
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "name"
      ]
    },
    "EventHubsAuthorizationRule": {
      "type": "object",
      "description": "Single item in a List or Get AuthorizationRule operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthorizationRuleProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EventHubsAuthorizationRuleListResult": {
      "type": "object",
      "description": "The response of a EventHubsAuthorizationRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EventHubsAuthorizationRule items on this page",
          "items": {
            "$ref": "#/definitions/EventHubsAuthorizationRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EventHubsCluster": {
      "type": "object",
      "description": "Single Event Hubs Cluster resource in List or Get operations.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "EventHubsClusterListResult": {
      "type": "object",
      "description": "The response of a EventHubsCluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EventHubsCluster items on this page",
          "items": {
            "$ref": "#/definitions/EventHubsCluster"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EventHubsClusterSku": {
      "type": "object",
      "description": "SKU parameters particular to a cluster instance.",
      "properties": {
        "name": {
          "$ref": "#/definitions/EventHubsClusterSkuName",
          "description": "Name of this SKU."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster.",
          "minimum": 1
        }
      },
      "required": [
        "name"
      ]
    },
    "EventHubsClusterSkuName": {
      "type": "string",
      "description": "Name of this SKU.",
      "enum": [
        "Dedicated"
      ],
      "x-ms-enum": {
        "name": "EventHubsClusterSkuName",
        "modelAsString": true
      }
    },
    "EventHubsConsumerGroup": {
      "type": "object",
      "description": "Single item in List or Get Consumer group operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConsumerGroupProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EventHubsConsumerGroupListResult": {
      "type": "object",
      "description": "The response of a EventHubsConsumerGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EventHubsConsumerGroup items on this page",
          "items": {
            "$ref": "#/definitions/EventHubsConsumerGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EventHubsDisasterRecovery": {
      "type": "object",
      "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArmDisasterRecoveryProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EventHubsDisasterRecoveryListResult": {
      "type": "object",
      "description": "The response of a EventHubsDisasterRecovery list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EventHubsDisasterRecovery items on this page",
          "items": {
            "$ref": "#/definitions/EventHubsDisasterRecovery"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EventHubsDisasterRecoveryProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
      "enum": [
        "Accepted",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "EventHubsDisasterRecoveryProvisioningState",
        "modelAsString": false
      },
      "readOnly": true
    },
    "EventHubsDisasterRecoveryRole": {
      "type": "string",
      "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
      "enum": [
        "Primary",
        "PrimaryNotReplicating",
        "Secondary"
      ],
      "x-ms-enum": {
        "name": "EventHubsDisasterRecoveryRole",
        "modelAsString": false
      }
    },
    "EventHubsEncryption": {
      "type": "object",
      "description": "Properties to configure Encryption",
      "properties": {
        "keyVaultProperties": {
          "type": "array",
          "description": "Properties of KeyVault",
          "items": {
            "$ref": "#/definitions/EventHubsKeyVaultProperties"
          },
          "x-ms-identifiers": []
        },
        "keySource": {
          "$ref": "#/definitions/KeySource",
          "description": "Enumerates the possible value of keySource for Encryption",
          "default": "Microsoft.KeyVault"
        },
        "requireInfrastructureEncryption": {
          "type": "boolean",
          "description": "Enable Infrastructure Encryption (Double Encryption)"
        }
      }
    },
    "EventHubsKeyVaultProperties": {
      "type": "object",
      "description": "Properties to configure keyVault Properties",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the Key from KeyVault"
        },
        "keyVaultUri": {
          "type": "string",
          "description": "Uri of KeyVault"
        },
        "keyVersion": {
          "type": "string",
          "description": "Key Version"
        },
        "identity": {
          "$ref": "#/definitions/UserAssignedIdentityProperties"
        }
      }
    },
    "EventHubsNameAvailabilityContent": {
      "type": "object",
      "description": "Parameter supplied to check Namespace name availability operation",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name to check the namespace name availability"
        }
      },
      "required": [
        "name"
      ]
    },
    "EventHubsNameAvailabilityResult": {
      "type": "object",
      "description": "The Result of the CheckNameAvailability operation",
      "properties": {
        "message": {
          "type": "string",
          "description": "The detailed info regarding the reason associated with the Namespace.",
          "readOnly": true
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Value indicating Namespace is availability, true if the Namespace is available; otherwise, false."
        },
        "reason": {
          "$ref": "#/definitions/UnavailableReason",
          "description": "The reason for unavailability of a Namespace."
        }
      }
    },
    "EventHubsNamespace": {
      "type": "object",
      "description": "Single Namespace item in List or Get Operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EHNamespaceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "EventHubsNamespaceListResult": {
      "type": "object",
      "description": "The response of a EventHubsNamespace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EventHubsNamespace items on this page",
          "items": {
            "$ref": "#/definitions/EventHubsNamespace"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EventHubsNetworkRuleIPAction": {
      "type": "string",
      "description": "The IP Filter Action",
      "enum": [
        "Allow"
      ],
      "x-ms-enum": {
        "name": "EventHubsNetworkRuleIPAction",
        "modelAsString": true
      }
    },
    "EventHubsNetworkRuleSet": {
      "type": "object",
      "description": "Description of topic resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkRuleSetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EventHubsNetworkRuleSetDefaultAction": {
      "type": "string",
      "description": "Default Action for Network Rule Set",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "EventHubsNetworkRuleSetDefaultAction",
        "modelAsString": true
      }
    },
    "EventHubsNetworkRuleSetIPRules": {
      "type": "object",
      "description": "The response from the List namespace operation.",
      "properties": {
        "ipMask": {
          "type": "string",
          "description": "IP Mask"
        },
        "action": {
          "$ref": "#/definitions/EventHubsNetworkRuleIPAction",
          "description": "The IP Filter Action"
        }
      }
    },
    "EventHubsNetworkRuleSetListResult": {
      "type": "object",
      "description": "The response of a EventHubsNetworkRuleSet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EventHubsNetworkRuleSet items on this page",
          "items": {
            "$ref": "#/definitions/EventHubsNetworkRuleSet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EventHubsNetworkRuleSetVirtualNetworkRules": {
      "type": "object",
      "description": "The response from the List namespace operation.",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "Subnet properties"
        },
        "ignoreMissingVnetServiceEndpoint": {
          "type": "boolean",
          "description": "Value that indicates whether to ignore missing Vnet Service Endpoint"
        }
      }
    },
    "EventHubsPrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Private Endpoint Connection.",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "EventHubsPrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "EventHubsPrivateLinkConnectionStatus": {
      "type": "string",
      "description": "Status of the connection.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "EventHubsPrivateLinkConnectionStatus",
        "modelAsString": true
      }
    },
    "EventHubsPrivateLinkResourceData": {
      "type": "object",
      "description": "Information of the private link resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Properties of the private link resource."
        },
        "id": {
          "type": "string",
          "description": "Fully qualified identifier of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource"
        },
        "type": {
          "type": "string",
          "description": "Type of the resource"
        }
      }
    },
    "EventHubsPrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "ConnectionState information.",
      "properties": {
        "status": {
          "$ref": "#/definitions/EventHubsPrivateLinkConnectionStatus",
          "description": "Status of the connection."
        },
        "description": {
          "type": "string",
          "description": "Description of the connection state."
        }
      }
    },
    "EventHubsPublicNetworkAccessFlag": {
      "type": "string",
      "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules.",
      "enum": [
        "Enabled",
        "Disabled",
        "SecuredByPerimeter"
      ],
      "x-ms-enum": {
        "name": "EventHubsPublicNetworkAccessFlag",
        "modelAsString": true
      }
    },
    "EventHubsRegenerateAccessKeyContent": {
      "type": "object",
      "description": "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset.",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/EventHubsAccessKeyType",
          "description": "The access key to regenerate."
        },
        "key": {
          "type": "string",
          "description": "Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType"
        }
      },
      "required": [
        "keyType"
      ]
    },
    "EventHubsSchemaGroup": {
      "type": "object",
      "description": "Single item in List or Get Schema Group operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaGroupProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EventHubsSchemaGroupListResult": {
      "type": "object",
      "description": "The response of a EventHubsSchemaGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EventHubsSchemaGroup items on this page",
          "items": {
            "$ref": "#/definitions/EventHubsSchemaGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EventHubsThrottlingPolicy": {
      "type": "object",
      "description": "Properties of the throttling policy",
      "properties": {
        "rateLimitThreshold": {
          "type": "integer",
          "format": "int64",
          "description": "The Threshold limit above which the application group will be throttled.Rate limit is always per second."
        },
        "metricId": {
          "$ref": "#/definitions/MetricId",
          "description": "Metric Id on which the throttle limit should be set, MetricId can be discovered by hovering over Metric in the Metrics section of Event Hub Namespace inside Azure Portal"
        }
      },
      "required": [
        "rateLimitThreshold",
        "metricId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EventHubsApplicationGroupPolicy"
        }
      ],
      "x-ms-discriminator-value": "ThrottlingPolicy"
    },
    "EventhubProperties": {
      "type": "object",
      "description": "Properties supplied to the Create Or Update Event Hub operation.",
      "properties": {
        "partitionIds": {
          "type": "array",
          "description": "Current number of shards on the Event Hub.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Exact time the Event Hub was created.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The exact time the message was updated.",
          "readOnly": true
        },
        "partitionCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.",
          "minimum": 1
        },
        "status": {
          "$ref": "#/definitions/EventHubEntityStatus",
          "description": "Enumerates the possible values for the status of the Event Hub."
        },
        "captureDescription": {
          "$ref": "#/definitions/CaptureDescription",
          "description": "Properties of capture description"
        },
        "retentionDescription": {
          "$ref": "#/definitions/RetentionDescription",
          "description": "Event Hub retention settings"
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Properties to configure Identity for Bring your Own Keys",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "ObjectId from the KeyVault",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "TenantId from the KeyVault",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ManagedServiceIdentityType",
          "description": "Type of managed service identity."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "Properties for User Assigned Identities",
          "additionalProperties": {
            "$ref": "#/definitions/Azure.ResourceManager.Foundations.UserAssignedIdentity"
          }
        }
      }
    },
    "KeySource": {
      "type": "string",
      "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault",
      "enum": [
        "Microsoft.Storage",
        "Microsoft.KeyVault"
      ],
      "x-ms-enum": {
        "name": "KeySource",
        "modelAsString": true
      }
    },
    "ManagedServiceIdentityType": {
      "type": "string",
      "description": "Type of managed service identity.",
      "enum": [
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ManagedServiceIdentityType",
        "modelAsString": false
      }
    },
    "MetricId": {
      "type": "string",
      "description": "Metric Id on which the throttle limit should be set, MetricId can be discovered by hovering over Metric in the Metrics section of Event Hub Namespace inside Azure Portal",
      "enum": [
        "IncomingBytes",
        "OutgoingBytes",
        "IncomingMessages",
        "OutgoingMessages"
      ],
      "x-ms-enum": {
        "name": "MetricId",
        "modelAsString": true
      }
    },
    "NetworkRuleSetProperties": {
      "type": "object",
      "description": "NetworkRuleSet properties",
      "properties": {
        "trustedServiceAccessEnabled": {
          "type": "boolean",
          "description": "Value that indicates whether Trusted Service Access is Enabled or not."
        },
        "defaultAction": {
          "$ref": "#/definitions/EventHubsNetworkRuleSetDefaultAction",
          "description": "Default Action for Network Rule Set"
        },
        "virtualNetworkRules": {
          "type": "array",
          "description": "List VirtualNetwork Rules",
          "items": {
            "$ref": "#/definitions/EventHubsNetworkRuleSetVirtualNetworkRules"
          },
          "x-ms-identifiers": []
        },
        "ipRules": {
          "type": "array",
          "description": "List of IpRules",
          "items": {
            "$ref": "#/definitions/EventHubsNetworkRuleSetIPRules"
          },
          "x-ms-identifiers": []
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/EventHubsPublicNetworkAccessFlag",
          "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules.",
          "default": "Enabled"
        }
      }
    },
    "NetworkSecurityPerimeter": {
      "type": "object",
      "description": "NetworkSecurityPerimeter related information",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified identifier of the resource"
        },
        "perimeterGuid": {
          "type": "string",
          "description": "Guid of the resource"
        },
        "location": {
          "type": "string",
          "description": "Location of the resource"
        }
      }
    },
    "NetworkSecurityPerimeterConfiguration": {
      "type": "object",
      "description": "Network Security Perimeter related configurations of a given namespace",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationProperties",
          "description": "Properties of the Network Security Perimeter Configuration",
          "readOnly": true
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationList": {
      "type": "object",
      "description": "Result of the List NetworkSecurityPerimeterConfiguration operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "A collection of NetworkSecurityPerimeterConfigurations",
          "items": {
            "$ref": "#/definitions/NetworkSecurityPerimeterConfiguration"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationProperties": {
      "type": "object",
      "description": "Properties of NetworkSecurityPerimeterConfiguration",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationProvisioningState",
          "description": "Provisioning state of NetworkSecurityPerimeter configuration propagation"
        },
        "provisioningIssues": {
          "type": "array",
          "description": "List of Provisioning Issues if any",
          "items": {
            "$ref": "#/definitions/ProvisioningIssue"
          },
          "x-ms-identifiers": []
        },
        "networkSecurityPerimeter": {
          "$ref": "#/definitions/NetworkSecurityPerimeter",
          "description": "NetworkSecurityPerimeter related information",
          "readOnly": true
        },
        "resourceAssociation": {
          "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation",
          "description": "Information about resource association",
          "readOnly": true
        },
        "profile": {
          "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationPropertiesProfile",
          "description": "Information about current network profile",
          "readOnly": true
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationPropertiesProfile": {
      "type": "object",
      "description": "Information about current network profile",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource"
        },
        "accessRulesVersion": {
          "type": "string",
          "description": "Current access rules version"
        },
        "accessRules": {
          "type": "array",
          "description": "List of Access Rules",
          "items": {
            "$ref": "#/definitions/NspAccessRule"
          }
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation": {
      "type": "object",
      "description": "Information about resource association",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource association"
        },
        "accessMode": {
          "$ref": "#/definitions/ResourceAssociationAccessMode",
          "description": "Access Mode of the resource association"
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationProvisioningState": {
      "type": "string",
      "description": "Provisioning state of NetworkSecurityPerimeter configuration propagation",
      "enum": [
        "Unknown",
        "Creating",
        "Updating",
        "Accepted",
        "InvalidResponse",
        "Succeeded",
        "SucceededWithIssues",
        "Failed",
        "Deleting",
        "Deleted",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "NetworkSecurityPerimeterConfigurationProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "NspAccessRule": {
      "type": "object",
      "description": "Information of Access Rule in Network Profile",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified identifier of the resource"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource"
        },
        "type": {
          "type": "string",
          "description": "Type of the resource"
        },
        "properties": {
          "$ref": "#/definitions/NspAccessRuleProperties",
          "description": "Properties of Access Rule",
          "readOnly": true
        }
      }
    },
    "NspAccessRuleDirection": {
      "type": "string",
      "description": "Direction of Access Rule",
      "enum": [
        "Inbound",
        "Outbound"
      ],
      "x-ms-enum": {
        "name": "NspAccessRuleDirection",
        "modelAsString": true
      }
    },
    "NspAccessRuleProperties": {
      "type": "object",
      "description": "Properties of Access Rule",
      "properties": {
        "direction": {
          "$ref": "#/definitions/NspAccessRuleDirection",
          "description": "Direction of Access Rule"
        },
        "addressPrefixes": {
          "type": "array",
          "description": "Address prefixes in the CIDR format for inbound rules",
          "items": {
            "type": "string"
          }
        },
        "subscriptions": {
          "type": "array",
          "description": "Subscriptions for inbound rules",
          "items": {
            "$ref": "#/definitions/NspAccessRulePropertiesSubscriptionsItem"
          }
        },
        "networkSecurityPerimeters": {
          "type": "array",
          "description": "NetworkSecurityPerimeters for inbound rules",
          "items": {
            "$ref": "#/definitions/NetworkSecurityPerimeter"
          },
          "readOnly": true
        },
        "fullyQualifiedDomainNames": {
          "type": "array",
          "description": "FQDN for outbound rules",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "NspAccessRulePropertiesSubscriptionsItem": {
      "type": "object",
      "description": "Subscription for inbound rule",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified identifier of subscription"
        }
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "PrivateEndpoint information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM identifier for Private Endpoint."
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "Properties of the PrivateEndpointConnection.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The Private Endpoint resource for this Connection."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/EventHubsPrivateLinkServiceConnectionState",
          "description": "Details about the state of the connection."
        },
        "provisioningState": {
          "$ref": "#/definitions/EventHubsPrivateEndpointConnectionProvisioningState",
          "description": "Provisioning state of the Private Endpoint Connection."
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of PrivateLinkResource",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id."
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkResourcesListResult": {
      "type": "object",
      "description": "Result of the List private link resources operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "A collection of private link resources",
          "items": {
            "$ref": "#/definitions/EventHubsPrivateLinkResourceData"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "A link for the next page of private link resources."
        }
      }
    },
    "ProvisioningIssue": {
      "type": "object",
      "description": "Describes Provisioning issue for given NetworkSecurityPerimeterConfiguration",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the issue"
        },
        "properties": {
          "$ref": "#/definitions/ProvisioningIssueProperties",
          "description": "Properties of Provisioning Issue",
          "readOnly": true
        }
      }
    },
    "ProvisioningIssueProperties": {
      "type": "object",
      "description": "Properties of Provisioning Issue",
      "properties": {
        "issueType": {
          "type": "string",
          "description": "Type of Issue"
        },
        "description": {
          "type": "string",
          "description": "Description of the issue"
        }
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "This determines if traffic is allowed over public network. By default it is enabled.",
      "enum": [
        "Enabled",
        "Disabled",
        "SecuredByPerimeter"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        }
      }
    },
    "ResourceAssociationAccessMode": {
      "type": "string",
      "description": "Access Mode of the resource association",
      "enum": [
        "NoAssociationMode",
        "EnforcedMode",
        "LearningMode",
        "AuditMode",
        "UnspecifiedMode"
      ],
      "x-ms-enum": {
        "name": "ResourceAssociationAccessMode",
        "modelAsString": true
      }
    },
    "RetentionDescription": {
      "type": "object",
      "description": "Properties to configure retention settings for the  eventhub",
      "properties": {
        "cleanupPolicy": {
          "$ref": "#/definitions/CleanupPolicyRetentionDescription",
          "description": "Enumerates the possible values for cleanup policy"
        },
        "retentionTimeInHours": {
          "type": "integer",
          "format": "int64",
          "description": "Number of hours to retain the events for this Event Hub. This value is only used when cleanupPolicy is Delete. If cleanupPolicy is Compaction the returned value of this property is Long.MaxValue"
        },
        "tombstoneRetentionTimeInHours": {
          "type": "integer",
          "format": "int32",
          "description": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is only used when cleanupPolicy is Compaction. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub"
        }
      }
    },
    "SchemaCompatibility": {
      "type": "string",
      "enum": [
        "None",
        "Backward",
        "Forward"
      ],
      "x-ms-enum": {
        "name": "SchemaCompatibility",
        "modelAsString": true
      }
    },
    "SchemaGroupProperties": {
      "type": "object",
      "properties": {
        "updatedAtUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Exact time the Schema Group was updated",
          "readOnly": true
        },
        "createdAtUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Exact time the Schema Group was created.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "The ETag value.",
          "readOnly": true
        },
        "groupProperties": {
          "type": "object",
          "description": "dictionary object for SchemaGroup group properties",
          "additionalProperties": {
            "type": "string"
          }
        },
        "schemaCompatibility": {
          "$ref": "#/definitions/SchemaCompatibility"
        },
        "schemaType": {
          "$ref": "#/definitions/SchemaType"
        }
      }
    },
    "SchemaType": {
      "type": "string",
      "enum": [
        "Unknown",
        "Avro"
      ],
      "x-ms-enum": {
        "name": "SchemaType",
        "modelAsString": true
      }
    },
    "Sku": {
      "type": "object",
      "description": "SKU parameters supplied to the create namespace operation",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "Name of this SKU."
        },
        "tier": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.SkuTier",
          "description": "The billing tier of this particular SKU."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "type": "string",
      "description": "Name of this SKU.",
      "enum": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true
      }
    },
    "Subnet": {
      "type": "object",
      "description": "Properties supplied for Subnet",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of Virtual Network Subnet"
        }
      }
    },
    "TlsVersion": {
      "type": "string",
      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
      "enum": [
        "1.0",
        "1.1",
        "1.2"
      ],
      "x-ms-enum": {
        "name": "TlsVersion",
        "modelAsString": true
      }
    },
    "UnavailableReason": {
      "type": "string",
      "description": "Specifies the reason for the unavailability of the service.",
      "enum": [
        "None",
        "InvalidName",
        "SubscriptionIsDisabled",
        "NameInUse",
        "NameInLockdown",
        "TooManyNamespaceInCurrentSubscription"
      ],
      "x-ms-enum": {
        "name": "UnavailableReason",
        "modelAsString": false
      }
    },
    "UserAssignedIdentityProperties": {
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "ARM ID of user Identity selected for encryption"
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2022-10-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_10_01_preview",
            "value": "2022-10-01-preview",
            "description": "The 2022-10-01-preview API version."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
