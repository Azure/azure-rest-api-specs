{
  "paths": {
    "/providers/microsoft.EventHub/operations": {
      "get": {
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.EventHub/availableClusterRegions": {
      "get": {
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.EventHub/checkNameAvailability": {
      "post": {
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.EventHub/clusters": {
      "get": {
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.EventHub/namespaces": {
      "get": {
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/clusters": {
      "get": {
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/clusters/{clusterName}": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter",
              "name__added": "clusterName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter",
              "name__added": "clusterName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50
            }
          ],
          [
            "~",
            {
              "schema": {
                "required__deleted": [
                  "location"
                ]
              }
            }
          ]
        ],
        "responses": {
          "202": {
            "headers__added": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "patch": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter",
              "name__added": "clusterName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "202": {
            "headers__added": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter",
              "name__added": "clusterName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50
            }
          ]
        ],
        "responses": {
          "202": {
            "headers__added": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/clusters/{clusterName}/namespaces": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter",
              "name__added": "clusterName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/clusters/{clusterName}/quotaConfiguration/default": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter",
              "name__added": "clusterName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "patch": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter",
              "name__added": "clusterName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50
            }
          ],
          [
            "~",
            {
              "schema": {
                "required__deleted": [
                  "settings"
                ]
              }
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces": {
      "get": {
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "schema": {
                "required__deleted": [
                  "location"
                ]
              }
            }
          ]
        ],
        "responses": {
          "201": {
            "headers__added": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "202": {
            "headers__added": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-schema__added": "#/definitions/EHNamespace"
        }
      },
      "patch": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ]
        ],
        "responses": {
          "202": {
            "headers__added": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/applicationGroups": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/applicationGroups/{applicationGroupName}": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v2/definitions.json#/parameters/ApplicationGroupNameParameter",
              "name__added": "applicationGroupName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "put": {
        "x-ms-azure-resource__deleted": true,
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v2/definitions.json#/parameters/ApplicationGroupNameParameter",
              "name__added": "applicationGroupName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v2/definitions.json#/parameters/ApplicationGroupNameParameter",
              "name__added": "applicationGroupName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/authorizationRules": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter",
              "name__added": "authorizationRuleName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter",
              "name__added": "authorizationRuleName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter",
              "name__added": "authorizationRuleName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter",
              "name__added": "authorizationRuleName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter",
              "name__added": "authorizationRuleName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AliasNameParameter",
              "name__added": "alias",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 50
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AliasNameParameter",
              "name__added": "alias",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 50
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AliasNameParameter",
              "name__added": "alias",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 50
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AliasNameParameter",
              "name__added": "alias",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 50
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AliasNameParameter",
              "name__added": "alias",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 50
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter",
              "name__added": "authorizationRuleName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AliasNameParameter",
              "name__added": "alias",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 50
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter",
              "name__added": "authorizationRuleName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/breakPairing": {
      "post": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AliasNameParameter",
              "name__added": "alias",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 50
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/failover": {
      "post": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AliasNameParameter",
              "name__added": "alias",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 50
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/checkNameAvailability": {
      "post": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/SkipParameter",
              "name__added": "$skip",
              "in__added": "query",
              "type__added": "integer",
              "format__added": "int32",
              "minimum__added": 0,
              "maximum__added": 1000
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/TopParameter",
              "name__added": "$top",
              "in__added": "query",
              "type__added": "integer",
              "format__added": "int32",
              "minimum__added": 1,
              "maximum__added": 1000
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter",
              "name__added": "authorizationRuleName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter",
              "name__added": "authorizationRuleName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter",
              "name__added": "authorizationRuleName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter",
              "name__added": "authorizationRuleName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter",
              "name__added": "authorizationRuleName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/SkipParameter",
              "name__added": "$skip",
              "in__added": "query",
              "type__added": "integer",
              "format__added": "int32",
              "minimum__added": 0,
              "maximum__added": 1000
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/TopParameter",
              "name__added": "$top",
              "in__added": "query",
              "type__added": "integer",
              "format__added": "int32",
              "minimum__added": 1,
              "maximum__added": 1000
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/ConsumerGroupNameParameter",
              "name__added": "consumerGroupName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 50
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/ConsumerGroupNameParameter",
              "name__added": "consumerGroupName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 50
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter",
              "name__added": "eventHubName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/ConsumerGroupNameParameter",
              "name__added": "consumerGroupName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 50
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/failover": {
      "post": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "202": {
            "headers": {
              "azure-AsyncOperation__deleted": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location__deleted": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "Azure-AsyncOperation__added": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location__added": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-schema__deleted": "#/definitions/FailOver"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations/{resourceAssociationName}": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/ResourceAssociationNameParameter",
              "name__added": "resourceAssociationName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string"
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations/{resourceAssociationName}/reconcile": {
      "post": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/ResourceAssociationNameParameter",
              "name__added": "resourceAssociationName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string"
            }
          ]
        ],
        "responses": {
          "202": {
            "headers__added": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/PrivateEndpointConnectionNameParameter",
              "name__added": "privateEndpointConnectionName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string"
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "-",
            {
              "$ref": "../../../common/v1/definitions.json#/parameters/PrivateEndpointConnectionNameParameter"
            }
          ],
          [
            "+",
            {
              "name": "privateEndpointConnectionName",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/PrivateEndpointConnectionNameParameter",
              "name__added": "privateEndpointConnectionName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string"
            }
          ]
        ],
        "responses": {
          "202": {
            "headers__added": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/privateLinkResources": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/schemagroups": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/SkipParameter",
              "name__added": "$skip",
              "in__added": "query",
              "type__added": "integer",
              "format__added": "int32",
              "minimum__added": 0,
              "maximum__added": 1000
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/TopParameter",
              "name__added": "$top",
              "in__added": "query",
              "type__added": "integer",
              "format__added": "int32",
              "minimum__added": 1,
              "maximum__added": 1000
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/schemagroups/{schemaGroupName}": {
      "get": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v2/definitions.json#/parameters/SchemaGroupNameParameter",
              "name__added": "schemaGroupName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "put": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v2/definitions.json#/parameters/SchemaGroupNameParameter",
              "name__added": "schemaGroupName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ],
          [
            " "
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          [
            "~",
            {
              "$ref__deleted": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter",
              "name__added": "namespaceName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 6,
              "maxLength__added": 50,
              "pattern__added": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
            }
          ],
          [
            "~",
            {
              "$ref__deleted": "../../../common/v2/definitions.json#/parameters/SchemaGroupNameParameter",
              "name__added": "schemaGroupName",
              "in__added": "path",
              "required__added": true,
              "type__added": "string",
              "minLength__added": 1,
              "maxLength__added": 256
            }
          ]
        ],
        "responses": {
          "default": {
            "schema": {
              "$ref": {
                "__old": "../../../common/v2/definitions.json#/definitions/ErrorResponse",
                "__new": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationGroupProperties__added": {
      "type": "object",
      "properties": {
        "isEnabled": {
          "type": "boolean"
        },
        "clientAppGroupIdentifier": {
          "type": "string"
        },
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGroupPolicy"
          }
        }
      },
      "required": [
        "clientAppGroupIdentifier"
      ]
    },
    "ArmDisasterRecoveryProperties__added": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Accepted",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningStateDR",
            "modelAsString": false
          },
          "readOnly": true
        },
        "partnerNamespace": {
          "type": "string"
        },
        "alternateName": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "Primary",
            "PrimaryNotReplicating",
            "Secondary"
          ],
          "x-ms-enum": {
            "name": "RoleDisasterRecovery",
            "modelAsString": false
          },
          "readOnly": true
        },
        "pendingReplicationOperationsCount": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "AuthorizationRuleProperties__added": {
      "type": "object",
      "properties": {
        "rights": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Manage",
              "Send",
              "Listen"
            ],
            "x-ms-enum": {
              "name": "AccessRights",
              "modelAsString": true
            }
          }
        }
      },
      "required": [
        "rights"
      ]
    },
    "ClusterProperties__added": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Unknown",
            "Creating",
            "Deleting",
            "Scaling",
            "Active",
            "Failed",
            "Succeeded",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "readOnly": true
        },
        "metricId": {
          "type": "string",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "readOnly": true
        },
        "supportsScaling": {
          "type": "boolean"
        },
        "platformCapabilities": {
          "$ref": "#/definitions/PlatformCapabilities"
        }
      }
    },
    "ConsumerGroupProperties__added": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "userMetadata": {
          "type": "string"
        }
      }
    },
    "DestinationProperties__added": {
      "type": "object",
      "properties": {
        "storageAccountResourceId": {
          "type": "string"
        },
        "blobContainer": {
          "type": "string"
        },
        "archiveNameFormat": {
          "type": "string"
        },
        "dataLakeSubscriptionId": {
          "type": "string",
          "format": "uuid"
        },
        "dataLakeAccountName": {
          "type": "string"
        },
        "dataLakeFolderPath": {
          "type": "string"
        }
      }
    },
    "EHNamespaceProperties__added": {
      "type": "object",
      "properties": {
        "minimumTlsVersion": {
          "type": "string",
          "enum": [
            "1.0",
            "1.1",
            "1.2",
            "1.3"
          ],
          "x-ms-enum": {
            "name": "TlsVersion",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "serviceBusEndpoint": {
          "type": "string",
          "readOnly": true
        },
        "clusterArmId": {
          "type": "string"
        },
        "metricId": {
          "type": "string",
          "readOnly": true
        },
        "isAutoInflateEnabled": {
          "type": "boolean"
        },
        "publicNetworkAccess": {
          "type": "string",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled",
            "SecuredByPerimeter"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        },
        "maximumThroughputUnits": {
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "kafkaEnabled": {
          "type": "boolean"
        },
        "zoneRedundant": {
          "type": "boolean"
        },
        "encryption": {
          "$ref": "#/definitions/Encryption"
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "disableLocalAuth": {
          "type": "boolean"
        },
        "alternateName": {
          "type": "string"
        },
        "platformCapabilities": {
          "$ref": "#/definitions/PlatformCapabilities"
        },
        "geoDataReplication": {
          "$ref": "#/definitions/GeoDataReplicationProperties"
        }
      }
    },
    "ErrorAdditionalInfo__added": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true
        },
        "info": {
          "readOnly": true
        }
      }
    },
    "ErrorDetail__added": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true
        },
        "additionalInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true
        }
      }
    },
    "ErrorResponse__added": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail"
        }
      }
    },
    "EventhubProperties__added": {
      "type": "object",
      "properties": {
        "partitionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "messageRetentionInDays": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "partitionCount": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Disabled",
            "Restoring",
            "SendDisabled",
            "ReceiveDisabled",
            "Creating",
            "Deleting",
            "Renaming",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "EntityStatus",
            "modelAsString": false
          }
        },
        "captureDescription": {
          "$ref": "#/definitions/CaptureDescription"
        },
        "retentionDescription": {
          "$ref": "#/definitions/RetentionDescription"
        },
        "messageTimestampDescription": {
          "$ref": "#/definitions/MessageTimestampDescription"
        },
        "identifier": {
          "type": "string",
          "readOnly": true
        },
        "userMetadata": {
          "type": "string"
        }
      }
    },
    "NetworkRuleSetProperties__added": {
      "type": "object",
      "properties": {
        "trustedServiceAccessEnabled": {
          "type": "boolean"
        },
        "defaultAction": {
          "type": "string",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "DefaultAction",
            "modelAsString": true
          }
        },
        "virtualNetworkRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NWRuleSetVirtualNetworkRules"
          }
        },
        "ipRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NWRuleSetIpRules"
          }
        },
        "publicNetworkAccess": {
          "type": "string",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled",
            "SecuredByPerimeter"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccessFlag",
            "modelAsString": true
          }
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationPropertiesProfile__added": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "accessRulesVersion": {
          "type": "string"
        },
        "accessRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NspAccessRule"
          }
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation__added": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "accessMode": {
          "type": "string",
          "enum": [
            "NoAssociationMode",
            "EnforcedMode",
            "LearningMode",
            "AuditMode",
            "UnspecifiedMode"
          ],
          "x-ms-enum": {
            "name": "ResourceAssociationAccessMode",
            "modelAsString": true
          }
        }
      }
    },
    "NspAccessRuleProperties__added": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "NspAccessRuleDirection",
            "modelAsString": true
          }
        },
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subscriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NspAccessRulePropertiesSubscriptionsItem"
          }
        },
        "networkSecurityPerimeters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkSecurityPerimeter"
          },
          "readOnly": true
        },
        "fullyQualifiedDomainNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "NspAccessRulePropertiesSubscriptionsItem__added": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "ProvisioningIssueProperties__added": {
      "type": "object",
      "properties": {
        "issueType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "SchemaGroupProperties__added": {
      "type": "object",
      "properties": {
        "updatedAtUtc": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdAtUtc": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "groupProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "schemaCompatibility": {
          "type": "string",
          "enum": [
            "None",
            "Backward",
            "Forward"
          ],
          "x-ms-enum": {
            "name": "SchemaCompatibility",
            "modelAsString": true
          }
        },
        "schemaType": {
          "type": "string",
          "enum": [
            "Unknown",
            "Avro",
            "ProtoBuf",
            "Json"
          ],
          "x-ms-enum": {
            "name": "SchemaType",
            "modelAsString": true
          }
        }
      }
    },
    "ApplicationGroup": {
      "properties": {
        "systemData__deleted": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        },
        "location__added": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "type__deleted": "object",
          "properties__deleted": {
            "isEnabled": {
              "type": "boolean",
              "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"
            },
            "clientAppGroupIdentifier": {
              "type": "string",
              "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"
            },
            "policies": {
              "type": "array",
              "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic.",
              "items": {
                "$ref": "#/definitions/ApplicationGroupPolicy"
              },
              "x-ms-identifiers": []
            }
          },
          "required__deleted": [
            "clientAppGroupIdentifier"
          ],
          "$ref__added": "#/definitions/ApplicationGroupProperties"
        }
      },
      "allOf": [
        [
          "~",
          {
            "$ref": {
              "__old": "../../../common/v2/definitions.json#/definitions/ProxyResource",
              "__new": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
            }
          }
        ]
      ]
    },
    "ApplicationGroupListResult": {
      "required__added": [
        "value"
      ]
    },
    "ArmDisasterRecovery": {
      "properties": {
        "systemData__deleted": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        },
        "location__added": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "type__deleted": "object",
          "properties__deleted": {
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
              "enum": [
                "Accepted",
                "Succeeded",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStateDR",
                "modelAsString": false
              },
              "readOnly": true
            },
            "partnerNamespace": {
              "type": "string",
              "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
            },
            "alternateName": {
              "type": "string",
              "description": "Alternate name specified when alias and namespace names are same."
            },
            "role": {
              "type": "string",
              "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
              "enum": [
                "Primary",
                "PrimaryNotReplicating",
                "Secondary"
              ],
              "x-ms-enum": {
                "name": "RoleDisasterRecovery",
                "modelAsString": false
              },
              "readOnly": true
            },
            "pendingReplicationOperationsCount": {
              "type": "integer",
              "format": "int64",
              "description": "Number of entities pending to be replicated.",
              "readOnly": true
            }
          },
          "$ref__added": "#/definitions/ArmDisasterRecoveryProperties"
        }
      },
      "allOf": [
        [
          "~",
          {
            "$ref": {
              "__old": "../../../common/v2/definitions.json#/definitions/ProxyResource",
              "__new": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
            }
          }
        ]
      ]
    },
    "ArmDisasterRecoveryListResult": {
      "required__added": [
        "value"
      ]
    },
    "AuthorizationRule": {
      "properties": {
        "systemData__deleted": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        },
        "location__added": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "type__deleted": "object",
          "properties__deleted": {
            "rights": {
              "type": "array",
              "description": "The rights associated with the rule.",
              "items": {
                "type": "string",
                "enum": [
                  "Manage",
                  "Send",
                  "Listen"
                ],
                "x-ms-enum": {
                  "name": "AccessRights",
                  "modelAsString": true
                }
              }
            }
          },
          "required__deleted": [
            "rights"
          ],
          "$ref__added": "#/definitions/AuthorizationRuleProperties"
        }
      },
      "allOf": [
        [
          "~",
          {
            "$ref": {
              "__old": "../../../common/v2/definitions.json#/definitions/ProxyResource",
              "__new": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
            }
          }
        ]
      ]
    },
    "AuthorizationRuleListResult": {
      "required__added": [
        "value"
      ]
    },
    "Cluster": {
      "properties": {
        "systemData__deleted": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        },
        "tags__added": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location__added": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "type__deleted": "object",
          "properties__deleted": {
            "createdAt": {
              "type": "string",
              "description": "The UTC time when the Event Hubs Cluster was created.",
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the Cluster.",
              "enum": [
                "Unknown",
                "Creating",
                "Deleting",
                "Scaling",
                "Active",
                "Failed",
                "Succeeded",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "provisioningState",
                "modelAsString": true
              },
              "readOnly": true
            },
            "updatedAt": {
              "type": "string",
              "description": "The UTC time when the Event Hubs Cluster was last updated.",
              "readOnly": true
            },
            "metricId": {
              "type": "string",
              "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
              "readOnly": true
            },
            "status": {
              "type": "string",
              "description": "Status of the Cluster resource",
              "readOnly": true
            },
            "supportsScaling": {
              "type": "boolean",
              "description": "A value that indicates whether Scaling is Supported."
            },
            "platformCapabilities": {
              "$ref": "#/definitions/PlatformCapabilities"
            }
          },
          "$ref__added": "#/definitions/ClusterProperties"
        }
      },
      "allOf": [
        [
          "~",
          {
            "$ref": {
              "__old": "../../../common/v1/definitions.json#/definitions/TrackedResource",
              "__new": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
            }
          }
        ]
      ]
    },
    "ClusterListResult": {
      "required__added": [
        "value"
      ]
    },
    "ConfidentialCompute": {
      "x-ms-client-flatten__deleted": true
    },
    "ConsumerGroup": {
      "properties": {
        "systemData__deleted": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        },
        "location__added": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "type__deleted": "object",
          "properties__deleted": {
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Exact time the message was created.",
              "readOnly": true
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The exact time the message was updated.",
              "readOnly": true
            },
            "userMetadata": {
              "type": "string",
              "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
            }
          },
          "$ref__added": "#/definitions/ConsumerGroupProperties"
        }
      },
      "allOf": [
        [
          "~",
          {
            "$ref": {
              "__old": "../../../common/v2/definitions.json#/definitions/ProxyResource",
              "__new": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
            }
          }
        ]
      ]
    },
    "ConsumerGroupListResult": {
      "required__added": [
        "value"
      ]
    },
    "Destination": {
      "properties": {
        "properties": {
          "type__deleted": "object",
          "properties__deleted": {
            "storageAccountResourceId": {
              "type": "string",
              "description": "Resource id of the storage account to be used to create the blobs"
            },
            "blobContainer": {
              "type": "string",
              "description": "Blob container Name"
            },
            "archiveNameFormat": {
              "type": "string",
              "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
            },
            "dataLakeSubscriptionId": {
              "type": "string",
              "format": "uuid",
              "description": "Subscription Id of Azure Data Lake Store"
            },
            "dataLakeAccountName": {
              "type": "string",
              "description": "The Azure Data Lake Store name for the captured events"
            },
            "dataLakeFolderPath": {
              "type": "string",
              "description": "The destination folder path for the captured events"
            }
          },
          "$ref__added": "#/definitions/DestinationProperties"
        }
      }
    },
    "EHNamespace": {
      "properties": {
        "systemData__deleted": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        },
        "tags__added": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location__added": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "properties": {
          "type__deleted": "object",
          "properties__deleted": {
            "minimumTlsVersion": {
              "type": "string",
              "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
              "enum": [
                "1.0",
                "1.1",
                "1.2",
                "1.3"
              ],
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the Namespace.",
              "readOnly": true
            },
            "status": {
              "type": "string",
              "description": "Status of the Namespace.",
              "readOnly": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The time the Namespace was created.",
              "readOnly": true
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The time the Namespace was updated.",
              "readOnly": true
            },
            "serviceBusEndpoint": {
              "type": "string",
              "description": "Endpoint you can use to perform Service Bus operations.",
              "readOnly": true
            },
            "clusterArmId": {
              "type": "string",
              "description": "Cluster ARM ID of the Namespace."
            },
            "metricId": {
              "type": "string",
              "description": "Identifier for Azure Insights metrics.",
              "readOnly": true
            },
            "isAutoInflateEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
            },
            "publicNetworkAccess": {
              "type": "string",
              "description": "This determines if traffic is allowed over public network. By default it is enabled.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              }
            },
            "maximumThroughputUnits": {
              "type": "integer",
              "format": "int32",
              "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
              "minimum": 0
            },
            "kafkaEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
            },
            "zoneRedundant": {
              "type": "boolean",
              "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
            },
            "encryption": {
              "$ref": "#/definitions/Encryption",
              "description": "Properties of BYOK Encryption description"
            },
            "privateEndpointConnections": {
              "type": "array",
              "description": "List of private endpoint connections.",
              "items": {
                "$ref": "#/definitions/PrivateEndpointConnection"
              }
            },
            "disableLocalAuth": {
              "type": "boolean",
              "description": "This property disables SAS authentication for the Event Hubs namespace."
            },
            "alternateName": {
              "type": "string",
              "description": "Alternate name specified when alias and namespace names are same."
            },
            "platformCapabilities": {
              "$ref": "#/definitions/PlatformCapabilities"
            },
            "geoDataReplication": {
              "$ref": "#/definitions/GeoDataReplicationProperties",
              "description": "Geo Data Replication settings for the namespace"
            }
          },
          "$ref__added": "#/definitions/EHNamespaceProperties"
        }
      },
      "allOf": [
        [
          "~",
          {
            "$ref": {
              "__old": "../../../common/v1/definitions.json#/definitions/TrackedResource",
              "__new": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
            }
          }
        ]
      ]
    },
    "EHNamespaceListResult": {
      "required__added": [
        "value"
      ]
    },
    "Encryption": {
      "x-ms-client-flatten__deleted": true,
      "properties": {
        "keySource": {
          "x-ms-enum": {
            "name__deleted": "KeySource"
          }
        }
      }
    },
    "EventHubListResult": {
      "required__added": [
        "value"
      ]
    },
    "Eventhub": {
      "properties": {
        "systemData__deleted": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        },
        "location__added": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "type__deleted": "object",
          "properties__deleted": {
            "partitionIds": {
              "type": "array",
              "description": "Current number of shards on the Event Hub.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Exact time the Event Hub was created.",
              "readOnly": true
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The exact time the message was updated.",
              "readOnly": true
            },
            "messageRetentionInDays": {
              "type": "integer",
              "format": "int64",
              "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days",
              "minimum": 1
            },
            "partitionCount": {
              "type": "integer",
              "format": "int64",
              "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.",
              "minimum": 1
            },
            "status": {
              "type": "string",
              "description": "Enumerates the possible values for the status of the Event Hub.",
              "enum": [
                "Active",
                "Disabled",
                "Restoring",
                "SendDisabled",
                "ReceiveDisabled",
                "Creating",
                "Deleting",
                "Renaming",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "EntityStatus",
                "modelAsString": false
              }
            },
            "captureDescription": {
              "$ref": "#/definitions/CaptureDescription",
              "description": "Properties of capture description"
            },
            "retentionDescription": {
              "$ref": "#/definitions/RetentionDescription",
              "description": "Event Hub retention settings"
            },
            "messageTimestampDescription": {
              "$ref": "#/definitions/MessageTimestampDescription",
              "description": "Properties of MessageTimestamp Description"
            },
            "identifier": {
              "type": "string",
              "description": "Denotes the unique identifier for event hub and is generated by service while creating topic. This identifier can be used in kafka runtime apis wherever a UUID is required e.g Fetch & Delete Topic. This identifier is not supported in AMQP runtime operations yet.",
              "readOnly": true
            },
            "userMetadata": {
              "type": "string",
              "description": "Gets and Sets Metadata of User."
            }
          },
          "$ref__added": "#/definitions/EventhubProperties"
        }
      },
      "allOf": [
        [
          "~",
          {
            "$ref": {
              "__old": "../../../common/v2/definitions.json#/definitions/ProxyResource",
              "__new": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
            }
          }
        ]
      ]
    },
    "Identity": {
      "x-ms-client-flatten__deleted": true
    },
    "NWRuleSetIpRules": {
      "x-ms-client-flatten__deleted": true
    },
    "NWRuleSetVirtualNetworkRules": {
      "x-ms-client-flatten__deleted": true
    },
    "NetworkRuleSet": {
      "properties": {
        "systemData__deleted": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        },
        "location__added": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "type__deleted": "object",
          "properties__deleted": {
            "trustedServiceAccessEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether Trusted Service Access is Enabled or not."
            },
            "defaultAction": {
              "type": "string",
              "description": "Default Action for Network Rule Set",
              "enum": [
                "Allow",
                "Deny"
              ],
              "x-ms-enum": {
                "name": "DefaultAction",
                "modelAsString": true
              }
            },
            "virtualNetworkRules": {
              "type": "array",
              "description": "List VirtualNetwork Rules",
              "items": {
                "$ref": "#/definitions/NWRuleSetVirtualNetworkRules"
              }
            },
            "ipRules": {
              "type": "array",
              "description": "List of IpRules",
              "items": {
                "$ref": "#/definitions/NWRuleSetIpRules"
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules. ",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccessFlag",
                "modelAsString": true
              }
            }
          },
          "$ref__added": "#/definitions/NetworkRuleSetProperties"
        }
      },
      "allOf": [
        [
          "~",
          {
            "$ref": {
              "__old": "../../../common/v2/definitions.json#/definitions/ProxyResource",
              "__new": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
            }
          }
        ]
      ]
    },
    "NetworkRuleSetListResult": {
      "required__added": [
        "value"
      ]
    },
    "NetworkSecurityPerimeter": {
      "readOnly__deleted": true
    },
    "NetworkSecurityPerimeterConfiguration": {
      "readOnly__deleted": true,
      "properties": {
        "location__added": {
          "type": "string",
          "readOnly": true
        }
      },
      "allOf": [
        [
          "~",
          {
            "$ref": {
              "__old": "../../../common/v2/definitions.json#/definitions/ProxyResource",
              "__new": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
            }
          }
        ]
      ]
    },
    "NetworkSecurityPerimeterConfigurationProperties": {
      "readOnly__deleted": true,
      "properties": {
        "provisioningIssues": {
          "readOnly__added": true
        },
        "networkSecurityPerimeter": {
          "readOnly__added": true
        },
        "resourceAssociation": {
          "type__deleted": "object",
          "properties__deleted": {
            "name": {
              "type": "string",
              "description": "Name of the resource association"
            },
            "accessMode": {
              "type": "string",
              "description": "Access Mode of the resource association",
              "enum": [
                "NoAssociationMode",
                "EnforcedMode",
                "LearningMode",
                "AuditMode",
                "UnspecifiedMode"
              ],
              "x-ms-enum": {
                "name": "ResourceAssociationAccessMode",
                "modelAsString": true
              }
            }
          },
          "$ref__added": "#/definitions/NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation"
        },
        "profile": {
          "type__deleted": "object",
          "properties__deleted": {
            "name": {
              "type": "string",
              "description": "Name of the resource"
            },
            "accessRulesVersion": {
              "type": "string",
              "description": "Current access rules version"
            },
            "accessRules": {
              "type": "array",
              "description": "List of Access Rules",
              "items": {
                "$ref": "#/definitions/NspAccessRule"
              }
            }
          },
          "$ref__added": "#/definitions/NetworkSecurityPerimeterConfigurationPropertiesProfile"
        }
      }
    },
    "NspAccessRule": {
      "readOnly__deleted": true,
      "properties": {
        "properties": {
          "type__deleted": "object",
          "properties__deleted": {
            "direction": {
              "type": "string",
              "description": "Direction of Access Rule",
              "enum": [
                "Inbound",
                "Outbound"
              ],
              "x-ms-enum": {
                "name": "NspAccessRuleDirection",
                "modelAsString": true
              }
            },
            "addressPrefixes": {
              "type": "array",
              "description": "Address prefixes in the CIDR format for inbound rules",
              "items": {
                "type": "string",
                "description": "IP Address"
              }
            },
            "subscriptions": {
              "type": "array",
              "description": "Subscriptions for inbound rules",
              "items": {
                "type": "object",
                "description": "Subscription for inbound rule",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Fully qualified identifier of subscription"
                  }
                },
                "readOnly": true
              }
            },
            "networkSecurityPerimeters": {
              "type": "array",
              "description": "NetworkSecurityPerimeters for inbound rules",
              "items": {
                "$ref": "#/definitions/NetworkSecurityPerimeter"
              },
              "readOnly": true
            },
            "fullyQualifiedDomainNames": {
              "type": "array",
              "description": "FQDN for outbound rules",
              "items": {
                "type": "string",
                "description": "Fully qualified domain name"
              },
              "readOnly": true
            }
          },
          "$ref__added": "#/definitions/NspAccessRuleProperties"
        }
      }
    },
    "Operation": {
      "properties": {
        "properties": {
          "type__deleted": "object"
        }
      }
    },
    "OperationListResult": {
      "required__added": [
        "value"
      ]
    },
    "PlatformCapabilities": {
      "x-ms-client-flatten__deleted": true
    },
    "PrivateEndpointConnection": {
      "properties": {
        "systemData__deleted": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        },
        "location__added": {
          "type": "string",
          "readOnly": true
        }
      },
      "allOf": [
        [
          "~",
          {
            "$ref": {
              "__old": "../../../common/v2/definitions.json#/definitions/ProxyResource",
              "__new": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
            }
          }
        ]
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "required__added": [
        "value"
      ]
    },
    "PrivateLinkResourcesListResult": {
      "required__added": [
        "value"
      ]
    },
    "ProvisioningIssue": {
      "readOnly__deleted": true,
      "properties": {
        "properties": {
          "type__deleted": "object",
          "properties__deleted": {
            "issueType": {
              "type": "string",
              "description": "Type of Issue"
            },
            "description": {
              "type": "string",
              "description": "Description of the issue"
            }
          },
          "$ref__added": "#/definitions/ProvisioningIssueProperties"
        }
      }
    },
    "SchemaGroup": {
      "properties": {
        "systemData__deleted": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        },
        "location__added": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "type__deleted": "object",
          "properties__deleted": {
            "updatedAtUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Exact time the Schema Group was updated",
              "readOnly": true
            },
            "createdAtUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Exact time the Schema Group was created.",
              "readOnly": true
            },
            "eTag": {
              "type": "string",
              "format": "uuid",
              "description": "The ETag value.",
              "readOnly": true
            },
            "groupProperties": {
              "type": "object",
              "description": "dictionary object for SchemaGroup group properties",
              "additionalProperties": {
                "type": "string"
              }
            },
            "schemaCompatibility": {
              "type": "string",
              "description": "",
              "enum": [
                "None",
                "Backward",
                "Forward"
              ],
              "x-ms-enum": {
                "name": "SchemaCompatibility",
                "modelAsString": true
              }
            },
            "schemaType": {
              "type": "string",
              "description": "",
              "enum": [
                "Unknown",
                "Avro",
                "ProtoBuf",
                "Json"
              ],
              "x-ms-enum": {
                "name": "SchemaType",
                "modelAsString": true
              }
            }
          },
          "$ref__added": "#/definitions/SchemaGroupProperties"
        }
      },
      "allOf": [
        [
          "~",
          {
            "$ref": {
              "__old": "../../../common/v2/definitions.json#/definitions/ProxyResource",
              "__new": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
            }
          }
        ]
      ]
    },
    "SchemaGroupListResult": {
      "required__added": [
        "value"
      ]
    },
    "Sku": {
      "properties": {
        "capacity": {
          "minimum__deleted": 0
        }
      }
    },
    "userAssignedIdentityProperties": {
      "x-ms-client-flatten__deleted": true
    }
  }
}