{
  "swagger": "2.0",
  "info": {
    "title": "EventHubManagementClient",
    "version": "2025-05-01-preview",
    "description": "Azure Event Hubs client"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/providers/microsoft.EventHub/operations": {
      "get": {
        "operationId": "Operations_List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHOperations_List": {
            "$ref": "./examples/EHOperations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.EventHub/availableClusterRegions": {
      "get": {
        "operationId": "Clusters_ListAvailableClusterRegion",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AvailableClustersList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListAvailableClusters": {
            "$ref": "./examples/Clusters/ListAvailableClustersGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.EventHub/checkNameAvailability": {
      "post": {
        "operationId": "Namespaces_CheckNameAvailability",
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespacesCheckNameAvailability": {
            "$ref": "./examples/NameSpaces/EHNameSpaceCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.EventHub/clusters": {
      "get": {
        "operationId": "Clusters_ListBySubscription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClustersListBySubscription": {
            "$ref": "./examples/Clusters/ClustersListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.EventHub/namespaces": {
      "get": {
        "operationId": "Namespaces_List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EHNamespaceListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespacesListBySubscription": {
            "$ref": "./examples/NameSpaces/EHNameSpaceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/clusters": {
      "get": {
        "operationId": "Clusters_ListByResourceGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClustersListByResourceGroup": {
            "$ref": "./examples/Clusters/ClustersListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/clusters/{clusterName}": {
      "get": {
        "operationId": "Clusters_Get",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClusterGet": {
            "$ref": "./examples/Clusters/ClusterGet.json"
          }
        }
      },
      "put": {
        "operationId": "Clusters_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster",
              "required": [
                "location"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClusterPut": {
            "$ref": "./examples/Clusters/ClusterPut.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Clusters_Update",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClusterPatch": {
            "$ref": "./examples/Clusters/ClusterPatch.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Clusters_Delete",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClusterDelete": {
            "$ref": "./examples/Clusters/ClusterDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/clusters/{clusterName}/namespaces": {
      "get": {
        "operationId": "Clusters_ListNamespaces",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EHNamespaceIdListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListNamespacesInCluster": {
            "$ref": "./examples/Clusters/ListNamespacesInClusterGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/clusters/{clusterName}/quotaConfiguration/default": {
      "get": {
        "operationId": "Configuration_Get",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClustersQuotasConfigurationGet": {
            "$ref": "./examples/Clusters/ClusterQuotaConfigurationGet.json"
          }
        }
      },
      "patch": {
        "operationId": "Configuration_Patch",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ClusterNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties",
              "required": [
                "settings"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClustersQuotasConfigurationPatch": {
            "$ref": "./examples/Clusters/ClusterQuotaConfigurationPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces": {
      "get": {
        "operationId": "Namespaces_ListByResourceGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EHNamespaceListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespaceListByResourceGroup": {
            "$ref": "./examples/NameSpaces/EHNameSpaceListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}": {
      "get": {
        "operationId": "Namespaces_Get",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceGet": {
            "$ref": "./examples/NameSpaces/EHNameSpaceGet.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EHNamespace",
              "required": [
                "location"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespaceCreate": {
            "$ref": "./examples/NameSpaces/EHNameSpaceCreate.json"
          },
          "NamespaceWithGeoDRCreate": {
            "$ref": "./examples/NameSpaces/NamespaceWithGeoDRCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Namespaces_Update",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespacesUpdate": {
            "$ref": "./examples/NameSpaces/EHNameSpaceUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Namespaces_Delete",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceDelete": {
            "$ref": "./examples/NameSpaces/EHNameSpaceDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/applicationGroups": {
      "get": {
        "operationId": "ApplicationGroup_ListByNamespace",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ApplicationGroupListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListApplicationGroups": {
            "$ref": "./examples/ApplicationGroup/ApplicationGroupListByNamespace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/applicationGroups/{applicationGroupName}": {
      "get": {
        "operationId": "ApplicationGroup_Get",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v2/definitions.json#/parameters/ApplicationGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroupGet": {
            "$ref": "./examples/ApplicationGroup/ApplicationGroupGet.json"
          }
        }
      },
      "put": {
        "operationId": "ApplicationGroup_CreateOrUpdateApplicationGroup",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v2/definitions.json#/parameters/ApplicationGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroupCreate": {
            "$ref": "./examples/ApplicationGroup/ApplicationGroupCreate.json"
          }
        },
        "x-ms-azure-resource": true
      },
      "delete": {
        "operationId": "ApplicationGroup_Delete",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v2/definitions.json#/parameters/ApplicationGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroupDelete": {
            "$ref": "./examples/ApplicationGroup/ApplicationGroupDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/authorizationRules": {
      "get": {
        "operationId": "Namespaces_ListAuthorizationRules",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListAuthorizationRules": {
            "$ref": "./examples/NameSpaces/EHNameSpaceAuthorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "Namespaces_GetAuthorizationRule",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleGet": {
            "$ref": "./examples/NameSpaces/EHNameSpaceAuthorizationRuleGet.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleCreate": {
            "$ref": "./examples/NameSpaces/EHNameSpaceAuthorizationRuleCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleDelete": {
            "$ref": "./examples/NameSpaces/EHNameSpaceAuthorizationRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "Namespaces_ListKeys",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleListKey": {
            "$ref": "./examples/NameSpaces/EHNameSpaceAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "Namespaces_RegenerateKeys",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateAccessKeyParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleRegenerateKey": {
            "$ref": "./examples/NameSpaces/EHNameSpaceAuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs": {
      "get": {
        "operationId": "DisasterRecoveryConfigs_List",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ArmDisasterRecoveryListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasList": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}": {
      "get": {
        "operationId": "DisasterRecoveryConfigs_Get",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AliasNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ArmDisasterRecovery"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasGet": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasGet.json"
          }
        }
      },
      "put": {
        "operationId": "DisasterRecoveryConfigs_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AliasNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArmDisasterRecovery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ArmDisasterRecovery"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ArmDisasterRecovery"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasCreate": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "DisasterRecoveryConfigs_Delete",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AliasNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasDelete": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules": {
      "get": {
        "operationId": "DisasterRecoveryConfigs_ListAuthorizationRules",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AliasNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListAuthorizationRules": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasAuthorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "DisasterRecoveryConfigs_GetAuthorizationRule",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AliasNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleGet": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasAuthorizationRuleGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_ListKeys",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AliasNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleListKey": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/breakPairing": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_BreakPairing",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AliasNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasBreakPairing": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasBreakPairing.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/failover": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_FailOver",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AliasNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasFailOver": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasFailOver.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/checkNameAvailability": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_CheckNameAvailability",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespacesCheckNameAvailability": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs": {
      "get": {
        "operationId": "EventHubs_ListByNamespace",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SkipParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EventHubListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubsListAll": {
            "$ref": "./examples/EventHubs/EHEventHubListByNameSpace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}": {
      "get": {
        "operationId": "EventHubs_Get",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Eventhub"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubGet": {
            "$ref": "./examples/EventHubs/EHEventHubGet.json"
          }
        }
      },
      "put": {
        "operationId": "EventHubs_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Eventhub"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Eventhub"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHEventHubCreate": {
            "$ref": "./examples/EventHubs/EHEventHubCreate.json"
          },
          "EHEventHubWithCompactPolicyCreate": {
            "$ref": "./examples/EventHubs/EHEventHubWithCompactPolicyCreate.json"
          },
          "EHEventHubWithDeleteOrCompactPolicyCreate": {
            "$ref": "./examples/EventHubs/EHEventHubWithDeleteOrCompactPolicyCreate.json"
          },
          "EHEventHubWithDeletePolicyCreate": {
            "$ref": "./examples/EventHubs/EHEventHubWithDeletePolicyCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "EventHubs_Delete",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubDelete": {
            "$ref": "./examples/EventHubs/EHEventHubDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules": {
      "get": {
        "operationId": "EventHubs_ListAuthorizationRules",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleListAll": {
            "$ref": "./examples/EventHubs/EHEventHubAuthorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "EventHubs_GetAuthorizationRule",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleGet": {
            "$ref": "./examples/EventHubs/EHEventHubAuthorizationRuleGet.json"
          }
        }
      },
      "put": {
        "operationId": "EventHubs_CreateOrUpdateAuthorizationRule",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleCreate": {
            "$ref": "./examples/EventHubs/EHEventHubAuthorizationRuleCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "EventHubs_DeleteAuthorizationRule",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleDelete": {
            "$ref": "./examples/EventHubs/EHEventHubAuthorizationRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "EventHubs_ListKeys",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleListKey": {
            "$ref": "./examples/EventHubs/EHEventHubAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "EventHubs_RegenerateKeys",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateAccessKeyParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleRegenerateKey": {
            "$ref": "./examples/EventHubs/EHEventHubAuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups": {
      "get": {
        "operationId": "ConsumerGroups_ListByEventHub",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SkipParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ConsumerGroupListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerGroupsListAll": {
            "$ref": "./examples/ConsumerGroup/EHConsumerGroupListByEventHub.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}": {
      "get": {
        "operationId": "ConsumerGroups_Get",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ConsumerGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ConsumerGroup"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerGroupGet": {
            "$ref": "./examples/ConsumerGroup/EHConsumerGroupGet.json"
          }
        }
      },
      "put": {
        "operationId": "ConsumerGroups_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ConsumerGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConsumerGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ConsumerGroup"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerGroupCreate": {
            "$ref": "./examples/ConsumerGroup/EHConsumerGroupCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "ConsumerGroups_Delete",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/EventHubNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ConsumerGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerGroupDelete": {
            "$ref": "./examples/ConsumerGroup/EHConsumerGroupDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/failover": {
      "post": {
        "operationId": "Namespaces_Failover",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FailOver"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceCreate": {
            "$ref": "./examples/NameSpaces/EHNamespaceFailover.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/FailOver"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets": {
      "get": {
        "operationId": "Namespaces_ListNetworkRuleSet",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NetworkRuleSetListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetList": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/EHNetworkRuleSetList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default": {
      "get": {
        "operationId": "Namespaces_GetNetworkRuleSet",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NetworkRuleSet"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetGet": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/EHNetworkRuleSetGet.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrUpdateNetworkRuleSet",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkRuleSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NetworkRuleSet"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetCreate": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/EHNetworkRuleSetCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations": {
      "get": {
        "operationId": "NetworkSecurityPerimeterConfiguration_List",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamspaceNetworkSecurityPerimeterConfigurationList": {
            "$ref": "./examples/NameSpaces/NetworkSecurityPerimeterConfigurationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations/{resourceAssociationName}": {
      "get": {
        "operationId": "NetworkSecurityPerimeterConfigurations_GetResourceAssociationName",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceAssociationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterConfiguration"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkSecurityPerimeterConfigurationassociationProxyName": {
            "$ref": "./examples/NameSpaces/NetworkSecurityPerimeterConfigurationAssociationproxy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations/{resourceAssociationName}/reconcile": {
      "post": {
        "operationId": "NetworkSecurityPerimeterConfigurations_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceAssociationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkSecurityPerimeterConfigurationList": {
            "$ref": "./examples/NameSpaces/NetworkSecurityPerimeterConfigurationReconcile.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_List",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndPointConnectionList": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/PrivateEndpointConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionGet": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionGet.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/PrivateEndpointConnectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionCreate": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/PrivateEndpointConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionDelete": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourcesListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpacePrivateLinkResourcesGet": {
            "$ref": "./examples/NameSpaces/PrivateLinkResourcesGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/schemagroups": {
      "get": {
        "operationId": "SchemaRegistry_ListByNamespace",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SkipParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/SchemaGroupListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaRegistryListAll": {
            "$ref": "./examples/SchemaRegistry/SchemaRegistryListByNamespace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.EventHub/namespaces/{namespaceName}/schemagroups/{schemaGroupName}": {
      "get": {
        "operationId": "SchemaRegistry_Get",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v2/definitions.json#/parameters/SchemaGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/SchemaGroup"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaRegistryGet": {
            "$ref": "./examples/SchemaRegistry/SchemaRegistryGet.json"
          }
        }
      },
      "put": {
        "operationId": "SchemaRegistry_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v2/definitions.json#/parameters/SchemaGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/SchemaGroup"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaRegistryCreate": {
            "$ref": "./examples/SchemaRegistry/SchemaRegistryCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "SchemaRegistry_Delete",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v2/definitions.json#/parameters/SchemaGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaRegistryDelete": {
            "$ref": "./examples/SchemaRegistry/SchemaRegistryDelete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccessKeys": {
      "type": "object",
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "readOnly": true
        },
        "secondaryConnectionString": {
          "type": "string",
          "readOnly": true
        },
        "aliasPrimaryConnectionString": {
          "type": "string",
          "readOnly": true
        },
        "aliasSecondaryConnectionString": {
          "type": "string",
          "readOnly": true
        },
        "primaryKey": {
          "type": "string",
          "readOnly": true
        },
        "secondaryKey": {
          "type": "string",
          "readOnly": true
        },
        "keyName": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ApplicationGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "isEnabled": {
              "type": "boolean",
              "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"
            },
            "clientAppGroupIdentifier": {
              "type": "string",
              "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"
            },
            "policies": {
              "type": "array",
              "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic.",
              "items": {
                "$ref": "#/definitions/ApplicationGroupPolicy"
              },
              "x-ms-identifiers": []
            }
          },
          "required": [
            "clientAppGroupIdentifier"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v2/definitions.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApplicationGroupListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ApplicationGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "ApplicationGroupPolicy": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "ThrottlingPolicy"
          ],
          "x-ms-enum": {
            "name": "ApplicationGroupPolicyType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "type",
      "required": [
        "name",
        "type"
      ]
    },
    "ArmDisasterRecovery": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
              "enum": [
                "Accepted",
                "Succeeded",
                "Failed"
              ],
              "x-ms-enum": {
                "name": "ProvisioningStateDR",
                "modelAsString": false
              },
              "readOnly": true
            },
            "partnerNamespace": {
              "type": "string",
              "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
            },
            "alternateName": {
              "type": "string",
              "description": "Alternate name specified when alias and namespace names are same."
            },
            "role": {
              "type": "string",
              "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
              "enum": [
                "Primary",
                "PrimaryNotReplicating",
                "Secondary"
              ],
              "x-ms-enum": {
                "name": "RoleDisasterRecovery",
                "modelAsString": false
              },
              "readOnly": true
            },
            "pendingReplicationOperationsCount": {
              "type": "integer",
              "format": "int64",
              "description": "Number of entities pending to be replicated.",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v2/definitions.json#/definitions/ProxyResource"
        }
      ]
    },
    "ArmDisasterRecoveryListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ArmDisasterRecovery"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "AuthorizationRule": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "rights": {
              "type": "array",
              "description": "The rights associated with the rule.",
              "items": {
                "type": "string",
                "enum": [
                  "Manage",
                  "Send",
                  "Listen"
                ],
                "x-ms-enum": {
                  "name": "AccessRights",
                  "modelAsString": true
                }
              }
            }
          },
          "required": [
            "rights"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v2/definitions.json#/definitions/ProxyResource"
        }
      ]
    },
    "AuthorizationRuleListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/AuthorizationRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "AvailableCluster": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        }
      }
    },
    "AvailableClustersList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableCluster"
          }
        }
      }
    },
    "CaptureDescription": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "encoding": {
          "type": "string",
          "enum": [
            "Avro",
            "AvroDeflate"
          ],
          "x-ms-enum": {
            "name": "EncodingCaptureDescription",
            "modelAsString": false
          }
        },
        "intervalInSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "sizeLimitInBytes": {
          "type": "integer",
          "format": "int32"
        },
        "destination": {
          "$ref": "#/definitions/Destination"
        },
        "skipEmptyArchives": {
          "type": "boolean"
        }
      }
    },
    "CaptureIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SystemAssigned",
            "UserAssigned"
          ],
          "x-ms-enum": {
            "name": "CaptureIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentity": {
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilityParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "CheckNameAvailabilityResult": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "readOnly": true
        },
        "nameAvailable": {
          "type": "boolean"
        },
        "reason": {
          "type": "string",
          "enum": [
            "None",
            "InvalidName",
            "SubscriptionIsDisabled",
            "NameInUse",
            "NameInLockdown",
            "TooManyNamespaceInCurrentSubscription"
          ],
          "x-ms-enum": {
            "name": "UnavailableReason",
            "modelAsString": false
          }
        }
      }
    },
    "Cluster": {
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/ClusterSku"
        },
        "systemData": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        },
        "properties": {
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "description": "The UTC time when the Event Hubs Cluster was created.",
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the Cluster.",
              "enum": [
                "Unknown",
                "Creating",
                "Deleting",
                "Scaling",
                "Active",
                "Failed",
                "Succeeded",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "provisioningState",
                "modelAsString": true
              },
              "readOnly": true
            },
            "updatedAt": {
              "type": "string",
              "description": "The UTC time when the Event Hubs Cluster was last updated.",
              "readOnly": true
            },
            "metricId": {
              "type": "string",
              "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
              "readOnly": true
            },
            "status": {
              "type": "string",
              "description": "Status of the Cluster resource",
              "readOnly": true
            },
            "supportsScaling": {
              "type": "boolean",
              "description": "A value that indicates whether Scaling is Supported."
            },
            "platformCapabilities": {
              "$ref": "#/definitions/PlatformCapabilities"
            }
          },
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v1/definitions.json#/definitions/TrackedResource"
        }
      ]
    },
    "ClusterListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "ClusterQuotaConfigurationProperties": {
      "type": "object",
      "properties": {
        "settings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ClusterSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "Dedicated"
          ],
          "x-ms-enum": {
            "name": "ClusterSkuName",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        }
      },
      "required": [
        "name"
      ]
    },
    "ConfidentialCompute": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "Mode",
            "modelAsString": true
          }
        }
      },
      "x-ms-client-flatten": true
    },
    "ConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "PrivateLinkConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ConsumerGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Exact time the message was created.",
              "readOnly": true
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The exact time the message was updated.",
              "readOnly": true
            },
            "userMetadata": {
              "type": "string",
              "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
            }
          },
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v2/definitions.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConsumerGroupListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ConsumerGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "Destination": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/CaptureIdentity"
        },
        "properties": {
          "type": "object",
          "properties": {
            "storageAccountResourceId": {
              "type": "string",
              "description": "Resource id of the storage account to be used to create the blobs"
            },
            "blobContainer": {
              "type": "string",
              "description": "Blob container Name"
            },
            "archiveNameFormat": {
              "type": "string",
              "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
            },
            "dataLakeSubscriptionId": {
              "type": "string",
              "format": "uuid",
              "description": "Subscription Id of Azure Data Lake Store"
            },
            "dataLakeAccountName": {
              "type": "string",
              "description": "The Azure Data Lake Store name for the captured events"
            },
            "dataLakeFolderPath": {
              "type": "string",
              "description": "The destination folder path for the captured events"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "EHNamespace": {
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "identity": {
          "$ref": "#/definitions/Identity"
        },
        "systemData": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        },
        "properties": {
          "type": "object",
          "properties": {
            "minimumTlsVersion": {
              "type": "string",
              "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
              "enum": [
                "1.0",
                "1.1",
                "1.2",
                "1.3"
              ],
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the Namespace.",
              "readOnly": true
            },
            "status": {
              "type": "string",
              "description": "Status of the Namespace.",
              "readOnly": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The time the Namespace was created.",
              "readOnly": true
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The time the Namespace was updated.",
              "readOnly": true
            },
            "serviceBusEndpoint": {
              "type": "string",
              "description": "Endpoint you can use to perform Service Bus operations.",
              "readOnly": true
            },
            "clusterArmId": {
              "type": "string",
              "description": "Cluster ARM ID of the Namespace."
            },
            "metricId": {
              "type": "string",
              "description": "Identifier for Azure Insights metrics.",
              "readOnly": true
            },
            "isAutoInflateEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
            },
            "publicNetworkAccess": {
              "type": "string",
              "description": "This determines if traffic is allowed over public network. By default it is enabled.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              }
            },
            "maximumThroughputUnits": {
              "type": "integer",
              "format": "int32",
              "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
              "minimum": 0
            },
            "kafkaEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
            },
            "zoneRedundant": {
              "type": "boolean",
              "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
            },
            "encryption": {
              "$ref": "#/definitions/Encryption",
              "description": "Properties of BYOK Encryption description"
            },
            "privateEndpointConnections": {
              "type": "array",
              "description": "List of private endpoint connections.",
              "items": {
                "$ref": "#/definitions/PrivateEndpointConnection"
              }
            },
            "disableLocalAuth": {
              "type": "boolean",
              "description": "This property disables SAS authentication for the Event Hubs namespace."
            },
            "alternateName": {
              "type": "string",
              "description": "Alternate name specified when alias and namespace names are same."
            },
            "platformCapabilities": {
              "$ref": "#/definitions/PlatformCapabilities"
            },
            "geoDataReplication": {
              "$ref": "#/definitions/GeoDataReplicationProperties",
              "description": "Geo Data Replication settings for the namespace"
            }
          },
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v1/definitions.json#/definitions/TrackedResource"
        }
      ]
    },
    "EHNamespaceIdContainer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "EHNamespaceIdListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EHNamespaceIdContainer"
          }
        }
      }
    },
    "EHNamespaceListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/EHNamespace"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "Encryption": {
      "type": "object",
      "properties": {
        "keyVaultProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyVaultProperties"
          },
          "x-ms-client-name": "KeyVaultProperties"
        },
        "keySource": {
          "type": "string",
          "default": "Microsoft.KeyVault",
          "enum": [
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "KeySource",
            "modelAsString": false
          }
        },
        "requireInfrastructureEncryption": {
          "type": "boolean"
        }
      },
      "x-ms-client-flatten": true
    },
    "EventHubListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Eventhub"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "Eventhub": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "partitionIds": {
              "type": "array",
              "description": "Current number of shards on the Event Hub.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "Exact time the Event Hub was created.",
              "readOnly": true
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The exact time the message was updated.",
              "readOnly": true
            },
            "messageRetentionInDays": {
              "type": "integer",
              "format": "int64",
              "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days",
              "minimum": 1
            },
            "partitionCount": {
              "type": "integer",
              "format": "int64",
              "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.",
              "minimum": 1
            },
            "status": {
              "type": "string",
              "description": "Enumerates the possible values for the status of the Event Hub.",
              "enum": [
                "Active",
                "Disabled",
                "Restoring",
                "SendDisabled",
                "ReceiveDisabled",
                "Creating",
                "Deleting",
                "Renaming",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "EntityStatus",
                "modelAsString": false
              }
            },
            "captureDescription": {
              "$ref": "#/definitions/CaptureDescription",
              "description": "Properties of capture description"
            },
            "retentionDescription": {
              "$ref": "#/definitions/RetentionDescription",
              "description": "Event Hub retention settings"
            },
            "messageTimestampDescription": {
              "$ref": "#/definitions/MessageTimestampDescription",
              "description": "Properties of MessageTimestamp Description"
            },
            "identifier": {
              "type": "string",
              "description": "Denotes the unique identifier for event hub and is generated by service while creating topic. This identifier can be used in kafka runtime apis wherever a UUID is required e.g Fetch & Delete Topic. This identifier is not supported in AMQP runtime operations yet.",
              "readOnly": true
            },
            "userMetadata": {
              "type": "string",
              "description": "Gets and Sets Metadata of User."
            }
          },
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v2/definitions.json#/definitions/ProxyResource"
        }
      ]
    },
    "FailOver": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FailOverProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "FailOverProperties": {
      "type": "object",
      "properties": {
        "primaryLocation": {
          "type": "string"
        },
        "force": {
          "type": "boolean"
        }
      }
    },
    "GeoDataReplicationProperties": {
      "type": "object",
      "properties": {
        "maxReplicationLagDurationInSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceReplicaLocation"
          }
        }
      }
    },
    "Identity": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentity"
          }
        }
      },
      "x-ms-client-flatten": true
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyName": {
          "type": "string",
          "x-ms-client-name": "KeyName"
        },
        "keyVaultUri": {
          "type": "string",
          "x-ms-client-name": "KeyVaultUri"
        },
        "keyVersion": {
          "type": "string",
          "x-ms-client-name": "KeyVersion"
        },
        "identity": {
          "$ref": "#/definitions/userAssignedIdentityProperties"
        }
      }
    },
    "MessageTimestampDescription": {
      "type": "object",
      "properties": {
        "timestampType": {
          "type": "string",
          "enum": [
            "LogAppend",
            "Create"
          ],
          "x-ms-enum": {
            "name": "TimestampType",
            "modelAsString": true
          }
        }
      }
    },
    "NWRuleSetIpRules": {
      "type": "object",
      "properties": {
        "ipMask": {
          "type": "string"
        },
        "action": {
          "type": "string",
          "enum": [
            "Allow"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleIPAction",
            "modelAsString": true
          }
        }
      },
      "x-ms-client-flatten": true
    },
    "NWRuleSetVirtualNetworkRules": {
      "type": "object",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/Subnet"
        },
        "ignoreMissingVnetServiceEndpoint": {
          "type": "boolean"
        }
      },
      "x-ms-client-flatten": true
    },
    "NamespaceReplicaLocation": {
      "type": "object",
      "properties": {
        "locationName": {
          "type": "string"
        },
        "roleType": {
          "type": "string",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "x-ms-enum": {
            "name": "GeoDRRoleType",
            "modelAsString": true
          }
        },
        "replicaState": {
          "type": "string",
          "readOnly": true
        },
        "clusterArmId": {
          "type": "string"
        }
      }
    },
    "NetworkRuleSet": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "trustedServiceAccessEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether Trusted Service Access is Enabled or not."
            },
            "defaultAction": {
              "type": "string",
              "description": "Default Action for Network Rule Set",
              "enum": [
                "Allow",
                "Deny"
              ],
              "x-ms-enum": {
                "name": "DefaultAction",
                "modelAsString": true
              }
            },
            "virtualNetworkRules": {
              "type": "array",
              "description": "List VirtualNetwork Rules",
              "items": {
                "$ref": "#/definitions/NWRuleSetVirtualNetworkRules"
              }
            },
            "ipRules": {
              "type": "array",
              "description": "List of IpRules",
              "items": {
                "$ref": "#/definitions/NWRuleSetIpRules"
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules. ",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccessFlag",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v2/definitions.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkRuleSetListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/NetworkRuleSet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "NetworkSecurityPerimeter": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "perimeterGuid": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      },
      "readOnly": true
    },
    "NetworkSecurityPerimeterConfiguration": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v2/definitions.json#/definitions/ProxyResource"
        }
      ],
      "readOnly": true
    },
    "NetworkSecurityPerimeterConfigurationList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkSecurityPerimeterConfiguration"
          },
          "readOnly": true
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Unknown",
            "Creating",
            "Updating",
            "Accepted",
            "InvalidResponse",
            "Succeeded",
            "SucceededWithIssues",
            "Failed",
            "Deleting",
            "Deleted",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "NetworkSecurityPerimeterConfigurationProvisioningState",
            "modelAsString": true
          }
        },
        "provisioningIssues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisioningIssue"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "networkSecurityPerimeter": {
          "$ref": "#/definitions/NetworkSecurityPerimeter"
        },
        "resourceAssociation": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the resource association"
            },
            "accessMode": {
              "type": "string",
              "description": "Access Mode of the resource association",
              "enum": [
                "NoAssociationMode",
                "EnforcedMode",
                "LearningMode",
                "AuditMode",
                "UnspecifiedMode"
              ],
              "x-ms-enum": {
                "name": "ResourceAssociationAccessMode",
                "modelAsString": true
              }
            }
          },
          "readOnly": true
        },
        "profile": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the resource"
            },
            "accessRulesVersion": {
              "type": "string",
              "description": "Current access rules version"
            },
            "accessRules": {
              "type": "array",
              "description": "List of Access Rules",
              "items": {
                "$ref": "#/definitions/NspAccessRule"
              }
            }
          },
          "readOnly": true
        },
        "isBackingResource": {
          "type": "boolean",
          "readOnly": true
        },
        "applicableFeatures": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "parentAssociationName": {
          "type": "string",
          "readOnly": true
        },
        "sourceResourceId": {
          "type": "string",
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "NspAccessRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "properties": {
            "direction": {
              "type": "string",
              "description": "Direction of Access Rule",
              "enum": [
                "Inbound",
                "Outbound"
              ],
              "x-ms-enum": {
                "name": "NspAccessRuleDirection",
                "modelAsString": true
              }
            },
            "addressPrefixes": {
              "type": "array",
              "description": "Address prefixes in the CIDR format for inbound rules",
              "items": {
                "type": "string",
                "description": "IP Address"
              }
            },
            "subscriptions": {
              "type": "array",
              "description": "Subscriptions for inbound rules",
              "items": {
                "type": "object",
                "description": "Subscription for inbound rule",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Fully qualified identifier of subscription"
                  }
                },
                "readOnly": true
              }
            },
            "networkSecurityPerimeters": {
              "type": "array",
              "description": "NetworkSecurityPerimeters for inbound rules",
              "items": {
                "$ref": "#/definitions/NetworkSecurityPerimeter"
              },
              "readOnly": true
            },
            "fullyQualifiedDomainNames": {
              "type": "array",
              "description": "FQDN for outbound rules",
              "items": {
                "type": "string",
                "description": "Fully qualified domain name"
              },
              "readOnly": true
            }
          },
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "Operation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay"
        },
        "origin": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "readOnly": true
        },
        "resource": {
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "PlatformCapabilities": {
      "type": "object",
      "properties": {
        "confidentialCompute": {
          "$ref": "#/definitions/ConfidentialCompute"
        }
      },
      "x-ms-client-flatten": true
    },
    "PrivateEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v2/definitions.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint"
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/ConnectionState"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "EndPointProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "requiredMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkResourcesListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "ProvisioningIssue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "properties": {
            "issueType": {
              "type": "string",
              "description": "Type of Issue"
            },
            "description": {
              "type": "string",
              "description": "Description of the issue"
            }
          },
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "RegenerateAccessKeyParameters": {
      "type": "object",
      "properties": {
        "keyType": {
          "type": "string",
          "enum": [
            "PrimaryKey",
            "SecondaryKey"
          ],
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": true
          }
        },
        "key": {
          "type": "string"
        }
      },
      "required": [
        "keyType"
      ]
    },
    "RetentionDescription": {
      "type": "object",
      "properties": {
        "cleanupPolicy": {
          "type": "string",
          "enum": [
            "Delete",
            "Compact",
            "DeleteOrCompact"
          ],
          "x-ms-enum": {
            "name": "CleanupPolicyRetentionDescription",
            "modelAsString": true
          }
        },
        "retentionTimeInHours": {
          "type": "integer",
          "format": "int64"
        },
        "minCompactionLagTimeInMinutes": {
          "type": "integer",
          "format": "int64"
        },
        "tombstoneRetentionTimeInHours": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SchemaGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "updatedAtUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Exact time the Schema Group was updated",
              "readOnly": true
            },
            "createdAtUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Exact time the Schema Group was created.",
              "readOnly": true
            },
            "eTag": {
              "type": "string",
              "format": "uuid",
              "description": "The ETag value.",
              "readOnly": true
            },
            "groupProperties": {
              "type": "object",
              "description": "dictionary object for SchemaGroup group properties",
              "additionalProperties": {
                "type": "string"
              }
            },
            "schemaCompatibility": {
              "type": "string",
              "description": "",
              "enum": [
                "None",
                "Backward",
                "Forward"
              ],
              "x-ms-enum": {
                "name": "SchemaCompatibility",
                "modelAsString": true
              }
            },
            "schemaType": {
              "type": "string",
              "description": "",
              "enum": [
                "Unknown",
                "Avro",
                "ProtoBuf",
                "Json"
              ],
              "x-ms-enum": {
                "name": "SchemaType",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v2/definitions.json#/definitions/ProxyResource"
        }
      ]
    },
    "SchemaGroupListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/SchemaGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 0
        }
      },
      "required": [
        "name"
      ]
    },
    "Subnet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "ThrottlingPolicy": {
      "type": "object",
      "properties": {
        "rateLimitThreshold": {
          "type": "integer",
          "format": "int64"
        },
        "metricId": {
          "type": "string",
          "enum": [
            "IncomingBytes",
            "OutgoingBytes",
            "IncomingMessages",
            "OutgoingMessages"
          ],
          "x-ms-enum": {
            "name": "MetricId",
            "modelAsString": true
          }
        }
      },
      "required": [
        "metricId",
        "rateLimitThreshold"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ApplicationGroupPolicy"
        }
      ],
      "x-ms-discriminator-value": "ThrottlingPolicy"
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true,
          "x-ms-client-name": "PrincipalId"
        },
        "clientId": {
          "type": "string",
          "readOnly": true,
          "x-ms-client-name": "ClientId"
        }
      }
    },
    "userAssignedIdentityProperties": {
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "type": "string"
        }
      },
      "x-ms-client-flatten": true
    }
  },
  "parameters": {}
}