{
  "swagger": "2.0",
  "info": {
    "title": "EventHubManagementClient",
    "version": "2025-05-01-preview",
    "description": "Azure Event Hubs client",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Clusters"
    },
    {
      "name": "DisasterRecoveryConfigs"
    },
    {
      "name": "EHNamespaces"
    },
    {
      "name": "NetworkRuleSets"
    },
    {
      "name": "AuthorizationRules"
    },
    {
      "name": "EventHubs"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "NetworkSecurityPerimeterConfigurations"
    },
    {
      "name": "ArmDisasterRecoveries"
    },
    {
      "name": "Eventhubs"
    },
    {
      "name": "ConsumerGroups"
    },
    {
      "name": "SchemaGroups"
    },
    {
      "name": "ApplicationGroups"
    }
  ],
  "paths": {
    "/providers/Microsoft.EventHub/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Event Hub REST API operations.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHOperations_List": {
            "$ref": "./examples/EHOperations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/availableClusterRegions": {
      "get": {
        "operationId": "Clusters_ListAvailableClusterRegion",
        "description": "List the quantity of available pre-provisioned Event Hubs Clusters, indexed by Azure region.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AvailableClustersList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListAvailableClusters": {
            "$ref": "./examples/Clusters/ListAvailableClustersGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/checkNameAvailability": {
      "post": {
        "operationId": "Namespaces_CheckNameAvailability",
        "description": "Check the give Namespace name availability.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespacesCheckNameAvailability": {
            "$ref": "./examples/NameSpaces/EHNameSpaceCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/clusters": {
      "get": {
        "operationId": "Clusters_ListBySubscription",
        "tags": [
          "Clusters"
        ],
        "description": "Lists the available Event Hubs Clusters within an ARM resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClustersListBySubscription": {
            "$ref": "./examples/Clusters/ClustersListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "operationId": "Namespaces_List",
        "tags": [
          "EHNamespaces"
        ],
        "description": "Lists all the available Namespaces within a subscription, irrespective of the resource groups.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EHNamespaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespacesListBySubscription": {
            "$ref": "./examples/NameSpaces/EHNameSpaceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters": {
      "get": {
        "operationId": "Clusters_ListByResourceGroup",
        "tags": [
          "Clusters"
        ],
        "description": "Lists the available Event Hubs Clusters within an ARM resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClustersListByResourceGroup": {
            "$ref": "./examples/Clusters/ClustersListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}": {
      "get": {
        "operationId": "Clusters_Get",
        "tags": [
          "Clusters"
        ],
        "description": "Gets the resource description of the specified Event Hubs Cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClusterGet": {
            "$ref": "./examples/Clusters/ClusterGet.json"
          }
        }
      },
      "put": {
        "operationId": "Clusters_CreateOrUpdate",
        "tags": [
          "Clusters"
        ],
        "description": "Creates or updates an instance of an Event Hubs Cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for creating a eventhub cluster resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Cluster' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "Resource 'Cluster' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClusterPut": {
            "$ref": "./examples/Clusters/ClusterPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Cluster"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Clusters_Update",
        "tags": [
          "Clusters"
        ],
        "description": "Modifies mutable properties on the Event Hubs Cluster. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The properties of the Event Hubs Cluster which should be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "Resource 'Cluster' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClusterPatch": {
            "$ref": "./examples/Clusters/ClusterPatch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Cluster"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Clusters_Delete",
        "tags": [
          "Clusters"
        ],
        "description": "Deletes an existing Event Hubs Cluster. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClusterDelete": {
            "$ref": "./examples/Clusters/ClusterDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}/namespaces": {
      "get": {
        "operationId": "Clusters_ListNamespaces",
        "tags": [
          "Clusters"
        ],
        "description": "List all Event Hubs Namespace IDs in an Event Hubs Dedicated Cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EHNamespaceIdListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListNamespacesInCluster": {
            "$ref": "./examples/Clusters/ListNamespacesInClusterGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}/quotaConfiguration/default": {
      "get": {
        "operationId": "Configuration_Get",
        "tags": [
          "Clusters"
        ],
        "description": "Get all Event Hubs Cluster settings - a collection of key/value pairs which represent the quotas and settings imposed on the cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClustersQuotasConfigurationGet": {
            "$ref": "./examples/Clusters/ClusterQuotaConfigurationGet.json"
          }
        }
      },
      "patch": {
        "operationId": "Configuration_Patch",
        "tags": [
          "Clusters"
        ],
        "description": "Replace all specified Event Hubs Cluster settings with those contained in the request body. Leaves the settings not specified in the request body unmodified.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Event Hubs Cluster.",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for creating an Event Hubs Cluster resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "201": {
            "description": "Resource 'ClusterQuotaConfigurationProperties' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ClustersQuotasConfigurationPatch": {
            "$ref": "./examples/Clusters/ClusterQuotaConfigurationPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "operationId": "Namespaces_ListByResourceGroup",
        "tags": [
          "EHNamespaces"
        ],
        "description": "Lists the available Namespaces within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EHNamespaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespaceListByResourceGroup": {
            "$ref": "./examples/NameSpaces/EHNameSpaceListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}": {
      "get": {
        "operationId": "Namespaces_Get",
        "tags": [
          "EHNamespaces"
        ],
        "description": "Gets the description of the specified namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceGet": {
            "$ref": "./examples/NameSpaces/EHNameSpaceGet.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrUpdate",
        "tags": [
          "EHNamespaces"
        ],
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for creating a namespace resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EHNamespace' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "201": {
            "description": "Resource 'EHNamespace' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespaceCreate": {
            "$ref": "./examples/NameSpaces/EHNameSpaceCreate.json"
          },
          "NamespaceWithGeoDRCreate": {
            "$ref": "./examples/NameSpaces/NamespaceWithGeoDRCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/EHNamespace"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Namespaces_Update",
        "tags": [
          "EHNamespaces"
        ],
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for updating a namespace resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespacesUpdate": {
            "$ref": "./examples/NameSpaces/EHNameSpaceUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Namespaces_Delete",
        "tags": [
          "EHNamespaces"
        ],
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceDelete": {
            "$ref": "./examples/NameSpaces/EHNameSpaceDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups": {
      "get": {
        "operationId": "ApplicationGroup_ListByNamespace",
        "tags": [
          "ApplicationGroups"
        ],
        "description": "Gets a list of application groups for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListApplicationGroups": {
            "$ref": "./examples/ApplicationGroup/ApplicationGroupListByNamespace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/applicationGroups/{applicationGroupName}": {
      "get": {
        "operationId": "ApplicationGroup_Get",
        "tags": [
          "ApplicationGroups"
        ],
        "description": "Gets an ApplicationGroup for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The Application Group name ",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroupGet": {
            "$ref": "./examples/ApplicationGroup/ApplicationGroupGet.json"
          }
        }
      },
      "put": {
        "operationId": "ApplicationGroup_CreateOrUpdateApplicationGroup",
        "tags": [
          "ApplicationGroups"
        ],
        "description": "Creates or updates an ApplicationGroup for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The Application Group name ",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The ApplicationGroup.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApplicationGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApplicationGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroupCreate": {
            "$ref": "./examples/ApplicationGroup/ApplicationGroupCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "ApplicationGroup_Delete",
        "tags": [
          "ApplicationGroups"
        ],
        "description": "Deletes an ApplicationGroup for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "applicationGroupName",
            "in": "path",
            "description": "The Application Group name ",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ApplicationGroupDelete": {
            "$ref": "./examples/ApplicationGroup/ApplicationGroupDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules": {
      "get": {
        "operationId": "Namespaces_ListAuthorizationRules",
        "tags": [
          "AuthorizationRules"
        ],
        "description": "Gets a list of authorization rules for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListAuthorizationRules": {
            "$ref": "./examples/NameSpaces/EHNameSpaceAuthorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "Namespaces_GetAuthorizationRule",
        "tags": [
          "AuthorizationRules"
        ],
        "description": "Gets an AuthorizationRule for a Namespace by rule name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleGet": {
            "$ref": "./examples/NameSpaces/EHNameSpaceAuthorizationRuleGet.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "tags": [
          "AuthorizationRules"
        ],
        "description": "Creates or updates an AuthorizationRule for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The shared access AuthorizationRule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AuthorizationRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleCreate": {
            "$ref": "./examples/NameSpaces/EHNameSpaceAuthorizationRuleCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "tags": [
          "AuthorizationRules"
        ],
        "description": "Deletes an AuthorizationRule for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleDelete": {
            "$ref": "./examples/NameSpaces/EHNameSpaceAuthorizationRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "Namespaces_ListKeys",
        "tags": [
          "AuthorizationRules"
        ],
        "description": "Gets the primary and secondary connection strings for the Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleListKey": {
            "$ref": "./examples/NameSpaces/EHNameSpaceAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "Namespaces_RegenerateKeys",
        "tags": [
          "AuthorizationRules"
        ],
        "description": "Regenerates the primary or secondary connection strings for the specified Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters required to regenerate the connection string.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateAccessKeyParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleRegenerateKey": {
            "$ref": "./examples/NameSpaces/EHNameSpaceAuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs": {
      "get": {
        "operationId": "DisasterRecoveryConfigs_List",
        "tags": [
          "ArmDisasterRecoveries"
        ],
        "description": "Gets all Alias(Disaster Recovery configurations)",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArmDisasterRecoveryListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasList": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}": {
      "get": {
        "operationId": "DisasterRecoveryConfigs_Get",
        "tags": [
          "ArmDisasterRecoveries"
        ],
        "description": "Retrieves Alias(Disaster Recovery configuration) for primary or secondary namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArmDisasterRecovery"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasGet": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasGet.json"
          }
        }
      },
      "put": {
        "operationId": "DisasterRecoveryConfigs_CreateOrUpdate",
        "tags": [
          "ArmDisasterRecoveries"
        ],
        "description": "Creates or updates a new Alias(Disaster Recovery configuration)",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters required to create an Alias(Disaster Recovery configuration)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArmDisasterRecovery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ArmDisasterRecovery' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ArmDisasterRecovery"
            }
          },
          "201": {
            "description": "Resource 'ArmDisasterRecovery' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ArmDisasterRecovery"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasCreate": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "DisasterRecoveryConfigs_Delete",
        "tags": [
          "ArmDisasterRecoveries"
        ],
        "description": "Deletes an Alias(Disaster Recovery configuration)",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasDelete": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules": {
      "get": {
        "operationId": "DisasterRecoveryConfigs_ListAuthorizationRules",
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "description": "Gets a list of authorization rules for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListAuthorizationRules": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasAuthorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "DisasterRecoveryConfigs_GetAuthorizationRule",
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "description": "Gets an AuthorizationRule for a Namespace by rule name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleGet": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasAuthorizationRuleGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_ListKeys",
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "description": "Gets the primary and secondary connection strings for the Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleListKey": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/breakPairing": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_BreakPairing",
        "tags": [
          "ArmDisasterRecoveries"
        ],
        "description": "This operation disables the Disaster Recovery and stops replicating changes from primary to secondary namespaces",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasBreakPairing": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasBreakPairing.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/failover": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_FailOver",
        "tags": [
          "ArmDisasterRecoveries"
        ],
        "description": "Invokes GEO DR failover and reconfigure the alias to point to the secondary namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHAliasFailOver": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasFailOver.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/disasterRecoveryConfigs/checkNameAvailability": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_CheckNameAvailability",
        "tags": [
          "EHNamespaces"
        ],
        "description": "Check the give Namespace name availability.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters to check availability of the given Alias name",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamespacesCheckNameAvailability": {
            "$ref": "./examples/disasterRecoveryConfigs/EHAliasCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs": {
      "get": {
        "operationId": "EventHubs_ListByNamespace",
        "tags": [
          "Eventhubs"
        ],
        "description": "Gets all the Event Hubs in a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 1000
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EventHubListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubsListAll": {
            "$ref": "./examples/EventHubs/EHEventHubListByNameSpace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}": {
      "get": {
        "operationId": "EventHubs_Get",
        "tags": [
          "Eventhubs"
        ],
        "description": "Gets an Event Hubs description for the specified Event Hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Eventhub"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubGet": {
            "$ref": "./examples/EventHubs/EHEventHubGet.json"
          }
        }
      },
      "put": {
        "operationId": "EventHubs_CreateOrUpdate",
        "tags": [
          "Eventhubs"
        ],
        "description": "Creates or updates a new Event Hub as a nested resource within a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to create an Event Hub resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Eventhub"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Eventhub' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Eventhub"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EHEventHubCreate": {
            "$ref": "./examples/EventHubs/EHEventHubCreate.json"
          },
          "EHEventHubWithCompactPolicyCreate": {
            "$ref": "./examples/EventHubs/EHEventHubWithCompactPolicyCreate.json"
          },
          "EHEventHubWithDeleteOrCompactPolicyCreate": {
            "$ref": "./examples/EventHubs/EHEventHubWithDeleteOrCompactPolicyCreate.json"
          },
          "EHEventHubWithDeletePolicyCreate": {
            "$ref": "./examples/EventHubs/EHEventHubWithDeletePolicyCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "EventHubs_Delete",
        "tags": [
          "Eventhubs"
        ],
        "description": "Deletes an Event Hub from the specified Namespace and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubDelete": {
            "$ref": "./examples/EventHubs/EHEventHubDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules": {
      "get": {
        "operationId": "EventHubs_ListAuthorizationRules",
        "tags": [
          "EventHubs"
        ],
        "description": "Gets the authorization rules for an Event Hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleListAll": {
            "$ref": "./examples/EventHubs/EHEventHubAuthorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "EventHubs_GetAuthorizationRule",
        "tags": [
          "EventHubs"
        ],
        "description": "Gets an AuthorizationRule for an Event Hub by rule name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleGet": {
            "$ref": "./examples/EventHubs/EHEventHubAuthorizationRuleGet.json"
          }
        }
      },
      "put": {
        "operationId": "EventHubs_CreateOrUpdateAuthorizationRule",
        "tags": [
          "EventHubs"
        ],
        "description": "Creates or updates an AuthorizationRule for the specified Event Hub. Creation/update of the AuthorizationRule will take a few seconds to take effect.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The shared access AuthorizationRule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AuthorizationRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleCreate": {
            "$ref": "./examples/EventHubs/EHEventHubAuthorizationRuleCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "EventHubs_DeleteAuthorizationRule",
        "tags": [
          "EventHubs"
        ],
        "description": "Deletes an Event Hub AuthorizationRule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleDelete": {
            "$ref": "./examples/EventHubs/EHEventHubAuthorizationRuleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "EventHubs_ListKeys",
        "tags": [
          "EventHubs"
        ],
        "description": "Gets the ACS and SAS connection strings for the Event Hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleListKey": {
            "$ref": "./examples/EventHubs/EHEventHubAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "EventHubs_RegenerateKeys",
        "tags": [
          "EventHubs"
        ],
        "description": "Regenerates the ACS and SAS connection strings for the Event Hub.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to regenerate the AuthorizationRule Keys (PrimaryKey/SecondaryKey).",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateAccessKeyParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleRegenerateKey": {
            "$ref": "./examples/EventHubs/EHEventHubAuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups": {
      "get": {
        "operationId": "ConsumerGroups_ListByEventHub",
        "tags": [
          "ConsumerGroups"
        ],
        "description": "Gets all the consumer groups in a Namespace. An empty feed is returned if no consumer group exists in the Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 1000
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConsumerGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerGroupsListAll": {
            "$ref": "./examples/ConsumerGroup/EHConsumerGroupListByEventHub.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}": {
      "get": {
        "operationId": "ConsumerGroups_Get",
        "tags": [
          "ConsumerGroups"
        ],
        "description": "Gets a description for the specified consumer group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "consumerGroupName",
            "in": "path",
            "description": "The consumer group name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConsumerGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerGroupGet": {
            "$ref": "./examples/ConsumerGroup/EHConsumerGroupGet.json"
          }
        }
      },
      "put": {
        "operationId": "ConsumerGroups_CreateOrUpdate",
        "tags": [
          "ConsumerGroups"
        ],
        "description": "Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "consumerGroupName",
            "in": "path",
            "description": "The consumer group name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to create or update a consumer group resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConsumerGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConsumerGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConsumerGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerGroupCreate": {
            "$ref": "./examples/ConsumerGroup/EHConsumerGroupCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "ConsumerGroups_Delete",
        "tags": [
          "ConsumerGroups"
        ],
        "description": "Deletes a consumer group from the specified Event Hub and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "eventHubName",
            "in": "path",
            "description": "The Event Hub name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "consumerGroupName",
            "in": "path",
            "description": "The consumer group name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConsumerGroupDelete": {
            "$ref": "./examples/ConsumerGroup/EHConsumerGroupDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/failover": {
      "post": {
        "operationId": "Namespaces_Failover",
        "tags": [
          "EHNamespaces"
        ],
        "description": "GeoDR Failover",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for updating a namespace resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FailOver"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceCreate": {
            "$ref": "./examples/NameSpaces/EHNamespaceFailover.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/FailOver"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets": {
      "get": {
        "operationId": "Namespaces_ListNetworkRuleSet",
        "tags": [
          "NetworkRuleSets"
        ],
        "description": "Gets NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkRuleSetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetList": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/EHNetworkRuleSetList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default": {
      "get": {
        "operationId": "Namespaces_GetNetworkRuleSet",
        "tags": [
          "NetworkRuleSets"
        ],
        "description": "Gets NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkRuleSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetGet": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/EHNetworkRuleSetGet.json"
          }
        }
      },
      "put": {
        "operationId": "Namespaces_CreateOrUpdateNetworkRuleSet",
        "tags": [
          "NetworkRuleSets"
        ],
        "description": "Create or update NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The Namespace IpFilterRule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkRuleSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NetworkRuleSet' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NetworkRuleSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetCreate": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/EHNetworkRuleSetCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations": {
      "get": {
        "operationId": "NetworkSecurityPerimeterConfiguration_List",
        "tags": [
          "NetworkSecurityPerimeterConfigurations"
        ],
        "description": "Gets list of current NetworkSecurityPerimeterConfiguration for Namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamspaceNetworkSecurityPerimeterConfigurationList": {
            "$ref": "./examples/NameSpaces/NetworkSecurityPerimeterConfigurationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations/{resourceAssociationName}": {
      "get": {
        "operationId": "NetworkSecurityPerimeterConfigurations_GetResourceAssociationName",
        "tags": [
          "NetworkSecurityPerimeterConfigurations"
        ],
        "description": "Return a NetworkSecurityPerimeterConfigurations resourceAssociationName",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "resourceAssociationName",
            "in": "path",
            "description": "The ResourceAssociation Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkSecurityPerimeterConfigurationassociationProxyName": {
            "$ref": "./examples/NameSpaces/NetworkSecurityPerimeterConfigurationAssociationproxy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations/{resourceAssociationName}/reconcile": {
      "post": {
        "operationId": "NetworkSecurityPerimeterConfigurations_CreateOrUpdate",
        "tags": [
          "NetworkSecurityPerimeterConfigurations"
        ],
        "description": "Refreshes any information about the association.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "resourceAssociationName",
            "in": "path",
            "description": "The ResourceAssociation Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkSecurityPerimeterConfigurationList": {
            "$ref": "./examples/NameSpaces/NetworkSecurityPerimeterConfigurationReconcile.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/NetworkSecurityPerimeterConfiguration"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_List",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the available PrivateEndpointConnections within a namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndPointConnectionList": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets a description for the specified Private Endpoint Connection name.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The PrivateEndpointConnection name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionGet": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionGet.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Creates or updates PrivateEndpointConnections of service namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The PrivateEndpointConnection name",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to update Status of PrivateEndPoint Connection to namespace resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionCreate": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The PrivateEndpointConnection name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionDelete": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "tags": [
          "EHNamespaces"
        ],
        "description": "Gets lists of resources that supports Privatelinks.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NameSpacePrivateLinkResourcesGet": {
            "$ref": "./examples/NameSpaces/PrivateLinkResourcesGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/schemagroups": {
      "get": {
        "operationId": "SchemaRegistry_ListByNamespace",
        "tags": [
          "SchemaGroups"
        ],
        "description": "Gets all the Schema Groups in a Namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 1000
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaGroupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaRegistryListAll": {
            "$ref": "./examples/SchemaRegistry/SchemaRegistryListByNamespace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/schemagroups/{schemaGroupName}": {
      "get": {
        "operationId": "SchemaRegistry_Get",
        "tags": [
          "SchemaGroups"
        ],
        "description": "Gets the details of an EventHub schema group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "schemaGroupName",
            "in": "path",
            "description": "The Schema Group name ",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SchemaGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaRegistryGet": {
            "$ref": "./examples/SchemaRegistry/SchemaRegistryGet.json"
          }
        }
      },
      "put": {
        "operationId": "SchemaRegistry_CreateOrUpdate",
        "tags": [
          "SchemaGroups"
        ],
        "description": "Creates or Updates an EventHub schema group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "schemaGroupName",
            "in": "path",
            "description": "The Schema Group name ",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to create an Event Hub resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SchemaGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SchemaGroup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SchemaGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaRegistryCreate": {
            "$ref": "./examples/SchemaRegistry/SchemaRegistryCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "SchemaRegistry_Delete",
        "tags": [
          "SchemaGroups"
        ],
        "description": "Deletes an EventHub schema group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The Namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$"
          },
          {
            "name": "schemaGroupName",
            "in": "path",
            "description": "The Schema Group name ",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SchemaRegistryDelete": {
            "$ref": "./examples/SchemaRegistry/SchemaRegistryDelete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccessKeys": {
      "type": "object",
      "description": "Namespace/EventHub Connection String",
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "description": "Primary connection string of the created namespace AuthorizationRule.",
          "readOnly": true
        },
        "secondaryConnectionString": {
          "type": "string",
          "description": "Secondary connection string of the created namespace AuthorizationRule.",
          "readOnly": true
        },
        "aliasPrimaryConnectionString": {
          "type": "string",
          "description": "Primary connection string of the alias if GEO DR is enabled",
          "readOnly": true
        },
        "aliasSecondaryConnectionString": {
          "type": "string",
          "description": "Secondary  connection string of the alias if GEO DR is enabled",
          "readOnly": true
        },
        "primaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
          "readOnly": true
        },
        "secondaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
          "readOnly": true
        },
        "keyName": {
          "type": "string",
          "description": "A string that describes the AuthorizationRule.",
          "readOnly": true
        }
      }
    },
    "AccessRights": {
      "type": "string",
      "enum": [
        "Manage",
        "Send",
        "Listen"
      ],
      "x-ms-enum": {
        "name": "AccessRights",
        "modelAsString": true,
        "values": [
          {
            "name": "Manage",
            "value": "Manage"
          },
          {
            "name": "Send",
            "value": "Send"
          },
          {
            "name": "Listen",
            "value": "Listen"
          }
        ]
      }
    },
    "ApplicationGroup": {
      "type": "object",
      "description": "The Application Group object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicationGroupProperties",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApplicationGroupListResult": {
      "type": "object",
      "description": "The response of a ApplicationGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApplicationGroup items on this page",
          "items": {
            "$ref": "#/definitions/ApplicationGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApplicationGroupPolicy": {
      "type": "object",
      "description": "Properties of the Application Group policy",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Name of this policy"
        },
        "type": {
          "$ref": "#/definitions/ApplicationGroupPolicyType",
          "description": "Application Group Policy types"
        }
      },
      "discriminator": "type",
      "required": [
        "name",
        "type"
      ]
    },
    "ApplicationGroupPolicyType": {
      "type": "string",
      "description": "Application Group Policy types",
      "enum": [
        "ThrottlingPolicy"
      ],
      "x-ms-enum": {
        "name": "ApplicationGroupPolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "ThrottlingPolicy",
            "value": "ThrottlingPolicy"
          }
        ]
      }
    },
    "ApplicationGroupProperties": {
      "type": "object",
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed"
        },
        "clientAppGroupIdentifier": {
          "type": "string",
          "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)"
        },
        "policies": {
          "type": "array",
          "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic.",
          "items": {
            "$ref": "#/definitions/ApplicationGroupPolicy"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "clientAppGroupIdentifier"
      ]
    },
    "ArmDisasterRecovery": {
      "type": "object",
      "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArmDisasterRecoveryProperties",
          "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ArmDisasterRecoveryListResult": {
      "type": "object",
      "description": "The response of a ArmDisasterRecovery list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ArmDisasterRecovery items on this page",
          "items": {
            "$ref": "#/definitions/ArmDisasterRecovery"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ArmDisasterRecoveryProperties": {
      "type": "object",
      "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningStateDR",
          "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
          "readOnly": true
        },
        "partnerNamespace": {
          "type": "string",
          "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
        },
        "alternateName": {
          "type": "string",
          "description": "Alternate name specified when alias and namespace names are same."
        },
        "role": {
          "$ref": "#/definitions/RoleDisasterRecovery",
          "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
          "readOnly": true
        },
        "pendingReplicationOperationsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of entities pending to be replicated.",
          "readOnly": true
        }
      }
    },
    "AuthorizationRule": {
      "type": "object",
      "description": "Single item in a List or Get AuthorizationRule operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthorizationRuleProperties",
          "description": "Properties supplied to create or update AuthorizationRule",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AuthorizationRuleListResult": {
      "type": "object",
      "description": "The response of a AuthorizationRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AuthorizationRule items on this page",
          "items": {
            "$ref": "#/definitions/AuthorizationRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AuthorizationRuleProperties": {
      "type": "object",
      "description": "Properties supplied to create or update AuthorizationRule",
      "properties": {
        "rights": {
          "type": "array",
          "description": "The rights associated with the rule.",
          "items": {
            "$ref": "#/definitions/AccessRights"
          }
        }
      },
      "required": [
        "rights"
      ]
    },
    "AvailableCluster": {
      "type": "object",
      "description": "Pre-provisioned and readily available Event Hubs Cluster count per region.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Location fo the Available Cluster"
        }
      }
    },
    "AvailableClustersList": {
      "type": "object",
      "description": "The response of the List Available Clusters operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The count of readily available and pre-provisioned Event Hubs Clusters per region.",
          "items": {
            "$ref": "#/definitions/AvailableCluster"
          }
        }
      }
    },
    "CaptureDescription": {
      "type": "object",
      "description": "Properties to configure capture description for eventhub",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "A value that indicates whether capture description is enabled."
        },
        "encoding": {
          "$ref": "#/definitions/EncodingCaptureDescription",
          "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version"
        },
        "intervalInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"
        },
        "sizeLimitInBytes": {
          "type": "integer",
          "format": "int32",
          "description": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"
        },
        "destination": {
          "$ref": "#/definitions/Destination",
          "description": "Properties of Destination where capture will be stored. (Storage Account, Blob Names)"
        },
        "skipEmptyArchives": {
          "type": "boolean",
          "description": "A value that indicates whether to Skip Empty Archives"
        }
      }
    },
    "CaptureIdentity": {
      "type": "object",
      "description": "A value that indicates whether capture description is enabled.",
      "properties": {
        "type": {
          "$ref": "#/definitions/CaptureIdentityType",
          "description": "Type of Azure Active Directory Managed Identity."
        },
        "userAssignedIdentity": {
          "type": "string",
          "description": "ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used."
        }
      }
    },
    "CaptureIdentityType": {
      "type": "string",
      "description": "Type of Azure Active Directory Managed Identity.",
      "enum": [
        "SystemAssigned",
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "CaptureIdentityType",
        "modelAsString": false
      }
    },
    "CheckNameAvailabilityParameter": {
      "type": "object",
      "description": "Parameter supplied to check Namespace name availability operation",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name to check the namespace name availability"
        }
      },
      "required": [
        "name"
      ]
    },
    "CheckNameAvailabilityResult": {
      "type": "object",
      "description": "The Result of the CheckNameAvailability operation",
      "properties": {
        "message": {
          "type": "string",
          "description": "The detailed info regarding the reason associated with the Namespace.",
          "readOnly": true
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Value indicating Namespace is availability, true if the Namespace is available; otherwise, false."
        },
        "reason": {
          "$ref": "#/definitions/UnavailableReason",
          "description": "The reason for unavailability of a Namespace."
        }
      }
    },
    "CleanupPolicyRetentionDescription": {
      "type": "string",
      "description": "Enumerates the possible values for cleanup policy",
      "enum": [
        "Delete",
        "Compact",
        "DeleteOrCompact"
      ],
      "x-ms-enum": {
        "name": "CleanupPolicyRetentionDescription",
        "modelAsString": true,
        "values": [
          {
            "name": "Delete",
            "value": "Delete"
          },
          {
            "name": "Compact",
            "value": "Compact"
          },
          {
            "name": "DeleteOrCompact",
            "value": "DeleteOrCompact"
          }
        ]
      }
    },
    "Cluster": {
      "type": "object",
      "description": "Single Event Hubs Cluster resource in List or Get operations.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClusterProperties",
          "description": "Event Hubs Cluster properties supplied in responses in List or Get operations.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "$ref": "#/definitions/ClusterSku",
          "description": "Properties of the cluster SKU."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ]
    },
    "ClusterListResult": {
      "type": "object",
      "description": "The response of a Cluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Cluster items on this page",
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ClusterProperties": {
      "type": "object",
      "description": "Event Hubs Cluster properties supplied in responses in List or Get operations.",
      "properties": {
        "createdAt": {
          "type": "string",
          "description": "The UTC time when the Event Hubs Cluster was created.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the Cluster.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "description": "The UTC time when the Event Hubs Cluster was last updated.",
          "readOnly": true
        },
        "metricId": {
          "type": "string",
          "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the Cluster resource",
          "readOnly": true
        },
        "supportsScaling": {
          "type": "boolean",
          "description": "A value that indicates whether Scaling is Supported."
        },
        "platformCapabilities": {
          "$ref": "#/definitions/PlatformCapabilities"
        }
      }
    },
    "ClusterQuotaConfigurationProperties": {
      "type": "object",
      "description": "Contains all settings for the cluster.",
      "properties": {
        "settings": {
          "type": "object",
          "description": "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ClusterSku": {
      "type": "object",
      "description": "SKU parameters particular to a cluster instance.",
      "properties": {
        "name": {
          "$ref": "#/definitions/ClusterSkuName",
          "description": "Name of this SKU."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster.",
          "minimum": 1
        }
      },
      "required": [
        "name"
      ]
    },
    "ClusterSkuName": {
      "type": "string",
      "description": "Name of this SKU.",
      "enum": [
        "Dedicated"
      ],
      "x-ms-enum": {
        "name": "ClusterSkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "Dedicated",
            "value": "Dedicated"
          }
        ]
      }
    },
    "ConfidentialCompute": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/Mode",
          "description": "Setting to Enable or Disable Confidential Compute"
        }
      }
    },
    "ConnectionState": {
      "type": "object",
      "description": "ConnectionState information.",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateLinkConnectionStatus",
          "description": "Status of the connection."
        },
        "description": {
          "type": "string",
          "description": "Description of the connection state."
        }
      }
    },
    "ConsumerGroup": {
      "type": "object",
      "description": "Single item in List or Get Consumer group operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConsumerGroupProperties",
          "description": "Single item in List or Get Consumer group operation",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConsumerGroupListResult": {
      "type": "object",
      "description": "The response of a ConsumerGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConsumerGroup items on this page",
          "items": {
            "$ref": "#/definitions/ConsumerGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConsumerGroupProperties": {
      "type": "object",
      "description": "Single item in List or Get Consumer group operation",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Exact time the message was created.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The exact time the message was updated.",
          "readOnly": true
        },
        "userMetadata": {
          "type": "string",
          "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."
        }
      }
    },
    "DefaultAction": {
      "type": "string",
      "description": "Default Action for Network Rule Set",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "DefaultAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Allow",
            "value": "Allow"
          },
          {
            "name": "Deny",
            "value": "Deny"
          }
        ]
      }
    },
    "Destination": {
      "type": "object",
      "description": "Capture storage details for capture description",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for capture destination"
        },
        "identity": {
          "$ref": "#/definitions/CaptureIdentity",
          "description": "A value that indicates whether capture description is enabled."
        },
        "properties": {
          "$ref": "#/definitions/DestinationProperties",
          "description": "Properties describing the storage account, blob container and archive name format for capture destination",
          "x-ms-client-flatten": true
        }
      }
    },
    "DestinationProperties": {
      "type": "object",
      "description": "Properties describing the storage account, blob container and archive name format for capture destination",
      "properties": {
        "storageAccountResourceId": {
          "type": "string",
          "description": "Resource id of the storage account to be used to create the blobs"
        },
        "blobContainer": {
          "type": "string",
          "description": "Blob container Name"
        },
        "archiveNameFormat": {
          "type": "string",
          "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"
        },
        "dataLakeSubscriptionId": {
          "type": "string",
          "format": "uuid",
          "description": "Subscription Id of Azure Data Lake Store"
        },
        "dataLakeAccountName": {
          "type": "string",
          "description": "The Azure Data Lake Store name for the captured events"
        },
        "dataLakeFolderPath": {
          "type": "string",
          "description": "The destination folder path for the captured events"
        }
      }
    },
    "EHNamespace": {
      "type": "object",
      "description": "Single Namespace item in List or Get Operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EHNamespaceProperties",
          "description": "Namespace properties supplied for create namespace operation.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Properties of sku resource"
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Properties of BYOK Identity description"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ]
    },
    "EHNamespaceIdContainer": {
      "type": "object",
      "description": "The full ARM ID of an Event Hubs Namespace",
      "properties": {
        "id": {
          "type": "string",
          "description": "id parameter"
        }
      }
    },
    "EHNamespaceIdListResult": {
      "type": "object",
      "description": "The response of the List Namespace IDs operation",
      "properties": {
        "value": {
          "type": "array",
          "description": "Result of the List Namespace IDs operation",
          "items": {
            "$ref": "#/definitions/EHNamespaceIdContainer"
          }
        }
      }
    },
    "EHNamespaceListResult": {
      "type": "object",
      "description": "The response of a EHNamespace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EHNamespace items on this page",
          "items": {
            "$ref": "#/definitions/EHNamespace"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EHNamespaceProperties": {
      "type": "object",
      "description": "Namespace properties supplied for create namespace operation.",
      "properties": {
        "minimumTlsVersion": {
          "$ref": "#/definitions/TlsVersion",
          "description": "The minimum TLS version for the cluster to support, e.g. '1.2'"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the Namespace.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the Namespace.",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the Namespace was created.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the Namespace was updated.",
          "readOnly": true
        },
        "serviceBusEndpoint": {
          "type": "string",
          "description": "Endpoint you can use to perform Service Bus operations.",
          "readOnly": true
        },
        "clusterArmId": {
          "type": "string",
          "description": "Cluster ARM ID of the Namespace."
        },
        "metricId": {
          "type": "string",
          "description": "Identifier for Azure Insights metrics.",
          "readOnly": true
        },
        "isAutoInflateEnabled": {
          "type": "boolean",
          "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "This determines if traffic is allowed over public network. By default it is enabled.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled",
            "SecuredByPerimeter"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              },
              {
                "name": "SecuredByPerimeter",
                "value": "SecuredByPerimeter"
              }
            ]
          }
        },
        "maximumThroughputUnits": {
          "type": "integer",
          "format": "int32",
          "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
          "minimum": 0
        },
        "kafkaEnabled": {
          "type": "boolean",
          "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
        },
        "zoneRedundant": {
          "type": "boolean",
          "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
        },
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "Properties of BYOK Encryption description"
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connections.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "This property disables SAS authentication for the Event Hubs namespace."
        },
        "alternateName": {
          "type": "string",
          "description": "Alternate name specified when alias and namespace names are same."
        },
        "platformCapabilities": {
          "$ref": "#/definitions/PlatformCapabilities"
        },
        "geoDataReplication": {
          "$ref": "#/definitions/GeoDataReplicationProperties",
          "description": "Geo Data Replication settings for the namespace"
        }
      }
    },
    "EncodingCaptureDescription": {
      "type": "string",
      "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version",
      "enum": [
        "Avro",
        "AvroDeflate"
      ],
      "x-ms-enum": {
        "name": "EncodingCaptureDescription",
        "modelAsString": false
      }
    },
    "Encryption": {
      "type": "object",
      "description": "Properties to configure Encryption",
      "properties": {
        "keyVaultProperties": {
          "type": "array",
          "description": "Properties of KeyVault",
          "items": {
            "$ref": "#/definitions/KeyVaultProperties"
          },
          "x-ms-client-name": "KeyVaultProperties"
        },
        "keySource": {
          "type": "string",
          "description": "Enumerates the possible value of keySource for Encryption",
          "default": "Microsoft.KeyVault",
          "enum": [
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "requireInfrastructureEncryption": {
          "type": "boolean",
          "description": "Enable Infrastructure Encryption (Double Encryption)"
        }
      }
    },
    "EndPointProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Private Endpoint Connection.",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "EndPointProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "EntityStatus": {
      "type": "string",
      "description": "Enumerates the possible values for the status of the Event Hub.",
      "enum": [
        "Active",
        "Disabled",
        "Restoring",
        "SendDisabled",
        "ReceiveDisabled",
        "Creating",
        "Deleting",
        "Renaming",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "EntityStatus",
        "modelAsString": false
      }
    },
    "ErrorAdditionalInfo": {
      "type": "object",
      "description": "The resource management error additional info.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The additional info type.",
          "readOnly": true
        },
        "info": {
          "description": "The additional info.",
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "The error detail.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response indicates Event Hub service is not able to process the incoming request. The reason is provided in the error message.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail",
          "description": "The error object."
        }
      }
    },
    "EventHubListResult": {
      "type": "object",
      "description": "Paged collection of Eventhub items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Eventhub items on this page",
          "items": {
            "$ref": "#/definitions/Eventhub"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Eventhub": {
      "type": "object",
      "description": "Single item in List or Get Event Hub operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventhubProperties",
          "description": "Properties supplied to the Create Or Update Event Hub operation.",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "EventhubProperties": {
      "type": "object",
      "description": "Properties supplied to the Create Or Update Event Hub operation.",
      "properties": {
        "partitionIds": {
          "type": "array",
          "description": "Current number of shards on the Event Hub.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Exact time the Event Hub was created.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The exact time the message was updated.",
          "readOnly": true
        },
        "messageRetentionInDays": {
          "type": "integer",
          "format": "int64",
          "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days",
          "minimum": 1
        },
        "partitionCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.",
          "minimum": 1
        },
        "status": {
          "$ref": "#/definitions/EntityStatus",
          "description": "Enumerates the possible values for the status of the Event Hub."
        },
        "captureDescription": {
          "$ref": "#/definitions/CaptureDescription",
          "description": "Properties of capture description"
        },
        "retentionDescription": {
          "$ref": "#/definitions/RetentionDescription",
          "description": "Event Hub retention settings"
        },
        "messageTimestampDescription": {
          "$ref": "#/definitions/MessageTimestampDescription",
          "description": "Properties of MessageTimestamp Description"
        },
        "identifier": {
          "type": "string",
          "description": "Denotes the unique identifier for event hub and is generated by service while creating topic. This identifier can be used in kafka runtime apis wherever a UUID is required e.g Fetch & Delete Topic. This identifier is not supported in AMQP runtime operations yet.",
          "readOnly": true
        },
        "userMetadata": {
          "type": "string",
          "description": "Gets and Sets Metadata of User."
        }
      }
    },
    "FailOver": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FailOverProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "FailOverProperties": {
      "type": "object",
      "properties": {
        "primaryLocation": {
          "type": "string",
          "description": "Query parameter for the new primary location after failover."
        },
        "force": {
          "type": "boolean",
          "description": "If Force is false then graceful failover is attempted after ensuring no data loss. If Force flag is set to true, Forced failover is attempted with possible data loss."
        }
      }
    },
    "GeoDRRoleType": {
      "type": "string",
      "description": "GeoDR Role Types",
      "enum": [
        "Primary",
        "Secondary"
      ],
      "x-ms-enum": {
        "name": "GeoDRRoleType",
        "modelAsString": true,
        "values": [
          {
            "name": "Primary",
            "value": "Primary"
          },
          {
            "name": "Secondary",
            "value": "Secondary"
          }
        ]
      }
    },
    "GeoDataReplicationProperties": {
      "type": "object",
      "description": "GeoDR Replication properties",
      "properties": {
        "maxReplicationLagDurationInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum acceptable lag for data replication operations from the primary replica to a quorum of secondary replicas.  When the lag exceeds the configured amount, operations on the primary replica will be failed. The allowed values are 0 and 5 minutes to 1 day."
        },
        "locations": {
          "type": "array",
          "description": "A list of regions where replicas of the namespace are maintained.",
          "items": {
            "$ref": "#/definitions/NamespaceReplicaLocation"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Properties to configure Identity for Bring your Own Keys",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "ObjectId from the KeyVault",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "TenantId from the KeyVault",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ManagedServiceIdentityType",
          "description": "Type of managed service identity."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "Properties for User Assigned Identities",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentity"
          }
        }
      }
    },
    "KeyType": {
      "type": "string",
      "description": "The access key to regenerate.",
      "enum": [
        "PrimaryKey",
        "SecondaryKey"
      ],
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "PrimaryKey",
            "value": "PrimaryKey"
          },
          {
            "name": "SecondaryKey",
            "value": "SecondaryKey"
          }
        ]
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "description": "Properties to configure keyVault Properties",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the Key from KeyVault",
          "x-ms-client-name": "KeyName"
        },
        "keyVaultUri": {
          "type": "string",
          "description": "Uri of KeyVault",
          "x-ms-client-name": "KeyVaultUri"
        },
        "keyVersion": {
          "type": "string",
          "description": "Key Version",
          "x-ms-client-name": "KeyVersion"
        },
        "identity": {
          "$ref": "#/definitions/userAssignedIdentityProperties"
        }
      }
    },
    "ManagedServiceIdentityType": {
      "type": "string",
      "description": "Type of managed service identity.",
      "enum": [
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ManagedServiceIdentityType",
        "modelAsString": false
      }
    },
    "MessageTimestampDescription": {
      "type": "object",
      "description": "Properties of MessageTimestamp Description",
      "properties": {
        "timestampType": {
          "$ref": "#/definitions/TimestampType",
          "description": "Denotes the type of timestamp the message will hold.Two types of timestamp types - \"AppendTime\" and \"CreateTime\". AppendTime refers the time in which message got appended inside broker log. CreateTime refers to the time in which the message was generated on source side and producers can set this timestamp while sending the message. Default value is AppendTime. If you are using AMQP protocol, CreateTime equals AppendTime and its behavior remains the same."
        }
      }
    },
    "MetricId": {
      "type": "string",
      "description": "Metric Id on which the throttle limit should be set, MetricId can be discovered by hovering over Metric in the Metrics section of Event Hub Namespace inside Azure Portal",
      "enum": [
        "IncomingBytes",
        "OutgoingBytes",
        "IncomingMessages",
        "OutgoingMessages"
      ],
      "x-ms-enum": {
        "name": "MetricId",
        "modelAsString": true,
        "values": [
          {
            "name": "IncomingBytes",
            "value": "IncomingBytes"
          },
          {
            "name": "OutgoingBytes",
            "value": "OutgoingBytes"
          },
          {
            "name": "IncomingMessages",
            "value": "IncomingMessages"
          },
          {
            "name": "OutgoingMessages",
            "value": "OutgoingMessages"
          }
        ]
      }
    },
    "Mode": {
      "type": "string",
      "description": "Setting to Enable or Disable Confidential Compute",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "Mode",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "NWRuleSetIpRules": {
      "type": "object",
      "description": "The response from the List namespace operation.",
      "properties": {
        "ipMask": {
          "type": "string",
          "description": "IP Mask"
        },
        "action": {
          "$ref": "#/definitions/NetworkRuleIPAction",
          "description": "The IP Filter Action"
        }
      }
    },
    "NWRuleSetVirtualNetworkRules": {
      "type": "object",
      "description": "The response from the List namespace operation.",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "Subnet properties"
        },
        "ignoreMissingVnetServiceEndpoint": {
          "type": "boolean",
          "description": "Value that indicates whether to ignore missing Vnet Service Endpoint"
        }
      }
    },
    "NamespaceReplicaLocation": {
      "type": "object",
      "description": "Namespace replication properties",
      "properties": {
        "locationName": {
          "type": "string",
          "description": "Azure regions where a replica of the namespace is maintained"
        },
        "roleType": {
          "$ref": "#/definitions/GeoDRRoleType",
          "description": "GeoDR Role Types"
        },
        "replicaState": {
          "type": "string",
          "description": "state of Namespace replica.",
          "readOnly": true
        },
        "clusterArmId": {
          "type": "string",
          "description": "Optional property that denotes the ARM ID of the Cluster. This is required, if a namespace replica should be placed in a Dedicated Event Hub Cluster"
        }
      }
    },
    "NetworkRuleIPAction": {
      "type": "string",
      "description": "The IP Filter Action",
      "enum": [
        "Allow"
      ],
      "x-ms-enum": {
        "name": "NetworkRuleIPAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Allow",
            "value": "Allow"
          }
        ]
      }
    },
    "NetworkRuleSet": {
      "type": "object",
      "description": "Description of topic resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkRuleSetProperties",
          "description": "NetworkRuleSet properties",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkRuleSetListResult": {
      "type": "object",
      "description": "Paged collection of NetworkRuleSet items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkRuleSet items on this page",
          "items": {
            "$ref": "#/definitions/NetworkRuleSet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkRuleSetProperties": {
      "type": "object",
      "description": "NetworkRuleSet properties",
      "properties": {
        "trustedServiceAccessEnabled": {
          "type": "boolean",
          "description": "Value that indicates whether Trusted Service Access is Enabled or not."
        },
        "defaultAction": {
          "$ref": "#/definitions/DefaultAction",
          "description": "Default Action for Network Rule Set"
        },
        "virtualNetworkRules": {
          "type": "array",
          "description": "List VirtualNetwork Rules",
          "items": {
            "$ref": "#/definitions/NWRuleSetVirtualNetworkRules"
          }
        },
        "ipRules": {
          "type": "array",
          "description": "List of IpRules",
          "items": {
            "$ref": "#/definitions/NWRuleSetIpRules"
          }
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled",
            "SecuredByPerimeter"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccessFlag",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              },
              {
                "name": "SecuredByPerimeter",
                "value": "SecuredByPerimeter"
              }
            ]
          }
        }
      }
    },
    "NetworkSecurityPerimeter": {
      "type": "object",
      "description": "NetworkSecurityPerimeter related information",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified identifier of the resource"
        },
        "perimeterGuid": {
          "type": "string",
          "description": "Guid of the resource"
        },
        "location": {
          "type": "string",
          "description": "Location of the resource"
        }
      }
    },
    "NetworkSecurityPerimeterConfiguration": {
      "type": "object",
      "description": "Network Security Perimeter related configurations of a given namespace",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationProperties",
          "description": "Properties of the Network Security Perimeter Configuration",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkSecurityPerimeterConfigurationList": {
      "type": "object",
      "description": "Result of the List NetworkSecurityPerimeterConfiguration operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "A collection of NetworkSecurityPerimeterConfigurations",
          "items": {
            "$ref": "#/definitions/NetworkSecurityPerimeterConfiguration"
          },
          "readOnly": true
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationProperties": {
      "type": "object",
      "description": "Properties of NetworkSecurityPerimeterConfiguration",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationProvisioningState",
          "description": "Provisioning state of NetworkSecurityPerimeter configuration propagation"
        },
        "provisioningIssues": {
          "type": "array",
          "description": "List of Provisioning Issues if any",
          "items": {
            "$ref": "#/definitions/ProvisioningIssue"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "networkSecurityPerimeter": {
          "$ref": "#/definitions/NetworkSecurityPerimeter",
          "description": "NetworkSecurityPerimeter related information",
          "readOnly": true
        },
        "resourceAssociation": {
          "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation",
          "description": "Information about resource association",
          "readOnly": true
        },
        "profile": {
          "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationPropertiesProfile",
          "description": "Information about current network profile",
          "readOnly": true
        },
        "isBackingResource": {
          "type": "boolean",
          "description": "True if the EventHub namespace is backed by another Azure resource and not visible to end users.",
          "readOnly": true
        },
        "applicableFeatures": {
          "type": "array",
          "description": "Indicates that the NSP controls related to backing association are only applicable to a specific feature in backing resource's data plane.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "parentAssociationName": {
          "type": "string",
          "description": "Source Resource Association name",
          "readOnly": true
        },
        "sourceResourceId": {
          "type": "string",
          "description": "ARM Id of source resource",
          "readOnly": true
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationPropertiesProfile": {
      "type": "object",
      "description": "Information about current network profile",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource"
        },
        "accessRulesVersion": {
          "type": "string",
          "description": "Current access rules version"
        },
        "accessRules": {
          "type": "array",
          "description": "List of Access Rules",
          "items": {
            "$ref": "#/definitions/NspAccessRule"
          }
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationPropertiesResourceAssociation": {
      "type": "object",
      "description": "Information about resource association",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource association"
        },
        "accessMode": {
          "$ref": "#/definitions/ResourceAssociationAccessMode",
          "description": "Access Mode of the resource association"
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationProvisioningState": {
      "type": "string",
      "description": "Provisioning state of NetworkSecurityPerimeter configuration propagation",
      "enum": [
        "Unknown",
        "Creating",
        "Updating",
        "Accepted",
        "InvalidResponse",
        "Succeeded",
        "SucceededWithIssues",
        "Failed",
        "Deleting",
        "Deleted",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "NetworkSecurityPerimeterConfigurationProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Accepted",
            "value": "Accepted"
          },
          {
            "name": "InvalidResponse",
            "value": "InvalidResponse"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "SucceededWithIssues",
            "value": "SucceededWithIssues"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Deleted",
            "value": "Deleted"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          }
        ]
      }
    },
    "NspAccessRule": {
      "type": "object",
      "description": "Information of Access Rule in Network Profile",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified identifier of the resource"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource"
        },
        "type": {
          "type": "string",
          "description": "Type of the resource"
        },
        "properties": {
          "$ref": "#/definitions/NspAccessRuleProperties",
          "description": "Properties of Access Rule",
          "readOnly": true
        }
      }
    },
    "NspAccessRuleDirection": {
      "type": "string",
      "description": "Direction of Access Rule",
      "enum": [
        "Inbound",
        "Outbound"
      ],
      "x-ms-enum": {
        "name": "NspAccessRuleDirection",
        "modelAsString": true,
        "values": [
          {
            "name": "Inbound",
            "value": "Inbound"
          },
          {
            "name": "Outbound",
            "value": "Outbound"
          }
        ]
      }
    },
    "NspAccessRuleProperties": {
      "type": "object",
      "description": "Properties of Access Rule",
      "properties": {
        "direction": {
          "$ref": "#/definitions/NspAccessRuleDirection",
          "description": "Direction of Access Rule"
        },
        "addressPrefixes": {
          "type": "array",
          "description": "Address prefixes in the CIDR format for inbound rules",
          "items": {
            "type": "string"
          }
        },
        "subscriptions": {
          "type": "array",
          "description": "Subscriptions for inbound rules",
          "items": {
            "$ref": "#/definitions/NspAccessRulePropertiesSubscriptionsItem"
          }
        },
        "networkSecurityPerimeters": {
          "type": "array",
          "description": "NetworkSecurityPerimeters for inbound rules",
          "items": {
            "$ref": "#/definitions/NetworkSecurityPerimeter"
          },
          "readOnly": true
        },
        "fullyQualifiedDomainNames": {
          "type": "array",
          "description": "FQDN for outbound rules",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "NspAccessRulePropertiesSubscriptionsItem": {
      "type": "object",
      "description": "Subscription for inbound rule",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified identifier of subscription"
        }
      }
    },
    "Operation": {
      "type": "object",
      "description": "A Event Hub REST API operation",
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "Display of the operation"
        },
        "origin": {
          "type": "string",
          "description": "Origin of the operation"
        },
        "properties": {
          "description": "Properties of the operation",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "description": "Operation display payload",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Resource provider of the operation",
          "readOnly": true
        },
        "resource": {
          "type": "string",
          "description": "Resource of the operation",
          "readOnly": true
        },
        "operation": {
          "type": "string",
          "description": "Localized friendly name for the operation",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Localized friendly description for the operation",
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "Paged collection of Operation items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Operation items on this page",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PlatformCapabilities": {
      "type": "object",
      "properties": {
        "confidentialCompute": {
          "$ref": "#/definitions/ConfidentialCompute"
        }
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "PrivateEndpoint information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM identifier for Private Endpoint."
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "Properties of the PrivateEndpointConnection.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Properties of the PrivateEndpointConnection.",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The Private Endpoint resource for this Connection."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/ConnectionState",
          "description": "Details about the state of the connection."
        },
        "provisioningState": {
          "$ref": "#/definitions/EndPointProvisioningState",
          "description": "Provisioning state of the Private Endpoint Connection."
        }
      }
    },
    "PrivateLinkConnectionStatus": {
      "type": "string",
      "description": "Status of the connection.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "PrivateLinkConnectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending"
          },
          {
            "name": "Approved",
            "value": "Approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected"
          }
        ]
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "Information of the private link resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Properties of the private link resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "Fully qualified identifier of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource"
        },
        "type": {
          "type": "string",
          "description": "Type of the resource"
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of PrivateLinkResource",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id."
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkResourcesListResult": {
      "type": "object",
      "description": "Paged collection of PrivateLinkResource items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateLinkResource items on this page",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProvisioningIssue": {
      "type": "object",
      "description": "Describes Provisioning issue for given NetworkSecurityPerimeterConfiguration",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the issue"
        },
        "properties": {
          "$ref": "#/definitions/ProvisioningIssueProperties",
          "description": "Properties of Provisioning Issue",
          "readOnly": true
        }
      }
    },
    "ProvisioningIssueProperties": {
      "type": "object",
      "description": "Properties of Provisioning Issue",
      "properties": {
        "issueType": {
          "type": "string",
          "description": "Type of Issue"
        },
        "description": {
          "type": "string",
          "description": "Description of the issue"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Cluster.",
      "enum": [
        "Unknown",
        "Creating",
        "Deleting",
        "Scaling",
        "Active",
        "Failed",
        "Succeeded",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Scaling",
            "value": "Scaling"
          },
          {
            "name": "Active",
            "value": "Active"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          }
        ]
      }
    },
    "ProvisioningStateDR": {
      "type": "string",
      "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
      "enum": [
        "Accepted",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningStateDR",
        "modelAsString": false
      }
    },
    "RegenerateAccessKeyParameters": {
      "type": "object",
      "description": "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset.",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/KeyType",
          "description": "The access key to regenerate."
        },
        "key": {
          "type": "string",
          "description": "Optional, if the key value provided, is set for KeyType or autogenerated Key value set for keyType"
        }
      },
      "required": [
        "keyType"
      ]
    },
    "ResourceAssociationAccessMode": {
      "type": "string",
      "description": "Access Mode of the resource association",
      "enum": [
        "NoAssociationMode",
        "EnforcedMode",
        "LearningMode",
        "AuditMode",
        "UnspecifiedMode"
      ],
      "x-ms-enum": {
        "name": "ResourceAssociationAccessMode",
        "modelAsString": true,
        "values": [
          {
            "name": "NoAssociationMode",
            "value": "NoAssociationMode"
          },
          {
            "name": "EnforcedMode",
            "value": "EnforcedMode"
          },
          {
            "name": "LearningMode",
            "value": "LearningMode"
          },
          {
            "name": "AuditMode",
            "value": "AuditMode"
          },
          {
            "name": "UnspecifiedMode",
            "value": "UnspecifiedMode"
          }
        ]
      }
    },
    "RetentionDescription": {
      "type": "object",
      "description": "Properties to configure retention settings for the  eventhub",
      "properties": {
        "cleanupPolicy": {
          "$ref": "#/definitions/CleanupPolicyRetentionDescription",
          "description": "Enumerates the possible values for cleanup policy"
        },
        "retentionTimeInHours": {
          "type": "integer",
          "format": "int64",
          "description": "Number of hours to retain the events for this Event Hub. This should be positive value upto namespace SKU max. -1 is a special case where retention time is infinite, but the size of an entity is restricted and its size depends on namespace SKU type."
        },
        "minCompactionLagTimeInMinutes": {
          "type": "integer",
          "format": "int64",
          "description": "The minimum time a message will remain ineligible for compaction in the log. This value is used when cleanupPolicy is Compact or DeleteOrCompact."
        },
        "tombstoneRetentionTimeInHours": {
          "type": "integer",
          "format": "int32",
          "description": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is used when cleanupPolicy is Compact or DeleteOrCompact. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub"
        }
      }
    },
    "RoleDisasterRecovery": {
      "type": "string",
      "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
      "enum": [
        "Primary",
        "PrimaryNotReplicating",
        "Secondary"
      ],
      "x-ms-enum": {
        "name": "RoleDisasterRecovery",
        "modelAsString": false
      }
    },
    "SchemaCompatibility": {
      "type": "string",
      "enum": [
        "None",
        "Backward",
        "Forward"
      ],
      "x-ms-enum": {
        "name": "SchemaCompatibility",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Backward",
            "value": "Backward"
          },
          {
            "name": "Forward",
            "value": "Forward"
          }
        ]
      }
    },
    "SchemaGroup": {
      "type": "object",
      "description": "Single item in List or Get Schema Group operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchemaGroupProperties",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SchemaGroupListResult": {
      "type": "object",
      "description": "The response of a SchemaGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SchemaGroup items on this page",
          "items": {
            "$ref": "#/definitions/SchemaGroup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SchemaGroupProperties": {
      "type": "object",
      "properties": {
        "updatedAtUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Exact time the Schema Group was updated",
          "readOnly": true
        },
        "createdAtUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Exact time the Schema Group was created.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "format": "uuid",
          "description": "The ETag value.",
          "readOnly": true
        },
        "groupProperties": {
          "type": "object",
          "description": "dictionary object for SchemaGroup group properties",
          "additionalProperties": {
            "type": "string"
          }
        },
        "schemaCompatibility": {
          "$ref": "#/definitions/SchemaCompatibility"
        },
        "schemaType": {
          "$ref": "#/definitions/SchemaType"
        }
      }
    },
    "SchemaType": {
      "type": "string",
      "enum": [
        "Unknown",
        "Avro",
        "ProtoBuf",
        "Json"
      ],
      "x-ms-enum": {
        "name": "SchemaType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Avro",
            "value": "Avro"
          },
          {
            "name": "ProtoBuf",
            "value": "ProtoBuf"
          },
          {
            "name": "Json",
            "value": "Json"
          }
        ]
      }
    },
    "Sku": {
      "type": "object",
      "description": "SKU parameters supplied to the create namespace operation",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "Name of this SKU."
        },
        "tier": {
          "$ref": "#/definitions/SkuTier",
          "description": "The billing tier of this particular SKU."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units.",
          "minimum": 0
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "type": "string",
      "description": "Name of this SKU.",
      "enum": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "Basic",
            "value": "Basic"
          },
          {
            "name": "Standard",
            "value": "Standard"
          },
          {
            "name": "Premium",
            "value": "Premium"
          }
        ]
      }
    },
    "SkuTier": {
      "type": "string",
      "description": "The billing tier of this particular SKU.",
      "enum": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Basic",
            "value": "Basic"
          },
          {
            "name": "Standard",
            "value": "Standard"
          },
          {
            "name": "Premium",
            "value": "Premium"
          }
        ]
      }
    },
    "Subnet": {
      "type": "object",
      "description": "Properties supplied for Subnet",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of Virtual Network Subnet"
        }
      }
    },
    "ThrottlingPolicy": {
      "type": "object",
      "description": "Properties of the throttling policy",
      "properties": {
        "rateLimitThreshold": {
          "type": "integer",
          "format": "int64",
          "description": "The Threshold limit above which the application group will be throttled.Rate limit is always per second."
        },
        "metricId": {
          "$ref": "#/definitions/MetricId",
          "description": "Metric Id on which the throttle limit should be set, MetricId can be discovered by hovering over Metric in the Metrics section of Event Hub Namespace inside Azure Portal"
        }
      },
      "required": [
        "rateLimitThreshold",
        "metricId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ApplicationGroupPolicy"
        }
      ],
      "x-ms-discriminator-value": "ThrottlingPolicy"
    },
    "TimestampType": {
      "type": "string",
      "description": "Denotes the type of timestamp the message will hold.Two types of timestamp types - \"AppendTime\" and \"CreateTime\". AppendTime refers the time in which message got appended inside broker log. CreateTime refers to the time in which the message was generated on source side and producers can set this timestamp while sending the message. Default value is AppendTime. If you are using AMQP protocol, CreateTime equals AppendTime and its behavior remains the same.",
      "enum": [
        "LogAppend",
        "Create"
      ],
      "x-ms-enum": {
        "name": "TimestampType",
        "modelAsString": true,
        "values": [
          {
            "name": "LogAppend",
            "value": "LogAppend"
          },
          {
            "name": "Create",
            "value": "Create"
          }
        ]
      }
    },
    "TlsVersion": {
      "type": "string",
      "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
      "enum": [
        "1.0",
        "1.1",
        "1.2",
        "1.3"
      ],
      "x-ms-enum": {
        "name": "TlsVersion",
        "modelAsString": true,
        "values": [
          {
            "name": "1.0",
            "value": "1.0"
          },
          {
            "name": "1.1",
            "value": "1.1"
          },
          {
            "name": "1.2",
            "value": "1.2"
          },
          {
            "name": "1.3",
            "value": "1.3"
          }
        ]
      }
    },
    "UnavailableReason": {
      "type": "string",
      "description": "Specifies the reason for the unavailability of the service.",
      "enum": [
        "None",
        "InvalidName",
        "SubscriptionIsDisabled",
        "NameInUse",
        "NameInLockdown",
        "TooManyNamespaceInCurrentSubscription"
      ],
      "x-ms-enum": {
        "name": "UnavailableReason",
        "modelAsString": false
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "description": "Recognized Dictionary value.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Principal Id of user assigned identity",
          "readOnly": true,
          "x-ms-client-name": "PrincipalId"
        },
        "clientId": {
          "type": "string",
          "description": "Client Id of user assigned identity",
          "readOnly": true,
          "x-ms-client-name": "ClientId"
        }
      }
    },
    "userAssignedIdentityProperties": {
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "ARM ID of user Identity selected for encryption"
        }
      }
    }
  },
  "parameters": {}
}
