{
  "swagger": "2.0",
  "info": {
    "title": "EventHub2018PreviewManagementClient",
    "description": "Azure Event Hubs client for managing Event Hubs Cluster, IPFilter Rules and VirtualNetworkRules resources.",
    "version": "2018-01-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.EventHub/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "EHOperations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "description": "Lists all of the available Event Hub REST API operations.",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters": {
      "get": {
        "tags": [
          "Event Hubs Clusters"
        ],
        "operationId": "Clusters_ListByResourceGroup",
        "x-ms-examples": {
          "ClustersListByResourceGroup": {
            "$ref": "./examples/Clusters/ClustersListByResourceGroup.json"
          }
        },
        "description": "Lists the available Event Hubs Clusters within an ARM resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Clusters returned successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "Event Hub Cluster error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}": {
      "get": {
        "tags": [
          "Event Hubs Cluster"
        ],
        "operationId": "Clusters_Get",
        "x-ms-examples": {
          "ClusterGet": {
            "$ref": "./examples/Clusters/ClusterGet.json"
          }
        },
        "description": "Gets the resource description of the specified Event Hubs Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/clusterNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hubs Cluster resource description returned successfully.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Event Hubs Cluster error response describing why the cluster description get operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Event Hubs Cluster"
        ],
        "operationId": "Clusters_Patch",
        "x-ms-examples": {
          "ClusterPatch": {
            "$ref": "./examples/Clusters/ClusterPatch.json"
          }
        },
        "description": "Modifies mutable properties on the Event Hubs Cluster. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/clusterNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "description": "The properties of the Event Hubs Cluster which should be updated."
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hubs Cluster successfully created.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "Event Hubs Cluster update request accepted.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "202": {
            "description": "Event Hubs Cluster update request accepted."
          },
          "default": {
            "description": "Event Hubs error response detailing why the Event Hubs Cluster update operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}/quotaConfiguration/default": {
      "patch": {
        "tags": [
          "Event Hubs Cluster Configuration"
        ],
        "operationId": "Configuration_Patch",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/clusterNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties",
              "required": [
                "settings"
              ]
            },
            "description": "Parameters for creating an Event Hubs Cluster resource."
          }
        ],
        "x-ms-examples": {
          "ClustersQuotasConfigurationPatch": {
            "$ref": "./examples/Clusters/ClusterQuotaConfigurationPatch.json"
          }
        },
        "description": "Replace all specified Event Hubs Cluster settings with those contained in the request body. Leaves the settings not specified in the request body unmodified.",
        "responses": {
          "200": {
            "description": "Event Hubs Cluster settings configuration returned.",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "201": {
            "description": "Event Hubs Cluster setting configuration request successfully accepted.",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "202": {
            "description": "Event Hubs Cluster update request accepted."
          },
          "default": {
            "description": "Event Hubs Cluster error response describing why the get cluster quotas and settings operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Event Hubs Cluster Configuration"
        ],
        "operationId": "Configuration_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/clusterNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ClustersQuotasConfigurationGet": {
            "$ref": "./examples/Clusters/ClusterQuotaConfigurationGet.json"
          }
        },
        "description": "Get all Event Hubs Cluster settings - a collection of key/value pairs which represent the quotas and settings imposed on the cluster.",
        "responses": {
          "200": {
            "description": "Event Hubs Cluster settings configuration returned.",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "default": {
            "description": "Event Hubs Cluster error response describing why the get cluster quotas and settings operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_List",
        "x-ms-examples": {
          "NamespacesListBySubscription": {
            "$ref": "./examples/NameSpaces/EHNameSpaceList.json"
          }
        },
        "description": "Lists all the available Namespaces within a subscription, irrespective of the resource groups.",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully.",
            "schema": {
              "$ref": "#/definitions/EHNamespaceListResult"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListByResourceGroup",
        "x-ms-examples": {
          "NamespaceListByResourceGroup": {
            "$ref": "./examples/NameSpaces/EHNameSpaceListByResourceGroup.json"
          }
        },
        "description": "Lists the available Namespaces within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully.",
            "schema": {
              "$ref": "#/definitions/EHNamespaceListResult"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdate",
        "x-ms-examples": {
          "NamespaceCreate": {
            "$ref": "./examples/NameSpaces/EHNameSpaceCreate.json"
          }
        },
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EHNamespace",
              "required": [
                "location"
              ]
            },
            "description": "Parameters for creating a namespace resource."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Namespace create request accepted.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "200": {
            "description": "Namespace successfully created.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "202": {
            "description": "Namespace create or update request accepted."
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Delete",
        "x-ms-examples": {
          "NameSpaceDelete": {
            "$ref": "./examples/NameSpaces/EHNameSpaceDelete.json"
          }
        },
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "200": {
            "description": "Namespace successfully deleted."
          },
          "202": {
            "description": "Namespace delete request accepted."
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Get",
        "x-ms-examples": {
          "NameSpaceGet": {
            "$ref": "./examples/NameSpaces/EHNameSpaceGet.json"
          }
        },
        "description": "Gets the description of the specified namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace returned successfully.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "201": {
            "description": "Namespace update request accepted.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Update",
        "x-ms-examples": {
          "NamespacesUpdate": {
            "$ref": "./examples/NameSpaces/EHNameSpaceUpdate.json"
          }
        },
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            },
            "description": "Parameters for updating a namespace resource."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Namespace update request accepted.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "200": {
            "description": "Namespace successfully updated.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "202": {
            "description": "Namespace create or update request accepted."
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/ipfilterrules": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListIPFilterRules",
        "x-ms-examples": {
          "ListIpFilterRules": {
            "$ref": "./examples/NameSpaces/IPFilterRule/EHNameSpaceIPFilterRuleListAll.json"
          }
        },
        "description": "Gets a list of IP Filter rules for a Namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace IpFilterRule successfully returned.",
            "schema": {
              "$ref": "#/definitions/IpFilterRuleListResult"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/ipfilterrules/{ipFilterRuleName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdateIpFilterRule",
        "x-ms-examples": {
          "NameSpaceIpFilterRuleCreate": {
            "$ref": "./examples/NameSpaces/IPFilterRule/EHNameSpaceIpFilterRuleCreateorUpdate.json"
          }
        },
        "description": "Creates or updates an IpFilterRule for a Namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/ipFilterRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpFilterRule"
            },
            "description": "The Namespace IpFilterRule."
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace IpFilterRule created",
            "schema": {
              "$ref": "#/definitions/IpFilterRule"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_DeleteIpFilterRule",
        "x-ms-examples": {
          "NameSpaceIpFilterRuleDelete": {
            "$ref": "./examples/NameSpaces/IPFilterRule/EHNameSpaceIpFilterRuleDelete.json"
          }
        },
        "description": "Deletes an IpFilterRule for a Namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/ipFilterRuleNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "200": {
            "description": "Namespace IpFilterRule successfully deleted."
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_GetIpFilterRule",
        "x-ms-examples": {
          "NameSpaceIpFilterRuleGet": {
            "$ref": "./examples/NameSpaces/IPFilterRule/EHNameSpaceIpFilterRuleGet.json"
          }
        },
        "description": "Gets an IpFilterRule for a Namespace by rule name.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/ipFilterRuleNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace IpFilterRule returned successfully.",
            "schema": {
              "$ref": "#/definitions/IpFilterRule"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/virtualnetworkrules": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListVirtualNetworkRules",
        "x-ms-examples": {
          "ListIpFilterRules": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/EHNameSpaceVirtualNetworkRuleListAll.json"
          }
        },
        "description": "Gets a list of VirtualNetwork rules for a Namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace VirtualNetworkRule successfully returned.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRuleListResult"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/virtualnetworkrules/{virtualNetworkRuleName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdateVirtualNetworkRule",
        "x-ms-examples": {
          "NameSpaceVirtualNetworkRuleCreate": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/EHNameSpaceVirtualNetworkRuleCreateorUpdate.json"
          }
        },
        "description": "Creates or updates an VirtualNetworkRule for a Namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/virtualNetworkRuleNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRule"
            },
            "description": "The Namespace VirtualNetworkRule."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace VirtualNetworkRule created",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRule"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_DeleteVirtualNetworkRule",
        "x-ms-examples": {
          "NameSpaceVirtualNetworkRuleDelete": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/EHNameSpaceVirtualNetworkRuleDelete.json"
          }
        },
        "description": "Deletes an VirtualNetworkRule for a Namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/virtualNetworkRuleNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "200": {
            "description": "Namespace VirtualNetworkRule successfully deleted."
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_GetVirtualNetworkRule",
        "x-ms-examples": {
          "NameSpaceVirtualNetworkRuleGet": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/EHNameSpaceVirtualNetworkRuleGet.json"
          }
        },
        "description": "Gets an VirtualNetworkRule for a Namespace by rule name.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/virtualNetworkRuleNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace VirtualNetworkRule returned successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRule"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkRuleSets/default": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetCreate": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/EHNetworkRuleSetCreate.json"
          }
        },
        "operationId": "Namespaces_CreateOrUpdateNetworkRuleSet",
        "description": "Create or update NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkRuleSet"
            },
            "description": "The Namespace IpFilterRule."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace NetworkRuleSet successfully returned.",
            "schema": {
              "$ref": "#/definitions/NetworkRuleSet"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetGet": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/EHNetworkRuleSetGet.json"
          }
        },
        "operationId": "Namespaces_GetNetworkRuleSet",
        "description": "Gets NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace NetworkRuleSet successfully returned.",
            "schema": {
              "$ref": "#/definitions/NetworkRuleSet"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "OperationListResult": {
      "description": "Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of Event Hub operations supported by the Microsoft.EventHub resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Operation": {
      "description": "A Event Hub REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}"
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "readOnly": true,
              "type": "string",
              "description": "Service provider: Microsoft.EventHub"
            },
            "resource": {
              "readOnly": true,
              "type": "string",
              "description": "Resource on which the operation is performed: Invoice, etc."
            },
            "operation": {
              "readOnly": true,
              "type": "string",
              "description": "Operation type: Read, write, delete, etc."
            }
          }
        }
      }
    },
    "Cluster": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/ClusterSku",
          "description": "Properties of the cluster SKU."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "created": {
              "readOnly": true,
              "type": "string",
              "description": "The UTC time when the Event Hubs Cluster was created."
            },
            "updated": {
              "readOnly": true,
              "type": "string",
              "description": "The UTC time when the Event Hubs Cluster was last updated."
            },
            "metricId": {
              "readOnly": true,
              "type": "string",
              "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
            }
          },
          "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Single Event Hubs Cluster resource in List or Get operations."
    },
    "ClusterListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          },
          "description": "The Event Hubs Clusters present in the List Event Hubs operation results."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Empty unless the value parameter contains an incomplete list of Event Hubs Clusters."
        }
      },
      "description": "The response of the List Event Hubs Clusters operation."
    },
    "ClusterQuotaConfigurationProperties": {
      "properties": {
        "settings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
        }
      },
      "description": "Contains all settings for the cluster."
    },
    "ErrorResponse": {
      "description": "Error response that indicates the service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    },
    "TrackedResource": {
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Definition of an Azure resource."
    },
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        }
      },
      "description": "The Resource definition",
      "x-ms-azure-resource": true
    },
    "ClusterSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this SKU.",
          "enum": [
            "Dedicated"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "capacity": {
          "format": "int32",
          "maximum": 32,
          "minimum": 1,
          "type": "integer",
          "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
        }
      },
      "required": [
        "name"
      ],
      "description": "SKU parameters particular to a cluster instance."
    },
    "EHNamespaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EHNamespace"
          },
          "description": "Result of the List Namespace operation"
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
        }
      },
      "description": "The response of the List Namespace operation"
    },
    "EHNamespace": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Properties of sku resource"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "Provisioning state of the Namespace."
            },
            "createdAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the Namespace was created."
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the Namespace was updated."
            },
            "serviceBusEndpoint": {
              "readOnly": true,
              "type": "string",
              "description": "Endpoint you can use to perform Service Bus operations."
            },
            "metricId": {
              "readOnly": true,
              "type": "string",
              "description": "Identifier for Azure Insights metrics."
            },
            "isAutoInflateEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
            },
            "maximumThroughputUnits": {
              "format": "int32",
              "type": "integer",
              "maximum": 20,
              "minimum": 0,
              "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
            },
            "kafkaEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
            },
            "zoneRedundant": {
              "type": "boolean",
              "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
            }
          },
          "description": "Namespace properties supplied for create namespace operation."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Single Namespace item in List or Get Operation"
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this SKU.",
          "enum": [
            "Basic",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "The billing tier of this particular SKU.",
          "enum": [
            "Basic",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "format": "int32",
          "maximum": 20,
          "minimum": 0,
          "type": "integer",
          "description": "The Event Hubs throughput units, value should be 0 to 20 throughput units."
        }
      },
      "required": [
        "name"
      ],
      "description": "SKU parameters supplied to the create namespace operation"
    },
    "IpFilterRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "ipMask": {
              "type": "string",
              "description": "IP Mask"
            },
            "action": {
              "type": "string",
              "description": "The IP Filter Action",
              "enum": [
                "Accept",
                "Reject"
              ],
              "x-ms-enum": {
                "name": "IPAction",
                "modelAsString": true
              }
            },
            "filterName": {
              "type": "string",
              "description": "IP Filter name"
            }
          },
          "description": "Properties supplied to create or update IpFilterRules"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Single item in a List or Get IpFilterRules operation"
    },
    "IpFilterRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpFilterRule"
          },
          "description": "Result of the List IpFilter Rules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains an incomplete list of IpFilter Rules"
        }
      },
      "description": "The response from the List namespace operation."
    },
    "VirtualNetworkRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "virtualNetworkSubnetId": {
              "type": "string",
              "description": "ARM ID of Virtual Network Subnet"
            }
          },
          "description": "Properties supplied to create or update VirtualNetworkRules"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Single item in a List or Get VirtualNetworkRules operation"
    },
    "VirtualNetworkRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          },
          "description": "Result of the List VirtualNetwork Rules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains an incomplete list of VirtualNetwork Rules"
        }
      },
      "description": "The response from the List namespace operation."
    },
    "Subnet": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of Virtual Network Subnet"
        }
      },
      "description": "Properties supplied for Subnet"
    },
    "NWRuleSetIpRules": {
      "x-ms-client-flatten": true,
      "properties": {
        "ipMask": {
          "type": "string",
          "description": "IP Mask"
        },
        "action": {
          "type": "string",
          "description": "The IP Filter Action",
          "enum": [
            "Allow"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleIPAction",
            "modelAsString": true
          }
        }
      },
      "description": "The response from the List namespace operation."
    },
    "NWRuleSetVirtualNetworkRules": {
      "x-ms-client-flatten": true,
      "properties": {
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "Subnet properties"
        },
        "ignoreMissingVnetServiceEndpoint": {
          "type": "boolean",
          "description": "Value that indicates whether to ignore missing Vnet Service Endpoint"
        }
      },
      "description": "The response from the List namespace operation."
    },
    "NetworkRuleSet": {
      "properties": {
        "properties": {
          "description": "NetworkRuleSet properties",
          "x-ms-client-flatten": true,
          "properties": {
            "defaultAction": {
              "type": "string",
              "description": "Default Action for Network Rule Set",
              "enum": [
                "Allow",
                "Deny"
              ],
              "x-ms-enum": {
                "name": "DefaultAction",
                "modelAsString": true
              }
            },
            "virtualNetworkRules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NWRuleSetVirtualNetworkRules"
              },
              "description": "List VirtualNetwork Rules"
            },
            "ipRules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NWRuleSetIpRules"
              },
              "description": "List of IpRules"
            }
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Description of topic resource."
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "Name of the resource group within the Azure subscription."
    },
    "clusterNameParameter": {
      "name": "clusterName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 6,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The name of the Event Hubs Cluster."
    },
    "namespaceNameParameter": {
      "name": "namespaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 6,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The Namespace name"
    },
    "authorizationRuleNameParameter": {
      "name": "authorizationRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "description": "The authorization rule name."
    },
    "ipFilterRuleNameParameter": {
      "name": "ipFilterRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "description": "The IP Filter Rule name."
    },
    "virtualNetworkRuleNameParameter": {
      "name": "virtualNetworkRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "description": "The Virtual Network Rule name."
    },
    "skuNameParameter": {
      "name": "sku",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The sku type."
    },
    "skipParameter": {
      "name": "$skip",
      "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
      "in": "query",
      "required": false,
      "type": "integer",
      "minimum": 0,
      "maximum": 1000,
      "x-ms-parameter-location": "method"
    },
    "topParameter": {
      "name": "$top",
      "description": "May be used to limit the number of results to the most recent N usageDetails.",
      "in": "query",
      "required": false,
      "type": "integer",
      "minimum": 1,
      "maximum": 1000,
      "x-ms-parameter-location": "method"
    }
  }
}