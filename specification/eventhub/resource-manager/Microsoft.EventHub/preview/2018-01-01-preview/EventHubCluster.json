{
  "swagger": "2.0",
  "info": {
    "title": "EventHubClusterManagementClient",
    "description": "Azure Event Hubs Cluster client for managing Event Hubs Cluster resources.",
    "version": "2018-01-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.EventHub/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "EHOperations_List": { "$ref": "./examples/Operations_List.json" }
        },
        "description": "Lists all of the available Event Hub REST API operations.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters": {
      "get": {
        "tags": [
          "Event Hubs Clusters"
        ],
        "operationId": "Clusters_ListByResourceGroup",
        "x-ms-examples": {
          "ClustersListByResourceGroup": {
            "$ref": "./examples/Clusters/ClustersListByResourceGroup.json"
          }
        },
        "description": "Lists the available Event Hubs Clusters within an ARM resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Clusters returned successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "Event Hub Cluster error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}": {
      "get": {
        "tags": [
          "Event Hubs Cluster"
        ],
        "operationId": "Clusters_Get",
        "x-ms-examples": {
          "ClusterGet": {
            "$ref": "./examples/Clusters/ClusterGet.json"
          }
        },
        "description": "Gets the resource description of the specified Event Hubs Cluster.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hubs Cluster resource description returned successfully.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Event Hubs Cluster error response describing why the cluster description get operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Event Hubs Cluster"
        ],
        "operationId": "Clusters_Patch",
        "x-ms-examples": {
          "ClusterPatch": {
            "$ref": "./examples/Clusters/ClusterPatch.json"
          }
        },
        "description": "Modifies mutable properties on the Event Hubs Cluster. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "description": "The properties of the Event Hubs Cluster which should be updated."
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hubs Cluster successfully created.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "Event Hubs Cluster update request accepted.",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "202": {
            "description": "Event Hubs Cluster update request accepted."
          },
          "default": {
            "description": "Event Hubs error response detailing why the Event Hubs Cluster update operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}/quotaConfiguration/default": {
      "patch": {
        "tags": [
          "Event Hubs Cluster Configuration"
        ],
        "operationId": "Configuration_Patch",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties",
              "required": [
                "settings"
              ]
            },
            "description": "Parameters for creating an Event Hubs Cluster resource."
          }
        ],
        "x-ms-examples": {
          "ClustersQuotasConfigurationPatch": {
            "$ref": "./examples/Clusters/ClusterQuotaConfigurationPatch.json"
          }
        },
        "description": "Replace all specified Event Hubs Cluster settings with those contained in the request body. Leaves the settings not specified in the request body unmodified.",
        "responses": {
          "200": {
            "description": "Event Hubs Cluster settings configuration returned.",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "201": {
            "description": "Event Hubs Cluster setting configuration request successfully accepted.",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "202": {
            "description": "Event Hubs Cluster update request accepted."
          },
          "default": {
            "description": "Event Hubs Cluster error response describing why the get cluster quotas and settings operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Event Hubs Cluster Configuration"
        ],
        "operationId": "Configuration_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "ClustersQuotasConfigurationGet": {
            "$ref": "./examples/Clusters/ClusterQuotaConfigurationGet.json"
          }
        },
        "description": "Get all Event Hubs Cluster settings - a collection of key/value pairs which represent the quotas and settings imposed on the cluster.",
        "responses": {
          "200": {
            "description": "Event Hubs Cluster settings configuration returned.",
            "schema": {
              "$ref": "#/definitions/ClusterQuotaConfigurationProperties"
            }
          },
          "default": {
            "description": "Event Hubs Cluster error response describing why the get cluster quotas and settings operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Cluster": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/ClusterSku",
          "description": "Properties of the cluster SKU."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "created": {
              "readOnly": true,
              "type": "string",
              "description": "The UTC time when the Event Hubs Cluster was created."
            },
            "updated": {
              "readOnly": true,
              "type": "string",
              "description": "The UTC time when the Event Hubs Cluster was last updated."
            },
            "metricId": {
              "readOnly": true,
              "type": "string",
              "description": "The metric ID of the cluster resource. Provided by the service and not modifiable by the user."
            }
          },
          "description": "Event Hubs Cluster properties supplied in responses in List or Get operations."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Single Event Hubs Cluster resource in List or Get operations."
    },
    "ClusterListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          },
          "description": "The Event Hubs Clusters present in the List Event Hubs operation results."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Empty unless the value parameter contains an incomplete list of Event Hubs Clusters."
        }
      },
      "description": "The response of the List Event Hubs Clusters operation."
    },
    "ClusterQuotaConfigurationProperties": {
      "properties": {
        "settings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
        }
      },
      "description": "Contains all settings for the cluster."
    },
    "ErrorResponse": {
      "description": "Error response that indicates the service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      }
    },
    "OperationListResult": {
      "description": "Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of Event Hub operations supported by the Microsoft.EventHub resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Operation": {
      "description": "A Event Hub REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}"
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "readOnly": true,
              "type": "string",
              "description": "Service provider: Microsoft.EventHub"
            },
            "resource": {
              "readOnly": true,
              "type": "string",
              "description": "Resource on which the operation is performed: Invoice, etc."
            },
            "operation": {
              "readOnly": true,
              "type": "string",
              "description": "Operation type: Read, write, delete, etc."
            }
          }
        }
      }
    },
    "TrackedResource": {
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Definition of an Azure resource."
    },
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        }
      },
      "description": "The Resource definition",
      "x-ms-azure-resource": true
    },
    "ClusterSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this SKU.",
          "enum": [
            "Dedicated"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "capacity": {
          "format": "int32",
          "maximum": 32,
          "minimum": 1,
          "type": "integer",
          "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster."
        }
      },
      "required": [
        "name"
      ],
      "description": "SKU parameters particular to a cluster instance."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "Name of the resource group within the Azure subscription."
    },
    "ClusterNameParameter": {
      "name": "clusterName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 6,
      "maxLength": 50,
      "x-ms-parameter-location": "method",
      "description": "The name of the Event Hubs Cluster."
    }
  }
}