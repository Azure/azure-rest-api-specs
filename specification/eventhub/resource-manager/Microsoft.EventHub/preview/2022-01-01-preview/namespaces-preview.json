{
  "swagger": "2.0",
  "info": {
    "title": "EventHubManagementClient",
    "description": "Azure Event Hubs client for managing namespaces.",
    "version": "2022-01-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_List",
        "x-ms-examples": {
          "NamespacesListBySubscription": {
            "$ref": "./examples/NameSpaces/EHNameSpaceList.json"
          }
        },
        "description": "Lists all the available Namespaces within a subscription, irrespective of the resource groups.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully.",
            "schema": {
              "$ref": "#/definitions/EHNamespaceListResult"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListByResourceGroup",
        "x-ms-examples": {
          "NamespaceListByResourceGroup": {
            "$ref": "./examples/NameSpaces/EHNameSpaceListByResourceGroup.json"
          }
        },
        "description": "Lists the available Namespaces within a resource group.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces returned successfully.",
            "schema": {
              "$ref": "#/definitions/EHNamespaceListResult"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdate",
        "x-ms-examples": {
          "NamespaceCreate": {
            "$ref": "./examples/NameSpaces/EHNameSpaceCreate.json"
          }
        },
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EHNamespace",
              "required": [
                "location"
              ]
            },
            "description": "Parameters for creating a namespace resource."
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace successfully created.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "201": {
            "description": "Namespace create request accepted.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "202": {
            "description": "Namespace create or update request accepted."
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Delete",
        "x-ms-examples": {
          "NameSpaceDelete": {
            "$ref": "./examples/NameSpaces/EHNameSpaceDelete.json"
          }
        },
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace successfully deleted."
          },
          "202": {
            "description": "Namespace delete request accepted."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Get",
        "x-ms-examples": {
          "NameSpaceGet": {
            "$ref": "./examples/NameSpaces/EHNameSpaceGet.json"
          }
        },
        "description": "Gets the description of the specified namespace.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace returned successfully.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Update",
        "x-ms-examples": {
          "NamespacesUpdate": {
            "$ref": "./examples/NameSpaces/EHNameSpaceUpdate.json"
          }
        },
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            },
            "description": "Parameters for updating a namespace resource."
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace successfully updated.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "201": {
            "description": "Namespace update request accepted.",
            "schema": {
              "$ref": "#/definitions/EHNamespace"
            }
          },
          "202": {
            "description": "Namespace create or update request accepted."
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "x-ms-examples": {
          "NameSpaceCreate": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionList.json"
          }
        },
        "description": "Gets the available PrivateEndpointConnections within a namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "PrivateEndpointConnections successfully returned.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "EventHubEventHub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "put": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionCreate": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionCreate.json"
          }
        },
        "description": "Creates or updates PrivateEndpointConnections of service namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/PrivateEndpointConnectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "description": "Parameters supplied to update Status of PrivateEndPoint Connection to namespace resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Status of PrivateEndPoint Connection Created successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Request to update Status of PrivateEndPoint Connection accepted.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "Request to update Status of PrivateEndPoint Connection accepted.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionDelete": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionDelete.json"
          }
        },
        "description": "Deletes a Private Endpoint Connection.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/PrivateEndpointConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Private Endpoint Connection successfully deleted."
          },
          "202": {
            "description": "Private Endpoint Connection  delete request accepted."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionGet": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionGet.json"
          }
        },
        "description": "Gets a description for the specified Private Endpoint Connection name.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/PrivateEndpointConnectionNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Private Endpoint Connection  successfully returned.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "Namespaces PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_Get",
        "x-ms-examples": {
          "NameSpacePrivateLinkResourcesGet": {
            "$ref": "./examples/NameSpaces/PrivateLinkResourcesGet.json"
          }
        },
        "description": "Gets lists of resources that supports Privatelinks.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Private Link resource List",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourcesListResult"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations": {
      "get": {
        "tags": [
          "Namespaces NetworkSecurityPerimeterConfigurations"
        ],
        "operationId": "NetworkSecurityPerimeterConfiguration_List",
        "x-ms-examples": {
          "NamspaceNetworkSecurityPerimeterConfigurationList": {
            "$ref": "./examples/NameSpaces/NetworkSecurityPerimeterConfigurationList.json"
          }
        },
        "description": "Gets list of current NetworkSecurityPerimeterConfiguration for Namespace",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Network Security Perimeter Configuration List",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationList"
            }
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/networkSecurityPerimeterConfigurations/{resourceAssociationName}/reconcile": {
      "post": {
        "tags": [
          "Namespaces NetworkSecurityPerimeterConfigurations"
        ],
        "operationId": "NetworkSecurityPerimeterConfigurations_CreateOrUpdate",
        "description": "Refreshes any information about the association.",
        "x-ms-examples": {
          "NetworkSecurityPerimeterConfigurationList": {
            "$ref": "./examples/NameSpaces/NetworkSecurityPerimeterConfigurationReconcile.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceAssociationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Association reconciled"
          },
          "202": {
            "description": "Request to reconcile the association accepted."
          },
          "default": {
            "description": "Eventhub error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v2/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "EHNamespaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EHNamespace"
          },
          "description": "Result of the List Namespace operation"
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
        }
      },
      "description": "The response of the List Namespace operation"
    },
    "EHNamespace": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Properties of sku resource"
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Properties of BYOK Identity description"
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "minimumTlsVersion": {
              "type": "string",
              "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "x-ms-enum": {
                "name": "TlsVersion",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "Provisioning state of the Namespace."
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "description": "Status of the Namespace."
            },
            "createdAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the Namespace was created."
            },
            "updatedAt": {
              "readOnly": true,
              "format": "date-time",
              "type": "string",
              "description": "The time the Namespace was updated."
            },
            "serviceBusEndpoint": {
              "readOnly": true,
              "type": "string",
              "description": "Endpoint you can use to perform Service Bus operations."
            },
            "clusterArmId": {
              "type": "string",
              "description": "Cluster ARM ID of the Namespace."
            },
            "metricId": {
              "readOnly": true,
              "type": "string",
              "description": "Identifier for Azure Insights metrics."
            },
            "isAutoInflateEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace."
            },
            "publicNetworkAccess": {
              "description": "This determines if traffic is allowed over public network. By default it is enabled.",
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "default": "Enabled"
            },
            "maximumThroughputUnits": {
              "format": "int32",
              "type": "integer",
              "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)"
            },
            "kafkaEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether Kafka is enabled for eventhub namespace."
            },
            "zoneRedundant": {
              "type": "boolean",
              "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
            },
            "encryption": {
              "$ref": "#/definitions/Encryption",
              "description": "Properties of BYOK Encryption description"
            },
            "privateEndpointConnections": {
              "description": "List of private endpoint connections.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivateEndpointConnection"
              }
            },
            "disableLocalAuth": {
              "type": "boolean",
              "description": "This property disables SAS authentication for the Event Hubs namespace."
            },
            "alternateName": {
              "type": "string",
              "description": "Alternate name specified when alias and namespace names are same."
            }
          },
          "description": "Namespace properties supplied for create namespace operation."
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v1/definitions.json#/definitions/TrackedResource"
        }
      ],
      "description": "Single Namespace item in List or Get Operation"
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this SKU.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "The billing tier of this particular SKU.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "format": "int32",
          "minimum": 0,
          "type": "integer",
          "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units."
        }
      },
      "required": [
        "name"
      ],
      "description": "SKU parameters supplied to the create namespace operation"
    },
    "Identity": {
      "x-ms-client-flatten": true,
      "properties": {
        "principalId": {
          "type": "string",
          "description": "ObjectId from the KeyVault",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "TenantId from the KeyVault",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of managed service identity.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentity"
          },
          "description": "Properties for User Assigned Identities"
        }
      },
      "description": "Properties to configure Identity for Bring your Own Keys"
    },
    "UserAssignedIdentity": {
      "description": "Recognized Dictionary value.",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "Principal Id of user assigned identity",
          "type": "string",
          "x-ms-client-name": "PrincipalId",
          "readOnly": true
        },
        "clientId": {
          "description": "Client Id of user assigned identity",
          "type": "string",
          "x-ms-client-name": "ClientId",
          "readOnly": true
        }
      }
    },
    "Encryption": {
      "x-ms-client-flatten": true,
      "properties": {
        "keyVaultProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyVaultProperties"
          },
          "x-ms-client-name": "KeyVaultProperties",
          "description": "Properties of KeyVault"
        },
        "keySource": {
          "type": "string",
          "description": "Enumerates the possible value of keySource for Encryption",
          "default": "Microsoft.KeyVault",
          "enum": [
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "keySource",
            "modelAsString": false
          }
        },
        "requireInfrastructureEncryption": {
          "type": "boolean",
          "description": "Enable Infrastructure Encryption (Double Encryption)"
        }
      },
      "description": "Properties to configure Encryption"
    },
    "KeyVaultProperties": {
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the Key from KeyVault",
          "x-ms-client-name": "KeyName"
        },
        "keyVaultUri": {
          "type": "string",
          "description": "Uri of KeyVault",
          "x-ms-client-name": "KeyVaultUri"
        },
        "keyVersion": {
          "type": "string",
          "description": "Key Version",
          "x-ms-client-name": "KeyVersion"
        },
        "identity": {
          "$ref": "#/definitions/userAssignedIdentityProperties"
        }
      },
      "description": "Properties to configure keyVault Properties"
    },
    "PrivateEndpointConnection": {
      "description": "Properties of the PrivateEndpointConnection.",
      "allOf": [
        {
          "$ref": "../../../common/v2/definitions.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Properties of the PrivateEndpointConnection.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "$ref": "../../../common/v1/definitions.json#/definitions/systemData"
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The Private Endpoint resource for this Connection."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/ConnectionState",
          "description": "Details about the state of the connection."
        },
        "provisioningState": {
          "description": "Provisioning state of the Private Endpoint Connection.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndPointProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateEndpoint": {
      "description": "PrivateEndpoint information.",
      "properties": {
        "id": {
          "description": "The ARM identifier for Private Endpoint.",
          "type": "string"
        }
      }
    },
    "ConnectionState": {
      "description": "ConnectionState information.",
      "properties": {
        "status": {
          "description": "Status of the connection.",
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PrivateLinkConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "description": "Description of the connection state.",
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "description": "Result of the list of all private endpoint connections operation.",
      "properties": {
        "value": {
          "description": "A collection of private endpoint connection resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "description": "A link for the next page of private endpoint connection resources.",
          "type": "string"
        }
      }
    },
    "PrivateLinkResource": {
      "description": "Information of the private link resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Properties of the private link resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource",
          "type": "string"
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Properties of PrivateLinkResource",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string"
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkResourcesListResult": {
      "description": "Result of the List private link resources operation.",
      "properties": {
        "value": {
          "description": "A collection of private link resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "description": "A link for the next page of private link resources.",
          "type": "string"
        }
      }
    },
    "userAssignedIdentityProperties": {
      "x-ms-client-flatten": true,
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "ARM ID of user Identity selected for encryption"
        }
      }
    },
    "NetworkSecurityPerimeterConfigurationList": {
      "description": "Result of the List NetworkSecurityPerimeterConfiguration operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of NetworkSecurityPerimeterConfigurations",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkSecurityPerimeterConfiguration"
          }
        }
      }
    },
    "NetworkSecurityPerimeterConfiguration": {
      "description": "Network Security Perimeter related configurations of a given namespace",
      "type": "object",
      "readOnly": true,
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationProperties",
          "description": "Properties of the Network Security Perimeter Configuration",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v1/definitions.json#/definitions/TrackedResource"
        }
      ]
    },
    "NetworkSecurityPerimeterConfigurationProperties": {
      "description": "Properties of NetworkSecurityPerimeterConfiguration",
      "type": "object",
      "readOnly": true,
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of NetworkSecurityPerimeter configuration propagation",
          "enum": [
            "Unknown",
            "Creating",
            "Updating",
            "Accepted",
            "InvalidResponse",
            "Succeeded",
            "SucceededWithIssues",
            "Failed",
            "Deleting",
            "Deleted",
            "Canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NetworkSecurityPerimeterConfigurationProvisioningState",
            "modelAsString": true
          }
        },
        "provisioningIssues": {
          "description": "List of Provisioning Issues if any",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisioningIssue"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "networkSecurityPerimeter": {
          "$ref": "#/definitions/NetworkSecurityPerimeter"
        },
        "resourceAssociation": {
          "description": "Information about resource association",
          "readOnly": true,
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the resource association",
              "type": "string"
            },
            "accessMode": {
              "description": "Access Mode of the resource association",
              "enum": [
                "NoAssociationMode",
                "EnforcedMode",
                "LearningMode",
                "AuditMode",
                "UnspecifiedMode"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ResourceAssociationAccessMode",
                "modelAsString": true
              }
            }
          }
        },
        "profile": {
          "description": "Information about current network profile",
          "readOnly": true,
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the resource",
              "type": "string"
            },
            "accessRulesVersion": {
              "description": "Current access rules version",
              "type": "string"
            },
            "accessRules": {
              "description": "List of Access Rules",
              "type": "array",
              "items": {
                "$ref": "#/definitions/NspAccessRule"
              }
            }
          }
        }
      }
    },
    "ProvisioningIssue": {
      "description": "Describes Provisioning issue for given NetworkSecurityPerimeterConfiguration",
      "type": "object",
      "readOnly": true,
      "properties": {
        "name": {
          "description": "Name of the issue",
          "type": "string"
        },
        "properties": {
          "description": "Properties of Provisioning Issue",
          "type": "object",
          "readOnly": true,
          "properties": {
            "issueType": {
              "description": "Type of Issue",
              "type": "string"
            },
            "description": {
              "description": "Description of the issue",
              "type": "string"
            }
          }
        }
      }
    },
    "NspAccessRule": {
      "description": "Information of Access Rule in Network Profile",
      "type": "object",
      "readOnly": true,
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource",
          "type": "string"
        },
        "properties": {
          "description": "Properties of Access Rule",
          "readOnly": true,
          "type": "object",
          "properties": {
            "direction": {
              "description": "Direction of Access Rule",
              "enum": [
                "Inbound",
                "Outbound"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "NspAccessRuleDirection",
                "modelAsString": true
              }
            },
            "addressPrefixes": {
              "description": "Address prefixes in the CIDR format for inbound rules",
              "type": "array",
              "items": {
                "description": "IP Address",
                "type": "string"
              }
            },
            "subscriptions": {
              "description": "Subscriptions for inbound rules",
              "type": "array",
              "items": {
                "description": "Subscription for inbound rule",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "id": {
                    "description": "Fully qualified identifier of subscription",
                    "type": "string"
                  }
                }
              }
            },
            "networkSecurityPerimeters": {
              "description": "NetworkSecurityPerimeters for inbound rules",
              "type": "array",
              "readOnly": true,
              "items": {
                "$ref": "#/definitions/NetworkSecurityPerimeter"
              }
            },
            "fullyQualifiedDomainNames": {
              "description": "FQDN for outbound rules",
              "type": "array",
              "readOnly": true,
              "items": {
                "description": "Fully qualified domain name",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "NetworkSecurityPerimeter": {
      "description": "NetworkSecurityPerimeter related information",
      "type": "object",
      "readOnly": true,
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource",
          "type": "string"
        },
        "perimeterGuid": {
          "description": "Guid of the resource",
          "type": "string"
        },
        "location": {
          "description": "Location of the resource",
          "type": "string"
        }
      }
    }
  },
  "parameters": {}
}
