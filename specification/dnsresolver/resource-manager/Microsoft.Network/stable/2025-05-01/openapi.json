{
  "swagger": "2.0",
  "info": {
    "title": "DnsResolverManagementClient",
    "version": "2025-05-01",
    "description": "The DNS Resolver Management Client.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "DnsResolvers"
    },
    {
      "name": "InboundEndpoints"
    },
    {
      "name": "OutboundEndpoints"
    },
    {
      "name": "DnsForwardingRulesets"
    },
    {
      "name": "ForwardingRules"
    },
    {
      "name": "VirtualNetworkLinks"
    },
    {
      "name": "DnsResolverPolicies"
    },
    {
      "name": "DnsSecurityRules"
    },
    {
      "name": "DnsResolverPolicyVirtualNetworkLinks"
    },
    {
      "name": "DnsResolverDomainLists"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnsForwardingRulesets": {
      "get": {
        "operationId": "DnsForwardingRulesets_List",
        "tags": [
          "DnsForwardingRulesets"
        ],
        "description": "Lists DNS forwarding rulesets in all resource groups of a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRulesetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List DNS forwarding rulesets by subscription": {
            "$ref": "./examples/DnsForwardingRuleset_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnsResolverDomainLists": {
      "get": {
        "operationId": "DnsResolverDomainLists_List",
        "tags": [
          "DnsResolverDomainLists"
        ],
        "description": "Lists DNS resolver domain lists in all resource groups of a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainListListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DNS resolver domain lists by subscription": {
            "$ref": "./examples/DnsResolverDomainList_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnsResolverPolicies": {
      "get": {
        "operationId": "DnsResolverPolicies_List",
        "tags": [
          "DnsResolverPolicies"
        ],
        "description": "Lists DNS resolver policies in all resource groups of a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DNS resolver policies by subscription": {
            "$ref": "./examples/DnsResolverPolicy_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnsResolvers": {
      "get": {
        "operationId": "DnsResolvers_List",
        "tags": [
          "DnsResolvers"
        ],
        "description": "Lists DNS resolvers in all resource groups of a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List DNS resolvers by subscription": {
            "$ref": "./examples/DnsResolver_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets": {
      "get": {
        "operationId": "DnsForwardingRulesets_ListByResourceGroup",
        "tags": [
          "DnsForwardingRulesets"
        ],
        "description": "Lists DNS forwarding rulesets within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRulesetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List DNS forwarding rulesets by resource group": {
            "$ref": "./examples/DnsForwardingRuleset_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}": {
      "get": {
        "operationId": "DnsForwardingRulesets_Get",
        "tags": [
          "DnsForwardingRulesets"
        ],
        "description": "Gets a DNS forwarding ruleset properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS forwarding ruleset": {
            "$ref": "./examples/DnsForwardingRuleset_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DnsForwardingRulesets_CreateOrUpdate",
        "tags": [
          "DnsForwardingRulesets"
        ],
        "description": "Creates or updates a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "if-none-match",
            "in": "header",
            "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DnsForwardingRuleset' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            }
          },
          "201": {
            "description": "Resource 'DnsForwardingRuleset' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Upsert DNS forwarding ruleset": {
            "$ref": "./examples/DnsForwardingRuleset_Put.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsForwardingRuleset"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DnsForwardingRulesets_Update",
        "tags": [
          "DnsForwardingRulesets"
        ],
        "description": "Updates a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsForwardingRulesetPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update DNS forwarding ruleset": {
            "$ref": "./examples/DnsForwardingRuleset_Patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsForwardingRuleset"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DnsForwardingRulesets_Delete",
        "tags": [
          "DnsForwardingRulesets"
        ],
        "description": "Deletes a DNS forwarding ruleset. WARNING: This operation cannot be undone. All forwarding rules within the ruleset will be deleted.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete DNS forwarding ruleset": {
            "$ref": "./examples/DnsForwardingRuleset_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/forwardingRules": {
      "get": {
        "operationId": "ForwardingRules_List",
        "tags": [
          "ForwardingRules"
        ],
        "description": "Lists forwarding rules in a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ForwardingRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List forwarding rules in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/forwardingRules/{forwardingRuleName}": {
      "get": {
        "operationId": "ForwardingRules_Get",
        "tags": [
          "ForwardingRules"
        ],
        "description": "Gets properties of a forwarding rule in a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "forwardingRuleName",
            "in": "path",
            "description": "The name of the forwarding rule.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve forwarding rule in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ForwardingRules_CreateOrUpdate",
        "tags": [
          "ForwardingRules"
        ],
        "description": "Creates or updates a forwarding rule in a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "forwardingRuleName",
            "in": "path",
            "description": "The name of the forwarding rule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "if-none-match",
            "in": "header",
            "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ForwardingRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          },
          "201": {
            "description": "Resource 'ForwardingRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Upsert forwarding rule in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_Put.json"
          }
        }
      },
      "patch": {
        "operationId": "ForwardingRules_Update",
        "tags": [
          "ForwardingRules"
        ],
        "description": "Updates a forwarding rule in a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "forwardingRuleName",
            "in": "path",
            "description": "The name of the forwarding rule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForwardingRulePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update forwarding rule in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_Patch.json"
          }
        }
      },
      "delete": {
        "operationId": "ForwardingRules_Delete",
        "tags": [
          "ForwardingRules"
        ],
        "description": "Deletes a forwarding rule in a DNS forwarding ruleset. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "forwardingRuleName",
            "in": "path",
            "description": "The name of the forwarding rule.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete forwarding rule in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/virtualNetworkLinks": {
      "get": {
        "operationId": "VirtualNetworkLinks_List",
        "tags": [
          "VirtualNetworkLinks"
        ],
        "description": "Lists virtual network links to a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLinkListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List virtual network links to a DNS forwarding ruleset": {
            "$ref": "./examples/VirtualNetworkLink_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/virtualNetworkLinks/{virtualNetworkLinkName}": {
      "get": {
        "operationId": "VirtualNetworkLinks_Get",
        "tags": [
          "VirtualNetworkLinks"
        ],
        "description": "Gets properties of a virtual network link to a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetworkLinkName",
            "in": "path",
            "description": "The name of the virtual network link.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve virtual network link to a DNS forwarding ruleset": {
            "$ref": "./examples/VirtualNetworkLink_Get.json"
          }
        }
      },
      "put": {
        "operationId": "VirtualNetworkLinks_CreateOrUpdate",
        "tags": [
          "VirtualNetworkLinks"
        ],
        "description": "Creates or updates a virtual network link to a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetworkLinkName",
            "in": "path",
            "description": "The name of the virtual network link.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "if-none-match",
            "in": "header",
            "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VirtualNetworkLink' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          },
          "201": {
            "description": "Resource 'VirtualNetworkLink' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Upsert virtual network link to a DNS forwarding ruleset": {
            "$ref": "./examples/VirtualNetworkLink_Put.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/VirtualNetworkLink"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "VirtualNetworkLinks_Update",
        "tags": [
          "VirtualNetworkLinks"
        ],
        "description": "Updates a virtual network link to a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetworkLinkName",
            "in": "path",
            "description": "The name of the virtual network link.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLinkPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkLink"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update virtual network link to a DNS forwarding ruleset": {
            "$ref": "./examples/VirtualNetworkLink_Patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/VirtualNetworkLink"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VirtualNetworkLinks_Delete",
        "tags": [
          "VirtualNetworkLinks"
        ],
        "description": "Deletes a virtual network link to a DNS forwarding ruleset. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsForwardingRulesetName",
            "in": "path",
            "description": "The name of the DNS forwarding ruleset.",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetworkLinkName",
            "in": "path",
            "description": "The name of the virtual network link.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete virtual network link to a DNS forwarding ruleset": {
            "$ref": "./examples/VirtualNetworkLink_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverDomainLists": {
      "get": {
        "operationId": "DnsResolverDomainLists_ListByResourceGroup",
        "tags": [
          "DnsResolverDomainLists"
        ],
        "description": "Lists DNS resolver domain lists within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainListListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DNS resolver domain lists by resource group": {
            "$ref": "./examples/DnsResolverDomainList_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverDomainLists/{dnsResolverDomainListName}": {
      "get": {
        "operationId": "DnsResolverDomainLists_Get",
        "tags": [
          "DnsResolverDomainLists"
        ],
        "description": "Gets properties of a DNS resolver domain list.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverDomainListName",
            "in": "path",
            "description": "The name of the DNS resolver domain list.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS resolver domain list with bulk number of domains": {
            "$ref": "./examples/DnsResolverDomainList_BulkDomains_Get.json"
          },
          "Retrieve DNS resolver domain list with less than 1000 domains": {
            "$ref": "./examples/DnsResolverDomainList_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DnsResolverDomainLists_CreateOrUpdate",
        "tags": [
          "DnsResolverDomainLists"
        ],
        "description": "Creates or updates a DNS resolver domain list.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverDomainListName",
            "in": "path",
            "description": "The name of the DNS resolver domain list.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "if-none-match",
            "in": "header",
            "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DnsResolverDomainList' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainList"
            }
          },
          "201": {
            "description": "Resource 'DnsResolverDomainList' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainList"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Upsert DNS resolver domain list with bulk number of domains": {
            "$ref": "./examples/DnsResolverDomainList_BulkDomains_Put.json"
          },
          "Upsert DNS resolver domain list with less than 1000 domains": {
            "$ref": "./examples/DnsResolverDomainList_Put.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsResolverDomainList"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DnsResolverDomainLists_Update",
        "tags": [
          "DnsResolverDomainLists"
        ],
        "description": "Updates a DNS resolver domain list.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverDomainListName",
            "in": "path",
            "description": "The name of the DNS resolver domain list.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainListPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainList"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update DNS resolver domain list": {
            "$ref": "./examples/DnsResolverDomainList_Patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsResolverDomainList"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DnsResolverDomainLists_Delete",
        "tags": [
          "DnsResolverDomainLists"
        ],
        "description": "Deletes a DNS resolver domain list. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverDomainListName",
            "in": "path",
            "description": "The name of the DNS resolver domain list.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete DNS resolver domain list": {
            "$ref": "./examples/DnsResolverDomainList_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverDomainLists/{dnsResolverDomainListName}/bulk": {
      "post": {
        "operationId": "DnsResolverDomainLists_Bulk",
        "tags": [
          "DnsResolverDomainLists"
        ],
        "description": "Uploads or downloads the list of domains for a DNS Resolver Domain List from a storage link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverDomainListName",
            "in": "path",
            "description": "The name of the DNS resolver domain list.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "if-none-match",
            "in": "header",
            "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the bulk domain list operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainListBulk"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverDomainList"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Download DNS resolver domain list domains": {
            "$ref": "./examples/DnsResolverDomainList_BulkDownload.json"
          },
          "Upload DNS resolver domain list domains": {
            "$ref": "./examples/DnsResolverDomainList_BulkUpload.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsResolverDomainList"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverPolicies": {
      "get": {
        "operationId": "DnsResolverPolicies_ListByResourceGroup",
        "tags": [
          "DnsResolverPolicies"
        ],
        "description": "Lists DNS resolver policies within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DNS resolver policies by resource group": {
            "$ref": "./examples/DnsResolverPolicy_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverPolicies/{dnsResolverPolicyName}": {
      "get": {
        "operationId": "DnsResolverPolicies_Get",
        "tags": [
          "DnsResolverPolicies"
        ],
        "description": "Gets properties of a DNS resolver policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS resolver policy": {
            "$ref": "./examples/DnsResolverPolicy_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DnsResolverPolicies_CreateOrUpdate",
        "tags": [
          "DnsResolverPolicies"
        ],
        "description": "Creates or updates a DNS resolver policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "if-none-match",
            "in": "header",
            "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DnsResolverPolicy' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicy"
            }
          },
          "201": {
            "description": "Resource 'DnsResolverPolicy' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicy"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Upsert DNS resolver policy": {
            "$ref": "./examples/DnsResolverPolicy_Put.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsResolverPolicy"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DnsResolverPolicies_Update",
        "tags": [
          "DnsResolverPolicies"
        ],
        "description": "Updates a DNS resolver policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicy"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update DNS resolver policy": {
            "$ref": "./examples/DnsResolverPolicy_Patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsResolverPolicy"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DnsResolverPolicies_Delete",
        "tags": [
          "DnsResolverPolicies"
        ],
        "description": "Deletes a DNS resolver policy. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete DNS resolver policy": {
            "$ref": "./examples/DnsResolverPolicy_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverPolicies/{dnsResolverPolicyName}/dnsSecurityRules": {
      "get": {
        "operationId": "DnsSecurityRules_List",
        "tags": [
          "DnsSecurityRules"
        ],
        "description": "Lists DNS security rules for a DNS resolver policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsSecurityRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DNS security rules by DNS resolver policy": {
            "$ref": "./examples/DnsSecurityRule_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverPolicies/{dnsResolverPolicyName}/dnsSecurityRules/{dnsSecurityRuleName}": {
      "get": {
        "operationId": "DnsSecurityRules_Get",
        "tags": [
          "DnsSecurityRules"
        ],
        "description": "Gets properties of a DNS security rule for a DNS resolver policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "dnsSecurityRuleName",
            "in": "path",
            "description": "The name of the DNS security rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsSecurityRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS security rule for DNS resolver policy": {
            "$ref": "./examples/DnsSecurityRule_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DnsSecurityRules_CreateOrUpdate",
        "tags": [
          "DnsSecurityRules"
        ],
        "description": "Creates or updates a DNS security rule for a DNS resolver policy.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "dnsSecurityRuleName",
            "in": "path",
            "description": "The name of the DNS security rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "if-none-match",
            "in": "header",
            "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsSecurityRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DnsSecurityRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnsSecurityRule"
            }
          },
          "201": {
            "description": "Resource 'DnsSecurityRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnsSecurityRule"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Upsert DNS security rule": {
            "$ref": "./examples/DnsSecurityRule_Put.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsSecurityRule"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DnsSecurityRules_Update",
        "tags": [
          "DnsSecurityRules"
        ],
        "description": "Updates a DNS security rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "dnsSecurityRuleName",
            "in": "path",
            "description": "The name of the DNS security rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsSecurityRulePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsSecurityRule"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update DNS security rule for DNS resolver policy": {
            "$ref": "./examples/DnsSecurityRule_Patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsSecurityRule"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DnsSecurityRules_Delete",
        "tags": [
          "DnsSecurityRules"
        ],
        "description": "Deletes a DNS security rule for a DNS resolver policy. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "dnsSecurityRuleName",
            "in": "path",
            "description": "The name of the DNS security rule.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete DNS security rule for DNS resolver policy": {
            "$ref": "./examples/DnsSecurityRule_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverPolicies/{dnsResolverPolicyName}/virtualNetworkLinks": {
      "get": {
        "operationId": "DnsResolverPolicyVirtualNetworkLinks_List",
        "tags": [
          "DnsResolverPolicyVirtualNetworkLinks"
        ],
        "description": "Lists DNS resolver policy virtual network links.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLinkListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DNS resolver policy virtual network links by DNS resolver policy": {
            "$ref": "./examples/DnsResolverPolicyVirtualNetworkLink_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolverPolicies/{dnsResolverPolicyName}/virtualNetworkLinks/{dnsResolverPolicyVirtualNetworkLinkName}": {
      "get": {
        "operationId": "DnsResolverPolicyVirtualNetworkLinks_Get",
        "tags": [
          "DnsResolverPolicyVirtualNetworkLinks"
        ],
        "description": "Gets properties of a DNS resolver policy virtual network link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "dnsResolverPolicyVirtualNetworkLinkName",
            "in": "path",
            "description": "The name of the DNS resolver policy virtual network link for the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS resolver policy virtual network link": {
            "$ref": "./examples/DnsResolverPolicyVirtualNetworkLink_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DnsResolverPolicyVirtualNetworkLinks_CreateOrUpdate",
        "tags": [
          "DnsResolverPolicyVirtualNetworkLinks"
        ],
        "description": "Creates or updates a DNS resolver policy virtual network link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "dnsResolverPolicyVirtualNetworkLinkName",
            "in": "path",
            "description": "The name of the DNS resolver policy virtual network link for the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "if-none-match",
            "in": "header",
            "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DnsResolverPolicyVirtualNetworkLink' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
            }
          },
          "201": {
            "description": "Resource 'DnsResolverPolicyVirtualNetworkLink' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Upsert DNS resolver policy virtual network link": {
            "$ref": "./examples/DnsResolverPolicyVirtualNetworkLink_Put.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DnsResolverPolicyVirtualNetworkLinks_Update",
        "tags": [
          "DnsResolverPolicyVirtualNetworkLinks"
        ],
        "description": "Updates a DNS resolver policy virtual network link.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "dnsResolverPolicyVirtualNetworkLinkName",
            "in": "path",
            "description": "The name of the DNS resolver policy virtual network link for the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLinkPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update DNS resolver policy virtual network link": {
            "$ref": "./examples/DnsResolverPolicyVirtualNetworkLink_Patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DnsResolverPolicyVirtualNetworkLinks_Delete",
        "tags": [
          "DnsResolverPolicyVirtualNetworkLinks"
        ],
        "description": "Deletes a DNS resolver policy virtual network link. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverPolicyName",
            "in": "path",
            "description": "The name of the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "dnsResolverPolicyVirtualNetworkLinkName",
            "in": "path",
            "description": "The name of the DNS resolver policy virtual network link for the DNS resolver policy.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9_\\-]*[a-zA-Z0-9])?$"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete DNS resolver policy virtual network link": {
            "$ref": "./examples/DnsResolverPolicyVirtualNetworkLink_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers": {
      "get": {
        "operationId": "DnsResolvers_ListByResourceGroup",
        "tags": [
          "DnsResolvers"
        ],
        "description": "Lists DNS resolvers within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolverListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List DNS resolvers by resource group": {
            "$ref": "./examples/DnsResolver_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}": {
      "get": {
        "operationId": "DnsResolvers_Get",
        "tags": [
          "DnsResolvers"
        ],
        "description": "Gets properties of a DNS resolver.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS resolver": {
            "$ref": "./examples/DnsResolver_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DnsResolvers_CreateOrUpdate",
        "tags": [
          "DnsResolvers"
        ],
        "description": "Creates or updates a DNS resolver.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "if-none-match",
            "in": "header",
            "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DnsResolver' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            }
          },
          "201": {
            "description": "Resource 'DnsResolver' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Upsert DNS resolver": {
            "$ref": "./examples/DnsResolver_Put.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsResolver"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DnsResolvers_Update",
        "tags": [
          "DnsResolvers"
        ],
        "description": "Updates a DNS resolver.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolverPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update DNS resolver": {
            "$ref": "./examples/DnsResolver_Patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DnsResolver"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DnsResolvers_Delete",
        "tags": [
          "DnsResolvers"
        ],
        "description": "Deletes a DNS resolver. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete DNS resolver": {
            "$ref": "./examples/DnsResolver_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}/inboundEndpoints": {
      "get": {
        "operationId": "InboundEndpoints_List",
        "tags": [
          "InboundEndpoints"
        ],
        "description": "Lists inbound endpoints for a DNS resolver.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InboundEndpointListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List inbound endpoints by DNS resolver": {
            "$ref": "./examples/InboundEndpoint_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}/inboundEndpoints/{inboundEndpointName}": {
      "get": {
        "operationId": "InboundEndpoints_Get",
        "tags": [
          "InboundEndpoints"
        ],
        "description": "Gets properties of an inbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "inboundEndpointName",
            "in": "path",
            "description": "The name of the inbound endpoint for the DNS resolver.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve inbound endpoint for DNS resolver": {
            "$ref": "./examples/InboundEndpoint_Get.json"
          }
        }
      },
      "put": {
        "operationId": "InboundEndpoints_CreateOrUpdate",
        "tags": [
          "InboundEndpoints"
        ],
        "description": "Creates or updates an inbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "inboundEndpointName",
            "in": "path",
            "description": "The name of the inbound endpoint for the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "if-none-match",
            "in": "header",
            "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'InboundEndpoint' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            }
          },
          "201": {
            "description": "Resource 'InboundEndpoint' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Upsert inbound endpoint for DNS resolver": {
            "$ref": "./examples/InboundEndpoint_Put.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/InboundEndpoint"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "InboundEndpoints_Update",
        "tags": [
          "InboundEndpoints"
        ],
        "description": "Updates an inbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "inboundEndpointName",
            "in": "path",
            "description": "The name of the inbound endpoint for the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InboundEndpointPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update inbound endpoint for DNS resolver": {
            "$ref": "./examples/InboundEndpoint_Patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/InboundEndpoint"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "InboundEndpoints_Delete",
        "tags": [
          "InboundEndpoints"
        ],
        "description": "Deletes an inbound endpoint for a DNS resolver. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "inboundEndpointName",
            "in": "path",
            "description": "The name of the inbound endpoint for the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete inbound endpoint for DNS resolver": {
            "$ref": "./examples/InboundEndpoint_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}/outboundEndpoints": {
      "get": {
        "operationId": "OutboundEndpoints_List",
        "tags": [
          "OutboundEndpoints"
        ],
        "description": "Lists outbound endpoints for a DNS resolver.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpointListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List outbound endpoints by DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}/outboundEndpoints/{outboundEndpointName}": {
      "get": {
        "operationId": "OutboundEndpoints_Get",
        "tags": [
          "OutboundEndpoints"
        ],
        "description": "Gets properties of an outbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "outboundEndpointName",
            "in": "path",
            "description": "The name of the outbound endpoint for the DNS resolver.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve outbound endpoint for DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_Get.json"
          }
        }
      },
      "put": {
        "operationId": "OutboundEndpoints_CreateOrUpdate",
        "tags": [
          "OutboundEndpoints"
        ],
        "description": "Creates or updates an outbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "outboundEndpointName",
            "in": "path",
            "description": "The name of the outbound endpoint for the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "if-none-match",
            "in": "header",
            "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifNoneMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'OutboundEndpoint' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            }
          },
          "201": {
            "description": "Resource 'OutboundEndpoint' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Upsert outbound endpoint for DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_Put.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OutboundEndpoint"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "OutboundEndpoints_Update",
        "tags": [
          "OutboundEndpoints"
        ],
        "description": "Updates an outbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "outboundEndpointName",
            "in": "path",
            "description": "The name of the outbound endpoint for the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Update operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutboundEndpointPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update outbound endpoint for DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_Patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OutboundEndpoint"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "OutboundEndpoints_Delete",
        "tags": [
          "OutboundEndpoints"
        ],
        "description": "Deletes an outbound endpoint for a DNS resolver. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dnsResolverName",
            "in": "path",
            "description": "The name of the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "outboundEndpointName",
            "in": "path",
            "description": "The name of the outbound endpoint for the DNS resolver.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "ifMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete outbound endpoint for DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listDnsForwardingRulesets": {
      "post": {
        "operationId": "DnsForwardingRulesets_ListByVirtualNetwork",
        "description": "Lists DNS forwarding ruleset resource IDs attached to a virtual network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "description": "The name of the VirtualNetwork",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkDnsForwardingRulesetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List DNS forwarding rulesets by virtual network": {
            "$ref": "./examples/DnsForwardingRuleset_ListByVirtualNetwork.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listDnsResolverPolicies": {
      "post": {
        "operationId": "DnsResolverPolicies_ListByVirtualNetwork",
        "description": "Lists DNS resolver policy resource IDs linked to a virtual network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "description": "The name of the VirtualNetwork",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DNS resolver policies by virtual network": {
            "$ref": "./examples/DnsResolverPolicy_ListByVirtualNetwork.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listDnsResolvers": {
      "post": {
        "operationId": "DnsResolvers_ListByVirtualNetwork",
        "description": "Lists DNS resolver resource IDs linked to a virtual network.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "description": "The name of the VirtualNetwork",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List DNS resolvers by virtual network": {
            "$ref": "./examples/DnsResolver_ListByVirtualNetwork.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Action": {
      "type": "string",
      "description": "The action type in requests for bulk upload or download of a DNS resolver domain list.",
      "enum": [
        "Upload",
        "Download"
      ],
      "x-ms-enum": {
        "name": "Action",
        "modelAsString": true,
        "values": [
          {
            "name": "Upload",
            "value": "Upload"
          },
          {
            "name": "Download",
            "value": "Download"
          }
        ]
      }
    },
    "ActionType": {
      "type": "string",
      "description": "The type of action to take.",
      "enum": [
        "Allow",
        "Alert",
        "Block"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Allow",
            "value": "Allow"
          },
          {
            "name": "Alert",
            "value": "Alert"
          },
          {
            "name": "Block",
            "value": "Block"
          }
        ]
      }
    },
    "CloudError": {
      "type": "object",
      "description": "An error message",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "The error message body"
        }
      }
    },
    "CloudErrorBody": {
      "type": "object",
      "description": "The body of an error message",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code"
        },
        "message": {
          "type": "string",
          "description": "A description of what caused the error"
        },
        "target": {
          "type": "string",
          "description": "The target resource of the error message"
        },
        "details": {
          "type": "array",
          "description": "Extra error information",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          }
        }
      }
    },
    "DnsForwardingRuleset": {
      "type": "object",
      "description": "Describes a DNS forwarding ruleset.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsForwardingRulesetProperties",
          "description": "Properties of the DNS forwarding ruleset.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DnsForwardingRulesetListResult": {
      "type": "object",
      "description": "The response of a DnsForwardingRuleset list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DnsForwardingRuleset items on this page",
          "items": {
            "$ref": "#/definitions/DnsForwardingRuleset"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DnsForwardingRulesetPatch": {
      "type": "object",
      "description": "Describes a DNS forwarding ruleset PATCH operation.",
      "properties": {
        "dnsResolverOutboundEndpoints": {
          "type": "array",
          "description": "The reference to the DNS resolver outbound endpoints that are used to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers.",
          "items": {
            "$ref": "#/definitions/SubResource"
          }
        },
        "tags": {
          "type": "object",
          "description": "Tags for DNS Resolver.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "DnsForwardingRulesetProperties": {
      "type": "object",
      "description": "Represents the properties of a DNS forwarding ruleset.",
      "properties": {
        "dnsResolverOutboundEndpoints": {
          "type": "array",
          "description": "The reference to the DNS resolver outbound endpoints that are used to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers.",
          "items": {
            "$ref": "#/definitions/SubResource"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the DNS forwarding ruleset. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resourceGuid for the DNS forwarding ruleset.",
          "readOnly": true
        }
      },
      "required": [
        "dnsResolverOutboundEndpoints"
      ]
    },
    "DnsResolver": {
      "type": "object",
      "description": "Describes a DNS resolver.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsResolverProperties",
          "description": "Properties of the DNS resolver.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DnsResolverDomainList": {
      "type": "object",
      "description": "Describes a DNS resolver domain list.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsResolverDomainListProperties",
          "description": "Properties of the DNS resolver domain list.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DnsResolverDomainListBulk": {
      "type": "object",
      "description": "Describes a DNS resolver domain list for bulk UPLOAD or DOWNLOAD operations.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsResolverDomainListBulkProperties",
          "description": "Properties of the DNS resolver domain list upload or download request.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "DnsResolverDomainListBulkProperties": {
      "type": "object",
      "description": "Describes DNS resolver domain list properties for bulk UPLOAD or DOWNLOAD operations.",
      "properties": {
        "storageUrl": {
          "type": "string",
          "description": "The storage account blob file URL to be used in the bulk upload or download request of DNS resolver domain list."
        },
        "action": {
          "$ref": "#/definitions/Action",
          "description": "The action to take in the request, Upload or Download."
        }
      },
      "required": [
        "storageUrl",
        "action"
      ]
    },
    "DnsResolverDomainListListResult": {
      "type": "object",
      "description": "The response of a DnsResolverDomainList list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DnsResolverDomainList items on this page",
          "items": {
            "$ref": "#/definitions/DnsResolverDomainList"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DnsResolverDomainListPatch": {
      "type": "object",
      "description": "Describes a DNS resolver domain list for PATCH operation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsResolverDomainListPatchProperties",
          "description": "Updatable properties of the DNS resolver domain list.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Tags for DNS resolver domain list.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "DnsResolverDomainListPatchProperties": {
      "type": "object",
      "description": "Represents the updatable properties of a DNS resolver domain list.",
      "properties": {
        "domains": {
          "type": "array",
          "description": "The domains in the domain list.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DnsResolverDomainListProperties": {
      "type": "object",
      "description": "Represents the properties of a DNS resolver domain list.",
      "properties": {
        "domains": {
          "type": "array",
          "description": "The domains in the domain list. Will be null if user is using large domain list.",
          "items": {
            "type": "string"
          }
        },
        "domainsUrl": {
          "type": "string",
          "description": "The URL for bulk upload or download for domain lists containing larger set of domains. This will be populated if domains is empty or null.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the DNS resolver domain list. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resourceGuid property of the DNS resolver domain list resource.",
          "readOnly": true
        }
      }
    },
    "DnsResolverListResult": {
      "type": "object",
      "description": "The response of a DnsResolver list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DnsResolver items on this page",
          "items": {
            "$ref": "#/definitions/DnsResolver"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DnsResolverPatch": {
      "type": "object",
      "description": "Describes a DNS resolver for PATCH operation.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Tags for DNS Resolver.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "DnsResolverPolicy": {
      "type": "object",
      "description": "Describes a DNS resolver policy.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsResolverPolicyProperties",
          "description": "Properties of the DNS resolver policy.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DnsResolverPolicyListResult": {
      "type": "object",
      "description": "The response of a DnsResolverPolicy list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DnsResolverPolicy items on this page",
          "items": {
            "$ref": "#/definitions/DnsResolverPolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DnsResolverPolicyPatch": {
      "type": "object",
      "description": "Describes a DNS resolver policy for PATCH operation.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Tags for DNS resolver policy.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "DnsResolverPolicyProperties": {
      "type": "object",
      "description": "Represents the properties of a DNS resolver policy.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the DNS resolver policy. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resourceGuid property of the DNS resolver policy resource.",
          "readOnly": true
        }
      }
    },
    "DnsResolverPolicyVirtualNetworkLink": {
      "type": "object",
      "description": "Describes a DNS resolver policy virtual network link.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLinkProperties",
          "description": "Properties of the DNS resolver policy virtual network link.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DnsResolverPolicyVirtualNetworkLinkListResult": {
      "type": "object",
      "description": "The response of a DnsResolverPolicyVirtualNetworkLink list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DnsResolverPolicyVirtualNetworkLink items on this page",
          "items": {
            "$ref": "#/definitions/DnsResolverPolicyVirtualNetworkLink"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DnsResolverPolicyVirtualNetworkLinkPatch": {
      "type": "object",
      "description": "Describes a DNS resolver policy virtual network link for PATCH operation.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Tags for the DNS resolver policy virtual network link.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "DnsResolverPolicyVirtualNetworkLinkProperties": {
      "type": "object",
      "description": "Represents the properties of a DNS resolver policy virtual network link.",
      "properties": {
        "virtualNetwork": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference to the virtual network. This cannot be changed after creation.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the DNS resolver policy virtual network link. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        }
      },
      "required": [
        "virtualNetwork"
      ]
    },
    "DnsResolverProperties": {
      "type": "object",
      "description": "Represents the properties of a DNS resolver.",
      "properties": {
        "virtualNetwork": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference to the virtual network. This cannot be changed after creation.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dnsResolverState": {
          "$ref": "#/definitions/DnsResolverState",
          "description": "The current status of the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resourceGuid property of the DNS resolver resource.",
          "readOnly": true
        }
      },
      "required": [
        "virtualNetwork"
      ]
    },
    "DnsResolverState": {
      "type": "string",
      "description": "The current status of the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.",
      "enum": [
        "Connected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "DnsResolverState",
        "modelAsString": true,
        "values": [
          {
            "name": "Connected",
            "value": "Connected"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected"
          }
        ]
      }
    },
    "DnsSecurityRule": {
      "type": "object",
      "description": "Describes a DNS security rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsSecurityRuleProperties",
          "description": "Properties of the DNS security rule.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DnsSecurityRuleAction": {
      "type": "object",
      "description": "The action to take on DNS requests that match the DNS security rule.",
      "properties": {
        "actionType": {
          "$ref": "#/definitions/ActionType",
          "description": "The type of action to take."
        }
      }
    },
    "DnsSecurityRuleListResult": {
      "type": "object",
      "description": "The response of a DnsSecurityRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DnsSecurityRule items on this page",
          "items": {
            "$ref": "#/definitions/DnsSecurityRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DnsSecurityRulePatch": {
      "type": "object",
      "description": "Describes a DNS security rule for PATCH operation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsSecurityRulePatchProperties",
          "description": "Updatable properties of the DNS security rule.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Tags for DNS security rule.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "DnsSecurityRulePatchProperties": {
      "type": "object",
      "description": "Represents the updatable properties of a DNS security rule.",
      "properties": {
        "action": {
          "$ref": "#/definitions/DnsSecurityRuleAction",
          "description": "The action to take on DNS requests that match the DNS security rule."
        },
        "dnsResolverDomainLists": {
          "type": "array",
          "description": "DNS resolver policy domains lists that the DNS security rule applies to.",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "x-ms-identifiers": []
        },
        "dnsSecurityRuleState": {
          "$ref": "#/definitions/DnsSecurityRuleState",
          "description": "The state of DNS security rule."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the DNS security rule.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "DnsSecurityRuleProperties": {
      "type": "object",
      "description": "Represents the properties of a DNS security rule.",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the DNS security rule.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "action": {
          "$ref": "#/definitions/DnsSecurityRuleAction",
          "description": "The action to take on DNS requests that match the DNS security rule."
        },
        "dnsResolverDomainLists": {
          "type": "array",
          "description": "DNS resolver policy domains lists that the DNS security rule applies to.",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "x-ms-identifiers": []
        },
        "dnsSecurityRuleState": {
          "$ref": "#/definitions/DnsSecurityRuleState",
          "description": "The state of DNS security rule."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the DNS security rule. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        }
      },
      "required": [
        "priority",
        "action",
        "dnsResolverDomainLists"
      ]
    },
    "DnsSecurityRuleState": {
      "type": "string",
      "description": "The state of DNS security rule.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "DnsSecurityRuleState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "ForwardingRule": {
      "type": "object",
      "description": "Describes a forwarding rule within a DNS forwarding ruleset.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ForwardingRuleProperties",
          "description": "Properties of the forwarding rule.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ForwardingRuleListResult": {
      "type": "object",
      "description": "The response of a ForwardingRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ForwardingRule items on this page",
          "items": {
            "$ref": "#/definitions/ForwardingRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ForwardingRulePatch": {
      "type": "object",
      "description": "Describes a forwarding rule for PATCH operation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ForwardingRulePatchProperties",
          "description": "Updatable properties of the forwarding rule.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ForwardingRulePatchProperties": {
      "type": "object",
      "description": "Represents the updatable properties of a forwarding rule within a DNS forwarding ruleset.",
      "properties": {
        "targetDnsServers": {
          "type": "array",
          "description": "DNS servers to forward the DNS query to.",
          "items": {
            "$ref": "#/definitions/TargetDnsServer"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "type": "object",
          "description": "Metadata attached to the forwarding rule.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "forwardingRuleState": {
          "type": "string",
          "description": "The state of forwarding rule.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ForwardingRuleState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        }
      }
    },
    "ForwardingRuleProperties": {
      "type": "object",
      "description": "Represents the properties of a forwarding rule within a DNS forwarding ruleset.",
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The domain name for the forwarding rule."
        },
        "targetDnsServers": {
          "type": "array",
          "description": "DNS servers to forward the DNS query to.",
          "items": {
            "$ref": "#/definitions/TargetDnsServer"
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "type": "object",
          "description": "Metadata attached to the forwarding rule.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "forwardingRuleState": {
          "$ref": "#/definitions/ForwardingRuleState",
          "description": "The state of forwarding rule."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the forwarding rule. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        }
      },
      "required": [
        "domainName",
        "targetDnsServers"
      ]
    },
    "ForwardingRuleState": {
      "type": "string",
      "description": "The state of forwarding rule.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ForwardingRuleState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "InboundEndpoint": {
      "type": "object",
      "description": "Describes an inbound endpoint for a DNS resolver.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InboundEndpointProperties",
          "description": "Properties of the inbound endpoint.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "InboundEndpointListResult": {
      "type": "object",
      "description": "The response of a InboundEndpoint list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InboundEndpoint items on this page",
          "items": {
            "$ref": "#/definitions/InboundEndpoint"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InboundEndpointPatch": {
      "type": "object",
      "description": "Describes an inbound endpoint for a DNS resolver for PATCH operation.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Tags for inbound endpoint.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "InboundEndpointProperties": {
      "type": "object",
      "description": "Represents the properties of an inbound endpoint for a DNS resolver.",
      "properties": {
        "ipConfigurations": {
          "type": "array",
          "description": "IP configurations for the inbound endpoint.",
          "items": {
            "$ref": "#/definitions/IpConfiguration"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the inbound endpoint. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resourceGuid property of the inbound endpoint resource.",
          "readOnly": true
        }
      },
      "required": [
        "ipConfigurations"
      ]
    },
    "IpConfiguration": {
      "type": "object",
      "description": "IP configuration.",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference to the subnet bound to the IP configuration."
        },
        "privateIpAddress": {
          "type": "string",
          "description": "Private IP address of the IP configuration."
        },
        "privateIpAllocationMethod": {
          "type": "string",
          "description": "Private IP address allocation method.",
          "default": "Dynamic",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IpAllocationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Static",
                "value": "Static"
              },
              {
                "name": "Dynamic",
                "value": "Dynamic"
              }
            ]
          }
        }
      },
      "required": [
        "subnet"
      ]
    },
    "OutboundEndpoint": {
      "type": "object",
      "description": "Describes an outbound endpoint for a DNS resolver.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OutboundEndpointProperties",
          "description": "Properties of the outbound endpoint.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "OutboundEndpointListResult": {
      "type": "object",
      "description": "The response of a OutboundEndpoint list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The OutboundEndpoint items on this page",
          "items": {
            "$ref": "#/definitions/OutboundEndpoint"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OutboundEndpointPatch": {
      "type": "object",
      "description": "Describes an outbound endpoint for a DNS resolver for PATCH operation.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Tags for outbound endpoint.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "OutboundEndpointProperties": {
      "type": "object",
      "description": "Represents the properties of an outbound endpoint for a DNS resolver.",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference to the subnet used for the outbound endpoint."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the outbound endpoint. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        },
        "resourceGuid": {
          "type": "string",
          "description": "The resourceGuid property of the outbound endpoint resource.",
          "readOnly": true
        }
      },
      "required": [
        "subnet"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The current provisioning state of the resource.",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          }
        ]
      }
    },
    "SubResource": {
      "type": "object",
      "description": "Reference to another ARM resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "required": [
        "id"
      ]
    },
    "SubResourceListResult": {
      "type": "object",
      "description": "The response to an enumeration operation on sub-resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SubResource items on this page",
          "items": {
            "$ref": "#/definitions/SubResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TargetDnsServer": {
      "type": "object",
      "description": "Describes a server to forward the DNS queries to.",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "DNS server IP address."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "DNS server port.",
          "default": 53
        }
      },
      "required": [
        "ipAddress"
      ]
    },
    "VirtualNetworkDnsForwardingRuleset": {
      "type": "object",
      "description": "Reference to DNS forwarding ruleset and associated virtual network link.",
      "properties": {
        "id": {
          "type": "string",
          "description": "DNS Forwarding Ruleset Resource ID."
        },
        "properties": {
          "$ref": "#/definitions/VirtualNetworkLinkSubResourceProperties",
          "description": "Properties of the virtual network link sub-resource reference.",
          "x-ms-client-flatten": true
        }
      }
    },
    "VirtualNetworkDnsForwardingRulesetListResult": {
      "type": "object",
      "description": "The response to an enumeration operation on Virtual Network DNS Forwarding Ruleset.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualNetworkDnsForwardingRuleset items on this page",
          "items": {
            "$ref": "#/definitions/VirtualNetworkDnsForwardingRuleset"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualNetworkLink": {
      "type": "object",
      "description": "Describes a virtual network link.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualNetworkLinkProperties",
          "description": "Properties of the virtual network link.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "\"If etag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.\")",
          "readOnly": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VirtualNetworkLinkListResult": {
      "type": "object",
      "description": "The response of a VirtualNetworkLink list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualNetworkLink items on this page",
          "items": {
            "$ref": "#/definitions/VirtualNetworkLink"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualNetworkLinkPatch": {
      "type": "object",
      "description": "Describes a virtual network link for PATCH operation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualNetworkLinkPatchProperties",
          "description": "Updatable properties of the virtual network link.",
          "x-ms-client-flatten": true
        }
      }
    },
    "VirtualNetworkLinkPatchProperties": {
      "type": "object",
      "description": "Represents the updatable properties of the virtual network link.",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Metadata attached to the virtual network link.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VirtualNetworkLinkProperties": {
      "type": "object",
      "description": "Represents the properties of a virtual network link.",
      "properties": {
        "virtualNetwork": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference to the virtual network. This cannot be changed after creation."
        },
        "metadata": {
          "type": "object",
          "description": "Metadata attached to the virtual network link.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current provisioning state of the virtual network link. This is a read-only property and any attempt to set this value will be ignored.",
          "readOnly": true
        }
      },
      "required": [
        "virtualNetwork"
      ]
    },
    "VirtualNetworkLinkSubResourceProperties": {
      "type": "object",
      "description": "The reference to the virtual network link that associates between the DNS forwarding ruleset and virtual network.",
      "properties": {
        "virtualNetworkLink": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference to the virtual network link."
        }
      }
    }
  },
  "parameters": {}
}
