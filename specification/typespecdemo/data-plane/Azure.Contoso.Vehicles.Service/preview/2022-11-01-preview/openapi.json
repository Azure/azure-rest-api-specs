{
  "swagger": "2.0",
  "info": {
    "title": "Azure.Contoso.Vehicles service",
    "version": "2022-11-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "OAuth2Auth": [
        "https://widget.contoso.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "api-key",
      "in": "header"
    },
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.contoso.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://widget.contoso.com/.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/workspaces/{workspaceName}/cars": {
      "get": {
        "operationId": "Cars_List",
        "description": "List all Cars.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the Vehicle Workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedCar"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/workspaces/{workspaceName}/cars/{carId}": {
      "get": {
        "operationId": "Cars_Get",
        "description": "Fetch a Car by its id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the Vehicle Workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "carId",
            "in": "path",
            "description": "The id of the vehicle.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Azure.Contoso.Vehicles.Model.Car"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Cars_CreateOrUpdate",
        "description": "Create or Update a Car.",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the Vehicle Workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "carId",
            "in": "path",
            "description": "The id of the vehicle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The resource instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Azure.Contoso.Vehicles.Model.CarCreateOrUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Azure.Contoso.Vehicles.Model.Car"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Azure.Contoso.Vehicles.Model.Car"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceName}/motorcycles": {
      "get": {
        "operationId": "Motorcycles_List",
        "description": "List all Motorcycle.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the Vehicle Workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedMotorcycle"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/workspaces/{workspaceName}/motorcycles/{motorcycleId}": {
      "get": {
        "operationId": "Motorcycles_Get",
        "description": "Fetch a Motorcycle by its id.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the Vehicle Workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "motorcycleId",
            "in": "path",
            "description": "The id of the motorcycle.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Azure.Contoso.Vehicles.Model.Motorcycle"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Motorcycles_CreateOrUpdate",
        "description": "Create or Update a Motorcycle.",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the Vehicle Workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "motorcycleId",
            "in": "path",
            "description": "The id of the motorcycle.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The resource instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Azure.Contoso.Vehicles.Model.MotorcycleCreateOrUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Azure.Contoso.Vehicles.Model.Motorcycle"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Azure.Contoso.Vehicles.Model.Motorcycle"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspaceName}/vehicles": {
      "get": {
        "operationId": "Vehicles_ListVehicles",
        "description": "List all Vehicles.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the Vehicle Workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedVehicle"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Azure.Contoso.Vehicles.Model.Car": {
      "type": "object",
      "description": "A car.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the vehicle.",
          "readOnly": true
        },
        "vehicleKind": {
          "type": "string",
          "description": "The kind of vehicle, which is a Car.",
          "enum": [
            "Car"
          ],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "numberOfDoors": {
          "type": "integer",
          "format": "int8",
          "description": "The number of doors in the vehicle.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "id",
        "vehicleKind",
        "numberOfDoors"
      ]
    },
    "Azure.Contoso.Vehicles.Model.CarCreateOrUpdate": {
      "type": "object",
      "description": "A car.",
      "properties": {
        "vehicleKind": {
          "type": "string",
          "description": "The kind of vehicle, which is a Car.",
          "enum": [
            "Car"
          ],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "numberOfDoors": {
          "type": "integer",
          "format": "int8",
          "description": "The number of doors in the vehicle.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "Azure.Contoso.Vehicles.Model.Motorcycle": {
      "type": "object",
      "description": "A motorcycle.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the motorcycle.",
          "readOnly": true
        },
        "vehicleKind": {
          "type": "string",
          "description": "The kind of vehicle, which is a Motorcycle.",
          "enum": [
            "Motorcycle"
          ],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "hasEngineBars": {
          "type": "boolean",
          "description": "If the motorcycle has a engine bars installed.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "id",
        "vehicleKind",
        "hasEngineBars"
      ]
    },
    "Azure.Contoso.Vehicles.Model.MotorcycleCreateOrUpdate": {
      "type": "object",
      "description": "A motorcycle.",
      "properties": {
        "vehicleKind": {
          "type": "string",
          "description": "The kind of vehicle, which is a Motorcycle.",
          "enum": [
            "Motorcycle"
          ],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "hasEngineBars": {
          "type": "boolean",
          "description": "If the motorcycle has a engine bars installed.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "Azure.Contoso.Vehicles.Model.Vehicle": {
      "type": "object",
      "description": "A vehicle.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the vehicle.",
          "readOnly": true
        },
        "vehicleKind": {
          "$ref": "#/definitions/Azure.Contoso.Vehicles.Model.VehicleKind",
          "description": "The kind of vehicle.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "manufacturerName": {
          "type": "string",
          "description": "The name of the vehicle manufacturer.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "The model of the vehicle.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "plateNumber": {
          "type": "string",
          "description": "The model of the vehicle.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "discriminator": "vehicleKind",
      "required": [
        "id",
        "vehicleKind",
        "manufacturerName",
        "modelName",
        "plateNumber"
      ]
    },
    "Azure.Contoso.Vehicles.Model.VehicleKind": {
      "type": "string",
      "description": "The kind of vehicle.",
      "enum": [
        "Car",
        "Motorcycle"
      ],
      "x-ms-enum": {
        "name": "VehicleKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Car",
            "value": "Car",
            "description": "A car."
          },
          {
            "name": "Motorcycle",
            "value": "Motorcycle",
            "description": "A motorcycle."
          }
        ]
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "PagedCar": {
      "type": "object",
      "description": "Paged collection of Car items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Car items on this page",
          "items": {
            "$ref": "#/definitions/Azure.Contoso.Vehicles.Model.Car"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedMotorcycle": {
      "type": "object",
      "description": "Paged collection of Motorcycle items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Motorcycle items on this page",
          "items": {
            "$ref": "#/definitions/Azure.Contoso.Vehicles.Model.Motorcycle"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedVehicle": {
      "type": "object",
      "description": "Paged collection of Vehicle items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Vehicle items on this page",
          "items": {
            "$ref": "#/definitions/Azure.Contoso.Vehicles.Model.Vehicle"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Versions": {
      "type": "string",
      "description": "The Azure.Contoso service versions.",
      "enum": [
        "2022-11-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "2022-11-01-preview",
            "value": "2022-11-01-preview",
            "description": "The 2022-11-01-preview version of the Azure.Contoso service."
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
