{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Azure Video Analyzer Resource Provider",
    "description": "Azure Video Analyzer resource provider API definition.",
    "version": "2021-11-01-preview"
  },
  "host": "management.azure.com",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "definitions": {
    "Sku": {
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "Live_S1",
            "Batch_S1"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "values": [
              {
                "value": "Live_S1",
                "description": "Live S1 sku name."
              },
              {
                "value": "Batch_S1",
                "description": "Batch S1 sku name."
              }
            ],
            "modelAsString": true
          },
          "description": "The SKU name."
        },
        "tier": {
          "type": "string",
          "enum": [
            "Standard"
          ],
          "x-ms-enum": {
            "name": "Tier",
            "values": [
              {
                "value": "Standard",
                "description": "Standard tier."
              }
            ],
            "modelAsString": true
          },
          "description": "The SKU tier.",
          "readOnly": true,
          "x-nullable": false
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "description": "The SKU details."
    },
    "PipelineTopologyProperties": {
      "properties": {
        "description": {
          "type": "string",
          "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterDeclaration"
          },
          "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \\\"${PARAMETER_NAME}\\\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceNodeBase"
          },
          "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
        },
        "processors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessorNodeBase"
          },
          "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
        },
        "sinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SinkNodeBase"
          },
          "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
        }
      },
      "type": "object",
      "required": [
        "sources",
        "sinks"
      ],
      "description": "Describes the properties of a pipeline topology."
    },
    "PipelineTopologyPropertiesUpdate": {
      "properties": {
        "description": {
          "type": "string",
          "description": "An optional description of the pipeline topology. It is recommended that the expected use of the topology to be described here."
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterDeclaration"
          },
          "description": "List of the topology parameter declarations. Parameters declared here can be referenced throughout the topology nodes through the use of \\\"${PARAMETER_NAME}\\\" string pattern. Parameters can have optional default values and can later be defined in individual instances of the pipeline."
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceNodeBase"
          },
          "description": "List of the topology source nodes. Source nodes enable external data to be ingested by the pipeline."
        },
        "processors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessorNodeBase"
          },
          "description": "List of the topology processor nodes. Processor nodes enable pipeline data to be analyzed, processed or transformed."
        },
        "sinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SinkNodeBase"
          },
          "description": "List of the topology sink nodes. Sink nodes allow pipeline data to be stored or exported."
        }
      },
      "type": "object",
      "description": "Describes the properties of a pipeline topology."
    },
    "ParameterDeclaration": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the parameter."
        },
        "type": {
          "type": "string",
          "enum": [
            "String",
            "SecretString",
            "Int",
            "Double",
            "Bool"
          ],
          "x-ms-enum": {
            "name": "ParameterType",
            "values": [
              {
                "value": "String",
                "description": "The parameter's value is a string."
              },
              {
                "value": "SecretString",
                "description": "The parameter's value is a string that holds sensitive information."
              },
              {
                "value": "Int",
                "description": "The parameter's value is a 32-bit signed integer."
              },
              {
                "value": "Double",
                "description": "The parameter's value is a 64-bit double-precision floating point."
              },
              {
                "value": "Bool",
                "description": "The parameter's value is a boolean value that is either true or false."
              }
            ],
            "modelAsString": true
          },
          "description": "Type of the parameter."
        },
        "description": {
          "type": "string",
          "description": "Description of the parameter."
        },
        "default": {
          "type": "string",
          "description": "The default value for the parameter to be used if the pipeline does not specify a value."
        }
      },
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "description": "Single topology parameter declaration. Declared parameters can and must be referenced throughout the topology and can optionally have default values to be used when they are not defined in the pipelines."
    },
    "NodeBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "name": {
          "type": "string",
          "description": "Node name. Must be unique within the topology."
        }
      },
      "type": "object",
      "required": [
        "@type",
        "name"
      ],
      "description": "Base class for nodes."
    },
    "SourceNodeBase": {
      "discriminator": "@type",
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SourceNodeBase",
      "allOf": [
        {
          "$ref": "#/definitions/NodeBase"
        }
      ],
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Base class for topology source nodes."
    },
    "ProcessorNodeBase": {
      "discriminator": "@type",
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.ProcessorNodeBase",
      "allOf": [
        {
          "$ref": "#/definitions/NodeBase"
        }
      ],
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeInput"
          },
          "description": "An array of upstream node references within the topology to be used as inputs for this node."
        }
      },
      "type": "object",
      "required": [
        "@type",
        "inputs"
      ],
      "description": "Base class for topology processor nodes."
    },
    "SinkNodeBase": {
      "discriminator": "@type",
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SinkNodeBase",
      "allOf": [
        {
          "$ref": "#/definitions/NodeBase"
        }
      ],
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeInput"
          },
          "description": "An array of upstream node references within the topology to be used as inputs for this node."
        }
      },
      "type": "object",
      "required": [
        "@type",
        "inputs"
      ],
      "description": "Base class for topology sink nodes."
    },
    "NodeInput": {
      "properties": {
        "nodeName": {
          "type": "string",
          "description": "The name of the upstream node in the pipeline which output is used as input of the current node."
        }
      },
      "type": "object",
      "required": [
        "nodeName"
      ],
      "description": "Describes an input signal to be used on a pipeline node."
    },
    "RtspSource": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.RtspSource",
      "allOf": [
        {
          "$ref": "#/definitions/SourceNodeBase"
        }
      ],
      "properties": {
        "transport": {
          "type": "string",
          "enum": [
            "Http",
            "Tcp"
          ],
          "x-ms-enum": {
            "name": "RtspTransport",
            "values": [
              {
                "value": "Http",
                "description": "HTTP transport. RTSP messages are exchanged over long running HTTP requests and RTP packets are interleaved within the HTTP channel."
              },
              {
                "value": "Tcp",
                "description": "TCP transport. RTSP is used directly over TCP and RTP packets are interleaved within the TCP channel."
              }
            ],
            "modelAsString": true
          },
          "description": "Network transport utilized by the RTSP and RTP exchange: TCP or HTTP. When using TCP, the RTP packets are interleaved on the TCP RTSP connection. When using HTTP, the RTSP messages are exchanged through long lived HTTP connections, and the RTP packages are interleaved in the HTTP connections alongside the RTSP messages."
        },
        "endpoint": {
          "$ref": "#/definitions/EndpointBase",
          "description": "RTSP endpoint information for Video Analyzer to connect to. This contains the required information for Video Analyzer to connect to RTSP cameras and/or generic RTSP servers."
        }
      },
      "type": "object",
      "required": [
        "endpoint"
      ],
      "description": "RTSP source allows for media from an RTSP camera or generic RTSP server to be ingested into a pipeline."
    },
    "EndpointBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "credentials": {
          "$ref": "#/definitions/CredentialsBase",
          "description": "Credentials to be presented to the endpoint."
        },
        "url": {
          "type": "string",
          "description": "The endpoint URL for Video Analyzer to connect to."
        },
        "tunnel": {
          "$ref": "#/definitions/TunnelBase",
          "description": "Optional tunnel used to connect to the endpoint."
        }
      },
      "type": "object",
      "required": [
        "@type",
        "url"
      ],
      "description": "Base class for endpoints."
    },
    "CredentialsBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Base class for credential objects."
    },
    "TunnelBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Base class for tunnel objects."
    },
    "UsernamePasswordCredentials": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.UsernamePasswordCredentials",
      "allOf": [
        {
          "$ref": "#/definitions/CredentialsBase"
        }
      ],
      "properties": {
        "username": {
          "type": "string",
          "description": "Username to be presented as part of the credentials."
        },
        "password": {
          "type": "string",
          "description": "Password to be presented as part of the credentials. It is recommended that this value is parameterized as a secret string in order to prevent this value to be returned as part of the resource on API requests."
        }
      },
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "description": "Username and password credentials."
    },
    "SecureIotDeviceRemoteTunnel": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.SecureIotDeviceRemoteTunnel",
      "allOf": [
        {
          "$ref": "#/definitions/TunnelBase"
        }
      ],
      "properties": {
        "iotHubName": {
          "type": "string",
          "description": "The IoT Hub name to use when establishing the remote tunnel."
        },
        "deviceId": {
          "type": "string",
          "description": "The device id to use when establishing the remote tunnel."
        }
      },
      "type": "object",
      "required": [
        "iotHubName",
        "deviceId"
      ],
      "description": "A remote tunnel securely established using IoT Hub device information."
    },
    "UnsecuredEndpoint": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.UnsecuredEndpoint",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointBase"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Unsecured endpoint describes an endpoint that the pipeline can connect to over clear transport (no encryption in transit)."
    },
    "TlsEndpoint": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.TlsEndpoint",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointBase"
        }
      ],
      "properties": {
        "trustedCertificates": {
          "$ref": "#/definitions/CertificateSource",
          "description": "List of trusted certificate authorities when authenticating a TLS connection. A null list designates that Azure Video Analyzer's list of trusted authorities should be used."
        },
        "validationOptions": {
          "$ref": "#/definitions/TlsValidationOptions",
          "description": "Validation options to use when authenticating a TLS connection. By default, strict validation is used."
        }
      },
      "type": "object",
      "description": "TLS endpoint describes an endpoint that the pipeline can connect to over TLS transport (data is encrypted in transit)."
    },
    "CertificateSource": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Base class for certificate sources."
    },
    "TlsValidationOptions": {
      "properties": {
        "ignoreHostname": {
          "type": "string",
          "description": "When set to 'true' causes the certificate subject name validation to be skipped. Default is 'false'."
        },
        "ignoreSignature": {
          "type": "string",
          "description": "When set to 'true' causes the certificate chain trust validation to be skipped. Default is 'false'."
        }
      },
      "type": "object",
      "description": "Options for controlling the validation of TLS endpoints."
    },
    "PemCertificateList": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.PemCertificateList",
      "allOf": [
        {
          "$ref": "#/definitions/CertificateSource"
        }
      ],
      "properties": {
        "certificates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "PEM formatted public certificates. One certificate per entry."
        }
      },
      "type": "object",
      "required": [
        "certificates"
      ],
      "description": "A list of PEM formatted certificates."
    },
    "VideoSource": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.VideoSource",
      "allOf": [
        {
          "$ref": "#/definitions/SourceNodeBase"
        }
      ],
      "properties": {
        "videoName": {
          "type": "string",
          "description": "Video name."
        },
        "timeSequences": {
          "$ref": "#/definitions/TimeSequenceBase",
          "description": "Video time sequences selected for the video."
        }
      },
      "type": "object",
      "required": [
        "videoName",
        "timeSequences"
      ],
      "description": "Enables a pipeline to use video as a source."
    },
    "TimeSequenceBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Sequence of time."
    },
    "VideoSequenceAbsoluteTimeMarkers": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.VideoSequenceAbsoluteTimeMarkers",
      "allOf": [
        {
          "$ref": "#/definitions/TimeSequenceBase"
        }
      ],
      "properties": {
        "ranges": {
          "type": "string",
          "description": "The datetime sequence ranges. Example: '[[\"2020-10-05T03:30:00Z\", \"2020-10-05T03:40:00Z\"],[\"2020-10-05T07:30:00Z\", \"2020-10-05T08:30:00Z\"]]'. Each range indicates the start and end date time marker."
        }
      },
      "type": "object",
      "required": [
        "ranges"
      ],
      "description": "Absolute datetime sequence as a string. The datetime format supported is as per ISO8601."
    },
    "EncoderProcessor": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.EncoderProcessor",
      "allOf": [
        {
          "$ref": "#/definitions/ProcessorNodeBase"
        }
      ],
      "properties": {
        "preset": {
          "$ref": "#/definitions/EncoderPresetBase",
          "description": "The encoder preset."
        }
      },
      "type": "object",
      "required": [
        "preset"
      ],
      "description": "A processor node which encodes the media."
    },
    "EncoderPresetBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "Encoding preset base."
    },
    "EncoderSystemPreset": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.EncoderSystemPreset",
      "allOf": [
        {
          "$ref": "#/definitions/EncoderPresetBase"
        }
      ],
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "SingleLayer_540p_H264_AAC",
            "SingleLayer_720p_H264_AAC",
            "SingleLayer_1080p_H264_AAC",
            "SingleLayer_2160p_H264_AAC"
          ],
          "x-ms-enum": {
            "name": "EncoderSystemPresetType",
            "values": [
              {
                "value": "SingleLayer_540p_H264_AAC",
                "description": "SingleLayer 540p H264 video codec and AAC audio codec encoder system preset."
              },
              {
                "value": "SingleLayer_720p_H264_AAC",
                "description": "SingleLayer 720p H264 video codec and AAC audio codec encoder system preset."
              },
              {
                "value": "SingleLayer_1080p_H264_AAC",
                "description": "SingleLayer 1080p H264 video codec and AAC audio codec encoder system preset."
              },
              {
                "value": "SingleLayer_2160p_H264_AAC",
                "description": "SingleLayer 2160p H264 video codec and AAC audio codec encoder system preset."
              }
            ],
            "modelAsString": true
          },
          "description": "The system preset value."
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "description": "The encoding built in system preset."
    },
    "EncoderCustomPreset": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.EncoderCustomPreset",
      "allOf": [
        {
          "$ref": "#/definitions/EncoderPresetBase"
        }
      ],
      "properties": {
        "audioEncoder": {
          "$ref": "#/definitions/AudioEncoderBase",
          "description": "The audio encoder."
        },
        "videoEncoder": {
          "$ref": "#/definitions/VideoEncoderBase",
          "description": "The video encoder."
        }
      },
      "type": "object",
      "description": "The encoding custom preset for specifying custom encoder settings."
    },
    "AudioEncoderBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "bitrateKbps": {
          "type": "string",
          "description": "The audio encoding bitrate."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "The audio encoder base."
    },
    "VideoEncoderBase": {
      "discriminator": "@type",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "bitrateKbps": {
          "type": "string",
          "description": "The video encoding bitrate."
        },
        "frameRate": {
          "type": "string",
          "description": "Video encoder frame rate."
        },
        "scale": {
          "$ref": "#/definitions/VideoScale",
          "description": "Defines the video scale."
        }
      },
      "type": "object",
      "required": [
        "@type"
      ],
      "description": "The video encoder base."
    },
    "AudioEncoderAac": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.AudioEncoderAac",
      "allOf": [
        {
          "$ref": "#/definitions/AudioEncoderBase"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "The audio encoding AAC Codec."
    },
    "VideoScale": {
      "properties": {
        "height": {
          "type": "string",
          "description": "The desired output video height."
        },
        "width": {
          "type": "string",
          "description": "The desired output video width."
        },
        "mode": {
          "type": "string",
          "enum": [
            "Pad",
            "PreserveAspectRatio",
            "Stretch"
          ],
          "x-ms-enum": {
            "name": "VideoScaleMode",
            "values": [
              {
                "value": "Pad",
                "description": "Pads the video with black horizontal stripes (letterbox) or black vertical stripes (pillar-box) so the video is resized to the specified dimensions while not altering the content aspect ratio."
              },
              {
                "value": "PreserveAspectRatio",
                "description": "Preserves the same aspect ratio as the input video. If only one video dimension is provided, the second dimension is calculated based on the input video aspect ratio. When 2 dimensions are provided, the video is resized to fit the most constraining dimension, considering the input video size and aspect ratio."
              },
              {
                "value": "Stretch",
                "description": "Stretches the original video so it resized to the specified dimensions."
              }
            ],
            "modelAsString": true
          },
          "description": "Describes the video scaling mode to be applied. Default mode is 'pad'."
        }
      },
      "type": "object",
      "description": "The video scaling information."
    },
    "VideoEncoderH264": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.VideoEncoderH264",
      "allOf": [
        {
          "$ref": "#/definitions/VideoEncoderBase"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "The video H264 codec encoder."
    },
    "VideoSink": {
      "x-ms-discriminator-value": "#Microsoft.VideoAnalyzer.VideoSink",
      "allOf": [
        {
          "$ref": "#/definitions/SinkNodeBase"
        }
      ],
      "properties": {
        "videoName": {
          "type": "string",
          "description": "Name of a new or existing Video Analyzer video resource used for the media recording."
        },
        "videoCreationProperties": {
          "$ref": "#/definitions/VideoCreationProperties",
          "description": "Optional video properties to be used in case a new video resource needs to be created on the service."
        },
        "videoPublishingOptions": {
          "$ref": "#/definitions/VideoPublishingOptions",
          "description": "Optional video publishing options to be used for changing publishing behavior of the output video."
        }
      },
      "type": "object",
      "required": [
        "videoName"
      ],
      "description": "Video sink allows for video and audio to be recorded to the Video Analyzer service. The recorded video can be played from anywhere and further managed from the cloud. Due to security reasons, a given Video Analyzer edge module instance can only record content to new video entries, or existing video entries previously recorded by the same module. Any attempt to record content to an existing video which has not been created by the same module instance will result in failure to record."
    },
    "VideoCreationProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional video title provided by the user. Value can be up to 256 characters long."
        },
        "description": {
          "type": "string",
          "description": "Optional video description provided by the user. Value can be up to 2048 characters long."
        },
        "segmentLength": {
          "type": "string",
          "description": "Video segment length indicates the length of individual video files (segments) which are persisted to storage. Smaller segments provide lower archive playback latency but generate larger volume of storage transactions. Larger segments reduce the amount of storage transactions while increasing the archive playback latency. Value must be specified in ISO8601 duration format (i.e. \\\"PT30S\\\" equals 30 seconds) and can vary between 30 seconds to 5 minutes, in 30 seconds increments. Changing this value after the video is initially created can lead to errors when uploading media to the archive. Default value is 30 seconds."
        },
        "retentionPeriod": {
          "type": "string",
          "description": "Video retention period indicates how long the video is kept in storage. Value must be specified in ISO8601 duration format (i.e. \\\"PT1D\\\" equals 1 day) and can vary between 1 day to 5 years, in 1 day increments. When absent (null), all video content is retained indefinitely."
        }
      },
      "type": "object",
      "description": "Optional video properties to be used in case a new video resource needs to be created on the service. These will not take effect if the video already exists."
    },
    "VideoPublishingOptions": {
      "properties": {
        "disableArchive": {
          "type": "string",
          "description": "When set to 'true' the video will not archive media content. Default is 'false'."
        },
        "disableRtspPublishing": {
          "type": "string",
          "description": "When set to 'true' the video will not publish RTSP playback. Default is 'false'."
        },
        "disableVideoPreviewImage": {
          "type": "string",
          "description": "When set to 'true' the video will not publish preview images. Default is 'false'."
        }
      },
      "type": "object",
      "description": "Options for changing video publishing behavior on the video sink and output video."
    },
    "ParameterDefinition": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the parameter declared in the pipeline topology."
        },
        "value": {
          "type": "string",
          "description": "Parameter value to be applied on this specific pipeline."
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "description": "Defines the parameter value of an specific pipeline topology parameter. See pipeline topology parameters for more information."
    },
    "PipelineTopology": {
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PipelineTopologyProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system metadata relating to this resource.",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "enum": [
            "Live",
            "Batch"
          ],
          "x-ms-enum": {
            "name": "Kind",
            "values": [
              {
                "value": "Live",
                "description": "Live pipeline topology resource."
              },
              {
                "value": "Batch",
                "description": "Batch pipeline topology resource."
              }
            ],
            "modelAsString": true
          },
          "description": "Topology kind."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU details."
        }
      },
      "type": "object",
      "required": [
        "kind",
        "sku"
      ],
      "description": "Pipeline topology describes the processing steps to be applied when processing media for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which acquires data from a RTSP camera, process it with an specific AI model and stored the data on the cloud can be reused across many different cameras, as long as the same processing should be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized, thus allowing individual pipelines to refer to different values, such as individual cameras RTSP endpoints and credentials. Overall a topology is composed of the following:\\r\\n\\r\\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\\r\\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for media to be ingested from cameras.\\r\\n  - Processors: list of nodes which perform data analysis or transformations.\\r\\n  -Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
    },
    "PipelineTopologyUpdate": {
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PipelineTopologyPropertiesUpdate",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system metadata relating to this resource.",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "enum": [
            "Live",
            "Batch"
          ],
          "x-ms-enum": {
            "name": "Kind",
            "values": [
              {
                "value": "Live",
                "description": "Live pipeline topology resource."
              },
              {
                "value": "Batch",
                "description": "Batch pipeline topology resource."
              }
            ],
            "modelAsString": true
          },
          "description": "Topology kind."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU details."
        }
      },
      "type": "object",
      "description": "Pipeline topology describes the processing steps to be applied when processing media for a particular outcome. The topology should be defined according to the scenario to be achieved and can be reused across many pipeline instances which share the same processing characteristics. For instance, a pipeline topology which acquires data from a RTSP camera, process it with an specific AI model and stored the data on the cloud can be reused across many different cameras, as long as the same processing should be applied across all the cameras. Individual instance properties can be defined through the use of user-defined parameters, which allow for a topology to be parameterized, thus allowing individual pipelines to refer to different values, such as individual cameras RTSP endpoints and credentials. Overall a topology is composed of the following:\\r\\n\\r\\n  - Parameters: list of user defined parameters that can be references across the topology nodes.\\r\\n  - Sources: list of one or more data sources nodes such as an RTSP source which allows for media to be ingested from cameras.\\r\\n  - Processors: list of nodes which perform data analysis or transformations.\\r\\n  -Sinks: list of one or more data sinks which allow for data to be stored or exported to other destinations."
    },
    "LivePipelineProperties": {
      "properties": {
        "topologyName": {
          "type": "string",
          "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
        },
        "description": {
          "type": "string",
          "description": "An optional description for the pipeline."
        },
        "bitrateKbps": {
          "type": "integer",
          "format": "int32",
          "description": "Bitrate capacity in kbps for the live pipeline. The support bit rate is between 500 to 3000 kbps."
        },
        "state": {
          "type": "string",
          "enum": [
            "Inactive",
            "Activating",
            "Active",
            "Deactivating"
          ],
          "x-ms-enum": {
            "name": "LivePipelineState",
            "values": [
              {
                "value": "Inactive",
                "description": "The live pipeline is idle and not processing media."
              },
              {
                "value": "Activating",
                "description": "The live pipeline is transitioning into the active state."
              },
              {
                "value": "Active",
                "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
              },
              {
                "value": "Deactivating",
                "description": "The live pipeline is transitioning into the inactive state."
              }
            ],
            "modelAsString": true
          },
          "description": "Current pipeline state (read-only).",
          "readOnly": true,
          "x-nullable": false
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterDefinition"
          },
          "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
        }
      },
      "type": "object",
      "required": [
        "topologyName",
        "bitrateKbps"
      ],
      "description": "Live pipeline properties."
    },
    "LivePipelinePropertiesUpdate": {
      "properties": {
        "topologyName": {
          "type": "string",
          "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
        },
        "description": {
          "type": "string",
          "description": "An optional description for the pipeline."
        },
        "bitrateKbps": {
          "type": "integer",
          "format": "int32",
          "description": "Bitrate capacity in kbps for the live pipeline. The support bit rate is between 500 to 3000 kbps."
        },
        "state": {
          "type": "string",
          "enum": [
            "Inactive",
            "Activating",
            "Active",
            "Deactivating"
          ],
          "x-ms-enum": {
            "name": "LivePipelineState",
            "values": [
              {
                "value": "Inactive",
                "description": "The live pipeline is idle and not processing media."
              },
              {
                "value": "Activating",
                "description": "The live pipeline is transitioning into the active state."
              },
              {
                "value": "Active",
                "description": "The live pipeline is active and able to process media. If your data source is not available, for instance, if your RTSP camera is powered off or unreachable, the pipeline will still be active and periodically retrying the connection. Your Azure subscription will be billed for the duration in which the live pipeline is in the active state."
              },
              {
                "value": "Deactivating",
                "description": "The live pipeline is transitioning into the inactive state."
              }
            ],
            "modelAsString": true
          },
          "description": "Current pipeline state (read-only).",
          "readOnly": true,
          "x-nullable": false
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterDefinition"
          },
          "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
        }
      },
      "type": "object",
      "description": "Live pipeline properties."
    },
    "LivePipeline": {
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/LivePipelineProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system metadata relating to this resource.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Live Pipeline represents an unique instance of a pipeline topology which is used for real-time content ingestion and analysis."
    },
    "LivePipelineUpdate": {
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/LivePipelinePropertiesUpdate",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system metadata relating to this resource.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Live Pipeline represents an unique instance of a pipeline topology which is used for real-time content ingestion and analysis."
    },
    "PipelineJobProperties": {
      "properties": {
        "topologyName": {
          "type": "string",
          "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
        },
        "description": {
          "type": "string",
          "description": "An optional description for the pipeline."
        },
        "state": {
          "type": "string",
          "enum": [
            "Processing",
            "Canceled",
            "Completed",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "PipelineJobState",
            "values": [
              {
                "value": "Processing",
                "description": "Pipeline job is processing."
              },
              {
                "value": "Canceled",
                "description": "Pipeline job is canceled."
              },
              {
                "value": "Completed",
                "description": "Pipeline job completed."
              },
              {
                "value": "Failed",
                "description": "Pipeline job failed."
              }
            ],
            "modelAsString": true
          },
          "description": "Current pipeline state (read-only).",
          "readOnly": true,
          "x-nullable": false
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration time when the pipeline job will be automatically deleted.",
          "readOnly": true,
          "x-nullable": false
        },
        "error": {
          "$ref": "#/definitions/PipelineJobError",
          "description": "An optional error information about the pipeline job failure.",
          "readOnly": true
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterDefinition"
          },
          "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
        }
      },
      "type": "object",
      "required": [
        "topologyName"
      ],
      "description": "Properties of a pipeline job."
    },
    "PipelineJobPropertiesUpdate": {
      "properties": {
        "topologyName": {
          "type": "string",
          "description": "The reference to an existing pipeline topology defined for real-time content processing. When activated, this live pipeline will process content according to the pipeline topology definition."
        },
        "description": {
          "type": "string",
          "description": "An optional description for the pipeline."
        },
        "state": {
          "type": "string",
          "enum": [
            "Processing",
            "Canceled",
            "Completed",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "PipelineJobState",
            "values": [
              {
                "value": "Processing",
                "description": "Pipeline job is processing."
              },
              {
                "value": "Canceled",
                "description": "Pipeline job is canceled."
              },
              {
                "value": "Completed",
                "description": "Pipeline job completed."
              },
              {
                "value": "Failed",
                "description": "Pipeline job failed."
              }
            ],
            "modelAsString": true
          },
          "description": "Current pipeline state (read-only).",
          "readOnly": true,
          "x-nullable": false
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration time when the pipeline job will be automatically deleted.",
          "readOnly": true,
          "x-nullable": false
        },
        "error": {
          "$ref": "#/definitions/PipelineJobError",
          "description": "An optional error information about the pipeline job failure.",
          "readOnly": true
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterDefinition"
          },
          "description": "List of the instance level parameter values for the user-defined topology parameters. A pipeline can only define or override parameters values for parameters which have been declared in the referenced topology. Topology parameters without a default value must be defined. Topology parameters with a default value can be optionally be overridden."
        }
      },
      "type": "object",
      "description": "Properties of a pipeline job."
    },
    "PipelineJobError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      },
      "type": "object",
      "description": "The pipeline job error details."
    },
    "PipelineJob": {
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PipelineJobProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system metadata relating to this resource.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Represents a pipeline job."
    },
    "PipelineJobUpdate": {
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PipelineJobPropertiesUpdate",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system metadata relating to this resource.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Represents a pipeline job."
    },
    "LivePipelineOperationStatus": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the live pipeline operation.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of the live pipeline operation.",
          "readOnly": true
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorDetail",
          "description": "The error details for the live pipeline operation.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "PipelineJobOperationStatus": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the pipeline job operation.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "The status of the pipeline job operation.",
          "readOnly": true
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorDetail",
          "description": "The error details for the pipeline job operation.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "PipelineTopologyCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineTopology"
          },
          "description": "A collection of PipelineTopology items."
        },
        "@nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of PipelineTopology items."
    },
    "LivePipelineCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LivePipeline"
          },
          "description": "A collection of LivePipeline items."
        },
        "@nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of LivePipeline items."
    },
    "PipelineJobCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineJob"
          },
          "description": "A collection of PipelineJob items."
        },
        "@nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of PipelineJob items."
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineTopologies": {
      "get": {
        "summary": "Retrieves a list of pipeline topologies.",
        "description": "Retrieves a list of pipeline topologies that have been added.",
        "operationId": "PipelineTopologies_List",
        "responses": {
          "200": {
            "description": "Pipeline topologies were successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/PipelineTopologyCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of items returned."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "List all pipeline topologies": {
            "$ref": "examples/pipeline-topology-list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineTopologies/{pipelineTopologyName}": {
      "get": {
        "summary": "Gets a pipeline topology by name.",
        "description": "Retrieves a pipeline topology by name. If a topology with that name has been previously created, the call will return the JSON representation of that topology.",
        "operationId": "PipelineTopologies_Get",
        "responses": {
          "200": {
            "description": "Pipeline topology was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/PipelineTopology"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "pipelineTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Pipeline topology unique identifier."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Get a pipeline topology by name": {
            "$ref": "examples/pipeline-topology-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Creates or updates a pipeline topology.",
        "description": "Creates a new pipeline topology or updates an existing one, with the given name. A pipeline topology is a blueprint defining what nodes are in a pipeline, and how they are interconnected.",
        "operationId": "PipelineTopologies_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "A new pipeline topology was created or the existing pipeline topology was updated.",
            "schema": {
              "$ref": "#/definitions/PipelineTopology"
            }
          },
          "201": {
            "description": "A new pipeline topology was created or the existing pipeline topology was updated.",
            "schema": {
              "$ref": "#/definitions/PipelineTopology"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "pipelineTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Pipeline topology unique identifier."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PipelineTopology"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Create or update a pipeline topology with an Rtsp source and video sink.": {
            "$ref": "examples/pipeline-topology-create.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes a pipeline topology.",
        "description": "Deletes a pipeline topology with the given name. This method should be called after all instances of the topology have been stopped and deleted.",
        "operationId": "PipelineTopologies_Delete",
        "responses": {
          "200": {
            "description": "Pipeline topology was deleted successfully."
          },
          "204": {
            "description": "Pipeline topology was not found."
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "pipelineTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Pipeline topology unique identifier."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Delete a pipeline topology": {
            "$ref": "examples/pipeline-topology-delete.json"
          }
        }
      },
      "patch": {
        "summary": "Update pipeline topology entity.",
        "description": "Updates the pipeline topology entity",
        "operationId": "PipelineTopologies_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PipelineTopology"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "pipelineTopologyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Pipeline topology unique identifier."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PipelineTopologyUpdate"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Update pipeline topology entity.": {
            "$ref": "examples/pipeline-topology-patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines": {
      "get": {
        "summary": "Retrieves a list of live pipeline.",
        "description": "Retrieves a list of live pipeline that have been created.",
        "operationId": "LivePipelines_List",
        "responses": {
          "200": {
            "description": "List of live pipeline that were successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/LivePipelineCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of items returned."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "List all live pipeline": {
            "$ref": "examples/live-pipeline-list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines/{livePipelineName}": {
      "get": {
        "summary": "Gets a Live Pipeline by name.",
        "description": "Retrieves a Live Pipeline by name. If a live pipeline with that name has been previously created, the call will return the JSON representation of that instance.",
        "operationId": "LivePipelines_Get",
        "responses": {
          "200": {
            "description": "Live pipeline was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/LivePipeline"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Get a live pipeline by name": {
            "$ref": "examples/live-pipeline-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Creates or updates a live pipeline.",
        "description": "Creates a new live pipeline or updates an existing one, with the given name.",
        "operationId": "LivePipelines_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "A new live pipeline was created or the existing live pipeline was updated.",
            "schema": {
              "$ref": "#/definitions/LivePipeline"
            }
          },
          "201": {
            "description": "A new live pipeline was created or the existing live pipeline was updated.",
            "schema": {
              "$ref": "#/definitions/LivePipeline"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LivePipeline"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Create or update a live pipeline": {
            "$ref": "examples/live-pipeline-create.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes a live pipeline.",
        "description": "Deletes a live pipeline.",
        "operationId": "LivePipelines_Delete",
        "responses": {
          "200": {
            "description": "Live pipeline was deleted successfully."
          },
          "204": {
            "description": "Live pipeline was deleted successfully."
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Delete a live pipeline": {
            "$ref": "examples/live-pipeline-delete.json"
          }
        }
      },
      "patch": {
        "summary": "Update live pipeline entity.",
        "description": "Updates the live pipeline entity",
        "operationId": "LivePipelines_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LivePipeline"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LivePipelineUpdate"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Update live pipeline entity.": {
            "$ref": "examples/live-pipeline-patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines/{livePipelineName}/activate": {
      "post": {
        "summary": "Activates a live pipeline.",
        "description": "Activates a live pipeline with the name provided.",
        "operationId": "LivePipelines_Activate",
        "responses": {
          "202": {
            "description": "Live pipeline activation was accepted and being processed."
          },
          "200": {
            "description": "Live pipeline was activated successfully."
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Activate live pipeline": {
            "$ref": "examples/live-pipeline-activate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines/{livePipelineName}/deactivate": {
      "post": {
        "summary": "Deactivates a live pipeline.",
        "description": "Deactivates a live pipeline with the name provided.",
        "operationId": "LivePipelines_Deactivate",
        "responses": {
          "202": {
            "description": "Live pipeline deactivation was accepted and being processed."
          },
          "200": {
            "description": "Live pipeline was deactivated successfully."
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Deactivate Live pipeline": {
            "$ref": "examples/live-pipeline-deactivate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs": {
      "get": {
        "summary": "Retrieves a list of pipeline jobs.",
        "description": "Retrieves a list of pipeline jobs that have been created.",
        "operationId": "PipelineJobs_List",
        "responses": {
          "200": {
            "description": "List of pipeline jobs that were successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/PipelineJobCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of items returned."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@nextLink"
        },
        "x-ms-examples": {
          "List all pipeline jobs.": {
            "$ref": "examples/pipeline-job-list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs/{pipelineJobName}": {
      "get": {
        "summary": "Gets a pipeline job by name.",
        "description": "Retrieves a pipeline job by name. If a pipeline job with that name has been previously created, the call will return the JSON representation of that instance.",
        "operationId": "PipelineJobs_Get",
        "responses": {
          "200": {
            "description": "Pipeline job was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/PipelineJob"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "pipelineJobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The pipeline job name."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Get a pipeline job by name": {
            "$ref": "examples/pipeline-job-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Creates or updates a pipeline job.",
        "description": "Creates a new pipeline job or updates an existing one, with the given name.",
        "operationId": "PipelineJobs_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "A new pipeline job was created or the existing pipeline job was updated.",
            "schema": {
              "$ref": "#/definitions/PipelineJob"
            }
          },
          "201": {
            "description": "A new pipeline job was created or the existing pipeline job was updated.",
            "schema": {
              "$ref": "#/definitions/PipelineJob"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "pipelineJobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The pipeline job name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PipelineJob"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Create or update a pipeline job": {
            "$ref": "examples/pipeline-job-create.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes a pipeline job.",
        "description": "Deletes a pipeline job.",
        "operationId": "PipelineJobs_Delete",
        "responses": {
          "200": {
            "description": "Pipeline job was deleted successfully."
          },
          "204": {
            "description": "Pipeline job was deleted successfully."
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "pipelineJobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The pipeline job name."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Delete a pipeline job.": {
            "$ref": "examples/pipeline-job-delete.json"
          }
        }
      },
      "patch": {
        "summary": "Update pipeline job entity.",
        "description": "Updates the pipeline job entity",
        "operationId": "PipelineJobs_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PipelineJob"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "pipelineJobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The pipeline job name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PipelineJobUpdate"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Update pipeline job entity.": {
            "$ref": "examples/pipeline-job-patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs/{pipelineJobName}/cancel": {
      "post": {
        "summary": "Cancels a pipeline job.",
        "description": "Cancels a pipeline job with the name provided.",
        "operationId": "PipelineJobs_Cancel",
        "responses": {
          "202": {
            "description": "Pipeline job cancellation was accepted and being processed."
          },
          "200": {
            "description": "Pipeline job was cancelled successfully."
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "pipelineJobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The pipeline job name."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Cancel a pipeline job.": {
            "$ref": "examples/pipeline-job-cancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/livePipelines/{livePipelineName}/operationStatuses/{operationId}": {
      "get": {
        "summary": "Get the operation status",
        "description": "Get the operation status of a live pipeline.",
        "operationId": "LivePipelineOperationStatuses_Get",
        "responses": {
          "200": {
            "description": "Live pipeline operation status was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/LivePipelineOperationStatus"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "livePipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Live pipeline unique identifier."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The operation ID."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Get the live pipeline operation status.": {
            "$ref": "examples/live-pipeline-operation-status-get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/videoAnalyzers/{accountName}/pipelineJobs/{pipelineJobName}/operationStatuses/{operationId}": {
      "get": {
        "summary": "Get the operation statuses.",
        "description": "Get the operation status of a pipeline job.",
        "operationId": "PipelineJobOperationStatuses_Get",
        "responses": {
          "200": {
            "description": "Pipeline job operation status was retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/PipelineJobOperationStatus"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureVideoAnalyzerAccountName"
          },
          {
            "name": "pipelineJobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The pipeline job name."
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The operation ID."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "x-ms-examples": {
          "Get the pipeline job operation status.": {
            "$ref": "examples/pipeline-job-operation-status-get.json"
          }
        }
      }
    }
  },
  "parameters": {
    "AzureVideoAnalyzerAccountName": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure Video Analyzer account name.",
      "x-ms-parameter-location": "method"
    }
  }
}
