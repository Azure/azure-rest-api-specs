{
  "swagger": "2.0",
  "info": {
    "title": "DataBoxEdgeManagementClient",
    "version": "2023-12-01",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Devices"
    },
    {
      "name": "DataBoxEdgeDevices"
    },
    {
      "name": "UpdateSummaries"
    },
    {
      "name": "Alerts"
    },
    {
      "name": "BandwidthSchedules"
    },
    {
      "name": "DeviceCapacityInfos"
    },
    {
      "name": "DiagnosticSettings"
    },
    {
      "name": "DiagnosticRemoteSupportSettingsOperationGroup"
    },
    {
      "name": "Jobs"
    },
    {
      "name": "OperationsStatus"
    },
    {
      "name": "Orders"
    },
    {
      "name": "Roles"
    },
    {
      "name": "Addons"
    },
    {
      "name": "MonitoringMetricConfigurations"
    },
    {
      "name": "Shares"
    },
    {
      "name": "StorageAccountCredentials"
    },
    {
      "name": "StorageAccounts"
    },
    {
      "name": "Containers"
    },
    {
      "name": "Triggers"
    },
    {
      "name": "Users"
    }
  ],
  "paths": {
    "/providers/Microsoft.DataBoxEdge/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "summary": "List all the supported operations.",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "OperationsGet": {
            "$ref": "./examples/OperationsGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBoxEdge/availableSkus": {
      "get": {
        "operationId": "AvailableSkus_List",
        "summary": "List all the available Skus and information related to them.",
        "description": "List all the available Skus and information related to them.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeSkuList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AvailableSkus": {
            "$ref": "./examples/AvailableSkusList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices": {
      "get": {
        "operationId": "Devices_ListBySubscription",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Gets all the Data Box Edge/Data Box Gateway devices in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DataBoxEdgeDeviceGetBySubscription": {
            "$ref": "./examples/DataBoxEdgeDeviceGetBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices": {
      "get": {
        "operationId": "Devices_ListByResourceGroup",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Gets all the Data Box Edge/Data Box Gateway devices in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DataBoxEdgeDeviceGetByResourceGroup": {
            "$ref": "./examples/DataBoxEdgeDeviceGetByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}": {
      "get": {
        "operationId": "Devices_Get",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Gets the properties of the Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DataBoxEdgeDeviceGetByName": {
            "$ref": "./examples/DataBoxEdgeDeviceGetByName.json"
          },
          "DataBoxEdgeDeviceGetByNameWithDataResidency": {
            "$ref": "./examples/DataBoxEdgeDeviceGetByNameWithDataResidency.json"
          }
        }
      },
      "put": {
        "operationId": "Devices_CreateOrUpdate",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Creates or updates a Data Box Edge/Data Box Gateway resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataBoxEdgeDevice",
            "in": "body",
            "description": "The resource object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataBoxEdgeDevice' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DataBoxEdgeDevicePut": {
            "$ref": "./examples/DataBoxEdgeDevicePut.json"
          },
          "DataBoxEdgeDevicePutWithDataResidency": {
            "$ref": "./examples/DataBoxEdgeDevicePutWithDataResidency.json"
          }
        }
      },
      "patch": {
        "operationId": "Devices_Update",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Modifies a Data Box Edge/Data Box Gateway resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The resource parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevicePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevice"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DataBoxEdgeDevicePatch": {
            "$ref": "./examples/DataBoxEdgeDevicePatch.json"
          }
        }
      },
      "delete": {
        "operationId": "Devices_Delete",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Deletes the Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DataBoxEdgeDeviceDelete": {
            "$ref": "./examples/DataBoxEdgeDeviceDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts": {
      "get": {
        "operationId": "Alerts_ListByDataBoxEdgeDevice",
        "tags": [
          "Alerts"
        ],
        "description": "Gets all the alerts for a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AlertList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AlertGetAllInDevice": {
            "$ref": "./examples/AlertGetAllInDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts/{name}": {
      "get": {
        "operationId": "Alerts_Get",
        "tags": [
          "Alerts"
        ],
        "summary": "Gets an alert by name.",
        "description": "Gets an alert by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The alert name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AlertGet": {
            "$ref": "./examples/AlertGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules": {
      "get": {
        "operationId": "BandwidthSchedules_ListByDataBoxEdgeDevice",
        "tags": [
          "BandwidthSchedules"
        ],
        "description": "Gets all the bandwidth schedules for a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BandwidthSchedulesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "BandwidthScheduleGetAllInDevice": {
            "$ref": "./examples/BandwidthScheduleGetAllInDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules/{name}": {
      "get": {
        "operationId": "BandwidthSchedules_Get",
        "tags": [
          "BandwidthSchedules"
        ],
        "description": "Gets the properties of the specified bandwidth schedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The bandwidth schedule name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BandwidthSchedule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "BandwidthScheduleGet": {
            "$ref": "./examples/BandwidthScheduleGet.json"
          }
        }
      },
      "put": {
        "operationId": "BandwidthSchedules_CreateOrUpdate",
        "tags": [
          "BandwidthSchedules"
        ],
        "description": "Creates or updates a bandwidth schedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The bandwidth schedule name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The bandwidth schedule to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BandwidthSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BandwidthSchedule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BandwidthSchedule"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "BandwidthSchedulePut": {
            "$ref": "./examples/BandwidthSchedulePut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/BandwidthSchedule"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BandwidthSchedules_Delete",
        "tags": [
          "BandwidthSchedules"
        ],
        "description": "Deletes the specified bandwidth schedule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The bandwidth schedule name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "BandwidthScheduleDelete": {
            "$ref": "./examples/BandwidthScheduleDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/deviceCapacityCheck": {
      "post": {
        "operationId": "DeviceCapacityCheck_CheckResourceCreationFeasibility",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Posts the device capacity request info to check feasibility.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "capacityName",
            "in": "query",
            "description": "The capacity name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceCapacityRequestInfo",
            "in": "body",
            "description": "The device capacity request info.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceCapacityRequestInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DeviceCapacityRequestPost": {
            "$ref": "./examples/DeviceCapacityRequestPost.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/deviceCapacityInfo/default": {
      "get": {
        "operationId": "DeviceCapacityInfo_GetDeviceCapacityInfo",
        "tags": [
          "DeviceCapacityInfos"
        ],
        "description": "Gets the properties of the specified device capacity info.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeviceCapacityInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DeviceCapacityGet": {
            "$ref": "./examples/DeviceCapacityGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/diagnosticProactiveLogCollectionSettings/default": {
      "get": {
        "operationId": "DiagnosticSettings_GetDiagnosticProactiveLogCollectionSettings",
        "tags": [
          "DiagnosticSettings"
        ],
        "description": "Gets the proactive log collection settings of the specified Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiagnosticProactiveLogCollectionSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetDiagnosticProactiveLogCollectionSettings": {
            "$ref": "./examples/GetDiagnosticProactiveLogCollectionSettings.json"
          }
        }
      },
      "put": {
        "operationId": "DiagnosticSettings_UpdateDiagnosticProactiveLogCollectionSettings",
        "tags": [
          "DiagnosticSettings"
        ],
        "description": "Updates the proactive log collection settings on a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "proactiveLogCollectionSettings",
            "in": "body",
            "description": "The proactive log collection settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticProactiveLogCollectionSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DiagnosticProactiveLogCollectionSettings' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DiagnosticProactiveLogCollectionSettings"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UpdateDiagnosticProactiveLogCollectionSettings": {
            "$ref": "./examples/UpdateDiagnosticProactiveLogCollectionSettings.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DiagnosticProactiveLogCollectionSettings"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/diagnosticRemoteSupportSettings/default": {
      "get": {
        "operationId": "DiagnosticSettings_GetDiagnosticRemoteSupportSettings",
        "tags": [
          "DiagnosticRemoteSupportSettingsOperationGroup"
        ],
        "description": "Gets the diagnostic remote support settings of the specified Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiagnosticRemoteSupportSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetDiagnosticRemoteSupportSettings": {
            "$ref": "./examples/GetDiagnosticRemoteSupportSettings.json"
          }
        }
      },
      "put": {
        "operationId": "DiagnosticSettings_UpdateDiagnosticRemoteSupportSettings",
        "tags": [
          "DiagnosticRemoteSupportSettingsOperationGroup"
        ],
        "description": "Updates the diagnostic remote support settings on a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "diagnosticRemoteSupportSettings",
            "in": "body",
            "description": "The diagnostic remote support settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnosticRemoteSupportSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DiagnosticRemoteSupportSettings' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DiagnosticRemoteSupportSettings"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UpdateDiagnosticRemoteSupportSettings": {
            "$ref": "./examples/UpdateDiagnosticRemoteSupportSettings.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DiagnosticRemoteSupportSettings"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/downloadUpdates": {
      "post": {
        "operationId": "Devices_DownloadUpdates",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "summary": "Downloads the updates on a Data Box Edge/Data Box Gateway device.",
        "description": "Downloads the updates on a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DownloadUpdatesPost": {
            "$ref": "./examples/DownloadUpdatesPost.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/generateCertificate": {
      "post": {
        "operationId": "Devices_GenerateCertificate",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Generates certificate for activation key.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GenerateCertResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GenerateCertificate": {
            "$ref": "./examples/GenerateCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/getExtendedInformation": {
      "post": {
        "operationId": "Devices_GetExtendedInformation",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Gets additional information for the specified Azure Stack Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceExtendedInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExtendedInfoPost": {
            "$ref": "./examples/ExtendedInfoPost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/installUpdates": {
      "post": {
        "operationId": "Devices_InstallUpdates",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "summary": "Installs the updates on the Data Box Edge/Data Box Gateway device.",
        "description": "Installs the updates on the Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "InstallUpdatesPost": {
            "$ref": "./examples/InstallUpdatesPost.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/jobs/{name}": {
      "get": {
        "operationId": "Jobs_Get",
        "tags": [
          "Jobs"
        ],
        "summary": "Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.",
        "description": "Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The job name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "JobsGet": {
            "$ref": "./examples/JobsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/networkSettings/default": {
      "get": {
        "operationId": "Devices_GetNetworkSettings",
        "tags": [
          "Devices"
        ],
        "description": "Gets the network settings of the specified Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkSettingsGet": {
            "$ref": "./examples/NetworkSettingsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/nodes": {
      "get": {
        "operationId": "Nodes_ListByDataBoxEdgeDevice",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Gets all the nodes currently configured under this Data Box Edge device",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NodeList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NodesGetAllInDevice": {
            "$ref": "./examples/NodeGetAllInDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/operationsStatus/{name}": {
      "get": {
        "operationId": "OperationsStatus_Get",
        "tags": [
          "OperationsStatus"
        ],
        "summary": "Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.",
        "description": "Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The job name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "OperationsStatusGet": {
            "$ref": "./examples/OperationsStatusGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders": {
      "get": {
        "operationId": "Orders_ListByDataBoxEdgeDevice",
        "tags": [
          "Orders"
        ],
        "summary": "Lists all the orders related to a Data Box Edge/Data Box Gateway device.",
        "description": "Lists all the orders related to a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OrderList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "OrderGetAllInDevice": {
            "$ref": "./examples/OrderGetAllInDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders/default": {
      "get": {
        "operationId": "Orders_Get",
        "tags": [
          "Orders"
        ],
        "summary": "Gets a specific order by name.",
        "description": "Gets a specific order by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "OrderGet": {
            "$ref": "./examples/OrderGet.json"
          }
        }
      },
      "put": {
        "operationId": "Orders_CreateOrUpdate",
        "tags": [
          "Orders"
        ],
        "summary": "Creates or updates an order.",
        "description": "Creates or updates an order.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "order",
            "in": "body",
            "description": "The order to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Order' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "OrderPut": {
            "$ref": "./examples/OrderPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Order"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Orders_Delete",
        "tags": [
          "Orders"
        ],
        "summary": "Deletes the order related to the device.",
        "description": "Deletes the order related to the device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "OrderDelete": {
            "$ref": "./examples/OrderDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders/default/listDCAccessCode": {
      "post": {
        "operationId": "Orders_ListDCAccessCode",
        "tags": [
          "Orders"
        ],
        "summary": "Gets the DCAccess Code",
        "description": "Gets the DCAccess Code",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DCAccessCode"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetDCAccessCode": {
            "$ref": "./examples/GetDCAccessCode.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles": {
      "get": {
        "operationId": "Roles_ListByDataBoxEdgeDevice",
        "tags": [
          "Roles"
        ],
        "description": "Lists all the roles configured in a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RoleList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "RoleGetAllInDevice": {
            "$ref": "./examples/RoleGetAllInDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}": {
      "get": {
        "operationId": "Roles_Get",
        "tags": [
          "Roles"
        ],
        "description": "Gets a specific role by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The role name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "RoleGet": {
            "$ref": "./examples/RoleGet.json"
          }
        }
      },
      "put": {
        "operationId": "Roles_CreateOrUpdate",
        "tags": [
          "Roles"
        ],
        "description": "Create or update a role.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "role",
            "in": "body",
            "description": "The role properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Role' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "RolePut": {
            "$ref": "./examples/RolePut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Role"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Roles_Delete",
        "tags": [
          "Roles"
        ],
        "description": "Deletes the role on the device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The role name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "RoleDelete": {
            "$ref": "./examples/RoleDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/addons": {
      "get": {
        "operationId": "Addons_ListByRole",
        "tags": [
          "Addons"
        ],
        "description": "Lists all the addons configured in the role.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "The name of the role.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AddonList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "RoleListAddOns": {
            "$ref": "./examples/RoleListAddOns.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/addons/{addonName}": {
      "get": {
        "operationId": "Addons_Get",
        "tags": [
          "Addons"
        ],
        "description": "Gets a specific addon by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "The name of the role.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addonName",
            "in": "path",
            "description": "The name of the addon.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetAddOns": {
            "$ref": "./examples/GetAddons.json"
          }
        }
      },
      "put": {
        "operationId": "Addons_CreateOrUpdate",
        "tags": [
          "Addons"
        ],
        "description": "Create or update a addon.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "The name of the role.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addonName",
            "in": "path",
            "description": "The name of the addon.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addon",
            "in": "body",
            "description": "The addon properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Addon' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PutAddOns": {
            "$ref": "./examples/PutAddons.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Addon"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Addons_Delete",
        "tags": [
          "Addons"
        ],
        "description": "Deletes the addon on the device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "The name of the role.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addonName",
            "in": "path",
            "description": "The name of the addon.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DeleteAddOns": {
            "$ref": "./examples/DeleteAddons.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/monitoringConfig": {
      "get": {
        "operationId": "MonitoringConfig_List",
        "tags": [
          "MonitoringMetricConfigurations"
        ],
        "summary": "Lists metric configurations in a role.",
        "description": "Lists metric configurations in a role.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "The name of the role.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitoringMetricConfigurationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ListMonitoringConfig": {
            "$ref": "./examples/ListMonitoringConfig.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/monitoringConfig/default": {
      "get": {
        "operationId": "MonitoringConfig_Get",
        "tags": [
          "MonitoringMetricConfigurations"
        ],
        "summary": "Gets a  metric configuration of a role.",
        "description": "Gets a  metric configuration of a role.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "The name of the role.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitoringMetricConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetMonitoringConfig": {
            "$ref": "./examples/GetMonitoringConfig.json"
          }
        }
      },
      "put": {
        "operationId": "MonitoringConfig_CreateOrUpdate",
        "tags": [
          "MonitoringMetricConfigurations"
        ],
        "summary": "Creates a new metric configuration or updates an existing one for a role.",
        "description": "Creates a new metric configuration or updates an existing one for a role.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "The name of the role.",
            "required": true,
            "type": "string"
          },
          {
            "name": "monitoringMetricConfiguration",
            "in": "body",
            "description": "The metric configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitoringMetricConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MonitoringMetricConfiguration' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MonitoringMetricConfiguration"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "PutMonitoringConfig": {
            "$ref": "./examples/PutMonitoringConfig.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/MonitoringMetricConfiguration"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MonitoringConfig_Delete",
        "tags": [
          "MonitoringMetricConfigurations"
        ],
        "summary": "deletes a new metric configuration for a role.",
        "description": "deletes a new metric configuration for a role.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The name of the device.",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "The name of the role.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DeleteMonitoringConfig": {
            "$ref": "./examples/DeleteMonitoringConfig.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/scanForUpdates": {
      "post": {
        "operationId": "Devices_ScanForUpdates",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Scans for updates on a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ScanForUpdatesPost": {
            "$ref": "./examples/ScanForUpdatesPost.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/securitySettings/default/update": {
      "post": {
        "operationId": "Devices_CreateOrUpdateSecuritySettings",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Updates the security settings on a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "securitySettings",
            "in": "body",
            "description": "The security settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecuritySettings"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdateSecuritySettings": {
            "$ref": "./examples/SecuritySettingsUpdatePost.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares": {
      "get": {
        "operationId": "Shares_ListByDataBoxEdgeDevice",
        "tags": [
          "Shares"
        ],
        "summary": "Lists all the shares in a Data Box Edge/Data Box Gateway device.",
        "description": "Lists all the shares in a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ShareList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ShareGetAllInDevice": {
            "$ref": "./examples/ShareGetAllInDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}": {
      "get": {
        "operationId": "Shares_Get",
        "tags": [
          "Shares"
        ],
        "summary": "Gets a share by name.",
        "description": "Gets a share by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The share name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ShareGet": {
            "$ref": "./examples/ShareGet.json"
          }
        }
      },
      "put": {
        "operationId": "Shares_CreateOrUpdate",
        "tags": [
          "Shares"
        ],
        "summary": "Creates a new share or updates an existing share on the device.",
        "description": "Creates a new share or updates an existing share on the device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The share name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "share",
            "in": "body",
            "description": "The share properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Share"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Share' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SharePut": {
            "$ref": "./examples/SharePut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Share"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Shares_Delete",
        "tags": [
          "Shares"
        ],
        "description": "Deletes the share on the Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The share name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ShareDelete": {
            "$ref": "./examples/ShareDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}/refresh": {
      "post": {
        "operationId": "Shares_Refresh",
        "tags": [
          "Shares"
        ],
        "summary": "Refreshes the share metadata with the data from the cloud.",
        "description": "Refreshes the share metadata with the data from the cloud.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The share name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ShareRefreshPost": {
            "$ref": "./examples/ShareRefreshPost.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials": {
      "get": {
        "operationId": "StorageAccountCredentials_ListByDataBoxEdgeDevice",
        "tags": [
          "StorageAccountCredentials"
        ],
        "summary": "Gets all the storage account credentials in a Data Box Edge/Data Box Gateway device.",
        "description": "Gets all the storage account credentials in a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredentialList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SACGetAllInDevice": {
            "$ref": "./examples/SACGetAllInDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials/{name}": {
      "get": {
        "operationId": "StorageAccountCredentials_Get",
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Gets the properties of the specified storage account credential.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The storage account credential name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SACGet": {
            "$ref": "./examples/SACGet.json"
          }
        }
      },
      "put": {
        "operationId": "StorageAccountCredentials_CreateOrUpdate",
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Creates or updates the storage account credential.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The storage account credential name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountCredential",
            "in": "body",
            "description": "The storage account credential.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageAccountCredential' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SACPut": {
            "$ref": "./examples/SACPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/StorageAccountCredential"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "StorageAccountCredentials_Delete",
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Deletes the storage account credential.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The storage account credential name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SACDelete": {
            "$ref": "./examples/SACDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts": {
      "get": {
        "operationId": "StorageAccounts_ListByDataBoxEdgeDevice",
        "tags": [
          "StorageAccounts"
        ],
        "summary": "Lists all the StorageAccounts in a Data Box Edge/Data Box Gateway device.",
        "description": "Lists all the StorageAccounts in a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountGetAllInDevice": {
            "$ref": "./examples/StorageAccountGetAllInDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}": {
      "get": {
        "operationId": "StorageAccounts_Get",
        "tags": [
          "StorageAccounts"
        ],
        "summary": "Gets a StorageAccount by name.",
        "description": "Gets a StorageAccount by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "description": "The storage account name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountGet": {
            "$ref": "./examples/StorageAccountGet.json"
          }
        }
      },
      "put": {
        "operationId": "StorageAccounts_CreateOrUpdate",
        "tags": [
          "StorageAccounts"
        ],
        "summary": "Creates a new StorageAccount or updates an existing StorageAccount on the device.",
        "description": "Creates a new StorageAccount or updates an existing StorageAccount on the device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "description": "The storage account name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccount",
            "in": "body",
            "description": "The StorageAccount properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageAccount' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountPut": {
            "$ref": "./examples/StorageAccountPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/StorageAccount"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "StorageAccounts_Delete",
        "tags": [
          "StorageAccounts"
        ],
        "description": "Deletes the StorageAccount on the Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "description": "The storage account name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "StorageAccountDelete": {
            "$ref": "./examples/StorageAccountDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers": {
      "get": {
        "operationId": "Containers_ListByStorageAccount",
        "tags": [
          "Containers"
        ],
        "summary": "Lists all the containers of a storage Account in a Data Box Edge/Data Box Gateway device.",
        "description": "Lists all the containers of a storage Account in a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "description": "The storage account name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ContainerList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ContainerListAllInDevice": {
            "$ref": "./examples/ContainerListAllInDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers/{containerName}": {
      "get": {
        "operationId": "Containers_Get",
        "tags": [
          "Containers"
        ],
        "summary": "Gets a container by name.",
        "description": "Gets a container by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "description": "The storage account name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The container Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Container"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ContainerGet": {
            "$ref": "./examples/ContainerGet.json"
          }
        }
      },
      "put": {
        "operationId": "Containers_CreateOrUpdate",
        "tags": [
          "Containers"
        ],
        "summary": "Creates a new container or updates an existing container on the device.",
        "description": "Creates a new container or updates an existing container on the device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "description": "The storage account name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The container Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "container",
            "in": "body",
            "description": "The container properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Container"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Container' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Container"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ContainerPut": {
            "$ref": "./examples/ContainerPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Container"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Containers_Delete",
        "tags": [
          "Containers"
        ],
        "description": "Deletes the container on the Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "description": "The storage account name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The container Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ContainerDelete": {
            "$ref": "./examples/ContainerDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers/{containerName}/refresh": {
      "post": {
        "operationId": "Containers_Refresh",
        "tags": [
          "Containers"
        ],
        "summary": "Refreshes the container metadata with the data from the cloud.",
        "description": "Refreshes the container metadata with the data from the cloud.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "description": "The storage account name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The container Name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ContainerRefresh": {
            "$ref": "./examples/ContainerRefresh.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggerSupportPackage": {
      "post": {
        "operationId": "SupportPackages_TriggerSupportPackage",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "summary": "Triggers support package on the device",
        "description": "Triggers support package on the device",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerSupportPackageRequest",
            "in": "body",
            "description": "The trigger support package request object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriggerSupportPackageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "TriggerSupportPackage": {
            "$ref": "./examples/TriggerSupportPackage.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers": {
      "get": {
        "operationId": "Triggers_ListByDataBoxEdgeDevice",
        "tags": [
          "Triggers"
        ],
        "description": "Lists all the triggers configured in the device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify $filter='CustomContextTag eq <tag>' to filter on custom context tag property",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TriggerList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "TriggerGetAllInDevice": {
            "$ref": "./examples/TriggerGetAllInDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers/{name}": {
      "get": {
        "operationId": "Triggers_Get",
        "tags": [
          "Triggers"
        ],
        "description": "Get a specific trigger by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The trigger name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "TriggerGet": {
            "$ref": "./examples/TriggerGet.json"
          }
        }
      },
      "put": {
        "operationId": "Triggers_CreateOrUpdate",
        "tags": [
          "Triggers"
        ],
        "description": "Creates or updates a trigger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The trigger name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "trigger",
            "in": "body",
            "description": "The trigger.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Trigger' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "TriggerPut": {
            "$ref": "./examples/TriggerPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Trigger"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Triggers_Delete",
        "tags": [
          "Triggers"
        ],
        "description": "Deletes the trigger on the gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The trigger name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "TriggerDelete": {
            "$ref": "./examples/TriggerDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateExtendedInformation": {
      "post": {
        "operationId": "Devices_UpdateExtendedInformation",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Gets additional information for the specified Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The patch object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceExtendedInfoPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceExtendedInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetUpdateExtendedInfo": {
            "$ref": "./examples/GetUpdateExtendedInfo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateSummary/default": {
      "get": {
        "operationId": "Devices_GetUpdateSummary",
        "tags": [
          "UpdateSummaries"
        ],
        "summary": "Gets information about the availability of updates based on the last scan of the device. It also gets information about any ongoing download or install jobs on the device.",
        "description": "Gets information about the availability of updates based on the last scan of the device. It also gets information about any ongoing download or install jobs on the device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UpdateSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UpdateSummaryGet": {
            "$ref": "./examples/UpdateSummaryGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/uploadCertificate": {
      "post": {
        "operationId": "Devices_UploadCertificate",
        "tags": [
          "DataBoxEdgeDevices"
        ],
        "description": "Uploads registration certificate for the device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The upload certificate request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadCertificateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UploadCertificateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UploadCertificatePost": {
            "$ref": "./examples/UploadCertificatePost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users": {
      "get": {
        "operationId": "Users_ListByDataBoxEdgeDevice",
        "tags": [
          "Users"
        ],
        "description": "Gets all the users registered on a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Specify $filter='Type eq <type>' to filter on user type property",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UserGetAllInDevice": {
            "$ref": "./examples/UserGetAllInDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users/{name}": {
      "get": {
        "operationId": "Users_Get",
        "tags": [
          "Users"
        ],
        "description": "Gets the properties of the specified user.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The user name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UserGet": {
            "$ref": "./examples/UserGet.json"
          }
        }
      },
      "put": {
        "operationId": "Users_CreateOrUpdate",
        "tags": [
          "Users"
        ],
        "description": "Creates a new user or updates an existing user's information on a Data Box Edge/Data Box Gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The user name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "The user details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'User' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UserPut": {
            "$ref": "./examples/UserPut.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/User"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Users_Delete",
        "tags": [
          "Users"
        ],
        "description": "Deletes the user on a databox edge/gateway device.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The user name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UserDelete": {
            "$ref": "./examples/UserDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ARMBaseModel": {
      "type": "object",
      "description": "Represents the base class for all object models.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The path ID that uniquely identifies the object.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The object name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The hierarchical type of the object.",
          "readOnly": true
        }
      }
    },
    "AccessLevel": {
      "type": "string",
      "description": "Access level allowed for this remote application type",
      "enum": [
        "None",
        "ReadOnly",
        "ReadWrite",
        "FullAccess"
      ],
      "x-ms-enum": {
        "name": "AccessLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "ReadOnly",
            "value": "ReadOnly"
          },
          {
            "name": "ReadWrite",
            "value": "ReadWrite"
          },
          {
            "name": "FullAccess",
            "value": "FullAccess"
          }
        ]
      }
    },
    "AccountType": {
      "type": "string",
      "description": "Type of storage accessed on the storage account.",
      "enum": [
        "GeneralPurposeStorage",
        "BlobStorage"
      ],
      "x-ms-enum": {
        "name": "AccountType",
        "modelAsString": true,
        "values": [
          {
            "name": "GeneralPurposeStorage",
            "value": "GeneralPurposeStorage"
          },
          {
            "name": "BlobStorage",
            "value": "BlobStorage"
          }
        ]
      }
    },
    "Addon": {
      "type": "object",
      "description": "Role Addon",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AddonType",
          "description": "Addon type.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AddonList": {
      "type": "object",
      "description": "Collection of all the Role addon on the Azure Stack Edge device.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Addon items on this page",
          "items": {
            "$ref": "#/definitions/Addon"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AddonState": {
      "type": "string",
      "description": "Addon Provisioning State",
      "enum": [
        "Invalid",
        "Creating",
        "Created",
        "Updating",
        "Reconfiguring",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "AddonState",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Created",
            "value": "Created"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Reconfiguring",
            "value": "Reconfiguring"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          }
        ]
      }
    },
    "AddonType": {
      "type": "string",
      "description": "Addon type.",
      "enum": [
        "IotEdge",
        "ArcForKubernetes"
      ],
      "x-ms-enum": {
        "name": "AddonType",
        "modelAsString": true,
        "values": [
          {
            "name": "IotEdge",
            "value": "IotEdge"
          },
          {
            "name": "ArcForKubernetes",
            "value": "ArcForKubernetes"
          }
        ]
      }
    },
    "Address": {
      "type": "object",
      "description": "The shipping address of the customer.",
      "properties": {
        "addressLine1": {
          "type": "string",
          "description": "The address line1."
        },
        "addressLine2": {
          "type": "string",
          "description": "The address line2."
        },
        "addressLine3": {
          "type": "string",
          "description": "The address line3."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code."
        },
        "city": {
          "type": "string",
          "description": "The city name."
        },
        "state": {
          "type": "string",
          "description": "The state name."
        },
        "country": {
          "type": "string",
          "description": "The country name."
        }
      },
      "required": [
        "country"
      ]
    },
    "Alert": {
      "type": "object",
      "description": "Alert on the data box edge/gateway device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertProperties",
          "description": "Properties of alert.",
          "readOnly": true,
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AlertErrorDetails": {
      "type": "object",
      "description": "Error details for the alert.",
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "Error code.",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string",
          "description": "Error Message.",
          "readOnly": true
        },
        "occurrences": {
          "type": "integer",
          "format": "int32",
          "description": "Number of occurrences.",
          "readOnly": true
        }
      }
    },
    "AlertList": {
      "type": "object",
      "description": "Collection of alerts.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Alert items on this page",
          "items": {
            "$ref": "#/definitions/Alert"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AlertProperties": {
      "type": "object",
      "description": "Properties of alert.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Alert title.",
          "readOnly": true
        },
        "alertType": {
          "type": "string",
          "description": "Alert type.",
          "readOnly": true
        },
        "appearedAtDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "UTC time when the alert appeared.",
          "readOnly": true
        },
        "recommendation": {
          "type": "string",
          "description": "Alert recommendation.",
          "readOnly": true
        },
        "severity": {
          "$ref": "#/definitions/AlertSeverity",
          "description": "Severity of the alert.",
          "readOnly": true
        },
        "errorDetails": {
          "$ref": "#/definitions/AlertErrorDetails",
          "description": "Error details of the alert.",
          "readOnly": true
        },
        "detailedInformation": {
          "type": "object",
          "description": "Alert details.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "AlertSeverity": {
      "type": "string",
      "description": "Severity of the alert.",
      "enum": [
        "Informational",
        "Warning",
        "Critical"
      ],
      "x-ms-enum": {
        "name": "AlertSeverity",
        "modelAsString": true,
        "values": [
          {
            "name": "Informational",
            "value": "Informational"
          },
          {
            "name": "Warning",
            "value": "Warning"
          },
          {
            "name": "Critical",
            "value": "Critical"
          }
        ]
      }
    },
    "ArcAddon": {
      "type": "object",
      "description": "Arc Addon.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArcAddonProperties",
          "description": "Properties specific to Arc addon.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Addon"
        }
      ],
      "x-ms-discriminator-value": "ArcForKubernetes"
    },
    "ArcAddonProperties": {
      "type": "object",
      "description": "Arc addon properties.",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "Arc resource subscription Id"
        },
        "resourceGroupName": {
          "type": "string",
          "description": "Arc resource group name"
        },
        "resourceName": {
          "type": "string",
          "description": "Arc resource Name"
        },
        "resourceLocation": {
          "type": "string",
          "description": "Arc resource location"
        },
        "version": {
          "type": "string",
          "description": "Arc resource version",
          "readOnly": true
        },
        "hostPlatform": {
          "$ref": "#/definitions/PlatformType",
          "description": "Host OS supported by the Arc addon.",
          "readOnly": true
        },
        "hostPlatformType": {
          "$ref": "#/definitions/HostPlatformType",
          "description": "Platform where the runtime is hosted.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/AddonState",
          "description": "Addon Provisioning State",
          "readOnly": true
        }
      },
      "required": [
        "subscriptionId",
        "resourceGroupName",
        "resourceName",
        "resourceLocation"
      ]
    },
    "AsymmetricEncryptedSecret": {
      "type": "object",
      "description": "Represent the secrets intended for encryption with asymmetric key pair.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the secret."
        },
        "encryptionCertThumbprint": {
          "type": "string",
          "format": "password",
          "description": "Thumbprint certificate used to encrypt \\\"Value\\\". If the value is unencrypted, it will be null.",
          "x-ms-secret": true
        },
        "encryptionAlgorithm": {
          "$ref": "#/definitions/EncryptionAlgorithm",
          "description": "The algorithm used to encrypt \"Value\"."
        }
      },
      "required": [
        "value",
        "encryptionAlgorithm"
      ]
    },
    "Authentication": {
      "type": "object",
      "description": "Authentication mechanism for IoT devices.",
      "properties": {
        "symmetricKey": {
          "$ref": "#/definitions/SymmetricKey",
          "description": "Symmetric key for authentication."
        }
      }
    },
    "AuthenticationType": {
      "type": "string",
      "description": "The authentication type.",
      "enum": [
        "Invalid",
        "AzureActiveDirectory"
      ],
      "x-ms-enum": {
        "name": "AuthenticationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "AzureActiveDirectory",
            "value": "AzureActiveDirectory"
          }
        ]
      }
    },
    "AzureContainerDataFormat": {
      "type": "string",
      "description": "Storage format used for the file represented by the share.",
      "enum": [
        "BlockBlob",
        "PageBlob",
        "AzureFile"
      ],
      "x-ms-enum": {
        "name": "AzureContainerDataFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "BlockBlob",
            "value": "BlockBlob"
          },
          {
            "name": "PageBlob",
            "value": "PageBlob"
          },
          {
            "name": "AzureFile",
            "value": "AzureFile"
          }
        ]
      }
    },
    "AzureContainerInfo": {
      "type": "object",
      "description": "Azure container mapping of the endpoint.",
      "properties": {
        "storageAccountCredentialId": {
          "type": "string",
          "description": "ID of the storage account credential used to access storage."
        },
        "containerName": {
          "type": "string",
          "description": "Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob)."
        },
        "dataFormat": {
          "$ref": "#/definitions/AzureContainerDataFormat",
          "description": "Storage format used for the file represented by the share."
        }
      },
      "required": [
        "storageAccountCredentialId",
        "containerName",
        "dataFormat"
      ]
    },
    "BandwidthSchedule": {
      "type": "object",
      "description": "The bandwidth schedule details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BandwidthScheduleProperties",
          "description": "The properties of the bandwidth schedule.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BandwidthScheduleProperties": {
      "type": "object",
      "description": "The properties of the bandwidth schedule.",
      "properties": {
        "start": {
          "type": "string",
          "description": "The start time of the schedule in UTC."
        },
        "stop": {
          "type": "string",
          "description": "The stop time of the schedule in UTC."
        },
        "rateInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "The bandwidth rate in Mbps."
        },
        "days": {
          "type": "array",
          "description": "The days of the week when this schedule is applicable.",
          "items": {
            "$ref": "#/definitions/DayOfWeek"
          }
        }
      },
      "required": [
        "start",
        "stop",
        "rateInMbps",
        "days"
      ]
    },
    "BandwidthSchedulesList": {
      "type": "object",
      "description": "The collection of bandwidth schedules.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BandwidthSchedule items on this page",
          "items": {
            "$ref": "#/definitions/BandwidthSchedule"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ClientAccessRight": {
      "type": "object",
      "description": "The mapping between a particular client IP and the type of access client has on the NFS share.",
      "properties": {
        "client": {
          "type": "string",
          "description": "IP of the client."
        },
        "accessPermission": {
          "$ref": "#/definitions/ClientPermissionType",
          "description": "Type of access to be allowed for the client."
        }
      },
      "required": [
        "client",
        "accessPermission"
      ]
    },
    "ClientPermissionType": {
      "type": "string",
      "description": "Type of access to be allowed for the client.",
      "enum": [
        "NoAccess",
        "ReadOnly",
        "ReadWrite"
      ],
      "x-ms-enum": {
        "name": "ClientPermissionType",
        "modelAsString": true,
        "values": [
          {
            "name": "NoAccess",
            "value": "NoAccess"
          },
          {
            "name": "ReadOnly",
            "value": "ReadOnly"
          },
          {
            "name": "ReadWrite",
            "value": "ReadWrite"
          }
        ]
      }
    },
    "CloudEdgeManagementRole": {
      "type": "object",
      "description": "The preview of Virtual Machine Cloud Management from the Azure supports deploying and managing VMs on your Azure Stack Edge device from Azure Portal.\nFor more information, refer to: https://docs.microsoft.com/en-us/azure/databox-online/azure-stack-edge-gpu-virtual-machine-overview\nBy using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/ for additional details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloudEdgeManagementRoleProperties",
          "description": "Properties specific to CloudEdgeManagementRole role.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Role"
        }
      ],
      "x-ms-discriminator-value": "CloudEdgeManagement"
    },
    "CloudEdgeManagementRoleProperties": {
      "type": "object",
      "description": "CloudEdgeManagement Role properties.",
      "properties": {
        "localManagementStatus": {
          "$ref": "#/definitions/RoleStatus",
          "description": "Local Edge Management Status",
          "readOnly": true
        },
        "edgeProfile": {
          "$ref": "#/definitions/EdgeProfile",
          "description": "Edge Profile of the resource",
          "readOnly": true
        },
        "roleStatus": {
          "$ref": "#/definitions/RoleStatus",
          "description": "Role status."
        }
      },
      "required": [
        "roleStatus"
      ]
    },
    "CloudError": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "The error details."
        }
      },
      "x-ms-external": true
    },
    "CloudErrorBody": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "details": {
          "type": "array",
          "description": "A list of additional details about the error.",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-ms-identifiers": []
        }
      },
      "x-ms-external": true
    },
    "ClusterCapacityViewData": {
      "type": "object",
      "description": "Cluster Compute Data.",
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "The FQDN of the cluster."
        },
        "gpuCapacity": {
          "$ref": "#/definitions/ClusterGpuCapacity",
          "description": "The cluster's GPU capacity."
        },
        "memoryCapacity": {
          "$ref": "#/definitions/ClusterMemoryCapacity",
          "description": "The cluster's memory capacity."
        },
        "lastRefreshedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last time at which the ClusterCapacityViewData was set."
        },
        "totalProvisionedNonHpnCores": {
          "type": "integer",
          "format": "int64",
          "description": "The total # of vCPUs provisioned by non-HPN VM per appliance."
        }
      }
    },
    "ClusterGpuCapacity": {
      "type": "object",
      "description": "Cluster GPU Data.",
      "properties": {
        "gpuType": {
          "type": "string",
          "description": "The cluster GPU Type."
        },
        "gpuUsedUnitsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The used GPU units count in the cluster."
        },
        "gpuFreeUnitsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The free GPU units count in the cluster."
        },
        "gpuReservedForFailoverUnitsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The GPU units count reserved for failover in the cluster."
        },
        "gpuTotalUnitsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total GPU units count in the cluster."
        }
      }
    },
    "ClusterMemoryCapacity": {
      "type": "object",
      "description": "NodeCapacityInfo defines the required information to determine the placement of a VM.",
      "properties": {
        "clusterFreeMemoryMb": {
          "type": "number",
          "format": "double",
          "description": "The free memory in the cluster in MB."
        },
        "clusterUsedMemoryMb": {
          "type": "number",
          "format": "double",
          "description": "The used memory in the cluster in MB."
        },
        "clusterFailoverMemoryMb": {
          "type": "number",
          "format": "double",
          "description": "The failover memory in the cluster in MB."
        },
        "clusterFragmentationMemoryMb": {
          "type": "number",
          "format": "double",
          "description": "The fragmentation memory in the cluster in MB."
        },
        "clusterHypervReserveMemoryMb": {
          "type": "number",
          "format": "double",
          "description": "The memory reserved for Hyper-V in the cluster in MB."
        },
        "clusterInfraVmMemoryMb": {
          "type": "number",
          "format": "double",
          "description": "The memory of the Infra VM in the cluster in MB."
        },
        "clusterTotalMemoryMb": {
          "type": "number",
          "format": "double",
          "description": "The total memory in the cluster in MB."
        },
        "clusterNonFailoverVmMb": {
          "type": "number",
          "format": "double",
          "description": "The non-failover memory in the cluster in MB."
        },
        "clusterMemoryUsedByVmsMb": {
          "type": "number",
          "format": "double",
          "description": "The memory used by VMs in the cluster in MB."
        }
      }
    },
    "ClusterStorageViewData": {
      "type": "object",
      "description": "Cluster Storage Data.",
      "properties": {
        "clusterTotalStorageMb": {
          "type": "number",
          "format": "double",
          "description": "Total storage on the cluster in MB."
        },
        "clusterFreeStorageMb": {
          "type": "number",
          "format": "double",
          "description": "The available or free storage on the cluster in MB."
        }
      }
    },
    "ClusterWitnessType": {
      "type": "string",
      "description": "Cluster Witness Type",
      "enum": [
        "None",
        "Cloud",
        "FileShare"
      ],
      "x-ms-enum": {
        "name": "ClusterWitnessType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Cloud",
            "value": "Cloud"
          },
          {
            "name": "FileShare",
            "value": "FileShare"
          }
        ]
      }
    },
    "CniConfig": {
      "type": "object",
      "description": "Cni configuration",
      "properties": {
        "type": {
          "type": "string",
          "description": "Cni type",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Cni version",
          "readOnly": true
        },
        "podSubnet": {
          "type": "string",
          "description": "Pod Subnet",
          "readOnly": true
        },
        "serviceSubnet": {
          "type": "string",
          "description": "Service subnet",
          "readOnly": true
        }
      }
    },
    "ComputeResource": {
      "type": "object",
      "description": "Compute infrastructure Resource",
      "properties": {
        "processorCount": {
          "type": "integer",
          "format": "int32",
          "description": "Processor count"
        },
        "memoryInGB": {
          "type": "integer",
          "format": "int64",
          "description": "Memory in GB"
        }
      },
      "required": [
        "processorCount",
        "memoryInGB"
      ]
    },
    "ContactDetails": {
      "type": "object",
      "description": "Contains all the contact details of the customer.",
      "properties": {
        "contactPerson": {
          "type": "string",
          "description": "The contact person name."
        },
        "companyName": {
          "type": "string",
          "description": "The name of the company."
        },
        "phone": {
          "type": "string",
          "description": "The phone number."
        },
        "emailList": {
          "type": "array",
          "description": "The email list.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "contactPerson",
        "companyName",
        "phone",
        "emailList"
      ]
    },
    "Container": {
      "type": "object",
      "description": "Represents a container on the  Data Box Edge/Gateway device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ContainerProperties",
          "description": "The container properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ContainerList": {
      "type": "object",
      "description": "Collection of all the containers on the Data Box Edge/Gateway device.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Container items on this page",
          "items": {
            "$ref": "#/definitions/Container"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ContainerProperties": {
      "type": "object",
      "description": "The container properties.",
      "properties": {
        "containerStatus": {
          "$ref": "#/definitions/ContainerStatus",
          "description": "Current status of the container.",
          "readOnly": true
        },
        "dataFormat": {
          "$ref": "#/definitions/AzureContainerDataFormat",
          "description": "DataFormat for Container"
        },
        "refreshDetails": {
          "$ref": "#/definitions/RefreshDetails",
          "description": "Details of the refresh job on this container.",
          "readOnly": true
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time when container got created.",
          "readOnly": true
        }
      },
      "required": [
        "dataFormat"
      ]
    },
    "ContainerStatus": {
      "type": "string",
      "description": "Current status of the container.",
      "enum": [
        "OK",
        "Offline",
        "Unknown",
        "Updating",
        "NeedsAttention"
      ],
      "x-ms-enum": {
        "name": "ContainerStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "OK",
            "value": "OK"
          },
          {
            "name": "Offline",
            "value": "Offline"
          },
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "NeedsAttention",
            "value": "NeedsAttention"
          }
        ]
      }
    },
    "DCAccessCode": {
      "type": "object",
      "description": "DC Access code in the case of Self Managed Shipping.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DCAccessCodeProperties",
          "description": "DCAccessCode properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DCAccessCodeProperties": {
      "type": "object",
      "description": "DCAccessCode Properties.",
      "properties": {
        "authCode": {
          "type": "string",
          "description": "DCAccess Code for the Self Managed shipment."
        }
      }
    },
    "DataBoxEdgeDevice": {
      "type": "object",
      "description": "The Data Box Edge/Gateway device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataBoxEdgeDeviceProperties",
          "description": "The properties of the Data Box Edge/Gateway device.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU type."
        },
        "etag": {
          "type": "string",
          "description": "The etag for the devices."
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity",
          "description": "Msi identity of the resource"
        },
        "kind": {
          "$ref": "#/definitions/DataBoxEdgeDeviceKind",
          "description": "The kind of the device.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DataBoxEdgeDeviceExtendedInfo": {
      "type": "object",
      "description": "The extended Info of the Data Box Edge/Gateway device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataBoxEdgeDeviceExtendedInfoProperties",
          "description": "The extended info properties.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of DataBoxEdgeDevice",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ]
    },
    "DataBoxEdgeDeviceExtendedInfoPatch": {
      "type": "object",
      "description": "The Data Box Edge/Gateway device extended info patch.",
      "properties": {
        "clientSecretStoreId": {
          "type": "string",
          "description": "The Key Vault ARM Id for client secrets"
        },
        "clientSecretStoreUrl": {
          "type": "string",
          "description": "The url to access the Client Key Vault"
        },
        "channelIntegrityKeyName": {
          "type": "string",
          "description": "The name for Channel Integrity Key stored in the Client Key Vault"
        },
        "channelIntegrityKeyVersion": {
          "type": "string",
          "description": "The version of Channel Integrity Key stored in the Client Key Vault"
        },
        "syncStatus": {
          "$ref": "#/definitions/KeyVaultSyncStatus",
          "description": "For changing or to initiate the resync to key-vault set the status to KeyVaultSyncPending, rest of the status will not be applicable."
        }
      }
    },
    "DataBoxEdgeDeviceExtendedInfoProperties": {
      "type": "object",
      "description": "The properties of the Data Box Edge/Gateway device extended info.",
      "properties": {
        "encryptionKeyThumbprint": {
          "type": "string",
          "description": "The digital signature of encrypted certificate."
        },
        "encryptionKey": {
          "type": "string",
          "description": "The public part of the encryption certificate. Client uses this to encrypt any secret."
        },
        "resourceKey": {
          "type": "string",
          "description": "The Resource ID of the Resource.",
          "readOnly": true
        },
        "clientSecretStoreId": {
          "type": "string",
          "description": "The Key Vault ARM Id for client secrets"
        },
        "clientSecretStoreUrl": {
          "type": "string",
          "description": "The url to access the Client Key Vault"
        },
        "channelIntegrityKeyName": {
          "type": "string",
          "description": "The name of Channel Integrity Key stored in the Client Key Vault"
        },
        "channelIntegrityKeyVersion": {
          "type": "string",
          "description": "The version of Channel Integrity Key stored in the Client Key Vault"
        },
        "keyVaultSyncStatus": {
          "$ref": "#/definitions/KeyVaultSyncStatus",
          "description": "Key vault sync status"
        },
        "deviceSecrets": {
          "type": "object",
          "description": "Device secrets, will be returned only with ODataFilter $expand=deviceSecrets",
          "additionalProperties": {
            "$ref": "#/definitions/Secret"
          },
          "readOnly": true
        },
        "clusterWitnessType": {
          "$ref": "#/definitions/ClusterWitnessType",
          "description": "Cluster Witness Type",
          "readOnly": true
        },
        "fileShareWitnessLocation": {
          "type": "string",
          "description": "The witness location of file share.",
          "readOnly": true
        },
        "fileShareWitnessUsername": {
          "type": "string",
          "description": "The username of file share.",
          "readOnly": true
        },
        "cloudWitnessStorageAccountName": {
          "type": "string",
          "description": "The Cloud Witness Storage account name.",
          "readOnly": true
        },
        "cloudWitnessContainerName": {
          "type": "string",
          "description": "The Container for cloud witness in the storage account.",
          "readOnly": true
        },
        "cloudWitnessStorageEndpoint": {
          "type": "string",
          "description": "The Azure service endpoint of the cloud witness storage account.",
          "readOnly": true
        }
      }
    },
    "DataBoxEdgeDeviceKind": {
      "type": "string",
      "description": "The kind of the device.",
      "enum": [
        "AzureDataBoxGateway",
        "AzureStackEdge",
        "AzureStackHub",
        "AzureModularDataCentre"
      ],
      "x-ms-enum": {
        "name": "DataBoxEdgeDeviceKind",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureDataBoxGateway",
            "value": "AzureDataBoxGateway"
          },
          {
            "name": "AzureStackEdge",
            "value": "AzureStackEdge"
          },
          {
            "name": "AzureStackHub",
            "value": "AzureStackHub"
          },
          {
            "name": "AzureModularDataCentre",
            "value": "AzureModularDataCentre"
          }
        ]
      }
    },
    "DataBoxEdgeDeviceList": {
      "type": "object",
      "description": "The collection of Data Box Edge/Gateway devices.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataBoxEdgeDevice items on this page",
          "items": {
            "$ref": "#/definitions/DataBoxEdgeDevice"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataBoxEdgeDevicePatch": {
      "type": "object",
      "description": "The Data Box Edge/Gateway device patch.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags attached to the Data Box Edge/Gateway resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity",
          "description": "Msi identity of the resource"
        },
        "properties": {
          "$ref": "#/definitions/DataBoxEdgeDevicePropertiesPatch",
          "description": "The properties associated with the Data Box Edge/Gateway resource",
          "x-ms-client-flatten": true
        }
      }
    },
    "DataBoxEdgeDeviceProperties": {
      "type": "object",
      "description": "The properties of the Data Box Edge/Gateway device.",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "DataBoxEdge Device Properties",
          "readOnly": true
        },
        "dataBoxEdgeDeviceStatus": {
          "$ref": "#/definitions/DataBoxEdgeDeviceStatus",
          "description": "The status of the Data Box Edge/Gateway device.",
          "readOnly": true
        },
        "serialNumber": {
          "type": "string",
          "description": "The Serial Number of Data Box Edge/Gateway device.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The Description of the Data Box Edge/Gateway device.",
          "readOnly": true
        },
        "modelDescription": {
          "type": "string",
          "description": "The description of the Data Box Edge/Gateway device model.",
          "readOnly": true
        },
        "deviceType": {
          "$ref": "#/definitions/DeviceType",
          "description": "The type of the Data Box Edge/Gateway device.",
          "readOnly": true
        },
        "friendlyName": {
          "type": "string",
          "description": "The Data Box Edge/Gateway device name.",
          "readOnly": true
        },
        "culture": {
          "type": "string",
          "description": "The Data Box Edge/Gateway device culture.",
          "readOnly": true
        },
        "deviceModel": {
          "type": "string",
          "description": "The Data Box Edge/Gateway device model.",
          "readOnly": true
        },
        "deviceSoftwareVersion": {
          "type": "string",
          "description": "The Data Box Edge/Gateway device software version.",
          "readOnly": true
        },
        "deviceLocalCapacity": {
          "type": "integer",
          "format": "int64",
          "description": "The Data Box Edge/Gateway device local capacity in MB.",
          "readOnly": true
        },
        "timeZone": {
          "type": "string",
          "description": "The Data Box Edge/Gateway device timezone.",
          "readOnly": true
        },
        "deviceHcsVersion": {
          "type": "string",
          "description": "The device software version number of the device (eg: 1.2.18105.6).",
          "readOnly": true
        },
        "configuredRoleTypes": {
          "type": "array",
          "description": "Type of compute roles configured.",
          "items": {
            "$ref": "#/definitions/RoleTypes"
          },
          "readOnly": true
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes in the cluster.",
          "readOnly": true
        },
        "resourceMoveDetails": {
          "$ref": "#/definitions/ResourceMoveDetails",
          "description": "The details of the move operation on this resource.",
          "readOnly": true
        },
        "edgeProfile": {
          "$ref": "#/definitions/EdgeProfile",
          "description": "The details of Edge Profile for this resource",
          "readOnly": true
        },
        "dataResidency": {
          "$ref": "#/definitions/DataResidency",
          "description": "The details of data-residency related properties for this resource"
        },
        "kubernetesWorkloadProfile": {
          "type": "string",
          "description": "Kubernetes Workload Profile",
          "readOnly": true
        }
      }
    },
    "DataBoxEdgeDevicePropertiesPatch": {
      "type": "object",
      "description": "The Data Box Edge/Gateway device properties patch.",
      "properties": {
        "edgeProfile": {
          "$ref": "#/definitions/EdgeProfilePatch",
          "description": "Edge Profile property of the Data Box Edge/Gateway device"
        }
      }
    },
    "DataBoxEdgeDeviceStatus": {
      "type": "string",
      "description": "The status of the Data Box Edge/Gateway device.",
      "enum": [
        "ReadyToSetup",
        "Online",
        "Offline",
        "NeedsAttention",
        "Disconnected",
        "PartiallyDisconnected",
        "Maintenance"
      ],
      "x-ms-enum": {
        "name": "DataBoxEdgeDeviceStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "ReadyToSetup",
            "value": "ReadyToSetup"
          },
          {
            "name": "Online",
            "value": "Online"
          },
          {
            "name": "Offline",
            "value": "Offline"
          },
          {
            "name": "NeedsAttention",
            "value": "NeedsAttention"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected"
          },
          {
            "name": "PartiallyDisconnected",
            "value": "PartiallyDisconnected"
          },
          {
            "name": "Maintenance",
            "value": "Maintenance"
          }
        ]
      }
    },
    "DataBoxEdgeSku": {
      "type": "object",
      "description": "The Sku information.",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "The Sku name.",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "The Sku kind.",
          "readOnly": true
        },
        "tier": {
          "$ref": "#/definitions/SkuTier",
          "description": "The Sku tier.",
          "readOnly": true
        },
        "size": {
          "type": "string",
          "description": "The Sku kind.",
          "readOnly": true
        },
        "family": {
          "type": "string",
          "description": "The Sku family.",
          "readOnly": true
        },
        "locations": {
          "type": "array",
          "description": "Availability of the Sku for the region.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "apiVersions": {
          "type": "array",
          "description": "The API versions in which Sku is available.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "locationInfo": {
          "type": "array",
          "description": "Availability of the Sku for the location/zone/site.",
          "items": {
            "$ref": "#/definitions/SkuLocationInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "location"
          ]
        },
        "costs": {
          "type": "array",
          "description": "The pricing info of the Sku.",
          "items": {
            "$ref": "#/definitions/SkuCost"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "meterId"
          ]
        },
        "signupOption": {
          "$ref": "#/definitions/SkuSignupOption",
          "description": "Sku can be signed up by customer or not.",
          "readOnly": true
        },
        "version": {
          "$ref": "#/definitions/SkuVersion",
          "description": "Availability of the Sku as preview/stable.",
          "readOnly": true
        },
        "availability": {
          "$ref": "#/definitions/SkuAvailability",
          "description": "Links to the next set of results",
          "readOnly": true
        },
        "shipmentTypes": {
          "type": "array",
          "description": "List of Shipment Types supported by this SKU",
          "items": {
            "$ref": "#/definitions/ShipmentType"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "capabilities": {
          "type": "array",
          "description": "The capability info of the SKU.",
          "items": {
            "$ref": "#/definitions/SkuCapability"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "DataBoxEdgeSkuList": {
      "type": "object",
      "description": "List of SKU Information objects.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataBoxEdgeSku items on this page",
          "items": {
            "$ref": "#/definitions/DataBoxEdgeSku"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name",
            "resourceType"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataPolicy": {
      "type": "string",
      "description": "Data policy of the share.",
      "enum": [
        "Cloud",
        "Local"
      ],
      "x-ms-enum": {
        "name": "DataPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Cloud",
            "value": "Cloud"
          },
          {
            "name": "Local",
            "value": "Local"
          }
        ]
      }
    },
    "DataResidency": {
      "type": "object",
      "description": "Wraps data-residency related information for edge-resource and this should be used with ARM layer.",
      "properties": {
        "type": {
          "$ref": "#/definitions/DataResidencyType",
          "description": "DataResidencyType enum"
        }
      }
    },
    "DataResidencyType": {
      "type": "string",
      "description": "DataResidencyType enum",
      "enum": [
        "GeoZoneReplication",
        "ZoneReplication"
      ],
      "x-ms-enum": {
        "name": "DataResidencyType",
        "modelAsString": true,
        "values": [
          {
            "name": "GeoZoneReplication",
            "value": "GeoZoneReplication"
          },
          {
            "name": "ZoneReplication",
            "value": "ZoneReplication"
          }
        ]
      }
    },
    "DayOfWeek": {
      "type": "string",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeek",
        "modelAsString": true,
        "values": [
          {
            "name": "Sunday",
            "value": "Sunday"
          },
          {
            "name": "Monday",
            "value": "Monday"
          },
          {
            "name": "Tuesday",
            "value": "Tuesday"
          },
          {
            "name": "Wednesday",
            "value": "Wednesday"
          },
          {
            "name": "Thursday",
            "value": "Thursday"
          },
          {
            "name": "Friday",
            "value": "Friday"
          },
          {
            "name": "Saturday",
            "value": "Saturday"
          }
        ]
      },
      "x-ms-identifiers": []
    },
    "DeviceCapacityInfo": {
      "type": "object",
      "description": "Object for Capturing DeviceCapacityInfo",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeviceCapacityInfoProperties",
          "description": "The device capacity properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DeviceCapacityInfoProperties": {
      "type": "object",
      "description": "The properties of Device Capacity Info",
      "properties": {
        "timeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of request in UTC"
        },
        "clusterStorageCapacityInfo": {
          "$ref": "#/definitions/ClusterStorageViewData",
          "description": "Cluster capacity data for storage resources (CSV)."
        },
        "clusterComputeCapacityInfo": {
          "$ref": "#/definitions/ClusterCapacityViewData",
          "description": "Cluster capacity data for compute resources (Memory and GPU)."
        },
        "nodeCapacityInfos": {
          "type": "object",
          "description": "The dictionary of individual node names and node capacities in the cluster.",
          "additionalProperties": {
            "$ref": "#/definitions/HostCapacity"
          }
        }
      }
    },
    "DeviceCapacityRequestInfo": {
      "type": "object",
      "description": "Object for Capturing DeviceCapacityRequestInfo",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeviceCapacityRequestInfoProperties",
          "description": "The properties of the Device Capacity Request.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "DeviceCapacityRequestInfoProperties": {
      "type": "object",
      "description": "Properties of Device Capacity Request Info containing VM's to be checked and their corresponding results.",
      "properties": {
        "vmPlacementQuery": {
          "type": "array",
          "description": "Array containing the sizes of the VMs for checking if its feasible to create them on the appliance.",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "x-ms-identifiers": []
        },
        "vmPlacementResults": {
          "type": "array",
          "description": "Array of the VMs of the sizes in VmSizes can be provisioned on the appliance.",
          "items": {
            "$ref": "#/definitions/VmPlacementRequestResult"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "vmPlacementQuery"
      ]
    },
    "DeviceType": {
      "type": "string",
      "description": "The type of the Data Box Edge/Gateway device.",
      "enum": [
        "DataBoxEdgeDevice"
      ],
      "x-ms-enum": {
        "name": "DeviceType",
        "modelAsString": true,
        "values": [
          {
            "name": "DataBoxEdgeDevice",
            "value": "DataBoxEdgeDevice"
          }
        ]
      }
    },
    "DiagnosticProactiveLogCollectionSettings": {
      "type": "object",
      "description": "The diagnostic proactive log collection settings of a device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProactiveLogCollectionSettingsProperties",
          "description": "Properties of the diagnostic proactive log collection settings.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DiagnosticRemoteSupportSettings": {
      "type": "object",
      "description": "The remote support settings of a device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiagnosticRemoteSupportSettingsProperties",
          "description": "Properties of the remote support  settings.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DiagnosticRemoteSupportSettingsProperties": {
      "type": "object",
      "description": "The properties of remote support settings.",
      "properties": {
        "remoteSupportSettingsList": {
          "type": "array",
          "description": "Remote support settings list according to the RemoteApplicationType",
          "items": {
            "$ref": "#/definitions/RemoteSupportSettings"
          },
          "x-ms-identifiers": [
            "remoteApplicationType"
          ]
        }
      }
    },
    "DownloadPhase": {
      "type": "string",
      "description": "The download phase.",
      "enum": [
        "Unknown",
        "Initializing",
        "Downloading",
        "Verifying"
      ],
      "x-ms-enum": {
        "name": "DownloadPhase",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Initializing",
            "value": "Initializing"
          },
          {
            "name": "Downloading",
            "value": "Downloading"
          },
          {
            "name": "Verifying",
            "value": "Verifying"
          }
        ]
      }
    },
    "EdgeProfile": {
      "type": "object",
      "description": "Details about Edge Profile for the resource",
      "properties": {
        "subscription": {
          "$ref": "#/definitions/EdgeProfileSubscription",
          "description": "Edge Profile Subscription"
        }
      }
    },
    "EdgeProfilePatch": {
      "type": "object",
      "description": "The Data Box Edge/Gateway Edge Profile patch.",
      "properties": {
        "subscription": {
          "$ref": "#/definitions/EdgeProfileSubscriptionPatch",
          "description": "The Data Box Edge/Gateway Edge Profile Subscription patch"
        }
      }
    },
    "EdgeProfileSubscription": {
      "type": "object",
      "description": "Subscription details for the Edge Profile",
      "properties": {
        "registrationId": {
          "type": "string",
          "description": "Edge Subscription Registration ID"
        },
        "id": {
          "type": "string",
          "description": "ARM ID of the subscription"
        },
        "state": {
          "$ref": "#/definitions/SubscriptionState"
        },
        "registrationDate": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SubscriptionProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "EdgeProfileSubscriptionPatch": {
      "type": "object",
      "description": "The Data Box Edge/Gateway Edge Profile Subscription patch.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The path ID that uniquely identifies the subscription of the edge profile."
        }
      }
    },
    "EncryptionAlgorithm": {
      "type": "string",
      "description": "The algorithm used to encrypt \"Value\".",
      "enum": [
        "None",
        "AES256",
        "RSAES_PKCS1_v_1_5"
      ],
      "x-ms-enum": {
        "name": "EncryptionAlgorithm",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "AES256",
            "value": "AES256"
          },
          {
            "name": "RSAES_PKCS1_v_1_5",
            "value": "RSAES_PKCS1_v_1_5"
          }
        ]
      }
    },
    "EtcdInfo": {
      "type": "object",
      "description": "Etcd configuration",
      "properties": {
        "type": {
          "type": "string",
          "description": "Etcd type",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Etcd version",
          "readOnly": true
        }
      }
    },
    "FileEventTrigger": {
      "type": "object",
      "description": "Trigger details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileTriggerProperties",
          "description": "File trigger properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "x-ms-discriminator-value": "FileEvent"
    },
    "FileSourceInfo": {
      "type": "object",
      "description": "File source details.",
      "properties": {
        "shareId": {
          "type": "string",
          "description": "File share ID."
        }
      },
      "required": [
        "shareId"
      ]
    },
    "FileTriggerProperties": {
      "type": "object",
      "description": "File trigger properties.",
      "properties": {
        "sourceInfo": {
          "$ref": "#/definitions/FileSourceInfo",
          "description": "File event source details."
        },
        "sinkInfo": {
          "$ref": "#/definitions/RoleSinkInfo",
          "description": "Role sink info."
        },
        "customContextTag": {
          "type": "string",
          "description": "A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.",
          "maxLength": 192
        }
      },
      "required": [
        "sourceInfo",
        "sinkInfo"
      ]
    },
    "GenerateCertResponse": {
      "type": "object",
      "description": "Used in activation key generation flow.",
      "properties": {
        "publicKey": {
          "type": "string",
          "description": "Gets or sets base64 encoded certificate raw data,\nthis is the public part needed to be uploaded to cert vault"
        },
        "privateKey": {
          "type": "string",
          "format": "password",
          "description": "Gets or sets base64 encoded private part of the certificate,\nneeded to form the activation key",
          "x-ms-secret": true
        },
        "expiryTimeInUTC": {
          "type": "string",
          "description": "Gets or sets expiry time in UTC"
        }
      }
    },
    "HostCapacity": {
      "type": "object",
      "description": "Host Capacity Data.",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "The name of the host."
        },
        "effectiveAvailableMemoryMbOnHost": {
          "type": "integer",
          "format": "int64",
          "description": "The available memory on the host accounting for VM placement size and any host VM reservations."
        },
        "availableGpuCount": {
          "type": "integer",
          "format": "int32",
          "description": "The available amount of GPUs on the host to use after accounting for GPUS used by reservations on the host."
        },
        "vmUsedMemory": {
          "type": "object",
          "description": "The VM used memory per VmId.",
          "additionalProperties": {
            "$ref": "#/definitions/VmMemory"
          }
        },
        "gpuType": {
          "type": "string",
          "description": "The GPU type of the VM."
        },
        "numaNodesData": {
          "type": "array",
          "description": "The numa nodes information for Hpn VMs.",
          "items": {
            "$ref": "#/definitions/NumaNodeData"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "HostPlatformType": {
      "type": "string",
      "description": "Platform where the runtime is hosted.",
      "enum": [
        "KubernetesCluster",
        "LinuxVM"
      ],
      "x-ms-enum": {
        "name": "HostPlatformType",
        "modelAsString": true,
        "values": [
          {
            "name": "KubernetesCluster",
            "value": "KubernetesCluster"
          },
          {
            "name": "LinuxVM",
            "value": "LinuxVM"
          }
        ]
      }
    },
    "ImageRepositoryCredential": {
      "type": "object",
      "description": "Image repository credential.",
      "properties": {
        "imageRepositoryUrl": {
          "type": "string",
          "description": "Image repository url (e.g.: mcr.microsoft.com)."
        },
        "userName": {
          "type": "string",
          "description": "Repository user name."
        },
        "password": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "Repository user password."
        }
      },
      "required": [
        "imageRepositoryUrl",
        "userName"
      ]
    },
    "InstallRebootBehavior": {
      "type": "string",
      "description": "Indicates if updates are available and at least one of the updates needs a reboot.",
      "enum": [
        "NeverReboots",
        "RequiresReboot",
        "RequestReboot"
      ],
      "x-ms-enum": {
        "name": "InstallRebootBehavior",
        "modelAsString": true,
        "values": [
          {
            "name": "NeverReboots",
            "value": "NeverReboots"
          },
          {
            "name": "RequiresReboot",
            "value": "RequiresReboot"
          },
          {
            "name": "RequestReboot",
            "value": "RequestReboot"
          }
        ]
      }
    },
    "InstallationImpact": {
      "type": "string",
      "description": "Impact of Installing an updateType",
      "enum": [
        "None",
        "DeviceRebooted",
        "KubernetesWorkloadsDown"
      ],
      "x-ms-enum": {
        "name": "InstallationImpact",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "DeviceRebooted",
            "value": "DeviceRebooted"
          },
          {
            "name": "KubernetesWorkloadsDown",
            "value": "KubernetesWorkloadsDown"
          }
        ]
      }
    },
    "IoTAddon": {
      "type": "object",
      "description": "IoT Addon.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IoTAddonProperties",
          "description": "Properties specific to IOT addon.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Addon"
        }
      ],
      "x-ms-discriminator-value": "IotEdge"
    },
    "IoTAddonProperties": {
      "type": "object",
      "description": "IoT addon properties.",
      "properties": {
        "ioTDeviceDetails": {
          "$ref": "#/definitions/IoTDeviceInfo",
          "description": "IoT device metadata to which appliance needs to be connected."
        },
        "ioTEdgeDeviceDetails": {
          "$ref": "#/definitions/IoTDeviceInfo",
          "description": "IoT edge device to which the IoT Addon needs to be configured."
        },
        "version": {
          "type": "string",
          "description": "Version of IoT running on the appliance.",
          "readOnly": true
        },
        "hostPlatform": {
          "$ref": "#/definitions/PlatformType",
          "description": "Host OS supported by the IoT addon.",
          "readOnly": true
        },
        "hostPlatformType": {
          "$ref": "#/definitions/HostPlatformType",
          "description": "Platform where the runtime is hosted.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/AddonState",
          "description": "Addon Provisioning State",
          "readOnly": true
        }
      },
      "required": [
        "ioTDeviceDetails",
        "ioTEdgeDeviceDetails"
      ]
    },
    "IoTDeviceInfo": {
      "type": "object",
      "description": "Metadata of IoT device/IoT Edge device to be configured.",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ID of the IoT device/edge device."
        },
        "ioTHostHub": {
          "type": "string",
          "description": "Host name for the IoT hub associated to the device."
        },
        "ioTHostHubId": {
          "type": "string",
          "description": "Id for the IoT hub associated to the device."
        },
        "authentication": {
          "$ref": "#/definitions/Authentication",
          "description": "Encrypted IoT device/IoT edge device connection string."
        }
      },
      "required": [
        "deviceId",
        "ioTHostHub"
      ]
    },
    "IoTEdgeAgentInfo": {
      "type": "object",
      "description": "IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if specified.",
      "properties": {
        "imageName": {
          "type": "string",
          "description": "Name of the IoT edge agent image."
        },
        "tag": {
          "type": "string",
          "description": "Image Tag."
        },
        "imageRepository": {
          "$ref": "#/definitions/ImageRepositoryCredential",
          "description": "Image repository details."
        }
      },
      "required": [
        "imageName",
        "tag"
      ]
    },
    "IoTRole": {
      "type": "object",
      "description": "Compute role.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IoTRoleProperties",
          "description": "Properties specific to IoT role.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Role"
        }
      ],
      "x-ms-discriminator-value": "IOT"
    },
    "IoTRoleProperties": {
      "type": "object",
      "description": "IoT role properties.",
      "properties": {
        "hostPlatform": {
          "$ref": "#/definitions/PlatformType",
          "description": "Host OS supported by the IoT role."
        },
        "ioTDeviceDetails": {
          "$ref": "#/definitions/IoTDeviceInfo",
          "description": "IoT device metadata to which data box edge device needs to be connected."
        },
        "ioTEdgeDeviceDetails": {
          "$ref": "#/definitions/IoTDeviceInfo",
          "description": "IoT edge device to which the IoT role needs to be configured."
        },
        "shareMappings": {
          "type": "array",
          "description": "Mount points of shares in role(s).",
          "items": {
            "$ref": "#/definitions/MountPointMap"
          },
          "x-ms-identifiers": [
            "shareId"
          ]
        },
        "ioTEdgeAgentInfo": {
          "$ref": "#/definitions/IoTEdgeAgentInfo",
          "description": "Iot edge agent details to download the agent and bootstrap iot runtime."
        },
        "hostPlatformType": {
          "$ref": "#/definitions/HostPlatformType",
          "description": "Platform where the Iot runtime is hosted.",
          "readOnly": true
        },
        "computeResource": {
          "$ref": "#/definitions/ComputeResource",
          "description": "Resource allocation"
        },
        "roleStatus": {
          "$ref": "#/definitions/RoleStatus",
          "description": "Role status."
        }
      },
      "required": [
        "hostPlatform",
        "ioTDeviceDetails",
        "ioTEdgeDeviceDetails",
        "roleStatus"
      ]
    },
    "Ipv4Config": {
      "type": "object",
      "description": "Details related to the IPv4 address configuration.",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "The IPv4 address of the network adapter.",
          "readOnly": true
        },
        "subnet": {
          "type": "string",
          "description": "The IPv4 subnet of the network adapter.",
          "readOnly": true
        },
        "gateway": {
          "type": "string",
          "description": "The IPv4 gateway of the network adapter.",
          "readOnly": true
        }
      }
    },
    "Ipv6Config": {
      "type": "object",
      "description": "Details related to the IPv6 address configuration.",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "The IPv6 address of the network adapter.",
          "readOnly": true
        },
        "prefixLength": {
          "type": "integer",
          "format": "int32",
          "description": "The IPv6 prefix of the network adapter.",
          "readOnly": true
        },
        "gateway": {
          "type": "string",
          "description": "The IPv6 gateway of the network adapter.",
          "readOnly": true
        }
      }
    },
    "Job": {
      "type": "object",
      "description": "A device job.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The properties of the job.",
          "x-ms-client-flatten": true
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "description": "The current status of the job.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time at which the job started.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time at which the job completed.",
          "readOnly": true
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "The percentage of the job that is complete.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/JobErrorDetails",
          "description": "The error details.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "JobErrorDetails": {
      "type": "object",
      "description": "The job error information containing the list of job errors.",
      "properties": {
        "errorDetails": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/JobErrorItem"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "code": {
          "type": "string",
          "description": "The code intended for programmatic access.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The message that describes the error in detail.",
          "readOnly": true
        }
      }
    },
    "JobErrorItem": {
      "type": "object",
      "description": "The job error items.",
      "properties": {
        "recommendations": {
          "type": "array",
          "description": "The recommended actions.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "code": {
          "type": "string",
          "description": "The code intended for programmatic access.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The message that describes the error in detail.",
          "readOnly": true
        }
      }
    },
    "JobProperties": {
      "type": "object",
      "description": "The properties for the job.",
      "properties": {
        "jobType": {
          "$ref": "#/definitions/JobType",
          "description": "The type of the job.",
          "readOnly": true
        },
        "currentStage": {
          "$ref": "#/definitions/UpdateOperationStage",
          "description": "Current stage of the update operation.",
          "readOnly": true
        },
        "downloadProgress": {
          "$ref": "#/definitions/UpdateDownloadProgress",
          "description": "The download progress.",
          "readOnly": true
        },
        "installProgress": {
          "$ref": "#/definitions/UpdateInstallProgress",
          "description": "The install progress.",
          "readOnly": true
        },
        "totalRefreshErrors": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of errors encountered during the refresh process.",
          "readOnly": true
        },
        "errorManifestFile": {
          "type": "string",
          "description": "Local share/remote container relative path to the error manifest file of the refresh.",
          "readOnly": true
        },
        "refreshedEntityId": {
          "type": "string",
          "description": "ARM ID of the entity that was refreshed.",
          "readOnly": true
        },
        "folder": {
          "type": "string",
          "description": "If only subfolders need to be refreshed, then the subfolder path inside the share or container. (The path is empty if there are no subfolders.)"
        }
      }
    },
    "JobStatus": {
      "type": "string",
      "description": "The current status of the job.",
      "enum": [
        "Invalid",
        "Running",
        "Succeeded",
        "Failed",
        "Canceled",
        "Paused",
        "Scheduled"
      ],
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Running",
            "value": "Running"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Paused",
            "value": "Paused"
          },
          {
            "name": "Scheduled",
            "value": "Scheduled"
          }
        ]
      }
    },
    "JobType": {
      "type": "string",
      "description": "The type of the job.",
      "enum": [
        "Invalid",
        "ScanForUpdates",
        "DownloadUpdates",
        "InstallUpdates",
        "RefreshShare",
        "RefreshContainer",
        "Backup",
        "Restore",
        "TriggerSupportPackage"
      ],
      "x-ms-enum": {
        "name": "JobType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "ScanForUpdates",
            "value": "ScanForUpdates"
          },
          {
            "name": "DownloadUpdates",
            "value": "DownloadUpdates"
          },
          {
            "name": "InstallUpdates",
            "value": "InstallUpdates"
          },
          {
            "name": "RefreshShare",
            "value": "RefreshShare"
          },
          {
            "name": "RefreshContainer",
            "value": "RefreshContainer"
          },
          {
            "name": "Backup",
            "value": "Backup"
          },
          {
            "name": "Restore",
            "value": "Restore"
          },
          {
            "name": "TriggerSupportPackage",
            "value": "TriggerSupportPackage"
          }
        ]
      }
    },
    "KeyVaultSyncStatus": {
      "type": "string",
      "description": "For changing or to initiate the resync to key-vault set the status to KeyVaultSyncPending, rest of the status will not be applicable.",
      "enum": [
        "KeyVaultSynced",
        "KeyVaultSyncFailed",
        "KeyVaultNotConfigured",
        "KeyVaultSyncPending",
        "KeyVaultSyncing",
        "KeyVaultNotSynced"
      ],
      "x-ms-enum": {
        "name": "KeyVaultSyncStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "KeyVaultSynced",
            "value": "KeyVaultSynced"
          },
          {
            "name": "KeyVaultSyncFailed",
            "value": "KeyVaultSyncFailed"
          },
          {
            "name": "KeyVaultNotConfigured",
            "value": "KeyVaultNotConfigured"
          },
          {
            "name": "KeyVaultSyncPending",
            "value": "KeyVaultSyncPending"
          },
          {
            "name": "KeyVaultSyncing",
            "value": "KeyVaultSyncing"
          },
          {
            "name": "KeyVaultNotSynced",
            "value": "KeyVaultNotSynced"
          }
        ]
      }
    },
    "KubernetesClusterInfo": {
      "type": "object",
      "description": "Kubernetes cluster configuration",
      "properties": {
        "etcdInfo": {
          "$ref": "#/definitions/EtcdInfo",
          "description": "Etcd configuration",
          "readOnly": true
        },
        "nodes": {
          "type": "array",
          "description": "Kubernetes cluster nodes",
          "items": {
            "$ref": "#/definitions/NodeInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name",
            "type"
          ]
        },
        "version": {
          "type": "string",
          "description": "Kubernetes cluster version"
        }
      },
      "required": [
        "version"
      ]
    },
    "KubernetesIPConfiguration": {
      "type": "object",
      "description": "Kubernetes node IP configuration",
      "properties": {
        "port": {
          "type": "string",
          "description": "Port of the Kubernetes node.",
          "readOnly": true
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address of the Kubernetes node."
        }
      }
    },
    "KubernetesNodeType": {
      "type": "string",
      "description": "Node type - Master/Worker",
      "enum": [
        "Invalid",
        "Master",
        "Worker"
      ],
      "x-ms-enum": {
        "name": "KubernetesNodeType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Master",
            "value": "Master"
          },
          {
            "name": "Worker",
            "value": "Worker"
          }
        ]
      }
    },
    "KubernetesRole": {
      "type": "object",
      "description": "The limited preview of Kubernetes Cluster Management from the Azure supports:\n1. Using a simple turn-key option in Azure Portal, deploy a Kubernetes cluster on your Azure Stack Edge device.\n2. Configure Kubernetes cluster running on your device with Arc enabled Kubernetes with a click of a button in the Azure Portal.\nAzure Arc enables organizations to view, manage, and govern their on-premises Kubernetes clusters using the Azure Portal, command line tools, and APIs.\n3. Easily configure Persistent Volumes using SMB and NFS shares for storing container data.\nFor more information, refer to the document here: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8-Cloud-Management-20210323.pdf\nOr Demo: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8S-Cloud-Management-20210323.mp4\nBy using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/",
      "properties": {
        "properties": {
          "$ref": "#/definitions/KubernetesRoleProperties",
          "description": "Properties specific to Kubernetes role.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Role"
        }
      ],
      "x-ms-discriminator-value": "Kubernetes"
    },
    "KubernetesRoleCompute": {
      "type": "object",
      "description": "Kubernetes role compute resource",
      "properties": {
        "vmProfile": {
          "type": "string",
          "description": "VM profile"
        },
        "memoryInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Memory in bytes",
          "readOnly": true
        },
        "processorCount": {
          "type": "integer",
          "format": "int32",
          "description": "Processor count",
          "readOnly": true
        }
      },
      "required": [
        "vmProfile"
      ]
    },
    "KubernetesRoleNetwork": {
      "type": "object",
      "description": "Kubernetes role network resource",
      "properties": {
        "cniConfig": {
          "$ref": "#/definitions/CniConfig",
          "description": "Cni configuration",
          "readOnly": true
        },
        "loadBalancerConfig": {
          "$ref": "#/definitions/LoadBalancerConfig",
          "description": "Load balancer configuration",
          "readOnly": true
        }
      }
    },
    "KubernetesRoleProperties": {
      "type": "object",
      "description": "Kubernetes role properties.",
      "properties": {
        "hostPlatform": {
          "$ref": "#/definitions/PlatformType",
          "description": "Host OS supported by the Kubernetes role."
        },
        "provisioningState": {
          "$ref": "#/definitions/KubernetesState",
          "description": "State of Kubernetes deployment",
          "readOnly": true
        },
        "hostPlatformType": {
          "$ref": "#/definitions/HostPlatformType",
          "description": "Platform where the runtime is hosted.",
          "readOnly": true
        },
        "kubernetesClusterInfo": {
          "$ref": "#/definitions/KubernetesClusterInfo",
          "description": "Kubernetes cluster configuration"
        },
        "kubernetesRoleResources": {
          "$ref": "#/definitions/KubernetesRoleResources",
          "description": "Kubernetes role resources"
        },
        "roleStatus": {
          "$ref": "#/definitions/RoleStatus",
          "description": "Role status."
        }
      },
      "required": [
        "hostPlatform",
        "kubernetesClusterInfo",
        "kubernetesRoleResources",
        "roleStatus"
      ]
    },
    "KubernetesRoleResources": {
      "type": "object",
      "description": "Kubernetes role resources",
      "properties": {
        "storage": {
          "$ref": "#/definitions/KubernetesRoleStorage",
          "description": "Kubernetes role storage resource"
        },
        "compute": {
          "$ref": "#/definitions/KubernetesRoleCompute",
          "description": "Kubernetes role compute resource"
        },
        "network": {
          "$ref": "#/definitions/KubernetesRoleNetwork",
          "description": "Kubernetes role network resource",
          "readOnly": true
        }
      },
      "required": [
        "compute"
      ]
    },
    "KubernetesRoleStorage": {
      "type": "object",
      "description": "Kubernetes role storage resource",
      "properties": {
        "storageClasses": {
          "type": "array",
          "description": "Kubernetes storage class info.",
          "items": {
            "$ref": "#/definitions/KubernetesRoleStorageClassInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name",
            "type"
          ]
        },
        "endpoints": {
          "type": "array",
          "description": "Mount points of shares in role(s).",
          "items": {
            "$ref": "#/definitions/MountPointMap"
          },
          "x-ms-identifiers": [
            "shareId"
          ]
        }
      }
    },
    "KubernetesRoleStorageClassInfo": {
      "type": "object",
      "description": "Kubernetes storage class info.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Storage class name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Storage class type.",
          "readOnly": true
        },
        "posixCompliant": {
          "$ref": "#/definitions/PosixComplianceStatus",
          "description": "If provisioned storage is posix compliant.",
          "readOnly": true
        }
      }
    },
    "KubernetesState": {
      "type": "string",
      "description": "State of Kubernetes deployment",
      "enum": [
        "Invalid",
        "Creating",
        "Created",
        "Updating",
        "Reconfiguring",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "KubernetesState",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Created",
            "value": "Created"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Reconfiguring",
            "value": "Reconfiguring"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          }
        ]
      }
    },
    "LoadBalancerConfig": {
      "type": "object",
      "description": "Load balancer configuration",
      "properties": {
        "type": {
          "type": "string",
          "description": "Load balancer type",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Load balancer version",
          "readOnly": true
        },
        "ipRange": {
          "type": "array",
          "description": "Load balancer ipconfig",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MECRole": {
      "type": "object",
      "description": "MEC role.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MECRoleProperties",
          "description": "Properties specific to MEC role.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Role"
        }
      ],
      "x-ms-discriminator-value": "MEC"
    },
    "MECRoleProperties": {
      "type": "object",
      "description": "MEC role properties.",
      "properties": {
        "connectionString": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "Activation key of the MEC."
        },
        "controllerEndpoint": {
          "type": "string",
          "description": "Controller Endpoint."
        },
        "resourceUniqueId": {
          "type": "string",
          "description": "Unique Id of the Resource."
        },
        "roleStatus": {
          "$ref": "#/definitions/RoleStatus",
          "description": "Role status."
        }
      },
      "required": [
        "roleStatus"
      ]
    },
    "MetricAggregationType": {
      "type": "string",
      "description": "Metric aggregation type.",
      "enum": [
        "NotSpecified",
        "None",
        "Average",
        "Minimum",
        "Maximum",
        "Total",
        "Count"
      ],
      "x-ms-enum": {
        "name": "MetricAggregationType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Average",
            "value": "Average"
          },
          {
            "name": "Minimum",
            "value": "Minimum"
          },
          {
            "name": "Maximum",
            "value": "Maximum"
          },
          {
            "name": "Total",
            "value": "Total"
          },
          {
            "name": "Count",
            "value": "Count"
          }
        ]
      }
    },
    "MetricCategory": {
      "type": "string",
      "description": "Metric category.",
      "enum": [
        "Capacity",
        "Transaction"
      ],
      "x-ms-enum": {
        "name": "MetricCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "Capacity",
            "value": "Capacity"
          },
          {
            "name": "Transaction",
            "value": "Transaction"
          }
        ]
      }
    },
    "MetricConfiguration": {
      "type": "object",
      "description": "Metric configuration.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Resource ID on which the metrics should be pushed."
        },
        "mdmAccount": {
          "type": "string",
          "description": "The MDM account to which the counters should be pushed."
        },
        "metricNameSpace": {
          "type": "string",
          "description": "The MDM namespace to which the counters should be pushed. This is required if MDMAccount is specified"
        },
        "counterSets": {
          "type": "array",
          "description": "Host name for the IoT hub associated to the device.",
          "items": {
            "$ref": "#/definitions/MetricCounterSet"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "resourceId",
        "counterSets"
      ]
    },
    "MetricCounter": {
      "type": "object",
      "description": "The metric counter",
      "properties": {
        "name": {
          "type": "string",
          "description": "The counter name."
        },
        "instance": {
          "type": "string",
          "description": "The instance from which counter should be collected."
        },
        "dimensionFilter": {
          "type": "array",
          "description": "The dimension filter.",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          },
          "x-ms-identifiers": [
            "sourceName"
          ]
        },
        "additionalDimensions": {
          "type": "array",
          "description": "The additional dimensions to be added to metric.",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          },
          "x-ms-identifiers": [
            "sourceName"
          ]
        }
      },
      "required": [
        "name"
      ]
    },
    "MetricCounterSet": {
      "type": "object",
      "description": "The metric counter set",
      "properties": {
        "counters": {
          "type": "array",
          "description": "The counters that should be collected in this set.",
          "items": {
            "$ref": "#/definitions/MetricCounter"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "counters"
      ]
    },
    "MetricDimension": {
      "type": "object",
      "description": "The metric dimension",
      "properties": {
        "sourceType": {
          "type": "string",
          "description": "The dimension type."
        },
        "sourceName": {
          "type": "string",
          "description": "The dimension value."
        }
      },
      "required": [
        "sourceType",
        "sourceName"
      ]
    },
    "MetricDimension_V1": {
      "type": "object",
      "description": "Metric Dimension v1.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the metrics dimension."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the metrics dimension."
        },
        "toBeExportedForShoebox": {
          "type": "boolean",
          "description": "To be exported to shoe box."
        }
      }
    },
    "MetricSpecification_V1": {
      "type": "object",
      "description": "Metric specification version 1.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the metric."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the metric."
        },
        "displayDescription": {
          "type": "string",
          "description": "Description of the metric to be displayed."
        },
        "unit": {
          "$ref": "#/definitions/MetricUnit",
          "description": "Metric units."
        },
        "aggregationType": {
          "$ref": "#/definitions/MetricAggregationType",
          "description": "Metric aggregation type."
        },
        "dimensions": {
          "type": "array",
          "description": "Metric dimensions, other than default dimension which is resource.",
          "items": {
            "$ref": "#/definitions/MetricDimension_V1"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "Set true to fill the gaps with zero."
        },
        "category": {
          "$ref": "#/definitions/MetricCategory",
          "description": "Metric category."
        },
        "resourceIdDimensionNameOverride": {
          "type": "string",
          "description": "Resource name override."
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "description": "Support granularity of metrics.",
          "items": {
            "$ref": "#/definitions/TimeGrain"
          }
        },
        "supportedAggregationTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricAggregationType"
          }
        }
      }
    },
    "MetricUnit": {
      "type": "string",
      "description": "Metric units.",
      "enum": [
        "NotSpecified",
        "Percent",
        "Count",
        "Seconds",
        "Milliseconds",
        "Bytes",
        "BytesPerSecond",
        "CountPerSecond"
      ],
      "x-ms-enum": {
        "name": "MetricUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          },
          {
            "name": "Percent",
            "value": "Percent"
          },
          {
            "name": "Count",
            "value": "Count"
          },
          {
            "name": "Seconds",
            "value": "Seconds"
          },
          {
            "name": "Milliseconds",
            "value": "Milliseconds"
          },
          {
            "name": "Bytes",
            "value": "Bytes"
          },
          {
            "name": "BytesPerSecond",
            "value": "BytesPerSecond"
          },
          {
            "name": "CountPerSecond",
            "value": "CountPerSecond"
          }
        ]
      }
    },
    "MonitoringMetricConfiguration": {
      "type": "object",
      "description": "The metric setting details for the role",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MonitoringMetricConfigurationProperties",
          "description": "The metric setting properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MonitoringMetricConfigurationList": {
      "type": "object",
      "description": "Collection of metric configurations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MonitoringMetricConfiguration items on this page",
          "items": {
            "$ref": "#/definitions/MonitoringMetricConfiguration"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MonitoringMetricConfigurationProperties": {
      "type": "object",
      "description": "Metrics properties",
      "properties": {
        "metricConfigurations": {
          "type": "array",
          "description": "The metrics configuration details",
          "items": {
            "$ref": "#/definitions/MetricConfiguration"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "metricConfigurations"
      ]
    },
    "MonitoringStatus": {
      "type": "string",
      "description": "Current monitoring status of the share.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "MonitoringStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "MountPointMap": {
      "type": "object",
      "description": "The share mount point.",
      "properties": {
        "shareId": {
          "type": "string",
          "description": "ID of the share mounted to the role VM."
        },
        "roleId": {
          "type": "string",
          "description": "ID of the role to which share is mounted.",
          "readOnly": true
        },
        "mountPoint": {
          "type": "string",
          "description": "Mount point for the share.",
          "readOnly": true
        },
        "mountType": {
          "$ref": "#/definitions/MountType",
          "description": "Mounting type.",
          "readOnly": true
        },
        "roleType": {
          "$ref": "#/definitions/RoleTypes",
          "description": "Role type.",
          "readOnly": true
        }
      },
      "required": [
        "shareId"
      ]
    },
    "MountType": {
      "type": "string",
      "description": "Mounting type.",
      "enum": [
        "Volume",
        "HostPath"
      ],
      "x-ms-enum": {
        "name": "MountType",
        "modelAsString": true,
        "values": [
          {
            "name": "Volume",
            "value": "Volume"
          },
          {
            "name": "HostPath",
            "value": "HostPath"
          }
        ]
      }
    },
    "MsiIdentityType": {
      "type": "string",
      "description": "Identity type",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "MsiIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          }
        ]
      }
    },
    "NetworkAdapter": {
      "type": "object",
      "description": "Represents the networkAdapter on a device.",
      "properties": {
        "adapterId": {
          "type": "string",
          "description": "Instance ID of network adapter.",
          "readOnly": true
        },
        "adapterPosition": {
          "$ref": "#/definitions/NetworkAdapterPosition",
          "description": "Hardware position of network adapter.",
          "readOnly": true
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "Logical index of the adapter.",
          "readOnly": true
        },
        "nodeId": {
          "type": "string",
          "description": "Node ID of the network adapter.",
          "readOnly": true
        },
        "networkAdapterName": {
          "type": "string",
          "description": "Network adapter name.",
          "readOnly": true
        },
        "label": {
          "type": "string",
          "description": "Hardware label for the adapter.",
          "readOnly": true
        },
        "macAddress": {
          "type": "string",
          "description": "MAC address.",
          "readOnly": true
        },
        "linkSpeed": {
          "type": "integer",
          "format": "int64",
          "description": "Link speed.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/NetworkAdapterStatus",
          "description": "Value indicating whether this adapter is valid.",
          "readOnly": true
        },
        "rdmaStatus": {
          "$ref": "#/definitions/NetworkAdapterRDMAStatus",
          "description": "Value indicating whether this adapter is RDMA capable."
        },
        "dhcpStatus": {
          "$ref": "#/definitions/NetworkAdapterDHCPStatus",
          "description": "Value indicating whether this adapter has DHCP enabled."
        },
        "ipv4Configuration": {
          "$ref": "#/definitions/Ipv4Config",
          "description": "The IPv4 configuration of the network adapter.",
          "readOnly": true
        },
        "ipv6Configuration": {
          "$ref": "#/definitions/Ipv6Config",
          "description": "The IPv6 configuration of the network adapter.",
          "readOnly": true
        },
        "ipv6LinkLocalAddress": {
          "type": "string",
          "description": "The IPv6 local address.",
          "readOnly": true
        },
        "dnsServers": {
          "type": "array",
          "description": "The list of DNS Servers of the device.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "NetworkAdapterDHCPStatus": {
      "type": "string",
      "description": "Value indicating whether this adapter has DHCP enabled.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "NetworkAdapterDHCPStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "NetworkAdapterPosition": {
      "type": "object",
      "description": "The network adapter position.",
      "properties": {
        "networkGroup": {
          "$ref": "#/definitions/NetworkGroup",
          "description": "The network group.",
          "readOnly": true
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port.",
          "readOnly": true
        }
      }
    },
    "NetworkAdapterRDMAStatus": {
      "type": "string",
      "description": "Value indicating whether this adapter is RDMA capable.",
      "enum": [
        "Incapable",
        "Capable"
      ],
      "x-ms-enum": {
        "name": "NetworkAdapterRDMAStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Incapable",
            "value": "Incapable"
          },
          {
            "name": "Capable",
            "value": "Capable"
          }
        ]
      }
    },
    "NetworkAdapterStatus": {
      "type": "string",
      "description": "Value indicating whether this adapter is valid.",
      "enum": [
        "Inactive",
        "Active"
      ],
      "x-ms-enum": {
        "name": "NetworkAdapterStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Inactive",
            "value": "Inactive"
          },
          {
            "name": "Active",
            "value": "Active"
          }
        ]
      }
    },
    "NetworkGroup": {
      "type": "string",
      "description": "The network group.",
      "enum": [
        "None",
        "NonRDMA",
        "RDMA"
      ],
      "x-ms-enum": {
        "name": "NetworkGroup",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "NonRDMA",
            "value": "NonRDMA"
          },
          {
            "name": "RDMA",
            "value": "RDMA"
          }
        ]
      }
    },
    "NetworkSettings": {
      "type": "object",
      "description": "The network settings of a device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSettingsProperties",
          "description": "The properties of network settings of a device.",
          "readOnly": true,
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkSettingsProperties": {
      "type": "object",
      "description": "The properties of network settings.",
      "properties": {
        "networkAdapters": {
          "type": "array",
          "description": "The network adapter list on the device.",
          "items": {
            "$ref": "#/definitions/NetworkAdapter"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "adapterId"
          ]
        }
      }
    },
    "Node": {
      "type": "object",
      "description": "Represents a single node in a Data box Edge/Gateway device\nGateway devices, standalone Edge devices and a single node cluster Edge device will all have 1 node\nMulti-node Edge devices will have more than 1 nodes",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NodeProperties",
          "description": "The properties of the node",
          "readOnly": true,
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ]
    },
    "NodeInfo": {
      "type": "object",
      "description": "Kubernetes node info",
      "properties": {
        "name": {
          "type": "string",
          "description": "Node name.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/KubernetesNodeType",
          "description": "Node type - Master/Worker",
          "readOnly": true
        },
        "ipConfiguration": {
          "type": "array",
          "description": "IP Configuration of the Kubernetes node.",
          "items": {
            "$ref": "#/definitions/KubernetesIPConfiguration"
          },
          "x-ms-identifiers": [
            "ipAddress",
            "port"
          ]
        }
      }
    },
    "NodeList": {
      "type": "object",
      "description": "Collection of Nodes.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Node items on this page",
          "items": {
            "$ref": "#/definitions/Node"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NodeProperties": {
      "type": "object",
      "description": "This class represents the nodes in a highly available cluster",
      "properties": {
        "nodeStatus": {
          "$ref": "#/definitions/NodeStatus",
          "description": "The current status of the individual node",
          "readOnly": true
        },
        "nodeChassisSerialNumber": {
          "type": "string",
          "description": "Serial number of the Chassis",
          "readOnly": true
        },
        "nodeSerialNumber": {
          "type": "string",
          "description": "Serial number of the individual node",
          "readOnly": true
        },
        "nodeDisplayName": {
          "type": "string",
          "description": "Display Name of the individual node",
          "readOnly": true
        },
        "nodeFriendlySoftwareVersion": {
          "type": "string",
          "description": "Friendly software version name that is currently installed on the node",
          "readOnly": true
        },
        "nodeHcsVersion": {
          "type": "string",
          "description": "HCS version that is currently installed on the node",
          "readOnly": true
        },
        "nodeInstanceId": {
          "type": "string",
          "description": "Guid instance id of the node",
          "readOnly": true
        }
      }
    },
    "NodeStatus": {
      "type": "string",
      "description": "The current status of the individual node",
      "enum": [
        "Unknown",
        "Up",
        "Down",
        "Rebooting",
        "ShuttingDown"
      ],
      "x-ms-enum": {
        "name": "NodeStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Up",
            "value": "Up"
          },
          {
            "name": "Down",
            "value": "Down"
          },
          {
            "name": "Rebooting",
            "value": "Rebooting"
          },
          {
            "name": "ShuttingDown",
            "value": "ShuttingDown"
          }
        ]
      }
    },
    "NumaNodeData": {
      "type": "object",
      "description": "NUMA node data.",
      "properties": {
        "numaNodeIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The NUMA node index."
        },
        "totalMemoryInMb": {
          "type": "integer",
          "format": "int64",
          "description": "The total memory on the NUMA node."
        },
        "logicalCoreCountPerCore": {
          "type": "integer",
          "format": "int32",
          "description": "The logical cores per core count."
        },
        "effectiveAvailableMemoryInMb": {
          "type": "integer",
          "format": "int64",
          "description": "The effective available memory on the NUMA node in MB."
        },
        "freeVCpuIndexesForHpn": {
          "type": "array",
          "description": "The free VCPU indices for the Hpn VMs.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "vCpuIndexesForHpn": {
          "type": "array",
          "description": "The VCPU indices for Hpn VMs",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "vCpuIndexesForRoot": {
          "type": "array",
          "description": "The VCPU indices for the root.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "Operation": {
      "type": "object",
      "description": "Operations.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Is data action."
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "Properties displayed for the operation."
        },
        "origin": {
          "type": "string",
          "description": "Origin of the operation."
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Operation properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "description": "Operation display properties.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Provider name."
        },
        "resource": {
          "type": "string",
          "description": "The type of resource in which the operation is performed."
        },
        "operation": {
          "type": "string",
          "description": "Operation to be performed on the resource."
        },
        "description": {
          "type": "string",
          "description": "Description of the operation to be performed."
        }
      }
    },
    "OperationProperties": {
      "type": "object",
      "description": "Operation properties.",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "Service specification."
        }
      }
    },
    "OperationsList": {
      "type": "object",
      "description": "The list of operations supported by Microsoft.DataBoxEdge resource provider.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of operations.",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The URL to get the next page of operations."
        }
      },
      "required": [
        "value"
      ]
    },
    "Order": {
      "type": "object",
      "description": "The order details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OrderProperties",
          "description": "The order properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "It specify the order api version.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OrderList": {
      "type": "object",
      "description": "List of order entities.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Order items on this page",
          "items": {
            "$ref": "#/definitions/Order"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OrderProperties": {
      "type": "object",
      "description": "Order properties.",
      "properties": {
        "orderId": {
          "type": "string",
          "description": "It specify the order resource id.",
          "readOnly": true
        },
        "contactInformation": {
          "$ref": "#/definitions/ContactDetails",
          "description": "The contact details."
        },
        "shippingAddress": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address."
        },
        "currentStatus": {
          "$ref": "#/definitions/OrderStatus",
          "description": "Current status of the order.",
          "readOnly": true
        },
        "orderHistory": {
          "type": "array",
          "description": "List of status changes in the order.",
          "items": {
            "$ref": "#/definitions/OrderStatus"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "trackingInformation/serialNumber"
          ]
        },
        "serialNumber": {
          "type": "string",
          "description": "Serial number of the device.",
          "readOnly": true
        },
        "deliveryTrackingInfo": {
          "type": "array",
          "description": "Tracking information for the package delivered to the customer whether it has an original or a replacement device.",
          "items": {
            "$ref": "#/definitions/TrackingInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "serialNumber"
          ]
        },
        "returnTrackingInfo": {
          "type": "array",
          "description": "Tracking information for the package returned from the customer whether it has an original or a replacement device.",
          "items": {
            "$ref": "#/definitions/TrackingInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "serialNumber"
          ]
        },
        "shipmentType": {
          "$ref": "#/definitions/ShipmentType",
          "description": "ShipmentType of the order"
        }
      },
      "required": [
        "contactInformation"
      ]
    },
    "OrderState": {
      "type": "string",
      "description": "Status of the order as per the allowed status types.",
      "enum": [
        "Untracked",
        "AwaitingFulfillment",
        "AwaitingPreparation",
        "AwaitingShipment",
        "Shipped",
        "Arriving",
        "Delivered",
        "ReplacementRequested",
        "LostDevice",
        "Declined",
        "ReturnInitiated",
        "AwaitingReturnShipment",
        "ShippedBack",
        "CollectedAtMicrosoft",
        "AwaitingPickup",
        "PickupCompleted",
        "AwaitingDrop"
      ],
      "x-ms-enum": {
        "name": "OrderState",
        "modelAsString": true,
        "values": [
          {
            "name": "Untracked",
            "value": "Untracked"
          },
          {
            "name": "AwaitingFulfillment",
            "value": "AwaitingFulfillment"
          },
          {
            "name": "AwaitingPreparation",
            "value": "AwaitingPreparation"
          },
          {
            "name": "AwaitingShipment",
            "value": "AwaitingShipment"
          },
          {
            "name": "Shipped",
            "value": "Shipped"
          },
          {
            "name": "Arriving",
            "value": "Arriving"
          },
          {
            "name": "Delivered",
            "value": "Delivered"
          },
          {
            "name": "ReplacementRequested",
            "value": "ReplacementRequested"
          },
          {
            "name": "LostDevice",
            "value": "LostDevice"
          },
          {
            "name": "Declined",
            "value": "Declined"
          },
          {
            "name": "ReturnInitiated",
            "value": "ReturnInitiated"
          },
          {
            "name": "AwaitingReturnShipment",
            "value": "AwaitingReturnShipment"
          },
          {
            "name": "ShippedBack",
            "value": "ShippedBack"
          },
          {
            "name": "CollectedAtMicrosoft",
            "value": "CollectedAtMicrosoft"
          },
          {
            "name": "AwaitingPickup",
            "value": "AwaitingPickup"
          },
          {
            "name": "PickupCompleted",
            "value": "PickupCompleted"
          },
          {
            "name": "AwaitingDrop",
            "value": "AwaitingDrop"
          }
        ]
      }
    },
    "OrderStatus": {
      "type": "object",
      "description": "Represents a single status change.",
      "properties": {
        "status": {
          "$ref": "#/definitions/OrderState",
          "description": "Status of the order as per the allowed status types."
        },
        "updateDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time of status update.",
          "readOnly": true
        },
        "comments": {
          "type": "string",
          "description": "Comments related to this status change."
        },
        "trackingInformation": {
          "$ref": "#/definitions/TrackingInfo",
          "description": "Tracking information related to the state in the ordering flow",
          "readOnly": true
        },
        "additionalOrderDetails": {
          "type": "object",
          "description": "Dictionary to hold generic information which is not stored\nby the already existing properties",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "status"
      ]
    },
    "PeriodicTimerEventTrigger": {
      "type": "object",
      "description": "Trigger details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PeriodicTimerProperties",
          "description": "Periodic timer trigger properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "x-ms-discriminator-value": "PeriodicTimerEvent"
    },
    "PeriodicTimerProperties": {
      "type": "object",
      "description": "Periodic timer trigger properties.",
      "properties": {
        "sourceInfo": {
          "$ref": "#/definitions/PeriodicTimerSourceInfo",
          "description": "Periodic timer details."
        },
        "sinkInfo": {
          "$ref": "#/definitions/RoleSinkInfo",
          "description": "Role Sink information."
        },
        "customContextTag": {
          "type": "string",
          "description": "A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.",
          "maxLength": 192
        }
      },
      "required": [
        "sourceInfo",
        "sinkInfo"
      ]
    },
    "PeriodicTimerSourceInfo": {
      "type": "object",
      "description": "Periodic timer event source.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time."
        },
        "schedule": {
          "type": "string",
          "description": "Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds."
        },
        "topic": {
          "type": "string",
          "description": "Topic where periodic events are published to IoT device."
        }
      },
      "required": [
        "startTime",
        "schedule"
      ]
    },
    "PlatformType": {
      "type": "string",
      "description": "Host OS supported by the Arc addon.",
      "enum": [
        "Windows",
        "Linux"
      ],
      "x-ms-enum": {
        "name": "PlatformType",
        "modelAsString": true,
        "values": [
          {
            "name": "Windows",
            "value": "Windows"
          },
          {
            "name": "Linux",
            "value": "Linux"
          }
        ]
      }
    },
    "PosixComplianceStatus": {
      "type": "string",
      "description": "If provisioned storage is posix compliant.",
      "enum": [
        "Invalid",
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PosixComplianceStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "ProactiveDiagnosticsConsent": {
      "type": "string",
      "description": "Proactive diagnostic collection consent flag",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ProactiveDiagnosticsConsent",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "ProactiveLogCollectionSettingsProperties": {
      "type": "object",
      "description": "The properties of proactive log collection settings.",
      "properties": {
        "userConsent": {
          "$ref": "#/definitions/ProactiveDiagnosticsConsent",
          "description": "Proactive diagnostic collection consent flag"
        }
      },
      "required": [
        "userConsent"
      ]
    },
    "RawCertificateData": {
      "type": "object",
      "description": "Raw Certificate Data.",
      "properties": {
        "authenticationType": {
          "$ref": "#/definitions/AuthenticationType",
          "description": "The authentication type."
        },
        "certificate": {
          "type": "string",
          "description": "The base64 encoded certificate raw data."
        }
      },
      "required": [
        "certificate"
      ]
    },
    "RefreshDetails": {
      "type": "object",
      "description": "Fields for tracking refresh job on the share or container.",
      "properties": {
        "inProgressRefreshJobId": {
          "type": "string",
          "description": "If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress."
        },
        "lastCompletedRefreshJobTimeInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job."
        },
        "errorManifestFile": {
          "type": "string",
          "description": "Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job."
        },
        "lastJob": {
          "type": "string",
          "description": "Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job."
        }
      }
    },
    "RemoteApplicationType": {
      "type": "string",
      "description": "Remote application type",
      "enum": [
        "Powershell",
        "WAC",
        "LocalUI",
        "AllApplications"
      ],
      "x-ms-enum": {
        "name": "RemoteApplicationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Powershell",
            "value": "Powershell"
          },
          {
            "name": "WAC",
            "value": "WAC"
          },
          {
            "name": "LocalUI",
            "value": "LocalUI"
          },
          {
            "name": "AllApplications",
            "value": "AllApplications"
          }
        ]
      }
    },
    "RemoteSupportSettings": {
      "type": "object",
      "description": "RemoteApplicationType for which remote support settings is being modified",
      "properties": {
        "remoteApplicationType": {
          "$ref": "#/definitions/RemoteApplicationType",
          "description": "Remote application type"
        },
        "accessLevel": {
          "$ref": "#/definitions/AccessLevel",
          "description": "Access level allowed for this remote application type"
        },
        "expirationTimeStampInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration time stamp"
        }
      }
    },
    "ResourceIdentity": {
      "type": "object",
      "description": "Msi identity details of the resource",
      "properties": {
        "type": {
          "$ref": "#/definitions/MsiIdentityType",
          "description": "Identity type"
        },
        "principalId": {
          "type": "string",
          "description": "Service Principal Id backing the Msi",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Home Tenant Id",
          "readOnly": true
        }
      }
    },
    "ResourceMoveDetails": {
      "type": "object",
      "description": "Fields for tracking resource move",
      "properties": {
        "operationInProgress": {
          "$ref": "#/definitions/ResourceMoveStatus",
          "description": "Denotes whether move operation is in progress"
        },
        "operationInProgressLockTimeoutInUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Denotes the timeout of the operation to finish"
        }
      }
    },
    "ResourceMoveStatus": {
      "type": "string",
      "description": "Denotes whether move operation is in progress",
      "enum": [
        "None",
        "ResourceMoveInProgress",
        "ResourceMoveFailed"
      ],
      "x-ms-enum": {
        "name": "ResourceMoveStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "ResourceMoveInProgress",
            "value": "ResourceMoveInProgress"
          },
          {
            "name": "ResourceMoveFailed",
            "value": "ResourceMoveFailed"
          }
        ]
      }
    },
    "Role": {
      "type": "object",
      "description": "Compute role.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/RoleTypes",
          "description": "Role type.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RoleList": {
      "type": "object",
      "description": "Collection of all the roles on the Data Box Edge device.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Role items on this page",
          "items": {
            "$ref": "#/definitions/Role"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RoleSinkInfo": {
      "type": "object",
      "description": "Compute role against which events will be raised.",
      "properties": {
        "roleId": {
          "type": "string",
          "description": "Compute role ID."
        }
      },
      "required": [
        "roleId"
      ]
    },
    "RoleStatus": {
      "type": "string",
      "description": "Local Edge Management Status",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "RoleStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "RoleTypes": {
      "type": "string",
      "enum": [
        "IOT",
        "ASA",
        "Functions",
        "Cognitive",
        "MEC",
        "CloudEdgeManagement",
        "Kubernetes"
      ],
      "x-ms-enum": {
        "name": "RoleTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "IOT",
            "value": "IOT"
          },
          {
            "name": "ASA",
            "value": "ASA"
          },
          {
            "name": "Functions",
            "value": "Functions"
          },
          {
            "name": "Cognitive",
            "value": "Cognitive"
          },
          {
            "name": "MEC",
            "value": "MEC"
          },
          {
            "name": "CloudEdgeManagement",
            "value": "CloudEdgeManagement"
          },
          {
            "name": "Kubernetes",
            "value": "Kubernetes"
          }
        ]
      },
      "x-ms-identifiers": []
    },
    "SSLStatus": {
      "type": "string",
      "description": "Signifies whether SSL needs to be enabled or not.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SSLStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "Secret": {
      "type": "object",
      "description": "Holds device secret either as a KeyVault reference or as an encrypted value.",
      "properties": {
        "encryptedSecret": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "Encrypted (using device public key) secret value."
        },
        "keyVaultId": {
          "type": "string",
          "description": "Id of the Key-Vault where secret is stored (ex: secrets/AuthClientSecret/82ef4346187a4033a10d629cde07d740)."
        }
      }
    },
    "SecuritySettings": {
      "type": "object",
      "description": "The security settings of a device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecuritySettingsProperties",
          "description": "Properties of the security settings.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ]
    },
    "SecuritySettingsProperties": {
      "type": "object",
      "description": "The properties of security settings.",
      "properties": {
        "deviceAdminPassword": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "Device administrator password as an encrypted string (encrypted using RSA PKCS #1) is used to sign into the  local web UI of the device. The Actual password should have at least 8 characters that are a combination of  uppercase, lowercase, numeric, and special characters."
        }
      },
      "required": [
        "deviceAdminPassword"
      ]
    },
    "ServiceSpecification": {
      "type": "object",
      "description": "Service specification.",
      "properties": {
        "metricSpecifications": {
          "type": "array",
          "description": "Metric specification as defined by shoebox.",
          "items": {
            "$ref": "#/definitions/MetricSpecification_V1"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "Share": {
      "type": "object",
      "description": "Represents a share on the  Data Box Edge/Gateway device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ShareProperties",
          "description": "The share properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ShareAccessProtocol": {
      "type": "string",
      "description": "Access protocol to be used by the share.",
      "enum": [
        "SMB",
        "NFS"
      ],
      "x-ms-enum": {
        "name": "ShareAccessProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "SMB",
            "value": "SMB"
          },
          {
            "name": "NFS",
            "value": "NFS"
          }
        ]
      }
    },
    "ShareAccessRight": {
      "type": "object",
      "description": "Specifies the mapping between this particular user and the type of access he has on shares on this device.",
      "properties": {
        "shareId": {
          "type": "string",
          "description": "The share ID."
        },
        "accessType": {
          "$ref": "#/definitions/ShareAccessType",
          "description": "Type of access to be allowed on the share for this user."
        }
      },
      "required": [
        "shareId",
        "accessType"
      ]
    },
    "ShareAccessType": {
      "type": "string",
      "description": "Type of access to be allowed on the share for this user.",
      "enum": [
        "Change",
        "Read",
        "Custom"
      ],
      "x-ms-enum": {
        "name": "ShareAccessType",
        "modelAsString": true,
        "values": [
          {
            "name": "Change",
            "value": "Change"
          },
          {
            "name": "Read",
            "value": "Read"
          },
          {
            "name": "Custom",
            "value": "Custom"
          }
        ]
      }
    },
    "ShareList": {
      "type": "object",
      "description": "Collection of all the shares on the Data Box Edge/Gateway device.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Share items on this page",
          "items": {
            "$ref": "#/definitions/Share"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ShareProperties": {
      "type": "object",
      "description": "The share properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description for the share."
        },
        "shareStatus": {
          "$ref": "#/definitions/ShareStatus",
          "description": "Current status of the share."
        },
        "monitoringStatus": {
          "$ref": "#/definitions/MonitoringStatus",
          "description": "Current monitoring status of the share."
        },
        "azureContainerInfo": {
          "$ref": "#/definitions/AzureContainerInfo",
          "description": "Azure container mapping for the share."
        },
        "accessProtocol": {
          "$ref": "#/definitions/ShareAccessProtocol",
          "description": "Access protocol to be used by the share."
        },
        "userAccessRights": {
          "type": "array",
          "description": "Mapping of users and corresponding access rights on the share (required for SMB protocol).",
          "items": {
            "$ref": "#/definitions/UserAccessRight"
          },
          "x-ms-identifiers": [
            "userId"
          ]
        },
        "clientAccessRights": {
          "type": "array",
          "description": "List of IP addresses and corresponding access rights on the share(required for NFS protocol).",
          "items": {
            "$ref": "#/definitions/ClientAccessRight"
          },
          "x-ms-identifiers": [
            "client"
          ]
        },
        "refreshDetails": {
          "$ref": "#/definitions/RefreshDetails",
          "description": "Details of the refresh job on this share."
        },
        "shareMappings": {
          "type": "array",
          "description": "Share mount point to the role.",
          "items": {
            "$ref": "#/definitions/MountPointMap"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "shareId"
          ]
        },
        "dataPolicy": {
          "$ref": "#/definitions/DataPolicy",
          "description": "Data policy of the share."
        }
      },
      "required": [
        "shareStatus",
        "monitoringStatus",
        "accessProtocol"
      ]
    },
    "ShareStatus": {
      "type": "string",
      "description": "Current status of the share.",
      "enum": [
        "Offline",
        "Unknown",
        "OK",
        "Updating",
        "NeedsAttention"
      ],
      "x-ms-enum": {
        "name": "ShareStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Offline",
            "value": "Offline"
          },
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "OK",
            "value": "OK"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "NeedsAttention",
            "value": "NeedsAttention"
          }
        ]
      }
    },
    "ShipmentType": {
      "type": "string",
      "enum": [
        "NotApplicable",
        "ShippedToCustomer",
        "SelfPickup"
      ],
      "x-ms-enum": {
        "name": "ShipmentType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotApplicable",
            "value": "NotApplicable"
          },
          {
            "name": "ShippedToCustomer",
            "value": "ShippedToCustomer"
          },
          {
            "name": "SelfPickup",
            "value": "SelfPickup"
          }
        ]
      }
    },
    "Sku": {
      "type": "object",
      "description": "The SKU type.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "SKU name."
        },
        "tier": {
          "$ref": "#/definitions/SkuTier",
          "description": "The SKU tier. This is based on the SKU name."
        }
      }
    },
    "SkuAvailability": {
      "type": "string",
      "description": "Links to the next set of results",
      "enum": [
        "Available",
        "Unavailable"
      ],
      "x-ms-enum": {
        "name": "SkuAvailability",
        "modelAsString": true,
        "values": [
          {
            "name": "Available",
            "value": "Available"
          },
          {
            "name": "Unavailable",
            "value": "Unavailable"
          }
        ]
      }
    },
    "SkuCapability": {
      "type": "object",
      "description": "The metadata to describe the capability.",
      "properties": {
        "name": {
          "type": "string",
          "description": "An invariant to describe the feature.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "An invariant if the feature is measured by quantity.",
          "readOnly": true
        }
      }
    },
    "SkuCost": {
      "type": "object",
      "description": "The metadata for retrieving price info.",
      "properties": {
        "meterId": {
          "type": "string",
          "description": "Used for querying price from commerce.",
          "readOnly": true
        },
        "quantity": {
          "type": "integer",
          "format": "int64",
          "description": "The cost quantity.",
          "readOnly": true
        },
        "extendedUnit": {
          "type": "string",
          "description": "The extended unit.",
          "readOnly": true
        }
      }
    },
    "SkuLocationInfo": {
      "type": "object",
      "description": "The location info.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location.",
          "readOnly": true
        },
        "zones": {
          "type": "array",
          "description": "The zones.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "sites": {
          "type": "array",
          "description": "The sites.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "SkuName": {
      "type": "string",
      "description": "The Sku name.",
      "enum": [
        "Gateway",
        "Edge",
        "TEA_1Node",
        "TEA_1Node_UPS",
        "TEA_1Node_Heater",
        "TEA_1Node_UPS_Heater",
        "TEA_4Node_Heater",
        "TEA_4Node_UPS_Heater",
        "TMA",
        "TDC",
        "TCA_Small",
        "GPU",
        "TCA_Large",
        "EdgeP_Base",
        "EdgeP_High",
        "EdgePR_Base",
        "EdgePR_Base_UPS",
        "EP2_64_1VPU_W",
        "EP2_128_1T4_Mx1_W",
        "EP2_256_2T4_W",
        "EdgeMR_Mini",
        "RCA_Small",
        "RCA_Large",
        "RDC",
        "Management",
        "EP2_64_Mx1_W",
        "EP2_128_GPU1_Mx1_W",
        "EP2_256_GPU2_Mx1",
        "EdgeMR_TCP"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "Gateway",
            "value": "Gateway"
          },
          {
            "name": "Edge",
            "value": "Edge"
          },
          {
            "name": "TEA_1Node",
            "value": "TEA_1Node"
          },
          {
            "name": "TEA_1Node_UPS",
            "value": "TEA_1Node_UPS"
          },
          {
            "name": "TEA_1Node_Heater",
            "value": "TEA_1Node_Heater"
          },
          {
            "name": "TEA_1Node_UPS_Heater",
            "value": "TEA_1Node_UPS_Heater"
          },
          {
            "name": "TEA_4Node_Heater",
            "value": "TEA_4Node_Heater"
          },
          {
            "name": "TEA_4Node_UPS_Heater",
            "value": "TEA_4Node_UPS_Heater"
          },
          {
            "name": "TMA",
            "value": "TMA"
          },
          {
            "name": "TDC",
            "value": "TDC"
          },
          {
            "name": "TCA_Small",
            "value": "TCA_Small"
          },
          {
            "name": "GPU",
            "value": "GPU"
          },
          {
            "name": "TCA_Large",
            "value": "TCA_Large"
          },
          {
            "name": "EdgeP_Base",
            "value": "EdgeP_Base"
          },
          {
            "name": "EdgeP_High",
            "value": "EdgeP_High"
          },
          {
            "name": "EdgePR_Base",
            "value": "EdgePR_Base"
          },
          {
            "name": "EdgePR_Base_UPS",
            "value": "EdgePR_Base_UPS"
          },
          {
            "name": "EP2_64_1VPU_W",
            "value": "EP2_64_1VPU_W"
          },
          {
            "name": "EP2_128_1T4_Mx1_W",
            "value": "EP2_128_1T4_Mx1_W"
          },
          {
            "name": "EP2_256_2T4_W",
            "value": "EP2_256_2T4_W"
          },
          {
            "name": "EdgeMR_Mini",
            "value": "EdgeMR_Mini"
          },
          {
            "name": "RCA_Small",
            "value": "RCA_Small"
          },
          {
            "name": "RCA_Large",
            "value": "RCA_Large"
          },
          {
            "name": "RDC",
            "value": "RDC"
          },
          {
            "name": "Management",
            "value": "Management"
          },
          {
            "name": "EP2_64_Mx1_W",
            "value": "EP2_64_Mx1_W"
          },
          {
            "name": "EP2_128_GPU1_Mx1_W",
            "value": "EP2_128_GPU1_Mx1_W"
          },
          {
            "name": "EP2_256_GPU2_Mx1",
            "value": "EP2_256_GPU2_Mx1"
          },
          {
            "name": "EdgeMR_TCP",
            "value": "EdgeMR_TCP"
          }
        ]
      }
    },
    "SkuSignupOption": {
      "type": "string",
      "description": "Sku can be signed up by customer or not.",
      "enum": [
        "None",
        "Available"
      ],
      "x-ms-enum": {
        "name": "SkuSignupOption",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Available",
            "value": "Available"
          }
        ]
      }
    },
    "SkuTier": {
      "type": "string",
      "description": "The Sku tier.",
      "enum": [
        "Standard"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Standard",
            "value": "Standard"
          }
        ]
      }
    },
    "SkuVersion": {
      "type": "string",
      "description": "Availability of the Sku as preview/stable.",
      "enum": [
        "Stable",
        "Preview"
      ],
      "x-ms-enum": {
        "name": "SkuVersion",
        "modelAsString": true,
        "values": [
          {
            "name": "Stable",
            "value": "Stable"
          },
          {
            "name": "Preview",
            "value": "Preview"
          }
        ]
      }
    },
    "StorageAccount": {
      "type": "object",
      "description": "Represents a Storage Account on the  Data Box Edge/Gateway device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountProperties",
          "description": "The Storage Account properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "StorageAccountCredential": {
      "type": "object",
      "description": "The storage account credential.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountCredentialProperties",
          "description": "The storage account credential properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "StorageAccountCredentialList": {
      "type": "object",
      "description": "The collection of storage account credentials.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StorageAccountCredential items on this page",
          "items": {
            "$ref": "#/definitions/StorageAccountCredential"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StorageAccountCredentialProperties": {
      "type": "object",
      "description": "The storage account credential properties.",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Alias for the storage account."
        },
        "userName": {
          "type": "string",
          "description": "Username for the storage account."
        },
        "accountKey": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "Encrypted storage key."
        },
        "connectionString": {
          "type": "string",
          "description": "Connection string for the storage account. Use this string if username and account key are not specified."
        },
        "sslStatus": {
          "$ref": "#/definitions/SSLStatus",
          "description": "Signifies whether SSL needs to be enabled or not."
        },
        "blobDomainName": {
          "type": "string",
          "description": "Blob end point for private clouds."
        },
        "accountType": {
          "$ref": "#/definitions/AccountType",
          "description": "Type of storage accessed on the storage account."
        },
        "storageAccountId": {
          "type": "string",
          "description": "Id of the storage account."
        }
      },
      "required": [
        "alias",
        "sslStatus",
        "accountType"
      ]
    },
    "StorageAccountList": {
      "type": "object",
      "description": "Collection of all the Storage Accounts on the Data Box Edge/Gateway device.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StorageAccount items on this page",
          "items": {
            "$ref": "#/definitions/StorageAccount"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StorageAccountProperties": {
      "type": "object",
      "description": "The storage account properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description for the storage Account."
        },
        "storageAccountStatus": {
          "$ref": "#/definitions/StorageAccountStatus",
          "description": "Current status of the storage account"
        },
        "dataPolicy": {
          "$ref": "#/definitions/DataPolicy",
          "description": "Data policy of the storage Account."
        },
        "storageAccountCredentialId": {
          "type": "string",
          "description": "Storage Account Credential Id"
        },
        "blobEndpoint": {
          "type": "string",
          "description": "BlobEndpoint of Storage Account",
          "readOnly": true
        },
        "containerCount": {
          "type": "integer",
          "format": "int32",
          "description": "The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.",
          "readOnly": true
        }
      },
      "required": [
        "dataPolicy"
      ]
    },
    "StorageAccountStatus": {
      "type": "string",
      "description": "Current status of the storage account",
      "enum": [
        "OK",
        "Offline",
        "Unknown",
        "Updating",
        "NeedsAttention"
      ],
      "x-ms-enum": {
        "name": "StorageAccountStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "OK",
            "value": "OK"
          },
          {
            "name": "Offline",
            "value": "Offline"
          },
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "NeedsAttention",
            "value": "NeedsAttention"
          }
        ]
      }
    },
    "SubscriptionProperties": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "locationPlacementId": {
          "type": "string"
        },
        "quotaId": {
          "type": "string"
        },
        "serializedDetails": {
          "type": "string"
        },
        "registeredFeatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionRegisteredFeatures"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "SubscriptionRegisteredFeatures": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "SubscriptionState": {
      "type": "string",
      "enum": [
        "Registered",
        "Warned",
        "Suspended",
        "Deleted",
        "Unregistered"
      ],
      "x-ms-enum": {
        "name": "SubscriptionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Registered",
            "value": "Registered"
          },
          {
            "name": "Warned",
            "value": "Warned"
          },
          {
            "name": "Suspended",
            "value": "Suspended"
          },
          {
            "name": "Deleted",
            "value": "Deleted"
          },
          {
            "name": "Unregistered",
            "value": "Unregistered"
          }
        ]
      }
    },
    "SupportPackageRequestProperties": {
      "type": "object",
      "description": "The share properties.",
      "properties": {
        "minimumTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "MinimumTimeStamp from where logs need to be collected"
        },
        "maximumTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "Start of the timespan of the log collection"
        },
        "include": {
          "type": "string",
          "description": "Type of files, which need to be included in the logs\nThis will contain the type of logs (Default/DefaultWithDumps/None/All/DefaultWithArchived)\nor a comma separated list of log types that are required"
        }
      }
    },
    "SymmetricKey": {
      "type": "object",
      "description": "Symmetric key for authentication.",
      "properties": {
        "connectionString": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "Connection string based on the symmetric key."
        }
      }
    },
    "TimeGrain": {
      "type": "string",
      "enum": [
        "PT1M",
        "PT5M",
        "PT15M",
        "PT30M",
        "PT1H",
        "PT6H",
        "PT12H",
        "PT1D"
      ],
      "x-ms-enum": {
        "name": "TimeGrain",
        "modelAsString": true,
        "values": [
          {
            "name": "PT1M",
            "value": "PT1M"
          },
          {
            "name": "PT5M",
            "value": "PT5M"
          },
          {
            "name": "PT15M",
            "value": "PT15M"
          },
          {
            "name": "PT30M",
            "value": "PT30M"
          },
          {
            "name": "PT1H",
            "value": "PT1H"
          },
          {
            "name": "PT6H",
            "value": "PT6H"
          },
          {
            "name": "PT12H",
            "value": "PT12H"
          },
          {
            "name": "PT1D",
            "value": "PT1D"
          }
        ]
      }
    },
    "TrackingInfo": {
      "type": "object",
      "description": "Tracking courier information.",
      "properties": {
        "serialNumber": {
          "type": "string",
          "description": "Serial number of the device being tracked."
        },
        "carrierName": {
          "type": "string",
          "description": "Name of the carrier used in the delivery."
        },
        "trackingId": {
          "type": "string",
          "description": "Tracking ID of the shipment."
        },
        "trackingUrl": {
          "type": "string",
          "description": "Tracking URL of the shipment."
        }
      }
    },
    "Trigger": {
      "type": "object",
      "description": "Trigger details.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/TriggerEventType",
          "description": "Trigger Kind.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TriggerEventType": {
      "type": "string",
      "description": "Trigger Kind.",
      "enum": [
        "FileEvent",
        "PeriodicTimerEvent"
      ],
      "x-ms-enum": {
        "name": "TriggerEventType",
        "modelAsString": true,
        "values": [
          {
            "name": "FileEvent",
            "value": "FileEvent"
          },
          {
            "name": "PeriodicTimerEvent",
            "value": "PeriodicTimerEvent"
          }
        ]
      }
    },
    "TriggerList": {
      "type": "object",
      "description": "Collection of all trigger on the data box edge device.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Trigger items on this page",
          "items": {
            "$ref": "#/definitions/Trigger"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TriggerSupportPackageRequest": {
      "type": "object",
      "description": "The request object for trigger support package.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SupportPackageRequestProperties",
          "description": "The TriggerSupportPackageRequest properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ]
    },
    "UpdateDetails": {
      "type": "object",
      "description": "Update Specific attributes",
      "properties": {
        "updateTitle": {
          "type": "string",
          "description": "Title of the Update"
        },
        "updateSize": {
          "type": "number",
          "format": "double",
          "description": "Size of the update(In Bytes)"
        },
        "updateType": {
          "$ref": "#/definitions/UpdateType",
          "description": "Type of the Update"
        },
        "targetVersion": {
          "type": "string",
          "description": "Target Version number"
        },
        "friendlyVersionNumber": {
          "type": "string",
          "description": "Friendly Version Number"
        },
        "estimatedInstallTimeInMins": {
          "type": "integer",
          "format": "int32",
          "description": "Estimated Install Time for the update"
        },
        "rebootBehavior": {
          "$ref": "#/definitions/InstallRebootBehavior",
          "description": "Indicates if updates are available and at least one of the updates needs a reboot."
        },
        "installationImpact": {
          "$ref": "#/definitions/InstallationImpact",
          "description": "Impact of Installing an updateType"
        },
        "status": {
          "$ref": "#/definitions/UpdateStatus",
          "description": "Status of the update."
        }
      }
    },
    "UpdateDownloadProgress": {
      "type": "object",
      "description": "Details about the download progress of update.",
      "properties": {
        "downloadPhase": {
          "$ref": "#/definitions/DownloadPhase",
          "description": "The download phase.",
          "readOnly": true
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of completion.",
          "readOnly": true
        },
        "totalBytesToDownload": {
          "type": "number",
          "format": "double",
          "description": "Total bytes to download.",
          "readOnly": true
        },
        "totalBytesDownloaded": {
          "type": "number",
          "format": "double",
          "description": "Total bytes downloaded.",
          "readOnly": true
        },
        "numberOfUpdatesToDownload": {
          "type": "integer",
          "format": "int32",
          "description": "Number of updates to download.",
          "readOnly": true
        },
        "numberOfUpdatesDownloaded": {
          "type": "integer",
          "format": "int32",
          "description": "Number of updates downloaded.",
          "readOnly": true
        }
      }
    },
    "UpdateInstallProgress": {
      "type": "object",
      "description": "Progress details during installation of updates.",
      "properties": {
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage completed.",
          "readOnly": true
        },
        "numberOfUpdatesToInstall": {
          "type": "integer",
          "format": "int32",
          "description": "Number of updates to install.",
          "readOnly": true
        },
        "numberOfUpdatesInstalled": {
          "type": "integer",
          "format": "int32",
          "description": "Number of updates installed.",
          "readOnly": true
        }
      }
    },
    "UpdateOperation": {
      "type": "string",
      "description": "The current update operation.",
      "enum": [
        "None",
        "Scan",
        "Download",
        "Install"
      ],
      "x-ms-enum": {
        "name": "UpdateOperation",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Scan",
            "value": "Scan"
          },
          {
            "name": "Download",
            "value": "Download"
          },
          {
            "name": "Install",
            "value": "Install"
          }
        ]
      }
    },
    "UpdateOperationStage": {
      "type": "string",
      "description": "Current stage of the update operation.",
      "enum": [
        "Unknown",
        "Initial",
        "ScanStarted",
        "ScanComplete",
        "ScanFailed",
        "DownloadStarted",
        "DownloadComplete",
        "DownloadFailed",
        "InstallStarted",
        "InstallComplete",
        "InstallFailed",
        "RebootInitiated",
        "Success",
        "Failure",
        "RescanStarted",
        "RescanComplete",
        "RescanFailed"
      ],
      "x-ms-enum": {
        "name": "UpdateOperationStage",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Initial",
            "value": "Initial"
          },
          {
            "name": "ScanStarted",
            "value": "ScanStarted"
          },
          {
            "name": "ScanComplete",
            "value": "ScanComplete"
          },
          {
            "name": "ScanFailed",
            "value": "ScanFailed"
          },
          {
            "name": "DownloadStarted",
            "value": "DownloadStarted"
          },
          {
            "name": "DownloadComplete",
            "value": "DownloadComplete"
          },
          {
            "name": "DownloadFailed",
            "value": "DownloadFailed"
          },
          {
            "name": "InstallStarted",
            "value": "InstallStarted"
          },
          {
            "name": "InstallComplete",
            "value": "InstallComplete"
          },
          {
            "name": "InstallFailed",
            "value": "InstallFailed"
          },
          {
            "name": "RebootInitiated",
            "value": "RebootInitiated"
          },
          {
            "name": "Success",
            "value": "Success"
          },
          {
            "name": "Failure",
            "value": "Failure"
          },
          {
            "name": "RescanStarted",
            "value": "RescanStarted"
          },
          {
            "name": "RescanComplete",
            "value": "RescanComplete"
          },
          {
            "name": "RescanFailed",
            "value": "RescanFailed"
          }
        ]
      }
    },
    "UpdateStatus": {
      "type": "string",
      "description": "Status of the update.",
      "enum": [
        "DownloadPending",
        "DownloadStarted",
        "DownloadCompleted",
        "InstallStarted",
        "InstallCompleted"
      ],
      "x-ms-enum": {
        "name": "UpdateStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "DownloadPending",
            "value": "DownloadPending"
          },
          {
            "name": "DownloadStarted",
            "value": "DownloadStarted"
          },
          {
            "name": "DownloadCompleted",
            "value": "DownloadCompleted"
          },
          {
            "name": "InstallStarted",
            "value": "InstallStarted"
          },
          {
            "name": "InstallCompleted",
            "value": "InstallCompleted"
          }
        ]
      }
    },
    "UpdateSummary": {
      "type": "object",
      "description": "Details about ongoing updates and availability of updates on the device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateSummaryProperties",
          "description": "The device update information summary.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "UpdateSummaryProperties": {
      "type": "object",
      "description": "The device update information summary.",
      "properties": {
        "deviceVersionNumber": {
          "type": "string",
          "description": "The current version of the device in format: 1.2.17312.13.\","
        },
        "friendlyDeviceVersionName": {
          "type": "string",
          "description": "The current version of the device in text format."
        },
        "deviceLastScannedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last time when a scan was done on the device."
        },
        "lastCompletedScanJobDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the last scan job was completed (success/cancelled/failed) on the appliance."
        },
        "lastSuccessfulScanJobTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the last scan job is successfully completed."
        },
        "lastCompletedDownloadJobDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the last Download job was completed (success/cancelled/failed) on the appliance.",
          "readOnly": true
        },
        "lastCompletedDownloadJobId": {
          "type": "string",
          "description": "JobId of the last ran download job.(Can be success/cancelled/failed)",
          "readOnly": true
        },
        "lastDownloadJobStatus": {
          "$ref": "#/definitions/JobStatus",
          "description": "JobStatus of the last ran download job.",
          "readOnly": true
        },
        "lastSuccessfulInstallJobDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the Last Install job was completed successfully on the appliance"
        },
        "lastCompletedInstallJobDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the last Install job was completed (success/cancelled/failed) on the appliance.",
          "readOnly": true
        },
        "lastCompletedInstallJobId": {
          "type": "string",
          "description": "JobId of the last ran install job.(Can be success/cancelled/failed)",
          "readOnly": true
        },
        "lastInstallJobStatus": {
          "$ref": "#/definitions/JobStatus",
          "description": "JobStatus of the last ran install job.",
          "readOnly": true
        },
        "totalNumberOfUpdatesAvailable": {
          "type": "integer",
          "format": "int32",
          "description": "The number of updates available for the current device version as per the last device scan.",
          "readOnly": true
        },
        "totalNumberOfUpdatesPendingDownload": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of items pending download.",
          "readOnly": true
        },
        "totalNumberOfUpdatesPendingInstall": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of items pending install.",
          "readOnly": true
        },
        "rebootBehavior": {
          "$ref": "#/definitions/InstallRebootBehavior",
          "description": "Indicates if updates are available and at least one of the updates needs a reboot.",
          "readOnly": true
        },
        "ongoingUpdateOperation": {
          "$ref": "#/definitions/UpdateOperation",
          "description": "The current update operation.",
          "readOnly": true
        },
        "inProgressDownloadJobId": {
          "type": "string",
          "description": "The job ID of the download job in progress.",
          "readOnly": true
        },
        "inProgressInstallJobId": {
          "type": "string",
          "description": "The job ID of the install job in progress.",
          "readOnly": true
        },
        "inProgressDownloadJobStartedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the currently running download (if any) started.",
          "readOnly": true
        },
        "inProgressInstallJobStartedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the currently running install (if any) started.",
          "readOnly": true
        },
        "updateTitles": {
          "type": "array",
          "description": "The list of updates available for install.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "updates": {
          "type": "array",
          "description": "The list of updates available for install.",
          "items": {
            "$ref": "#/definitions/UpdateDetails"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "updateTitle"
          ]
        },
        "totalUpdateSizeInBytes": {
          "type": "number",
          "format": "double",
          "description": "The total size of updates available for download in bytes.",
          "readOnly": true
        },
        "totalTimeInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The total time in Minutes",
          "readOnly": true
        }
      }
    },
    "UpdateType": {
      "type": "string",
      "description": "Type of the Update",
      "enum": [
        "Software",
        "Kubernetes",
        "Firmware"
      ],
      "x-ms-enum": {
        "name": "UpdateType",
        "modelAsString": true,
        "values": [
          {
            "name": "Software",
            "value": "Software"
          },
          {
            "name": "Kubernetes",
            "value": "Kubernetes"
          },
          {
            "name": "Firmware",
            "value": "Firmware"
          }
        ]
      }
    },
    "UploadCertificateRequest": {
      "type": "object",
      "description": "The upload certificate request.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RawCertificateData",
          "description": "The Base 64 encoded certificate raw data.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "UploadCertificateResponse": {
      "type": "object",
      "description": "The upload registration certificate response.",
      "properties": {
        "authType": {
          "$ref": "#/definitions/AuthenticationType",
          "description": "Specifies authentication type."
        },
        "resourceId": {
          "type": "string",
          "description": "The resource ID of the Data Box Edge/Gateway device.",
          "readOnly": true
        },
        "aadAuthority": {
          "type": "string",
          "description": "Azure Active Directory tenant authority.",
          "readOnly": true
        },
        "aadTenantId": {
          "type": "string",
          "description": "Azure Active Directory tenant ID.",
          "readOnly": true
        },
        "servicePrincipalClientId": {
          "type": "string",
          "description": "Azure Active Directory service principal client ID.",
          "readOnly": true
        },
        "servicePrincipalObjectId": {
          "type": "string",
          "description": "Azure Active Directory service principal object ID.",
          "readOnly": true
        },
        "azureManagementEndpointAudience": {
          "type": "string",
          "description": "The azure management endpoint audience.",
          "readOnly": true
        },
        "aadAudience": {
          "type": "string",
          "description": "Identifier of the target resource that is the recipient of the requested token.",
          "readOnly": true
        }
      }
    },
    "User": {
      "type": "object",
      "description": "Represents a user who has access to one or more shares on the Data Box Edge/Gateway device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserProperties",
          "description": "The storage account credential properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "UserAccessRight": {
      "type": "object",
      "description": "The mapping between a particular user and the access type on the SMB share.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "User ID (already existing in the device)."
        },
        "accessType": {
          "$ref": "#/definitions/ShareAccessType",
          "description": "Type of access to be allowed for the user."
        }
      },
      "required": [
        "userId",
        "accessType"
      ]
    },
    "UserList": {
      "type": "object",
      "description": "Collection of users.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The User items on this page",
          "items": {
            "$ref": "#/definitions/User"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "UserProperties": {
      "type": "object",
      "description": "The user properties.",
      "properties": {
        "encryptedPassword": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The password details."
        },
        "shareAccessRights": {
          "type": "array",
          "description": "List of shares that the user has rights on. This field should not be specified during user creation.",
          "items": {
            "$ref": "#/definitions/ShareAccessRight"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "shareId"
          ]
        },
        "userType": {
          "$ref": "#/definitions/UserType",
          "description": "Type of the user."
        }
      },
      "required": [
        "userType"
      ]
    },
    "UserType": {
      "type": "string",
      "description": "Type of the user.",
      "enum": [
        "Share",
        "LocalManagement",
        "ARM"
      ],
      "x-ms-enum": {
        "name": "UserType",
        "modelAsString": true,
        "values": [
          {
            "name": "Share",
            "value": "Share"
          },
          {
            "name": "LocalManagement",
            "value": "LocalManagement"
          },
          {
            "name": "ARM",
            "value": "ARM"
          }
        ]
      }
    },
    "VmMemory": {
      "type": "object",
      "description": "VmMemory Data.",
      "properties": {
        "startupMemoryMB": {
          "type": "integer",
          "format": "int64",
          "description": "The total amount of RAM in the virtual machine, as seen by the guest  operating system. For a virtual machine with dynamic memory enabled, this represents the initial memory available at startup."
        },
        "currentMemoryUsageMB": {
          "type": "integer",
          "format": "int64",
          "description": "The current memory used by the virtual machine."
        }
      }
    },
    "VmPlacementRequestResult": {
      "type": "object",
      "description": "List of VM sizes being checked for creation on appliance along with corresponding result.",
      "properties": {
        "vmSize": {
          "type": "array",
          "description": "List of VM sizes being checked.",
          "items": {
            "type": "string"
          }
        },
        "isFeasible": {
          "type": "boolean",
          "description": "Boolean value indicating if the VM(s) in VmSize can be created."
        },
        "messageCode": {
          "type": "string",
          "description": "MessageCode indicating reason for success or failure."
        },
        "message": {
          "type": "string",
          "description": "Localized message to be displayed to the user to explain the check result."
        }
      }
    }
  },
  "parameters": {}
}
