{
  "swagger": "2.0",
  "info": {
    "title": "DataBoxEdgeManagementClient",
    "version": "2023-01-01-preview"
  },
  "basePath": "management.azure.com",
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/addons": {
      "get": {
        "tags": [
          "Addons"
        ],
        "description": "Lists all the addons configured in the role.",
        "operationId": "Addons_ListByRole",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleName",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all the addons configured in the role.",
            "schema": {
              "$ref": "#/definitions/AddonList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/addons/{addonName}": {
      "get": {
        "tags": [
          "Addons"
        ],
        "description": "Gets a specific addon by name.",
        "operationId": "Addons_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleName",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "addonName",
            "description": "The addon name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The addon with the specified name in the role.",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Addons"
        ],
        "description": "Create or update a addon.",
        "operationId": "Addons_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleName",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "addonName",
            "description": "The addon name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The addon properties.",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the addon."
          },
          "200": {
            "description": "Successfully created or updated the addon.",
            "schema": {
              "$ref": "#/definitions/Addon"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Addons"
        ],
        "description": "Deletes the addon on the device.",
        "operationId": "Addons_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleName",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "addonName",
            "description": "The addon name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the addon."
          },
          "204": {
            "description": "The addon is already deleted."
          },
          "200": {
            "description": "Successfully deleted the addon."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "description": "Gets all the alerts for a Data Box Edge/Data Box Gateway device.",
        "operationId": "Alerts_ListByDataBoxEdgeDevice",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of alerts.",
            "schema": {
              "$ref": "#/definitions/AlertList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts/{name}": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Gets an alert by name.",
        "operationId": "Alerts_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The alert name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The alert details.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBoxEdge/availableSkus": {
      "get": {
        "tags": [
          "AvailableSkus"
        ],
        "summary": "List all the available Skus and information related to them.",
        "operationId": "AvailableSkus_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists the available Skus and information related to them.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeSkuList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules/{name}": {
      "get": {
        "tags": [
          "BandwidthSchedules"
        ],
        "description": "Gets the properties of the specified bandwidth schedule.",
        "operationId": "BandwidthSchedules_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The bandwidth schedule name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The bandwidth schedule.",
            "schema": {
              "$ref": "#/definitions/BandwidthSchedule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "BandwidthSchedules"
        ],
        "description": "Creates or updates a bandwidth schedule.",
        "operationId": "BandwidthSchedules_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The bandwidth schedule name which needs to be added/updated.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The bandwidth schedule to be added or updated.",
            "schema": {
              "$ref": "#/definitions/BandwidthSchedule"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the bandwidth schedule."
          },
          "200": {
            "description": "Successfully created or updated the bandwidth schedule.",
            "schema": {
              "$ref": "#/definitions/BandwidthSchedule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "BandwidthSchedules"
        ],
        "description": "Deletes the specified bandwidth schedule.",
        "operationId": "BandwidthSchedules_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The bandwidth schedule name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the bandwidth schedule."
          },
          "204": {
            "description": "Successfully deleted the bandwidth schedule."
          },
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules": {
      "get": {
        "tags": [
          "BandwidthSchedules"
        ],
        "description": "Gets all the bandwidth schedules for a Data Box Edge/Data Box Gateway device.",
        "operationId": "BandwidthSchedules_ListByDataBoxEdgeDevice",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of bandwidth schedules.",
            "schema": {
              "$ref": "#/definitions/BandwidthSchedulesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers": {
      "get": {
        "tags": [
          "Containers"
        ],
        "summary": "Lists all the containers of a storage Account in a Data Box Edge/Data Box Gateway device.",
        "operationId": "Containers_ListByStorageAccount",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "storageAccountName",
            "description": "The storage Account name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of all the containers on the device.",
            "schema": {
              "$ref": "#/definitions/ContainerList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers/{containerName}": {
      "get": {
        "tags": [
          "Containers"
        ],
        "summary": "Gets a container by name.",
        "operationId": "Containers_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "storageAccountName",
            "description": "The Storage Account Name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "containerName",
            "description": "The container Name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The container details.",
            "schema": {
              "$ref": "#/definitions/Container"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Containers"
        ],
        "summary": "Creates a new container or updates an existing container on the device.",
        "operationId": "Containers_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "storageAccountName",
            "description": "The Storage Account Name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "containerName",
            "description": "The container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The container properties.",
            "schema": {
              "$ref": "#/definitions/Container"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the container."
          },
          "200": {
            "description": "Successfully created or updated the container.",
            "schema": {
              "$ref": "#/definitions/Container"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Containers"
        ],
        "description": "Deletes the container on the Data Box Edge/Data Box Gateway device.",
        "operationId": "Containers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "storageAccountName",
            "description": "The Storage Account Name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "containerName",
            "description": "The container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the container."
          },
          "204": {
            "description": "The container is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}/containers/{containerName}/refresh": {
      "post": {
        "tags": [
          "Containers"
        ],
        "summary": "Refreshes the container metadata with the data from the cloud.",
        "operationId": "Containers_Refresh",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "storageAccountName",
            "description": "The Storage Account Name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "containerName",
            "description": "The container name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to refresh the container on the device."
          },
          "200": {
            "description": "Successfully refreshed the container on the device."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/deviceCapacityCheck": {
      "post": {
        "tags": [
          "DeviceCapacityCheck"
        ],
        "description": "Posts the device capacity request info to check feasibility.",
        "operationId": "DeviceCapacityCheck_CheckResourceCreationFeasibility",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "capacityName",
            "description": "The device name.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The device capacity request info.",
            "schema": {
              "$ref": "#/definitions/DeviceCapacityRequestInfo"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to check the feasibility of resource creation."
          },
          "200": {
            "description": "Successfully checked the feasibility of resource creation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/deviceCapacityInfo/default": {
      "get": {
        "tags": [
          "DeviceCapacityInfo"
        ],
        "description": "Gets the properties of the specified device capacity info.",
        "operationId": "DeviceCapacityInfo_GetDeviceCapacityInfo",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device capacity check result.",
            "schema": {
              "$ref": "#/definitions/DeviceCapacityInfo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}": {
      "put": {
        "tags": [
          "Devices"
        ],
        "description": "Creates or updates a Data Box Edge/Data Box Gateway resource.",
        "operationId": "Devices_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The resource object.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the resource.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Gets the properties of the Data Box Edge/Data Box Gateway device.",
        "operationId": "Devices_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Data Box Edge/Data Box Gateway device.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "description": "Deletes the Data Box Edge/Data Box Gateway device.",
        "operationId": "Devices_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The resource is already deleted."
          },
          "200": {
            "description": "Successfully deleted the resource."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Devices"
        ],
        "description": "Modifies a Data Box Edge/Data Box Gateway resource.",
        "operationId": "Devices_Update",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The resource parameters.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevicePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the resource.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Gets all the Data Box Edge/Data Box Gateway devices in a resource group.",
        "operationId": "Devices_ListByResourceGroup",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of Data Box Edge/Data Box Gateway devices.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Gets all the Data Box Edge/Data Box Gateway devices in a subscription.",
        "operationId": "Devices_ListBySubscription",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of Data Box Edge/Data Box Gateway devices.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/getExtendedInformation": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Gets additional information for the specified Azure Stack Edge/Data Box Gateway device.",
        "operationId": "Devices_GetExtendedInformation",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The additional information.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceExtendedInfo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateExtendedInformation": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Gets additional information for the specified Data Box Edge/Data Box Gateway device.",
        "operationId": "Devices_UpdateExtendedInformation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The patch object.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceExtendedInfoPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modify additional information.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceExtendedInfo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/networkSettings/default": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Gets the network settings of the specified Data Box Edge/Data Box Gateway device.",
        "operationId": "Devices_GetNetworkSettings",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device network settings.",
            "schema": {
              "$ref": "#/definitions/NetworkSettings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/securitySettings/default/update": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Updates the security settings on a Data Box Edge/Data Box Gateway device.",
        "operationId": "Devices_CreateOrUpdateSecuritySettings",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The security settings.",
            "schema": {
              "$ref": "#/definitions/SecuritySettings"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to update the security settings."
          },
          "204": {
            "description": "Updated the security settings."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateSummary/default": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets information about the availability of updates based on the last scan of the device. It also gets information about any ongoing download or install jobs on the device.",
        "operationId": "Devices_GetUpdateSummary",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The update summary.",
            "schema": {
              "$ref": "#/definitions/UpdateSummary"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/scanForUpdates": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Scans for updates on a Data Box Edge/Data Box Gateway device.",
        "operationId": "Devices_ScanForUpdates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to scan for updates on the device."
          },
          "200": {
            "description": "Successfully scanned the device for updates."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/downloadUpdates": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Downloads the updates on a Data Box Edge/Data Box Gateway device.",
        "operationId": "Devices_DownloadUpdates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to download the updates on the device."
          },
          "200": {
            "description": "Successfully downloaded the updates on the device."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/installUpdates": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Installs the updates on the Data Box Edge/Data Box Gateway device.",
        "operationId": "Devices_InstallUpdates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to install updates on the device."
          },
          "200": {
            "description": "Successfully installed updates on the device."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/uploadCertificate": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Uploads registration certificate for the device.",
        "operationId": "Devices_UploadCertificate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The upload certificate request.",
            "schema": {
              "$ref": "#/definitions/UploadCertificateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully uploaded the registration certificate.",
            "schema": {
              "$ref": "#/definitions/UploadCertificateResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/generateCertificate": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Generates certificate for activation key.",
        "operationId": "Devices_GenerateCertificate",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully generated self signed certificate.",
            "schema": {
              "$ref": "#/definitions/GenerateCertResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/diagnosticProactiveLogCollectionSettings/default": {
      "get": {
        "tags": [
          "DiagnosticSettings"
        ],
        "description": "Gets the proactive log collection settings of the specified Data Box Edge/Data Box Gateway device.",
        "operationId": "DiagnosticSettings_GetDiagnosticProactiveLogCollectionSettings",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The diagnostic proactive log collection settings.",
            "schema": {
              "$ref": "#/definitions/DiagnosticProactiveLogCollectionSettings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DiagnosticSettings"
        ],
        "description": "Updates the proactive log collection settings on a Data Box Edge/Data Box Gateway device.",
        "operationId": "DiagnosticSettings_UpdateDiagnosticProactiveLogCollectionSettings",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The proactive log collection settings.",
            "schema": {
              "$ref": "#/definitions/DiagnosticProactiveLogCollectionSettings"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to update the proactive log collection settings."
          },
          "200": {
            "description": "Successfully updated the proactive log collection settings.",
            "schema": {
              "$ref": "#/definitions/DiagnosticProactiveLogCollectionSettings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/diagnosticRemoteSupportSettings/default": {
      "get": {
        "tags": [
          "DiagnosticSettings"
        ],
        "description": "Gets the diagnostic remote support settings of the specified Data Box Edge/Data Box Gateway device.",
        "operationId": "DiagnosticSettings_GetDiagnosticRemoteSupportSettings",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The diagnostic remote support settings.",
            "schema": {
              "$ref": "#/definitions/DiagnosticRemoteSupportSettings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DiagnosticSettings"
        ],
        "description": "Updates the diagnostic remote support settings on a Data Box Edge/Data Box Gateway device.",
        "operationId": "DiagnosticSettings_UpdateDiagnosticRemoteSupportSettings",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The diagnostic remote support settings.",
            "schema": {
              "$ref": "#/definitions/DiagnosticRemoteSupportSettings"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to update the diagnostic remote support settings."
          },
          "200": {
            "description": "Successfully updated the diagnostic remote support settings.",
            "schema": {
              "$ref": "#/definitions/DiagnosticRemoteSupportSettings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/jobs/{name}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.",
        "operationId": "Jobs_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The job name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The job details.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/offers": {
      "get": {
        "tags": [
          "MarketplaceImageOffer"
        ],
        "summary": "Returns list of all offers",
        "operationId": "MarketplaceImageOffer_ListOffers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of all offers.",
            "schema": {
              "$ref": "#/definitions/MarketplaceImageOfferList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/publishers/{publisherName}/offers": {
      "get": {
        "tags": [
          "MarketplaceImageOffer"
        ],
        "summary": "Returns List of Offers by Publisher name",
        "operationId": "MarketplaceImageOffer_ListOffersbyPublisher",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "publisherName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of all offers by publisher name.",
            "schema": {
              "$ref": "#/definitions/MarketplaceImageOfferList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/publishers": {
      "get": {
        "tags": [
          "MarketplaceImagePublisher"
        ],
        "summary": "Returns list of publishers",
        "operationId": "MarketplaceImagePublisher_ListPublishers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of all publishers.",
            "schema": {
              "$ref": "#/definitions/MarketplaceImagePublisherList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/publishers/{publisherName}/offers/{offerName}/skus/{skuName}/versions/{versionName}/generatesastoken": {
      "post": {
        "tags": [
          "MarketplaceImageSasToken"
        ],
        "summary": "Returns SASToken",
        "operationId": "MarketplaceImageSasToken_GetSASToken",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "publisherName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "offerName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "skuName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "versionName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to start VM Image Download",
            "schema": {
              "$ref": "#/definitions/MarketplaceSasToken"
            }
          },
          "200": {
            "description": "The sas uri data.",
            "schema": {
              "$ref": "#/definitions/MarketplaceSasToken"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/publishers/{publisherName}/offers/{offerName}/skus": {
      "get": {
        "tags": [
          "MarketplaceImageSku"
        ],
        "summary": "Returns List of SKUs Within Offer",
        "operationId": "MarketplaceImageSku_ListSKUsWithinOffer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "publisherName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "offerName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of all skus",
            "schema": {
              "$ref": "#/definitions/MarketplaceImageSkuList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/publishers/{publisherName}/offers/{offerName}/skus/{skuName}/versions": {
      "get": {
        "tags": [
          "MarketplaceImageVersion"
        ],
        "summary": "Returns List of Versions within SKU",
        "operationId": "MarketplaceImageVersion_ListVersionswithinSKU",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "publisherName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "offerName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "skuName",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of all versions",
            "schema": {
              "$ref": "#/definitions/MarketplaceImageVersionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/publishers/{publisherName}/offers/{offerName}/skus/{skuName}/versions/{versionName}": {
      "get": {
        "tags": [
          "MarketplaceImageVersion"
        ],
        "description": "Get Particular Image",
        "operationId": "MarketplaceImageVersion_GetParticularImage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "publisherName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "offerName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "skuName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "versionName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The specific image.",
            "schema": {
              "$ref": "#/definitions/MarketplaceImageVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/monitoringConfig/default": {
      "put": {
        "tags": [
          "MonitoringConfig"
        ],
        "summary": "Creates a new metric configuration or updates an existing one for a role.",
        "operationId": "MonitoringConfig_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleName",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The metric configuration.",
            "schema": {
              "$ref": "#/definitions/MonitoringMetricConfiguration"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the metrics configuration."
          },
          "200": {
            "description": "Successfully created or updated the metrics configuration.",
            "schema": {
              "$ref": "#/definitions/MonitoringMetricConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "MonitoringConfig"
        ],
        "summary": "deletes a new metric configuration for a role.",
        "operationId": "MonitoringConfig_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleName",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the metrics configuration."
          },
          "202": {
            "description": "Accepted the request to delete the metrics configuration."
          },
          "204": {
            "description": "The metrics configuration is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "MonitoringConfig"
        ],
        "summary": "Gets a  metric configuration of a role.",
        "operationId": "MonitoringConfig_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleName",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The monitoring config details.",
            "schema": {
              "$ref": "#/definitions/MonitoringMetricConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{roleName}/monitoringConfig": {
      "get": {
        "tags": [
          "MonitoringConfig"
        ],
        "summary": "Lists metric configurations in a role.",
        "operationId": "MonitoringConfig_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "roleName",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The monitoring config details.",
            "schema": {
              "$ref": "#/definitions/MonitoringMetricConfigurationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/nodes": {
      "get": {
        "tags": [
          "Nodes"
        ],
        "description": "Gets all the nodes currently configured under this Data Box Edge device",
        "operationId": "Nodes_ListByDataBoxEdgeDevice",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of all nodes on the device.",
            "schema": {
              "$ref": "#/definitions/NodeList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.DataBoxEdge/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "List all the supported operations.",
        "operationId": "Operations_List",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of supported operations.",
            "schema": {
              "$ref": "#/definitions/OperationsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/operationsStatus/{name}": {
      "get": {
        "tags": [
          "OperationsStatus"
        ],
        "summary": "Gets the details of a specified job on a Data Box Edge/Data Box Gateway device.",
        "operationId": "OperationsStatus_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The job name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The job details.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Lists all the orders related to a Data Box Edge/Data Box Gateway device.",
        "operationId": "Orders_ListByDataBoxEdgeDevice",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all the orders for the Data Box Edge Device",
            "schema": {
              "$ref": "#/definitions/OrderList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders/default": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets a specific order by name.",
        "operationId": "Orders_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The order details of a device.",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Creates or updates an order.",
        "operationId": "Orders_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The order details of a device.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The order to be created or updated.",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the order."
          },
          "200": {
            "description": "Successfully created or updated the order.",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Deletes the order related to the device.",
        "operationId": "Orders_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the order."
          },
          "204": {
            "description": "The order is already deleted."
          },
          "200": {
            "description": "Successfully deleted the order."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders/default/listDCAccessCode": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets the DCAccess Code",
        "operationId": "Orders_ListDCAccessCode",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "DC Access code for the device",
            "schema": {
              "$ref": "#/definitions/DCAccessCode"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "description": "Lists all the roles configured in a Data Box Edge/Data Box Gateway device.",
        "operationId": "Roles_ListByDataBoxEdgeDevice",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all the roles configured in the device.",
            "schema": {
              "$ref": "#/definitions/RoleList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "description": "Gets a specific role by name.",
        "operationId": "Roles_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The role with the specified name in the given device.",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "description": "Create or update a role.",
        "operationId": "Roles_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The role properties.",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the role."
          },
          "200": {
            "description": "Successfully created or updated the role.",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "description": "Deletes the role on the device.",
        "operationId": "Roles_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the role."
          },
          "204": {
            "description": "The role is already deleted."
          },
          "200": {
            "description": "Successfully deleted the role."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}/migrate": {
      "post": {
        "tags": [
          "Roles"
        ],
        "description": "Migrates the IOT Role To NewK8 experience",
        "operationId": "Roles_Migrate",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The role with the specified name in the given device.",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares": {
      "get": {
        "tags": [
          "Shares"
        ],
        "summary": "Lists all the shares in a Data Box Edge/Data Box Gateway device.",
        "operationId": "Shares_ListByDataBoxEdgeDevice",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of all the shares on the device.",
            "schema": {
              "$ref": "#/definitions/ShareList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}": {
      "get": {
        "tags": [
          "Shares"
        ],
        "summary": "Gets a share by name.",
        "operationId": "Shares_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The share name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The share details.",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Shares"
        ],
        "summary": "Creates a new share or updates an existing share on the device.",
        "operationId": "Shares_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The share name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The share properties.",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the share."
          },
          "200": {
            "description": "Successfully created or updated the share.",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Shares"
        ],
        "description": "Deletes the share on the Data Box Edge/Data Box Gateway device.",
        "operationId": "Shares_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The share name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the share."
          },
          "204": {
            "description": "The share is already deleted."
          },
          "200": {
            "description": "Successfully deleted the share."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}/refresh": {
      "post": {
        "tags": [
          "Shares"
        ],
        "summary": "Refreshes the share metadata with the data from the cloud.",
        "operationId": "Shares_Refresh",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The share name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to refresh the share on the device."
          },
          "200": {
            "description": "Successfully refreshed the share on the device."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials/{name}": {
      "put": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Creates or updates the storage account credential.",
        "operationId": "StorageAccountCredentials_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The storage account credential name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The storage account credential.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the storage account credential."
          },
          "200": {
            "description": "Successfully created or updated the storage account credential.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Gets the properties of the specified storage account credential.",
        "operationId": "StorageAccountCredentials_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The storage account credential name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The storage account credential properties.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Deletes the storage account credential.",
        "operationId": "StorageAccountCredentials_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The storage account credential name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the storage account credential."
          },
          "204": {
            "description": "The storage account credential is already deleted."
          },
          "200": {
            "description": "Successfully deleted the storage account credential."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials": {
      "get": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "summary": "Gets all the storage account credentials in a Data Box Edge/Data Box Gateway device.",
        "operationId": "StorageAccountCredentials_ListByDataBoxEdgeDevice",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of storage account credentials.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredentialList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts": {
      "get": {
        "tags": [
          "StorageAccounts"
        ],
        "summary": "Lists all the StorageAccounts in a Data Box Edge/Data Box Gateway device.",
        "operationId": "StorageAccounts_ListByDataBoxEdgeDevice",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of all the StorageAccounts on the device.",
            "schema": {
              "$ref": "#/definitions/StorageAccountList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccounts/{storageAccountName}": {
      "get": {
        "tags": [
          "StorageAccounts"
        ],
        "summary": "Gets a StorageAccount by name.",
        "operationId": "StorageAccounts_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "storageAccountName",
            "description": "The storage account name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The storage account details.",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "StorageAccounts"
        ],
        "summary": "Creates a new StorageAccount or updates an existing StorageAccount on the device.",
        "operationId": "StorageAccounts_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "storageAccountName",
            "description": "The StorageAccount name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The StorageAccount properties.",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the StorageAccount."
          },
          "200": {
            "description": "Successfully created or updated the StorageAccount.",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "StorageAccounts"
        ],
        "description": "Deletes the StorageAccount on the Data Box Edge/Data Box Gateway device.",
        "operationId": "StorageAccounts_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "storageAccountName",
            "description": "The StorageAccount name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the StorageAccount."
          },
          "204": {
            "description": "The StorageAccount is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggerSupportPackage": {
      "post": {
        "tags": [
          "SupportPackages"
        ],
        "summary": "Triggers support package on the device",
        "operationId": "SupportPackages_TriggerSupportPackage",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The trigger support package request object",
            "schema": {
              "$ref": "#/definitions/TriggerSupportPackageRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to trigger support package on the device."
          },
          "200": {
            "description": "Successfully triggered support package on the device."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "description": "Lists all the triggers configured in the device.",
        "operationId": "Triggers_ListByDataBoxEdgeDevice",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "Specify $filter='CustomContextTag eq <tag>' to filter on custom context tag property",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List all the triggers configured in the device",
            "schema": {
              "$ref": "#/definitions/TriggerList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers/{name}": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "description": "Get a specific trigger by name.",
        "operationId": "Triggers_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The trigger name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The trigger.",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Triggers"
        ],
        "description": "Creates or updates a trigger.",
        "operationId": "Triggers_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "Creates or updates a trigger",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The trigger name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The trigger.",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the trigger."
          },
          "200": {
            "description": "Successfully created or updated the trigger.",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Triggers"
        ],
        "description": "Deletes the trigger on the gateway device.",
        "operationId": "Triggers_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The trigger name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the trigger."
          },
          "204": {
            "description": "The trigger is already deleted."
          },
          "200": {
            "description": "Successfully deleted the trigger."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Gets all the users registered on a Data Box Edge/Data Box Gateway device.",
        "operationId": "Users_ListByDataBoxEdgeDevice",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "Specify $filter='Type eq <type>' to filter on user type property",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of all users on the device.",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users/{name}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Gets the properties of the specified user.",
        "operationId": "Users_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The user name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The user details.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Creates a new user or updates an existing user's information on a Data Box Edge/Data Box Gateway device.",
        "operationId": "Users_CreateOrUpdate",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The user name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The user details.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the user."
          },
          "200": {
            "description": "Successfully created or updated the user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Deletes the user on a databox edge/gateway device.",
        "operationId": "Users_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceName",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "description": "The user name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the user."
          },
          "204": {
            "description": "The user is already deleted."
          },
          "200": {
            "description": "Successfully deleted the user."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ARMBaseModel": {
      "description": "Represents the base class for all object models.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ASEKubernetesRole": {
      "description": "ASEKubernetes Role",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Role"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ASEKubernetesRoleProperties"
        },
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "ASEKubernetes"
    },
    "ASEKubernetesRoleCompute": {
      "description": "ASEKubernetes role compute resource",
      "type": "object",
      "properties": {
        "memoryInBytes": {
          "format": "int64",
          "description": "Memory in bytes",
          "type": "integer",
          "readOnly": true
        },
        "processorCount": {
          "format": "int32",
          "description": "Processor count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ASEKubernetesRoleProperties": {
      "description": "Kubernetes role properties.",
      "required": [
        "kubernetesRoleResources",
        "roleStatus"
      ],
      "type": "object",
      "properties": {
        "hostPlatform": {
          "description": "Platform where the runtime is hosted.",
          "enum": [
            "Windows",
            "Linux"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PlatformType",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "State of Kubernetes deployment",
          "enum": [
            "Invalid",
            "Creating",
            "Created",
            "Updating",
            "Reconfiguring",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "KubernetesState",
            "modelAsString": true
          }
        },
        "hostPlatformType": {
          "description": "Host OS supported by the Kubernetes role.",
          "enum": [
            "KubernetesCluster",
            "LinuxVM"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "HostPlatformType",
            "modelAsString": true
          }
        },
        "kubernetesRoleResources": {
          "$ref": "#/definitions/ASEKubernetesRoleResources"
        },
        "roleStatus": {
          "description": "Role status.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoleStatus",
            "modelAsString": true
          }
        }
      }
    },
    "ASEKubernetesRoleResources": {
      "description": "ASEKubernetes Role resources",
      "type": "object",
      "properties": {
        "storage": {
          "$ref": "#/definitions/ASEKubernetesRoleStorage"
        },
        "compute": {
          "$ref": "#/definitions/ASEKubernetesRoleCompute"
        }
      }
    },
    "ASEKubernetesRoleStorage": {
      "description": "ASEKubernetes role Storage resource",
      "type": "object",
      "properties": {
        "endpoints": {
          "description": "Mount points of shares in role(s).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MountPointMap"
          }
        }
      }
    },
    "Addon": {
      "description": "Role Addon",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "kind": {
          "description": "Addon type.",
          "enum": [
            "IotEdge",
            "ArcForKubernetes"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AddonType",
            "modelAsString": true
          }
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      },
      "discriminator": "kind"
    },
    "AddonList": {
      "description": "Collection of all the Role addon on the Azure Stack Edge device.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The Value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Addon"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Address": {
      "description": "The shipping address of the customer.",
      "required": [
        "country"
      ],
      "type": "object",
      "properties": {
        "addressLine1": {
          "description": "The address line1.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The address line2.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The address line3.",
          "type": "string"
        },
        "postalCode": {
          "description": "The postal code.",
          "type": "string"
        },
        "city": {
          "description": "The city name.",
          "type": "string"
        },
        "state": {
          "description": "The state name.",
          "type": "string"
        },
        "country": {
          "description": "The country name.",
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "Alert": {
      "description": "Alert on the data box edge/gateway device.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "AlertErrorDetails": {
      "description": "Error details for the alert.",
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Error code.",
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "description": "Error Message.",
          "type": "string",
          "readOnly": true
        },
        "occurrences": {
          "format": "int32",
          "description": "Number of occurrences.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "AlertList": {
      "description": "Collection of alerts.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AlertProperties": {
      "description": "Properties of alert.",
      "type": "object",
      "properties": {
        "title": {
          "description": "Alert title.",
          "type": "string",
          "readOnly": true
        },
        "alertType": {
          "description": "Alert type.",
          "type": "string",
          "readOnly": true
        },
        "appearedAtDateTime": {
          "format": "date-time",
          "description": "UTC time when the alert appeared.",
          "type": "string",
          "readOnly": true
        },
        "recommendation": {
          "description": "Alert recommendation.",
          "type": "string",
          "readOnly": true
        },
        "severity": {
          "description": "Severity of the alert.",
          "enum": [
            "Informational",
            "Warning",
            "Critical"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "AlertSeverity",
            "modelAsString": true
          }
        },
        "errorDetails": {
          "$ref": "#/definitions/AlertErrorDetails"
        },
        "detailedInformation": {
          "description": "Alert details.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ArcAddon": {
      "description": "Arc Addon.",
      "required": [
        "kind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Addon"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArcAddonProperties"
        },
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "ArcForKubernetes"
    },
    "ArcAddonProperties": {
      "description": "Arc addon properties.",
      "required": [
        "resourceGroupName",
        "resourceLocation",
        "resourceName",
        "subscriptionId"
      ],
      "type": "object",
      "properties": {
        "subscriptionId": {
          "description": "Arc resource subscription Id",
          "minLength": 1,
          "type": "string"
        },
        "resourceGroupName": {
          "description": "Arc resource group name",
          "minLength": 1,
          "type": "string"
        },
        "resourceName": {
          "description": "Arc resource Name",
          "minLength": 1,
          "type": "string"
        },
        "resourceLocation": {
          "description": "Arc resource location",
          "minLength": 1,
          "type": "string"
        },
        "version": {
          "description": "Arc resource version",
          "type": "string",
          "readOnly": true
        },
        "hostPlatform": {
          "description": "Host OS supported by the Arc addon.",
          "enum": [
            "Windows",
            "Linux"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PlatformType",
            "modelAsString": true
          }
        },
        "hostPlatformType": {
          "description": "Platform where the runtime is hosted.",
          "enum": [
            "KubernetesCluster",
            "LinuxVM"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "HostPlatformType",
            "modelAsString": true
          }
        },
        "customLocationsObjectId": {
          "description": "Arc Custom Locations ObjectId",
          "type": "string"
        },
        "provisioningState": {
          "description": "Addon Provisioning State",
          "enum": [
            "Invalid",
            "Creating",
            "Created",
            "Updating",
            "Reconfiguring",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "AddonState",
            "modelAsString": true
          }
        }
      }
    },
    "AsymmetricEncryptedSecret": {
      "description": "Represent the secrets intended for encryption with asymmetric key pair.",
      "required": [
        "encryptionAlgorithm",
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the secret.",
          "minLength": 1,
          "type": "string"
        },
        "encryptionCertThumbprint": {
          "description": "Thumbprint certificate used to encrypt \\\"Value\\\". If the value is unencrypted, it will be null.",
          "type": "string",
          "x-ms-secret": true
        },
        "encryptionAlgorithm": {
          "description": "The algorithm used to encrypt \"Value\".",
          "enum": [
            "None",
            "AES256",
            "RSAES_PKCS1_v_1_5"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionAlgorithm",
            "modelAsString": true
          }
        }
      }
    },
    "Authentication": {
      "description": "Authentication mechanism for IoT devices.",
      "type": "object",
      "properties": {
        "symmetricKey": {
          "$ref": "#/definitions/SymmetricKey"
        }
      }
    },
    "AzureContainerInfo": {
      "description": "Azure container mapping of the endpoint.",
      "required": [
        "containerName",
        "dataFormat",
        "storageAccountCredentialId"
      ],
      "type": "object",
      "properties": {
        "storageAccountCredentialId": {
          "description": "ID of the storage account credential used to access storage.",
          "minLength": 1,
          "type": "string"
        },
        "containerName": {
          "description": "Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).",
          "minLength": 1,
          "type": "string"
        },
        "dataFormat": {
          "description": "Storage format used for the file represented by the share.",
          "enum": [
            "BlockBlob",
            "PageBlob",
            "AzureFile"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AzureContainerDataFormat",
            "modelAsString": true
          }
        }
      }
    },
    "BandwidthSchedule": {
      "description": "The bandwidth schedule details.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BandwidthScheduleProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "BandwidthScheduleProperties": {
      "description": "The properties of the bandwidth schedule.",
      "required": [
        "days",
        "rateInMbps",
        "start",
        "stop"
      ],
      "type": "object",
      "properties": {
        "start": {
          "format": "date-span",
          "description": "The start time of the schedule in UTC.",
          "type": "string"
        },
        "stop": {
          "format": "date-span",
          "description": "The stop time of the schedule in UTC.",
          "type": "string"
        },
        "rateInMbps": {
          "format": "int32",
          "description": "The bandwidth rate in Mbps.",
          "type": "integer"
        },
        "days": {
          "description": "The days of the week when this schedule is applicable.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": true
            }
          }
        }
      }
    },
    "BandwidthSchedulesList": {
      "description": "The collection of bandwidth schedules.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of bandwidth schedules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BandwidthSchedule"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ClientAccessRight": {
      "description": "The mapping between a particular client IP and the type of access client has on the NFS share.",
      "required": [
        "accessPermission",
        "client"
      ],
      "type": "object",
      "properties": {
        "client": {
          "description": "IP of the client.",
          "minLength": 1,
          "type": "string"
        },
        "accessPermission": {
          "description": "Type of access to be allowed for the client.",
          "enum": [
            "NoAccess",
            "ReadOnly",
            "ReadWrite"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ClientPermissionType",
            "modelAsString": true
          }
        }
      }
    },
    "CloudEdgeManagementRole": {
      "description": "The preview of Virtual Machine Cloud Management from the Azure supports deploying and managing VMs on your Azure Stack Edge device from Azure Portal. \r\nFor more information, refer to: https://docs.microsoft.com/en-us/azure/databox-online/azure-stack-edge-gpu-virtual-machine-overview\r\nBy using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/ for additional details.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Role"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloudEdgeManagementRoleProperties"
        },
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "CloudEdgeManagement"
    },
    "CloudEdgeManagementRoleProperties": {
      "description": "CloudEdgeManagement Role properties.",
      "required": [
        "roleStatus"
      ],
      "type": "object",
      "properties": {
        "localManagementStatus": {
          "description": "Local Edge Management Status",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "RoleStatus",
            "modelAsString": true
          }
        },
        "edgeProfile": {
          "$ref": "#/definitions/EdgeProfile"
        },
        "roleStatus": {
          "description": "Role status.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoleStatus",
            "modelAsString": true
          }
        }
      }
    },
    "CloudError": {
      "description": "An error response from the service.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "x-ms-external": true
    },
    "CloudErrorBody": {
      "description": "An error response from the service.",
      "properties": {
        "code": {
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "type": "string"
        },
        "message": {
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "type": "string"
        },
        "details": {
          "description": "A list of additional details about the error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          }
        }
      },
      "x-ms-external": true
    },
    "ClusterCapacityViewData": {
      "description": "Cluster Compute Data.",
      "type": "object",
      "properties": {
        "fqdn": {
          "description": "The FQDN of the cluster.",
          "type": "string"
        },
        "gpuCapacity": {
          "$ref": "#/definitions/ClusterGpuCapacity"
        },
        "memoryCapacity": {
          "$ref": "#/definitions/ClusterMemoryCapacity"
        },
        "lastRefreshedTime": {
          "format": "date-time",
          "description": "The last time at which the ClusterCapacityViewData was set.",
          "type": "string"
        },
        "totalProvisionedNonHpnCores": {
          "format": "int64",
          "description": "The total # of vCPUs provisioned by non-HPN VM per appliance.",
          "type": "integer"
        }
      }
    },
    "ClusterGpuCapacity": {
      "description": "Cluster GPU Data.",
      "type": "object",
      "properties": {
        "gpuType": {
          "description": "The cluster GPU Type.",
          "type": "string"
        },
        "gpuUsedUnitsCount": {
          "format": "int32",
          "description": "The used GPU units count in the cluster.",
          "type": "integer"
        },
        "gpuFreeUnitsCount": {
          "format": "int32",
          "description": "The free GPU units count in the cluster.",
          "type": "integer"
        },
        "gpuReservedForFailoverUnitsCount": {
          "format": "int32",
          "description": "The GPU units count reserved for failover in the cluster.",
          "type": "integer"
        },
        "gpuTotalUnitsCount": {
          "format": "int32",
          "description": "The total GPU units count in the cluster.",
          "type": "integer"
        }
      }
    },
    "ClusterMemoryCapacity": {
      "description": "NodeCapacityInfo defines the required information to determine the placement of a VM.",
      "type": "object",
      "properties": {
        "clusterFreeMemoryMb": {
          "format": "double",
          "description": "The free memory in the cluster in MB.",
          "type": "number"
        },
        "clusterUsedMemoryMb": {
          "format": "double",
          "description": "The used memory in the cluster in MB.",
          "type": "number"
        },
        "clusterFailoverMemoryMb": {
          "format": "double",
          "description": "The failover memory in the cluster in MB.",
          "type": "number"
        },
        "clusterFragmentationMemoryMb": {
          "format": "double",
          "description": "The fragmentation memory in the cluster in MB.",
          "type": "number"
        },
        "clusterHypervReserveMemoryMb": {
          "format": "double",
          "description": "The memory reserved for Hyper-V in the cluster in MB.",
          "type": "number"
        },
        "clusterInfraVmMemoryMb": {
          "format": "double",
          "description": "The memory of the Infra VM in the cluster in MB.",
          "type": "number"
        },
        "clusterTotalMemoryMb": {
          "format": "double",
          "description": "The total memory in the cluster in MB.",
          "type": "number"
        },
        "clusterNonFailoverVmMb": {
          "format": "double",
          "description": "The non-failover memory in the cluster in MB.",
          "type": "number"
        },
        "clusterMemoryUsedByVmsMb": {
          "format": "double",
          "description": "The memory used by VMs in the cluster in MB.",
          "type": "number"
        }
      }
    },
    "ClusterStorageViewData": {
      "description": "Cluster Storage Data.",
      "type": "object",
      "properties": {
        "clusterTotalStorageMb": {
          "format": "double",
          "description": "Total storage on the cluster in MB.",
          "type": "number"
        },
        "clusterFreeStorageMb": {
          "format": "double",
          "description": "The available or free storage on the cluster in MB.",
          "type": "number"
        }
      }
    },
    "CniConfig": {
      "description": "Cni configuration",
      "type": "object",
      "properties": {
        "type": {
          "description": "Cni type",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Cni version",
          "type": "string",
          "readOnly": true
        },
        "podSubnet": {
          "description": "Pod Subnet",
          "type": "string",
          "readOnly": true
        },
        "serviceSubnet": {
          "description": "Service subnet",
          "type": "string",
          "readOnly": true
        },
        "componentType": {
          "description": "ComponentType of the Kubernetes node.",
          "enum": [
            "Invalid",
            "Cluster",
            "Node",
            "Etcd",
            "CNI",
            "LoadBalancer"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "KubernetesComponentType",
            "modelAsString": true
          }
        }
      }
    },
    "ComputeResource": {
      "description": "Compute infrastructure Resource",
      "required": [
        "memoryInGB",
        "processorCount"
      ],
      "type": "object",
      "properties": {
        "processorCount": {
          "format": "int32",
          "description": "Processor count",
          "type": "integer"
        },
        "memoryInGB": {
          "format": "int64",
          "description": "Memory in GB",
          "type": "integer"
        }
      }
    },
    "ComputeVersionInformation": {
      "description": "This contains the compute information",
      "type": "object",
      "properties": {
        "kubernetesVersion": {
          "description": "Kubernetes Version",
          "type": "string"
        },
        "iotEdgeVersion": {
          "description": "IOTEdge Version",
          "type": "string"
        },
        "azureArcVersion": {
          "description": "Azure Arc Version",
          "type": "string"
        }
      }
    },
    "ContactDetails": {
      "description": "Contains all the contact details of the customer.",
      "required": [
        "companyName",
        "contactPerson",
        "emailList",
        "phone"
      ],
      "type": "object",
      "properties": {
        "contactPerson": {
          "description": "The contact person name.",
          "minLength": 1,
          "type": "string"
        },
        "companyName": {
          "description": "The name of the company.",
          "minLength": 1,
          "type": "string"
        },
        "phone": {
          "description": "The phone number.",
          "minLength": 1,
          "type": "string"
        },
        "emailList": {
          "description": "The email list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Container": {
      "description": "Represents a container on the  Data Box Edge/Gateway device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ContainerProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "ContainerList": {
      "description": "Collection of all the containers on the Data Box Edge/Gateway device.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of containers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ContainerProperties": {
      "description": "The container properties.",
      "required": [
        "dataFormat"
      ],
      "type": "object",
      "properties": {
        "containerStatus": {
          "description": "Current status of the container.",
          "enum": [
            "OK",
            "Offline",
            "Unknown",
            "Updating",
            "NeedsAttention"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ContainerStatus",
            "modelAsString": true
          }
        },
        "dataFormat": {
          "description": "DataFormat for Container",
          "enum": [
            "BlockBlob",
            "PageBlob",
            "AzureFile"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AzureContainerDataFormat",
            "modelAsString": true
          }
        },
        "refreshDetails": {
          "$ref": "#/definitions/RefreshDetails"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The UTC time when container got created.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DCAccessCode": {
      "description": "DC Access code in the case of Self Managed Shipping.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DCAccessCodeProperties"
        }
      }
    },
    "DCAccessCodeProperties": {
      "description": "DCAccessCode Properties.",
      "type": "object",
      "properties": {
        "authCode": {
          "description": "DCAccess Code for the Self Managed shipment.",
          "type": "string"
        }
      }
    },
    "DataBoxEdgeDevice": {
      "description": "The Data Box Edge/Gateway device.",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "location": {
          "description": "The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.",
          "minLength": 1,
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "etag": {
          "description": "The etag for the devices.",
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity"
        },
        "kind": {
          "description": "The kind of the device.",
          "enum": [
            "AzureDataBoxGateway",
            "AzureStackEdge",
            "AzureStackHub",
            "AzureModularDataCentre"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DataBoxEdgeDeviceKind",
            "modelAsString": true
          }
        },
        "properties": {
          "$ref": "#/definitions/DataBoxEdgeDeviceProperties"
        }
      }
    },
    "DataBoxEdgeDeviceExtendedInfo": {
      "description": "The extended Info of the Data Box Edge/Gateway device.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataBoxEdgeDeviceExtendedInfoProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "DataBoxEdgeDeviceExtendedInfoPatch": {
      "description": "The Data Box Edge/Gateway device extended info patch.",
      "type": "object",
      "properties": {
        "clientSecretStoreId": {
          "description": "The Key Vault ARM Id for client secrets",
          "type": "string"
        },
        "clientSecretStoreUrl": {
          "description": "The url to access the Client Key Vault",
          "type": "string"
        },
        "channelIntegrityKeyName": {
          "description": "The name for Channel Integrity Key stored in the Client Key Vault",
          "type": "string"
        },
        "channelIntegrityKeyVersion": {
          "description": "The version of Channel Integrity Key stored in the Client Key Vault",
          "type": "string"
        },
        "syncStatus": {
          "description": "For changing or to initiate the resync to key-vault set the status to KeyVaultSyncPending, rest of the status will not be applicable.",
          "enum": [
            "KeyVaultSynced",
            "KeyVaultSyncFailed",
            "KeyVaultNotConfigured",
            "KeyVaultSyncPending",
            "KeyVaultSyncing",
            "KeyVaultNotSynced"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "KeyVaultSyncStatus",
            "modelAsString": true
          }
        }
      }
    },
    "DataBoxEdgeDeviceExtendedInfoProperties": {
      "description": "The properties of the Data Box Edge/Gateway device extended info.",
      "type": "object",
      "properties": {
        "encryptionKeyThumbprint": {
          "description": "The digital signature of encrypted certificate.",
          "type": "string"
        },
        "encryptionKey": {
          "description": "The public part of the encryption certificate. Client uses this to encrypt any secret.",
          "type": "string"
        },
        "resourceKey": {
          "description": "The Resource ID of the Resource.",
          "type": "string",
          "readOnly": true
        },
        "clientSecretStoreId": {
          "description": "The Key Vault ARM Id for client secrets",
          "type": "string"
        },
        "clientSecretStoreUrl": {
          "description": "The url to access the Client Key Vault",
          "type": "string"
        },
        "channelIntegrityKeyName": {
          "description": "The name of Channel Integrity Key stored in the Client Key Vault",
          "type": "string"
        },
        "channelIntegrityKeyVersion": {
          "description": "The version of Channel Integrity Key stored in the Client Key Vault",
          "type": "string"
        },
        "keyVaultSyncStatus": {
          "description": "Key vault sync status",
          "enum": [
            "KeyVaultSynced",
            "KeyVaultSyncFailed",
            "KeyVaultNotConfigured",
            "KeyVaultSyncPending",
            "KeyVaultSyncing",
            "KeyVaultNotSynced"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "KeyVaultSyncStatus",
            "modelAsString": true
          }
        },
        "deviceSecrets": {
          "description": "Device secrets, will be returned only with ODataFilter $expand=deviceSecrets",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Secret"
          },
          "readOnly": true
        },
        "clusterWitnessType": {
          "description": "Cluster Witness Type",
          "enum": [
            "None",
            "Cloud",
            "FileShare"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ClusterWitnessType",
            "modelAsString": true
          }
        },
        "fileShareWitnessLocation": {
          "description": "The witness location of file share.",
          "type": "string",
          "readOnly": true
        },
        "fileShareWitnessUsername": {
          "description": "The username of file share.",
          "type": "string",
          "readOnly": true
        },
        "cloudWitnessStorageAccountName": {
          "description": "The Cloud Witness Storage account name.",
          "type": "string",
          "readOnly": true
        },
        "cloudWitnessContainerName": {
          "description": "The Container for cloud witness in the storage account.",
          "type": "string",
          "readOnly": true
        },
        "cloudWitnessStorageEndpoint": {
          "description": "The Azure service endpoint of the cloud witness storage account.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataBoxEdgeDeviceList": {
      "description": "The collection of Data Box Edge/Gateway devices.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of Data Box Edge/Gateway devices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataBoxEdgeDevice"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataBoxEdgeDevicePatch": {
      "description": "The Data Box Edge/Gateway device patch.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "The tags attached to the Data Box Edge/Gateway resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity"
        },
        "properties": {
          "$ref": "#/definitions/DataBoxEdgeDevicePropertiesPatch"
        }
      }
    },
    "DataBoxEdgeDeviceProperties": {
      "description": "The properties of the Data Box Edge/Gateway device.",
      "type": "object",
      "properties": {
        "isIoTRoleAllowed": {
          "description": "Is true of IoT Config is allowed for the device and false otherwise",
          "type": "boolean",
          "readOnly": true
        },
        "dataBoxEdgeDeviceStatus": {
          "description": "The status of the Data Box Edge/Gateway device.",
          "enum": [
            "ReadyToSetup",
            "Online",
            "Offline",
            "NeedsAttention",
            "Disconnected",
            "PartiallyDisconnected",
            "Maintenance"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DataBoxEdgeDeviceStatus",
            "modelAsString": true
          }
        },
        "serialNumber": {
          "description": "The Serial Number of Data Box Edge/Gateway device.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The Description of the Data Box Edge/Gateway device.",
          "type": "string",
          "readOnly": true
        },
        "modelDescription": {
          "description": "The description of the Data Box Edge/Gateway device model.",
          "type": "string",
          "readOnly": true
        },
        "deviceType": {
          "description": "The type of the Data Box Edge/Gateway device.",
          "enum": [
            "DataBoxEdgeDevice"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DeviceType",
            "modelAsString": true
          }
        },
        "friendlyName": {
          "description": "The Data Box Edge/Gateway device name.",
          "type": "string",
          "readOnly": true
        },
        "culture": {
          "description": "The Data Box Edge/Gateway device culture.",
          "type": "string",
          "readOnly": true
        },
        "deviceModel": {
          "description": "The Data Box Edge/Gateway device model.",
          "type": "string",
          "readOnly": true
        },
        "deviceSoftwareVersion": {
          "description": "The Data Box Edge/Gateway device software version.",
          "type": "string",
          "readOnly": true
        },
        "deviceLocalCapacity": {
          "format": "int64",
          "description": "The Data Box Edge/Gateway device local capacity in MB.",
          "type": "integer",
          "readOnly": true
        },
        "timeZone": {
          "description": "The Data Box Edge/Gateway device timezone.",
          "type": "string",
          "readOnly": true
        },
        "deviceHcsVersion": {
          "description": "The device software version number of the device (eg: 1.2.18105.6).",
          "type": "string",
          "readOnly": true
        },
        "configuredRoleTypes": {
          "description": "Type of compute roles configured.",
          "type": "array",
          "items": {
            "description": "Role type",
            "enum": [
              "IOT",
              "ASA",
              "Functions",
              "Cognitive",
              "MEC",
              "CloudEdgeManagement",
              "Kubernetes",
              "ASEKubernetes"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "RoleTypes",
              "modelAsString": true
            }
          },
          "readOnly": true
        },
        "nodeCount": {
          "format": "int32",
          "description": "The number of nodes in the cluster.",
          "type": "integer",
          "readOnly": true
        },
        "resourceMoveDetails": {
          "$ref": "#/definitions/ResourceMoveDetails"
        },
        "edgeProfile": {
          "$ref": "#/definitions/EdgeProfile"
        },
        "dataResidency": {
          "$ref": "#/definitions/DataResidency"
        },
        "computeVersionInformation": {
          "$ref": "#/definitions/ComputeVersionInformation"
        },
        "kubernetesPlatform": {
          "description": "Type of Kubernetes Platform",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataBoxEdgeDevicePropertiesPatch": {
      "description": "The Data Box Edge/Gateway device properties patch.",
      "type": "object",
      "properties": {
        "edgeProfile": {
          "$ref": "#/definitions/EdgeProfilePatch"
        }
      }
    },
    "DataBoxEdgeMoveRequest": {
      "description": "Resource Move details",
      "required": [
        "resources",
        "targetResourceGroup"
      ],
      "type": "object",
      "properties": {
        "targetResourceGroup": {
          "description": "Target resource group ARMId",
          "minLength": 1,
          "type": "string"
        },
        "resources": {
          "description": "List of resources to be moved",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataBoxEdgeSku": {
      "description": "The Sku information.",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The Sku name.",
          "enum": [
            "Gateway",
            "Edge",
            "TEA_1Node",
            "TEA_1Node_UPS",
            "TEA_1Node_Heater",
            "TEA_1Node_UPS_Heater",
            "TEA_4Node_Heater",
            "TEA_4Node_UPS_Heater",
            "TMA",
            "TDC",
            "TCA_Small",
            "GPU",
            "TCA_Large",
            "EdgeP_Base",
            "EdgeP_High",
            "EdgePR_Base",
            "EdgePR_Base_UPS",
            "EP2_64_1VPU_W",
            "EP2_128_1T4_Mx1_W",
            "EP2_256_2T4_W",
            "EdgeMR_Mini",
            "RCA_Small",
            "RCA_Large",
            "RDC",
            "Management",
            "EP2_64_Mx1_W",
            "EP2_128_GPU1_Mx1_W",
            "EP2_256_GPU2_Mx1",
            "EdgeMR_TCP"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "kind": {
          "description": "The Sku kind.",
          "type": "string",
          "readOnly": true
        },
        "tier": {
          "description": "The Sku tier.",
          "enum": [
            "Standard"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        },
        "size": {
          "description": "The Sku kind.",
          "type": "string",
          "readOnly": true
        },
        "family": {
          "description": "The Sku family.",
          "type": "string",
          "readOnly": true
        },
        "locations": {
          "description": "Availability of the Sku for the region.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "apiVersions": {
          "description": "The API versions in which Sku is available.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "locationInfo": {
          "description": "Availability of the Sku for the location/zone/site.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuLocationInfo"
          },
          "readOnly": true
        },
        "costs": {
          "description": "The pricing info of the Sku.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuCost"
          },
          "readOnly": true
        },
        "signupOption": {
          "description": "Sku can be signed up by customer or not.",
          "enum": [
            "None",
            "Available"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "SkuSignupOption",
            "modelAsString": true
          }
        },
        "version": {
          "description": "Availability of the Sku as preview/stable.",
          "enum": [
            "Stable",
            "Preview"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "SkuVersion",
            "modelAsString": true
          }
        },
        "availability": {
          "description": "Links to the next set of results",
          "enum": [
            "Available",
            "Unavailable"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "SkuAvailability",
            "modelAsString": true
          }
        },
        "shipmentTypes": {
          "description": "List of Shipment Types supported by this SKU",
          "type": "array",
          "items": {
            "description": "Defines the types of shipment for an order",
            "enum": [
              "NotApplicable",
              "ShippedToCustomer",
              "SelfPickup"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "ShipmentType",
              "modelAsString": true
            }
          },
          "readOnly": true
        },
        "capabilities": {
          "description": "The capability info of the SKU.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuCapability"
          },
          "readOnly": true
        }
      }
    },
    "DataBoxEdgeSkuList": {
      "description": "List of SKU Information objects.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of ResourceType Sku",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataBoxEdgeSku"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Links to the next set of results",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataResidency": {
      "description": "Wraps data-residency related information for edge-resource and this should be used with ARM layer.",
      "type": "object",
      "properties": {
        "type": {
          "description": "DataResidencyType enum",
          "enum": [
            "GeoZoneReplication",
            "ZoneReplication"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataResidencyType",
            "modelAsString": true
          }
        }
      }
    },
    "DeviceCapacityInfo": {
      "description": "Object for Capturing DeviceCapacityInfo",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeviceCapacityInfoProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "DeviceCapacityInfoProperties": {
      "description": "The properties of Device Capacity Info",
      "type": "object",
      "properties": {
        "timeStamp": {
          "format": "date-time",
          "description": "Timestamp of request in UTC",
          "type": "string"
        },
        "clusterStorageCapacityInfo": {
          "$ref": "#/definitions/ClusterStorageViewData"
        },
        "clusterComputeCapacityInfo": {
          "$ref": "#/definitions/ClusterCapacityViewData"
        },
        "nodeCapacityInfos": {
          "description": "The dictionary of individual node names and node capacities in the cluster.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/HostCapacity"
          }
        }
      }
    },
    "DeviceCapacityRequestInfo": {
      "description": "Object for Capturing DeviceCapacityRequestInfo",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeviceCapacityRequestInfoProperties"
        }
      }
    },
    "DeviceCapacityRequestInfoProperties": {
      "description": "Properties of Device Capacity Request Info containing VM's to be checked and their corresponding results.",
      "required": [
        "vmPlacementQuery"
      ],
      "type": "object",
      "properties": {
        "vmPlacementQuery": {
          "description": "Array containing the sizes of the VMs for checking if its feasible to create them on the appliance.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "vmPlacementResults": {
          "description": "Array of the VMs of the sizes in VmSizes can be provisioned on the appliance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmPlacementRequestResult"
          }
        },
        "deviceCapacityRequestType": {
          "description": "Flag to check the type of capacity check on the appliance.",
          "type": "string"
        }
      }
    },
    "DiagnosticProactiveLogCollectionSettings": {
      "description": "The diagnostic proactive log collection settings of a device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProactiveLogCollectionSettingsProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "DiagnosticRemoteSupportSettings": {
      "description": "The remote support settings of a device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiagnosticRemoteSupportSettingsProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "DiagnosticRemoteSupportSettingsProperties": {
      "description": "The properties of remote support settings.",
      "type": "object",
      "properties": {
        "remoteSupportSettingsList": {
          "description": "Remote support settings list according to the RemoteApplicationType",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RemoteSupportSettings"
          }
        }
      }
    },
    "EdgeProfile": {
      "description": "Details about Edge Profile for the resource",
      "type": "object",
      "properties": {
        "subscription": {
          "$ref": "#/definitions/EdgeProfileSubscription"
        }
      }
    },
    "EdgeProfilePatch": {
      "description": "The Data Box Edge/Gateway Edge Profile patch.",
      "type": "object",
      "properties": {
        "subscription": {
          "$ref": "#/definitions/EdgeProfileSubscriptionPatch"
        }
      }
    },
    "EdgeProfileSubscription": {
      "description": "Subscription details for the Edge Profile",
      "type": "object",
      "properties": {
        "registrationId": {
          "description": "Edge Subscription Registration ID",
          "type": "string"
        },
        "id": {
          "description": "ARM ID of the subscription",
          "type": "string"
        },
        "state": {
          "enum": [
            "Registered",
            "Warned",
            "Suspended",
            "Deleted",
            "Unregistered"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": true
          }
        },
        "registrationDate": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SubscriptionProperties"
        }
      }
    },
    "EdgeProfileSubscriptionPatch": {
      "description": "The Data Box Edge/Gateway Edge Profile Subscription patch.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The path ID that uniquely identifies the subscription of the edge profile.",
          "type": "string"
        }
      }
    },
    "EtcdInfo": {
      "description": "Etcd configuration",
      "type": "object",
      "properties": {
        "type": {
          "description": "Etcd type",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Etcd version",
          "type": "string",
          "readOnly": true
        },
        "componentType": {
          "description": "ComponentType of the Kubernetes node.",
          "enum": [
            "Invalid",
            "Cluster",
            "Node",
            "Etcd",
            "CNI",
            "LoadBalancer"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "KubernetesComponentType",
            "modelAsString": true
          }
        }
      }
    },
    "FileEventTrigger": {
      "description": "Trigger details.",
      "required": [
        "kind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileTriggerProperties"
        },
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "FileEvent"
    },
    "FileSourceInfo": {
      "description": "File source details.",
      "required": [
        "shareId"
      ],
      "type": "object",
      "properties": {
        "shareId": {
          "description": "File share ID.",
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "FileTriggerProperties": {
      "description": "File trigger properties.",
      "required": [
        "sinkInfo",
        "sourceInfo"
      ],
      "type": "object",
      "properties": {
        "sourceInfo": {
          "$ref": "#/definitions/FileSourceInfo"
        },
        "sinkInfo": {
          "$ref": "#/definitions/RoleSinkInfo"
        },
        "customContextTag": {
          "description": "A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.",
          "maxLength": 192,
          "type": "string"
        }
      }
    },
    "GenerateCertResponse": {
      "description": "Used in activation key generation flow.",
      "type": "object",
      "properties": {
        "publicKey": {
          "description": "Gets or sets base64 encoded certificate raw data,\r\nthis is the public part needed to be uploaded to cert vault",
          "type": "string"
        },
        "privateKey": {
          "description": "Gets or sets base64 encoded private part of the certificate,\r\nneeded to form the activation key",
          "type": "string",
          "x-ms-secret": true
        },
        "expiryTimeInUTC": {
          "description": "Gets or sets expiry time in UTC",
          "type": "string"
        }
      }
    },
    "HostCapacity": {
      "description": "Host Capacity Data.",
      "type": "object",
      "properties": {
        "hostName": {
          "description": "The name of the host.",
          "type": "string"
        },
        "effectiveAvailableMemoryMbOnHost": {
          "format": "int64",
          "description": "The available memory on the host accounting for VM placement size and any host VM reservations.",
          "type": "integer"
        },
        "availableGpuCount": {
          "format": "int32",
          "description": "The available amount of GPUs on the host to use after accounting for GPUS used by reservations on the host.",
          "type": "integer"
        },
        "vmUsedMemory": {
          "description": "The VM used memory per VmId.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VmMemory"
          }
        },
        "gpuType": {
          "description": "The GPU type of the VM.",
          "type": "string"
        },
        "numaNodesData": {
          "description": "The numa nodes information for Hpn VMs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumaNodeData"
          }
        }
      }
    },
    "ImageRepositoryCredential": {
      "description": "Image repository credential.",
      "required": [
        "imageRepositoryUrl",
        "userName"
      ],
      "type": "object",
      "properties": {
        "imageRepositoryUrl": {
          "description": "Image repository url (e.g.: mcr.microsoft.com).",
          "minLength": 1,
          "type": "string"
        },
        "userName": {
          "description": "Repository user name.",
          "minLength": 1,
          "type": "string"
        },
        "password": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret"
        }
      }
    },
    "IoTDeviceInfo": {
      "description": "Metadata of IoT device/IoT Edge device to be configured.",
      "required": [
        "deviceId",
        "ioTHostHub"
      ],
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "ID of the IoT device/edge device.",
          "minLength": 1,
          "type": "string"
        },
        "ioTHostHub": {
          "description": "Host name for the IoT hub associated to the device.",
          "minLength": 1,
          "type": "string"
        },
        "ioTHostHubId": {
          "description": "Id for the IoT hub associated to the device.",
          "type": "string"
        },
        "authentication": {
          "$ref": "#/definitions/Authentication"
        }
      }
    },
    "IoTEdgeAgentInfo": {
      "description": "IoT edge agent details is optional, this will be used for download system Agent module while bootstrapping IoT Role if specified.",
      "required": [
        "imageName",
        "tag"
      ],
      "type": "object",
      "properties": {
        "imageName": {
          "description": "Name of the IoT edge agent image.",
          "minLength": 1,
          "type": "string"
        },
        "tag": {
          "description": "Image Tag.",
          "minLength": 1,
          "type": "string"
        },
        "imageRepository": {
          "$ref": "#/definitions/ImageRepositoryCredential"
        }
      }
    },
    "IoTRole": {
      "description": "Compute role.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Role"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/IoTRoleProperties"
        },
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "IOT"
    },
    "IoTRoleProperties": {
      "description": "IoT role properties.",
      "required": [
        "hostPlatform",
        "ioTDeviceDetails",
        "ioTEdgeDeviceDetails",
        "roleStatus"
      ],
      "type": "object",
      "properties": {
        "hostPlatform": {
          "description": "Host OS supported by the IoT role.",
          "enum": [
            "Windows",
            "Linux"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PlatformType",
            "modelAsString": true
          }
        },
        "ioTDeviceDetails": {
          "$ref": "#/definitions/IoTDeviceInfo"
        },
        "ioTEdgeDeviceDetails": {
          "$ref": "#/definitions/IoTDeviceInfo"
        },
        "shareMappings": {
          "description": "Mount points of shares in role(s).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MountPointMap"
          }
        },
        "ioTEdgeAgentInfo": {
          "$ref": "#/definitions/IoTEdgeAgentInfo"
        },
        "hostPlatformType": {
          "description": "Platform where the Iot runtime is hosted.",
          "enum": [
            "KubernetesCluster",
            "LinuxVM"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "HostPlatformType",
            "modelAsString": true
          }
        },
        "computeResource": {
          "$ref": "#/definitions/ComputeResource"
        },
        "roleStatus": {
          "description": "Role status.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoleStatus",
            "modelAsString": true
          }
        }
      }
    },
    "Ipv4Config": {
      "description": "Details related to the IPv4 address configuration.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "The IPv4 address of the network adapter.",
          "type": "string",
          "readOnly": true
        },
        "subnet": {
          "description": "The IPv4 subnet of the network adapter.",
          "type": "string",
          "readOnly": true
        },
        "gateway": {
          "description": "The IPv4 gateway of the network adapter.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Ipv6Config": {
      "description": "Details related to the IPv6 address configuration.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "The IPv6 address of the network adapter.",
          "type": "string",
          "readOnly": true
        },
        "prefixLength": {
          "format": "int32",
          "description": "The IPv6 prefix of the network adapter.",
          "type": "integer",
          "readOnly": true
        },
        "gateway": {
          "description": "The IPv6 gateway of the network adapter.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Job": {
      "description": "A device job.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The current status of the job.",
          "enum": [
            "Invalid",
            "Running",
            "Succeeded",
            "Failed",
            "Canceled",
            "Paused",
            "Scheduled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "The UTC date and time at which the job started.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "format": "date-time",
          "description": "The UTC date and time at which the job completed.",
          "type": "string",
          "readOnly": true
        },
        "percentComplete": {
          "format": "int32",
          "description": "The percentage of the job that is complete.",
          "type": "integer",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/JobErrorDetails"
        },
        "properties": {
          "$ref": "#/definitions/JobProperties"
        }
      }
    },
    "JobErrorDetails": {
      "description": "The job error information containing the list of job errors.",
      "type": "object",
      "properties": {
        "errorDetails": {
          "description": "The error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorItem"
          },
          "readOnly": true
        },
        "code": {
          "description": "The code intended for programmatic access.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The message that describes the error in detail.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobErrorItem": {
      "description": "The job error items.",
      "type": "object",
      "properties": {
        "recommendations": {
          "description": "The recommended actions.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "code": {
          "description": "The code intended for programmatic access.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The message that describes the error in detail.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobProperties": {
      "description": "The properties for the job.",
      "type": "object",
      "properties": {
        "jobType": {
          "description": "The type of the job.",
          "enum": [
            "Invalid",
            "ScanForUpdates",
            "DownloadUpdates",
            "InstallUpdates",
            "RefreshShare",
            "RefreshContainer",
            "Backup",
            "Restore",
            "TriggerSupportPackage"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true
          }
        },
        "currentStage": {
          "description": "Current stage of the update operation.",
          "enum": [
            "Initial",
            "ScanStarted",
            "ScanComplete",
            "ScanFailed",
            "DownloadStarted",
            "DownloadComplete",
            "DownloadFailed",
            "InstallStarted",
            "InstallComplete",
            "InstallFailed",
            "RebootInitiated",
            "Success",
            "Failure",
            "RescanStarted",
            "RescanComplete",
            "RescanFailed",
            "Unknown"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "UpdateOperationStage",
            "modelAsString": true
          }
        },
        "downloadProgress": {
          "$ref": "#/definitions/UpdateDownloadProgress"
        },
        "installProgress": {
          "$ref": "#/definitions/UpdateInstallProgress"
        },
        "totalRefreshErrors": {
          "format": "int32",
          "description": "Total number of errors encountered during the refresh process.",
          "type": "integer",
          "readOnly": true
        },
        "errorManifestFile": {
          "description": "Local share/remote container relative path to the error manifest file of the refresh.",
          "type": "string",
          "readOnly": true
        },
        "refreshedEntityId": {
          "description": "ARM ID of the entity that was refreshed.",
          "type": "string",
          "readOnly": true
        },
        "folder": {
          "description": "If only subfolders need to be refreshed, then the subfolder path inside the share or container. (The path is empty if there are no subfolders.)",
          "type": "string"
        }
      }
    },
    "KubernetesClusterInfo": {
      "description": "Kubernetes cluster configuration",
      "required": [
        "version"
      ],
      "type": "object",
      "properties": {
        "etcdInfo": {
          "$ref": "#/definitions/EtcdInfo"
        },
        "nodes": {
          "description": "Kubernetes cluster nodes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeInfo"
          },
          "readOnly": true
        },
        "version": {
          "description": "Kubernetes cluster version",
          "minLength": 1,
          "type": "string"
        },
        "componentType": {
          "description": "ComponentType of the Kubernetes node.",
          "enum": [
            "Invalid",
            "Cluster",
            "Node",
            "Etcd",
            "CNI",
            "LoadBalancer"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "KubernetesComponentType",
            "modelAsString": true
          }
        }
      }
    },
    "KubernetesIPConfiguration": {
      "description": "Kubernetes node IP configuration",
      "type": "object",
      "properties": {
        "port": {
          "description": "Port of the Kubernetes node.",
          "type": "string",
          "readOnly": true
        },
        "ipAddress": {
          "description": "IP address of the Kubernetes node.",
          "type": "string"
        }
      }
    },
    "KubernetesRole": {
      "description": "The limited preview of Kubernetes Cluster Management from the Azure supports:\r\n1. Using a simple turn-key option in Azure Portal, deploy a Kubernetes cluster on your Azure Stack Edge device. \r\n2. Configure Kubernetes cluster running on your device with Arc enabled Kubernetes with a click of a button in the Azure Portal. \r\n Azure Arc enables organizations to view, manage, and govern their on-premises Kubernetes clusters using the Azure Portal, command line tools, and APIs.\r\n3. Easily configure Persistent Volumes using SMB and NFS shares for storing container data. \r\n For more information, refer to the document here: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8-Cloud-Management-20210323.pdf \r\n Or Demo: https://databoxupdatepackages.blob.core.windows.net/documentation/Microsoft-Azure-Stack-Edge-K8S-Cloud-Management-20210323.mp4\r\n By using this feature, you agree to the preview legal terms. See the https://azure.microsoft.com/en-us/support/legal/preview-supplemental-terms/",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Role"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/KubernetesRoleProperties"
        },
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "Kubernetes"
    },
    "KubernetesRoleCompute": {
      "description": "Kubernetes role compute resource",
      "required": [
        "vmProfile"
      ],
      "type": "object",
      "properties": {
        "vmProfile": {
          "description": "VM profile",
          "minLength": 1,
          "type": "string"
        },
        "memoryInBytes": {
          "format": "int64",
          "description": "Memory in bytes",
          "type": "integer",
          "readOnly": true
        },
        "processorCount": {
          "format": "int32",
          "description": "Processor count",
          "type": "integer",
          "readOnly": true
        },
        "hugePage2M": {
          "format": "int32",
          "description": "Count of huge pages",
          "type": "integer",
          "readOnly": true
        },
        "hugePage1G": {
          "format": "int32",
          "description": "Count of huge pages",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "KubernetesRoleNetwork": {
      "description": "Kubernetes role network resource",
      "type": "object",
      "properties": {
        "cniConfig": {
          "$ref": "#/definitions/CniConfig"
        },
        "loadBalancerConfig": {
          "$ref": "#/definitions/LoadBalancerConfig"
        }
      }
    },
    "KubernetesRoleProperties": {
      "description": "Kubernetes role properties.",
      "required": [
        "hostPlatform",
        "kubernetesClusterInfo",
        "kubernetesRoleResources",
        "roleStatus"
      ],
      "type": "object",
      "properties": {
        "hostPlatform": {
          "description": "Host OS supported by the Kubernetes role.",
          "enum": [
            "Windows",
            "Linux"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PlatformType",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "State of Kubernetes deployment",
          "enum": [
            "Invalid",
            "Creating",
            "Created",
            "Updating",
            "Reconfiguring",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "KubernetesState",
            "modelAsString": true
          }
        },
        "hostPlatformType": {
          "description": "Platform where the runtime is hosted.",
          "enum": [
            "KubernetesCluster",
            "LinuxVM"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "HostPlatformType",
            "modelAsString": true
          }
        },
        "kubernetesClusterInfo": {
          "$ref": "#/definitions/KubernetesClusterInfo"
        },
        "kubernetesRoleResources": {
          "$ref": "#/definitions/KubernetesRoleResources"
        },
        "roleStatus": {
          "description": "Role status.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoleStatus",
            "modelAsString": true
          }
        }
      }
    },
    "KubernetesRoleResources": {
      "description": "Kubernetes role resoures",
      "required": [
        "compute"
      ],
      "type": "object",
      "properties": {
        "storage": {
          "$ref": "#/definitions/KubernetesRoleStorage"
        },
        "compute": {
          "$ref": "#/definitions/KubernetesRoleCompute"
        },
        "network": {
          "$ref": "#/definitions/KubernetesRoleNetwork"
        }
      }
    },
    "KubernetesRoleStorage": {
      "description": "Kubernetes role storage resource",
      "type": "object",
      "properties": {
        "storageClasses": {
          "description": "Kubernetes storage class info.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesRoleStorageClassInfo"
          },
          "readOnly": true
        },
        "endpoints": {
          "description": "Mount points of shares in role(s).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MountPointMap"
          }
        }
      }
    },
    "KubernetesRoleStorageClassInfo": {
      "description": "Kubernetes storage class info.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Storage class name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Storage class type.",
          "type": "string",
          "readOnly": true
        },
        "posixCompliant": {
          "description": "If provisioned storage is posix compliant.",
          "enum": [
            "Invalid",
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PosixComplianceStatus",
            "modelAsString": true
          }
        }
      }
    },
    "LoadBalancerConfig": {
      "description": "Load balancer configuration",
      "type": "object",
      "properties": {
        "type": {
          "description": "Load balancer type",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Load balancer version",
          "type": "string",
          "readOnly": true
        },
        "componentType": {
          "description": "ComponentType of the Kubernetes node.",
          "enum": [
            "Invalid",
            "Cluster",
            "Node",
            "Etcd",
            "CNI",
            "LoadBalancer"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "KubernetesComponentType",
            "modelAsString": true
          }
        }
      }
    },
    "MECRole": {
      "description": "MEC role.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Role"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MECRoleProperties"
        },
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "MEC"
    },
    "MECRoleProperties": {
      "description": "MEC role properties.",
      "required": [
        "roleStatus"
      ],
      "type": "object",
      "properties": {
        "connectionString": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret"
        },
        "controllerEndpoint": {
          "description": "Controller Endpoint.",
          "type": "string"
        },
        "resourceUniqueId": {
          "description": "Unique Id of the Resource.",
          "type": "string"
        },
        "roleStatus": {
          "description": "Role status.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoleStatus",
            "modelAsString": true
          }
        }
      }
    },
    "MarketplaceImageOffer": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MarketplaceImageOfferProperties"
        }
      }
    },
    "MarketplaceImageOfferList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketplaceImageOffer"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MarketplaceImageOfferProperties": {
      "type": "object",
      "properties": {
        "publisherId": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "contentVersion": {
          "type": "string"
        },
        "provisioningState": {
          "type": "string"
        },
        "skuMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuMapping"
          }
        }
      }
    },
    "MarketplaceImagePublisher": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MarketplaceImagePublisherProperties"
        }
      }
    },
    "MarketplaceImagePublisherList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketplaceImagePublisher"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MarketplaceImagePublisherProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string"
        }
      }
    },
    "MarketplaceImageSku": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MarketplaceImageSkuProperties"
        }
      }
    },
    "MarketplaceImageSkuList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketplaceImageSku"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MarketplaceImageSkuProperties": {
      "type": "object",
      "properties": {
        "publisherId": {
          "type": "string"
        },
        "offerId": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "contentVersion": {
          "type": "string"
        },
        "skuMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuMapping"
          }
        },
        "provisioningState": {
          "type": "string"
        }
      }
    },
    "MarketplaceImageVersion": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MarketplaceImageVersionProperties"
        }
      }
    },
    "MarketplaceImageVersionList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketplaceImageVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MarketplaceImageVersionProperties": {
      "type": "object",
      "properties": {
        "publisherId": {
          "type": "string"
        },
        "offerId": {
          "type": "string"
        },
        "skuId": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "contentVersion": {
          "type": "string"
        },
        "provisioningState": {
          "type": "string"
        }
      }
    },
    "MarketplaceSasToken": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SasTokenProperties"
        }
      }
    },
    "MetricConfiguration": {
      "description": "Metric configuration.",
      "required": [
        "counterSets",
        "resourceId"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Resource ID on which the metrics should be pushed.",
          "minLength": 1,
          "type": "string"
        },
        "mdmAccount": {
          "description": "The MDM account to which the counters should be pushed.",
          "type": "string"
        },
        "metricNameSpace": {
          "description": "The MDM namespace to which the counters should be pushed. This is required if MDMAccount is specified",
          "type": "string"
        },
        "counterSets": {
          "description": "Host name for the IoT hub associated to the device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricCounterSet"
          }
        }
      }
    },
    "MetricCounter": {
      "description": "The metric counter",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The counter name.",
          "minLength": 1,
          "type": "string"
        },
        "instance": {
          "description": "The instance from which counter should be collected.",
          "type": "string"
        },
        "dimensionFilter": {
          "description": "The dimension filter.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          }
        },
        "additionalDimensions": {
          "description": "The additional dimensions to be added to metric.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          }
        }
      }
    },
    "MetricCounterSet": {
      "description": "The metric counter set",
      "required": [
        "counters"
      ],
      "type": "object",
      "properties": {
        "counters": {
          "description": "The counters that should be collected in this set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricCounter"
          }
        }
      }
    },
    "MetricDimension": {
      "description": "The metric dimension",
      "required": [
        "sourceName",
        "sourceType"
      ],
      "type": "object",
      "properties": {
        "sourceType": {
          "description": "The dimension type.",
          "minLength": 1,
          "type": "string"
        },
        "sourceName": {
          "description": "The dimension value.",
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "MetricDimension_V1": {
      "description": "Metric Dimension v1.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the metrics dimension.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the metrics dimension.",
          "type": "string"
        },
        "toBeExportedForShoebox": {
          "description": "To be exported to shoe box.",
          "type": "boolean"
        }
      }
    },
    "MetricSpecification_V1": {
      "description": "Metric specification version 1.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the metric.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the metric.",
          "type": "string"
        },
        "displayDescription": {
          "description": "Description of the metric to be displayed.",
          "type": "string"
        },
        "unit": {
          "description": "Metric units.",
          "enum": [
            "NotSpecified",
            "Percent",
            "Count",
            "Seconds",
            "Milliseconds",
            "Bytes",
            "BytesPerSecond",
            "CountPerSecond"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricUnit",
            "modelAsString": true
          }
        },
        "aggregationType": {
          "description": "Metric aggregation type.",
          "enum": [
            "NotSpecified",
            "None",
            "Average",
            "Minimum",
            "Maximum",
            "Total",
            "Count"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricAggregationType",
            "modelAsString": true
          }
        },
        "dimensions": {
          "description": "Metric dimensions, other than default dimension which is resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension_V1"
          }
        },
        "fillGapWithZero": {
          "description": "Set true to fill the gaps with zero.",
          "type": "boolean"
        },
        "category": {
          "description": "Metric category.",
          "enum": [
            "Capacity",
            "Transaction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricCategory",
            "modelAsString": true
          }
        },
        "resourceIdDimensionNameOverride": {
          "description": "Resource name override.",
          "type": "string"
        },
        "supportedTimeGrainTypes": {
          "description": "Support granularity of metrics.",
          "type": "array",
          "items": {
            "description": "Metric Time grain for aggrgation.",
            "enum": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT1D"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "TimeGrain",
              "modelAsString": true
            }
          }
        },
        "supportedAggregationTypes": {
          "description": "Support metric aggregation type.",
          "type": "array",
          "items": {
            "description": "Metric Aggregation Type.",
            "enum": [
              "NotSpecified",
              "None",
              "Average",
              "Minimum",
              "Maximum",
              "Total",
              "Count"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "MetricAggregationType",
              "modelAsString": true
            }
          }
        }
      }
    },
    "MonitoringMetricConfiguration": {
      "description": "The metric setting details for the role",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MonitoringMetricConfigurationProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "MonitoringMetricConfigurationList": {
      "description": "Collection of metric configurations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of metric configurations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoringMetricConfiguration"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MonitoringMetricConfigurationProperties": {
      "description": "Metrics properties",
      "required": [
        "metricConfigurations"
      ],
      "type": "object",
      "properties": {
        "metricConfigurations": {
          "description": "The metrics configuration details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricConfiguration"
          }
        }
      }
    },
    "MountPointMap": {
      "description": "The share mount point.",
      "required": [
        "shareId"
      ],
      "type": "object",
      "properties": {
        "shareId": {
          "description": "ID of the share mounted to the role VM.",
          "minLength": 1,
          "type": "string"
        },
        "roleId": {
          "description": "ID of the role to which share is mounted.",
          "type": "string",
          "readOnly": true
        },
        "mountPoint": {
          "description": "Mount point for the share.",
          "type": "string",
          "readOnly": true
        },
        "mountType": {
          "description": "Mounting type.",
          "enum": [
            "Volume",
            "HostPath"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "MountType",
            "modelAsString": true
          }
        },
        "roleType": {
          "description": "Role type.",
          "enum": [
            "IOT",
            "ASA",
            "Functions",
            "Cognitive",
            "MEC",
            "CloudEdgeManagement",
            "Kubernetes",
            "ASEKubernetes"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "RoleTypes",
            "modelAsString": true
          }
        }
      }
    },
    "NetworkAdapter": {
      "description": "Represents the networkAdapter on a device.",
      "type": "object",
      "properties": {
        "adapterId": {
          "description": "Instance ID of network adapter.",
          "type": "string",
          "readOnly": true
        },
        "adapterPosition": {
          "$ref": "#/definitions/NetworkAdapterPosition"
        },
        "index": {
          "format": "int32",
          "description": "Logical index of the adapter.",
          "type": "integer",
          "readOnly": true
        },
        "nodeId": {
          "description": "Node ID of the network adapter.",
          "type": "string",
          "readOnly": true
        },
        "networkAdapterName": {
          "description": "Network adapter name.",
          "type": "string",
          "readOnly": true
        },
        "label": {
          "description": "Hardware label for the adapter.",
          "type": "string",
          "readOnly": true
        },
        "macAddress": {
          "description": "MAC address.",
          "type": "string",
          "readOnly": true
        },
        "linkSpeed": {
          "format": "int64",
          "description": "Link speed.",
          "type": "integer",
          "readOnly": true
        },
        "status": {
          "description": "Value indicating whether this adapter is valid.",
          "enum": [
            "Inactive",
            "Active"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "NetworkAdapterStatus",
            "modelAsString": true
          }
        },
        "rdmaStatus": {
          "description": "Value indicating whether this adapter is RDMA capable.",
          "enum": [
            "Incapable",
            "Capable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NetworkAdapterRDMAStatus",
            "modelAsString": true
          }
        },
        "dhcpStatus": {
          "description": "Value indicating whether this adapter has DHCP enabled.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NetworkAdapterDHCPStatus",
            "modelAsString": true
          }
        },
        "ipv4Configuration": {
          "$ref": "#/definitions/Ipv4Config"
        },
        "ipv6Configuration": {
          "$ref": "#/definitions/Ipv6Config"
        },
        "ipv6LinkLocalAddress": {
          "description": "The IPv6 local address.",
          "type": "string",
          "readOnly": true
        },
        "dnsServers": {
          "description": "The list of DNS Servers of the device.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "NetworkAdapterPosition": {
      "description": "The network adapter position.",
      "type": "object",
      "properties": {
        "networkGroup": {
          "description": "The network group.",
          "enum": [
            "None",
            "NonRDMA",
            "RDMA"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "NetworkGroup",
            "modelAsString": true
          }
        },
        "port": {
          "format": "int32",
          "description": "The port.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NetworkSettings": {
      "description": "The network settings of a device.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSettingsProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "NetworkSettingsProperties": {
      "description": "The properties of network settings.",
      "type": "object",
      "properties": {
        "networkAdapters": {
          "description": "The network adapter list on the device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAdapter"
          },
          "readOnly": true
        }
      }
    },
    "Node": {
      "description": "Represents a single node in a Data box Edge/Gateway device\r\nGateway devices, standalone Edge devices and a single node cluster Edge device will all have 1 node\r\nMulti-node Edge devices will have more than 1 nodes",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/NodeProperties"
        }
      }
    },
    "NodeInfo": {
      "description": "Kubernetes node info",
      "type": "object",
      "properties": {
        "name": {
          "description": "Node name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Node type - Master/Worker",
          "enum": [
            "Invalid",
            "Master",
            "Worker",
            "ManagementCluster",
            "ControlPlane",
            "NodePool"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "KubernetesNodeType",
            "modelAsString": true
          }
        },
        "ipConfiguration": {
          "description": "IP Configuration of the Kubernetes node.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KubernetesIPConfiguration"
          }
        },
        "componentType": {
          "description": "ComponentType of the Kubernetes node.",
          "enum": [
            "Invalid",
            "Cluster",
            "Node",
            "Etcd",
            "CNI",
            "LoadBalancer"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "KubernetesComponentType",
            "modelAsString": true
          }
        }
      }
    },
    "NodeList": {
      "description": "Collection of Nodes.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of Nodes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Node"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NodeProperties": {
      "description": "This class represents the nodes in a highly available cluster",
      "type": "object",
      "properties": {
        "nodeStatus": {
          "description": "The current status of the individual node",
          "enum": [
            "Unknown",
            "Up",
            "Down",
            "Rebooting",
            "ShuttingDown"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "NodeStatus",
            "modelAsString": true
          }
        },
        "nodeChassisSerialNumber": {
          "description": "Serial number of the Chassis",
          "type": "string",
          "readOnly": true
        },
        "nodeSerialNumber": {
          "description": "Serial number of the individual node",
          "type": "string",
          "readOnly": true
        },
        "nodeDisplayName": {
          "description": "Display Name of the individual node",
          "type": "string",
          "readOnly": true
        },
        "nodeFriendlySoftwareVersion": {
          "description": "Friendly software version name that is currently installed on the node",
          "type": "string",
          "readOnly": true
        },
        "nodeHcsVersion": {
          "description": "HCS version that is currently installed on the node",
          "type": "string",
          "readOnly": true
        },
        "nodeInstanceId": {
          "description": "Guid instance id of the node",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NumaNodeData": {
      "description": "NUMA node data.",
      "type": "object",
      "properties": {
        "numaNodeIndex": {
          "format": "int32",
          "description": "The NUMA node index.",
          "type": "integer"
        },
        "totalMemoryInMb": {
          "format": "int64",
          "description": "The total memory on the NUMA node.",
          "type": "integer"
        },
        "logicalCoreCountPerCore": {
          "format": "int32",
          "description": "The logical cores per core count.",
          "type": "integer"
        },
        "effectiveAvailableMemoryInMb": {
          "format": "int64",
          "description": "The effective available memory on the NUMA node in MB.",
          "type": "integer"
        },
        "freeVCpuIndexesForHpn": {
          "description": "The free VCPU indices for the Hpn VMs.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "vCpuIndexesForHpn": {
          "description": "The VCPU indices for Hpn VMs",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "vCpuIndexesForRoot": {
          "description": "The VCPU indices for the root.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "Operation": {
      "description": "Operations.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation.",
          "type": "string"
        },
        "isDataAction": {
          "description": "Is data action.",
          "type": "boolean"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay"
        },
        "origin": {
          "description": "Origin of the operation.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties"
        }
      }
    },
    "OperationDisplay": {
      "description": "Operation display properties.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Provider name.",
          "type": "string"
        },
        "resource": {
          "description": "The type of resource in which the operation is performed.",
          "type": "string"
        },
        "operation": {
          "description": "Operation to be performed on the resource.",
          "type": "string"
        },
        "description": {
          "description": "Description of the operation to be performed.",
          "type": "string"
        }
      }
    },
    "OperationProperties": {
      "description": "Operation properties.",
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification"
        }
      }
    },
    "OperationsList": {
      "description": "The list of operations used for the discovery of available provider operations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string"
        }
      }
    },
    "Order": {
      "description": "The order details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "kind": {
          "description": "It specify the order api version.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "properties": {
          "$ref": "#/definitions/OrderProperties"
        }
      }
    },
    "OrderList": {
      "description": "List of order entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of orders.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OrderProperties": {
      "description": "Order properties.",
      "type": "object",
      "properties": {
        "orderId": {
          "description": "It specify the order resource id.",
          "type": "string",
          "readOnly": true
        },
        "contactInformation": {
          "$ref": "#/definitions/ContactDetails"
        },
        "shippingAddress": {
          "$ref": "#/definitions/Address"
        },
        "currentStatus": {
          "$ref": "#/definitions/OrderStatus"
        },
        "orderHistory": {
          "description": "List of status changes in the order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderStatus"
          },
          "readOnly": true
        },
        "serialNumber": {
          "description": "Serial number of the device.",
          "type": "string",
          "readOnly": true
        },
        "deliveryTrackingInfo": {
          "description": "Tracking information for the package delivered to the customer whether it has an original or a replacement device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingInfo"
          },
          "readOnly": true
        },
        "returnTrackingInfo": {
          "description": "Tracking information for the package returned from the customer whether it has an original or a replacement device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingInfo"
          },
          "readOnly": true
        },
        "shipmentType": {
          "description": "ShipmentType of the order",
          "enum": [
            "NotApplicable",
            "ShippedToCustomer",
            "SelfPickup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ShipmentType",
            "modelAsString": true
          }
        }
      }
    },
    "OrderStatus": {
      "description": "Represents a single status change.",
      "required": [
        "status"
      ],
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the order as per the allowed status types.",
          "enum": [
            "Untracked",
            "AwaitingFulfilment",
            "AwaitingPreparation",
            "AwaitingShipment",
            "Shipped",
            "Arriving",
            "Delivered",
            "ReplacementRequested",
            "LostDevice",
            "Declined",
            "ReturnInitiated",
            "AwaitingReturnShipment",
            "ShippedBack",
            "CollectedAtMicrosoft",
            "AwaitingPickup",
            "PickupCompleted",
            "AwaitingDrop"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OrderState",
            "modelAsString": true
          }
        },
        "updateDateTime": {
          "format": "date-time",
          "description": "Time of status update.",
          "type": "string",
          "readOnly": true
        },
        "comments": {
          "description": "Comments related to this status change.",
          "type": "string"
        },
        "trackingInformation": {
          "$ref": "#/definitions/TrackingInfo"
        },
        "additionalOrderDetails": {
          "description": "Dictionary to hold generic information which is not stored\r\nby the already existing properties",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "PeriodicTimerEventTrigger": {
      "description": "Trigger details.",
      "required": [
        "kind",
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PeriodicTimerProperties"
        },
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "PeriodicTimerEvent"
    },
    "PeriodicTimerProperties": {
      "description": "Periodic timer trigger properties.",
      "required": [
        "sinkInfo",
        "sourceInfo"
      ],
      "type": "object",
      "properties": {
        "sourceInfo": {
          "$ref": "#/definitions/PeriodicTimerSourceInfo"
        },
        "sinkInfo": {
          "$ref": "#/definitions/RoleSinkInfo"
        },
        "customContextTag": {
          "description": "A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.",
          "maxLength": 192,
          "type": "string"
        }
      }
    },
    "PeriodicTimerSourceInfo": {
      "description": "Periodic timer event source.",
      "required": [
        "schedule",
        "startTime"
      ],
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified upto seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.",
          "type": "string"
        },
        "schedule": {
          "format": "date-span",
          "description": "Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.",
          "type": "string"
        },
        "topic": {
          "description": "Topic where periodic events are published to IoT device.",
          "type": "string"
        }
      }
    },
    "ProactiveLogCollectionSettingsProperties": {
      "description": "The properties of proactive log collection settings.",
      "required": [
        "userConsent"
      ],
      "type": "object",
      "properties": {
        "userConsent": {
          "description": "Proactive diagnostic collection consent flag",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProactiveDiagnosticsConsent",
            "modelAsString": true
          }
        }
      }
    },
    "RawCertificateData": {
      "description": "Raw Certificate Data.",
      "required": [
        "certificate"
      ],
      "type": "object",
      "properties": {
        "authenticationType": {
          "description": "The authentication type.",
          "enum": [
            "Invalid",
            "AzureActiveDirectory"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthenticationType",
            "modelAsString": true
          }
        },
        "certificate": {
          "description": "The base64 encoded certificate raw data.",
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "RefreshDetails": {
      "description": "Fields for tracking refresh job on the share or container.",
      "type": "object",
      "properties": {
        "inProgressRefreshJobId": {
          "description": "If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.",
          "type": "string"
        },
        "lastCompletedRefreshJobTimeInUTC": {
          "format": "date-time",
          "description": "Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job.",
          "type": "string"
        },
        "errorManifestFile": {
          "description": "Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job.",
          "type": "string"
        },
        "lastJob": {
          "description": "Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job.",
          "type": "string"
        }
      }
    },
    "RemoteSupportSettings": {
      "description": "RemoteApplicationType for which remote support settings is being modified",
      "type": "object",
      "properties": {
        "remoteApplicationType": {
          "description": "Remote application type",
          "enum": [
            "Powershell",
            "WAC",
            "LocalUI",
            "AllApplications"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RemoteApplicationType",
            "modelAsString": true
          }
        },
        "accessLevel": {
          "description": "Access level allowed for this remote application type",
          "enum": [
            "None",
            "ReadOnly",
            "ReadWrite",
            "FullAccess"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AccessLevel",
            "modelAsString": true
          }
        },
        "expirationTimeStampInUTC": {
          "format": "date-time",
          "description": "Expiration time stamp",
          "type": "string"
        }
      }
    },
    "ResourceIdentity": {
      "description": "Msi identity details of the resource",
      "type": "object",
      "properties": {
        "type": {
          "description": "Identity type",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MsiIdentityType",
            "modelAsString": true
          }
        },
        "principalId": {
          "description": "Service Principal Id backing the Msi",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "description": "Home Tenant Id",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceMoveDetails": {
      "description": "Fields for tracking resource move",
      "type": "object",
      "properties": {
        "operationInProgress": {
          "description": "Denotes whether move operation is in progress",
          "enum": [
            "None",
            "ResourceMoveInProgress",
            "ResourceMoveFailed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceMoveStatus",
            "modelAsString": true
          }
        },
        "operationInProgressLockTimeoutInUTC": {
          "format": "date-time",
          "description": "Denotes the timeout of the operation to finish",
          "type": "string"
        }
      }
    },
    "Role": {
      "description": "Compute role.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "kind": {
          "description": "Role type.",
          "enum": [
            "IOT",
            "ASA",
            "Functions",
            "Cognitive",
            "MEC",
            "CloudEdgeManagement",
            "Kubernetes",
            "ASEKubernetes"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoleTypes",
            "modelAsString": true
          }
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      },
      "discriminator": "kind"
    },
    "RoleList": {
      "description": "Collection of all the roles on the Data Box Edge device.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The Value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RoleSinkInfo": {
      "description": "Compute role against which events will be raised.",
      "required": [
        "roleId"
      ],
      "type": "object",
      "properties": {
        "roleId": {
          "description": "Compute role ID.",
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "SasTokenProperties": {
      "type": "object",
      "properties": {
        "sasUri": {
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "Secret": {
      "description": "Holds device secret either as a KeyVault reference or as an encrypted value.",
      "type": "object",
      "properties": {
        "encryptedSecret": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret"
        },
        "keyVaultId": {
          "description": "Id of the Key-Vault where secret is stored (ex: secrets/AuthClientSecret/82ef4346187a4033a10d629cde07d740).",
          "type": "string"
        }
      }
    },
    "SecuritySettings": {
      "description": "The security settings of a device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecuritySettingsProperties"
        }
      }
    },
    "SecuritySettingsProperties": {
      "description": "The properties of security settings.",
      "required": [
        "deviceAdminPassword"
      ],
      "type": "object",
      "properties": {
        "deviceAdminPassword": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret"
        }
      }
    },
    "ServiceSpecification": {
      "description": "Service specification.",
      "type": "object",
      "properties": {
        "metricSpecifications": {
          "description": "Metric specification as defined by shoebox.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpecification_V1"
          }
        }
      }
    },
    "Share": {
      "description": "Represents a share on the  Data Box Edge/Gateway device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ShareProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "ShareAccessRight": {
      "description": "Specifies the mapping between this particular user and the type of access he has on shares on this device.",
      "required": [
        "accessType",
        "shareId"
      ],
      "type": "object",
      "properties": {
        "shareId": {
          "description": "The share ID.",
          "minLength": 1,
          "type": "string"
        },
        "accessType": {
          "description": "Type of access to be allowed on the share for this user.",
          "enum": [
            "Change",
            "Read",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ShareAccessType",
            "modelAsString": true
          }
        }
      }
    },
    "ShareList": {
      "description": "Collection of all the shares on the Data Box Edge/Gateway device.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of shares.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Share"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ShareProperties": {
      "description": "The share properties.",
      "required": [
        "accessProtocol",
        "monitoringStatus",
        "shareStatus"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the share.",
          "type": "string"
        },
        "shareStatus": {
          "description": "Current status of the share.",
          "enum": [
            "Online",
            "Offline",
            "Unknown",
            "OK",
            "Updating",
            "NeedsAttention"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ShareStatus",
            "modelAsString": true
          }
        },
        "monitoringStatus": {
          "description": "Current monitoring status of the share.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MonitoringStatus",
            "modelAsString": true
          }
        },
        "azureContainerInfo": {
          "$ref": "#/definitions/AzureContainerInfo"
        },
        "accessProtocol": {
          "description": "Access protocol to be used by the share.",
          "enum": [
            "SMB",
            "NFS"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ShareAccessProtocol",
            "modelAsString": true
          }
        },
        "userAccessRights": {
          "description": "Mapping of users and corresponding access rights on the share (required for SMB protocol).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAccessRight"
          }
        },
        "clientAccessRights": {
          "description": "List of IP addresses and corresponding access rights on the share(required for NFS protocol).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClientAccessRight"
          }
        },
        "refreshDetails": {
          "$ref": "#/definitions/RefreshDetails"
        },
        "shareMappings": {
          "description": "Share mount point to the role.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MountPointMap"
          },
          "readOnly": true
        },
        "dataPolicy": {
          "description": "Data policy of the share.",
          "enum": [
            "Cloud",
            "Local"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataPolicy",
            "modelAsString": true
          }
        }
      }
    },
    "Sku": {
      "description": "The SKU type.",
      "type": "object",
      "properties": {
        "name": {
          "description": "SKU name.",
          "enum": [
            "Gateway",
            "Edge",
            "TEA_1Node",
            "TEA_1Node_UPS",
            "TEA_1Node_Heater",
            "TEA_1Node_UPS_Heater",
            "TEA_4Node_Heater",
            "TEA_4Node_UPS_Heater",
            "TMA",
            "TDC",
            "TCA_Small",
            "GPU",
            "TCA_Large",
            "EdgeP_Base",
            "EdgeP_High",
            "EdgePR_Base",
            "EdgePR_Base_UPS",
            "EP2_64_1VPU_W",
            "EP2_128_1T4_Mx1_W",
            "EP2_256_2T4_W",
            "EdgeMR_Mini",
            "RCA_Small",
            "RCA_Large",
            "RDC",
            "Management",
            "EP2_64_Mx1_W",
            "EP2_128_GPU1_Mx1_W",
            "EP2_256_GPU2_Mx1",
            "EdgeMR_TCP"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "description": "The SKU tier. This is based on the SKU name.",
          "enum": [
            "Standard"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        }
      }
    },
    "SkuCapability": {
      "description": "The metadata to describe the capability.",
      "type": "object",
      "properties": {
        "name": {
          "description": "An invariant to describe the feature.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "An invariant if the feature is measured by quantity.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SkuCost": {
      "description": "The metadata for retrieving price info.",
      "type": "object",
      "properties": {
        "meterId": {
          "description": "Used for querying price from commerce.",
          "type": "string",
          "readOnly": true
        },
        "quantity": {
          "format": "int64",
          "description": "The cost quantity.",
          "type": "integer",
          "readOnly": true
        },
        "extendedUnit": {
          "description": "The extended unit.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SkuLocationInfo": {
      "description": "The location info.",
      "type": "object",
      "properties": {
        "location": {
          "description": "The location.",
          "type": "string",
          "readOnly": true
        },
        "zones": {
          "description": "The zones.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "sites": {
          "description": "The sites.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "SkuMapping": {
      "type": "object",
      "properties": {
        "catalogPlanId": {
          "type": "string"
        },
        "marketplaceSkuId": {
          "type": "string"
        },
        "marketplaceSkuVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StorageAccount": {
      "description": "Represents a Storage Account on the  Data Box Edge/Gateway device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "StorageAccountCredential": {
      "description": "The storage account credential.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountCredentialProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "StorageAccountCredentialList": {
      "description": "The collection of storage account credentials.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountCredential"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StorageAccountCredentialProperties": {
      "description": "The storage account credential properties.",
      "required": [
        "accountType",
        "alias",
        "sslStatus"
      ],
      "type": "object",
      "properties": {
        "alias": {
          "description": "Alias for the storage account.",
          "minLength": 1,
          "type": "string"
        },
        "userName": {
          "description": "Username for the storage account.",
          "type": "string"
        },
        "accountKey": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret"
        },
        "connectionString": {
          "description": "Connection string for the storage account. Use this string if username and account key are not specified.",
          "type": "string"
        },
        "sslStatus": {
          "description": "Signifies whether SSL needs to be enabled or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SSLStatus",
            "modelAsString": true
          }
        },
        "blobDomainName": {
          "description": "Blob end point for private clouds.",
          "type": "string"
        },
        "accountType": {
          "description": "Type of storage accessed on the storage account.",
          "enum": [
            "GeneralPurposeStorage",
            "BlobStorage"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AccountType",
            "modelAsString": true
          }
        },
        "storageAccountId": {
          "description": "Id of the storage account.",
          "type": "string"
        }
      }
    },
    "StorageAccountList": {
      "description": "Collection of all the Storage Accounts on the Data Box Edge/Gateway device.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of storageAccounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccount"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StorageAccountProperties": {
      "description": "The storage account properties.",
      "required": [
        "dataPolicy"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the storage Account.",
          "type": "string"
        },
        "storageAccountStatus": {
          "description": "Current status of the storage account",
          "enum": [
            "OK",
            "Offline",
            "Unknown",
            "Updating",
            "NeedsAttention"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageAccountStatus",
            "modelAsString": true
          }
        },
        "dataPolicy": {
          "description": "Data policy of the storage Account.",
          "enum": [
            "Cloud",
            "Local"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataPolicy",
            "modelAsString": true
          }
        },
        "storageAccountCredentialId": {
          "description": "Storage Account Credential Id",
          "type": "string"
        },
        "blobEndpoint": {
          "description": "BlobEndpoint of Storage Account",
          "type": "string",
          "readOnly": true
        },
        "containerCount": {
          "format": "int32",
          "description": "The Container Count. Present only for Storage Accounts with DataPolicy set to Cloud.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SubscriptionProperties": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "locationPlacementId": {
          "type": "string"
        },
        "quotaId": {
          "type": "string"
        },
        "serializedDetails": {
          "type": "string"
        },
        "registeredFeatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionRegisteredFeatures"
          }
        }
      }
    },
    "SubscriptionRegisteredFeatures": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "SupportPackageRequestProperties": {
      "description": "The share properties.",
      "type": "object",
      "properties": {
        "minimumTimeStamp": {
          "format": "date-time",
          "description": "MinimumTimeStamp from where logs need to be collected",
          "type": "string"
        },
        "maximumTimeStamp": {
          "format": "date-time",
          "description": "Start of the timespan of the log collection",
          "type": "string"
        },
        "include": {
          "description": "Type of files, which need to be included in the logs\r\nThis will contain the type of logs (Default/DefaultWithDumps/None/All/DefaultWithArchived)\r\nor a comma separated list of log types that are required",
          "type": "string"
        }
      }
    },
    "SymmetricKey": {
      "description": "Symmetric key for authentication.",
      "type": "object",
      "properties": {
        "connectionString": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret"
        }
      }
    },
    "SystemData": {
      "description": "Provides details about resource creation and updation time",
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "A string identifier for the identity that created the resource.",
          "type": "string",
          "readOnly": true
        },
        "createdByType": {
          "description": "The type of identity that created the resource: user, application, managedIdentity.",
          "type": "string",
          "readOnly": true
        },
        "createdAt": {
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC).",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedBy": {
          "description": "A string identifier for the identity that last modified the resource.",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedByType": {
          "description": "The type of identity that last modified the resource: user, application, managedIdentity.",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedAt": {
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC).",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TrackingInfo": {
      "description": "Tracking courier information.",
      "type": "object",
      "properties": {
        "serialNumber": {
          "description": "Serial number of the device being tracked.",
          "type": "string"
        },
        "carrierName": {
          "description": "Name of the carrier used in the delivery.",
          "type": "string"
        },
        "trackingId": {
          "description": "Tracking ID of the shipment.",
          "type": "string"
        },
        "trackingUrl": {
          "description": "Tracking URL of the shipment.",
          "type": "string"
        }
      }
    },
    "Trigger": {
      "description": "Trigger details.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "kind": {
          "description": "Trigger Kind.",
          "enum": [
            "FileEvent",
            "PeriodicTimerEvent"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TriggerEventType",
            "modelAsString": true
          }
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      },
      "discriminator": "kind"
    },
    "TriggerList": {
      "description": "Collection of all trigger on the data box edge device.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of triggers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trigger"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TriggerSupportPackageRequest": {
      "description": "The request object for trigger support package.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SupportPackageRequestProperties"
        }
      }
    },
    "UpdateDetails": {
      "description": "Update Specific attributes",
      "type": "object",
      "properties": {
        "updateTitle": {
          "description": "Title of the Update",
          "type": "string"
        },
        "updateSize": {
          "format": "double",
          "description": "Size of the update(In Bytes)",
          "type": "number"
        },
        "updateType": {
          "description": "Type of the Update",
          "enum": [
            "Software",
            "Kubernetes",
            "Firmware"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UpdateType",
            "modelAsString": true
          }
        },
        "targetVersion": {
          "description": "Target Version number",
          "type": "string"
        },
        "friendlyVersionNumber": {
          "description": "Friendly Version Number",
          "type": "string"
        },
        "estimatedInstallTimeInMins": {
          "format": "int32",
          "description": "Estimated Install Time for the update",
          "type": "integer"
        },
        "rebootBehavior": {
          "description": "Indicates if updates are available and at least one of the updates needs a reboot.",
          "enum": [
            "NeverReboots",
            "RequiresReboot",
            "RequestReboot"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InstallRebootBehavior",
            "modelAsString": true
          }
        },
        "installationImpact": {
          "description": "Impact of Installing an updateType",
          "enum": [
            "None",
            "DeviceRebooted",
            "KubernetesWorkloadsDown",
            "SoftwareDisruptive",
            "SoftwareOptimized",
            "KubernetesDisruptive",
            "KubernetesOptimized"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InstallationImpact",
            "modelAsString": true
          }
        },
        "status": {
          "description": "Status of the update.",
          "enum": [
            "DownloadPending",
            "DownloadStarted",
            "DownloadCompleted",
            "InstallStarted",
            "InstallCompleted"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UpdateStatus",
            "modelAsString": true
          }
        }
      }
    },
    "UpdateDownloadProgress": {
      "description": "Details about the download progress of update.",
      "type": "object",
      "properties": {
        "downloadPhase": {
          "description": "The download phase.",
          "enum": [
            "Unknown",
            "Initializing",
            "Downloading",
            "Verifying"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DownloadPhase",
            "modelAsString": true
          }
        },
        "percentComplete": {
          "format": "int32",
          "description": "Percentage of completion.",
          "type": "integer",
          "readOnly": true
        },
        "totalBytesToDownload": {
          "format": "double",
          "description": "Total bytes to download.",
          "type": "number",
          "readOnly": true
        },
        "totalBytesDownloaded": {
          "format": "double",
          "description": "Total bytes downloaded.",
          "type": "number",
          "readOnly": true
        },
        "numberOfUpdatesToDownload": {
          "format": "int32",
          "description": "Number of updates to download.",
          "type": "integer",
          "readOnly": true
        },
        "numberOfUpdatesDownloaded": {
          "format": "int32",
          "description": "Number of updates downloaded.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "UpdateInstallProgress": {
      "description": "Progress details during installation of updates.",
      "type": "object",
      "properties": {
        "percentComplete": {
          "format": "int32",
          "description": "Percentage completed.",
          "type": "integer",
          "readOnly": true
        },
        "numberOfUpdatesToInstall": {
          "format": "int32",
          "description": "Number of updates to install.",
          "type": "integer",
          "readOnly": true
        },
        "numberOfUpdatesInstalled": {
          "format": "int32",
          "description": "Number of updates installed.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "UpdateSummary": {
      "description": "Details about ongoing updates and availability of updates on the device.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateSummaryProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "UpdateSummaryProperties": {
      "description": "The device update information summary.",
      "type": "object",
      "properties": {
        "deviceVersionNumber": {
          "description": "The current version of the device in format: 1.2.17312.13.\",",
          "type": "string"
        },
        "friendlyDeviceVersionName": {
          "description": "The current version of the device in text format.",
          "type": "string"
        },
        "deviceLastScannedDateTime": {
          "format": "date-time",
          "description": "The last time when a scan was done on the device.",
          "type": "string"
        },
        "lastCompletedScanJobDateTime": {
          "format": "date-time",
          "description": "The time when the last scan job was completed (success/cancelled/failed) on the appliance.",
          "type": "string"
        },
        "lastSuccessfulScanJobTime": {
          "format": "date-time",
          "description": "Time when the last scan job is successfully completed.",
          "type": "string"
        },
        "lastCompletedDownloadJobDateTime": {
          "format": "date-time",
          "description": "The time when the last Download job was completed (success/cancelled/failed) on the appliance.",
          "type": "string",
          "readOnly": true
        },
        "lastCompletedDownloadJobId": {
          "description": "JobId of the last ran download job.(Can be success/cancelled/failed)",
          "type": "string",
          "readOnly": true
        },
        "lastDownloadJobStatus": {
          "description": "JobStatus of the last ran download job.",
          "enum": [
            "Invalid",
            "Running",
            "Succeeded",
            "Failed",
            "Canceled",
            "Paused",
            "Scheduled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true
          }
        },
        "lastSuccessfulInstallJobDateTime": {
          "format": "date-time",
          "description": "The time when the Last Install job was completed successfully on the appliance",
          "type": "string"
        },
        "lastCompletedInstallJobDateTime": {
          "format": "date-time",
          "description": "The time when the last Install job was completed (success/cancelled/failed) on the appliance.",
          "type": "string",
          "readOnly": true
        },
        "lastCompletedInstallJobId": {
          "description": "JobId of the last ran install job.(Can be success/cancelled/failed)",
          "type": "string",
          "readOnly": true
        },
        "lastInstallJobStatus": {
          "description": "JobStatus of the last ran install job.",
          "enum": [
            "Invalid",
            "Running",
            "Succeeded",
            "Failed",
            "Canceled",
            "Paused",
            "Scheduled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true
          }
        },
        "totalNumberOfUpdatesAvailable": {
          "format": "int32",
          "description": "The number of updates available for the current device version as per the last device scan.",
          "type": "integer",
          "readOnly": true
        },
        "totalNumberOfUpdatesPendingDownload": {
          "format": "int32",
          "description": "The total number of items pending download.",
          "type": "integer",
          "readOnly": true
        },
        "totalNumberOfUpdatesPendingInstall": {
          "format": "int32",
          "description": "The total number of items pending install.",
          "type": "integer",
          "readOnly": true
        },
        "rebootBehavior": {
          "description": "Indicates if updates are available and at least one of the updates needs a reboot.",
          "enum": [
            "NeverReboots",
            "RequiresReboot",
            "RequestReboot"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "InstallRebootBehavior",
            "modelAsString": true
          }
        },
        "ongoingUpdateOperation": {
          "description": "The current update operation.",
          "enum": [
            "None",
            "Scan",
            "Download",
            "Install"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "UpdateOperation",
            "modelAsString": true
          }
        },
        "inProgressDownloadJobId": {
          "description": "The job ID of the download job in progress.",
          "type": "string",
          "readOnly": true
        },
        "inProgressInstallJobId": {
          "description": "The job ID of the install job in progress.",
          "type": "string",
          "readOnly": true
        },
        "inProgressDownloadJobStartedDateTime": {
          "format": "date-time",
          "description": "The time when the currently running download (if any) started.",
          "type": "string",
          "readOnly": true
        },
        "inProgressInstallJobStartedDateTime": {
          "format": "date-time",
          "description": "The time when the currently running install (if any) started.",
          "type": "string",
          "readOnly": true
        },
        "updateTitles": {
          "description": "The list of updates available for install.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "updates": {
          "description": "The list of updates available for install.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateDetails"
          },
          "readOnly": true
        },
        "totalUpdateSizeInBytes": {
          "format": "double",
          "description": "The total size of updates available for download in bytes.",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "UploadCertificateRequest": {
      "description": "The upload certificate request.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RawCertificateData"
        }
      }
    },
    "UploadCertificateResponse": {
      "description": "The upload registration certificate response.",
      "type": "object",
      "properties": {
        "authType": {
          "description": "Supported authentication types.",
          "enum": [
            "Invalid",
            "AzureActiveDirectory"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthenticationType",
            "modelAsString": true
          }
        },
        "resourceId": {
          "description": "The resource ID of the Data Box Edge/Gateway device.",
          "type": "string",
          "readOnly": true
        },
        "aadAuthority": {
          "description": "Azure Active Directory tenant authority.",
          "type": "string",
          "readOnly": true
        },
        "aadTenantId": {
          "description": "Azure Active Directory tenant ID.",
          "type": "string",
          "readOnly": true
        },
        "servicePrincipalClientId": {
          "description": "Azure Active Directory service principal client ID.",
          "type": "string",
          "readOnly": true
        },
        "servicePrincipalObjectId": {
          "description": "Azure Active Directory service principal object ID.",
          "type": "string",
          "readOnly": true
        },
        "azureManagementEndpointAudience": {
          "description": "The azure management endpoint audience.",
          "type": "string",
          "readOnly": true
        },
        "aadAudience": {
          "description": "Identifier of the target resource that is the recipient of the requested token.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "User": {
      "description": "Represents a user who has access to one or more shares on the Data Box Edge/Gateway device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        }
      }
    },
    "UserAccessRight": {
      "description": "The mapping between a particular user and the access type on the SMB share.",
      "required": [
        "accessType",
        "userId"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "description": "User ID (already existing in the device).",
          "minLength": 1,
          "type": "string"
        },
        "accessType": {
          "description": "Type of access to be allowed for the user.",
          "enum": [
            "Change",
            "Read",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ShareAccessType",
            "modelAsString": true
          }
        }
      }
    },
    "UserList": {
      "description": "Collection of users.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of users.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserProperties": {
      "description": "The user properties.",
      "type": "object",
      "properties": {
        "encryptedPassword": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret"
        },
        "shareAccessRights": {
          "description": "List of shares that the user has rights on. This field should not be specified during user creation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShareAccessRight"
          },
          "readOnly": true
        },
        "userType": {
          "description": "Type of the user.",
          "enum": [
            "Share",
            "LocalManagement",
            "ARM"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UserType",
            "modelAsString": true
          }
        }
      }
    },
    "VmMemory": {
      "description": "VmMemory Data.",
      "type": "object",
      "properties": {
        "startupMemoryMB": {
          "format": "int64",
          "description": "The total amount of RAM in the virtual machine, as seen by the guest  operating system. For a virtual machine with dynamic memory enabled, this represents the initial memory available at startup.",
          "type": "integer"
        },
        "currentMemoryUsageMB": {
          "format": "int64",
          "description": "The current memory used by the virtual machine.",
          "type": "integer"
        }
      }
    },
    "VmPlacementRequestResult": {
      "description": "List of VM sizes being checked for creation on appliance along with corresponding result.",
      "type": "object",
      "properties": {
        "vmSize": {
          "description": "List of VM sizes being checked.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isFeasible": {
          "description": "Boolean value indicating if the VM(s) in VmSize can be created.",
          "type": "boolean"
        },
        "messageCode": {
          "description": "MessageCode indicating reason for success or failure.",
          "type": "string"
        },
        "message": {
          "description": "Localized message to be displayed to the user to explain the check result.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "apiVersionParameter": {
      "in": "query",
      "name": "api-version",
      "description": "The API version.",
      "required": true,
      "type": "string"
    },
    "jobNameParameter": {
      "in": "path",
      "name": "jobName",
      "description": "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
      "required": true,
      "type": "string",
      "maxLength": 24,
      "minLength": 3,
      "pattern": "^[-\\w\\.]+$",
      "x-ms-parameter-location": "method"
    },
    "locationParameter": {
      "in": "path",
      "name": "location",
      "description": "The location of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "resourceGroupNameParameter": {
      "in": "path",
      "name": "resourceGroupName",
      "description": "The resource group name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "subscriptionIdParameter": {
      "in": "path",
      "name": "subscriptionId",
      "description": "The subscription ID.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}