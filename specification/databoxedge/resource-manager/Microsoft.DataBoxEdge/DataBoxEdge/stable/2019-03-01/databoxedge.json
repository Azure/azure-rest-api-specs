{
  "swagger": "2.0",
  "info": {
    "version": "2019-03-01",
    "title": "DataBoxEdgeManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/providers/Microsoft.DataBoxEdge/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "List all the supported operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of supported operations.",
            "schema": {
              "$ref": "#/definitions/OperationsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "OperationsGet": {
            "$ref": "./examples/OperationsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Gets all the data box edge/gateway devices in a subscription.",
        "operationId": "Devices_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of data box edge/gateway devices.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "DataBoxEdgeDeviceGetBySubscription": {
            "$ref": "./examples/DataBoxEdgeDeviceGetBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Gets all the data box edge/gateway devices in a resource group.",
        "operationId": "Devices_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the resource or Specify $skipToken=<token> to populate the next page in the list.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of data box edge/gateway devices.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "DataBoxEdgeDeviceGetByResourceGroup": {
            "$ref": "./examples/DataBoxEdgeDeviceGetByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Gets the properties of the data box edge/gateway device.",
        "operationId": "Devices_Get",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The data box edge/gateway device.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DataBoxEdgeDeviceGetByName": {
            "$ref": "./examples/DataBoxEdgeDeviceGetByName.json"
          }
        }
      },
      "put": {
        "tags": [
          "Devices"
        ],
        "description": "Creates or updates a Data Box Edge/Gateway resource.",
        "operationId": "Devices_CreateOrUpdate",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "DataBoxEdgeDevice",
            "in": "body",
            "description": "The resource object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevice"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the resource.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DataBoxEdgeDevicePut": {
            "$ref": "./examples/DataBoxEdgeDevicePut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "description": "Deletes the data box edge/gateway device.",
        "operationId": "Devices_Delete",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the resource."
          },
          "202": {
            "description": "Accepted the request to delete the resource."
          },
          "204": {
            "description": "The resource is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DataBoxEdgeDeviceDelete": {
            "$ref": "./examples/DataBoxEdgeDeviceDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Devices"
        ],
        "description": "Modifies a Data Box Edge/Gateway resource.",
        "operationId": "Devices_Update",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The resource parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevicePatch"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the resource.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDevice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DataBoxEdgeDevicePatch": {
            "$ref": "./examples/DataBoxEdgeDevicePatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "description": "Gets all the alerts for a data box edge/gateway device.",
        "operationId": "Alerts_ListByDataBoxEdgeDevice",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of alerts.",
            "schema": {
              "$ref": "#/definitions/AlertList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AlertGetAllInDevice": {
            "$ref": "./examples/AlertGetAllInDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/alerts/{name}": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Gets an alert by name.",
        "operationId": "Alerts_Get",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The alert name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The alert details.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AlertGet": {
            "$ref": "./examples/AlertGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules": {
      "get": {
        "tags": [
          "BandwidthSchedules"
        ],
        "description": "Gets all the bandwidth schedules for a data box edge/gateway device.",
        "operationId": "BandwidthSchedules_ListByDataBoxEdgeDevice",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of bandwidth schedules.",
            "schema": {
              "$ref": "#/definitions/BandwidthSchedulesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BandwidthScheduleGetAllInDevice": {
            "$ref": "./examples/BandwidthScheduleGetAllInDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/bandwidthSchedules/{name}": {
      "get": {
        "tags": [
          "BandwidthSchedules"
        ],
        "description": "Gets the properties of the specified bandwidth schedule.",
        "operationId": "BandwidthSchedules_Get",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The bandwidth schedule name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The bandwidth schedule.",
            "schema": {
              "$ref": "#/definitions/BandwidthSchedule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "BandwidthScheduleGet": {
            "$ref": "./examples/BandwidthScheduleGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "BandwidthSchedules"
        ],
        "description": "Creates or updates a bandwidth schedule.",
        "operationId": "BandwidthSchedules_CreateOrUpdate",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The bandwidth schedule name which needs to be added/updated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The bandwidth schedule to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BandwidthSchedule"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the bandwidth schedule.",
            "schema": {
              "$ref": "#/definitions/BandwidthSchedule"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the bandwidth schedule."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BandwidthSchedulePut": {
            "$ref": "./examples/BandwidthSchedulePut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "BandwidthSchedules"
        ],
        "description": "Deletes the specified bandwidth schedule.",
        "operationId": "BandwidthSchedules_Delete",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The bandwidth schedule name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the bandwidth schedule."
          },
          "202": {
            "description": "Accepted the request to delete the bandwidth schedule."
          },
          "204": {
            "description": "Successfully deleted the bandwidth schedule."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BandwidthScheduleDelete": {
            "$ref": "./examples/BandwidthScheduleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/downloadUpdates": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Downloads the updates on a data box edge/gateway device.",
        "operationId": "Devices_DownloadUpdates",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully downloaded the updates on the device."
          },
          "202": {
            "description": "Accepted the request to download the updates on the device."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DownloadUpdatesPost": {
            "$ref": "./examples/DownloadUpdatesPost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/getExtendedInformation": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Gets additional information for the specified data box edge/gateway device.",
        "operationId": "Devices_GetExtendedInformation",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The additional information.",
            "schema": {
              "$ref": "#/definitions/DataBoxEdgeDeviceExtendedInfo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ExtendedInfoPost": {
            "$ref": "./examples/ExtendedInfoPost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/installUpdates": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Installs the updates on the data box edge/gateway device.",
        "operationId": "Devices_InstallUpdates",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully installed updates on the device."
          },
          "202": {
            "description": "Accepted the request to install updates on the device."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "InstallUpdatesPost": {
            "$ref": "./examples/InstallUpdatesPost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/jobs/{name}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Gets the details of a specified job on a data box edge/gateway device.",
        "operationId": "Jobs_Get",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The job name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The job details.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "JobsGet": {
            "$ref": "./examples/JobsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/networkSettings/default": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Gets the network settings of the specified data box edge/gateway device.",
        "operationId": "Devices_GetNetworkSettings",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device network settings.",
            "schema": {
              "$ref": "#/definitions/NetworkSettings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkSettingsGet": {
            "$ref": "./examples/NetworkSettingsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/operationsStatus/{name}": {
      "get": {
        "tags": [
          "OperationsStatus"
        ],
        "summary": "Gets the details of a specified job on a data box edge/gateway device.",
        "operationId": "OperationsStatus_Get",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The job name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The job details.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "OperationsStatusGet": {
            "$ref": "./examples/OperationsStatusGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Lists all the orders related to a data box edge/gateway device.",
        "operationId": "Orders_ListByDataBoxEdgeDevice",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all the orders for the Data Box Edge Device",
            "schema": {
              "$ref": "#/definitions/OrderList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "OrderGetAllInDevice": {
            "$ref": "./examples/OrderGetAllInDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/orders/default": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets a specific order by name.",
        "operationId": "Orders_Get",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The order details of a device.",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "OrderGet": {
            "$ref": "./examples/OrderGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Creates or updates an order.",
        "operationId": "Orders_CreateOrUpdate",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "order",
            "in": "body",
            "description": "The order to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the order.",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the order."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "OrderPut": {
            "$ref": "./examples/OrderPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Deletes the order related to the device.",
        "operationId": "Orders_Delete",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the order."
          },
          "202": {
            "description": "Accepted the request to delete the order."
          },
          "204": {
            "description": "The order is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "OrderDelete": {
            "$ref": "./examples/OrderDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "description": "Lists all the roles configured in a data box edge/gateway device.",
        "operationId": "Roles_ListByDataBoxEdgeDevice",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all the roles configured in the device.",
            "schema": {
              "$ref": "#/definitions/RoleList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "RoleGetAllInDevice": {
            "$ref": "./examples/RoleGetAllInDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/roles/{name}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "description": "Gets a specific role by name.",
        "operationId": "Roles_Get",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The role with the specified name in the given device.",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "RoleGet": {
            "$ref": "./examples/RoleGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "description": "Create or update a role.",
        "operationId": "Roles_CreateOrUpdate",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "role",
            "in": "body",
            "description": "The role properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the role.",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the role."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "RolePut": {
            "$ref": "./examples/RolePut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "description": "Deletes the role on the data box edge device.",
        "operationId": "Roles_Delete",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The role name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the role."
          },
          "202": {
            "description": "Accepted the request to delete the role."
          },
          "204": {
            "description": "The role is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "RoleDelete": {
            "$ref": "./examples/RoleDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/scanForUpdates": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Scans for updates on a data box edge/gateway device.",
        "operationId": "Devices_ScanForUpdates",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully scanned the device for updates."
          },
          "202": {
            "description": "Accepted the request to scan for updates on the device."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ScanForUpdatesPost": {
            "$ref": "./examples/ScanForUpdatesPost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/securitySettings/default/update": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Updates the security settings on a data box edge/gateway device.",
        "operationId": "Devices_CreateOrUpdateSecuritySettings",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "securitySettings",
            "in": "body",
            "description": "The security settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecuritySettings"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to update the security settings."
          },
          "204": {
            "description": "Updated the security settings."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "SecuritySettingsUpdatePost": {
            "$ref": "./examples/SecuritySettingsUpdatePost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares": {
      "get": {
        "tags": [
          "Shares"
        ],
        "summary": "Lists all the shares in a data box edge/gateway device.",
        "operationId": "Shares_ListByDataBoxEdgeDevice",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of all the shares on the device.",
            "schema": {
              "$ref": "#/definitions/ShareList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ShareGetAllInDevice": {
            "$ref": "./examples/ShareGetAllInDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}": {
      "get": {
        "tags": [
          "Shares"
        ],
        "summary": "Gets a share by name.",
        "operationId": "Shares_Get",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The share name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The share details.",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ShareGet": {
            "$ref": "./examples/ShareGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Shares"
        ],
        "summary": "Creates a new share or updates an existing share on the device.",
        "operationId": "Shares_CreateOrUpdate",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The share name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "share",
            "in": "body",
            "description": "The share properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the share.",
            "schema": {
              "$ref": "#/definitions/Share"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the share."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "SharePut": {
            "$ref": "./examples/SharePut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Shares"
        ],
        "description": "Deletes the share on the data box edge/gateway device.",
        "operationId": "Shares_Delete",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The share name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the share."
          },
          "202": {
            "description": "Accepted the request to delete the share."
          },
          "204": {
            "description": "The share is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ShareDelete": {
            "$ref": "./examples/ShareDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}/refresh": {
      "post": {
        "tags": [
          "Shares"
        ],
        "summary": "Refreshes the share metadata with the data from the cloud.",
        "operationId": "Shares_Refresh",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The share name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed the share on the device."
          },
          "202": {
            "description": "Accepted the request to refresh the share on the device."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "ShareRefreshPost": {
            "$ref": "./examples/ShareRefreshPost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials": {
      "get": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "summary": "Gets all the storage account credentials in a data box edge/gateway device.",
        "operationId": "StorageAccountCredentials_ListByDataBoxEdgeDevice",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of storage account credentials.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredentialList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "SACGetAllInDevice": {
            "$ref": "./examples/SACGetAllInDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/storageAccountCredentials/{name}": {
      "get": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Gets the properties of the specified storage account credential.",
        "operationId": "StorageAccountCredentials_Get",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The storage account credential name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The storage account credential properties.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SACGet": {
            "$ref": "./examples/SACGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Creates or updates the storage account credential.",
        "operationId": "StorageAccountCredentials_CreateOrUpdate",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The storage account credential name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountCredential",
            "in": "body",
            "description": "The storage account credential.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the storage account credential.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the storage account credential."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "SACPut": {
            "$ref": "./examples/SACPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Deletes the storage account credential.",
        "operationId": "StorageAccountCredentials_Delete",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The storage account credential name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the storage account credential."
          },
          "202": {
            "description": "Accepted the request to delete the storage account credential."
          },
          "204": {
            "description": "The storage account credential is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "SACDelete": {
            "$ref": "./examples/SACDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "description": "Lists all the triggers configured in the device.",
        "operationId": "Triggers_ListByDataBoxEdgeDevice",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $filter='CustomContextTag eq <tag>' to filter on custom context tag property",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List all the triggers configured in the device",
            "schema": {
              "$ref": "#/definitions/TriggerList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "TriggerGetAllInDevice": {
            "$ref": "./examples/TriggerGetAllInDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/triggers/{name}": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "description": "Get a specific trigger by name.",
        "operationId": "Triggers_Get",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The trigger name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The trigger.",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "TriggerGet": {
            "$ref": "./examples/TriggerGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Triggers"
        ],
        "description": "Creates or updates a trigger.",
        "operationId": "Triggers_CreateOrUpdate",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "Creates or updates a trigger",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The trigger name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "trigger",
            "in": "body",
            "description": "The trigger.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the trigger.",
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the trigger."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "TriggerPut": {
            "$ref": "./examples/TriggerPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Triggers"
        ],
        "description": "Deletes the trigger on the gateway device.",
        "operationId": "Triggers_Delete",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The trigger name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the trigger."
          },
          "202": {
            "description": "Accepted the request to delete the trigger."
          },
          "204": {
            "description": "The trigger is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "TriggerDelete": {
            "$ref": "./examples/TriggerDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/updateSummary/default": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Gets information about the availability of updates based on the last scan of the device. It also gets information about any ongoing download or install jobs on the device.",
        "operationId": "Devices_GetUpdateSummary",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The update summary.",
            "schema": {
              "$ref": "#/definitions/UpdateSummary"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UpdateSummaryGet": {
            "$ref": "./examples/UpdateSummaryGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/uploadCertificate": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Uploads registration certificate for the device.",
        "operationId": "Devices_UploadCertificate",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The upload certificate request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadCertificateRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully uploaded the registration certificate.",
            "schema": {
              "$ref": "#/definitions/UploadCertificateResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UploadCertificatePost": {
            "$ref": "./examples/UploadCertificatePost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Gets all the users registered on a data box edge/gateway device.",
        "operationId": "Users_ListByDataBoxEdgeDevice",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of all users on the device.",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "OperationsGet": {
            "$ref": "./examples/UserGetAllInDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/users/{name}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Gets the properties of the specified user.",
        "operationId": "Users_Get",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The user name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The user details.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UserGet": {
            "$ref": "./examples/UserGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Creates a new user or updates an existing user's information on a data box edge/gateway device.",
        "operationId": "Users_CreateOrUpdate",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The user name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "The user details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the user."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "UserPut": {
            "$ref": "./examples/UserPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Deletes the user on a databox edge/gateway device.",
        "operationId": "Users_Delete",
        "parameters": [
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The user name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the user."
          },
          "202": {
            "description": "Accepted the request to delete the user."
          },
          "204": {
            "description": "The user is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "UserDelete": {
            "$ref": "./examples/UserDelete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "description": "The shipping address of the customer.",
      "required": [
        "addressLine1",
        "postalCode",
        "city",
        "state",
        "country"
      ],
      "type": "object",
      "properties": {
        "addressLine1": {
          "description": "The address line1.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The address line2.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The address line3.",
          "type": "string"
        },
        "postalCode": {
          "description": "The postal code.",
          "type": "string"
        },
        "city": {
          "description": "The city name.",
          "type": "string"
        },
        "state": {
          "description": "The state name.",
          "type": "string"
        },
        "country": {
          "description": "The country name.",
          "type": "string"
        }
      }
    },
    "Alert": {
      "description": "Alert on the data box edge/gateway device.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertProperties",
          "description": "Properties of alert.",
          "readOnly": true,
          "x-ms-client-flatten": true
        }
      }
    },
    "AlertErrorDetails": {
      "description": "Error details for the alert.",
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Error code.",
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "description": "Error Message.",
          "type": "string",
          "readOnly": true
        },
        "occurrences": {
          "format": "int32",
          "description": "Number of occurrences.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "AlertList": {
      "description": "Collection of alerts.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AlertProperties": {
      "description": "Properties of alert.",
      "type": "object",
      "properties": {
        "title": {
          "description": "Alert title.",
          "type": "string",
          "readOnly": true
        },
        "alertType": {
          "description": "Alert type.",
          "type": "string",
          "readOnly": true
        },
        "appearedAtDateTime": {
          "format": "date-time",
          "description": "UTC time when the alert appeared.",
          "type": "string",
          "readOnly": true
        },
        "recommendation": {
          "description": "Alert recommendation.",
          "type": "string",
          "readOnly": true
        },
        "severity": {
          "description": "Severity of the alert.",
          "enum": [
            "Informational",
            "Warning",
            "Critical"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "AlertSeverity",
            "modelAsString": true
          }
        },
        "errorDetails": {
          "$ref": "#/definitions/AlertErrorDetails",
          "description": "Error details of the alert.",
          "readOnly": true
        },
        "detailedInformation": {
          "description": "Alert details.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ARMBaseModel": {
      "description": "Represents the base class for all object models.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "AsymmetricEncryptedSecret": {
      "description": "Represent the secrets intended for encryption with asymmetric key pair.",
      "required": [
        "value",
        "encryptionAlgorithm"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the secret.",
          "type": "string"
        },
        "encryptionCertThumbprint": {
          "description": "Thumbprint certificate used to encrypt \\\"Value\\\". If the value is unencrypted, it will be null.",
          "type": "string"
        },
        "encryptionAlgorithm": {
          "description": "The algorithm used to encrypt \"Value\".",
          "enum": [
            "None",
            "AES256",
            "RSAES_PKCS1_v_1_5"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionAlgorithm",
            "modelAsString": true
          }
        }
      }
    },
    "Authentication": {
      "description": "Authentication mechanism for IoT devices.",
      "type": "object",
      "properties": {
        "symmetricKey": {
          "$ref": "#/definitions/SymmetricKey",
          "description": "Symmetric key for authentication."
        }
      }
    },
    "AzureContainerInfo": {
      "description": "Azure container mapping of the endpoint.",
      "required": [
        "storageAccountCredentialId",
        "containerName",
        "dataFormat"
      ],
      "type": "object",
      "properties": {
        "storageAccountCredentialId": {
          "description": "ID of the storage account credential used to access storage.",
          "type": "string"
        },
        "containerName": {
          "description": "Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob).",
          "type": "string"
        },
        "dataFormat": {
          "description": "Storage format used for the file represented by the share.",
          "enum": [
            "BlockBlob",
            "PageBlob",
            "AzureFile"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AzureContainerDataFormat",
            "modelAsString": true
          }
        }
      }
    },
    "BandwidthSchedule": {
      "description": "The bandwidth schedule details.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BandwidthScheduleProperties",
          "description": "The properties of the bandwidth schedule.",
          "x-ms-client-flatten": true
        }
      }
    },
    "BandwidthScheduleProperties": {
      "description": "The properties of the bandwidth schedule.",
      "required": [
        "start",
        "stop",
        "rateInMbps",
        "days"
      ],
      "type": "object",
      "properties": {
        "start": {
          "description": "The start time of the schedule in UTC.",
          "type": "string"
        },
        "stop": {
          "description": "The stop time of the schedule in UTC.",
          "type": "string"
        },
        "rateInMbps": {
          "format": "int32",
          "description": "The bandwidth rate in Mbps.",
          "type": "integer"
        },
        "days": {
          "description": "The days of the week when this schedule is applicable.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": true
            }
          }
        }
      }
    },
    "BandwidthSchedulesList": {
      "description": "The collection of bandwidth schedules.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of bandwidth schedules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BandwidthSchedule"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ClientAccessRight": {
      "description": "The mapping between a particular client IP and the type of access client has on the NFS share.",
      "required": [
        "client",
        "accessPermission"
      ],
      "type": "object",
      "properties": {
        "client": {
          "description": "IP of the client.",
          "type": "string"
        },
        "accessPermission": {
          "description": "Type of access to be allowed for the client.",
          "enum": [
            "NoAccess",
            "ReadOnly",
            "ReadWrite"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ClientPermissionType",
            "modelAsString": true
          }
        }
      }
    },
    "CloudError": {
      "description": "An error response from the service.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "The error details."
        }
      },
      "x-ms-external": true
    },
    "CloudErrorBody": {
      "description": "An error response from the service.",
      "properties": {
        "code": {
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "type": "string"
        },
        "message": {
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "type": "string"
        },
        "details": {
          "description": "A list of additional details about the error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          }
        }
      },
      "x-ms-external": true
    },
    "ContactDetails": {
      "description": "Contains all the contact details of the customer.",
      "required": [
        "contactPerson",
        "companyName",
        "phone",
        "emailList"
      ],
      "type": "object",
      "properties": {
        "contactPerson": {
          "description": "The contact person name.",
          "type": "string"
        },
        "companyName": {
          "description": "The name of the company.",
          "type": "string"
        },
        "phone": {
          "description": "The phone number.",
          "type": "string"
        },
        "emailList": {
          "description": "The email list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataBoxEdgeDevice": {
      "description": "The Data Box Edge/Gateway device.",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "location": {
          "description": "The location of the device. This is a supported and registered Azure geographical region (for example, West US, East US, or Southeast Asia). The geographical region of a device cannot be changed once it is created, but if an identical geographical region is specified on update, the request will succeed.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "The list of tags that describe the device. These tags can be used to view and group this device (across resource groups).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU type."
        },
        "etag": {
          "description": "The etag for the devices.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/DataBoxEdgeDeviceProperties",
          "description": "The properties of the Data Box Edge/Gateway device.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DataBoxEdgeDeviceExtendedInfo": {
      "description": "The extended Info of the Data Box Edge/Gateway device.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataBoxEdgeDeviceExtendedInfoProperties",
          "description": "The extended info properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DataBoxEdgeDeviceExtendedInfoProperties": {
      "description": "The properties of the Data Box Edge/Gateway device extended info.",
      "type": "object",
      "properties": {
        "encryptionKeyThumbprint": {
          "description": "The digital signature of encrypted certificate.",
          "type": "string"
        },
        "encryptionKey": {
          "description": "The public part of the encryption certificate. Client uses this to encrypt any secret.",
          "type": "string"
        },
        "resourceKey": {
          "description": "The Resource ID of the Resource.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataBoxEdgeDeviceList": {
      "description": "The collection of Data Box Edge/Gateway devices.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of Data Box Edge/Gateway devices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataBoxEdgeDevice"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataBoxEdgeDevicePatch": {
      "description": "The Data Box Edge/Gateway device patch.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "The tags attached to the Data Box Edge/Gateway resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DataBoxEdgeDeviceProperties": {
      "description": "The properties of the Data Box Edge/Gateway device.",
      "type": "object",
      "properties": {
        "dataBoxEdgeDeviceStatus": {
          "description": "The status of the Data Box Edge/Gateway device.",
          "enum": [
            "ReadyToSetup",
            "Online",
            "Offline",
            "NeedsAttention",
            "Disconnected",
            "PartiallyDisconnected"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataBoxEdgeDeviceStatus",
            "modelAsString": true
          }
        },
        "serialNumber": {
          "description": "The Serial Number of Data Box Edge/Gateway device.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The Description of the Data Box Edge/Gateway device.",
          "type": "string"
        },
        "modelDescription": {
          "description": "The description of the Data Box Edge/Gateway device model.",
          "type": "string"
        },
        "deviceType": {
          "description": "The type of the Data Box Edge/Gateway device.",
          "enum": [
            "DataBoxEdgeDevice"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DeviceType",
            "modelAsString": true
          }
        },
        "friendlyName": {
          "description": "The Data Box Edge/Gateway device name.",
          "type": "string"
        },
        "culture": {
          "description": "The Data Box Edge/Gateway device culture.",
          "type": "string",
          "readOnly": true
        },
        "deviceModel": {
          "description": "The Data Box Edge/Gateway device model.",
          "type": "string",
          "readOnly": true
        },
        "deviceSoftwareVersion": {
          "description": "The Data Box Edge/Gateway device software version.",
          "type": "string",
          "readOnly": true
        },
        "deviceLocalCapacity": {
          "format": "int64",
          "description": "The Data Box Edge/Gateway device local capacity in MB.",
          "type": "integer",
          "readOnly": true
        },
        "timeZone": {
          "description": "The Data Box Edge/Gateway device timezone.",
          "type": "string",
          "readOnly": true
        },
        "deviceHcsVersion": {
          "description": "The device software version number of the device (eg: 1.2.18105.6).",
          "type": "string",
          "readOnly": true
        },
        "configuredRoleTypes": {
          "description": "Type of compute roles configured.",
          "type": "array",
          "items": {
            "enum": [
              "IOT",
              "ASA",
              "Functions",
              "Cognitive"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "RoleTypes",
              "modelAsString": true
            }
          },
          "readOnly": true
        }
      }
    },
    "FileEventTrigger": {
      "description": "Trigger details.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileTriggerProperties",
          "description": "File trigger properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "FileEvent"
    },
    "FileSourceInfo": {
      "description": "File source details.",
      "required": [
        "shareId"
      ],
      "type": "object",
      "properties": {
        "shareId": {
          "description": "File share ID.",
          "type": "string"
        }
      }
    },
    "FileTriggerProperties": {
      "description": "File trigger properties.",
      "required": [
        "sourceInfo",
        "sinkInfo"
      ],
      "type": "object",
      "properties": {
        "sourceInfo": {
          "$ref": "#/definitions/FileSourceInfo",
          "description": "File event source details."
        },
        "sinkInfo": {
          "$ref": "#/definitions/RoleSinkInfo",
          "description": "Role sink info."
        },
        "customContextTag": {
          "description": "A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.",
          "type": "string"
        }
      }
    },
    "IoTDeviceInfo": {
      "description": "Metadata of IoT device/IoT Edge device to be configured.",
      "required": [
        "deviceId",
        "ioTHostHub"
      ],
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "ID of the IoT device/edge device.",
          "type": "string"
        },
        "ioTHostHub": {
          "description": "Host name for the IoT hub associated to the device.",
          "type": "string"
        },
        "authentication": {
          "$ref": "#/definitions/Authentication",
          "description": "IoT device authentication info."
        }
      }
    },
    "IoTRole": {
      "description": "Compute role.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Role"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/IoTRoleProperties",
          "description": "Properties specific to IoT role.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "IOT"
    },
    "IoTRoleProperties": {
      "description": "IoT role properties.",
      "required": [
        "hostPlatform",
        "ioTDeviceDetails",
        "ioTEdgeDeviceDetails",
        "roleStatus"
      ],
      "type": "object",
      "properties": {
        "hostPlatform": {
          "description": "Host OS supported by the IoT role.",
          "enum": [
            "Windows",
            "Linux"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PlatformType",
            "modelAsString": true
          }
        },
        "ioTDeviceDetails": {
          "$ref": "#/definitions/IoTDeviceInfo",
          "description": "IoT device metadata to which data box edge device needs to be connected."
        },
        "ioTEdgeDeviceDetails": {
          "$ref": "#/definitions/IoTDeviceInfo",
          "description": "IoT edge device to which the IoT role needs to be configured."
        },
        "shareMappings": {
          "description": "Mount points of shares in role(s).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MountPointMap"
          }
        },
        "roleStatus": {
          "description": "Role status.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoleStatus",
            "modelAsString": true
          }
        }
      }
    },
    "Ipv4Config": {
      "description": "Details related to the IPv4 address configuration.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "The IPv4 address of the network adapter.",
          "type": "string",
          "readOnly": true
        },
        "subnet": {
          "description": "The IPv4 subnet of the network adapter.",
          "type": "string",
          "readOnly": true
        },
        "gateway": {
          "description": "The IPv4 gateway of the network adapter.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Ipv6Config": {
      "description": "Details related to the IPv6 address configuration.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "The IPv6 address of the network adapter.",
          "type": "string",
          "readOnly": true
        },
        "prefixLength": {
          "format": "int32",
          "description": "The IPv6 prefix of the network adapter.",
          "type": "integer",
          "readOnly": true
        },
        "gateway": {
          "description": "The IPv6 gateway of the network adapter.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Job": {
      "description": "A device job.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The current status of the job.",
          "enum": [
            "Invalid",
            "Running",
            "Succeeded",
            "Failed",
            "Canceled",
            "Paused",
            "Scheduled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "The UTC date and time at which the job started.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "format": "date-time",
          "description": "The UTC date and time at which the job completed.",
          "type": "string",
          "readOnly": true
        },
        "percentComplete": {
          "format": "int32",
          "description": "The percentage of the job that is complete.",
          "type": "integer",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/JobErrorDetails",
          "description": "The error details.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The properties of the job.",
          "readOnly": true,
          "x-ms-client-flatten": true
        }
      }
    },
    "JobErrorDetails": {
      "description": "The job error information containing the list of job errors.",
      "type": "object",
      "properties": {
        "errorDetails": {
          "description": "The error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorItem"
          },
          "readOnly": true
        },
        "code": {
          "description": "The code intended for programmatic access.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The message that describes the error in detail.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobErrorItem": {
      "description": "The job error items.",
      "type": "object",
      "properties": {
        "recommendations": {
          "description": "The recommended actions.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "code": {
          "description": "The code intended for programmatic access.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The message that describes the error in detail.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobProperties": {
      "description": "The properties for the job.",
      "type": "object",
      "properties": {
        "jobType": {
          "description": "The type of the job.",
          "enum": [
            "Invalid",
            "ScanForUpdates",
            "DownloadUpdates",
            "InstallUpdates",
            "RefreshShare"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": true
          }
        },
        "currentStage": {
          "description": "Current stage of the update operation.",
          "enum": [
            "Unknown",
            "Initial",
            "ScanStarted",
            "ScanComplete",
            "ScanFailed",
            "DownloadStarted",
            "DownloadComplete",
            "DownloadFailed",
            "InstallStarted",
            "InstallComplete",
            "InstallFailed",
            "RebootInitiated",
            "Success",
            "Failure",
            "RescanStarted",
            "RescanComplete",
            "RescanFailed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "UpdateOperationStage",
            "modelAsString": true
          }
        },
        "downloadProgress": {
          "$ref": "#/definitions/UpdateDownloadProgress",
          "description": "The download progress.",
          "readOnly": true
        },
        "installProgress": {
          "$ref": "#/definitions/UpdateInstallProgress",
          "description": "The install progress.",
          "readOnly": true
        },
        "totalRefreshErrors": {
          "format": "int32",
          "description": "Total number of errors encountered during the refresh process.",
          "type": "integer",
          "readOnly": true
        },
        "errorManifestFile": {
          "description": "Local share/remote container relative path to the error manifest file of the refresh.",
          "type": "string",
          "readOnly": true
        },
        "shareId": {
          "description": "ARM ID of the share that was refreshed.",
          "type": "string",
          "readOnly": true
        },
        "folder": {
          "description": "If only subfolders need to be refreshed, then the subfolder path inside the share. (The path is empty if there are no subfolders.)",
          "type": "string"
        }
      }
    },
    "MetricDimension_V1": {
      "description": "Metric Dimension v1.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the metrics dimension.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the metrics dimension.",
          "type": "string"
        },
        "toBeExportedForShoebox": {
          "description": "To be exported to shoe box.",
          "type": "boolean"
        }
      }
    },
    "MetricSpecification_V1": {
      "description": "Metric specification version 1.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the metric.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of the metric.",
          "type": "string"
        },
        "displayDescription": {
          "description": "Description of the metric to be displayed.",
          "type": "string"
        },
        "unit": {
          "description": "Metric units.",
          "enum": [
            "NotSpecified",
            "Percent",
            "Count",
            "Seconds",
            "Milliseconds",
            "Bytes",
            "BytesPerSecond",
            "CountPerSecond"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricUnit",
            "modelAsString": true
          }
        },
        "aggregationType": {
          "description": "Metric aggregation type.",
          "enum": [
            "NotSpecified",
            "None",
            "Average",
            "Minimum",
            "Maximum",
            "Total",
            "Count"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricAggregationType",
            "modelAsString": true
          }
        },
        "dimensions": {
          "description": "Metric dimensions, other than default dimension which is resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension_V1"
          }
        },
        "fillGapWithZero": {
          "description": "Set true to fill the gaps with zero.",
          "type": "boolean"
        },
        "category": {
          "description": "Metric category.",
          "enum": [
            "Capacity",
            "Transaction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricCategory",
            "modelAsString": true
          }
        },
        "resourceIdDimensionNameOverride": {
          "description": "Resource name override.",
          "type": "string"
        },
        "supportedTimeGrainTypes": {
          "description": "Support granularity of metrics.",
          "type": "array",
          "items": {
            "enum": [
              "PT1M",
              "PT5M",
              "PT15M",
              "PT30M",
              "PT1H",
              "PT6H",
              "PT12H",
              "PT1D"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "TimeGrain",
              "modelAsString": true
            }
          }
        },
        "supportedAggregationTypes": {
          "description": "Support metric aggregation type.",
          "type": "array",
          "items": {
            "enum": [
              "NotSpecified",
              "None",
              "Average",
              "Minimum",
              "Maximum",
              "Total",
              "Count"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "MetricAggregationType",
              "modelAsString": true
            }
          }
        }
      }
    },
    "MountPointMap": {
      "description": "The share mount point.",
      "required": [
        "shareId"
      ],
      "type": "object",
      "properties": {
        "shareId": {
          "description": "ID of the share mounted to the role VM.",
          "type": "string"
        },
        "roleId": {
          "description": "ID of the role to which share is mounted.",
          "type": "string",
          "readOnly": true
        },
        "mountPoint": {
          "description": "Mount point for the share.",
          "type": "string",
          "readOnly": true
        },
        "roleType": {
          "description": "Role type.",
          "enum": [
            "IOT",
            "ASA",
            "Functions",
            "Cognitive"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "RoleTypes",
            "modelAsString": true
          }
        }
      }
    },
    "NetworkAdapter": {
      "description": "Represents the networkAdapter on a device.",
      "type": "object",
      "properties": {
        "adapterId": {
          "description": "Instance ID of network adapter.",
          "type": "string",
          "readOnly": true
        },
        "adapterPosition": {
          "$ref": "#/definitions/NetworkAdapterPosition",
          "description": "Hardware position of network adapter.",
          "readOnly": true
        },
        "index": {
          "format": "int32",
          "description": "Logical index of the adapter.",
          "type": "integer",
          "readOnly": true
        },
        "nodeId": {
          "description": "Node ID of the network adapter.",
          "type": "string",
          "readOnly": true
        },
        "networkAdapterName": {
          "description": "Network adapter name.",
          "type": "string",
          "readOnly": true
        },
        "label": {
          "description": "Hardware label for the adapter.",
          "type": "string",
          "readOnly": true
        },
        "macAddress": {
          "description": "MAC address.",
          "type": "string",
          "readOnly": true
        },
        "linkSpeed": {
          "format": "int64",
          "description": "Link speed.",
          "type": "integer",
          "readOnly": true
        },
        "status": {
          "description": "Value indicating whether this adapter is valid.",
          "enum": [
            "Inactive",
            "Active"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "NetworkAdapterStatus",
            "modelAsString": true
          }
        },
        "rdmaStatus": {
          "description": "Value indicating whether this adapter is RDMA capable.",
          "enum": [
            "Incapable",
            "Capable"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NetworkAdapterRDMAStatus",
            "modelAsString": true
          }
        },
        "dhcpStatus": {
          "description": "Value indicating whether this adapter has DHCP enabled.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NetworkAdapterDHCPStatus",
            "modelAsString": true
          }
        },
        "ipv4Configuration": {
          "$ref": "#/definitions/Ipv4Config",
          "description": "The IPv4 configuration of the network adapter.",
          "readOnly": true
        },
        "ipv6Configuration": {
          "$ref": "#/definitions/Ipv6Config",
          "description": "The IPv6 configuration of the network adapter.",
          "readOnly": true
        },
        "ipv6LinkLocalAddress": {
          "description": "The IPv6 local address.",
          "type": "string",
          "readOnly": true
        },
        "dnsServers": {
          "description": "The list of DNS Servers of the device.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "NetworkAdapterPosition": {
      "description": "The network adapter position.",
      "type": "object",
      "properties": {
        "networkGroup": {
          "description": "The network group.",
          "enum": [
            "None",
            "NonRDMA",
            "RDMA"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "NetworkGroup",
            "modelAsString": true
          }
        },
        "port": {
          "format": "int32",
          "description": "The port.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NetworkSettings": {
      "description": "The network settings of a device.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSettingsProperties",
          "description": "The properties of network settings of a device.",
          "readOnly": true,
          "x-ms-client-flatten": true
        }
      }
    },
    "NetworkSettingsProperties": {
      "description": "The properties of network settings.",
      "type": "object",
      "properties": {
        "networkAdapters": {
          "description": "The network adapter list on the device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAdapter"
          },
          "readOnly": true
        }
      }
    },
    "Operation": {
      "description": "Operations.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation.",
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "Properties displayed for the operation."
        },
        "origin": {
          "description": "Origin of the operation.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Operation properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationDisplay": {
      "description": "Operation display properties.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Provider name.",
          "type": "string"
        },
        "resource": {
          "description": "The type of resource in which the operation is performed.",
          "type": "string"
        },
        "operation": {
          "description": "Operation to be performed on the resource.",
          "type": "string"
        },
        "description": {
          "description": "Description of the operation to be performed.",
          "type": "string"
        }
      }
    },
    "OperationProperties": {
      "description": "Operation properties.",
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "Service specification."
        }
      }
    },
    "OperationsList": {
      "description": "The list of operations used for the discovery of available provider operations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string"
        }
      }
    },
    "Order": {
      "description": "The order details.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/OrderProperties",
          "description": "The order properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OrderList": {
      "description": "List of order entities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of orders.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OrderProperties": {
      "description": "Order properties.",
      "required": [
        "contactInformation",
        "shippingAddress"
      ],
      "type": "object",
      "properties": {
        "contactInformation": {
          "$ref": "#/definitions/ContactDetails",
          "description": "The contact details."
        },
        "shippingAddress": {
          "$ref": "#/definitions/Address",
          "description": "The shipping address."
        },
        "currentStatus": {
          "$ref": "#/definitions/OrderStatus",
          "description": "Current status of the order."
        },
        "orderHistory": {
          "description": "List of status changes in the order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderStatus"
          },
          "readOnly": true
        },
        "serialNumber": {
          "description": "Serial number of the device.",
          "type": "string",
          "readOnly": true
        },
        "deliveryTrackingInfo": {
          "description": "Tracking information for the package delivered to the customer whether it has an original or a replacement device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingInfo"
          },
          "readOnly": true
        },
        "returnTrackingInfo": {
          "description": "Tracking information for the package returned from the customer whether it has an original or a replacement device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingInfo"
          },
          "readOnly": true
        }
      }
    },
    "OrderStatus": {
      "description": "Represents a single status change.",
      "required": [
        "status"
      ],
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the order as per the allowed status types.",
          "enum": [
            "Untracked",
            "AwaitingFulfilment",
            "AwaitingPreparation",
            "AwaitingShipment",
            "Shipped",
            "Arriving",
            "Delivered",
            "ReplacementRequested",
            "LostDevice",
            "Declined",
            "ReturnInitiated",
            "AwaitingReturnShipment",
            "ShippedBack",
            "CollectedAtMicrosoft"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OrderState",
            "modelAsString": true
          }
        },
        "updateDateTime": {
          "format": "date-time",
          "description": "Time of status update.",
          "type": "string",
          "readOnly": true
        },
        "comments": {
          "description": "Comments related to this status change.",
          "type": "string"
        }
      }
    },
    "PeriodicTimerEventTrigger": {
      "description": "Trigger details.",
      "required": [
        "properties",
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Trigger"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PeriodicTimerProperties",
          "description": "Periodic timer trigger properties.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The object name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "PeriodicTimerEvent"
    },
    "PeriodicTimerProperties": {
      "description": "Periodic timer trigger properties.",
      "required": [
        "sourceInfo",
        "sinkInfo"
      ],
      "type": "object",
      "properties": {
        "sourceInfo": {
          "$ref": "#/definitions/PeriodicTimerSourceInfo",
          "description": "Periodic timer details."
        },
        "sinkInfo": {
          "$ref": "#/definitions/RoleSinkInfo",
          "description": "Role Sink information."
        },
        "customContextTag": {
          "description": "A custom context tag typically used to correlate the trigger against its usage. For example, if a periodic timer trigger is intended for certain specific IoT modules in the device, the tag can be the name or the image URL of the module.",
          "type": "string"
        }
      }
    },
    "PeriodicTimerSourceInfo": {
      "description": "Periodic timer event source.",
      "required": [
        "startTime",
        "schedule"
      ],
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "The time of the day that results in a valid trigger. Schedule is computed with reference to the time specified up to seconds. If timezone is not specified the time will considered to be in device timezone. The value will always be returned as UTC time.",
          "type": "string"
        },
        "schedule": {
          "description": "Periodic frequency at which timer event needs to be raised. Supports daily, hourly, minutes, and seconds.",
          "type": "string"
        },
        "topic": {
          "description": "Topic where periodic events are published to IoT device.",
          "type": "string"
        }
      }
    },
    "RawCertificateData": {
      "description": "Raw Certificate Data.",
      "required": [
        "certificate"
      ],
      "type": "object",
      "properties": {
        "authenticationType": {
          "description": "The authentication type.",
          "enum": [
            "Invalid",
            "AzureActiveDirectory"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthenticationType",
            "modelAsString": true
          }
        },
        "certificate": {
          "description": "The base64 encoded certificate raw data.",
          "type": "string"
        }
      }
    },
    "RefreshDetails": {
      "description": "Fields for tracking refresh job on the share.",
      "type": "object",
      "properties": {
        "inProgressRefreshJobId": {
          "description": "If a refresh share job is currently in progress on this share, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress.",
          "type": "string"
        },
        "lastCompletedRefreshJobTimeInUTC": {
          "format": "date-time",
          "description": "Indicates the completed time for the last refresh job on this particular share, if any.This could be a failed job or a successful job.",
          "type": "string"
        },
        "errorManifestFile": {
          "description": "Indicates the relative path of the error xml for the last refresh job on this particular share, if any. This could be a failed job or a successful job.",
          "type": "string"
        },
        "lastJob": {
          "description": "Indicates the id of the last refresh job on this particular share,if any. This could be a failed job or a successful job.",
          "type": "string"
        }
      }
    },
    "Role": {
      "description": "Compute role.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "kind": {
          "description": "Role type.",
          "enum": [
            "IOT",
            "ASA",
            "Functions",
            "Cognitive"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RoleTypes",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "RoleList": {
      "description": "Collection of all the roles on the Data Box Edge device.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The Value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RoleSinkInfo": {
      "description": "Compute role against which events will be raised.",
      "required": [
        "roleId"
      ],
      "type": "object",
      "properties": {
        "roleId": {
          "description": "Compute role ID.",
          "type": "string"
        }
      }
    },
    "SecuritySettings": {
      "description": "The security settings of a device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecuritySettingsProperties",
          "description": "Properties of the security settings.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SecuritySettingsProperties": {
      "description": "The properties of security settings.",
      "required": [
        "deviceAdminPassword"
      ],
      "type": "object",
      "properties": {
        "deviceAdminPassword": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "Device administrator password as an encrypted string (encrypted using RSA PKCS #1) is used to sign into the  local web UI of the device. The Actual password should have at least 8 characters that are a combination of  uppercase, lowercase, numeric, and special characters."
        }
      }
    },
    "ServiceSpecification": {
      "description": "Service specification.",
      "type": "object",
      "properties": {
        "metricSpecifications": {
          "description": "Metric specification as defined by shoebox.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpecification_V1"
          }
        }
      }
    },
    "Share": {
      "description": "Represents a share on the  Data Box Edge/Gateway device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ShareProperties",
          "description": "The share properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ShareAccessRight": {
      "description": "Specifies the mapping between this particular user and the type of access he has on shares on this device.",
      "required": [
        "shareId",
        "accessType"
      ],
      "type": "object",
      "properties": {
        "shareId": {
          "description": "The share ID.",
          "type": "string"
        },
        "accessType": {
          "description": "Type of access to be allowed on the share for this user.",
          "enum": [
            "Change",
            "Read",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ShareAccessType",
            "modelAsString": true
          }
        }
      }
    },
    "ShareList": {
      "description": "Collection of all the shares on the Data Box Edge/Gateway device.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of shares.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Share"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ShareProperties": {
      "description": "The share properties.",
      "required": [
        "shareStatus",
        "monitoringStatus",
        "accessProtocol"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description for the share.",
          "type": "string"
        },
        "shareStatus": {
          "description": "Current status of the share.",
          "enum": [
            "Online",
            "Offline"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ShareStatus",
            "modelAsString": true
          }
        },
        "monitoringStatus": {
          "description": "Current monitoring status of the share.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MonitoringStatus",
            "modelAsString": true
          }
        },
        "azureContainerInfo": {
          "$ref": "#/definitions/AzureContainerInfo",
          "description": "Azure container mapping for the share."
        },
        "accessProtocol": {
          "description": "Access protocol to be used by the share.",
          "enum": [
            "SMB",
            "NFS"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ShareAccessProtocol",
            "modelAsString": true
          }
        },
        "userAccessRights": {
          "description": "Mapping of users and corresponding access rights on the share (required for SMB protocol).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAccessRight"
          }
        },
        "clientAccessRights": {
          "description": "List of IP addresses and corresponding access rights on the share(required for NFS protocol).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClientAccessRight"
          }
        },
        "refreshDetails": {
          "$ref": "#/definitions/RefreshDetails",
          "description": "Details of the refresh job on this share."
        },
        "shareMappings": {
          "description": "Share mount point to the role.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MountPointMap"
          },
          "readOnly": true
        },
        "dataPolicy": {
          "description": "Data policy of the share.",
          "enum": [
            "Cloud",
            "Local"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataPolicy",
            "modelAsString": true
          }
        }
      }
    },
    "Sku": {
      "description": "The SKU type.",
      "type": "object",
      "properties": {
        "name": {
          "description": "SKU name.",
          "enum": [
            "Gateway",
            "Edge"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "description": "The SKU tier. This is based on the SKU name.",
          "enum": [
            "Standard"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        }
      }
    },
    "StorageAccountCredential": {
      "description": "The storage account credential.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountCredentialProperties",
          "description": "The storage account credential properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageAccountCredentialList": {
      "description": "The collection of storage account credentials.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountCredential"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StorageAccountCredentialProperties": {
      "description": "The storage account credential properties.",
      "required": [
        "alias",
        "sslStatus",
        "accountType"
      ],
      "type": "object",
      "properties": {
        "alias": {
          "description": "Alias for the storage account.",
          "type": "string"
        },
        "userName": {
          "description": "Username for the storage account.",
          "type": "string"
        },
        "accountKey": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "Encrypted storage key."
        },
        "connectionString": {
          "description": "Connection string for the storage account. Use this string if username and account key are not specified.",
          "type": "string"
        },
        "sslStatus": {
          "description": "Signifies whether SSL needs to be enabled or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SSLStatus",
            "modelAsString": true
          }
        },
        "blobDomainName": {
          "description": "Blob end point for private clouds.",
          "type": "string"
        },
        "accountType": {
          "description": "Type of storage accessed on the storage account.",
          "enum": [
            "GeneralPurposeStorage",
            "BlobStorage"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AccountType",
            "modelAsString": true
          }
        }
      }
    },
    "SymmetricKey": {
      "description": "Symmetric key for authentication.",
      "type": "object",
      "properties": {
        "connectionString": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "Connection string based on the symmetric key."
        }
      }
    },
    "TrackingInfo": {
      "description": "Tracking courier information.",
      "type": "object",
      "properties": {
        "serialNumber": {
          "description": "Serial number of the device being tracked.",
          "type": "string"
        },
        "carrierName": {
          "description": "Name of the carrier used in the delivery.",
          "type": "string"
        },
        "trackingId": {
          "description": "Tracking ID of the shipment.",
          "type": "string"
        },
        "trackingUrl": {
          "description": "Tracking URL of the shipment.",
          "type": "string"
        }
      }
    },
    "Trigger": {
      "description": "Trigger details.",
      "required": [
        "kind"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "kind": {
          "description": "Trigger Kind.",
          "enum": [
            "FileEvent",
            "PeriodicTimerEvent"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TriggerEventType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "TriggerList": {
      "description": "Collection of all trigger on the data box edge device.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of triggers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trigger"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdateDownloadProgress": {
      "description": "Details about the download progress of update.",
      "type": "object",
      "properties": {
        "downloadPhase": {
          "description": "The download phase.",
          "enum": [
            "Unknown",
            "Initializing",
            "Downloading",
            "Verifying"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DownloadPhase",
            "modelAsString": true
          }
        },
        "percentComplete": {
          "format": "int32",
          "description": "Percentage of completion.",
          "type": "integer",
          "readOnly": true
        },
        "totalBytesToDownload": {
          "format": "double",
          "description": "Total bytes to download.",
          "type": "number",
          "readOnly": true
        },
        "totalBytesDownloaded": {
          "format": "double",
          "description": "Total bytes downloaded.",
          "type": "number",
          "readOnly": true
        },
        "numberOfUpdatesToDownload": {
          "format": "int32",
          "description": "Number of updates to download.",
          "type": "integer",
          "readOnly": true
        },
        "numberOfUpdatesDownloaded": {
          "format": "int32",
          "description": "Number of updates downloaded.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "UpdateInstallProgress": {
      "description": "Progress details during installation of updates.",
      "type": "object",
      "properties": {
        "percentComplete": {
          "format": "int32",
          "description": "Percentage completed.",
          "type": "integer",
          "readOnly": true
        },
        "numberOfUpdatesToInstall": {
          "format": "int32",
          "description": "Number of updates to install.",
          "type": "integer",
          "readOnly": true
        },
        "numberOfUpdatesInstalled": {
          "format": "int32",
          "description": "Number of updates installed.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "UpdateSummary": {
      "description": "Details about ongoing updates and availability of updates on the device.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateSummaryProperties",
          "description": "The device update information summary.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdateSummaryProperties": {
      "description": "The device update information summary.",
      "type": "object",
      "properties": {
        "deviceVersionNumber": {
          "description": "The current version of the device in format: 1.2.17312.13.\",",
          "type": "string"
        },
        "friendlyDeviceVersionName": {
          "description": "The current version of the device in text format.",
          "type": "string"
        },
        "deviceLastScannedDateTime": {
          "format": "date-time",
          "description": "The last time when a scan was done on the device.",
          "type": "string"
        },
        "lastCompletedScanJobDateTime": {
          "format": "date-time",
          "description": "The time when the last scan job was completed (success/cancelled/failed) on the appliance.",
          "type": "string"
        },
        "lastCompletedDownloadJobDateTime": {
          "format": "date-time",
          "description": "The time when the last Download job was completed (success/cancelled/failed) on the appliance.",
          "type": "string",
          "readOnly": true
        },
        "lastCompletedInstallJobDateTime": {
          "format": "date-time",
          "description": "The time when the last Install job was completed (success/cancelled/failed) on the appliance.",
          "type": "string",
          "readOnly": true
        },
        "totalNumberOfUpdatesAvailable": {
          "format": "int32",
          "description": "The number of updates available for the current device version as per the last device scan.",
          "type": "integer",
          "readOnly": true
        },
        "totalNumberOfUpdatesPendingDownload": {
          "format": "int32",
          "description": "The total number of items pending download.",
          "type": "integer",
          "readOnly": true
        },
        "totalNumberOfUpdatesPendingInstall": {
          "format": "int32",
          "description": "The total number of items pending install.",
          "type": "integer",
          "readOnly": true
        },
        "rebootBehavior": {
          "description": "Indicates if updates are available and at least one of the updates needs a reboot.",
          "enum": [
            "NeverReboots",
            "RequiresReboot",
            "RequestReboot"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "InstallRebootBehavior",
            "modelAsString": true
          }
        },
        "ongoingUpdateOperation": {
          "description": "The current update operation.",
          "enum": [
            "None",
            "Scan",
            "Download",
            "Install"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "UpdateOperation",
            "modelAsString": true
          }
        },
        "inProgressDownloadJobId": {
          "description": "The job ID of the download job in progress.",
          "type": "string",
          "readOnly": true
        },
        "inProgressInstallJobId": {
          "description": "The job ID of the install job in progress.",
          "type": "string",
          "readOnly": true
        },
        "inProgressDownloadJobStartedDateTime": {
          "format": "date-time",
          "description": "The time when the currently running download (if any) started.",
          "type": "string",
          "readOnly": true
        },
        "inProgressInstallJobStartedDateTime": {
          "format": "date-time",
          "description": "The time when the currently running install (if any) started.",
          "type": "string",
          "readOnly": true
        },
        "updateTitles": {
          "description": "The list of updates available for install.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "totalUpdateSizeInBytes": {
          "format": "double",
          "description": "The total size of updates available for download in bytes.",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "UploadCertificateRequest": {
      "description": "The upload certificate request.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RawCertificateData",
          "description": "The Base 64 encoded certificate raw data.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UploadCertificateResponse": {
      "description": "The upload registration certificate response.",
      "required": [
        "resourceId",
        "aadAuthority",
        "aadTenantId",
        "servicePrincipalClientId",
        "servicePrincipalObjectId",
        "azureManagementEndpointAudience"
      ],
      "type": "object",
      "properties": {
        "authType": {
          "description": "Specifies authentication type.",
          "enum": [
            "Invalid",
            "AzureActiveDirectory"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthenticationType",
            "modelAsString": true
          }
        },
        "resourceId": {
          "description": "The resource ID of the Data Box Edge/Gateway device.",
          "type": "string"
        },
        "aadAuthority": {
          "description": "Azure Active Directory tenant authority.",
          "type": "string"
        },
        "aadTenantId": {
          "description": "Azure Active Directory tenant ID.",
          "type": "string"
        },
        "servicePrincipalClientId": {
          "description": "Azure Active Directory service principal client ID.",
          "type": "string"
        },
        "servicePrincipalObjectId": {
          "description": "Azure Active Directory service principal object ID.",
          "type": "string"
        },
        "azureManagementEndpointAudience": {
          "description": "The azure management endpoint audience.",
          "type": "string"
        }
      }
    },
    "User": {
      "description": "Represents a user who has access to one or more shares on the Data Box Edge/Gateway device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ARMBaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserProperties",
          "description": "The storage account credential properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UserAccessRight": {
      "description": "The mapping between a particular user and the access type on the SMB share.",
      "required": [
        "userId",
        "accessType"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "description": "User ID (already existing in the device).",
          "type": "string"
        },
        "accessType": {
          "description": "Type of access to be allowed for the user.",
          "enum": [
            "Change",
            "Read",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ShareAccessType",
            "modelAsString": true
          }
        }
      }
    },
    "UserList": {
      "description": "Collection of users.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of users.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserProperties": {
      "description": "The user properties.",
      "type": "object",
      "properties": {
        "encryptedPassword": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The password details."
        },
        "shareAccessRights": {
          "description": "List of shares that the user has rights on. This field should not be specified during user creation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShareAccessRight"
          }
        }
      }
    }
  },
  "parameters": {
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version.",
      "required": true,
      "type": "string"
    },
    "locationParameter": {
      "name": "location",
      "in": "path",
      "description": "The location of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The resource group name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription ID.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account."
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
