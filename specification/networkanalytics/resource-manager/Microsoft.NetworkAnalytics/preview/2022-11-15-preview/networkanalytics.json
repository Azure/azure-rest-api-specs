{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.NetworkAnalytics",
    "version": "2022-11-15-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Storage"
    }
  ],
  "paths": {
    "/providers/Microsoft.NetworkAnalytics/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet_Gen": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List_MinimumSet_Gen": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkAnalytics/dataLakeHouses": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "Storage_ListBySubscription",
        "description": "List DataLakeHouseResources resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Storage_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/Storage_ListBySubscription_MaximumSet_Gen.json"
          },
          "Storage_ListBySubscription_MinimumSet_Gen": {
            "$ref": "./examples/Storage_ListBySubscription_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkAnalytics/dataLakeHouses": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "Storage_ListByResourceGroup",
        "description": "List DataLakeHouseResources resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Storage_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/Storage_ListByResourceGroup_MaximumSet_Gen.json"
          },
          "Storage_ListByResourceGroup_MinimumSet_Gen": {
            "$ref": "./examples/Storage_ListByResourceGroup_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkAnalytics/dataLakeHouses/{storageName}": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "Storage_Get",
        "description": "Get a DataLakeHouseResources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageName",
            "in": "path",
            "required": true,
            "description": "The data lake house resource name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResources"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Storage_Get_MaximumSet_Gen": {
            "$ref": "./examples/Storage_Get_MaximumSet_Gen.json"
          },
          "Storage_Get_MinimumSet_Gen": {
            "$ref": "./examples/Storage_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "operationId": "Storage_CreateOrUpdate",
        "description": "Create a DataLakeHouseResources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageName",
            "in": "path",
            "required": true,
            "description": "The data lake house resource name",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResources"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResources"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResources"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Storage_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/Storage_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "Storage_CreateOrUpdate_MinimumSet_Gen": {
            "$ref": "./examples/Storage_CreateOrUpdate_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "Storage_Update",
        "description": "Update a DataLakeHouseResources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageName",
            "in": "path",
            "required": true,
            "description": "The data lake house resource name",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResourcesUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResources"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Storage_Update_MaximumSet_Gen": {
            "$ref": "./examples/Storage_Update_MaximumSet_Gen.json"
          },
          "Storage_Update_MinimumSet_Gen": {
            "$ref": "./examples/Storage_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Storage"
        ],
        "operationId": "Storage_Delete",
        "description": "Delete a DataLakeHouseResources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageName",
            "in": "path",
            "required": true,
            "description": "The data lake house resource name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Storage_Delete_MaximumSet_Gen": {
            "$ref": "./examples/Storage_Delete_MaximumSet_Gen.json"
          },
          "Storage_Delete_MinimumSet_Gen": {
            "$ref": "./examples/Storage_Delete_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AzureDataExplorerProperties": {
      "type": "object",
      "properties": {
        "virtualNetworkConfiguration": {
          "$ref": "#/definitions/VirtualNetworkConfiguration",
          "description": "Virtual Network Configuration",
          "x-ms-mutability": [
            "create"
          ]
        },
        "kustoClusterPrincipalAssignments": {
          "$ref": "#/definitions/KustoClusterPrincipalAssignments",
          "description": "Kusto Cluster Principal Assignments"
        }
      },
      "description": "ADx Properties",
      "required": [
        "kustoClusterPrincipalAssignments"
      ]
    },
    "BlobServices": {
      "type": "object",
      "properties": {
        "restorePolicy": {
          "$ref": "#/definitions/RestorePolicy",
          "description": "Restore Policy"
        }
      },
      "description": "Configuration for creating Blob Service",
      "required": [
        "restorePolicy"
      ]
    },
    "BronzeStorageAccountProperties": {
      "type": "object",
      "properties": {
        "isSftpEnabled": {
          "type": "boolean",
          "description": "Enables Secure File Transfer Protocol, if set to true"
        }
      },
      "description": "Configuration for BronzeAccount",
      "required": [
        "isSftpEnabled"
      ]
    },
    "Bypass": {
      "type": "string",
      "enum": [
        "None",
        "Logging",
        "Metrics",
        "AzureServices"
      ],
      "x-ms-enum": {
        "name": "Bypass",
        "modelAsString": true
      }
    },
    "CommonStorageAccountProperties": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "type": "string",
          "description": "Allow or disallow public network access to Storage Account.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "networkacls": {
          "$ref": "#/definitions/NetworkAcls",
          "description": "Network rule set"
        },
        "blobServices": {
          "$ref": "#/definitions/BlobServices",
          "description": "Blob Services",
          "x-ms-mutability": [
            "create"
          ]
        },
        "privateEndPoint": {
          "$ref": "#/definitions/PrivateEndPoint",
          "description": "Private End Point"
        }
      },
      "description": "Common Storage Account Properties."
    },
    "DataLakeHouseResources": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "The data lake house resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DataLakeHouseResourcesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeHouseResources"
          },
          "description": "The DataLakeHouseResources items on this page",
          "x-typespec-name": "DataLakeHouseResources[]"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
        }
      },
      "description": "The response of a DataLakeHouseResources list operation.",
      "required": [
        "value"
      ]
    },
    "DataLakeHouseResourcesUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags.",
          "x-typespec-name": "Record<string>"
        },
        "properties": {
          "$ref": "#/definitions/DataLakeHouseResourcesUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the DataLakeHouseResources."
    },
    "DataLakeHouseResourcesUpdateProperties": {
      "type": "object",
      "properties": {
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfigurationUpdate",
          "description": "Managed Resource Group configuration."
        }
      },
      "description": "The updatable properties of the DataLakeHouseResources."
    },
    "DefaultAction": {
      "type": "string",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "DefaultAction",
        "modelAsString": true
      }
    },
    "IPRules": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "IP Rules Value"
        },
        "action": {
          "type": "string",
          "description": "The action of virtual network rule."
        }
      },
      "description": "IP rule with specific IP or IP range in CIDR format.",
      "required": [
        "action"
      ]
    },
    "KustoClusterPrincipalAssignments": {
      "type": "object",
      "properties": {
        "systemIdentityName": {
          "type": "string",
          "description": "system Identity Name",
          "x-ms-mutability": [
            "create"
          ]
        },
        "role": {
          "$ref": "#/definitions/KustoRole",
          "description": "Kusto roles"
        },
        "principalType": {
          "$ref": "#/definitions/PrincipalType",
          "description": "Principal type."
        }
      },
      "description": "ADx Role assignments",
      "required": [
        "role",
        "principalType"
      ]
    },
    "KustoRole": {
      "type": "string",
      "description": "The KustoRole options.",
      "enum": [
        "AllDatabasesAdmin",
        "AllDatabasesViewer"
      ],
      "x-ms-enum": {
        "name": "KustoRole",
        "modelAsString": true,
        "values": [
          {
            "name": "AllDatabasesAdmin",
            "value": "AllDatabasesAdmin",
            "description": "The Kusto Cluster Admin role."
          },
          {
            "name": "AllDatabasesViewer",
            "value": "AllDatabasesViewer",
            "description": "The Kusto Database Viewer role."
          }
        ]
      }
    },
    "ManagedResourceGroupConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of managed resource group"
        },
        "location": {
          "type": "string",
          "description": "Managed Resource Group location"
        }
      },
      "description": "ManagedResourceGroup related properties",
      "required": [
        "name",
        "location"
      ]
    },
    "ManagedResourceGroupConfigurationUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of managed resource group"
        },
        "location": {
          "type": "string",
          "description": "Managed Resource Group location"
        }
      },
      "description": "ManagedResourceGroup related properties"
    },
    "NetworkAcls": {
      "type": "object",
      "properties": {
        "bypass": {
          "$ref": "#/definitions/Bypass",
          "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices"
        },
        "virtualNetworkRule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          },
          "description": "Virtual Network Rule",
          "x-typespec-name": "VirtualNetworkRule[]"
        },
        "ipRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPRules"
          },
          "x-ms-identifiers": [],
          "description": "IP rule with specific IP or IP range in CIDR format.",
          "x-typespec-name": "IPRules[]"
        },
        "resourceAccessRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceAccessRules"
          },
          "x-ms-identifiers": [],
          "description": "Resource Access Rules.",
          "x-typespec-name": "ResourceAccessRules[]"
        },
        "defaultAction": {
          "$ref": "#/definitions/DefaultAction",
          "description": "Default Action"
        }
      },
      "description": "Network rule set",
      "required": [
        "bypass",
        "virtualNetworkRule",
        "ipRules",
        "resourceAccessRules",
        "defaultAction"
      ]
    },
    "PrincipalType": {
      "type": "string",
      "description": "The PrincipalType options.",
      "enum": [
        "App",
        "Group",
        "User"
      ],
      "x-ms-enum": {
        "name": "PrincipalType",
        "modelAsString": true,
        "values": [
          {
            "name": "App",
            "value": "App",
            "description": "The principal is an app."
          },
          {
            "name": "Group",
            "value": "Group",
            "description": "The principal is a group."
          },
          {
            "name": "User",
            "value": "User",
            "description": "The principal is a user."
          }
        ]
      }
    },
    "PrivateEndPoint": {
      "type": "object",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "Resource ID of a subnet"
        },
        "privateLinkServiceId": {
          "type": "string",
          "description": "The private link resource service id"
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private link resource group id.",
          "x-typespec-name": "string[]"
        },
        "customDnsConfigs": {
          "type": "string",
          "description": "The private link resource customDnsConfigs."
        }
      },
      "description": "Private End Point Resource",
      "required": [
        "subnetId",
        "privateLinkServiceId",
        "groupIds",
        "customDnsConfigs"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Represents a succeeded operation."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Represents a failed operation."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Represents a canceled operation."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Represents a pending operation."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Represents a pending operation."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Represents an operation under deletion."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Represents an accepted operation."
          }
        ]
      }
    },
    "ResourceAccessRules": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "resourceId": {
          "type": "string",
          "description": "Resource ID"
        }
      },
      "description": "Resource Access Rules.",
      "required": [
        "tenantId",
        "resourceId"
      ]
    },
    "RestorePolicy": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Restore Policy enabled or disabled boolean value"
        },
        "days": {
          "type": "integer",
          "format": "int32",
          "description": "Restore Policy in days"
        }
      },
      "description": "Restore Policy",
      "required": [
        "enabled",
        "days"
      ]
    },
    "StorageProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Storage properties",
          "readOnly": true
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "Managed Resource Group configuration."
        },
        "uniqueIdentifierName": {
          "type": "string",
          "description": "unique Identifier Name",
          "x-ms-mutability": [
            "create"
          ]
        },
        "commonStorageAccountProperties": {
          "$ref": "#/definitions/CommonStorageAccountProperties",
          "description": "Common Storage Account properties.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "bronzeStorageAccountProperties": {
          "$ref": "#/definitions/BronzeStorageAccountProperties",
          "description": "Bronze Storage Account properties.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "azureDataExplorerProperties": {
          "$ref": "#/definitions/AzureDataExplorerProperties",
          "description": "Azure DataExplorer Cluster properties.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Details of the NetworkAnalytics Storage.",
      "required": [
        "uniqueIdentifierName",
        "commonStorageAccountProperties",
        "azureDataExplorerProperties"
      ]
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions for the Microsoft.NetworkAnalytics RP.",
      "enum": [
        "2022-11-15-preview",
        "2023-03-31-preview",
        "2023-04-30-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_11_15_preview",
            "value": "2022-11-15-preview",
            "description": "The 2022-11-15-preview version."
          },
          {
            "name": "v2023_03_31_preview",
            "value": "2023-03-31-preview",
            "description": "The 2023-03-31-preview version."
          },
          {
            "name": "v2023_04_30_preview",
            "value": "2023-04-30-preview",
            "description": "The 2023-04-30-preview version."
          }
        ]
      }
    },
    "VirtualNetworkConfiguration": {
      "type": "object",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "Resource ID of a subnet"
        },
        "enginePublicIpId": {
          "type": "string",
          "description": "Engine Public IP ID"
        },
        "dataManagementPublicIpId": {
          "type": "string",
          "description": "Data Management Public Ip ID"
        }
      },
      "description": "Virtual Network Configuration",
      "required": [
        "subnetId",
        "enginePublicIpId",
        "dataManagementPublicIpId"
      ]
    },
    "VirtualNetworkRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of a subnet"
        },
        "action": {
          "type": "string",
          "description": "The action of virtual network rule."
        },
        "state": {
          "type": "string",
          "description": "Gets the state of virtual network rule."
        }
      },
      "description": "Virtual Network Rule",
      "required": [
        "id"
      ]
    }
  },
  "parameters": {}
}
