{
  "swagger": "2.0",
  "info": {
    "title": "Security Insights",
    "version": "2025-09-01",
    "description": "API spec for Microsoft.SecurityInsights (Azure Security Insights) resource provider",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "AlertRules"
    },
    {
      "name": "ActionResponses"
    },
    {
      "name": "AlertRuleTemplates"
    },
    {
      "name": "AutomationRules"
    },
    {
      "name": "Incidents"
    },
    {
      "name": "Bookmarks"
    },
    {
      "name": "PackageModels"
    },
    {
      "name": "ProductPackageModels"
    },
    {
      "name": "ProductTemplateModels"
    },
    {
      "name": "TemplateModels"
    },
    {
      "name": "DataConnectorDefinitions"
    },
    {
      "name": "DataConnectors"
    },
    {
      "name": "IncidentComments"
    },
    {
      "name": "Relations"
    },
    {
      "name": "IncidentTasks"
    },
    {
      "name": "MetadataModels"
    },
    {
      "name": "SentinelOnboardingStates"
    },
    {
      "name": "SecurityMLAnalyticsSettings"
    },
    {
      "name": "SourceControls"
    },
    {
      "name": "ThreatIntelligenceInformations"
    },
    {
      "name": "Watchlists"
    },
    {
      "name": "WatchlistItems"
    }
  ],
  "paths": {
    "/providers/Microsoft.SecurityInsights/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get all operations.": {
            "$ref": "./examples/operations/ListOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRuleTemplates": {
      "get": {
        "operationId": "AlertRuleTemplates_List",
        "tags": [
          "AlertRuleTemplates"
        ],
        "description": "Gets all alert rule templates.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AlertRuleTemplatesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all alert rule templates.": {
            "$ref": "./examples/alertRuleTemplates/GetAlertRuleTemplates.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRuleTemplates/{alertRuleTemplateId}": {
      "get": {
        "operationId": "AlertRuleTemplates_Get",
        "tags": [
          "AlertRuleTemplates"
        ],
        "description": "Gets the alert rule template.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "alertRuleTemplateId",
            "in": "path",
            "description": "Alert rule template ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AlertRuleTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get alert rule template by Id.": {
            "$ref": "./examples/alertRuleTemplates/GetAlertRuleTemplateById.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules": {
      "get": {
        "operationId": "AlertRules_List",
        "tags": [
          "AlertRules"
        ],
        "description": "Gets all alert rules.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AlertRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all alert rules.": {
            "$ref": "./examples/alertRules/GetAllAlertRules.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}": {
      "get": {
        "operationId": "AlertRules_Get",
        "tags": [
          "AlertRules"
        ],
        "description": "Gets the alert rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "Alert rule ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AlertRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a Fusion alert rule.": {
            "$ref": "./examples/alertRules/GetFusionAlertRule.json"
          },
          "Get a MicrosoftSecurityIncidentCreation rule.": {
            "$ref": "./examples/alertRules/GetMicrosoftSecurityIncidentCreationAlertRule.json"
          },
          "Get a Scheduled alert rule.": {
            "$ref": "./examples/alertRules/GetScheduledAlertRule.json"
          }
        }
      },
      "put": {
        "operationId": "AlertRules_CreateOrUpdate",
        "tags": [
          "AlertRules"
        ],
        "description": "Creates or updates the alert rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "Alert rule ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "alertRule",
            "in": "body",
            "description": "The alert rule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AlertRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AlertRule"
            }
          },
          "201": {
            "description": "Resource 'AlertRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AlertRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates a Fusion alert rule.": {
            "$ref": "./examples/alertRules/CreateFusionAlertRule.json"
          },
          "Creates or updates a MicrosoftSecurityIncidentCreation rule.": {
            "$ref": "./examples/alertRules/CreateMicrosoftSecurityIncidentCreationAlertRule.json"
          },
          "Creates or updates a Scheduled alert rule.": {
            "$ref": "./examples/alertRules/CreateScheduledAlertRule.json"
          }
        }
      },
      "delete": {
        "operationId": "AlertRules_Delete",
        "tags": [
          "AlertRules"
        ],
        "description": "Delete the alert rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "Alert rule ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete an alert rule.": {
            "$ref": "./examples/alertRules/DeleteAlertRule.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}/actions": {
      "get": {
        "operationId": "Actions_ListByAlertRule",
        "tags": [
          "ActionResponses"
        ],
        "description": "Gets all actions of alert rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "Alert rule ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ActionsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all actions of alert rule.": {
            "$ref": "./examples/actions/GetAllActionsByAlertRule.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}/actions/{actionId}": {
      "get": {
        "operationId": "Actions_Get",
        "tags": [
          "ActionResponses"
        ],
        "description": "Gets the action of alert rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "Alert rule ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "Action ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ActionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get an action of alert rule.": {
            "$ref": "./examples/actions/GetActionOfAlertRuleById.json"
          }
        }
      },
      "put": {
        "operationId": "Actions_CreateOrUpdate",
        "tags": [
          "ActionResponses"
        ],
        "description": "Creates or updates the action of alert rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "Alert rule ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "Action ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "body",
            "description": "The action",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActionResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ActionResponse' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ActionResponse"
            }
          },
          "201": {
            "description": "Resource 'ActionResponse' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ActionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates an action of alert rule.": {
            "$ref": "./examples/actions/CreateActionOfAlertRule.json"
          }
        }
      },
      "delete": {
        "operationId": "Actions_Delete",
        "tags": [
          "ActionResponses"
        ],
        "description": "Delete the action of alert rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "Alert rule ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "Action ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete an action of alert rule.": {
            "$ref": "./examples/actions/DeleteActionOfAlertRule.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/automationRules": {
      "get": {
        "operationId": "AutomationRules_List",
        "tags": [
          "AutomationRules"
        ],
        "description": "Gets all automation rules.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutomationRulesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AutomationRules_List": {
            "$ref": "./examples/automationRules/AutomationRules_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/automationRules/{automationRuleId}": {
      "get": {
        "operationId": "AutomationRules_Get",
        "tags": [
          "AutomationRules"
        ],
        "description": "Gets the automation rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "automationRuleId",
            "in": "path",
            "description": "Automation rule ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutomationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AutomationRules_Get": {
            "$ref": "./examples/automationRules/AutomationRules_Get.json"
          }
        }
      },
      "put": {
        "operationId": "AutomationRules_CreateOrUpdate",
        "tags": [
          "AutomationRules"
        ],
        "description": "Creates or updates the automation rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "automationRuleId",
            "in": "path",
            "description": "Automation rule ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "automationRuleToUpsert",
            "in": "body",
            "description": "The automation rule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutomationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AutomationRule' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AutomationRule"
            }
          },
          "201": {
            "description": "Resource 'AutomationRule' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AutomationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AutomationRules_CreateOrUpdate": {
            "$ref": "./examples/automationRules/AutomationRules_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "AutomationRules_Delete",
        "tags": [
          "AutomationRules"
        ],
        "description": "Delete the automation rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "automationRuleId",
            "in": "path",
            "description": "Automation rule ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "AutomationRules_Delete": {
            "$ref": "./examples/automationRules/AutomationRules_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/bookmarks": {
      "get": {
        "operationId": "Bookmarks_List",
        "tags": [
          "Bookmarks"
        ],
        "description": "Gets all bookmarks.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BookmarkListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all bookmarks.": {
            "$ref": "./examples/bookmarks/GetBookmarks.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/bookmarks/{bookmarkId}": {
      "get": {
        "operationId": "Bookmarks_Get",
        "tags": [
          "Bookmarks"
        ],
        "description": "Gets a bookmark.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookmarkId",
            "in": "path",
            "description": "Bookmark ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Bookmark"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a bookmark.": {
            "$ref": "./examples/bookmarks/GetBookmarkById.json"
          }
        }
      },
      "put": {
        "operationId": "Bookmarks_CreateOrUpdate",
        "tags": [
          "Bookmarks"
        ],
        "description": "Creates or updates the bookmark.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookmarkId",
            "in": "path",
            "description": "Bookmark ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookmark",
            "in": "body",
            "description": "The bookmark",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bookmark"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Bookmark' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Bookmark"
            }
          },
          "201": {
            "description": "Resource 'Bookmark' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Bookmark"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates a bookmark.": {
            "$ref": "./examples/bookmarks/CreateBookmark.json"
          }
        }
      },
      "delete": {
        "operationId": "Bookmarks_Delete",
        "tags": [
          "Bookmarks"
        ],
        "description": "Delete the bookmark.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "bookmarkId",
            "in": "path",
            "description": "Bookmark ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete a bookmark.": {
            "$ref": "./examples/bookmarks/DeleteBookmark.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentPackages": {
      "get": {
        "operationId": "ContentPackages_List",
        "tags": [
          "PackageModels"
        ],
        "description": "Gets all installed packages.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Searches for a substring in the response. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Instructs the server to return only object count without actual body. Optional.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results. Optional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Used to skip n elements in the OData query (offset). Returns a nextLink to the next page of results if there are any left.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PackageList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all available packages.": {
            "$ref": "./examples/contentPackages/GetPackages.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentPackages/{packageId}": {
      "get": {
        "operationId": "ContentPackages_Get",
        "tags": [
          "PackageModels"
        ],
        "description": "Gets an installed packages by its id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "packageId",
            "in": "path",
            "description": "package Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PackageModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get installed packages by id.": {
            "$ref": "./examples/contentPackages/GetPackageById.json"
          }
        }
      },
      "put": {
        "operationId": "ContentPackage_Install",
        "tags": [
          "PackageModels"
        ],
        "description": "Install a package to the workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "packageId",
            "in": "path",
            "description": "package Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "packageInstallationProperties",
            "in": "body",
            "description": "Package installation properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PackageModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PackageModel' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PackageModel"
            }
          },
          "201": {
            "description": "Resource 'PackageModel' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PackageModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Install a package to the workspace.": {
            "$ref": "./examples/contentPackages/InstallPackage.json"
          }
        }
      },
      "delete": {
        "operationId": "ContentPackage_Uninstall",
        "tags": [
          "PackageModels"
        ],
        "description": "Uninstall a package from the workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "packageId",
            "in": "path",
            "description": "package Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Uninstall a package from the workspace.": {
            "$ref": "./examples/contentPackages/UninstallPackage.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentProductPackages": {
      "get": {
        "operationId": "ProductPackages_List",
        "tags": [
          "ProductPackageModels"
        ],
        "description": "Gets all packages from the catalog.\nExpandable properties:\n- properties/installed\n- properties/packagedContent",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results. Optional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Searches for a substring in the response. Optional.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProductPackageList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all available packages.": {
            "$ref": "./examples/contentPackages/GetProductPackages.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentProductPackages/{packageId}": {
      "get": {
        "operationId": "ProductPackage_Get",
        "tags": [
          "ProductPackageModels"
        ],
        "description": "Gets a package by its identifier from the catalog.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "packageId",
            "in": "path",
            "description": "package Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProductPackageModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a package.": {
            "$ref": "./examples/contentPackages/GetProductPackageById.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentTemplates": {
      "get": {
        "operationId": "ContentTemplates_List",
        "tags": [
          "TemplateModels"
        ],
        "description": "Gets all installed templates.\nExpandable properties:\n- properties/mainTemplate\n- properties/dependantTemplates",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands the object with optional fiends that are not included by default. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Searches for a substring in the response. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Instructs the server to return only object count without actual body. Optional.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results. Optional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Used to skip n elements in the OData query (offset). Returns a nextLink to the next page of results if there are any left.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TemplateList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all installed templates.": {
            "$ref": "./examples/contentTemplates/GetTemplates.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentTemplates/{templateId}": {
      "get": {
        "operationId": "ContentTemplate_Get",
        "tags": [
          "TemplateModels"
        ],
        "description": "Gets a template byt its identifier.\nExpandable properties:\n- properties/mainTemplate\n- properties/dependantTemplates",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "template Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TemplateModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a template.": {
            "$ref": "./examples/contentTemplates/GetTemplateById.json"
          }
        }
      },
      "put": {
        "operationId": "ContentTemplate_Install",
        "tags": [
          "TemplateModels"
        ],
        "description": "Install a template.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "template Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateInstallationProperties",
            "in": "body",
            "description": "Template installation properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemplateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TemplateModel' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TemplateModel"
            }
          },
          "201": {
            "description": "Resource 'TemplateModel' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TemplateModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a template.": {
            "$ref": "./examples/contentTemplates/InstallTemplate.json"
          }
        }
      },
      "delete": {
        "operationId": "ContentTemplate_Delete",
        "tags": [
          "TemplateModels"
        ],
        "description": "Delete an installed template.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "template Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete metadata.": {
            "$ref": "./examples/contentTemplates/DeleteTemplate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentproducttemplates": {
      "get": {
        "operationId": "ProductTemplates_List",
        "tags": [
          "ProductTemplateModels"
        ],
        "description": "Gets all templates in the catalog.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$search",
            "in": "query",
            "description": "Searches for a substring in the response. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Instructs the server to return only object count without actual body. Optional.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results. Optional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Used to skip n elements in the OData query (offset). Returns a nextLink to the next page of results if there are any left.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProductTemplateList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all installed templates.": {
            "$ref": "./examples/contentTemplates/GetProductTemplates.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentproducttemplates/{templateId}": {
      "get": {
        "operationId": "ProductTemplate_Get",
        "tags": [
          "ProductTemplateModels"
        ],
        "description": "Gets a template by its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "template Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProductTemplateModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a template.": {
            "$ref": "./examples/contentTemplates/GetProductTemplateById.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectorDefinitions": {
      "get": {
        "operationId": "DataConnectorDefinitions_List",
        "tags": [
          "DataConnectorDefinitions"
        ],
        "description": "Gets all data connector definitions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataConnectorDefinitionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all data connector definitions.": {
            "$ref": "./examples/dataConnectorDefinitions/GetDataConnectorDefinitions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectorDefinitions/{dataConnectorDefinitionName}": {
      "get": {
        "operationId": "DataConnectorDefinitions_Get",
        "tags": [
          "DataConnectorDefinitions"
        ],
        "description": "Gets a data connector definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataConnectorDefinitionName",
            "in": "path",
            "description": "The data connector definition name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9A-Z-_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataConnectorDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get customize data connector definition": {
            "$ref": "./examples/dataConnectorDefinitions/GetCustomizableDataConnectorDefinitionById.json"
          }
        }
      },
      "put": {
        "operationId": "DataConnectorDefinitions_CreateOrUpdate",
        "tags": [
          "DataConnectorDefinitions"
        ],
        "description": "Creates or updates the data connector definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataConnectorDefinitionName",
            "in": "path",
            "description": "The data connector definition name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9A-Z-_]*$"
          },
          {
            "name": "connectorDefinitionInput",
            "in": "body",
            "description": "The data connector definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataConnectorDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataConnectorDefinition' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataConnectorDefinition"
            }
          },
          "201": {
            "description": "Resource 'DataConnectorDefinition' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataConnectorDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create data connector definition": {
            "$ref": "./examples/dataConnectorDefinitions/CreateCustomizableDataConnectorDefinition.json"
          }
        }
      },
      "delete": {
        "operationId": "DataConnectorDefinitions_Delete",
        "tags": [
          "DataConnectorDefinitions"
        ],
        "description": "Delete the data connector definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataConnectorDefinitionName",
            "in": "path",
            "description": "The data connector definition name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9A-Z-_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete data connector definition": {
            "$ref": "./examples/dataConnectorDefinitions/DeleteDataConnectorDefinitionById.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectors": {
      "get": {
        "operationId": "DataConnectors_List",
        "tags": [
          "DataConnectors"
        ],
        "description": "Gets all data connectors.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataConnectorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all data connectors.": {
            "$ref": "./examples/dataConnectors/GetDataConnectors.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectors/{dataConnectorId}": {
      "get": {
        "operationId": "DataConnectors_Get",
        "tags": [
          "DataConnectors"
        ],
        "description": "Gets a data connector.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataConnectorId",
            "in": "path",
            "description": "Connector ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataConnector"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a ASC data connector.": {
            "$ref": "./examples/dataConnectors/GetAzureSecurityCenterById.json"
          },
          "Get a MCAS data connector.": {
            "$ref": "./examples/dataConnectors/GetMicrosoftCloudAppSecurityById.json"
          },
          "Get a MDATP data connector": {
            "$ref": "./examples/dataConnectors/GetMicrosoftDefenderAdvancedThreatProtectionById.json"
          },
          "Get a MicrosoftThreatIntelligence data connector": {
            "$ref": "./examples/dataConnectors/GetMicrosoftThreatIntelligenceById.json"
          },
          "Get a PremiumMicrosoftDefenderForThreatIntelligence data connector": {
            "$ref": "./examples/dataConnectors/GetPremiumMicrosoftDefenderForThreatIntelligenceById.json"
          },
          "Get a RestApiPoller data connector": {
            "$ref": "./examples/dataConnectors/GetRestApiPollerById.json"
          },
          "Get a TI data connector.": {
            "$ref": "./examples/dataConnectors/GetThreatIntelligenceById.json"
          },
          "Get an AAD data connector.": {
            "$ref": "./examples/dataConnectors/GetAzureActiveDirectoryById.json"
          },
          "Get an AATP data connector.": {
            "$ref": "./examples/dataConnectors/GetAzureAdvancedThreatProtectionById.json"
          },
          "Get an AwsCloudTrail data connector.": {
            "$ref": "./examples/dataConnectors/GetAmazonWebServicesCloudTrailById.json"
          },
          "Get an Office365 data connector.": {
            "$ref": "./examples/dataConnectors/GetOfficeDataConnetorById.json"
          }
        }
      },
      "put": {
        "operationId": "DataConnectors_CreateOrUpdate",
        "tags": [
          "DataConnectors"
        ],
        "description": "Creates or updates the data connector.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataConnectorId",
            "in": "path",
            "description": "Connector ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataConnector",
            "in": "body",
            "description": "The data connector",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataConnector"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataConnector' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataConnector"
            }
          },
          "201": {
            "description": "Resource 'DataConnector' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataConnector"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates a MicrosoftThreatIntelligence data connector.": {
            "$ref": "./examples/dataConnectors/CreateMicrosoftThreatIntelligenceDataConnector.json"
          },
          "Creates or updates a PremiumMicrosoftDefenderForThreatIntelligence data connector.": {
            "$ref": "./examples/dataConnectors/CreatePremiumMicrosoftDefenderForThreatIntelligenceDataConnector.json"
          },
          "Creates or updates an Office365 data connector.": {
            "$ref": "./examples/dataConnectors/CreateOfficeDataConnetor.json"
          },
          "Creates or updates an Threat Intelligence Platform data connector.": {
            "$ref": "./examples/dataConnectors/CreateThreatIntelligenceDataConnector.json"
          }
        }
      },
      "delete": {
        "operationId": "DataConnectors_Delete",
        "tags": [
          "DataConnectors"
        ],
        "description": "Delete the data connector.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataConnectorId",
            "in": "path",
            "description": "Connector ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete an MicrosoftThreatIntelligence data connector": {
            "$ref": "./examples/dataConnectors/DeleteMicrosoftThreatIntelligenceDataConnector.json"
          },
          "Delete an Office365 data connector.": {
            "$ref": "./examples/dataConnectors/DeleteOfficeDataConnetor.json"
          },
          "Deletes a PremiumMicrosoftDefenderForThreatIntelligence data connector.": {
            "$ref": "./examples/dataConnectors/DeletePremiumMicrosoftDefenderForThreatIntelligenceDataConnector.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/entities/{entityIdentifier}/runPlaybook": {
      "post": {
        "operationId": "Entities_RunPlaybook",
        "description": "Triggers playbook on a specific entity.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityIdentifier",
            "in": "path",
            "description": "The name of the EntityResource",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityManualTriggerRequestBody"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Azure operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Entities_RunPlaybook": {
            "$ref": "./examples/manualTrigger/Entities_RunPlaybook.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents": {
      "get": {
        "operationId": "Incidents_List",
        "tags": [
          "Incidents"
        ],
        "description": "Gets all incidents.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results. Optional.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 1000
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IncidentList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all incidents.": {
            "$ref": "./examples/incidents/GetIncidents.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}": {
      "get": {
        "operationId": "Incidents_Get",
        "tags": [
          "Incidents"
        ],
        "description": "Gets a given incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get an incident.": {
            "$ref": "./examples/incidents/GetIncidentById.json"
          }
        }
      },
      "put": {
        "operationId": "Incidents_CreateOrUpdate",
        "tags": [
          "Incidents"
        ],
        "description": "Creates or updates an incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "incident",
            "in": "body",
            "description": "The incident",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Incident' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          },
          "201": {
            "description": "Resource 'Incident' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates an incident.": {
            "$ref": "./examples/incidents/CreateIncident.json"
          }
        }
      },
      "delete": {
        "operationId": "Incidents_Delete",
        "tags": [
          "Incidents"
        ],
        "description": "Deletes a given incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete an incident.": {
            "$ref": "./examples/incidents/DeleteIncident.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/alerts": {
      "post": {
        "operationId": "Incidents_ListAlerts",
        "tags": [
          "Incidents"
        ],
        "description": "Gets all alerts for an incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IncidentAlertList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all incident alerts.": {
            "$ref": "./examples/incidents/GetAllIncidentAlerts.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/bookmarks": {
      "post": {
        "operationId": "Incidents_ListBookmarks",
        "tags": [
          "Incidents"
        ],
        "description": "Gets all bookmarks for an incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IncidentBookmarkList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all incident bookmarks.": {
            "$ref": "./examples/incidents/GetAllIncidentBookmarks.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/comments": {
      "get": {
        "operationId": "IncidentComments_List",
        "tags": [
          "IncidentComments"
        ],
        "description": "Gets all comments for a given incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results. Optional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IncidentCommentList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all incident comments.": {
            "$ref": "./examples/incidents/comments/GetAllIncidentComments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/comments/{incidentCommentId}": {
      "get": {
        "operationId": "IncidentComments_Get",
        "tags": [
          "IncidentComments"
        ],
        "description": "Gets a comment for a given incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentCommentId",
            "in": "path",
            "description": "Incident comment ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IncidentComment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get an incident comment.": {
            "$ref": "./examples/incidents/comments/GetIncidentCommentById.json"
          }
        }
      },
      "put": {
        "operationId": "IncidentComments_CreateOrUpdate",
        "tags": [
          "IncidentComments"
        ],
        "description": "Creates or updates a comment for a given incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentCommentId",
            "in": "path",
            "description": "Incident comment ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentComment",
            "in": "body",
            "description": "The incident comment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IncidentComment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IncidentComment' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IncidentComment"
            }
          },
          "201": {
            "description": "Resource 'IncidentComment' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IncidentComment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates an incident comment.": {
            "$ref": "./examples/incidents/comments/CreateIncidentComment.json"
          }
        }
      },
      "delete": {
        "operationId": "IncidentComments_Delete",
        "tags": [
          "IncidentComments"
        ],
        "description": "Deletes a comment for a given incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentCommentId",
            "in": "path",
            "description": "Incident comment ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete the incident comment.": {
            "$ref": "./examples/incidents/comments/DeleteIncidentComment.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/entities": {
      "post": {
        "operationId": "Incidents_ListEntities",
        "tags": [
          "Incidents"
        ],
        "description": "Gets all entities for an incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IncidentEntitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets all incident related entities": {
            "$ref": "./examples/incidents/GetAllIncidentEntities.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/relations": {
      "get": {
        "operationId": "IncidentRelations_List",
        "tags": [
          "Relations"
        ],
        "description": "Gets all relations for a given incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results. Optional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RelationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all incident relations.": {
            "$ref": "./examples/incidents/relations/GetAllIncidentRelations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/relations/{relationName}": {
      "get": {
        "operationId": "IncidentRelations_Get",
        "tags": [
          "Relations"
        ],
        "description": "Gets a relation for a given incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationName",
            "in": "path",
            "description": "Relation Name",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Relation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get an incident relation.": {
            "$ref": "./examples/incidents/relations/GetIncidentRelationByName.json"
          }
        }
      },
      "put": {
        "operationId": "IncidentRelations_CreateOrUpdate",
        "tags": [
          "Relations"
        ],
        "description": "Creates or updates a relation for a given incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationName",
            "in": "path",
            "description": "Relation Name",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          },
          {
            "name": "relation",
            "in": "body",
            "description": "The relation model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Relation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Relation' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Relation"
            }
          },
          "201": {
            "description": "Resource 'Relation' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Relation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates an incident relation.": {
            "$ref": "./examples/incidents/relations/CreateIncidentRelation.json"
          }
        }
      },
      "delete": {
        "operationId": "IncidentRelations_Delete",
        "tags": [
          "Relations"
        ],
        "description": "Deletes a relation for a given incident.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "relationName",
            "in": "path",
            "description": "Relation Name",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9-]{3,63}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete the incident relation.": {
            "$ref": "./examples/incidents/relations/DeleteIncidentRelation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentIdentifier}/runPlaybook": {
      "post": {
        "operationId": "Incidents_RunPlaybook",
        "tags": [
          "Incidents"
        ],
        "description": "Triggers playbook on a specific incident",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentIdentifier",
            "in": "path",
            "description": "The incident identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "Describes the request body for triggering a playbook on an incident.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ManualTriggerRequestBody"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Incidents_RunPlaybook": {
            "$ref": "./examples/manualTrigger/Incidents_RunPlaybook.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/tasks": {
      "get": {
        "operationId": "IncidentTasks_List",
        "tags": [
          "IncidentTasks"
        ],
        "description": "Gets all incident tasks.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IncidentTaskList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "IncidentTasks_List": {
            "$ref": "./examples/incidents/tasks/IncidentTasks_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/tasks/{incidentTaskId}": {
      "get": {
        "operationId": "IncidentTasks_Get",
        "tags": [
          "IncidentTasks"
        ],
        "description": "Gets an incident task.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentTaskId",
            "in": "path",
            "description": "Incident task ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IncidentTask"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "IncidentTasks_Get": {
            "$ref": "./examples/incidents/tasks/IncidentTasks_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IncidentTasks_CreateOrUpdate",
        "tags": [
          "IncidentTasks"
        ],
        "description": "Creates or updates the incident task.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentTaskId",
            "in": "path",
            "description": "Incident task ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentTask",
            "in": "body",
            "description": "The incident task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IncidentTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IncidentTask' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IncidentTask"
            }
          },
          "201": {
            "description": "Resource 'IncidentTask' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IncidentTask"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "IncidentTasks_CreateOrUpdate": {
            "$ref": "./examples/incidents/tasks/IncidentTasks_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "IncidentTasks_Delete",
        "tags": [
          "IncidentTasks"
        ],
        "description": "Delete the incident task.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentId",
            "in": "path",
            "description": "Incident ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "incidentTaskId",
            "in": "path",
            "description": "Incident task ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "IncidentTasks_Delete": {
            "$ref": "./examples/incidents/tasks/IncidentTasks_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/listRepositories": {
      "post": {
        "operationId": "SourceControl_listRepositories",
        "description": "Gets a list of repositories metadata.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the workspace.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[A-Za-z0-9][A-Za-z0-9-]+[A-Za-z0-9]$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "$ref": "#/definitions/RepositoryAccessProperties",
                  "description": "The content of the action request"
                }
              },
              "required": [
                "body"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RepoList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get repository list.": {
            "$ref": "./examples/repositories/GetRepositories.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/metadata": {
      "get": {
        "operationId": "Metadata_List",
        "tags": [
          "MetadataModels"
        ],
        "description": "List of all metadata",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results. Optional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Used to skip n elements in the OData query (offset). Returns a nextLink to the next page of results if there are any left.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetadataList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all metadata with OData filter/orderby/skip/top": {
            "$ref": "./examples/metadata/GetAllMetadataOData.json"
          },
          "Get all metadata.": {
            "$ref": "./examples/metadata/GetAllMetadata.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/metadata/{metadataName}": {
      "get": {
        "operationId": "Metadata_Get",
        "tags": [
          "MetadataModels"
        ],
        "description": "Get a Metadata.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "metadataName",
            "in": "path",
            "description": "The Metadata name.",
            "required": true,
            "type": "string",
            "pattern": "^\\S+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get single metadata by name": {
            "$ref": "./examples/metadata/GetMetadata.json"
          }
        }
      },
      "put": {
        "operationId": "Metadata_Create",
        "tags": [
          "MetadataModels"
        ],
        "description": "Create a Metadata.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "metadataName",
            "in": "path",
            "description": "The Metadata name.",
            "required": true,
            "type": "string",
            "pattern": "^\\S+$"
          },
          {
            "name": "metadata",
            "in": "body",
            "description": "Metadata resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MetadataModel' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          },
          "201": {
            "description": "Resource 'MetadataModel' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create/update full metadata.": {
            "$ref": "./examples/metadata/PutMetadata.json"
          },
          "Create/update minimal metadata.": {
            "$ref": "./examples/metadata/PutMetadataMinimal.json"
          }
        }
      },
      "patch": {
        "operationId": "Metadata_Update",
        "tags": [
          "MetadataModels"
        ],
        "description": "Update an existing Metadata.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "metadataName",
            "in": "path",
            "description": "The Metadata name.",
            "required": true,
            "type": "string",
            "pattern": "^\\S+$"
          },
          {
            "name": "metadataPatch",
            "in": "body",
            "description": "Partial metadata request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MetadataPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetadataModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update metadata.": {
            "$ref": "./examples/metadata/PatchMetadata.json"
          }
        }
      },
      "delete": {
        "operationId": "Metadata_Delete",
        "tags": [
          "MetadataModels"
        ],
        "description": "Delete a Metadata.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "metadataName",
            "in": "path",
            "description": "The Metadata name.",
            "required": true,
            "type": "string",
            "pattern": "^\\S+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete metadata.": {
            "$ref": "./examples/metadata/DeleteMetadata.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/onboardingStates": {
      "get": {
        "operationId": "SentinelOnboardingStates_List",
        "tags": [
          "SentinelOnboardingStates"
        ],
        "description": "Gets all Sentinel onboarding states",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SentinelOnboardingStatesList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all Sentinel onboarding states": {
            "$ref": "./examples/onboardingStates/GetAllSentinelOnboardingStates.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/onboardingStates/{sentinelOnboardingStateName}": {
      "get": {
        "operationId": "SentinelOnboardingStates_Get",
        "tags": [
          "SentinelOnboardingStates"
        ],
        "description": "Get Sentinel onboarding state",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sentinelOnboardingStateName",
            "in": "path",
            "description": "The Sentinel onboarding state name. Supports - default",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SentinelOnboardingState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Sentinel onboarding state": {
            "$ref": "./examples/onboardingStates/GetSentinelOnboardingState.json"
          }
        }
      },
      "put": {
        "operationId": "SentinelOnboardingStates_Create",
        "tags": [
          "SentinelOnboardingStates"
        ],
        "description": "Create Sentinel onboarding state",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sentinelOnboardingStateName",
            "in": "path",
            "description": "The Sentinel onboarding state name. Supports - default",
            "required": true,
            "type": "string"
          },
          {
            "name": "sentinelOnboardingStateParameter",
            "in": "body",
            "description": "The Sentinel onboarding state parameter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SentinelOnboardingState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SentinelOnboardingState' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SentinelOnboardingState"
            }
          },
          "201": {
            "description": "Resource 'SentinelOnboardingState' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SentinelOnboardingState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Sentinel onboarding state": {
            "$ref": "./examples/onboardingStates/CreateSentinelOnboardingState.json"
          }
        }
      },
      "delete": {
        "operationId": "SentinelOnboardingStates_Delete",
        "tags": [
          "SentinelOnboardingStates"
        ],
        "description": "Delete Sentinel onboarding state",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sentinelOnboardingStateName",
            "in": "path",
            "description": "The Sentinel onboarding state name. Supports - default",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Sentinel onboarding state": {
            "$ref": "./examples/onboardingStates/DeleteSentinelOnboardingState.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/securityMLAnalyticsSettings": {
      "get": {
        "operationId": "SecurityMLAnalyticsSettings_List",
        "tags": [
          "SecurityMLAnalyticsSettings"
        ],
        "description": "Gets all Security ML Analytics Settings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SecurityMLAnalyticsSettingsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all Security ML Analytics Settings.": {
            "$ref": "./examples/securityMLAnalyticsSettings/GetAllSecurityMLAnalyticsSettings.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/securityMLAnalyticsSettings/{settingsResourceName}": {
      "get": {
        "operationId": "SecurityMLAnalyticsSettings_Get",
        "tags": [
          "SecurityMLAnalyticsSettings"
        ],
        "description": "Gets the Security ML Analytics Settings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "settingsResourceName",
            "in": "path",
            "description": "Security ML Analytics Settings resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SecurityMLAnalyticsSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a Anomaly Security ML Analytics Settings.": {
            "$ref": "./examples/securityMLAnalyticsSettings/GetAnomalySecurityMLAnalyticsSetting.json"
          }
        }
      },
      "put": {
        "operationId": "SecurityMLAnalyticsSettings_CreateOrUpdate",
        "tags": [
          "SecurityMLAnalyticsSettings"
        ],
        "description": "Creates or updates the Security ML Analytics Settings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "settingsResourceName",
            "in": "path",
            "description": "Security ML Analytics Settings resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "securityMLAnalyticsSetting",
            "in": "body",
            "description": "The security ML Analytics setting",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityMLAnalyticsSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SecurityMLAnalyticsSetting' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SecurityMLAnalyticsSetting"
            }
          },
          "201": {
            "description": "Resource 'SecurityMLAnalyticsSetting' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SecurityMLAnalyticsSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates a Anomaly Security ML Analytics Settings.": {
            "$ref": "./examples/securityMLAnalyticsSettings/CreateAnomalySecurityMLAnalyticsSetting.json"
          }
        }
      },
      "delete": {
        "operationId": "SecurityMLAnalyticsSettings_Delete",
        "tags": [
          "SecurityMLAnalyticsSettings"
        ],
        "description": "Delete the Security ML Analytics Settings.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "settingsResourceName",
            "in": "path",
            "description": "Security ML Analytics Settings resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete a Security ML Analytics Settings.": {
            "$ref": "./examples/securityMLAnalyticsSettings/DeleteSecurityMLAnalyticsSetting.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/sourcecontrols": {
      "get": {
        "operationId": "SourceControls_List",
        "tags": [
          "SourceControls"
        ],
        "description": "Gets all source controls, without source control items.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SourceControlList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all source controls.": {
            "$ref": "./examples/sourcecontrols/GetSourceControls.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/sourcecontrols/{sourceControlId}": {
      "get": {
        "operationId": "SourceControls_Get",
        "tags": [
          "SourceControls"
        ],
        "description": "Gets a source control byt its identifier.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlId",
            "in": "path",
            "description": "Source control Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a source control.": {
            "$ref": "./examples/sourcecontrols/GetSourceControlById.json"
          }
        }
      },
      "put": {
        "operationId": "SourceControls_Create",
        "tags": [
          "SourceControls"
        ],
        "description": "Creates a source control.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlId",
            "in": "path",
            "description": "Source control Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControl",
            "in": "body",
            "description": "The SourceControl",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SourceControl' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "201": {
            "description": "Resource 'SourceControl' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Creates or updates a source control.": {
            "$ref": "./examples/sourcecontrols/CreateSourceControl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/sourcecontrols/{sourceControlId}/delete": {
      "post": {
        "operationId": "SourceControls_Delete",
        "tags": [
          "SourceControls"
        ],
        "description": "Delete a source control.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlId",
            "in": "path",
            "description": "Source control Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "repositoryAccess",
            "in": "body",
            "description": "The repository access credentials.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RepositoryAccessProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Warning"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete a source control.": {
            "$ref": "./examples/sourcecontrols/DeleteSourceControl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/createIndicator": {
      "post": {
        "operationId": "ThreatIntelligenceIndicator_CreateIndicator",
        "description": "Create a new threat intelligence indicator.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceIndicatorModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a new Threat Intelligence": {
            "$ref": "./examples/threatintelligence/CreateThreatIntelligence.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators": {
      "get": {
        "operationId": "ThreatIntelligenceIndicators_List",
        "tags": [
          "ThreatIntelligenceInformations"
        ],
        "description": "Get all threat intelligence indicators.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results. Optional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results. Optional.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all threat intelligence indicators": {
            "$ref": "./examples/threatintelligence/GetThreatIntelligence.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/{name}": {
      "get": {
        "operationId": "ThreatIntelligenceIndicator_Get",
        "tags": [
          "ThreatIntelligenceInformations"
        ],
        "description": "View a threat intelligence indicator by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Threat intelligence indicator name field.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "View a threat intelligence indicator by name": {
            "$ref": "./examples/threatintelligence/GetThreatIntelligenceById.json"
          }
        }
      },
      "put": {
        "operationId": "ThreatIntelligenceIndicator_Create",
        "tags": [
          "ThreatIntelligenceInformations"
        ],
        "description": "Update a threat Intelligence indicator.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Threat intelligence indicator name field.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ThreatIntelligenceProperties",
            "in": "body",
            "description": "Properties of threat intelligence indicators to create and update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThreatIntelligenceInformation' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformation"
            }
          },
          "201": {
            "description": "Resource 'ThreatIntelligenceInformation' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update a threat Intelligence indicator": {
            "$ref": "./examples/threatintelligence/UpdateThreatIntelligence.json"
          }
        }
      },
      "delete": {
        "operationId": "ThreatIntelligenceIndicator_Delete",
        "tags": [
          "ThreatIntelligenceInformations"
        ],
        "description": "Delete a threat intelligence indicator.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Threat intelligence indicator name field.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete a threat intelligence indicator": {
            "$ref": "./examples/threatintelligence/DeleteThreatIntelligence.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/{name}/appendTags": {
      "post": {
        "operationId": "ThreatIntelligenceIndicator_AppendTags",
        "tags": [
          "ThreatIntelligenceInformations"
        ],
        "description": "Append tags to a threat intelligence indicator.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Threat intelligence indicator name field.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ThreatIntelligenceAppendTags",
            "in": "body",
            "description": "The threat intelligence append tags request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceAppendTags"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Append tags to a threat intelligence indicator": {
            "$ref": "./examples/threatintelligence/AppendTagsThreatIntelligence.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/{name}/replaceTags": {
      "post": {
        "operationId": "ThreatIntelligenceIndicator_ReplaceTags",
        "tags": [
          "ThreatIntelligenceInformations"
        ],
        "description": "Replace tags added to a threat intelligence indicator.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Threat intelligence indicator name field.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ThreatIntelligenceReplaceTags",
            "in": "body",
            "description": "Tags in the threat intelligence indicator to be replaced.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceIndicatorModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Replace tags to a Threat Intelligence": {
            "$ref": "./examples/threatintelligence/ReplaceTagsThreatIntelligence.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/metrics": {
      "get": {
        "operationId": "ThreatIntelligenceIndicatorMetrics_List",
        "description": "Get threat intelligence indicators metrics (Indicators counts by Type, Threat Type, Source).",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceMetricsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get threat intelligence indicators metrics.": {
            "$ref": "./examples/threatintelligence/CollectThreatIntelligenceMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/threatIntelligence/main/queryIndicators": {
      "post": {
        "operationId": "ThreatIntelligenceIndicator_QueryIndicators",
        "description": "Query threat intelligence indicators as per filtering criteria.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceFilteringCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThreatIntelligenceInformationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Query threat intelligence indicators as per filtering criteria": {
            "$ref": "./examples/threatintelligence/QueryThreatIntelligence.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists": {
      "get": {
        "operationId": "Watchlists_List",
        "tags": [
          "Watchlists"
        ],
        "description": "Get all watchlists, without watchlist items.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WatchlistList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all watchlists.": {
            "$ref": "./examples/watchlists/GetWatchlists.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists/{watchlistAlias}": {
      "get": {
        "operationId": "Watchlists_Get",
        "tags": [
          "Watchlists"
        ],
        "description": "Get a watchlist, without its watchlist items.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "watchlistAlias",
            "in": "path",
            "description": "The watchlist alias",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Watchlist"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a watchlist.": {
            "$ref": "./examples/watchlists/GetWatchlistByAlias.json"
          }
        }
      },
      "put": {
        "operationId": "Watchlists_CreateOrUpdate",
        "tags": [
          "Watchlists"
        ],
        "description": "Create or update a Watchlist and its Watchlist Items (bulk creation, e.g. through text/csv content type). To create a Watchlist and its Items, we should call this endpoint with rawContent and contentType properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "watchlistAlias",
            "in": "path",
            "description": "The watchlist alias",
            "required": true,
            "type": "string"
          },
          {
            "name": "watchlist",
            "in": "body",
            "description": "The watchlist",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Watchlist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Watchlist' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Watchlist"
            }
          },
          "201": {
            "description": "Resource 'Watchlist' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Watchlist"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a watchlist and bulk creates watchlist items.": {
            "$ref": "./examples/watchlists/CreateWatchlistAndWatchlistItems.json"
          },
          "Create or update a watchlist.": {
            "$ref": "./examples/watchlists/CreateWatchlist.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Watchlist"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Watchlists_Delete",
        "tags": [
          "Watchlists"
        ],
        "description": "Delete a watchlist.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "watchlistAlias",
            "in": "path",
            "description": "The watchlist alias",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete a watchlist.": {
            "$ref": "./examples/watchlists/DeleteWatchlist.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists/{watchlistAlias}/watchlistItems": {
      "get": {
        "operationId": "WatchlistItems_List",
        "tags": [
          "WatchlistItems"
        ],
        "description": "Get all watchlist Items.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "watchlistAlias",
            "in": "path",
            "description": "The watchlist alias",
            "required": true,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WatchlistItemList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get all watchlist Items.": {
            "$ref": "./examples/watchlists/GetWatchlistItems.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists/{watchlistAlias}/watchlistItems/{watchlistItemId}": {
      "get": {
        "operationId": "WatchlistItems_Get",
        "tags": [
          "WatchlistItems"
        ],
        "description": "Get a watchlist item.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "watchlistAlias",
            "in": "path",
            "description": "The watchlist alias",
            "required": true,
            "type": "string"
          },
          {
            "name": "watchlistItemId",
            "in": "path",
            "description": "The watchlist item id (GUID)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WatchlistItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a watchlist item.": {
            "$ref": "./examples/watchlists/GetWatchlistItemById.json"
          }
        }
      },
      "put": {
        "operationId": "WatchlistItems_CreateOrUpdate",
        "tags": [
          "WatchlistItems"
        ],
        "description": "Create or update a watchlist item.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "watchlistAlias",
            "in": "path",
            "description": "The watchlist alias",
            "required": true,
            "type": "string"
          },
          {
            "name": "watchlistItemId",
            "in": "path",
            "description": "The watchlist item id (GUID)",
            "required": true,
            "type": "string"
          },
          {
            "name": "watchlistItem",
            "in": "body",
            "description": "The watchlist item",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WatchlistItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WatchlistItem' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/WatchlistItem"
            }
          },
          "201": {
            "description": "Resource 'WatchlistItem' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/WatchlistItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a watchlist item.": {
            "$ref": "./examples/watchlists/CreateWatchlistItem.json"
          }
        }
      },
      "delete": {
        "operationId": "WatchlistItems_Delete",
        "tags": [
          "WatchlistItems"
        ],
        "description": "Delete a watchlist item.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the monitor workspace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "watchlistAlias",
            "in": "path",
            "description": "The watchlist alias",
            "required": true,
            "type": "string"
          },
          {
            "name": "watchlistItemId",
            "in": "path",
            "description": "The watchlist item id (GUID)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete a watchlist item.": {
            "$ref": "./examples/watchlists/DeleteWatchlistItem.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AADDataConnector": {
      "type": "object",
      "description": "Represents AAD (Azure Active Directory) data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AADDataConnectorProperties",
          "description": "AAD (Azure Active Directory) data connector properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The data connector kind",
          "enum": [
            "AzureActiveDirectory"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ]
    },
    "AADDataConnectorProperties": {
      "type": "object",
      "description": "AAD (Azure Active Directory) data connector properties.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant id to connect to, and get the data from."
        },
        "dataTypes": {
          "$ref": "#/definitions/AlertsDataTypeOfDataConnector",
          "description": "The available data types for the connector."
        }
      }
    },
    "ASCDataConnector": {
      "type": "object",
      "description": "Represents ASC (Azure Security Center) data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ASCDataConnectorProperties",
          "description": "ASC (Azure Security Center) data connector properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The data connector kind",
          "enum": [
            "AzureSecurityCenter"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ]
    },
    "ASCDataConnectorProperties": {
      "type": "object",
      "description": "ASC (Azure Security Center) data connector properties.",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "The subscription id to connect to, and get the data from."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorWithAlertsProperties"
        }
      ]
    },
    "AWSAuthModel": {
      "type": "object",
      "description": "Model for API authentication with AWS.",
      "properties": {
        "roleArn": {
          "type": "string",
          "description": "AWS STS assume role ARN"
        },
        "externalId": {
          "type": "string",
          "description": "AWS STS assume role external ID. This is used to prevent the confused deputy problem: 'https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html'"
        }
      },
      "required": [
        "roleArn"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "x-ms-discriminator-value": "AWS"
    },
    "AatpDataConnector": {
      "type": "object",
      "description": "Represents AATP (Azure Advanced Threat Protection) data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AatpDataConnectorProperties",
          "description": "AATP (Azure Advanced Threat Protection) data connector properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The data connector kind",
          "enum": [
            "AzureAdvancedThreatProtection"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ]
    },
    "AatpDataConnectorProperties": {
      "type": "object",
      "description": "AATP (Azure Advanced Threat Protection) data connector properties.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant id to connect to, and get the data from."
        },
        "dataTypes": {
          "$ref": "#/definitions/AlertsDataTypeOfDataConnector",
          "description": "The available data types for the connector."
        }
      }
    },
    "AccountEntity": {
      "type": "object",
      "description": "Represents an account entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccountEntityProperties",
          "description": "Account entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "Account"
    },
    "AccountEntityProperties": {
      "type": "object",
      "description": "Account entity property bag.",
      "properties": {
        "aadTenantId": {
          "type": "string",
          "description": "The Azure Active Directory tenant id.",
          "readOnly": true
        },
        "aadUserId": {
          "type": "string",
          "description": "The Azure Active Directory user id.",
          "readOnly": true
        },
        "accountName": {
          "type": "string",
          "description": "The name of the account. This field should hold only the name without any domain added to it, i.e. administrator.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the account.",
          "readOnly": true
        },
        "hostEntityId": {
          "type": "string",
          "description": "The Host entity id that contains the account in case it is a local account (not domain joined)",
          "readOnly": true
        },
        "isDomainJoined": {
          "type": "boolean",
          "description": "Determines whether this is a domain account.",
          "readOnly": true
        },
        "ntDomain": {
          "type": "string",
          "description": "The NetBIOS domain name as it appears in the alert format - domain\\username. Examples: NT AUTHORITY.",
          "readOnly": true
        },
        "objectGuid": {
          "type": "string",
          "format": "uuid",
          "description": "The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active directory.",
          "readOnly": true
        },
        "puid": {
          "type": "string",
          "description": "The Azure Active Directory Passport User ID.",
          "readOnly": true
        },
        "sid": {
          "type": "string",
          "description": "The account security identifier, e.g. S-1-5-18.",
          "readOnly": true
        },
        "upnSuffix": {
          "type": "string",
          "description": "The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com.",
          "readOnly": true
        },
        "dnsDomain": {
          "type": "string",
          "description": "The fully qualified domain DNS name.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "ActionPropertiesBase": {
      "type": "object",
      "description": "Action property bag base.",
      "properties": {
        "logicAppResourceId": {
          "type": "string",
          "description": "Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}."
        }
      },
      "required": [
        "logicAppResourceId"
      ]
    },
    "ActionRequestProperties": {
      "type": "object",
      "description": "Action property bag.",
      "properties": {
        "triggerUri": {
          "type": "string",
          "description": "Logic App Callback URL for this specific workflow."
        }
      },
      "required": [
        "triggerUri"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ActionPropertiesBase"
        }
      ]
    },
    "ActionResponse": {
      "type": "object",
      "description": "Action for alert rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ActionResponseProperties",
          "description": "Action properties for get request",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "Etag of the action."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ActionResponseProperties": {
      "type": "object",
      "description": "Action property bag.",
      "properties": {
        "workflowId": {
          "type": "string",
          "description": "The name of the logic app's workflow."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ActionPropertiesBase"
        }
      ]
    },
    "ActionType": {
      "type": "string",
      "description": "The type of the automation rule action.",
      "enum": [
        "ModifyProperties",
        "RunPlaybook",
        "AddIncidentTask"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "ModifyProperties",
            "value": "ModifyProperties",
            "description": "Modify an object's properties"
          },
          {
            "name": "RunPlaybook",
            "value": "RunPlaybook",
            "description": "Run a playbook on an object"
          },
          {
            "name": "AddIncidentTask",
            "value": "AddIncidentTask",
            "description": "Add a task to an incident object"
          }
        ]
      }
    },
    "ActionsList": {
      "type": "object",
      "description": "List all the actions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ActionResponse items on this page",
          "items": {
            "$ref": "#/definitions/ActionResponse"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AddIncidentTaskActionProperties": {
      "type": "object",
      "description": "Describes an automation rule action to add a task to an incident.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the task."
        },
        "description": {
          "type": "string",
          "description": "The description of the task."
        }
      },
      "required": [
        "title"
      ]
    },
    "AlertDetail": {
      "type": "string",
      "description": "Alert detail",
      "enum": [
        "DisplayName",
        "Severity"
      ],
      "x-ms-enum": {
        "name": "AlertDetail",
        "modelAsString": true,
        "values": [
          {
            "name": "DisplayName",
            "value": "DisplayName",
            "description": "Alert display name"
          },
          {
            "name": "Severity",
            "value": "Severity",
            "description": "Alert severity"
          }
        ]
      }
    },
    "AlertDetailsOverride": {
      "type": "object",
      "description": "Settings for how to dynamically override alert static details",
      "properties": {
        "alertDisplayNameFormat": {
          "type": "string",
          "description": "the format containing columns name(s) to override the alert name"
        },
        "alertDescriptionFormat": {
          "type": "string",
          "description": "the format containing columns name(s) to override the alert description"
        },
        "alertTacticsColumnName": {
          "type": "string",
          "description": "the column name to take the alert tactics from"
        },
        "alertSeverityColumnName": {
          "type": "string",
          "description": "the column name to take the alert severity from"
        },
        "alertDynamicProperties": {
          "type": "array",
          "description": "List of additional dynamic properties to override",
          "items": {
            "$ref": "#/definitions/AlertPropertyMapping"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AlertProperty": {
      "type": "string",
      "description": "The V3 alert property",
      "enum": [
        "AlertLink",
        "ConfidenceLevel",
        "ConfidenceScore",
        "ExtendedLinks",
        "ProductName",
        "ProviderName",
        "ProductComponentName",
        "RemediationSteps",
        "Techniques"
      ],
      "x-ms-enum": {
        "name": "AlertProperty",
        "modelAsString": true,
        "values": [
          {
            "name": "AlertLink",
            "value": "AlertLink",
            "description": "Alert's link"
          },
          {
            "name": "ConfidenceLevel",
            "value": "ConfidenceLevel",
            "description": "Confidence level property"
          },
          {
            "name": "ConfidenceScore",
            "value": "ConfidenceScore",
            "description": "Confidence score"
          },
          {
            "name": "ExtendedLinks",
            "value": "ExtendedLinks",
            "description": "Extended links to the alert"
          },
          {
            "name": "ProductName",
            "value": "ProductName",
            "description": "Product name alert property"
          },
          {
            "name": "ProviderName",
            "value": "ProviderName",
            "description": "Provider name alert property"
          },
          {
            "name": "ProductComponentName",
            "value": "ProductComponentName",
            "description": "Product component name alert property"
          },
          {
            "name": "RemediationSteps",
            "value": "RemediationSteps",
            "description": "Remediation steps alert property"
          },
          {
            "name": "Techniques",
            "value": "Techniques",
            "description": "Techniques alert property"
          }
        ]
      }
    },
    "AlertPropertyMapping": {
      "type": "object",
      "description": "A single alert property mapping to override",
      "properties": {
        "alertProperty": {
          "$ref": "#/definitions/AlertProperty",
          "description": "The V3 alert property"
        },
        "value": {
          "type": "string",
          "description": "the column name to use to override this property"
        }
      }
    },
    "AlertRule": {
      "type": "object",
      "description": "Alert rule.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "$ref": "#/definitions/AlertRuleKind",
          "description": "The alert rule kind"
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AlertRuleKind": {
      "type": "string",
      "description": "The kind of the alert rule",
      "enum": [
        "Scheduled",
        "MicrosoftSecurityIncidentCreation",
        "Fusion"
      ],
      "x-ms-enum": {
        "name": "AlertRuleKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Scheduled",
            "value": "Scheduled"
          },
          {
            "name": "MicrosoftSecurityIncidentCreation",
            "value": "MicrosoftSecurityIncidentCreation"
          },
          {
            "name": "Fusion",
            "value": "Fusion"
          }
        ]
      }
    },
    "AlertRuleListResult": {
      "type": "object",
      "description": "The response of a AlertRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AlertRule items on this page",
          "items": {
            "$ref": "#/definitions/AlertRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AlertRuleTemplate": {
      "type": "object",
      "description": "Alert rule template.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "$ref": "#/definitions/AlertRuleKind",
          "description": "The alert rule kind"
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AlertRuleTemplateDataSource": {
      "type": "object",
      "description": "alert rule template data sources",
      "properties": {
        "connectorId": {
          "type": "string",
          "description": "The connector id that provides the following data types"
        },
        "dataTypes": {
          "type": "array",
          "description": "The data types used by the alert rule template",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AlertRuleTemplatesList": {
      "type": "object",
      "description": "List all the alert rule templates.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AlertRuleTemplate items on this page",
          "items": {
            "$ref": "#/definitions/AlertRuleTemplate"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AlertSeverity": {
      "type": "string",
      "description": "The severity of the alert",
      "enum": [
        "High",
        "Medium",
        "Low",
        "Informational"
      ],
      "x-ms-enum": {
        "name": "AlertSeverity",
        "modelAsString": true,
        "values": [
          {
            "name": "High",
            "value": "High",
            "description": "High severity"
          },
          {
            "name": "Medium",
            "value": "Medium",
            "description": "Medium severity"
          },
          {
            "name": "Low",
            "value": "Low",
            "description": "Low severity"
          },
          {
            "name": "Informational",
            "value": "Informational",
            "description": "Informational severity"
          }
        ]
      }
    },
    "AlertStatus": {
      "type": "string",
      "description": "The lifecycle status of the alert.",
      "enum": [
        "Unknown",
        "New",
        "Resolved",
        "Dismissed",
        "InProgress"
      ],
      "x-ms-enum": {
        "name": "AlertStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Unknown value"
          },
          {
            "name": "New",
            "value": "New",
            "description": "New alert"
          },
          {
            "name": "Resolved",
            "value": "Resolved",
            "description": "Alert closed after handling"
          },
          {
            "name": "Dismissed",
            "value": "Dismissed",
            "description": "Alert dismissed as false positive"
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "Alert is being handled"
          }
        ]
      }
    },
    "AlertsDataTypeOfDataConnector": {
      "type": "object",
      "description": "Alerts data type for data connectors.",
      "properties": {
        "alerts": {
          "$ref": "#/definitions/DataConnectorDataTypeCommon",
          "description": "Alerts data type connection."
        }
      }
    },
    "AnomalySecurityMLAnalyticsSettings": {
      "type": "object",
      "description": "Represents Anomaly Security ML Analytics Settings",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AnomalySecurityMLAnalyticsSettingsProperties",
          "description": "Anomaly Security ML Analytics Settings properties",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The kind of security ML Analytics Settings",
          "enum": [
            "Anomaly"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SecurityMLAnalyticsSetting"
        }
      ]
    },
    "AnomalySecurityMLAnalyticsSettingsProperties": {
      "type": "object",
      "description": "AnomalySecurityMLAnalytics settings base property bag.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the SecurityMLAnalyticsSettings."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for settings created by this SecurityMLAnalyticsSettings."
        },
        "enabled": {
          "type": "boolean",
          "description": "Determines whether this settings is enabled or disabled."
        },
        "lastModifiedUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The last time that this SecurityMLAnalyticsSettings has been modified.",
          "readOnly": true
        },
        "requiredDataConnectors": {
          "type": "array",
          "description": "The required data sources for this SecurityMLAnalyticsSettings",
          "items": {
            "$ref": "#/definitions/SecurityMLAnalyticsSettingsDataSource"
          },
          "x-ms-identifiers": [
            "connectorId"
          ]
        },
        "tactics": {
          "type": "array",
          "description": "The tactics of the SecurityMLAnalyticsSettings",
          "items": {
            "$ref": "#/definitions/AttackTactic"
          }
        },
        "techniques": {
          "type": "array",
          "description": "The techniques of the SecurityMLAnalyticsSettings",
          "items": {
            "type": "string"
          }
        },
        "anomalyVersion": {
          "type": "string",
          "description": "The anomaly version of the AnomalySecurityMLAnalyticsSettings."
        },
        "customizableObservations": {
          "description": "The customizable observations of the AnomalySecurityMLAnalyticsSettings."
        },
        "frequency": {
          "type": "string",
          "format": "duration",
          "description": "The frequency that this SecurityMLAnalyticsSettings will be run."
        },
        "settingsStatus": {
          "$ref": "#/definitions/SettingsStatus",
          "description": "The anomaly SecurityMLAnalyticsSettings status"
        },
        "isDefaultSettings": {
          "type": "boolean",
          "description": "Determines whether this anomaly security ml analytics settings is a default settings"
        },
        "anomalySettingsVersion": {
          "type": "integer",
          "format": "int32",
          "description": "The anomaly settings version of the Anomaly security ml analytics settings that dictates whether job version gets updated or not."
        },
        "settingsDefinitionId": {
          "type": "string",
          "format": "uuid",
          "description": "The anomaly settings definition Id"
        }
      },
      "required": [
        "displayName",
        "enabled",
        "anomalyVersion",
        "frequency",
        "settingsStatus",
        "isDefaultSettings"
      ]
    },
    "AntispamMailDirection": {
      "type": "string",
      "description": "The directionality of this mail message",
      "enum": [
        "Unknown",
        "Inbound",
        "Outbound",
        "Intraorg"
      ],
      "x-ms-enum": {
        "name": "AntispamMailDirection",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Unknown"
          },
          {
            "name": "Inbound",
            "value": "Inbound",
            "description": "Inbound"
          },
          {
            "name": "Outbound",
            "value": "Outbound",
            "description": "Outbound"
          },
          {
            "name": "Intraorg",
            "value": "Intraorg",
            "description": "Intraorg"
          }
        ]
      }
    },
    "ApiKeyAuthModel": {
      "type": "object",
      "description": "Model for authentication with the API Key. Will result in additional header on the request (default behavior) to the remote server: 'ApiKeyName: ApiKeyIdentifier ApiKey'. If 'IsApiKeyInPostPayload' is true it will send it in the body of the request and not the header.",
      "properties": {
        "apiKey": {
          "type": "string",
          "description": "API Key for the user secret key credential"
        },
        "apiKeyName": {
          "type": "string",
          "description": "API Key name"
        },
        "apiKeyIdentifier": {
          "type": "string",
          "description": "API Key Identifier"
        },
        "isApiKeyInPostPayload": {
          "type": "boolean",
          "description": "Flag to indicate if API key is set in HTTP POST payload"
        }
      },
      "required": [
        "apiKey",
        "apiKeyName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "x-ms-discriminator-value": "APIKey"
    },
    "AttackTactic": {
      "type": "string",
      "description": "The severity for alerts created by this alert rule.",
      "enum": [
        "Reconnaissance",
        "ResourceDevelopment",
        "InitialAccess",
        "Execution",
        "Persistence",
        "PrivilegeEscalation",
        "DefenseEvasion",
        "CredentialAccess",
        "Discovery",
        "LateralMovement",
        "Collection",
        "Exfiltration",
        "CommandAndControl",
        "Impact",
        "PreAttack",
        "ImpairProcessControl",
        "InhibitResponseFunction"
      ],
      "x-ms-enum": {
        "name": "AttackTactic",
        "modelAsString": true,
        "values": [
          {
            "name": "Reconnaissance",
            "value": "Reconnaissance"
          },
          {
            "name": "ResourceDevelopment",
            "value": "ResourceDevelopment"
          },
          {
            "name": "InitialAccess",
            "value": "InitialAccess"
          },
          {
            "name": "Execution",
            "value": "Execution"
          },
          {
            "name": "Persistence",
            "value": "Persistence"
          },
          {
            "name": "PrivilegeEscalation",
            "value": "PrivilegeEscalation"
          },
          {
            "name": "DefenseEvasion",
            "value": "DefenseEvasion"
          },
          {
            "name": "CredentialAccess",
            "value": "CredentialAccess"
          },
          {
            "name": "Discovery",
            "value": "Discovery"
          },
          {
            "name": "LateralMovement",
            "value": "LateralMovement"
          },
          {
            "name": "Collection",
            "value": "Collection"
          },
          {
            "name": "Exfiltration",
            "value": "Exfiltration"
          },
          {
            "name": "CommandAndControl",
            "value": "CommandAndControl"
          },
          {
            "name": "Impact",
            "value": "Impact"
          },
          {
            "name": "PreAttack",
            "value": "PreAttack"
          },
          {
            "name": "ImpairProcessControl",
            "value": "ImpairProcessControl"
          },
          {
            "name": "InhibitResponseFunction",
            "value": "InhibitResponseFunction"
          }
        ]
      }
    },
    "AutomationRule": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AutomationRuleProperties",
          "description": "Automation rule properties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AutomationRuleAction": {
      "type": "object",
      "description": "Describes an automation rule action.",
      "properties": {
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "actionType": {
          "$ref": "#/definitions/ActionType",
          "description": "The type of the automation rule action."
        }
      },
      "discriminator": "actionType",
      "required": [
        "order",
        "actionType"
      ]
    },
    "AutomationRuleAddIncidentTaskAction": {
      "type": "object",
      "description": "Describes an automation rule action to add a task to an incident",
      "properties": {
        "actionConfiguration": {
          "$ref": "#/definitions/AddIncidentTaskActionProperties",
          "description": "Describes an automation rule action to add a task to an incident."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleAction"
        }
      ],
      "x-ms-discriminator-value": "AddIncidentTask"
    },
    "AutomationRuleBooleanCondition": {
      "type": "object",
      "description": "Describes an automation rule condition with boolean operators.",
      "properties": {
        "operator": {
          "$ref": "#/definitions/AutomationRuleBooleanConditionSupportedOperator",
          "description": "Describes a boolean condition operator."
        },
        "innerConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutomationRuleCondition"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AutomationRuleBooleanConditionSupportedOperator": {
      "type": "string",
      "description": "Describes a boolean condition operator.",
      "enum": [
        "And",
        "Or"
      ],
      "x-ms-enum": {
        "name": "AutomationRuleBooleanConditionSupportedOperator",
        "modelAsString": true,
        "values": [
          {
            "name": "And",
            "value": "And",
            "description": "Evaluates as true if all the item conditions are evaluated as true"
          },
          {
            "name": "Or",
            "value": "Or",
            "description": "Evaluates as true if at least one of the item conditions are evaluated as true"
          }
        ]
      }
    },
    "AutomationRuleCondition": {
      "type": "object",
      "description": "Describes an automation rule condition.",
      "properties": {
        "conditionType": {
          "$ref": "#/definitions/ConditionType"
        }
      },
      "discriminator": "conditionType",
      "required": [
        "conditionType"
      ]
    },
    "AutomationRuleModifyPropertiesAction": {
      "type": "object",
      "description": "Describes an automation rule action to modify an object's properties",
      "properties": {
        "actionConfiguration": {
          "$ref": "#/definitions/IncidentPropertiesAction"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleAction"
        }
      ],
      "x-ms-discriminator-value": "ModifyProperties"
    },
    "AutomationRuleProperties": {
      "type": "object",
      "description": "Automation rule properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of the automation rule.",
          "maxLength": 500
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "The order of execution of the automation rule.",
          "minimum": 1,
          "maximum": 1000
        },
        "triggeringLogic": {
          "$ref": "#/definitions/AutomationRuleTriggeringLogic",
          "description": "Describes automation rule triggering logic."
        },
        "actions": {
          "type": "array",
          "description": "The actions to execute when the automation rule is triggered.",
          "items": {
            "$ref": "#/definitions/AutomationRuleAction"
          },
          "x-ms-identifiers": []
        },
        "lastModifiedTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The last time the automation rule was updated.",
          "readOnly": true
        },
        "createdTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The time the automation rule was created.",
          "readOnly": true
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/ClientInfo",
          "description": "Information on the client (user or application) that made some action",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/definitions/ClientInfo",
          "description": "Information on the client (user or application) that made some action",
          "readOnly": true
        }
      },
      "required": [
        "displayName",
        "order",
        "triggeringLogic",
        "actions"
      ]
    },
    "AutomationRulePropertyArrayChangedConditionSupportedArrayType": {
      "type": "string",
      "enum": [
        "Alerts",
        "Labels",
        "Tactics",
        "Comments"
      ],
      "x-ms-enum": {
        "name": "AutomationRulePropertyArrayChangedConditionSupportedArrayType",
        "modelAsString": true,
        "values": [
          {
            "name": "Alerts",
            "value": "Alerts",
            "description": "Evaluate the condition on the alerts"
          },
          {
            "name": "Labels",
            "value": "Labels",
            "description": "Evaluate the condition on the labels"
          },
          {
            "name": "Tactics",
            "value": "Tactics",
            "description": "Evaluate the condition on the tactics"
          },
          {
            "name": "Comments",
            "value": "Comments",
            "description": "Evaluate the condition on the comments"
          }
        ]
      }
    },
    "AutomationRulePropertyArrayChangedConditionSupportedChangeType": {
      "type": "string",
      "enum": [
        "Added"
      ],
      "x-ms-enum": {
        "name": "AutomationRulePropertyArrayChangedConditionSupportedChangeType",
        "modelAsString": true,
        "values": [
          {
            "name": "Added",
            "value": "Added",
            "description": "Evaluate the condition on items added to the array"
          }
        ]
      }
    },
    "AutomationRulePropertyArrayChangedValuesCondition": {
      "type": "object",
      "properties": {
        "arrayType": {
          "$ref": "#/definitions/AutomationRulePropertyArrayChangedConditionSupportedArrayType"
        },
        "changeType": {
          "$ref": "#/definitions/AutomationRulePropertyArrayChangedConditionSupportedChangeType"
        }
      }
    },
    "AutomationRulePropertyArrayConditionSupportedArrayConditionType": {
      "type": "string",
      "description": "Describes an array condition evaluation type.",
      "enum": [
        "AnyItem"
      ],
      "x-ms-enum": {
        "name": "AutomationRulePropertyArrayConditionSupportedArrayConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "AnyItem",
            "value": "AnyItem",
            "description": "Evaluate the condition as true if any item fulfills it"
          }
        ]
      }
    },
    "AutomationRulePropertyArrayConditionSupportedArrayType": {
      "type": "string",
      "description": "Describes an array condition evaluated array type.",
      "enum": [
        "CustomDetails",
        "CustomDetailValues"
      ],
      "x-ms-enum": {
        "name": "AutomationRulePropertyArrayConditionSupportedArrayType",
        "modelAsString": true,
        "values": [
          {
            "name": "CustomDetails",
            "value": "CustomDetails",
            "description": "Evaluate the condition on the custom detail keys"
          },
          {
            "name": "CustomDetailValues",
            "value": "CustomDetailValues",
            "description": "Evaluate the condition on a custom detail's values"
          }
        ]
      }
    },
    "AutomationRulePropertyArrayValuesCondition": {
      "type": "object",
      "description": "Describes an automation rule condition on array properties.",
      "properties": {
        "arrayType": {
          "$ref": "#/definitions/AutomationRulePropertyArrayConditionSupportedArrayType",
          "description": "Describes an array condition evaluated array type."
        },
        "arrayConditionType": {
          "$ref": "#/definitions/AutomationRulePropertyArrayConditionSupportedArrayConditionType",
          "description": "Describes an array condition evaluation type."
        },
        "itemConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutomationRuleCondition"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AutomationRulePropertyChangedConditionSupportedChangedType": {
      "type": "string",
      "enum": [
        "ChangedFrom",
        "ChangedTo"
      ],
      "x-ms-enum": {
        "name": "AutomationRulePropertyChangedConditionSupportedChangedType",
        "modelAsString": true,
        "values": [
          {
            "name": "ChangedFrom",
            "value": "ChangedFrom",
            "description": "Evaluate the condition on the previous value of the property"
          },
          {
            "name": "ChangedTo",
            "value": "ChangedTo",
            "description": "Evaluate the condition on the updated value of the property"
          }
        ]
      }
    },
    "AutomationRulePropertyChangedConditionSupportedPropertyType": {
      "type": "string",
      "enum": [
        "IncidentSeverity",
        "IncidentStatus",
        "IncidentOwner"
      ],
      "x-ms-enum": {
        "name": "AutomationRulePropertyChangedConditionSupportedPropertyType",
        "modelAsString": true,
        "values": [
          {
            "name": "IncidentSeverity",
            "value": "IncidentSeverity",
            "description": "Evaluate the condition on the incident severity"
          },
          {
            "name": "IncidentStatus",
            "value": "IncidentStatus",
            "description": "Evaluate the condition on the incident status"
          },
          {
            "name": "IncidentOwner",
            "value": "IncidentOwner",
            "description": "Evaluate the condition on the incident owner"
          }
        ]
      }
    },
    "AutomationRulePropertyConditionSupportedOperator": {
      "type": "string",
      "enum": [
        "Equals",
        "NotEquals",
        "Contains",
        "NotContains",
        "StartsWith",
        "NotStartsWith",
        "EndsWith",
        "NotEndsWith"
      ],
      "x-ms-enum": {
        "name": "AutomationRulePropertyConditionSupportedOperator",
        "modelAsString": true,
        "values": [
          {
            "name": "Equals",
            "value": "Equals",
            "description": "Evaluates if the property equals at least one of the condition values"
          },
          {
            "name": "NotEquals",
            "value": "NotEquals",
            "description": "Evaluates if the property does not equal any of the condition values"
          },
          {
            "name": "Contains",
            "value": "Contains",
            "description": "Evaluates if the property contains at least one of the condition values"
          },
          {
            "name": "NotContains",
            "value": "NotContains",
            "description": "Evaluates if the property does not contain any of the condition values"
          },
          {
            "name": "StartsWith",
            "value": "StartsWith",
            "description": "Evaluates if the property starts with any of the condition values"
          },
          {
            "name": "NotStartsWith",
            "value": "NotStartsWith",
            "description": "Evaluates if the property does not start with any of the condition values"
          },
          {
            "name": "EndsWith",
            "value": "EndsWith",
            "description": "Evaluates if the property ends with any of the condition values"
          },
          {
            "name": "NotEndsWith",
            "value": "NotEndsWith",
            "description": "Evaluates if the property does not end with any of the condition values"
          }
        ]
      }
    },
    "AutomationRulePropertyConditionSupportedProperty": {
      "type": "string",
      "description": "The property to evaluate in an automation rule property condition.",
      "enum": [
        "IncidentTitle",
        "IncidentDescription",
        "IncidentSeverity",
        "IncidentStatus",
        "IncidentRelatedAnalyticRuleIds",
        "IncidentTactics",
        "IncidentLabel",
        "IncidentProviderName",
        "IncidentUpdatedBySource",
        "IncidentCustomDetailsKey",
        "IncidentCustomDetailsValue",
        "AccountAadTenantId",
        "AccountAadUserId",
        "AccountName",
        "AccountNTDomain",
        "AccountPUID",
        "AccountSid",
        "AccountObjectGuid",
        "AccountUPNSuffix",
        "AlertProductNames",
        "AlertAnalyticRuleIds",
        "AzureResourceResourceId",
        "AzureResourceSubscriptionId",
        "CloudApplicationAppId",
        "CloudApplicationAppName",
        "DNSDomainName",
        "FileDirectory",
        "FileName",
        "FileHashValue",
        "HostAzureID",
        "HostName",
        "HostNetBiosName",
        "HostNTDomain",
        "HostOSVersion",
        "IoTDeviceId",
        "IoTDeviceName",
        "IoTDeviceType",
        "IoTDeviceVendor",
        "IoTDeviceModel",
        "IoTDeviceOperatingSystem",
        "IPAddress",
        "MailboxDisplayName",
        "MailboxPrimaryAddress",
        "MailboxUPN",
        "MailMessageDeliveryAction",
        "MailMessageDeliveryLocation",
        "MailMessageRecipient",
        "MailMessageSenderIP",
        "MailMessageSubject",
        "MailMessageP1Sender",
        "MailMessageP2Sender",
        "MalwareCategory",
        "MalwareName",
        "ProcessCommandLine",
        "ProcessId",
        "RegistryKey",
        "RegistryValueData",
        "Url"
      ],
      "x-ms-enum": {
        "name": "AutomationRulePropertyConditionSupportedProperty",
        "modelAsString": true,
        "values": [
          {
            "name": "IncidentTitle",
            "value": "IncidentTitle",
            "description": "The title of the incident"
          },
          {
            "name": "IncidentDescription",
            "value": "IncidentDescription",
            "description": "The description of the incident"
          },
          {
            "name": "IncidentSeverity",
            "value": "IncidentSeverity",
            "description": "The severity of the incident"
          },
          {
            "name": "IncidentStatus",
            "value": "IncidentStatus",
            "description": "The status of the incident"
          },
          {
            "name": "IncidentRelatedAnalyticRuleIds",
            "value": "IncidentRelatedAnalyticRuleIds",
            "description": "The related Analytic rule ids of the incident"
          },
          {
            "name": "IncidentTactics",
            "value": "IncidentTactics",
            "description": "The tactics of the incident"
          },
          {
            "name": "IncidentLabel",
            "value": "IncidentLabel",
            "description": "The labels of the incident"
          },
          {
            "name": "IncidentProviderName",
            "value": "IncidentProviderName",
            "description": "The provider name of the incident"
          },
          {
            "name": "IncidentUpdatedBySource",
            "value": "IncidentUpdatedBySource",
            "description": "The update source of the incident"
          },
          {
            "name": "IncidentCustomDetailsKey",
            "value": "IncidentCustomDetailsKey",
            "description": "The incident custom detail key"
          },
          {
            "name": "IncidentCustomDetailsValue",
            "value": "IncidentCustomDetailsValue",
            "description": "The incident custom detail value"
          },
          {
            "name": "AccountAadTenantId",
            "value": "AccountAadTenantId",
            "description": "The account Azure Active Directory tenant id"
          },
          {
            "name": "AccountAadUserId",
            "value": "AccountAadUserId",
            "description": "The account Azure Active Directory user id"
          },
          {
            "name": "AccountName",
            "value": "AccountName",
            "description": "The account name"
          },
          {
            "name": "AccountNTDomain",
            "value": "AccountNTDomain",
            "description": "The account NetBIOS domain name"
          },
          {
            "name": "AccountPUID",
            "value": "AccountPUID",
            "description": "The account Azure Active Directory Passport User ID"
          },
          {
            "name": "AccountSid",
            "value": "AccountSid",
            "description": "The account security identifier"
          },
          {
            "name": "AccountObjectGuid",
            "value": "AccountObjectGuid",
            "description": "The account unique identifier"
          },
          {
            "name": "AccountUPNSuffix",
            "value": "AccountUPNSuffix",
            "description": "The account user principal name suffix"
          },
          {
            "name": "AlertProductNames",
            "value": "AlertProductNames",
            "description": "The name of the product of the alert"
          },
          {
            "name": "AlertAnalyticRuleIds",
            "value": "AlertAnalyticRuleIds",
            "description": "The analytic rule ids of the alert"
          },
          {
            "name": "AzureResourceResourceId",
            "value": "AzureResourceResourceId",
            "description": "The Azure resource id"
          },
          {
            "name": "AzureResourceSubscriptionId",
            "value": "AzureResourceSubscriptionId",
            "description": "The Azure resource subscription id"
          },
          {
            "name": "CloudApplicationAppId",
            "value": "CloudApplicationAppId",
            "description": "The cloud application identifier"
          },
          {
            "name": "CloudApplicationAppName",
            "value": "CloudApplicationAppName",
            "description": "The cloud application name"
          },
          {
            "name": "DNSDomainName",
            "value": "DNSDomainName",
            "description": "The dns record domain name"
          },
          {
            "name": "FileDirectory",
            "value": "FileDirectory",
            "description": "The file directory full path"
          },
          {
            "name": "FileName",
            "value": "FileName",
            "description": "The file name without path"
          },
          {
            "name": "FileHashValue",
            "value": "FileHashValue",
            "description": "The file hash value"
          },
          {
            "name": "HostAzureID",
            "value": "HostAzureID",
            "description": "The host Azure resource id"
          },
          {
            "name": "HostName",
            "value": "HostName",
            "description": "The host name without domain"
          },
          {
            "name": "HostNetBiosName",
            "value": "HostNetBiosName",
            "description": "The host NetBIOS name"
          },
          {
            "name": "HostNTDomain",
            "value": "HostNTDomain",
            "description": "The host NT domain"
          },
          {
            "name": "HostOSVersion",
            "value": "HostOSVersion",
            "description": "The host operating system"
          },
          {
            "name": "IoTDeviceId",
            "value": "IoTDeviceId",
            "description": "\"The IoT device id"
          },
          {
            "name": "IoTDeviceName",
            "value": "IoTDeviceName",
            "description": "The IoT device name"
          },
          {
            "name": "IoTDeviceType",
            "value": "IoTDeviceType",
            "description": "The IoT device type"
          },
          {
            "name": "IoTDeviceVendor",
            "value": "IoTDeviceVendor",
            "description": "The IoT device vendor"
          },
          {
            "name": "IoTDeviceModel",
            "value": "IoTDeviceModel",
            "description": "The IoT device model"
          },
          {
            "name": "IoTDeviceOperatingSystem",
            "value": "IoTDeviceOperatingSystem",
            "description": "The IoT device operating system"
          },
          {
            "name": "IPAddress",
            "value": "IPAddress",
            "description": "The IP address"
          },
          {
            "name": "MailboxDisplayName",
            "value": "MailboxDisplayName",
            "description": "The mailbox display name"
          },
          {
            "name": "MailboxPrimaryAddress",
            "value": "MailboxPrimaryAddress",
            "description": "The mailbox primary address"
          },
          {
            "name": "MailboxUPN",
            "value": "MailboxUPN",
            "description": "The mailbox user principal name"
          },
          {
            "name": "MailMessageDeliveryAction",
            "value": "MailMessageDeliveryAction",
            "description": "The mail message delivery action"
          },
          {
            "name": "MailMessageDeliveryLocation",
            "value": "MailMessageDeliveryLocation",
            "description": "The mail message delivery location"
          },
          {
            "name": "MailMessageRecipient",
            "value": "MailMessageRecipient",
            "description": "The mail message recipient"
          },
          {
            "name": "MailMessageSenderIP",
            "value": "MailMessageSenderIP",
            "description": "The mail message sender IP address"
          },
          {
            "name": "MailMessageSubject",
            "value": "MailMessageSubject",
            "description": "The mail message subject"
          },
          {
            "name": "MailMessageP1Sender",
            "value": "MailMessageP1Sender",
            "description": "The mail message P1 sender"
          },
          {
            "name": "MailMessageP2Sender",
            "value": "MailMessageP2Sender",
            "description": "The mail message P2 sender"
          },
          {
            "name": "MalwareCategory",
            "value": "MalwareCategory",
            "description": "The malware category"
          },
          {
            "name": "MalwareName",
            "value": "MalwareName",
            "description": "The malware name"
          },
          {
            "name": "ProcessCommandLine",
            "value": "ProcessCommandLine",
            "description": "The process execution command line"
          },
          {
            "name": "ProcessId",
            "value": "ProcessId",
            "description": "The process id"
          },
          {
            "name": "RegistryKey",
            "value": "RegistryKey",
            "description": "The registry key path"
          },
          {
            "name": "RegistryValueData",
            "value": "RegistryValueData",
            "description": "The registry key value in string formatted representation"
          },
          {
            "name": "Url",
            "value": "Url",
            "description": "The url"
          }
        ]
      }
    },
    "AutomationRulePropertyValuesChangedCondition": {
      "type": "object",
      "properties": {
        "propertyName": {
          "$ref": "#/definitions/AutomationRulePropertyChangedConditionSupportedPropertyType"
        },
        "changeType": {
          "$ref": "#/definitions/AutomationRulePropertyChangedConditionSupportedChangedType"
        },
        "operator": {
          "$ref": "#/definitions/AutomationRulePropertyConditionSupportedOperator"
        },
        "propertyValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AutomationRulePropertyValuesCondition": {
      "type": "object",
      "properties": {
        "propertyName": {
          "$ref": "#/definitions/AutomationRulePropertyConditionSupportedProperty",
          "description": "The property to evaluate in an automation rule property condition."
        },
        "operator": {
          "$ref": "#/definitions/AutomationRulePropertyConditionSupportedOperator"
        },
        "propertyValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AutomationRuleRunPlaybookAction": {
      "type": "object",
      "description": "Describes an automation rule action to run a playbook",
      "properties": {
        "actionConfiguration": {
          "$ref": "#/definitions/PlaybookActionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleAction"
        }
      ],
      "x-ms-discriminator-value": "RunPlaybook"
    },
    "AutomationRuleTriggeringLogic": {
      "type": "object",
      "description": "Describes automation rule triggering logic.",
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "description": "Determines whether the automation rule is enabled or disabled."
        },
        "expirationTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Determines when the automation rule should automatically expire and be disabled."
        },
        "triggersOn": {
          "$ref": "#/definitions/TriggersOn"
        },
        "triggersWhen": {
          "$ref": "#/definitions/TriggersWhen"
        },
        "conditions": {
          "type": "array",
          "description": "The conditions to evaluate to determine if the automation rule should be triggered on a given object.",
          "items": {
            "$ref": "#/definitions/AutomationRuleCondition"
          },
          "x-ms-identifiers": [
            "conditionType"
          ]
        }
      },
      "required": [
        "isEnabled",
        "triggersOn",
        "triggersWhen"
      ]
    },
    "AutomationRulesList": {
      "type": "object",
      "description": "Paged collection of AutomationRule items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AutomationRule items on this page",
          "items": {
            "$ref": "#/definitions/AutomationRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AwsCloudTrailDataConnector": {
      "type": "object",
      "description": "Represents Amazon Web Services CloudTrail data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AwsCloudTrailDataConnectorProperties",
          "description": "Amazon Web Services CloudTrail data connector properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The data connector kind",
          "enum": [
            "AmazonWebServicesCloudTrail"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ]
    },
    "AwsCloudTrailDataConnectorDataTypes": {
      "type": "object",
      "description": "The available data types for Amazon Web Services CloudTrail data connector.",
      "properties": {
        "logs": {
          "$ref": "#/definitions/AwsCloudTrailDataConnectorDataTypesLogs",
          "description": "Logs data type."
        }
      }
    },
    "AwsCloudTrailDataConnectorDataTypesLogs": {
      "type": "object",
      "description": "Logs data type.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorDataTypeCommon"
        }
      ]
    },
    "AwsCloudTrailDataConnectorProperties": {
      "type": "object",
      "description": "Amazon Web Services CloudTrail data connector properties.",
      "properties": {
        "awsRoleArn": {
          "type": "string",
          "description": "The Aws Role Arn (with CloudTrailReadOnly policy) that is used to access the Aws account."
        },
        "dataTypes": {
          "$ref": "#/definitions/AwsCloudTrailDataConnectorDataTypes",
          "description": "The available data types for the connector."
        }
      }
    },
    "AzureDevOpsResourceInfo": {
      "type": "object",
      "description": "Resources created in Azure DevOps repository.",
      "properties": {
        "pipelineId": {
          "type": "string",
          "description": "Id of the pipeline created for the source-control."
        },
        "serviceConnectionId": {
          "type": "string",
          "description": "Id of the service-connection created for the source-control."
        }
      }
    },
    "AzureResourceEntity": {
      "type": "object",
      "description": "Represents an azure resource entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureResourceEntityProperties",
          "description": "AzureResource entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "AzureResource"
    },
    "AzureResourceEntityProperties": {
      "type": "object",
      "description": "AzureResource entity property bag.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The azure resource id of the resource",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription id of the resource",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "BasicAuthModel": {
      "type": "object",
      "description": "Model for API authentication with basic flow - user name + password.",
      "properties": {
        "userName": {
          "type": "string",
          "description": "The user name."
        },
        "password": {
          "type": "string",
          "description": "The password"
        }
      },
      "required": [
        "userName",
        "password"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "x-ms-discriminator-value": "Basic"
    },
    "Bookmark": {
      "type": "object",
      "description": "Represents a bookmark in Azure Security Insights.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BookmarkProperties",
          "description": "Bookmark properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BookmarkListResult": {
      "type": "object",
      "description": "The response of a Bookmark list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Bookmark items on this page",
          "items": {
            "$ref": "#/definitions/Bookmark"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BookmarkProperties": {
      "type": "object",
      "description": "Describes bookmark properties",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time the bookmark was created"
        },
        "createdBy": {
          "$ref": "#/definitions/UserInfo",
          "description": "Describes a user that created the bookmark"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the bookmark"
        },
        "labels": {
          "type": "array",
          "description": "List of labels relevant to this bookmark",
          "items": {
            "type": "string"
          }
        },
        "notes": {
          "type": "string",
          "description": "The notes of the bookmark"
        },
        "query": {
          "type": "string",
          "description": "The query of the bookmark."
        },
        "queryResult": {
          "type": "string",
          "description": "The query result of the bookmark."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The last time the bookmark was updated"
        },
        "updatedBy": {
          "$ref": "#/definitions/UserInfo",
          "description": "Describes a user that updated the bookmark"
        },
        "eventTime": {
          "type": "string",
          "format": "date-time",
          "description": "The bookmark event time"
        },
        "queryStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for the query"
        },
        "queryEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time for the query"
        },
        "incidentInfo": {
          "$ref": "#/definitions/IncidentInfo",
          "description": "Describes an incident that relates to bookmark"
        }
      },
      "required": [
        "displayName",
        "query"
      ]
    },
    "BooleanConditionProperties": {
      "type": "object",
      "description": "Describes an automation rule condition that applies a boolean operator (e.g AND, OR) to conditions",
      "properties": {
        "conditionProperties": {
          "$ref": "#/definitions/AutomationRuleBooleanCondition",
          "description": "Describes an automation rule condition with boolean operators."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "Boolean"
    },
    "CcpAuthConfig": {
      "type": "object",
      "description": "Base Model for API authentication.",
      "properties": {
        "type": {
          "$ref": "#/definitions/CcpAuthType",
          "description": "The auth type"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "CcpAuthType": {
      "type": "string",
      "description": "Type of paging",
      "enum": [
        "Basic",
        "APIKey",
        "OAuth2",
        "AWS",
        "GCP",
        "Session",
        "JwtToken",
        "GitHub",
        "ServiceBus",
        "Oracle",
        "None"
      ],
      "x-ms-enum": {
        "name": "CcpAuthType",
        "modelAsString": true,
        "values": [
          {
            "name": "Basic",
            "value": "Basic"
          },
          {
            "name": "APIKey",
            "value": "APIKey"
          },
          {
            "name": "OAuth2",
            "value": "OAuth2"
          },
          {
            "name": "AWS",
            "value": "AWS"
          },
          {
            "name": "GCP",
            "value": "GCP"
          },
          {
            "name": "Session",
            "value": "Session"
          },
          {
            "name": "JwtToken",
            "value": "JwtToken"
          },
          {
            "name": "GitHub",
            "value": "GitHub"
          },
          {
            "name": "ServiceBus",
            "value": "ServiceBus"
          },
          {
            "name": "Oracle",
            "value": "Oracle"
          },
          {
            "name": "None",
            "value": "None"
          }
        ]
      }
    },
    "CcpResponseConfig": {
      "type": "object",
      "description": "A custom response configuration for a rule.",
      "properties": {
        "eventsJsonPaths": {
          "type": "array",
          "description": "The json paths, '$' char is the json root.",
          "items": {
            "type": "string"
          }
        },
        "successStatusJsonPath": {
          "type": "string",
          "description": "The value where the status message/code should appear in the response."
        },
        "successStatusValue": {
          "type": "string",
          "description": "The status value."
        },
        "isGzipCompressed": {
          "type": "boolean",
          "description": "The value indicating whether the remote server support Gzip and we should expect Gzip response."
        },
        "compressionAlgo": {
          "type": "string",
          "description": "The compression algorithm. For Example: 'gzip', 'multi-gzip', 'deflate'.",
          "default": "gzip"
        },
        "format": {
          "type": "string",
          "description": "The response format. possible values are json,csv,xml",
          "default": "json"
        },
        "csvDelimiter": {
          "type": "string",
          "description": "The csv delimiter, in case the response format is CSV."
        },
        "hasCsvBoundary": {
          "type": "boolean",
          "description": "The value indicating whether the response has CSV boundary in case the response in CSV format."
        },
        "hasCsvHeader": {
          "type": "boolean",
          "description": "The value indicating whether the response has headers in case the response in CSV format."
        },
        "convertChildPropertiesToArray": {
          "type": "boolean",
          "description": "The value indicating whether the response isn't an array of events / logs.  By setting this flag to true it means the remote server will response with an object which each property has as a value an array of events / logs."
        },
        "csvEscape": {
          "type": "string",
          "description": "The character used to escape characters in CSV.",
          "default": "",
          "minLength": 1,
          "maxLength": 1
        }
      },
      "required": [
        "eventsJsonPaths"
      ]
    },
    "ClientInfo": {
      "type": "object",
      "description": "Information on the client (user or application) that made some action",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email of the client."
        },
        "name": {
          "type": "string",
          "description": "The name of the client."
        },
        "objectId": {
          "type": "string",
          "format": "uuid",
          "description": "The object id of the client."
        },
        "userPrincipalName": {
          "type": "string",
          "description": "The user principal name of the client."
        }
      }
    },
    "CloudApplicationEntity": {
      "type": "object",
      "description": "Represents a cloud application entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloudApplicationEntityProperties",
          "description": "CloudApplication entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "CloudApplication"
    },
    "CloudApplicationEntityProperties": {
      "type": "object",
      "description": "CloudApplication entity property bag.",
      "properties": {
        "appId": {
          "type": "integer",
          "format": "int32",
          "description": "The technical identifier of the application.",
          "readOnly": true
        },
        "appName": {
          "type": "string",
          "description": "The name of the related cloud application.",
          "readOnly": true
        },
        "instanceName": {
          "type": "string",
          "description": "The user defined instance name of the cloud application. It is often used to distinguish between several applications of the same type that a customer has.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "CloudError": {
      "type": "object",
      "description": "Error response structure.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Error data"
        }
      }
    },
    "CloudErrorBody": {
      "type": "object",
      "description": "Error details.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "readOnly": true
        }
      }
    },
    "ConditionType": {
      "type": "string",
      "enum": [
        "Property",
        "PropertyArray",
        "PropertyChanged",
        "PropertyArrayChanged",
        "Boolean"
      ],
      "x-ms-enum": {
        "name": "ConditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Property",
            "value": "Property",
            "description": "Evaluate an object property value"
          },
          {
            "name": "PropertyArray",
            "value": "PropertyArray",
            "description": "Evaluate an object array property value"
          },
          {
            "name": "PropertyChanged",
            "value": "PropertyChanged",
            "description": "Evaluate an object property changed value"
          },
          {
            "name": "PropertyArrayChanged",
            "value": "PropertyArrayChanged",
            "description": "Evaluate an object array property changed value"
          },
          {
            "name": "Boolean",
            "value": "Boolean",
            "description": "Apply a boolean operator (e.g AND, OR) to conditions"
          }
        ]
      }
    },
    "ConfidenceLevel": {
      "type": "string",
      "description": "The confidence level of this alert.",
      "enum": [
        "Unknown",
        "Low",
        "High"
      ],
      "x-ms-enum": {
        "name": "ConfidenceLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Unknown confidence, the is the default value"
          },
          {
            "name": "Low",
            "value": "Low",
            "description": "Low confidence, meaning we have some doubts this is indeed malicious or part of an attack"
          },
          {
            "name": "High",
            "value": "High",
            "description": "High confidence that the alert is true positive malicious"
          }
        ]
      }
    },
    "ConfidenceScoreStatus": {
      "type": "string",
      "description": "The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final.",
      "enum": [
        "NotApplicable",
        "InProcess",
        "NotFinal",
        "Final"
      ],
      "x-ms-enum": {
        "name": "ConfidenceScoreStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NotApplicable",
            "value": "NotApplicable",
            "description": "Score will not be calculated for this alert as it is not supported by virtual analyst"
          },
          {
            "name": "InProcess",
            "value": "InProcess",
            "description": "No score was set yet and calculation is in progress"
          },
          {
            "name": "NotFinal",
            "value": "NotFinal",
            "description": "Score is calculated and shown as part of the alert, but may be updated again at a later time following the processing of additional data"
          },
          {
            "name": "Final",
            "value": "Final",
            "description": "Final score was calculated and available"
          }
        ]
      }
    },
    "ConnectivityCriterion": {
      "type": "object",
      "description": "The criteria by which we determine whether the connector is connected or not.\nFor Example, use a KQL query to check if  the expected data type is flowing).",
      "properties": {
        "type": {
          "type": "string",
          "description": "Gets or sets the type of connectivity."
        },
        "value": {
          "type": "array",
          "description": "Gets or sets the queries for checking connectivity.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "ConnectorDataType": {
      "type": "object",
      "description": "The data type which is created by the connector,\nincluding a query indicated when was the last time that data type was received in the workspace.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the data type to show in the graph."
        },
        "lastDataReceivedQuery": {
          "type": "string",
          "description": "Gets or sets the query to indicate when relevant data was last received in the workspace."
        }
      },
      "required": [
        "name",
        "lastDataReceivedQuery"
      ]
    },
    "ConnectorDefinitionsAvailability": {
      "type": "object",
      "description": "The exposure status of the connector to the customers.",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "The exposure status of the connector to the customers. Available values are 0-4 (0=None, 1=Available, 2=FeatureFlag, 3=Internal)."
        },
        "isPreview": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the connector is preview."
        }
      }
    },
    "ConnectorDefinitionsPermissions": {
      "type": "object",
      "description": "The required Permissions for the connector.",
      "properties": {
        "tenant": {
          "type": "array",
          "description": "Gets or sets the required tenant permissions for the connector.",
          "items": {
            "type": "string"
          }
        },
        "licenses": {
          "type": "array",
          "description": "Gets or sets the required licenses for the user to create connections.",
          "items": {
            "type": "string"
          }
        },
        "resourceProvider": {
          "type": "array",
          "description": "Gets or sets the resource provider permissions required for the user to create connections.",
          "items": {
            "$ref": "#/definitions/ConnectorDefinitionsResourceProvider"
          },
          "x-ms-identifiers": []
        },
        "customs": {
          "type": "array",
          "description": "Gets or sets the customs permissions required for the user to create connections.",
          "items": {
            "$ref": "#/definitions/CustomPermissionDetails"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ConnectorDefinitionsResourceProvider": {
      "type": "object",
      "description": "The resource provider details include the required permissions for the user to create connections.\nThe user should have the required permissions(Read\\Write, ..) in the specified scope ProviderPermissionsScope against the specified resource provider.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Gets or sets the provider name."
        },
        "permissionsDisplayText": {
          "type": "string",
          "description": "Gets or sets the permissions description text."
        },
        "providerDisplayName": {
          "type": "string",
          "description": "Gets or sets the permissions provider display name."
        },
        "scope": {
          "$ref": "#/definitions/ProviderPermissionsScope",
          "description": "The scope on which the user should have permissions, in order to be able to create connections."
        },
        "requiredPermissions": {
          "$ref": "#/definitions/ResourceProviderRequiredPermissions",
          "description": "Required permissions for the connector resource provider that define in ResourceProviders.\nFor more information about the permissions see <see href=\"https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format\">here</see>."
        }
      },
      "required": [
        "provider",
        "permissionsDisplayText",
        "providerDisplayName",
        "scope",
        "requiredPermissions"
      ]
    },
    "ContentType": {
      "type": "string",
      "description": "The content type of a source control path.",
      "enum": [
        "AnalyticsRule",
        "AutomationRule",
        "HuntingQuery",
        "Parser",
        "Playbook",
        "Workbook"
      ],
      "x-ms-enum": {
        "name": "ContentType",
        "modelAsString": true,
        "values": [
          {
            "name": "AnalyticsRule",
            "value": "AnalyticsRule"
          },
          {
            "name": "AutomationRule",
            "value": "AutomationRule"
          },
          {
            "name": "HuntingQuery",
            "value": "HuntingQuery"
          },
          {
            "name": "Parser",
            "value": "Parser"
          },
          {
            "name": "Playbook",
            "value": "Playbook"
          },
          {
            "name": "Workbook",
            "value": "Workbook"
          }
        ]
      }
    },
    "CustomPermissionDetails": {
      "type": "object",
      "description": "The Custom permissions required for the connector.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the custom permissions name."
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the custom permissions description."
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "CustomizableConnectionsConfig": {
      "type": "object",
      "description": "The UiConfig for 'Customizable' connector definition kind.",
      "properties": {
        "templateSpecName": {
          "type": "string",
          "description": "Gets or sets the template name. The template includes ARM templates that can be created by the connector, usually it will be the dataConnectors ARM templates."
        },
        "templateSpecVersion": {
          "type": "string",
          "description": "Gets or sets the template version."
        }
      },
      "required": [
        "templateSpecName",
        "templateSpecVersion"
      ]
    },
    "CustomizableConnectorDefinition": {
      "type": "object",
      "description": "Connector definition for kind 'Customizable'.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomizableConnectorDefinitionProperties",
          "description": "Customizable properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The data connector kind",
          "enum": [
            "Customizable"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorDefinition"
        }
      ]
    },
    "CustomizableConnectorDefinitionProperties": {
      "type": "object",
      "description": "The UiConfig for 'Customizable' connector definition kind.",
      "properties": {
        "createdTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the connector definition created date in UTC format."
        },
        "lastModifiedUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the connector definition last modified date in UTC format."
        },
        "connectorUiConfig": {
          "$ref": "#/definitions/CustomizableConnectorUiConfig",
          "description": "The UiConfig for 'Customizable' connector definition kind."
        },
        "connectionsConfig": {
          "$ref": "#/definitions/CustomizableConnectionsConfig",
          "description": "The UiConfig for 'Customizable' connector definition kind."
        }
      },
      "required": [
        "connectorUiConfig"
      ]
    },
    "CustomizableConnectorUiConfig": {
      "type": "object",
      "description": "The UiConfig for 'Customizable' connector definition kind.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets custom connector id. optional field."
        },
        "title": {
          "type": "string",
          "description": "Gets or sets the connector blade title."
        },
        "publisher": {
          "type": "string",
          "description": "Gets or sets the connector publisher name."
        },
        "descriptionMarkdown": {
          "type": "string",
          "description": "Gets or sets the connector description in markdown format."
        },
        "graphQueries": {
          "type": "array",
          "description": "Gets or sets the graph queries to show the current data volume over time.",
          "items": {
            "$ref": "#/definitions/GraphQuery"
          },
          "x-ms-identifiers": []
        },
        "dataTypes": {
          "type": "array",
          "description": "Gets or sets the data types to check for last data received.",
          "items": {
            "$ref": "#/definitions/ConnectorDataType"
          },
          "x-ms-identifiers": []
        },
        "connectivityCriteria": {
          "type": "array",
          "description": "Gets or sets the way the connector checks whether the connector is connected.",
          "items": {
            "$ref": "#/definitions/ConnectivityCriterion"
          },
          "x-ms-identifiers": []
        },
        "availability": {
          "$ref": "#/definitions/ConnectorDefinitionsAvailability",
          "description": "The exposure status of the connector to the customers."
        },
        "permissions": {
          "$ref": "#/definitions/ConnectorDefinitionsPermissions",
          "description": "The required Permissions for the connector."
        },
        "instructionSteps": {
          "type": "array",
          "description": "Gets or sets the instruction steps to enable the connector.",
          "items": {
            "$ref": "#/definitions/InstructionStep"
          },
          "x-ms-identifiers": []
        },
        "logo": {
          "type": "string",
          "description": "Gets or sets the connector logo to be used when displaying the connector within Azure Sentinel's connector's gallery.\nThe logo value should be in SVG format."
        },
        "isConnectivityCriteriasMatchSome": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to use 'OR'(SOME) or 'AND' between ConnectivityCriteria items."
        }
      },
      "required": [
        "title",
        "publisher",
        "descriptionMarkdown",
        "graphQueries",
        "dataTypes",
        "connectivityCriteria",
        "permissions",
        "instructionSteps"
      ]
    },
    "DCRConfiguration": {
      "type": "object",
      "description": "The configuration of the destination of the data.",
      "properties": {
        "dataCollectionEndpoint": {
          "type": "string",
          "description": "Represents the data collection ingestion endpoint in log analytics."
        },
        "dataCollectionRuleImmutableId": {
          "type": "string",
          "description": "The data collection rule immutable id, the rule defines the transformation and data destination."
        },
        "streamName": {
          "type": "string",
          "description": "The stream we are sending the data to."
        }
      },
      "required": [
        "dataCollectionEndpoint",
        "dataCollectionRuleImmutableId",
        "streamName"
      ]
    },
    "DataConnector": {
      "type": "object",
      "description": "Data connector.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "$ref": "#/definitions/DataConnectorKind",
          "description": "The data connector kind"
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DataConnectorDataTypeCommon": {
      "type": "object",
      "description": "Common field for data type in data connectors.",
      "properties": {
        "state": {
          "$ref": "#/definitions/DataTypeState",
          "description": "Describe whether this data type connection is enabled or not."
        }
      }
    },
    "DataConnectorDefinition": {
      "type": "object",
      "description": "An Azure resource, which encapsulate the entire info requires to display a data connector page in Azure portal,\nand the info required to define data connections.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "$ref": "#/definitions/DataConnectorDefinitionKind",
          "description": "The data connector kind"
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DataConnectorDefinitionKind": {
      "type": "string",
      "description": "The kind of the data connector definitions",
      "enum": [
        "Customizable"
      ],
      "x-ms-enum": {
        "name": "DataConnectorDefinitionKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Customizable",
            "value": "Customizable"
          }
        ]
      }
    },
    "DataConnectorDefinitionListResult": {
      "type": "object",
      "description": "The response of a DataConnectorDefinition list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataConnectorDefinition items on this page",
          "items": {
            "$ref": "#/definitions/DataConnectorDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataConnectorKind": {
      "type": "string",
      "description": "The kind of the data connector",
      "enum": [
        "AzureActiveDirectory",
        "AzureSecurityCenter",
        "MicrosoftCloudAppSecurity",
        "ThreatIntelligence",
        "MicrosoftThreatIntelligence",
        "PremiumMicrosoftDefenderForThreatIntelligence",
        "Office365",
        "AmazonWebServicesCloudTrail",
        "AzureAdvancedThreatProtection",
        "MicrosoftDefenderAdvancedThreatProtection",
        "RestApiPoller"
      ],
      "x-ms-enum": {
        "name": "DataConnectorKind",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureActiveDirectory",
            "value": "AzureActiveDirectory"
          },
          {
            "name": "AzureSecurityCenter",
            "value": "AzureSecurityCenter"
          },
          {
            "name": "MicrosoftCloudAppSecurity",
            "value": "MicrosoftCloudAppSecurity"
          },
          {
            "name": "ThreatIntelligence",
            "value": "ThreatIntelligence"
          },
          {
            "name": "MicrosoftThreatIntelligence",
            "value": "MicrosoftThreatIntelligence"
          },
          {
            "name": "PremiumMicrosoftDefenderForThreatIntelligence",
            "value": "PremiumMicrosoftDefenderForThreatIntelligence"
          },
          {
            "name": "Office365",
            "value": "Office365"
          },
          {
            "name": "AmazonWebServicesCloudTrail",
            "value": "AmazonWebServicesCloudTrail"
          },
          {
            "name": "AzureAdvancedThreatProtection",
            "value": "AzureAdvancedThreatProtection"
          },
          {
            "name": "MicrosoftDefenderAdvancedThreatProtection",
            "value": "MicrosoftDefenderAdvancedThreatProtection"
          },
          {
            "name": "RestApiPoller",
            "value": "RestApiPoller"
          }
        ]
      }
    },
    "DataConnectorListResult": {
      "type": "object",
      "description": "The response of a DataConnector list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataConnector items on this page",
          "items": {
            "$ref": "#/definitions/DataConnector"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataConnectorTenantId": {
      "type": "object",
      "description": "Properties data connector on tenant level.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant id to connect to, and get the data from."
        }
      }
    },
    "DataConnectorWithAlertsProperties": {
      "type": "object",
      "description": "Data connector properties.",
      "properties": {
        "dataTypes": {
          "$ref": "#/definitions/AlertsDataTypeOfDataConnector",
          "description": "The available data types for the connector."
        }
      }
    },
    "DataTypeState": {
      "type": "string",
      "description": "Describe whether this data type connection is enabled or not.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "DataTypeState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "DeliveryAction": {
      "type": "string",
      "description": "The delivery action of this mail message like Delivered, Blocked, Replaced etc",
      "enum": [
        "Unknown",
        "DeliveredAsSpam",
        "Delivered",
        "Blocked",
        "Replaced"
      ],
      "x-ms-enum": {
        "name": "DeliveryAction",
        "modelAsString": false,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Unknown"
          },
          {
            "name": "DeliveredAsSpam",
            "value": "DeliveredAsSpam",
            "description": "DeliveredAsSpam"
          },
          {
            "name": "Delivered",
            "value": "Delivered",
            "description": "Delivered"
          },
          {
            "name": "Blocked",
            "value": "Blocked",
            "description": "Blocked"
          },
          {
            "name": "Replaced",
            "value": "Replaced",
            "description": "Replaced"
          }
        ]
      }
    },
    "DeliveryLocation": {
      "type": "string",
      "description": "The delivery location of this mail message like Inbox, JunkFolder etc",
      "enum": [
        "Unknown",
        "Inbox",
        "JunkFolder",
        "DeletedFolder",
        "Quarantine",
        "External",
        "Failed",
        "Dropped",
        "Forwarded"
      ],
      "x-ms-enum": {
        "name": "DeliveryLocation",
        "modelAsString": false,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Unknown"
          },
          {
            "name": "Inbox",
            "value": "Inbox",
            "description": "Inbox"
          },
          {
            "name": "JunkFolder",
            "value": "JunkFolder",
            "description": "JunkFolder"
          },
          {
            "name": "DeletedFolder",
            "value": "DeletedFolder",
            "description": "DeletedFolder"
          },
          {
            "name": "Quarantine",
            "value": "Quarantine",
            "description": "Quarantine"
          },
          {
            "name": "External",
            "value": "External",
            "description": "External"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed"
          },
          {
            "name": "Dropped",
            "value": "Dropped",
            "description": "Dropped"
          },
          {
            "name": "Forwarded",
            "value": "Forwarded",
            "description": "Forwarded"
          }
        ]
      }
    },
    "Deployment": {
      "type": "object",
      "description": "Description about a deployment.",
      "properties": {
        "deploymentId": {
          "type": "string",
          "description": "Deployment identifier."
        },
        "deploymentState": {
          "$ref": "#/definitions/DeploymentState",
          "description": "Current status of the deployment."
        },
        "deploymentResult": {
          "$ref": "#/definitions/DeploymentResult",
          "description": "The outcome of the deployment."
        },
        "deploymentTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the deployment finished."
        },
        "deploymentLogsUrl": {
          "type": "string",
          "description": "Url to access repository action logs."
        }
      }
    },
    "DeploymentFetchStatus": {
      "type": "string",
      "description": "Status while trying to fetch the deployment information.",
      "enum": [
        "Success",
        "Unauthorized",
        "NotFound"
      ],
      "x-ms-enum": {
        "name": "DeploymentFetchStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Success",
            "value": "Success"
          },
          {
            "name": "Unauthorized",
            "value": "Unauthorized"
          },
          {
            "name": "NotFound",
            "value": "NotFound"
          }
        ]
      }
    },
    "DeploymentInfo": {
      "type": "object",
      "description": "Information regarding a deployment.",
      "properties": {
        "deploymentFetchStatus": {
          "$ref": "#/definitions/DeploymentFetchStatus",
          "description": "Status while fetching the last deployment."
        },
        "deployment": {
          "$ref": "#/definitions/Deployment",
          "description": "Deployment information."
        },
        "message": {
          "type": "string",
          "description": "Additional details about the deployment that can be shown to the user."
        }
      }
    },
    "DeploymentResult": {
      "type": "string",
      "description": "Status while trying to fetch the deployment information.",
      "enum": [
        "Success",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "DeploymentResult",
        "modelAsString": true,
        "values": [
          {
            "name": "Success",
            "value": "Success"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "DeploymentState": {
      "type": "string",
      "description": "The current state of the deployment.",
      "enum": [
        "In_Progress",
        "Completed",
        "Queued",
        "Canceling"
      ],
      "x-ms-enum": {
        "name": "DeploymentState",
        "modelAsString": true,
        "values": [
          {
            "name": "In_Progress",
            "value": "In_Progress"
          },
          {
            "name": "Completed",
            "value": "Completed"
          },
          {
            "name": "Queued",
            "value": "Queued"
          },
          {
            "name": "Canceling",
            "value": "Canceling"
          }
        ]
      }
    },
    "DnsEntity": {
      "type": "object",
      "description": "Represents a dns entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsEntityProperties",
          "description": "Dns entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "DnsResolution"
    },
    "DnsEntityProperties": {
      "type": "object",
      "description": "Dns entity property bag.",
      "properties": {
        "dnsServerIpEntityId": {
          "type": "string",
          "description": "An ip entity id for the dns server resolving the request",
          "readOnly": true
        },
        "domainName": {
          "type": "string",
          "description": "The name of the dns record associated with the alert",
          "readOnly": true
        },
        "hostIpAddressEntityId": {
          "type": "string",
          "description": "An ip entity id for the dns request client",
          "readOnly": true
        },
        "ipAddressEntityIds": {
          "type": "array",
          "description": "Ip entity identifiers for the resolved ip address.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "ElevationToken": {
      "type": "string",
      "description": "The elevation token associated with the process.",
      "enum": [
        "Default",
        "Full",
        "Limited"
      ],
      "x-ms-enum": {
        "name": "ElevationToken",
        "modelAsString": false,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "Default elevation token"
          },
          {
            "name": "Full",
            "value": "Full",
            "description": "Full elevation token"
          },
          {
            "name": "Limited",
            "value": "Limited",
            "description": "Limited elevation token"
          }
        ]
      }
    },
    "Entity": {
      "type": "object",
      "description": "Specific entity.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/EntityKindEnum",
          "description": "The kind of the entity."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "EntityCommonProperties": {
      "type": "object",
      "description": "Entity common property bag.",
      "properties": {
        "additionalData": {
          "type": "object",
          "description": "A bag of custom fields that should be part of the entity and will be presented to the user.",
          "additionalProperties": {},
          "readOnly": true
        },
        "friendlyName": {
          "type": "string",
          "description": "The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.",
          "readOnly": true
        }
      }
    },
    "EntityKindEnum": {
      "type": "string",
      "description": "The kind of the entity",
      "enum": [
        "Account",
        "Host",
        "File",
        "AzureResource",
        "CloudApplication",
        "DnsResolution",
        "FileHash",
        "Ip",
        "Malware",
        "Process",
        "RegistryKey",
        "RegistryValue",
        "SecurityGroup",
        "Url",
        "IoTDevice",
        "SecurityAlert",
        "Bookmark",
        "MailCluster",
        "MailMessage",
        "Mailbox",
        "SubmissionMail"
      ],
      "x-ms-enum": {
        "name": "EntityKindEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Account",
            "value": "Account",
            "description": "Entity represents account in the system."
          },
          {
            "name": "Host",
            "value": "Host",
            "description": "Entity represents host in the system."
          },
          {
            "name": "File",
            "value": "File",
            "description": "Entity represents file in the system."
          },
          {
            "name": "AzureResource",
            "value": "AzureResource",
            "description": "Entity represents azure resource in the system."
          },
          {
            "name": "CloudApplication",
            "value": "CloudApplication",
            "description": "Entity represents cloud application in the system."
          },
          {
            "name": "DnsResolution",
            "value": "DnsResolution",
            "description": "Entity represents dns resolution in the system."
          },
          {
            "name": "FileHash",
            "value": "FileHash",
            "description": "Entity represents file hash in the system."
          },
          {
            "name": "Ip",
            "value": "Ip",
            "description": "Entity represents ip in the system."
          },
          {
            "name": "Malware",
            "value": "Malware",
            "description": "Entity represents malware in the system."
          },
          {
            "name": "Process",
            "value": "Process",
            "description": "Entity represents process in the system."
          },
          {
            "name": "RegistryKey",
            "value": "RegistryKey",
            "description": "Entity represents registry key in the system."
          },
          {
            "name": "RegistryValue",
            "value": "RegistryValue",
            "description": "Entity represents registry value in the system."
          },
          {
            "name": "SecurityGroup",
            "value": "SecurityGroup",
            "description": "Entity represents security group in the system."
          },
          {
            "name": "Url",
            "value": "Url",
            "description": "Entity represents url in the system."
          },
          {
            "name": "IoTDevice",
            "value": "IoTDevice",
            "description": "Entity represents IoT device in the system."
          },
          {
            "name": "SecurityAlert",
            "value": "SecurityAlert",
            "description": "Entity represents security alert in the system."
          },
          {
            "name": "Bookmark",
            "value": "Bookmark",
            "description": "Entity represents bookmark in the system."
          },
          {
            "name": "MailCluster",
            "value": "MailCluster",
            "description": "Entity represents mail cluster in the system."
          },
          {
            "name": "MailMessage",
            "value": "MailMessage",
            "description": "Entity represents mail message in the system."
          },
          {
            "name": "Mailbox",
            "value": "Mailbox",
            "description": "Entity represents mailbox in the system."
          },
          {
            "name": "SubmissionMail",
            "value": "SubmissionMail",
            "description": "Entity represents submission mail in the system."
          }
        ]
      }
    },
    "EntityManualTriggerRequestBody": {
      "type": "object",
      "description": "Describes the request body for triggering a playbook on an entity.",
      "properties": {
        "incidentArmId": {
          "type": "string",
          "format": "arm-id",
          "description": "The incident id to associate the entity with.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.SecurityInsights/incidents"
              }
            ]
          }
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant id of the playbook resource."
        },
        "logicAppsResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource id of the playbook resource.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Logic/workflows"
              },
              {
                "type": "Microsoft.Web/sites"
              }
            ]
          }
        }
      },
      "required": [
        "logicAppsResourceId"
      ]
    },
    "EntityMapping": {
      "type": "object",
      "description": "Single entity mapping for the alert rule",
      "properties": {
        "entityType": {
          "$ref": "#/definitions/EntityMappingType",
          "description": "The V3 type of the mapped entity"
        },
        "fieldMappings": {
          "type": "array",
          "description": "array of field mappings for the given entity mapping",
          "items": {
            "$ref": "#/definitions/FieldMapping"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "EntityMappingType": {
      "type": "string",
      "description": "The V3 type of the mapped entity",
      "enum": [
        "Account",
        "Host",
        "IP",
        "Malware",
        "File",
        "Process",
        "CloudApplication",
        "DNS",
        "AzureResource",
        "FileHash",
        "RegistryKey",
        "RegistryValue",
        "SecurityGroup",
        "URL",
        "Mailbox",
        "MailCluster",
        "MailMessage",
        "SubmissionMail"
      ],
      "x-ms-enum": {
        "name": "EntityMappingType",
        "modelAsString": true,
        "values": [
          {
            "name": "Account",
            "value": "Account",
            "description": "User account entity type"
          },
          {
            "name": "Host",
            "value": "Host",
            "description": "Host entity type"
          },
          {
            "name": "IP",
            "value": "IP",
            "description": "IP address entity type"
          },
          {
            "name": "Malware",
            "value": "Malware",
            "description": "Malware entity type"
          },
          {
            "name": "File",
            "value": "File",
            "description": "System file entity type"
          },
          {
            "name": "Process",
            "value": "Process",
            "description": "Process entity type"
          },
          {
            "name": "CloudApplication",
            "value": "CloudApplication",
            "description": "Cloud app entity type"
          },
          {
            "name": "DNS",
            "value": "DNS",
            "description": "DNS entity type"
          },
          {
            "name": "AzureResource",
            "value": "AzureResource",
            "description": "Azure resource entity type"
          },
          {
            "name": "FileHash",
            "value": "FileHash",
            "description": "File-hash entity type"
          },
          {
            "name": "RegistryKey",
            "value": "RegistryKey",
            "description": "Registry key entity type"
          },
          {
            "name": "RegistryValue",
            "value": "RegistryValue",
            "description": "Registry value entity type"
          },
          {
            "name": "SecurityGroup",
            "value": "SecurityGroup",
            "description": "Security group entity type"
          },
          {
            "name": "URL",
            "value": "URL",
            "description": "URL entity type"
          },
          {
            "name": "Mailbox",
            "value": "Mailbox",
            "description": "Mailbox entity type"
          },
          {
            "name": "MailCluster",
            "value": "MailCluster",
            "description": "Mail cluster entity type"
          },
          {
            "name": "MailMessage",
            "value": "MailMessage",
            "description": "Mail message entity type"
          },
          {
            "name": "SubmissionMail",
            "value": "SubmissionMail",
            "description": "Submission mail entity type"
          }
        ]
      }
    },
    "EventGroupingAggregationKind": {
      "type": "string",
      "description": "The event grouping aggregation kinds",
      "enum": [
        "SingleAlert",
        "AlertPerResult"
      ],
      "x-ms-enum": {
        "name": "EventGroupingAggregationKind",
        "modelAsString": true,
        "values": [
          {
            "name": "SingleAlert",
            "value": "SingleAlert"
          },
          {
            "name": "AlertPerResult",
            "value": "AlertPerResult"
          }
        ]
      }
    },
    "EventGroupingSettings": {
      "type": "object",
      "description": "Event grouping settings property bag.",
      "properties": {
        "aggregationKind": {
          "$ref": "#/definitions/EventGroupingAggregationKind",
          "description": "The event grouping aggregation kinds"
        }
      }
    },
    "FieldMapping": {
      "type": "object",
      "description": "A single field mapping of the mapped entity",
      "properties": {
        "identifier": {
          "type": "string",
          "description": "the V3 identifier of the entity"
        },
        "columnName": {
          "type": "string",
          "description": "the column name to be mapped to the identifier"
        }
      }
    },
    "FileEntity": {
      "type": "object",
      "description": "Represents a file entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileEntityProperties",
          "description": "File entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "File"
    },
    "FileEntityProperties": {
      "type": "object",
      "description": "File entity property bag.",
      "properties": {
        "directory": {
          "type": "string",
          "description": "The full path to the file.",
          "readOnly": true
        },
        "fileHashEntityIds": {
          "type": "array",
          "description": "The file hash entity identifiers associated with this file",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "fileName": {
          "type": "string",
          "description": "The file name without path (some alerts might not include path).",
          "readOnly": true
        },
        "hostEntityId": {
          "type": "string",
          "description": "The Host entity id which the file belongs to",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "FileHashAlgorithm": {
      "type": "string",
      "description": "The hash algorithm type.",
      "enum": [
        "Unknown",
        "MD5",
        "SHA1",
        "SHA256",
        "SHA256AC"
      ],
      "x-ms-enum": {
        "name": "FileHashAlgorithm",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Unknown hash algorithm"
          },
          {
            "name": "MD5",
            "value": "MD5",
            "description": "MD5 hash type"
          },
          {
            "name": "SHA1",
            "value": "SHA1",
            "description": "SHA1 hash type"
          },
          {
            "name": "SHA256",
            "value": "SHA256",
            "description": "SHA256 hash type"
          },
          {
            "name": "SHA256AC",
            "value": "SHA256AC",
            "description": "SHA256 Authenticode hash type"
          }
        ]
      }
    },
    "FileHashEntity": {
      "type": "object",
      "description": "Represents a file hash entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileHashEntityProperties",
          "description": "FileHash entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "FileHash"
    },
    "FileHashEntityProperties": {
      "type": "object",
      "description": "FileHash entity property bag.",
      "properties": {
        "algorithm": {
          "$ref": "#/definitions/FileHashAlgorithm",
          "description": "The hash algorithm type.",
          "readOnly": true
        },
        "hashValue": {
          "type": "string",
          "description": "The file hash value.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "Flag": {
      "type": "string",
      "description": "The boolean value the metadata is for.",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "Flag",
        "modelAsString": true,
        "values": [
          {
            "name": "true",
            "value": "true"
          },
          {
            "name": "false",
            "value": "false"
          }
        ]
      }
    },
    "FusionAlertRule": {
      "type": "object",
      "description": "Represents Fusion alert rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FusionAlertRuleProperties",
          "description": "Fusion alert rule properties",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The alert rule kind",
          "enum": [
            "Fusion"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AlertRule"
        }
      ]
    },
    "FusionAlertRuleProperties": {
      "type": "object",
      "description": "Fusion alert rule base property bag.",
      "properties": {
        "alertRuleTemplateName": {
          "type": "string",
          "description": "The Name of the alert rule template used to create this rule."
        },
        "description": {
          "type": "string",
          "description": "The description of the alert rule.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The display name for alerts created by this alert rule.",
          "readOnly": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Determines whether this alert rule is enabled or disabled."
        },
        "lastModifiedUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The last time that this alert has been modified.",
          "readOnly": true
        },
        "severity": {
          "$ref": "#/definitions/AlertSeverity",
          "description": "The severity for alerts created by this alert rule.",
          "readOnly": true
        },
        "tactics": {
          "type": "array",
          "description": "The tactics of the alert rule",
          "items": {
            "$ref": "#/definitions/AttackTactic"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "techniques": {
          "type": "array",
          "description": "The techniques of the alert rule",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "alertRuleTemplateName",
        "enabled"
      ]
    },
    "FusionAlertRuleTemplate": {
      "type": "object",
      "description": "Represents Fusion alert rule template.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FusionAlertRuleTemplateProperties",
          "description": "Fusion alert rule template properties",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The alert rule kind",
          "enum": [
            "Fusion"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AlertRuleTemplate"
        }
      ]
    },
    "FusionAlertRuleTemplateProperties": {
      "type": "object",
      "description": "Represents Fusion alert rule template properties",
      "properties": {
        "alertRulesCreatedByTemplateCount": {
          "type": "integer",
          "format": "int32",
          "description": "the number of alert rules that were created by this template"
        },
        "createdDateUTC": {
          "type": "string",
          "format": "date-time",
          "description": "The time that this alert rule template has been added.",
          "readOnly": true
        },
        "lastUpdatedDateUTC": {
          "type": "string",
          "format": "date-time",
          "description": "The time that this alert rule template was last updated.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the alert rule template."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for alert rule template."
        },
        "requiredDataConnectors": {
          "type": "array",
          "description": "The required data connectors for this template",
          "items": {
            "$ref": "#/definitions/AlertRuleTemplateDataSource"
          },
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/TemplateStatus",
          "description": "The alert rule template status."
        },
        "severity": {
          "$ref": "#/definitions/AlertSeverity",
          "description": "The severity for alerts created by this alert rule."
        },
        "tactics": {
          "type": "array",
          "description": "The tactics of the alert rule template",
          "items": {
            "$ref": "#/definitions/AttackTactic"
          },
          "x-ms-identifiers": []
        },
        "techniques": {
          "type": "array",
          "description": "The techniques of the alert rule template",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GCPAuthModel": {
      "type": "object",
      "description": "Model for API authentication for all GCP kind connectors.",
      "properties": {
        "serviceAccountEmail": {
          "type": "string",
          "description": "GCP Service Account Email"
        },
        "projectNumber": {
          "type": "string",
          "description": "GCP Project Number"
        },
        "workloadIdentityProviderId": {
          "type": "string",
          "description": "GCP Workload Identity Provider ID"
        }
      },
      "required": [
        "serviceAccountEmail",
        "projectNumber",
        "workloadIdentityProviderId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "x-ms-discriminator-value": "GCP"
    },
    "GenericBlobSbsAuthModel": {
      "type": "object",
      "description": "Model for API authentication for working with service bus or storage account.",
      "properties": {
        "credentialsConfig": {
          "type": "object",
          "description": "Credentials for service bus namespace, keyvault uri for access key",
          "additionalProperties": {
            "type": "string"
          }
        },
        "storageAccountCredentialsConfig": {
          "type": "object",
          "description": "Credentials for storage account, keyvault uri for access key",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "x-ms-discriminator-value": "ServiceBus"
    },
    "GeoLocation": {
      "type": "object",
      "description": "The geo-location context attached to the ip entity",
      "properties": {
        "asn": {
          "type": "integer",
          "format": "int32",
          "description": "Autonomous System Number",
          "readOnly": true
        },
        "city": {
          "type": "string",
          "description": "City name",
          "readOnly": true
        },
        "countryCode": {
          "type": "string",
          "description": "The country code according to ISO 3166 format",
          "readOnly": true
        },
        "countryName": {
          "type": "string",
          "description": "Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name",
          "readOnly": true
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or postal code.",
          "readOnly": true
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or postal code.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "State name",
          "readOnly": true
        }
      }
    },
    "GitHubAuthModel": {
      "type": "object",
      "description": "Model for API authentication for GitHub. For this authentication first we need to approve the Router app (Microsoft Security DevOps) to access the GitHub account, Then we only need the InstallationId to get the access token from https://api.github.com/app/installations/{installId}/access_tokens.",
      "properties": {
        "installationId": {
          "type": "string",
          "description": "The GitHubApp auth installation id."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "x-ms-discriminator-value": "GitHub"
    },
    "GitHubResourceInfo": {
      "type": "object",
      "description": "Resources created in GitHub repository.",
      "properties": {
        "appInstallationId": {
          "type": "string",
          "description": "GitHub application installation id."
        }
      }
    },
    "GraphQuery": {
      "type": "object",
      "description": "The graph query to show the volume of data arriving into the workspace over time.",
      "properties": {
        "metricName": {
          "type": "string",
          "description": "Gets or sets the metric name that the query is checking. For example: 'Total data receive'."
        },
        "legend": {
          "type": "string",
          "description": "Gets or sets the legend for the graph."
        },
        "baseQuery": {
          "type": "string",
          "description": "Gets or sets the base query for the graph.\nThe base query is wrapped by Sentinel UI infra with a KQL query, that measures the volume over time."
        }
      },
      "required": [
        "metricName",
        "legend",
        "baseQuery"
      ]
    },
    "GroupingConfiguration": {
      "type": "object",
      "description": "Grouping configuration property bag.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Grouping enabled"
        },
        "reopenClosedIncident": {
          "type": "boolean",
          "description": "Re-open closed matching incidents"
        },
        "lookbackDuration": {
          "type": "string",
          "format": "duration",
          "description": "Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)"
        },
        "matchingMethod": {
          "$ref": "#/definitions/MatchingMethod",
          "description": "Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty."
        },
        "groupByEntities": {
          "type": "array",
          "description": "A list of entity types to group by (when matchingMethod is Selected). Only entities defined in the current alert rule may be used.",
          "items": {
            "$ref": "#/definitions/EntityMappingType"
          },
          "x-ms-identifiers": []
        },
        "groupByAlertDetails": {
          "type": "array",
          "description": "A list of alert details to group by (when matchingMethod is Selected)",
          "items": {
            "$ref": "#/definitions/AlertDetail"
          },
          "x-ms-identifiers": []
        },
        "groupByCustomDetails": {
          "type": "array",
          "description": "A list of custom details keys to group by (when matchingMethod is Selected). Only keys defined in the current alert rule may be used.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "enabled",
        "reopenClosedIncident",
        "lookbackDuration",
        "matchingMethod"
      ]
    },
    "HostEntity": {
      "type": "object",
      "description": "Represents a host entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HostEntityProperties",
          "description": "Host entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "Host"
    },
    "HostEntityProperties": {
      "type": "object",
      "description": "Host entity property bag.",
      "properties": {
        "azureID": {
          "type": "string",
          "description": "The azure resource id of the VM.",
          "readOnly": true
        },
        "dnsDomain": {
          "type": "string",
          "description": "The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain",
          "readOnly": true
        },
        "hostName": {
          "type": "string",
          "description": "The hostname without the domain suffix.",
          "readOnly": true
        },
        "isDomainJoined": {
          "type": "boolean",
          "description": "Determines whether this host belongs to a domain.",
          "readOnly": true
        },
        "netBiosName": {
          "type": "string",
          "description": "The host name (pre-windows2000).",
          "readOnly": true
        },
        "ntDomain": {
          "type": "string",
          "description": "The NT domain that this host belongs to.",
          "readOnly": true
        },
        "omsAgentID": {
          "type": "string",
          "description": "The OMS agent id, if the host has OMS agent installed.",
          "readOnly": true
        },
        "osFamily": {
          "$ref": "#/definitions/OSFamily",
          "description": "The operating system type."
        },
        "osVersion": {
          "type": "string",
          "description": "A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained than OSFamily or future values not supported by OSFamily enumeration",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "HttpMethodVerb": {
      "type": "string",
      "description": "The HTTP method, default value GET.",
      "enum": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "x-ms-enum": {
        "name": "HttpMethodVerb",
        "modelAsString": true,
        "values": [
          {
            "name": "GET",
            "value": "GET"
          },
          {
            "name": "POST",
            "value": "POST"
          },
          {
            "name": "PUT",
            "value": "PUT"
          },
          {
            "name": "DELETE",
            "value": "DELETE"
          }
        ]
      }
    },
    "HuntingBookmark": {
      "type": "object",
      "description": "Represents a Hunting bookmark entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HuntingBookmarkProperties",
          "description": "HuntingBookmark entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "Bookmark"
    },
    "HuntingBookmarkProperties": {
      "type": "object",
      "description": "Describes bookmark properties",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time the bookmark was created"
        },
        "createdBy": {
          "$ref": "#/definitions/UserInfo",
          "description": "Describes a user that created the bookmark"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the bookmark"
        },
        "eventTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the event"
        },
        "labels": {
          "type": "array",
          "description": "List of labels relevant to this bookmark",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "notes": {
          "type": "string",
          "description": "The notes of the bookmark"
        },
        "query": {
          "type": "string",
          "description": "The query of the bookmark."
        },
        "queryResult": {
          "type": "string",
          "description": "The query result of the bookmark."
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The last time the bookmark was updated"
        },
        "updatedBy": {
          "$ref": "#/definitions/UserInfo",
          "description": "Describes a user that updated the bookmark"
        },
        "incidentInfo": {
          "$ref": "#/definitions/IncidentInfo",
          "description": "Describes an incident that relates to bookmark"
        }
      },
      "required": [
        "displayName",
        "query"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "Incident": {
      "type": "object",
      "description": "Represents an incident in Azure Security Insights.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IncidentProperties",
          "description": "Incident properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IncidentAdditionalData": {
      "type": "object",
      "description": "Incident additional data property bag.",
      "properties": {
        "alertsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of alerts in the incident",
          "readOnly": true
        },
        "bookmarksCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of bookmarks in the incident",
          "readOnly": true
        },
        "commentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of comments in the incident",
          "readOnly": true
        },
        "alertProductNames": {
          "type": "array",
          "description": "List of product names of alerts in the incident",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "tactics": {
          "type": "array",
          "description": "The tactics associated with incident",
          "items": {
            "$ref": "#/definitions/AttackTactic"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "providerIncidentUrl": {
          "type": "string",
          "description": "The provider incident url to the incident in Microsoft 365 Defender portal",
          "readOnly": true
        }
      }
    },
    "IncidentAlertList": {
      "type": "object",
      "description": "List of incident alerts.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of incident alerts.",
          "items": {
            "$ref": "#/definitions/SecurityAlert"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "IncidentBookmarkList": {
      "type": "object",
      "description": "List of incident bookmarks.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of incident bookmarks.",
          "items": {
            "$ref": "#/definitions/HuntingBookmark"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "IncidentClassification": {
      "type": "string",
      "description": "The reason the incident was closed",
      "enum": [
        "Undetermined",
        "TruePositive",
        "BenignPositive",
        "FalsePositive"
      ],
      "x-ms-enum": {
        "name": "IncidentClassification",
        "modelAsString": true,
        "values": [
          {
            "name": "Undetermined",
            "value": "Undetermined",
            "description": "Incident classification was undetermined"
          },
          {
            "name": "TruePositive",
            "value": "TruePositive",
            "description": "Incident was true positive"
          },
          {
            "name": "BenignPositive",
            "value": "BenignPositive",
            "description": "Incident was benign positive"
          },
          {
            "name": "FalsePositive",
            "value": "FalsePositive",
            "description": "Incident was false positive"
          }
        ]
      }
    },
    "IncidentClassificationReason": {
      "type": "string",
      "description": "The classification reason the incident was closed with",
      "enum": [
        "SuspiciousActivity",
        "SuspiciousButExpected",
        "IncorrectAlertLogic",
        "InaccurateData"
      ],
      "x-ms-enum": {
        "name": "IncidentClassificationReason",
        "modelAsString": true,
        "values": [
          {
            "name": "SuspiciousActivity",
            "value": "SuspiciousActivity",
            "description": "Classification reason was suspicious activity"
          },
          {
            "name": "SuspiciousButExpected",
            "value": "SuspiciousButExpected",
            "description": "Classification reason was suspicious but expected"
          },
          {
            "name": "IncorrectAlertLogic",
            "value": "IncorrectAlertLogic",
            "description": "Classification reason was incorrect alert logic"
          },
          {
            "name": "InaccurateData",
            "value": "InaccurateData",
            "description": "Classification reason was inaccurate data"
          }
        ]
      }
    },
    "IncidentComment": {
      "type": "object",
      "description": "Represents an incident comment",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IncidentCommentProperties",
          "description": "Incident comment properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IncidentCommentList": {
      "type": "object",
      "description": "List of incident comments.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IncidentComment items on this page",
          "items": {
            "$ref": "#/definitions/IncidentComment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IncidentCommentProperties": {
      "type": "object",
      "description": "Incident comment property bag.",
      "properties": {
        "createdTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The time the comment was created",
          "readOnly": true
        },
        "lastModifiedTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The time the comment was updated",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The comment message"
        },
        "author": {
          "$ref": "#/definitions/ClientInfo",
          "description": "Describes the client that created the comment",
          "readOnly": true
        }
      },
      "required": [
        "message"
      ]
    },
    "IncidentConfiguration": {
      "type": "object",
      "description": "Incident Configuration property bag.",
      "properties": {
        "createIncident": {
          "type": "boolean",
          "description": "Create incidents from alerts triggered by this analytics rule"
        },
        "groupingConfiguration": {
          "$ref": "#/definitions/GroupingConfiguration",
          "description": "Set how the alerts that are triggered by this analytics rule, are grouped into incidents"
        }
      },
      "required": [
        "createIncident"
      ]
    },
    "IncidentEntitiesResponse": {
      "type": "object",
      "description": "The incident related entities response.",
      "properties": {
        "entities": {
          "type": "array",
          "description": "Array of the incident related entities.",
          "items": {
            "$ref": "#/definitions/Entity"
          },
          "x-ms-identifiers": []
        },
        "metaData": {
          "type": "array",
          "description": "The metadata from the incident related entities results.",
          "items": {
            "$ref": "#/definitions/IncidentEntitiesResultsMetadata"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IncidentEntitiesResultsMetadata": {
      "type": "object",
      "description": "Information of a specific aggregation in the incident related entities result.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of aggregations of the given kind in the incident related entities result."
        },
        "entityKind": {
          "$ref": "#/definitions/EntityKindEnum",
          "description": "The kind of the aggregated entity."
        }
      },
      "required": [
        "count",
        "entityKind"
      ]
    },
    "IncidentInfo": {
      "type": "object",
      "description": "Describes related incident information for the bookmark",
      "properties": {
        "incidentId": {
          "type": "string",
          "description": "Incident Id"
        },
        "severity": {
          "$ref": "#/definitions/IncidentSeverity",
          "description": "The severity of the incident"
        },
        "title": {
          "type": "string",
          "description": "The title of the incident"
        },
        "relationName": {
          "type": "string",
          "description": "Relation Name"
        }
      }
    },
    "IncidentLabel": {
      "type": "object",
      "description": "Represents an incident label",
      "properties": {
        "labelName": {
          "type": "string",
          "description": "The name of the label"
        },
        "labelType": {
          "$ref": "#/definitions/IncidentLabelType",
          "description": "The type of the label",
          "readOnly": true
        }
      },
      "required": [
        "labelName"
      ]
    },
    "IncidentLabelType": {
      "type": "string",
      "description": "The type of the label",
      "enum": [
        "User",
        "AutoAssigned"
      ],
      "x-ms-enum": {
        "name": "IncidentLabelType",
        "modelAsString": true,
        "values": [
          {
            "name": "User",
            "value": "User",
            "description": "Label manually created by a user"
          },
          {
            "name": "AutoAssigned",
            "value": "AutoAssigned",
            "description": "Label automatically created by the system"
          }
        ]
      }
    },
    "IncidentList": {
      "type": "object",
      "description": "List all the incidents.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Incident items on this page",
          "items": {
            "$ref": "#/definitions/Incident"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IncidentOwnerInfo": {
      "type": "object",
      "description": "Information on the user an incident is assigned to",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email of the user the incident is assigned to."
        },
        "assignedTo": {
          "type": "string",
          "description": "The name of the user the incident is assigned to."
        },
        "objectId": {
          "type": "string",
          "format": "uuid",
          "description": "The object id of the user the incident is assigned to."
        },
        "userPrincipalName": {
          "type": "string",
          "description": "The user principal name of the user the incident is assigned to."
        },
        "ownerType": {
          "$ref": "#/definitions/OwnerType",
          "description": "The type of the owner the incident is assigned to."
        }
      }
    },
    "IncidentProperties": {
      "type": "object",
      "description": "Describes incident properties",
      "properties": {
        "additionalData": {
          "$ref": "#/definitions/IncidentAdditionalData",
          "description": "Additional data on the incident",
          "readOnly": true
        },
        "classification": {
          "$ref": "#/definitions/IncidentClassification",
          "description": "The reason the incident was closed"
        },
        "classificationComment": {
          "type": "string",
          "description": "Describes the reason the incident was closed"
        },
        "classificationReason": {
          "$ref": "#/definitions/IncidentClassificationReason",
          "description": "The classification reason the incident was closed with"
        },
        "createdTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The time the incident was created",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the incident"
        },
        "firstActivityTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the first activity in the incident"
        },
        "incidentUrl": {
          "type": "string",
          "description": "The deep-link url to the incident in Azure portal",
          "readOnly": true
        },
        "providerName": {
          "type": "string",
          "description": "The name of the source provider that generated the incident",
          "readOnly": true
        },
        "providerIncidentId": {
          "type": "string",
          "description": "The incident ID assigned by the incident provider",
          "readOnly": true
        },
        "incidentNumber": {
          "type": "integer",
          "format": "int32",
          "description": "A sequential number",
          "readOnly": true
        },
        "labels": {
          "type": "array",
          "description": "List of labels relevant to this incident",
          "items": {
            "$ref": "#/definitions/IncidentLabel"
          },
          "x-ms-identifiers": []
        },
        "lastActivityTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the last activity in the incident"
        },
        "lastModifiedTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The last time the incident was updated",
          "readOnly": true
        },
        "owner": {
          "$ref": "#/definitions/IncidentOwnerInfo",
          "description": "Describes a user that the incident is assigned to"
        },
        "relatedAnalyticRuleIds": {
          "type": "array",
          "description": "List of resource ids of Analytic rules related to the incident",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource.",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.SecurityInsights/alertRules"
                }
              ]
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "severity": {
          "$ref": "#/definitions/IncidentSeverity",
          "description": "The severity of the incident"
        },
        "status": {
          "$ref": "#/definitions/IncidentStatus",
          "description": "The status of the incident"
        },
        "title": {
          "type": "string",
          "description": "The title of the incident"
        }
      },
      "required": [
        "severity",
        "status",
        "title"
      ]
    },
    "IncidentPropertiesAction": {
      "type": "object",
      "properties": {
        "severity": {
          "$ref": "#/definitions/IncidentSeverity",
          "description": "The severity of the incident"
        },
        "status": {
          "$ref": "#/definitions/IncidentStatus",
          "description": "The status of the incident"
        },
        "classification": {
          "$ref": "#/definitions/IncidentClassification",
          "description": "The reason the incident was closed"
        },
        "classificationReason": {
          "$ref": "#/definitions/IncidentClassificationReason",
          "description": "The classification reason the incident was closed with"
        },
        "classificationComment": {
          "type": "string",
          "description": "Describes the reason the incident was closed."
        },
        "owner": {
          "$ref": "#/definitions/IncidentOwnerInfo",
          "description": "Information on the user an incident is assigned to"
        },
        "labels": {
          "type": "array",
          "description": "List of labels to add to the incident.",
          "items": {
            "$ref": "#/definitions/IncidentLabel"
          },
          "x-ms-identifiers": [
            "labelName"
          ]
        }
      }
    },
    "IncidentSeverity": {
      "type": "string",
      "description": "The severity of the incident",
      "enum": [
        "High",
        "Medium",
        "Low",
        "Informational"
      ],
      "x-ms-enum": {
        "name": "IncidentSeverity",
        "modelAsString": true,
        "values": [
          {
            "name": "High",
            "value": "High",
            "description": "High severity"
          },
          {
            "name": "Medium",
            "value": "Medium",
            "description": "Medium severity"
          },
          {
            "name": "Low",
            "value": "Low",
            "description": "Low severity"
          },
          {
            "name": "Informational",
            "value": "Informational",
            "description": "Informational severity"
          }
        ]
      }
    },
    "IncidentStatus": {
      "type": "string",
      "description": "The status of the incident",
      "enum": [
        "New",
        "Active",
        "Closed"
      ],
      "x-ms-enum": {
        "name": "IncidentStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "New",
            "value": "New",
            "description": "An active incident which isn't being handled currently"
          },
          {
            "name": "Active",
            "value": "Active",
            "description": "An active incident which is being handled"
          },
          {
            "name": "Closed",
            "value": "Closed",
            "description": "A non-active incident"
          }
        ]
      }
    },
    "IncidentTask": {
      "type": "object",
      "description": "Describes incident task properties",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IncidentTaskProperties",
          "description": "Describes the properties of an incident task",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IncidentTaskList": {
      "type": "object",
      "description": "List of incident tasks",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IncidentTask items on this page",
          "items": {
            "$ref": "#/definitions/IncidentTask"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IncidentTaskProperties": {
      "type": "object",
      "description": "Describes the properties of an incident task",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the task"
        },
        "description": {
          "type": "string",
          "description": "The description of the task"
        },
        "status": {
          "$ref": "#/definitions/IncidentTaskStatus",
          "description": "The status of the task"
        },
        "createdTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The time the task was created",
          "readOnly": true
        },
        "lastModifiedTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The last time the task was updated",
          "readOnly": true
        },
        "createdBy": {
          "$ref": "#/definitions/ClientInfo",
          "description": "Information on the client (user or application) that made some action"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/ClientInfo",
          "description": "Information on the client (user or application) that made some action"
        }
      },
      "required": [
        "title",
        "status"
      ]
    },
    "IncidentTaskStatus": {
      "type": "string",
      "description": "The status of the task",
      "enum": [
        "New",
        "Completed"
      ],
      "x-ms-enum": {
        "name": "IncidentTaskStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "New",
            "value": "New",
            "description": "A new task"
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "A completed task"
          }
        ]
      }
    },
    "InstructionStep": {
      "type": "object",
      "description": "Instruction steps to enable the connector.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Gets or sets the instruction step title."
        },
        "description": {
          "type": "string",
          "description": "Gets or sets the instruction step description."
        },
        "instructions": {
          "type": "array",
          "description": "Gets or sets the instruction step details.",
          "items": {
            "$ref": "#/definitions/InstructionStepDetails"
          },
          "x-ms-identifiers": []
        },
        "innerSteps": {
          "type": "array",
          "description": "Gets or sets the inner instruction steps details.\nFor Example: instruction step 1 might contain inner instruction steps: [instruction step 1.1, instruction step 1.2].",
          "items": {
            "$ref": "#/definitions/InstructionStep"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "InstructionStepDetails": {
      "type": "object",
      "description": "Instruction step details, to be displayed in the Instructions steps section in the connector's page in Sentinel Portal.",
      "properties": {
        "parameters": {
          "description": "Gets or sets the instruction type parameters settings."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the instruction type name."
        }
      },
      "required": [
        "parameters",
        "type"
      ]
    },
    "IoTDeviceEntity": {
      "type": "object",
      "description": "Represents an IoT device entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IoTDeviceEntityProperties",
          "description": "IoTDevice entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "IoTDevice"
    },
    "IoTDeviceEntityProperties": {
      "type": "object",
      "description": "IoTDevice entity property bag.",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The ID of the IoT Device in the IoT Hub",
          "readOnly": true
        },
        "deviceName": {
          "type": "string",
          "description": "The friendly name of the device",
          "readOnly": true
        },
        "source": {
          "type": "string",
          "description": "The source of the device",
          "readOnly": true
        },
        "iotSecurityAgentId": {
          "type": "string",
          "format": "uuid",
          "description": "The ID of the security agent running on the device",
          "readOnly": true
        },
        "deviceType": {
          "type": "string",
          "description": "The type of the device",
          "readOnly": true
        },
        "vendor": {
          "type": "string",
          "description": "The vendor of the device",
          "readOnly": true
        },
        "edgeId": {
          "type": "string",
          "description": "The ID of the edge device",
          "readOnly": true
        },
        "macAddress": {
          "type": "string",
          "description": "The MAC address of the device",
          "readOnly": true
        },
        "model": {
          "type": "string",
          "description": "The model of the device",
          "readOnly": true
        },
        "serialNumber": {
          "type": "string",
          "description": "The serial number of the device",
          "readOnly": true
        },
        "firmwareVersion": {
          "type": "string",
          "description": "The firmware version of the device",
          "readOnly": true
        },
        "operatingSystem": {
          "type": "string",
          "description": "The operating system of the device",
          "readOnly": true
        },
        "iotHubEntityId": {
          "type": "string",
          "description": "The AzureResource entity id of the IoT Hub",
          "readOnly": true
        },
        "hostEntityId": {
          "type": "string",
          "description": "The Host entity id of this device",
          "readOnly": true
        },
        "ipAddressEntityId": {
          "type": "string",
          "description": "The IP entity if of this device",
          "readOnly": true
        },
        "threatIntelligence": {
          "type": "array",
          "description": "A list of TI contexts attached to the IoTDevice entity.",
          "items": {
            "$ref": "#/definitions/ThreatIntelligence"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "protocols": {
          "type": "array",
          "description": "A list of protocols of the IoTDevice entity.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "IpEntity": {
      "type": "object",
      "description": "Represents an ip entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IpEntityProperties",
          "description": "Ip entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "Ip"
    },
    "IpEntityProperties": {
      "type": "object",
      "description": "Ip entity property bag.",
      "properties": {
        "address": {
          "type": "string",
          "description": "The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6)",
          "readOnly": true
        },
        "location": {
          "$ref": "#/definitions/GeoLocation",
          "description": "The geo-location context attached to the ip entity",
          "readOnly": true
        },
        "threatIntelligence": {
          "type": "array",
          "description": "A list of TI contexts attached to the ip entity.",
          "items": {
            "$ref": "#/definitions/ThreatIntelligence"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "JwtAuthModel": {
      "type": "object",
      "description": "Model for API authentication with JWT. Simple exchange between user name + password to access token.",
      "properties": {
        "tokenEndpoint": {
          "type": "string",
          "description": "Token endpoint to request JWT"
        },
        "userName": {
          "type": "object",
          "description": "The user name. If user name and password sent in header request we only need to populate the `value` property with the user name (Same as basic auth). If user name and password sent in body request we need to specify the `Key` and `Value`.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "password": {
          "type": "object",
          "description": "The password",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryParameters": {
          "type": "object",
          "description": "The custom query parameter we want to add once we send request to token endpoint.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "headers": {
          "type": "object",
          "description": "The custom headers we want to add once we send request to token endpoint.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isCredentialsInHeaders": {
          "type": "boolean",
          "description": "Flag indicating whether we want to send the user name and password to token endpoint in the headers."
        },
        "isJsonRequest": {
          "type": "boolean",
          "description": "Flag indicating whether the body request is JSON (header Content-Type = application/json), meaning its a Form URL encoded request (header Content-Type = application/x-www-form-urlencoded)."
        },
        "requestTimeoutInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Request timeout in seconds.",
          "default": 100,
          "maximum": 180
        }
      },
      "required": [
        "tokenEndpoint",
        "userName",
        "password"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "x-ms-discriminator-value": "JwtToken"
    },
    "KillChainIntent": {
      "type": "string",
      "description": "Holds the alert intent stage(s) mapping for this alert.",
      "enum": [
        "Unknown",
        "Probing",
        "Exploitation",
        "Persistence",
        "PrivilegeEscalation",
        "DefenseEvasion",
        "CredentialAccess",
        "Discovery",
        "LateralMovement",
        "Execution",
        "Collection",
        "Exfiltration",
        "CommandAndControl",
        "Impact"
      ],
      "x-ms-enum": {
        "name": "KillChainIntent",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "The default value."
          },
          {
            "name": "Probing",
            "value": "Probing",
            "description": "Probing could be an attempt to access a certain resource regardless of a malicious intent or a failed attempt to gain access to a target system to gather information prior to exploitation. This step is usually detected as an attempt originating from outside the network in attempt to scan the target system and find a way in."
          },
          {
            "name": "Exploitation",
            "value": "Exploitation",
            "description": "Exploitation is the stage where an attacker manage to get foothold on the attacked resource. This stage is applicable not only for compute hosts, but also for resources such as user accounts, certificates etc. Adversaries will often be able to control the resource after this stage."
          },
          {
            "name": "Persistence",
            "value": "Persistence",
            "description": "Persistence is any access, action, or configuration change to a system that gives an adversary a persistent presence on that system. Adversaries will often need to maintain access to systems through interruptions such as system restarts, loss of credentials, or other failures that would require a remote access tool to restart or alternate backdoor for them to regain access."
          },
          {
            "name": "PrivilegeEscalation",
            "value": "PrivilegeEscalation",
            "description": "Privilege escalation is the result of actions that allow an adversary to obtain a higher level of permissions on a system or network. Certain tools or actions require a higher level of privilege to work and are likely necessary at many points throughout an operation. User accounts with permissions to access specific systems or perform specific functions necessary for adversaries to achieve their objective may also be considered an escalation of privilege."
          },
          {
            "name": "DefenseEvasion",
            "value": "DefenseEvasion",
            "description": "Defense evasion consists of techniques an adversary may use to evade detection or avoid other defenses. Sometimes these actions are the same as or variations of techniques in other categories that have the added benefit of subverting a particular defense or mitigation."
          },
          {
            "name": "CredentialAccess",
            "value": "CredentialAccess",
            "description": "Credential access represents techniques resulting in access to or control over system, domain, or service credentials that are used within an enterprise environment. Adversaries will likely attempt to obtain legitimate credentials from users or administrator accounts (local system administrator or domain users with administrator access) to use within the network. With sufficient access within a network, an adversary can create accounts for later use within the environment."
          },
          {
            "name": "Discovery",
            "value": "Discovery",
            "description": "Discovery consists of techniques that allow the adversary to gain knowledge about the system and internal network. When adversaries gain access to a new system, they must orient themselves to what they now have control of and what benefits operating from that system give to their current objective or overall goals during the intrusion. The operating system provides many native tools that aid in this post-compromise information-gathering phase."
          },
          {
            "name": "LateralMovement",
            "value": "LateralMovement",
            "description": "Lateral movement consists of techniques that enable an adversary to access and control remote systems on a network and could, but does not necessarily, include execution of tools on remote systems. The lateral movement techniques could allow an adversary to gather information from a system without needing additional tools, such as a remote access tool. An adversary can use lateral movement for many purposes, including remote Execution of tools, pivoting to additional systems, access to specific information or files, access to additional credentials, or to cause an effect."
          },
          {
            "name": "Execution",
            "value": "Execution",
            "description": "The execution tactic represents techniques that result in execution of adversary-controlled code on a local or remote system. This tactic is often used in conjunction with lateral movement to expand access to remote systems on a network."
          },
          {
            "name": "Collection",
            "value": "Collection",
            "description": "Collection consists of techniques used to identify and gather information, such as sensitive files, from a target network prior to exfiltration. This category also covers locations on a system or network where the adversary may look for information to exfiltrate."
          },
          {
            "name": "Exfiltration",
            "value": "Exfiltration",
            "description": "Exfiltration refers to techniques and attributes that result or aid in the adversary removing files and information from a target network. This category also covers locations on a system or network where the adversary may look for information to exfiltrate."
          },
          {
            "name": "CommandAndControl",
            "value": "CommandAndControl",
            "description": "The command and control tactic represents how adversaries communicate with systems under their control within a target network."
          },
          {
            "name": "Impact",
            "value": "Impact",
            "description": "The impact intent primary objective is to directly reduce the availability or integrity of a system, service, or network; including manipulation of data to impact a business or operational process. This would often refer to techniques such as ransom-ware, defacement, data manipulation and others."
          }
        ]
      }
    },
    "Kind": {
      "type": "string",
      "description": "The kind of content the metadata is for.",
      "enum": [
        "DataConnector",
        "DataType",
        "Workbook",
        "WorkbookTemplate",
        "Playbook",
        "PlaybookTemplate",
        "AnalyticsRuleTemplate",
        "AnalyticsRule",
        "HuntingQuery",
        "InvestigationQuery",
        "Parser",
        "Watchlist",
        "WatchlistTemplate",
        "Solution",
        "AzureFunction",
        "LogicAppsCustomConnector",
        "AutomationRule",
        "ResourcesDataConnector",
        "Notebook",
        "Standalone",
        "SummaryRule"
      ],
      "x-ms-enum": {
        "name": "Kind",
        "modelAsString": true,
        "values": [
          {
            "name": "DataConnector",
            "value": "DataConnector"
          },
          {
            "name": "DataType",
            "value": "DataType"
          },
          {
            "name": "Workbook",
            "value": "Workbook"
          },
          {
            "name": "WorkbookTemplate",
            "value": "WorkbookTemplate"
          },
          {
            "name": "Playbook",
            "value": "Playbook"
          },
          {
            "name": "PlaybookTemplate",
            "value": "PlaybookTemplate"
          },
          {
            "name": "AnalyticsRuleTemplate",
            "value": "AnalyticsRuleTemplate"
          },
          {
            "name": "AnalyticsRule",
            "value": "AnalyticsRule"
          },
          {
            "name": "HuntingQuery",
            "value": "HuntingQuery"
          },
          {
            "name": "InvestigationQuery",
            "value": "InvestigationQuery"
          },
          {
            "name": "Parser",
            "value": "Parser"
          },
          {
            "name": "Watchlist",
            "value": "Watchlist"
          },
          {
            "name": "WatchlistTemplate",
            "value": "WatchlistTemplate"
          },
          {
            "name": "Solution",
            "value": "Solution"
          },
          {
            "name": "AzureFunction",
            "value": "AzureFunction"
          },
          {
            "name": "LogicAppsCustomConnector",
            "value": "LogicAppsCustomConnector"
          },
          {
            "name": "AutomationRule",
            "value": "AutomationRule"
          },
          {
            "name": "ResourcesDataConnector",
            "value": "ResourcesDataConnector",
            "description": "The Codeless Connector Platform (CCP) Connectors"
          },
          {
            "name": "Notebook",
            "value": "Notebook",
            "description": "Jupyter Notebooks"
          },
          {
            "name": "Standalone",
            "value": "Standalone",
            "description": "one-off / standalone content contributed by community contributors"
          },
          {
            "name": "SummaryRule",
            "value": "SummaryRule",
            "description": "Summary rules perform batch processing directly in your Log Analytics workspace."
          }
        ]
      }
    },
    "MailClusterEntity": {
      "type": "object",
      "description": "Represents a mail cluster entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MailClusterEntityProperties",
          "description": "Mail cluster entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "MailCluster"
    },
    "MailClusterEntityProperties": {
      "type": "object",
      "description": "Mail cluster entity property bag.",
      "properties": {
        "networkMessageIds": {
          "type": "array",
          "description": "The mail message IDs that are part of the mail cluster",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "countByDeliveryStatus": {
          "description": "Count of mail messages by DeliveryStatus string representation",
          "readOnly": true
        },
        "countByThreatType": {
          "description": "Count of mail messages by ThreatType string representation",
          "readOnly": true
        },
        "countByProtectionStatus": {
          "description": "Count of mail messages by ProtectionStatus string representation",
          "readOnly": true
        },
        "threats": {
          "type": "array",
          "description": "The threats of mail messages that are part of the mail cluster",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "query": {
          "type": "string",
          "description": "The query that was used to identify the messages of the mail cluster",
          "readOnly": true
        },
        "queryTime": {
          "type": "string",
          "format": "date-time",
          "description": "The query time",
          "readOnly": true
        },
        "mailCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of mail messages that are part of the mail cluster",
          "readOnly": true
        },
        "isVolumeAnomaly": {
          "type": "boolean",
          "description": "Is this a volume anomaly mail cluster",
          "readOnly": true
        },
        "source": {
          "type": "string",
          "description": "The source of the mail cluster (default is 'O365 ATP')",
          "readOnly": true
        },
        "clusterSourceIdentifier": {
          "type": "string",
          "description": "The id of the cluster source",
          "readOnly": true
        },
        "clusterSourceType": {
          "type": "string",
          "description": "The type of the cluster source",
          "readOnly": true
        },
        "clusterQueryStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The cluster query start time",
          "readOnly": true
        },
        "clusterQueryEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "The cluster query end time",
          "readOnly": true
        },
        "clusterGroup": {
          "type": "string",
          "description": "The cluster group",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "MailMessageEntity": {
      "type": "object",
      "description": "Represents a mail message entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MailMessageEntityProperties",
          "description": "Mail message entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "MailMessage"
    },
    "MailMessageEntityProperties": {
      "type": "object",
      "description": "Mail message entity property bag.",
      "properties": {
        "fileEntityIds": {
          "type": "array",
          "description": "The File entity ids of this mail message's attachments",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "recipient": {
          "type": "string",
          "description": "The recipient of this mail message. Note that in case of multiple recipients the mail message is forked and each copy has one recipient",
          "readOnly": true
        },
        "urls": {
          "type": "array",
          "description": "The Urls contained in this mail message",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "threats": {
          "type": "array",
          "description": "The threats of this mail message",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "p1Sender": {
          "type": "string",
          "description": "The p1 sender's email address",
          "readOnly": true
        },
        "p1SenderDisplayName": {
          "type": "string",
          "description": "The p1 sender's display name",
          "readOnly": true
        },
        "p1SenderDomain": {
          "type": "string",
          "description": "The p1 sender's domain",
          "readOnly": true
        },
        "senderIP": {
          "type": "string",
          "description": "The sender's IP address",
          "readOnly": true
        },
        "p2Sender": {
          "type": "string",
          "description": "The p2 sender's email address",
          "readOnly": true
        },
        "p2SenderDisplayName": {
          "type": "string",
          "description": "The p2 sender's display name",
          "readOnly": true
        },
        "p2SenderDomain": {
          "type": "string",
          "description": "The p2 sender's domain",
          "readOnly": true
        },
        "receiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "The receive date of this message",
          "readOnly": true
        },
        "networkMessageId": {
          "type": "string",
          "format": "uuid",
          "description": "The network message id of this mail message",
          "readOnly": true
        },
        "internetMessageId": {
          "type": "string",
          "description": "The internet message id of this mail message",
          "readOnly": true
        },
        "subject": {
          "type": "string",
          "description": "The subject of this mail message",
          "readOnly": true
        },
        "language": {
          "type": "string",
          "description": "The language of this mail message",
          "readOnly": true
        },
        "threatDetectionMethods": {
          "type": "array",
          "description": "The threat detection methods",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "bodyFingerprintBin1": {
          "type": "integer",
          "format": "int32",
          "description": "The bodyFingerprintBin1"
        },
        "bodyFingerprintBin2": {
          "type": "integer",
          "format": "int32",
          "description": "The bodyFingerprintBin2"
        },
        "bodyFingerprintBin3": {
          "type": "integer",
          "format": "int32",
          "description": "The bodyFingerprintBin3"
        },
        "bodyFingerprintBin4": {
          "type": "integer",
          "format": "int32",
          "description": "The bodyFingerprintBin4"
        },
        "bodyFingerprintBin5": {
          "type": "integer",
          "format": "int32",
          "description": "The bodyFingerprintBin5"
        },
        "antispamDirection": {
          "$ref": "#/definitions/AntispamMailDirection",
          "description": "The directionality of this mail message"
        },
        "deliveryAction": {
          "$ref": "#/definitions/DeliveryAction",
          "description": "The delivery action of this mail message like Delivered, Blocked, Replaced etc"
        },
        "deliveryLocation": {
          "$ref": "#/definitions/DeliveryLocation",
          "description": "The delivery location of this mail message like Inbox, JunkFolder etc"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "MailboxEntity": {
      "type": "object",
      "description": "Represents a mailbox entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MailboxEntityProperties",
          "description": "Mailbox entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "Mailbox"
    },
    "MailboxEntityProperties": {
      "type": "object",
      "description": "Mailbox entity property bag.",
      "properties": {
        "mailboxPrimaryAddress": {
          "type": "string",
          "description": "The mailbox's primary address",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The mailbox's display name",
          "readOnly": true
        },
        "upn": {
          "type": "string",
          "description": "The mailbox's UPN",
          "readOnly": true
        },
        "externalDirectoryObjectId": {
          "type": "string",
          "format": "uuid",
          "description": "The AzureAD identifier of mailbox. Similar to AadUserId in account entity but this property is specific to mailbox object on office side",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "MalwareEntity": {
      "type": "object",
      "description": "Represents a malware entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MalwareEntityProperties",
          "description": "File entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "Malware"
    },
    "MalwareEntityProperties": {
      "type": "object",
      "description": "Malware entity property bag.",
      "properties": {
        "category": {
          "type": "string",
          "description": "The malware category by the vendor, e.g. Trojan",
          "readOnly": true
        },
        "fileEntityIds": {
          "type": "array",
          "description": "List of linked file entity identifiers on which the malware was found",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "malwareName": {
          "type": "string",
          "description": "The malware name by the vendor, e.g. Win32/Toga!rfn",
          "readOnly": true
        },
        "processEntityIds": {
          "type": "array",
          "description": "List of linked process entity identifiers on which the malware was found.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "ManualTriggerRequestBody": {
      "type": "object",
      "description": "Describes the request body for triggering a playbook on an incident.",
      "properties": {
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant id of the playbook resource."
        },
        "logicAppsResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource id of the playbook resource.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Logic/workflows"
              },
              {
                "type": "Microsoft.Web/sites"
              }
            ]
          }
        }
      },
      "required": [
        "logicAppsResourceId"
      ]
    },
    "MatchingMethod": {
      "type": "string",
      "description": "Grouping matching method. When method is Selected at least one of groupByEntities, groupByAlertDetails, groupByCustomDetails must be provided and not empty.",
      "enum": [
        "AllEntities",
        "AnyAlert",
        "Selected"
      ],
      "x-ms-enum": {
        "name": "MatchingMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "AllEntities",
            "value": "AllEntities",
            "description": "Grouping alerts into a single incident if all the entities match"
          },
          {
            "name": "AnyAlert",
            "value": "AnyAlert",
            "description": "Grouping any alerts triggered by this rule into a single incident"
          },
          {
            "name": "Selected",
            "value": "Selected",
            "description": "Grouping alerts into a single incident if the selected entities, custom details and alert details match"
          }
        ]
      }
    },
    "McasDataConnector": {
      "type": "object",
      "description": "Represents MCAS (Microsoft Cloud App Security) data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/McasDataConnectorProperties",
          "description": "MCAS (Microsoft Cloud App Security) data connector properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The data connector kind",
          "enum": [
            "MicrosoftCloudAppSecurity"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ]
    },
    "McasDataConnectorDataTypes": {
      "type": "object",
      "description": "The available data types for MCAS (Microsoft Cloud App Security) data connector.",
      "properties": {
        "discoveryLogs": {
          "$ref": "#/definitions/DataConnectorDataTypeCommon",
          "description": "Discovery log data type connection."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AlertsDataTypeOfDataConnector"
        }
      ]
    },
    "McasDataConnectorProperties": {
      "type": "object",
      "description": "MCAS (Microsoft Cloud App Security) data connector properties.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant id to connect to, and get the data from."
        },
        "dataTypes": {
          "$ref": "#/definitions/McasDataConnectorDataTypes",
          "description": "The available data types for the connector."
        }
      }
    },
    "MdatpDataConnector": {
      "type": "object",
      "description": "Represents MDATP (Microsoft Defender Advanced Threat Protection) data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MdatpDataConnectorProperties",
          "description": "MDATP (Microsoft Defender Advanced Threat Protection) data connector properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The data connector kind",
          "enum": [
            "MicrosoftDefenderAdvancedThreatProtection"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ]
    },
    "MdatpDataConnectorProperties": {
      "type": "object",
      "description": "MDATP (Microsoft Defender Advanced Threat Protection) data connector properties.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant id to connect to, and get the data from."
        },
        "dataTypes": {
          "$ref": "#/definitions/AlertsDataTypeOfDataConnector",
          "description": "The available data types for the connector."
        }
      }
    },
    "MetadataAuthor": {
      "type": "object",
      "description": "Publisher or creator of the content item.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the author. Company or person."
        },
        "email": {
          "type": "string",
          "description": "Email of author contact"
        },
        "link": {
          "type": "string",
          "description": "Link for author/vendor page"
        }
      }
    },
    "MetadataCategories": {
      "type": "object",
      "description": "ies for the solution content item",
      "properties": {
        "domains": {
          "type": "array",
          "description": "domain for the solution content item",
          "items": {
            "type": "string"
          }
        },
        "verticals": {
          "type": "array",
          "description": "Industry verticals for the solution content item",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MetadataDependencies": {
      "type": "object",
      "description": "Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.",
      "properties": {
        "contentId": {
          "type": "string",
          "description": "Id of the content item we depend on"
        },
        "kind": {
          "$ref": "#/definitions/Kind",
          "description": "Type of the content item we depend on"
        },
        "version": {
          "type": "string",
          "description": "Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required."
        },
        "name": {
          "type": "string",
          "description": "Name of the content item"
        },
        "operator": {
          "$ref": "#/definitions/Operator",
          "description": "Operator used for list of dependencies in criteria array."
        },
        "criteria": {
          "type": "array",
          "description": "This is the list of dependencies we must fulfill, according to the AND/OR operator",
          "items": {
            "$ref": "#/definitions/MetadataDependencies"
          },
          "x-ms-identifiers": [
            "contentId"
          ]
        }
      }
    },
    "MetadataList": {
      "type": "object",
      "description": "List of all the metadata.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MetadataModel items on this page",
          "items": {
            "$ref": "#/definitions/MetadataModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MetadataModel": {
      "type": "object",
      "description": "Metadata resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MetadataProperties",
          "description": "Metadata properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MetadataPatch": {
      "type": "object",
      "description": "Metadata patch request body.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MetadataPropertiesPatch",
          "description": "Metadata patch request body",
          "x-ms-client-flatten": true
        }
      }
    },
    "MetadataProperties": {
      "type": "object",
      "description": "Metadata property bag.",
      "properties": {
        "contentId": {
          "type": "string",
          "description": "Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name"
        },
        "parentId": {
          "type": "string",
          "description": "Full parent resource ID of the content item the metadata is for.  This is the full resource ID including the scope (subscription and resource group)"
        },
        "version": {
          "type": "string",
          "description": "Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM template best practices.  Can also be any string, but then we cannot guarantee any version checks"
        },
        "kind": {
          "type": "string",
          "description": "The kind of content the metadata is for."
        },
        "source": {
          "$ref": "#/definitions/MetadataSource",
          "description": "Source of the content.  This is where/how it was created."
        },
        "author": {
          "$ref": "#/definitions/MetadataAuthor",
          "description": "The creator of the content item."
        },
        "support": {
          "$ref": "#/definitions/MetadataSupport",
          "description": "Support information for the metadata - type, name, contact information"
        },
        "dependencies": {
          "$ref": "#/definitions/MetadataDependencies",
          "description": "Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats."
        },
        "categories": {
          "$ref": "#/definitions/MetadataCategories",
          "description": "Categories for the solution content item"
        },
        "providers": {
          "type": "array",
          "description": "Providers for the solution content item",
          "items": {
            "type": "string"
          }
        },
        "firstPublishDate": {
          "type": "string",
          "format": "date",
          "description": "first publish date solution content item"
        },
        "lastPublishDate": {
          "type": "string",
          "format": "date",
          "description": "last publish date for the solution content item"
        },
        "customVersion": {
          "type": "string",
          "description": "The custom version of the content. A optional free text"
        },
        "contentSchemaVersion": {
          "type": "string",
          "description": "Schema version of the content. Can be used to distinguish between different flow based on the schema version"
        },
        "icon": {
          "type": "string",
          "description": "the icon identifier. this id can later be fetched from the solution template"
        },
        "threatAnalysisTactics": {
          "type": "array",
          "description": "the tactics the resource covers",
          "items": {
            "type": "string"
          }
        },
        "threatAnalysisTechniques": {
          "type": "array",
          "description": "the techniques the resource covers, these have to be aligned with the tactics being used",
          "items": {
            "type": "string"
          }
        },
        "previewImages": {
          "type": "array",
          "description": "preview image file names. These will be taken from the solution artifacts",
          "items": {
            "type": "string"
          }
        },
        "previewImagesDark": {
          "type": "array",
          "description": "preview image file names. These will be taken from the solution artifacts. used for dark theme support",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "parentId",
        "kind"
      ]
    },
    "MetadataPropertiesPatch": {
      "type": "object",
      "description": "Metadata property bag for patch requests.  This is the same as the MetadataProperties, but with nothing required",
      "properties": {
        "contentId": {
          "type": "string",
          "description": "Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name"
        },
        "parentId": {
          "type": "string",
          "description": "Full parent resource ID of the content item the metadata is for.  This is the full resource ID including the scope (subscription and resource group)"
        },
        "version": {
          "type": "string",
          "description": "Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM template best practices.  Can also be any string, but then we cannot guarantee any version checks"
        },
        "kind": {
          "type": "string",
          "description": "The kind of content the metadata is for."
        },
        "source": {
          "$ref": "#/definitions/MetadataSource",
          "description": "Source of the content.  This is where/how it was created."
        },
        "author": {
          "$ref": "#/definitions/MetadataAuthor",
          "description": "The creator of the content item."
        },
        "support": {
          "$ref": "#/definitions/MetadataSupport",
          "description": "Support information for the metadata - type, name, contact information"
        },
        "dependencies": {
          "$ref": "#/definitions/MetadataDependencies",
          "description": "Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats."
        },
        "categories": {
          "$ref": "#/definitions/MetadataCategories",
          "description": "Categories for the solution content item"
        },
        "providers": {
          "type": "array",
          "description": "Providers for the solution content item",
          "items": {
            "type": "string"
          }
        },
        "firstPublishDate": {
          "type": "string",
          "format": "date",
          "description": "first publish date solution content item"
        },
        "lastPublishDate": {
          "type": "string",
          "format": "date",
          "description": "last publish date for the solution content item"
        },
        "customVersion": {
          "type": "string",
          "description": "The custom version of the content. A optional free text"
        },
        "contentSchemaVersion": {
          "type": "string",
          "description": "Schema version of the content. Can be used to distinguish between different flow based on the schema version"
        },
        "icon": {
          "type": "string",
          "description": "the icon identifier. this id can later be fetched from the solution template"
        },
        "threatAnalysisTactics": {
          "type": "array",
          "description": "the tactics the resource covers",
          "items": {
            "type": "string"
          }
        },
        "threatAnalysisTechniques": {
          "type": "array",
          "description": "the techniques the resource covers, these have to be aligned with the tactics being used",
          "items": {
            "type": "string"
          }
        },
        "previewImages": {
          "type": "array",
          "description": "preview image file names. These will be taken from the solution artifacts",
          "items": {
            "type": "string"
          }
        },
        "previewImagesDark": {
          "type": "array",
          "description": "preview image file names. These will be taken from the solution artifacts. used for dark theme support",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MetadataSource": {
      "type": "object",
      "description": "The original source of the content item, where it comes from.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/SourceKind",
          "description": "Source type of the content"
        },
        "name": {
          "type": "string",
          "description": "Name of the content source.  The repo name, solution name, LA workspace name etc."
        },
        "sourceId": {
          "type": "string",
          "description": "ID of the content source.  The solution ID, workspace ID, etc"
        }
      },
      "required": [
        "kind"
      ]
    },
    "MetadataSupport": {
      "type": "object",
      "description": "Support information for the content item.",
      "properties": {
        "tier": {
          "$ref": "#/definitions/SupportTier",
          "description": "Type of support for content item"
        },
        "name": {
          "type": "string",
          "description": "Name of the support contact. Company or person."
        },
        "email": {
          "type": "string",
          "description": "Email of support contact"
        },
        "link": {
          "type": "string",
          "description": "Link for support help, like to support page to open a ticket etc."
        }
      },
      "required": [
        "tier"
      ]
    },
    "MicrosoftSecurityIncidentCreationAlertRule": {
      "type": "object",
      "description": "Represents MicrosoftSecurityIncidentCreation rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MicrosoftSecurityIncidentCreationAlertRuleProperties",
          "description": "MicrosoftSecurityIncidentCreation rule properties",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The alert rule kind",
          "enum": [
            "MicrosoftSecurityIncidentCreation"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AlertRule"
        }
      ]
    },
    "MicrosoftSecurityIncidentCreationAlertRuleCommonProperties": {
      "type": "object",
      "description": "MicrosoftSecurityIncidentCreation rule common property bag.",
      "properties": {
        "displayNamesFilter": {
          "type": "array",
          "description": "the alerts' displayNames on which the cases will be generated",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "displayNamesExcludeFilter": {
          "type": "array",
          "description": "the alerts' displayNames on which the cases will not be generated",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "productFilter": {
          "$ref": "#/definitions/MicrosoftSecurityProductName",
          "description": "The alerts' productName on which the cases will be generated"
        },
        "severitiesFilter": {
          "type": "array",
          "description": "the alerts' severities on which the cases will be generated",
          "items": {
            "$ref": "#/definitions/AlertSeverity"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "productFilter"
      ]
    },
    "MicrosoftSecurityIncidentCreationAlertRuleProperties": {
      "type": "object",
      "description": "MicrosoftSecurityIncidentCreation rule property bag.",
      "properties": {
        "alertRuleTemplateName": {
          "type": "string",
          "description": "The Name of the alert rule template used to create this rule."
        },
        "description": {
          "type": "string",
          "description": "The description of the alert rule."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for alerts created by this alert rule."
        },
        "enabled": {
          "type": "boolean",
          "description": "Determines whether this alert rule is enabled or disabled."
        },
        "lastModifiedUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The last time that this alert has been modified.",
          "readOnly": true
        }
      },
      "required": [
        "displayName",
        "enabled"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/MicrosoftSecurityIncidentCreationAlertRuleCommonProperties"
        }
      ]
    },
    "MicrosoftSecurityIncidentCreationAlertRuleTemplate": {
      "type": "object",
      "description": "Represents MicrosoftSecurityIncidentCreation rule template.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties",
          "description": "MicrosoftSecurityIncidentCreation rule template properties",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The alert rule kind",
          "enum": [
            "MicrosoftSecurityIncidentCreation"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AlertRuleTemplate"
        }
      ]
    },
    "MicrosoftSecurityIncidentCreationAlertRuleTemplateProperties": {
      "type": "object",
      "description": "MicrosoftSecurityIncidentCreation rule template properties",
      "properties": {
        "alertRulesCreatedByTemplateCount": {
          "type": "integer",
          "format": "int32",
          "description": "the number of alert rules that were created by this template"
        },
        "createdDateUTC": {
          "type": "string",
          "format": "date-time",
          "description": "The time that this alert rule template has been added.",
          "readOnly": true
        },
        "lastUpdatedDateUTC": {
          "type": "string",
          "format": "date-time",
          "description": "The time that this alert rule template was last updated.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the alert rule template."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for alert rule template."
        },
        "requiredDataConnectors": {
          "type": "array",
          "description": "The required data connectors for this template",
          "items": {
            "$ref": "#/definitions/AlertRuleTemplateDataSource"
          },
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/TemplateStatus",
          "description": "The alert rule template status."
        },
        "displayNamesFilter": {
          "type": "array",
          "description": "the alerts' displayNames on which the cases will be generated",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "displayNamesExcludeFilter": {
          "type": "array",
          "description": "the alerts' displayNames on which the cases will not be generated",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "productFilter": {
          "$ref": "#/definitions/MicrosoftSecurityProductName",
          "description": "The alerts' productName on which the cases will be generated"
        },
        "severitiesFilter": {
          "type": "array",
          "description": "the alerts' severities on which the cases will be generated",
          "items": {
            "$ref": "#/definitions/AlertSeverity"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MicrosoftSecurityProductName": {
      "type": "string",
      "description": "The alerts' productName on which the cases will be generated",
      "enum": [
        "Microsoft Cloud App Security",
        "Azure Security Center",
        "Azure Advanced Threat Protection",
        "Azure Active Directory Identity Protection",
        "Azure Security Center for IoT"
      ],
      "x-ms-enum": {
        "name": "MicrosoftSecurityProductName",
        "modelAsString": true,
        "values": [
          {
            "name": "Microsoft Cloud App Security",
            "value": "Microsoft Cloud App Security"
          },
          {
            "name": "Azure Security Center",
            "value": "Azure Security Center"
          },
          {
            "name": "Azure Advanced Threat Protection",
            "value": "Azure Advanced Threat Protection"
          },
          {
            "name": "Azure Active Directory Identity Protection",
            "value": "Azure Active Directory Identity Protection"
          },
          {
            "name": "Azure Security Center for IoT",
            "value": "Azure Security Center for IoT"
          }
        ]
      }
    },
    "MstiDataConnector": {
      "type": "object",
      "description": "Represents Microsoft Threat Intelligence data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MstiDataConnectorProperties",
          "description": "Microsoft Threat Intelligence data connector properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The data connector kind",
          "enum": [
            "MicrosoftThreatIntelligence"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ]
    },
    "MstiDataConnectorDataTypes": {
      "type": "object",
      "description": "The available data types for Microsoft Threat Intelligence data connector.",
      "properties": {
        "microsoftEmergingThreatFeed": {
          "$ref": "#/definitions/MstiDataConnectorDataTypesMicrosoftEmergingThreatFeed",
          "description": "Data type for Microsoft Threat Intelligence data connector."
        }
      },
      "required": [
        "microsoftEmergingThreatFeed"
      ]
    },
    "MstiDataConnectorDataTypesMicrosoftEmergingThreatFeed": {
      "type": "object",
      "description": "Data type for Microsoft Threat Intelligence data connector.",
      "properties": {
        "lookbackPeriod": {
          "type": "string",
          "format": "date-time",
          "description": "The lookback period for the feed to be imported. The date-time to begin importing the feed from, for example: 2024-01-01T00:00:00.000Z."
        }
      },
      "required": [
        "lookbackPeriod"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorDataTypeCommon"
        }
      ]
    },
    "MstiDataConnectorProperties": {
      "type": "object",
      "description": "Microsoft Threat Intelligence data connector properties.",
      "properties": {
        "dataTypes": {
          "$ref": "#/definitions/MstiDataConnectorDataTypes",
          "description": "The available data types for the connector."
        }
      },
      "required": [
        "dataTypes"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorTenantId"
        }
      ]
    },
    "NoneAuthModel": {
      "type": "object",
      "description": "Model for API authentication with no authentication method - public API.",
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "x-ms-discriminator-value": "None"
    },
    "OAuthModel": {
      "type": "object",
      "description": "Model for API authentication with OAuth2.",
      "properties": {
        "authorizationCode": {
          "type": "string",
          "description": "The user's authorization code."
        },
        "clientSecret": {
          "type": "string",
          "description": "The Application (client) secret that the OAuth provider assigned to your app."
        },
        "clientId": {
          "type": "string",
          "description": "The Application (client) ID that the OAuth provider assigned to your app."
        },
        "isCredentialsInHeaders": {
          "type": "boolean",
          "description": "Indicating whether we want to send the clientId and clientSecret to token endpoint in the headers."
        },
        "scope": {
          "type": "string",
          "description": "The Application (client) Scope that the OAuth provider assigned to your app."
        },
        "redirectUri": {
          "type": "string",
          "format": "uri",
          "description": "The Application redirect url that the user config in the OAuth provider."
        },
        "grantType": {
          "type": "string",
          "description": "The grant type, usually will be 'authorization code'."
        },
        "tokenEndpoint": {
          "type": "string",
          "description": "The token endpoint. Defines the OAuth2 refresh token."
        },
        "tokenEndpointHeaders": {
          "type": "object",
          "description": "The token endpoint headers.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tokenEndpointQueryParameters": {
          "type": "object",
          "description": "The token endpoint query parameters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "authorizationEndpoint": {
          "type": "string",
          "description": "The authorization endpoint."
        },
        "authorizationEndpointHeaders": {
          "type": "object",
          "description": "The authorization endpoint headers.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "authorizationEndpointQueryParameters": {
          "type": "object",
          "description": "The authorization endpoint query parameters.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isJwtBearerFlow": {
          "type": "boolean",
          "description": "A value indicating whether it's a JWT flow."
        },
        "accessTokenPrepend": {
          "type": "string",
          "description": "Access token prepend. Default is 'Bearer'."
        }
      },
      "required": [
        "clientSecret",
        "clientId",
        "grantType",
        "tokenEndpoint"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "x-ms-discriminator-value": "OAuth2"
    },
    "OSFamily": {
      "type": "string",
      "description": "The operating system type.",
      "enum": [
        "Linux",
        "Windows",
        "Android",
        "IOS",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "OSFamily",
        "modelAsString": false,
        "values": [
          {
            "name": "Linux",
            "value": "Linux",
            "description": "Host with Linux operating system."
          },
          {
            "name": "Windows",
            "value": "Windows",
            "description": "Host with Windows operating system."
          },
          {
            "name": "Android",
            "value": "Android",
            "description": "Host with Android operating system."
          },
          {
            "name": "IOS",
            "value": "IOS",
            "description": "Host with IOS operating system."
          },
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Host with Unknown operating system."
          }
        ]
      }
    },
    "OfficeDataConnector": {
      "type": "object",
      "description": "Represents office data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OfficeDataConnectorProperties",
          "description": "Office data connector properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The data connector kind",
          "enum": [
            "Office365"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ]
    },
    "OfficeDataConnectorDataTypes": {
      "type": "object",
      "description": "The available data types for office data connector.",
      "properties": {
        "exchange": {
          "$ref": "#/definitions/OfficeDataConnectorDataTypesExchange",
          "description": "Exchange data type connection."
        },
        "sharePoint": {
          "$ref": "#/definitions/OfficeDataConnectorDataTypesSharePoint",
          "description": "SharePoint data type connection."
        },
        "teams": {
          "$ref": "#/definitions/OfficeDataConnectorDataTypesTeams",
          "description": "Teams data type connection."
        }
      }
    },
    "OfficeDataConnectorDataTypesExchange": {
      "type": "object",
      "description": "Exchange data type connection.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorDataTypeCommon"
        }
      ]
    },
    "OfficeDataConnectorDataTypesSharePoint": {
      "type": "object",
      "description": "SharePoint data type connection.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorDataTypeCommon"
        }
      ]
    },
    "OfficeDataConnectorDataTypesTeams": {
      "type": "object",
      "description": "Teams data type connection.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorDataTypeCommon"
        }
      ]
    },
    "OfficeDataConnectorProperties": {
      "type": "object",
      "description": "Office data connector properties.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant id to connect to, and get the data from."
        },
        "dataTypes": {
          "$ref": "#/definitions/OfficeDataConnectorDataTypes",
          "description": "The available data types for the connector."
        }
      }
    },
    "Operator": {
      "type": "string",
      "description": "Operator used for list of dependencies in criteria array.",
      "enum": [
        "AND",
        "OR"
      ],
      "x-ms-enum": {
        "name": "Operator",
        "modelAsString": true,
        "values": [
          {
            "name": "AND",
            "value": "AND"
          },
          {
            "name": "OR",
            "value": "OR"
          }
        ]
      }
    },
    "OracleAuthModel": {
      "type": "object",
      "description": "Model for API authentication for Oracle.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Oracle tenant ID"
        },
        "userId": {
          "type": "string",
          "description": "Oracle user ID"
        },
        "publicFingerprint": {
          "type": "string",
          "description": "Public Fingerprint"
        },
        "pemFile": {
          "type": "string",
          "description": "Content of the PRM file"
        }
      },
      "required": [
        "tenantId",
        "userId",
        "publicFingerprint",
        "pemFile"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "x-ms-discriminator-value": "Oracle"
    },
    "OwnerType": {
      "type": "string",
      "description": "The type of the owner the incident is assigned to.",
      "enum": [
        "Unknown",
        "User",
        "Group"
      ],
      "x-ms-enum": {
        "name": "OwnerType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "The incident owner type is unknown"
          },
          {
            "name": "User",
            "value": "User",
            "description": "The incident owner type is an AAD user"
          },
          {
            "name": "Group",
            "value": "Group",
            "description": "The incident owner type is an AAD group"
          }
        ]
      }
    },
    "PackageBaseProperties": {
      "type": "object",
      "description": "Describes package properties",
      "properties": {
        "contentId": {
          "type": "string",
          "description": "The content id of the package"
        },
        "contentProductId": {
          "type": "string",
          "description": "Unique ID for the content. It should be generated based on the contentId, contentKind and the contentVersion of the package"
        },
        "contentKind": {
          "$ref": "#/definitions/PackageKind",
          "description": "The package kind"
        },
        "contentSchemaVersion": {
          "type": "string",
          "description": "The version of the content schema."
        },
        "isNew": {
          "$ref": "#/definitions/Flag",
          "description": "Flag indicates if this is a newly published package."
        },
        "isPreview": {
          "$ref": "#/definitions/Flag",
          "description": "Flag indicates if this package is in preview."
        },
        "isFeatured": {
          "$ref": "#/definitions/Flag",
          "description": "Flag indicates if this package is among the featured list."
        },
        "isDeprecated": {
          "$ref": "#/definitions/Flag",
          "description": "Flag indicates if this template is deprecated"
        },
        "version": {
          "type": "string",
          "description": "the latest version number of the package"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the package"
        },
        "description": {
          "type": "string",
          "description": "The description of the package"
        },
        "publisherDisplayName": {
          "type": "string",
          "description": "The publisher display name of the package"
        },
        "source": {
          "$ref": "#/definitions/MetadataSource",
          "description": "The source of the package"
        },
        "author": {
          "$ref": "#/definitions/MetadataAuthor",
          "description": "The author of the package"
        },
        "support": {
          "$ref": "#/definitions/MetadataSupport",
          "description": "The support tier of the package"
        },
        "dependencies": {
          "$ref": "#/definitions/MetadataDependencies",
          "description": "The support tier of the package"
        },
        "providers": {
          "type": "array",
          "description": "Providers for the package item",
          "items": {
            "type": "string"
          }
        },
        "firstPublishDate": {
          "type": "string",
          "format": "date",
          "description": "first publish date package item"
        },
        "lastPublishDate": {
          "type": "string",
          "format": "date",
          "description": "last publish date for the package item"
        },
        "categories": {
          "$ref": "#/definitions/MetadataCategories",
          "description": "The categories of the package"
        },
        "threatAnalysisTactics": {
          "type": "array",
          "description": "the tactics the resource covers",
          "items": {
            "type": "string"
          }
        },
        "threatAnalysisTechniques": {
          "type": "array",
          "description": "the techniques the resource covers, these have to be aligned with the tactics being used",
          "items": {
            "type": "string"
          }
        },
        "icon": {
          "type": "string",
          "description": "the icon identifier. this id can later be fetched from the content metadata"
        }
      }
    },
    "PackageKind": {
      "type": "string",
      "description": "The package kind",
      "enum": [
        "Solution",
        "Standalone"
      ],
      "x-ms-enum": {
        "name": "PackageKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Solution",
            "value": "Solution"
          },
          {
            "name": "Standalone",
            "value": "Standalone"
          }
        ]
      }
    },
    "PackageList": {
      "type": "object",
      "description": "List available packages.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PackageModel items on this page",
          "items": {
            "$ref": "#/definitions/PackageModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PackageModel": {
      "type": "object",
      "description": "Represents a Package in Azure Security Insights.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PackageProperties",
          "description": "package properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PackageProperties": {
      "type": "object",
      "description": "Describes package properties",
      "allOf": [
        {
          "$ref": "#/definitions/PackageBaseProperties"
        }
      ]
    },
    "PlaybookActionProperties": {
      "type": "object",
      "properties": {
        "logicAppResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource id of the playbook resource.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Logic/workflows"
              },
              {
                "type": "Microsoft.Web/sites"
              }
            ]
          }
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The tenant id of the playbook resource."
        }
      },
      "required": [
        "logicAppResourceId"
      ]
    },
    "PremiumMdtiDataConnectorDataTypes": {
      "type": "object",
      "description": "The available data types for Premium Microsoft Defender for Threat Intelligence data connector.",
      "properties": {
        "connector": {
          "$ref": "#/definitions/PremiumMdtiDataConnectorDataTypesConnector",
          "description": "Data type for Premium Microsoft Defender for Threat Intelligence data connector."
        }
      },
      "required": [
        "connector"
      ]
    },
    "PremiumMdtiDataConnectorDataTypesConnector": {
      "type": "object",
      "description": "Data type for Premium Microsoft Defender for Threat Intelligence data connector.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorDataTypeCommon"
        }
      ]
    },
    "PremiumMdtiDataConnectorProperties": {
      "type": "object",
      "description": "Premium Microsoft Defender for Threat Intelligence data connector properties.",
      "properties": {
        "lookbackPeriod": {
          "type": "string",
          "format": "date-time",
          "description": "The lookback period for the feed to be imported. The date-time to begin importing the feed from, for example: 2024-01-01T00:00:00.000Z."
        },
        "requiredSKUsPresent": {
          "type": "boolean",
          "description": "The flag to indicate whether the tenant has the premium SKU required to access this connector."
        },
        "dataTypes": {
          "$ref": "#/definitions/PremiumMdtiDataConnectorDataTypes",
          "description": "The available data types for the connector."
        }
      },
      "required": [
        "lookbackPeriod",
        "dataTypes"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorTenantId"
        }
      ]
    },
    "PremiumMicrosoftDefenderForThreatIntelligence": {
      "type": "object",
      "description": "Represents Premium Microsoft Defender for Threat Intelligence data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PremiumMdtiDataConnectorProperties",
          "description": "Premium Microsoft Defender for Threat Intelligence data connector properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The data connector kind",
          "enum": [
            "PremiumMicrosoftDefenderForThreatIntelligence"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ]
    },
    "ProcessEntity": {
      "type": "object",
      "description": "Represents a process entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProcessEntityProperties",
          "description": "Process entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "Process"
    },
    "ProcessEntityProperties": {
      "type": "object",
      "description": "Process entity property bag.",
      "properties": {
        "accountEntityId": {
          "type": "string",
          "description": "The account entity id running the processes.",
          "readOnly": true
        },
        "commandLine": {
          "type": "string",
          "description": "The command line used to create the process",
          "readOnly": true
        },
        "creationTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the process started to run",
          "readOnly": true
        },
        "elevationToken": {
          "$ref": "#/definitions/ElevationToken",
          "description": "The elevation token associated with the process."
        },
        "hostEntityId": {
          "type": "string",
          "description": "The host entity id on which the process was running",
          "readOnly": true
        },
        "hostLogonSessionEntityId": {
          "type": "string",
          "description": "The session entity id in which the process was running",
          "readOnly": true
        },
        "imageFileEntityId": {
          "type": "string",
          "description": "Image file entity id",
          "readOnly": true
        },
        "parentProcessEntityId": {
          "type": "string",
          "description": "The parent process entity id.",
          "readOnly": true
        },
        "processId": {
          "type": "string",
          "description": "The process ID",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "ProductPackageList": {
      "type": "object",
      "description": "List available packages.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProductPackageModel items on this page",
          "items": {
            "$ref": "#/definitions/ProductPackageModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProductPackageModel": {
      "type": "object",
      "description": "Represents a Package in Azure Security Insights.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProductPackageProperties",
          "description": "package properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProductPackageProperties": {
      "type": "object",
      "description": "Describes package properties",
      "properties": {
        "contentId": {
          "type": "string",
          "description": "The content id of the package"
        },
        "contentProductId": {
          "type": "string",
          "description": "Unique ID for the content. It should be generated based on the contentId, contentKind and the contentVersion of the package"
        },
        "contentKind": {
          "$ref": "#/definitions/PackageKind",
          "description": "The package kind"
        },
        "contentSchemaVersion": {
          "type": "string",
          "description": "The version of the content schema."
        },
        "isNew": {
          "$ref": "#/definitions/Flag",
          "description": "Flag indicates if this is a newly published package."
        },
        "isPreview": {
          "$ref": "#/definitions/Flag",
          "description": "Flag indicates if this package is in preview."
        },
        "isFeatured": {
          "$ref": "#/definitions/Flag",
          "description": "Flag indicates if this package is among the featured list."
        },
        "isDeprecated": {
          "$ref": "#/definitions/Flag",
          "description": "Flag indicates if this template is deprecated"
        },
        "version": {
          "type": "string",
          "description": "the latest version number of the package"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the package"
        },
        "description": {
          "type": "string",
          "description": "The description of the package"
        },
        "publisherDisplayName": {
          "type": "string",
          "description": "The publisher display name of the package"
        },
        "source": {
          "$ref": "#/definitions/MetadataSource",
          "description": "The source of the package"
        },
        "author": {
          "$ref": "#/definitions/MetadataAuthor",
          "description": "The author of the package"
        },
        "support": {
          "$ref": "#/definitions/MetadataSupport",
          "description": "The support tier of the package"
        },
        "dependencies": {
          "$ref": "#/definitions/MetadataDependencies",
          "description": "The support tier of the package"
        },
        "providers": {
          "type": "array",
          "description": "Providers for the package item",
          "items": {
            "type": "string"
          }
        },
        "firstPublishDate": {
          "type": "string",
          "format": "date",
          "description": "first publish date package item"
        },
        "lastPublishDate": {
          "type": "string",
          "format": "date",
          "description": "last publish date for the package item"
        },
        "categories": {
          "$ref": "#/definitions/MetadataCategories",
          "description": "The categories of the package"
        },
        "threatAnalysisTactics": {
          "type": "array",
          "description": "the tactics the resource covers",
          "items": {
            "type": "string"
          }
        },
        "threatAnalysisTechniques": {
          "type": "array",
          "description": "the techniques the resource covers, these have to be aligned with the tactics being used",
          "items": {
            "type": "string"
          }
        },
        "icon": {
          "type": "string",
          "description": "the icon identifier. this id can later be fetched from the content metadata"
        },
        "installedVersion": {
          "type": "string",
          "description": "The version of the installed package, null or absent means not installed."
        },
        "metadataResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The metadata resource id."
        },
        "packagedContent": {
          "description": "The json of the ARM template to deploy. Expandable."
        }
      }
    },
    "ProductTemplateList": {
      "type": "object",
      "description": "List of all the template.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProductTemplateModel items on this page",
          "items": {
            "$ref": "#/definitions/ProductTemplateModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProductTemplateModel": {
      "type": "object",
      "description": "Template resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProductTemplateProperties",
          "description": "template properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProductTemplateProperties": {
      "type": "object",
      "description": "Template property bag.",
      "properties": {
        "contentId": {
          "type": "string",
          "description": "Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name"
        },
        "contentProductId": {
          "type": "string",
          "description": "Unique ID for the content. It should be generated based on the contentId of the package, contentId of the template, contentKind of the template and the contentVersion of the template"
        },
        "packageVersion": {
          "type": "string",
          "description": "Version of the package.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks"
        },
        "version": {
          "type": "string",
          "description": "Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the template"
        },
        "contentKind": {
          "$ref": "#/definitions/Kind",
          "description": "The kind of content the template is for."
        },
        "source": {
          "$ref": "#/definitions/MetadataSource",
          "description": "Source of the content.  This is where/how it was created."
        },
        "author": {
          "$ref": "#/definitions/MetadataAuthor",
          "description": "The creator of the content item."
        },
        "support": {
          "$ref": "#/definitions/MetadataSupport",
          "description": "Support information for the template - type, name, contact information"
        },
        "dependencies": {
          "$ref": "#/definitions/MetadataDependencies",
          "description": "Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats."
        },
        "categories": {
          "$ref": "#/definitions/MetadataCategories",
          "description": "Categories for the item"
        },
        "providers": {
          "type": "array",
          "description": "Providers for the content item",
          "items": {
            "type": "string"
          }
        },
        "firstPublishDate": {
          "type": "string",
          "format": "date",
          "description": "first publish date content item"
        },
        "lastPublishDate": {
          "type": "string",
          "format": "date",
          "description": "last publish date for the content item"
        },
        "customVersion": {
          "type": "string",
          "description": "The custom version of the content. A optional free text"
        },
        "contentSchemaVersion": {
          "type": "string",
          "description": "Schema version of the content. Can be used to distinguish between different flow based on the schema version"
        },
        "icon": {
          "type": "string",
          "description": "the icon identifier. this id can later be fetched from the content metadata"
        },
        "threatAnalysisTactics": {
          "type": "array",
          "description": "the tactics the resource covers",
          "items": {
            "type": "string"
          }
        },
        "threatAnalysisTechniques": {
          "type": "array",
          "description": "the techniques the resource covers, these have to be aligned with the tactics being used",
          "items": {
            "type": "string"
          }
        },
        "previewImages": {
          "type": "array",
          "description": "preview image file names. These will be taken from the solution artifacts",
          "items": {
            "type": "string"
          }
        },
        "previewImagesDark": {
          "type": "array",
          "description": "preview image file names. These will be taken from the solution artifacts. used for dark theme support",
          "items": {
            "type": "string"
          }
        },
        "packageId": {
          "type": "string",
          "description": "the package Id contains this template"
        },
        "packageKind": {
          "$ref": "#/definitions/PackageKind",
          "description": "the packageKind of the package contains this template"
        },
        "packageName": {
          "type": "string",
          "description": "the name of the package contains this template"
        },
        "isDeprecated": {
          "$ref": "#/definitions/Flag",
          "description": "Flag indicates if this template is deprecated",
          "readOnly": true
        },
        "packagedContent": {
          "description": "The json of the ARM template to deploy"
        }
      }
    },
    "PropertyArrayChangedConditionProperties": {
      "type": "object",
      "description": "Describes an automation rule condition that evaluates an array property's value change",
      "properties": {
        "conditionProperties": {
          "$ref": "#/definitions/AutomationRulePropertyArrayChangedValuesCondition"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "PropertyArrayChanged"
    },
    "PropertyArrayConditionProperties": {
      "type": "object",
      "description": "Describes an automation rule condition that evaluates an array property's value",
      "properties": {
        "conditionProperties": {
          "$ref": "#/definitions/AutomationRulePropertyArrayValuesCondition",
          "description": "Describes an automation rule condition on array properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "PropertyArray"
    },
    "PropertyChangedConditionProperties": {
      "type": "object",
      "description": "Describes an automation rule condition that evaluates a property's value change",
      "properties": {
        "conditionProperties": {
          "$ref": "#/definitions/AutomationRulePropertyValuesChangedCondition"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "PropertyChanged"
    },
    "PropertyConditionProperties": {
      "type": "object",
      "description": "Describes an automation rule condition that evaluates a property's value",
      "properties": {
        "conditionProperties": {
          "$ref": "#/definitions/AutomationRulePropertyValuesCondition"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "Property"
    },
    "ProviderPermissionsScope": {
      "type": "string",
      "description": "The scope on which the user should have permissions, in order to be able to create connections.",
      "enum": [
        "Subscription",
        "ResourceGroup",
        "Workspace"
      ],
      "x-ms-enum": {
        "name": "ProviderPermissionsScope",
        "modelAsString": true,
        "values": [
          {
            "name": "Subscription",
            "value": "Subscription"
          },
          {
            "name": "ResourceGroup",
            "value": "ResourceGroup"
          },
          {
            "name": "Workspace",
            "value": "Workspace"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Describes provisioning state",
      "enum": [
        "New",
        "InProgress",
        "Uploading",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "New",
            "value": "New",
            "description": "The New provisioning state."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "The InProgress provisioning state."
          },
          {
            "name": "Uploading",
            "value": "Uploading",
            "description": "The Uploading provisioning state."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The Deleting provisioning state."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The Succeeded provisioning state."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The Failed provisioning state."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The Canceled provisioning state."
          }
        ]
      }
    },
    "PullRequest": {
      "type": "object",
      "description": "Information regarding pull request for protected branches.",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL of pull request",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/State",
          "description": "State of the pull request",
          "readOnly": true
        }
      }
    },
    "RegistryHive": {
      "type": "string",
      "description": "the hive that holds the registry key.",
      "enum": [
        "HKEY_LOCAL_MACHINE",
        "HKEY_CLASSES_ROOT",
        "HKEY_CURRENT_CONFIG",
        "HKEY_USERS",
        "HKEY_CURRENT_USER_LOCAL_SETTINGS",
        "HKEY_PERFORMANCE_DATA",
        "HKEY_PERFORMANCE_NLSTEXT",
        "HKEY_PERFORMANCE_TEXT",
        "HKEY_A",
        "HKEY_CURRENT_USER"
      ],
      "x-ms-enum": {
        "name": "RegistryHive",
        "modelAsString": true,
        "values": [
          {
            "name": "HKEY_LOCAL_MACHINE",
            "value": "HKEY_LOCAL_MACHINE",
            "description": "HKEY_LOCAL_MACHINE"
          },
          {
            "name": "HKEY_CLASSES_ROOT",
            "value": "HKEY_CLASSES_ROOT",
            "description": "HKEY_CLASSES_ROOT"
          },
          {
            "name": "HKEY_CURRENT_CONFIG",
            "value": "HKEY_CURRENT_CONFIG",
            "description": "HKEY_CURRENT_CONFIG"
          },
          {
            "name": "HKEY_USERS",
            "value": "HKEY_USERS",
            "description": "HKEY_USERS"
          },
          {
            "name": "HKEY_CURRENT_USER_LOCAL_SETTINGS",
            "value": "HKEY_CURRENT_USER_LOCAL_SETTINGS",
            "description": "HKEY_CURRENT_USER_LOCAL_SETTINGS"
          },
          {
            "name": "HKEY_PERFORMANCE_DATA",
            "value": "HKEY_PERFORMANCE_DATA",
            "description": "HKEY_PERFORMANCE_DATA"
          },
          {
            "name": "HKEY_PERFORMANCE_NLSTEXT",
            "value": "HKEY_PERFORMANCE_NLSTEXT",
            "description": "HKEY_PERFORMANCE_NLSTEXT"
          },
          {
            "name": "HKEY_PERFORMANCE_TEXT",
            "value": "HKEY_PERFORMANCE_TEXT",
            "description": "HKEY_PERFORMANCE_TEXT"
          },
          {
            "name": "HKEY_A",
            "value": "HKEY_A",
            "description": "HKEY_A"
          },
          {
            "name": "HKEY_CURRENT_USER",
            "value": "HKEY_CURRENT_USER",
            "description": "HKEY_CURRENT_USER"
          }
        ]
      }
    },
    "RegistryKeyEntity": {
      "type": "object",
      "description": "Represents a registry key entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RegistryKeyEntityProperties",
          "description": "RegistryKey entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "RegistryKey"
    },
    "RegistryKeyEntityProperties": {
      "type": "object",
      "description": "RegistryKey entity property bag.",
      "properties": {
        "hive": {
          "$ref": "#/definitions/RegistryHive",
          "description": "the hive that holds the registry key.",
          "readOnly": true
        },
        "key": {
          "type": "string",
          "description": "The registry key path.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "RegistryValueEntity": {
      "type": "object",
      "description": "Represents a registry value entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RegistryValueEntityProperties",
          "description": "RegistryKey entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "RegistryValue"
    },
    "RegistryValueEntityProperties": {
      "type": "object",
      "description": "RegistryValue entity property bag.",
      "properties": {
        "keyEntityId": {
          "type": "string",
          "description": "The registry key entity id.",
          "readOnly": true
        },
        "valueData": {
          "type": "string",
          "description": "String formatted representation of the value data.",
          "readOnly": true
        },
        "valueName": {
          "type": "string",
          "description": "The registry value name.",
          "readOnly": true
        },
        "valueType": {
          "$ref": "#/definitions/RegistryValueKind",
          "description": "Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "RegistryValueKind": {
      "type": "string",
      "description": "Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry.",
      "enum": [
        "None",
        "Unknown",
        "String",
        "ExpandString",
        "Binary",
        "DWord",
        "MultiString",
        "QWord"
      ],
      "x-ms-enum": {
        "name": "RegistryValueKind",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "None"
          },
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Unknown value type"
          },
          {
            "name": "String",
            "value": "String",
            "description": "String value type"
          },
          {
            "name": "ExpandString",
            "value": "ExpandString",
            "description": "ExpandString value type"
          },
          {
            "name": "Binary",
            "value": "Binary",
            "description": "Binary value type"
          },
          {
            "name": "DWord",
            "value": "DWord",
            "description": "DWord value type"
          },
          {
            "name": "MultiString",
            "value": "MultiString",
            "description": "MultiString value type"
          },
          {
            "name": "QWord",
            "value": "QWord",
            "description": "QWord value type"
          }
        ]
      }
    },
    "Relation": {
      "type": "object",
      "description": "Represents a relation between two resources",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RelationProperties",
          "description": "Relation properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RelationList": {
      "type": "object",
      "description": "List of relations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Relation items on this page",
          "items": {
            "$ref": "#/definitions/Relation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RelationProperties": {
      "type": "object",
      "description": "Relation property bag.",
      "properties": {
        "relatedResourceId": {
          "type": "string",
          "description": "The resource ID of the related resource"
        },
        "relatedResourceName": {
          "type": "string",
          "description": "The name of the related resource",
          "readOnly": true
        },
        "relatedResourceType": {
          "type": "string",
          "description": "The resource type of the related resource",
          "readOnly": true
        },
        "relatedResourceKind": {
          "type": "string",
          "description": "The resource kind of the related resource",
          "readOnly": true
        }
      },
      "required": [
        "relatedResourceId"
      ]
    },
    "Repo": {
      "type": "object",
      "description": "Represents a repository.",
      "properties": {
        "url": {
          "type": "string",
          "description": "The url to access the repository."
        },
        "fullName": {
          "type": "string",
          "description": "The name of the repository."
        },
        "installationId": {
          "type": "integer",
          "format": "int64",
          "description": "The installation id of the repository."
        },
        "branches": {
          "type": "array",
          "description": "Array of branches.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RepoList": {
      "type": "object",
      "description": "List all the source controls.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Repo items on this page",
          "items": {
            "$ref": "#/definitions/Repo"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RepoType": {
      "type": "string",
      "description": "The type of repository.",
      "enum": [
        "Github",
        "AzureDevOps"
      ],
      "x-ms-enum": {
        "name": "RepoType",
        "modelAsString": true,
        "values": [
          {
            "name": "Github",
            "value": "Github"
          },
          {
            "name": "AzureDevOps",
            "value": "AzureDevOps"
          }
        ]
      }
    },
    "Repository": {
      "type": "object",
      "description": "metadata of a repository.",
      "properties": {
        "url": {
          "type": "string",
          "description": "Url of repository."
        },
        "branch": {
          "type": "string",
          "description": "Branch name of repository."
        },
        "displayUrl": {
          "type": "string",
          "description": "Display url of repository."
        },
        "deploymentLogsUrl": {
          "type": "string",
          "description": "Url to access repository action logs.",
          "readOnly": true
        }
      },
      "required": [
        "url",
        "branch"
      ]
    },
    "RepositoryAccess": {
      "type": "object",
      "description": "Credentials to access repository.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/RepositoryAccessKind",
          "description": "The kind of repository access credentials"
        },
        "code": {
          "type": "string",
          "description": "OAuth Code. Required when `kind` is `OAuth`"
        },
        "state": {
          "type": "string",
          "description": "OAuth State. Required when `kind` is `OAuth`"
        },
        "clientId": {
          "type": "string",
          "description": "OAuth ClientId. Required when `kind` is `OAuth`"
        },
        "token": {
          "type": "string",
          "description": "Personal Access Token. Required when `kind` is `PAT`"
        },
        "installationId": {
          "type": "string",
          "description": "Application installation ID. Required when `kind` is `App`. Supported by `GitHub` only."
        }
      },
      "required": [
        "kind"
      ]
    },
    "RepositoryAccessKind": {
      "type": "string",
      "description": "The kind of repository access credentials",
      "enum": [
        "OAuth",
        "PAT",
        "App"
      ],
      "x-ms-enum": {
        "name": "RepositoryAccessKind",
        "modelAsString": true,
        "values": [
          {
            "name": "OAuth",
            "value": "OAuth"
          },
          {
            "name": "PAT",
            "value": "PAT"
          },
          {
            "name": "App",
            "value": "App"
          }
        ]
      }
    },
    "RepositoryAccessObject": {
      "type": "object",
      "description": "Credentials to access repository.",
      "properties": {
        "repositoryAccess": {
          "$ref": "#/definitions/RepositoryAccess",
          "description": "RepositoryAccess properties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "repositoryAccess"
      ]
    },
    "RepositoryAccessProperties": {
      "type": "object",
      "description": "Credentials to access repository.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RepositoryAccessObject",
          "description": "RepositoryAccess properties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "RepositoryResourceInfo": {
      "type": "object",
      "description": "Resources created in user's repository for the source-control.",
      "properties": {
        "webhook": {
          "$ref": "#/definitions/Webhook",
          "description": "The webhook object created for the source-control."
        },
        "gitHubResourceInfo": {
          "$ref": "#/definitions/GitHubResourceInfo",
          "description": "Resources created in GitHub for this source-control.",
          "readOnly": true
        },
        "azureDevOpsResourceInfo": {
          "$ref": "#/definitions/AzureDevOpsResourceInfo",
          "description": "Resources created in Azure DevOps for this source-control.",
          "readOnly": true
        }
      }
    },
    "ResourceProviderRequiredPermissions": {
      "type": "object",
      "description": "Required permissions for the connector resource provider that define in ResourceProviders.\nFor more information about the permissions see <see href=\"https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#actions-format\">here</see>.",
      "properties": {
        "read": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the permission is read action (GET)."
        },
        "write": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the permission is write action (PUT or PATCH)."
        },
        "delete": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the permission is delete action (DELETE)."
        },
        "action": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the permission is custom actions (POST)."
        }
      }
    },
    "RestApiPollerDataConnector": {
      "type": "object",
      "description": "Represents Rest Api Poller data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestApiPollerDataConnectorProperties",
          "description": "Rest Api Poller data connector properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The data connector kind",
          "enum": [
            "RestApiPoller"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ]
    },
    "RestApiPollerDataConnectorProperties": {
      "type": "object",
      "description": "Rest Api Poller data connector properties.",
      "properties": {
        "connectorDefinitionName": {
          "type": "string",
          "description": "The connector definition name (the dataConnectorDefinition resource id)."
        },
        "auth": {
          "$ref": "#/definitions/CcpAuthConfig",
          "description": "The a authentication model."
        },
        "request": {
          "$ref": "#/definitions/RestApiPollerRequestConfig",
          "description": "The request configuration."
        },
        "dcrConfig": {
          "$ref": "#/definitions/DCRConfiguration",
          "description": "The DCR related properties."
        },
        "isActive": {
          "type": "boolean",
          "description": "Indicates whether the connector is active or not."
        },
        "dataType": {
          "type": "string",
          "description": "The Log Analytics table destination."
        },
        "response": {
          "$ref": "#/definitions/CcpResponseConfig",
          "description": "The response configuration."
        },
        "paging": {
          "$ref": "#/definitions/RestApiPollerRequestPagingConfig",
          "description": "The paging configuration."
        },
        "addOnAttributes": {
          "type": "object",
          "description": "The add on attributes. The key name will become attribute name (a column) and the value will become the attribute value in the payload.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "connectorDefinitionName",
        "auth",
        "request"
      ]
    },
    "RestApiPollerRequestConfig": {
      "type": "object",
      "description": "The request configuration.",
      "properties": {
        "apiEndpoint": {
          "type": "string",
          "description": "The API endpoint."
        },
        "rateLimitQPS": {
          "type": "integer",
          "format": "int32",
          "description": "The Rate limit queries per second for the request.."
        },
        "queryWindowInMin": {
          "type": "integer",
          "format": "int32",
          "description": "The query window in minutes for the request."
        },
        "httpMethod": {
          "$ref": "#/definitions/HttpMethodVerb",
          "description": "The HTTP method, default value GET."
        },
        "queryTimeFormat": {
          "type": "string",
          "description": "The query time format. A remote server can have a query to pull data from range 'start' to 'end'. This property indicate what is the expected time format the remote server know to parse."
        },
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The retry count."
        },
        "timeoutInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The timeout in seconds."
        },
        "isPostPayloadJson": {
          "type": "boolean",
          "description": "Flag to indicate if HTTP POST payload is in JSON format (vs form-urlencoded)."
        },
        "headers": {
          "type": "object",
          "description": "The header for the request for the remote server.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryParameters": {
          "type": "object",
          "description": "The HTTP query parameters to RESTful API.",
          "additionalProperties": {}
        },
        "queryParametersTemplate": {
          "type": "string",
          "description": "the query parameters template. Defines the query parameters template to use when passing query parameters in advanced scenarios."
        },
        "startTimeAttributeName": {
          "type": "string",
          "description": "The query parameter name which the remote server expect to start query. This property goes hand to hand with `endTimeAttributeName`."
        },
        "endTimeAttributeName": {
          "type": "string",
          "description": "The query parameter name which the remote server expect to end query. This property goes hand to hand with `startTimeAttributeName`"
        },
        "queryTimeIntervalAttributeName": {
          "type": "string",
          "description": "The query parameter name which we need to send the server for query logs in time interval. Should be defined with `queryTimeIntervalPrepend` and `queryTimeIntervalDelimiter`"
        },
        "queryTimeIntervalPrepend": {
          "type": "string",
          "description": "The string prepend to the value of the query parameter in `queryTimeIntervalAttributeName`."
        },
        "queryTimeIntervalDelimiter": {
          "type": "string",
          "description": "The delimiter string between 2 QueryTimeFormat in the query parameter `queryTimeIntervalAttributeName`."
        }
      },
      "required": [
        "apiEndpoint"
      ]
    },
    "RestApiPollerRequestPagingConfig": {
      "type": "object",
      "description": "The request paging configuration.",
      "properties": {
        "pagingType": {
          "$ref": "#/definitions/RestApiPollerRequestPagingKind",
          "description": "Type of paging"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Page size"
        },
        "pageSizeParameterName": {
          "type": "string",
          "description": "Page size parameter name"
        }
      },
      "required": [
        "pagingType"
      ]
    },
    "RestApiPollerRequestPagingCountBaseConfig": {
      "type": "object",
      "description": "The request paging configuration for Count base paging type parameters.",
      "properties": {
        "zeroBasedIndexing": {
          "type": "boolean",
          "description": "Indicates whether the count is zero based"
        },
        "pageCountJsonPath": {
          "type": "string",
          "description": "JSON path of page count in HTTP response payload"
        },
        "pageNumberParaName": {
          "type": "string",
          "description": "Parameter name of page number in HTTP request"
        },
        "pageNumberJsonPath": {
          "type": "string",
          "description": "JSON path of page number in HTTP response payload"
        },
        "totalResultsJsonPath": {
          "type": "string",
          "description": "JSON path of total number of results in HTTP response payload"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RestApiPollerRequestPagingConfig"
        }
      ]
    },
    "RestApiPollerRequestPagingKind": {
      "type": "string",
      "description": "Type of paging",
      "enum": [
        "LinkHeader",
        "NextPageToken",
        "NextPageUrl",
        "PersistentToken",
        "PersistentLinkHeader",
        "Offset",
        "CountBasedPaging"
      ],
      "x-ms-enum": {
        "name": "RestApiPollerRequestPagingKind",
        "modelAsString": true,
        "values": [
          {
            "name": "LinkHeader",
            "value": "LinkHeader"
          },
          {
            "name": "NextPageToken",
            "value": "NextPageToken"
          },
          {
            "name": "NextPageUrl",
            "value": "NextPageUrl"
          },
          {
            "name": "PersistentToken",
            "value": "PersistentToken"
          },
          {
            "name": "PersistentLinkHeader",
            "value": "PersistentLinkHeader"
          },
          {
            "name": "Offset",
            "value": "Offset"
          },
          {
            "name": "CountBasedPaging",
            "value": "CountBasedPaging"
          }
        ]
      }
    },
    "RestApiPollerRequestPagingLinkHeaderConfig": {
      "type": "object",
      "description": "The request paging configuration for LinkHeader and PersistentLinkHeader paging type parameters.",
      "properties": {
        "linkHeaderTokenJsonPath": {
          "type": "string",
          "description": "JSON path of link header token in HTTP response payload"
        },
        "linkHeaderRelLinkName": {
          "type": "string",
          "description": "Rel link name from the link header"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RestApiPollerRequestPagingConfig"
        }
      ]
    },
    "RestApiPollerRequestPagingNextPageUrlConfig": {
      "type": "object",
      "description": "The request paging configuration for NextPageUrl paging type parameters.",
      "properties": {
        "nextPageUrl": {
          "type": "string",
          "description": "Next page URL"
        },
        "nextPageUrlQueryParameters": {
          "type": "object",
          "description": "Query parameters of next page URL",
          "additionalProperties": {
            "type": "string"
          }
        },
        "nextPageUrlQueryParametersTemplate": {
          "type": "string",
          "description": "Paging query parameters in string template format"
        },
        "nextPageParaName": {
          "type": "string",
          "description": "Next page parameter name in HTTP request"
        },
        "nextPageRequestHeader": {
          "type": "string",
          "description": "Next page header name in the request"
        },
        "hasNextFlagJsonPath": {
          "type": "string",
          "description": "JSON path of flag in HTTP response payload to indicate more pages"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RestApiPollerRequestPagingConfig"
        }
      ]
    },
    "RestApiPollerRequestPagingOffsetConfig": {
      "type": "object",
      "description": "The request paging configuration for Offset paging type parameters.",
      "properties": {
        "offsetParaName": {
          "type": "string",
          "description": "Offset parameter name in HTTP request"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RestApiPollerRequestPagingConfig"
        }
      ]
    },
    "RestApiPollerRequestPagingTokenConfig": {
      "type": "object",
      "description": "The request paging configuration for NextPageToken and PersistentToken paging type parameters.",
      "properties": {
        "nextPageTokenJsonPath": {
          "type": "string",
          "description": "JSON path of next page token in HTTP response payload"
        },
        "hasNextFlagJsonPath": {
          "type": "string",
          "description": "JSON path of flag in HTTP response payload to indicate more pages"
        },
        "nextPageTokenResponseHeader": {
          "type": "string",
          "description": "HTTP response header name of next page token"
        },
        "nextPageParaName": {
          "type": "string",
          "description": "Next page parameter name in HTTP request"
        },
        "nextPageRequestHeader": {
          "type": "string",
          "description": "Next page header name in the request"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RestApiPollerRequestPagingConfig"
        }
      ]
    },
    "ScheduledAlertRule": {
      "type": "object",
      "description": "Represents scheduled alert rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduledAlertRuleProperties",
          "description": "Scheduled alert rule properties",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The alert rule kind",
          "enum": [
            "Scheduled"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AlertRule"
        }
      ]
    },
    "ScheduledAlertRuleCommonProperties": {
      "type": "object",
      "description": "Scheduled alert rule template property bag.",
      "properties": {
        "query": {
          "type": "string",
          "description": "The query that creates alerts for this rule."
        },
        "queryFrequency": {
          "type": "string",
          "format": "duration",
          "description": "The frequency (in ISO 8601 duration format) for this alert rule to run."
        },
        "queryPeriod": {
          "type": "string",
          "format": "duration",
          "description": "The period (in ISO 8601 duration format) that this alert rule looks at."
        },
        "severity": {
          "$ref": "#/definitions/AlertSeverity",
          "description": "The severity for alerts created by this alert rule."
        },
        "triggerOperator": {
          "$ref": "#/definitions/TriggerOperator",
          "description": "The operation against the threshold that triggers alert rule."
        },
        "triggerThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "The threshold triggers this alert rule."
        },
        "eventGroupingSettings": {
          "$ref": "#/definitions/EventGroupingSettings",
          "description": "The event grouping settings."
        },
        "customDetails": {
          "type": "object",
          "description": "Dictionary of string key-value pairs of columns to be attached to the alert",
          "additionalProperties": {
            "type": "string"
          }
        },
        "entityMappings": {
          "type": "array",
          "description": "Array of the entity mappings of the alert rule",
          "items": {
            "$ref": "#/definitions/EntityMapping"
          }
        },
        "alertDetailsOverride": {
          "$ref": "#/definitions/AlertDetailsOverride",
          "description": "The alert details override settings"
        }
      }
    },
    "ScheduledAlertRuleProperties": {
      "type": "object",
      "description": "Scheduled alert rule base property bag.",
      "properties": {
        "alertRuleTemplateName": {
          "type": "string",
          "description": "The Name of the alert rule template used to create this rule."
        },
        "templateVersion": {
          "type": "string",
          "description": "The version of the alert rule template used to create this rule - in format <a.b.c>, where all are numbers, for example 0 <1.0.2>"
        },
        "description": {
          "type": "string",
          "description": "The description of the alert rule."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for alerts created by this alert rule."
        },
        "enabled": {
          "type": "boolean",
          "description": "Determines whether this alert rule is enabled or disabled."
        },
        "lastModifiedUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The last time that this alert rule has been modified.",
          "readOnly": true
        },
        "suppressionDuration": {
          "type": "string",
          "format": "duration",
          "description": "The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered."
        },
        "suppressionEnabled": {
          "type": "boolean",
          "description": "Determines whether the suppression for this alert rule is enabled or disabled."
        },
        "tactics": {
          "type": "array",
          "description": "The tactics of the alert rule",
          "items": {
            "$ref": "#/definitions/AttackTactic"
          },
          "x-ms-identifiers": []
        },
        "techniques": {
          "type": "array",
          "description": "The techniques of the alert rule",
          "items": {
            "type": "string"
          }
        },
        "incidentConfiguration": {
          "$ref": "#/definitions/IncidentConfiguration",
          "description": "The settings of the incidents that created from alerts triggered by this analytics rule"
        }
      },
      "required": [
        "displayName",
        "enabled",
        "suppressionDuration",
        "suppressionEnabled"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ScheduledAlertRuleCommonProperties"
        }
      ]
    },
    "ScheduledAlertRuleTemplate": {
      "type": "object",
      "description": "Represents scheduled alert rule template.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduledAlertRuleTemplateProperties",
          "description": "Scheduled alert rule template properties",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The alert rule kind",
          "enum": [
            "Scheduled"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AlertRuleTemplate"
        }
      ]
    },
    "ScheduledAlertRuleTemplateProperties": {
      "type": "object",
      "description": "Scheduled alert rule template properties",
      "properties": {
        "alertRulesCreatedByTemplateCount": {
          "type": "integer",
          "format": "int32",
          "description": "the number of alert rules that were created by this template"
        },
        "createdDateUTC": {
          "type": "string",
          "format": "date-time",
          "description": "The time that this alert rule template has been added.",
          "readOnly": true
        },
        "lastUpdatedDateUTC": {
          "type": "string",
          "format": "date-time",
          "description": "The time that this alert rule template was last updated.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the alert rule template."
        },
        "displayName": {
          "type": "string",
          "description": "The display name for alert rule template."
        },
        "requiredDataConnectors": {
          "type": "array",
          "description": "The required data connectors for this template",
          "items": {
            "$ref": "#/definitions/AlertRuleTemplateDataSource"
          },
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/TemplateStatus",
          "description": "The alert rule template status."
        },
        "query": {
          "type": "string",
          "description": "The query that creates alerts for this rule."
        },
        "queryFrequency": {
          "type": "string",
          "format": "duration",
          "description": "The frequency (in ISO 8601 duration format) for this alert rule to run."
        },
        "queryPeriod": {
          "type": "string",
          "format": "duration",
          "description": "The period (in ISO 8601 duration format) that this alert rule looks at."
        },
        "severity": {
          "$ref": "#/definitions/AlertSeverity",
          "description": "The severity for alerts created by this alert rule."
        },
        "triggerOperator": {
          "$ref": "#/definitions/TriggerOperator",
          "description": "The operation against the threshold that triggers alert rule."
        },
        "triggerThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "The threshold triggers this alert rule."
        },
        "tactics": {
          "type": "array",
          "description": "The tactics of the alert rule template",
          "items": {
            "$ref": "#/definitions/AttackTactic"
          },
          "x-ms-identifiers": []
        },
        "techniques": {
          "type": "array",
          "description": "The techniques of the alert rule template",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "type": "string",
          "description": "The version of this template - in format <a.b.c>, where all are numbers. For example <1.0.2>."
        },
        "eventGroupingSettings": {
          "$ref": "#/definitions/EventGroupingSettings",
          "description": "The event grouping settings."
        },
        "customDetails": {
          "type": "object",
          "description": "Dictionary of string key-value pairs of columns to be attached to the alert",
          "additionalProperties": {
            "type": "string"
          }
        },
        "entityMappings": {
          "type": "array",
          "description": "Array of the entity mappings of the alert rule",
          "items": {
            "$ref": "#/definitions/EntityMapping"
          }
        },
        "alertDetailsOverride": {
          "$ref": "#/definitions/AlertDetailsOverride",
          "description": "The alert details override settings"
        }
      }
    },
    "SecurityAlert": {
      "type": "object",
      "description": "Represents a security alert entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecurityAlertProperties",
          "description": "SecurityAlert entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "SecurityAlert"
    },
    "SecurityAlertProperties": {
      "type": "object",
      "description": "SecurityAlert entity property bag.",
      "properties": {
        "alertDisplayName": {
          "type": "string",
          "description": "The display name of the alert.",
          "readOnly": true
        },
        "alertType": {
          "type": "string",
          "description": "The type name of the alert.",
          "readOnly": true
        },
        "compromisedEntity": {
          "type": "string",
          "description": "Display name of the main entity being reported on.",
          "readOnly": true
        },
        "confidenceLevel": {
          "$ref": "#/definitions/ConfidenceLevel",
          "description": "The confidence level of this alert.",
          "readOnly": true
        },
        "confidenceReasons": {
          "type": "array",
          "description": "The confidence reasons",
          "items": {
            "$ref": "#/definitions/SecurityAlertPropertiesConfidenceReasonsItem"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "The confidence score of the alert.",
          "readOnly": true
        },
        "confidenceScoreStatus": {
          "$ref": "#/definitions/ConfidenceScoreStatus",
          "description": "The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Alert description.",
          "readOnly": true
        },
        "endTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The impact end time of the alert (the time of the last event contributing to the alert).",
          "readOnly": true
        },
        "intent": {
          "$ref": "#/definitions/KillChainIntent",
          "description": "Holds the alert intent stage(s) mapping for this alert.",
          "readOnly": true
        },
        "providerAlertId": {
          "type": "string",
          "description": "The identifier of the alert inside the product which generated the alert.",
          "readOnly": true
        },
        "processingEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the alert was made available for consumption.",
          "readOnly": true
        },
        "productComponentName": {
          "type": "string",
          "description": "The name of a component inside the product which generated the alert.",
          "readOnly": true
        },
        "productName": {
          "type": "string",
          "description": "The name of the product which published this alert.",
          "readOnly": true
        },
        "productVersion": {
          "type": "string",
          "description": "The version of the product generating the alert.",
          "readOnly": true
        },
        "remediationSteps": {
          "type": "array",
          "description": "Manual action items to take to remediate the alert.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "severity": {
          "$ref": "#/definitions/AlertSeverity",
          "description": "The severity of the alert"
        },
        "startTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The impact start time of the alert (the time of the first event contributing to the alert).",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/AlertStatus",
          "description": "The lifecycle status of the alert.",
          "readOnly": true
        },
        "systemAlertId": {
          "type": "string",
          "description": "Holds the product identifier of the alert for the product.",
          "readOnly": true
        },
        "tactics": {
          "type": "array",
          "description": "The tactics of the alert",
          "items": {
            "$ref": "#/definitions/AttackTactic"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "timeGenerated": {
          "type": "string",
          "format": "date-time",
          "description": "The time the alert was generated.",
          "readOnly": true
        },
        "vendorName": {
          "type": "string",
          "description": "The name of the vendor that raise the alert.",
          "readOnly": true
        },
        "alertLink": {
          "type": "string",
          "description": "The uri link of the alert.",
          "readOnly": true
        },
        "resourceIdentifiers": {
          "type": "array",
          "description": "The list of resource identifiers of the alert.",
          "items": {},
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "SecurityAlertPropertiesConfidenceReasonsItem": {
      "type": "object",
      "description": "confidence reason item",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason's description",
          "readOnly": true
        },
        "reasonType": {
          "type": "string",
          "description": "The type (category) of the reason",
          "readOnly": true
        }
      }
    },
    "SecurityGroupEntity": {
      "type": "object",
      "description": "Represents a security group entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecurityGroupEntityProperties",
          "description": "SecurityGroup entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "SecurityGroup"
    },
    "SecurityGroupEntityProperties": {
      "type": "object",
      "description": "SecurityGroup entity property bag.",
      "properties": {
        "distinguishedName": {
          "type": "string",
          "description": "The group distinguished name",
          "readOnly": true
        },
        "objectGuid": {
          "type": "string",
          "format": "uuid",
          "description": "A single-value attribute that is the unique identifier for the object, assigned by active directory.",
          "readOnly": true
        },
        "sid": {
          "type": "string",
          "description": "The SID attribute is a single-value attribute that specifies the security identifier (SID) of the group",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "SecurityMLAnalyticsSetting": {
      "type": "object",
      "description": "Security ML Analytics Setting",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "$ref": "#/definitions/SecurityMLAnalyticsSettingsKind",
          "description": "The kind of security ML Analytics Settings"
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SecurityMLAnalyticsSettingsDataSource": {
      "type": "object",
      "description": "security ml analytics settings data sources",
      "properties": {
        "connectorId": {
          "type": "string",
          "description": "The connector id that provides the following data types"
        },
        "dataTypes": {
          "type": "array",
          "description": "The data types used by the security ml analytics settings",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SecurityMLAnalyticsSettingsKind": {
      "type": "string",
      "description": "The kind of security ML analytics settings",
      "enum": [
        "Anomaly"
      ],
      "x-ms-enum": {
        "name": "SecurityMLAnalyticsSettingsKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Anomaly",
            "value": "Anomaly"
          }
        ]
      }
    },
    "SecurityMLAnalyticsSettingsList": {
      "type": "object",
      "description": "List all the SecurityMLAnalyticsSettings",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SecurityMLAnalyticsSetting items on this page",
          "items": {
            "$ref": "#/definitions/SecurityMLAnalyticsSetting"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SentinelOnboardingState": {
      "type": "object",
      "description": "Sentinel onboarding state",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SentinelOnboardingStateProperties",
          "description": "The Sentinel onboarding state object",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SentinelOnboardingStateProperties": {
      "type": "object",
      "description": "The Sentinel onboarding state properties",
      "properties": {
        "customerManagedKey": {
          "type": "boolean",
          "description": "Flag that indicates the status of the CMK setting"
        }
      }
    },
    "SentinelOnboardingStatesList": {
      "type": "object",
      "description": "List of the Sentinel onboarding states",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of Sentinel onboarding states",
          "items": {
            "$ref": "#/definitions/SentinelOnboardingState"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "ServicePrincipal": {
      "type": "object",
      "description": "Service principal metadata.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of service principal.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant id of service principal.",
          "readOnly": true
        },
        "appId": {
          "type": "string",
          "description": "App id of service principal.",
          "readOnly": true
        },
        "credentialsExpireOn": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration time of service principal credentials."
        }
      }
    },
    "SessionAuthModel": {
      "type": "object",
      "description": "Model for API authentication with session cookie.",
      "properties": {
        "userName": {
          "type": "object",
          "description": "The user name attribute key value.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "password": {
          "type": "object",
          "description": "The password attribute name.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryParameters": {
          "type": "object",
          "description": "Query parameters to session service endpoint.",
          "additionalProperties": {}
        },
        "isPostPayloadJson": {
          "type": "boolean",
          "description": "Indicating whether API key is set in HTTP POST payload."
        },
        "headers": {
          "type": "object",
          "description": "HTTP request headers to session service endpoint.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sessionTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Session timeout in minutes."
        },
        "sessionIdName": {
          "type": "string",
          "description": "Session id attribute name from HTTP response header."
        },
        "sessionLoginRequestUri": {
          "type": "string",
          "description": "HTTP request URL to session service endpoint."
        }
      },
      "required": [
        "userName",
        "password"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CcpAuthConfig"
        }
      ],
      "x-ms-discriminator-value": "Session"
    },
    "SettingsStatus": {
      "type": "string",
      "description": "The anomaly SecurityMLAnalyticsSettings status",
      "enum": [
        "Production",
        "Flighting"
      ],
      "x-ms-enum": {
        "name": "SettingsStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Production",
            "value": "Production",
            "description": "Anomaly settings status in Production mode"
          },
          {
            "name": "Flighting",
            "value": "Flighting",
            "description": "Anomaly settings status in Flighting mode"
          }
        ]
      }
    },
    "SourceControl": {
      "type": "object",
      "description": "Represents a SourceControl in Azure Security Insights.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SourceControlProperties",
          "description": "source control properties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SourceControlList": {
      "type": "object",
      "description": "List all the source controls.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SourceControl items on this page",
          "items": {
            "$ref": "#/definitions/SourceControl"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SourceControlProperties": {
      "type": "object",
      "description": "Describes source control properties",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id (a Guid) of the source control",
          "readOnly": true
        },
        "version": {
          "$ref": "#/definitions/Version",
          "description": "The version number associated with the source control",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the source control"
        },
        "description": {
          "type": "string",
          "description": "A description of the source control"
        },
        "repoType": {
          "$ref": "#/definitions/RepoType",
          "description": "The repository type of the source control"
        },
        "contentTypes": {
          "type": "array",
          "description": "Array of source control content types.",
          "items": {
            "$ref": "#/definitions/ContentType"
          }
        },
        "repository": {
          "$ref": "#/definitions/Repository",
          "description": "Repository metadata."
        },
        "servicePrincipal": {
          "$ref": "#/definitions/ServicePrincipal",
          "description": "Service principal metadata."
        },
        "workloadIdentityFederation": {
          "$ref": "#/definitions/WorkloadIdentityFederation",
          "description": "Workload Identity metadata.",
          "readOnly": true
        },
        "repositoryAccess": {
          "$ref": "#/definitions/RepositoryAccess",
          "description": "Repository access credentials. This is write-only object and it never returns back to a user.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "repositoryResourceInfo": {
          "$ref": "#/definitions/RepositoryResourceInfo",
          "description": "Information regarding the resources created in user's repository."
        },
        "lastDeploymentInfo": {
          "$ref": "#/definitions/DeploymentInfo",
          "description": "Information regarding the latest deployment for the source control.",
          "readOnly": true
        },
        "pullRequest": {
          "$ref": "#/definitions/PullRequest",
          "description": "Information regarding the pull request of the source control.",
          "readOnly": true
        }
      },
      "required": [
        "displayName",
        "repoType",
        "contentTypes",
        "repository"
      ]
    },
    "SourceKind": {
      "type": "string",
      "description": "Source type of the content",
      "enum": [
        "LocalWorkspace",
        "Community",
        "Solution",
        "SourceRepository"
      ],
      "x-ms-enum": {
        "name": "SourceKind",
        "modelAsString": true,
        "values": [
          {
            "name": "LocalWorkspace",
            "value": "LocalWorkspace"
          },
          {
            "name": "Community",
            "value": "Community"
          },
          {
            "name": "Solution",
            "value": "Solution"
          },
          {
            "name": "SourceRepository",
            "value": "SourceRepository"
          }
        ]
      }
    },
    "SourceType": {
      "type": "string",
      "description": "The sourceType of the watchlist",
      "enum": [
        "Local",
        "AzureStorage"
      ],
      "x-ms-enum": {
        "name": "SourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "Local",
            "value": "Local",
            "description": "The source from local file."
          },
          {
            "name": "AzureStorage",
            "value": "AzureStorage",
            "description": "The source from Azure storage."
          }
        ]
      }
    },
    "State": {
      "type": "string",
      "description": "Status of the pull request.",
      "enum": [
        "Open",
        "Closed"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "name": "Open",
            "value": "Open"
          },
          {
            "name": "Closed",
            "value": "Closed"
          }
        ]
      }
    },
    "SubmissionMailEntity": {
      "type": "object",
      "description": "Represents a submission mail entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SubmissionMailEntityProperties",
          "description": "Submission mail entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "SubmissionMail"
    },
    "SubmissionMailEntityProperties": {
      "type": "object",
      "description": "Submission mail entity property bag.",
      "properties": {
        "networkMessageId": {
          "type": "string",
          "format": "uuid",
          "description": "The network message id of email to which submission belongs",
          "readOnly": true
        },
        "submissionId": {
          "type": "string",
          "format": "uuid",
          "description": "The submission id",
          "readOnly": true
        },
        "submitter": {
          "type": "string",
          "description": "The submitter",
          "readOnly": true
        },
        "submissionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The submission date",
          "readOnly": true
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The Time stamp when the message is received (Mail)",
          "readOnly": true
        },
        "recipient": {
          "type": "string",
          "description": "The recipient of the mail",
          "readOnly": true
        },
        "sender": {
          "type": "string",
          "description": "The sender of the mail",
          "readOnly": true
        },
        "senderIp": {
          "type": "string",
          "description": "The sender's IP",
          "readOnly": true
        },
        "subject": {
          "type": "string",
          "description": "The subject of submission mail",
          "readOnly": true
        },
        "reportType": {
          "type": "string",
          "description": "The submission type for the given instance. This maps to Junk, Phish, Malware or NotJunk.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "SupportTier": {
      "type": "string",
      "description": "Type of support for content item",
      "enum": [
        "Microsoft",
        "Partner",
        "Community"
      ],
      "x-ms-enum": {
        "name": "SupportTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Microsoft",
            "value": "Microsoft"
          },
          {
            "name": "Partner",
            "value": "Partner"
          },
          {
            "name": "Community",
            "value": "Community"
          }
        ]
      }
    },
    "TIDataConnector": {
      "type": "object",
      "description": "Represents threat intelligence data connector.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TIDataConnectorProperties",
          "description": "TI (Threat Intelligence) data connector properties.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The data connector kind",
          "enum": [
            "ThreatIntelligence"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ]
    },
    "TIDataConnectorDataTypes": {
      "type": "object",
      "description": "The available data types for TI (Threat Intelligence) data connector.",
      "properties": {
        "indicators": {
          "$ref": "#/definitions/TIDataConnectorDataTypesIndicators",
          "description": "Data type for indicators connection."
        }
      }
    },
    "TIDataConnectorDataTypesIndicators": {
      "type": "object",
      "description": "Data type for indicators connection.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorDataTypeCommon"
        }
      ]
    },
    "TIDataConnectorProperties": {
      "type": "object",
      "description": "TI (Threat Intelligence) data connector properties.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant id to connect to, and get the data from."
        },
        "tipLookbackPeriod": {
          "type": "string",
          "format": "date-time",
          "description": "The lookback period for the feed to be imported."
        },
        "dataTypes": {
          "$ref": "#/definitions/TIDataConnectorDataTypes",
          "description": "The available data types for the connector."
        }
      }
    },
    "TemplateList": {
      "type": "object",
      "description": "List of all the template.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TemplateModel items on this page",
          "items": {
            "$ref": "#/definitions/TemplateModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TemplateModel": {
      "type": "object",
      "description": "Template resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TemplateProperties",
          "description": "template properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TemplateProperties": {
      "type": "object",
      "description": "Template property bag.",
      "properties": {
        "contentId": {
          "type": "string",
          "description": "Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name"
        },
        "contentProductId": {
          "type": "string",
          "description": "Unique ID for the content. It should be generated based on the contentId of the package, contentId of the template, contentKind of the template and the contentVersion of the template"
        },
        "packageVersion": {
          "type": "string",
          "description": "Version of the package.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks"
        },
        "version": {
          "type": "string",
          "description": "Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the template"
        },
        "contentKind": {
          "$ref": "#/definitions/Kind",
          "description": "The kind of content the template is for."
        },
        "source": {
          "$ref": "#/definitions/MetadataSource",
          "description": "Source of the content.  This is where/how it was created."
        },
        "author": {
          "$ref": "#/definitions/MetadataAuthor",
          "description": "The creator of the content item."
        },
        "support": {
          "$ref": "#/definitions/MetadataSupport",
          "description": "Support information for the template - type, name, contact information"
        },
        "dependencies": {
          "$ref": "#/definitions/MetadataDependencies",
          "description": "Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats."
        },
        "categories": {
          "$ref": "#/definitions/MetadataCategories",
          "description": "Categories for the item"
        },
        "providers": {
          "type": "array",
          "description": "Providers for the content item",
          "items": {
            "type": "string"
          }
        },
        "firstPublishDate": {
          "type": "string",
          "format": "date",
          "description": "first publish date content item"
        },
        "lastPublishDate": {
          "type": "string",
          "format": "date",
          "description": "last publish date for the content item"
        },
        "customVersion": {
          "type": "string",
          "description": "The custom version of the content. A optional free text"
        },
        "contentSchemaVersion": {
          "type": "string",
          "description": "Schema version of the content. Can be used to distinguish between different flow based on the schema version"
        },
        "icon": {
          "type": "string",
          "description": "the icon identifier. this id can later be fetched from the content metadata"
        },
        "threatAnalysisTactics": {
          "type": "array",
          "description": "the tactics the resource covers",
          "items": {
            "type": "string"
          }
        },
        "threatAnalysisTechniques": {
          "type": "array",
          "description": "the techniques the resource covers, these have to be aligned with the tactics being used",
          "items": {
            "type": "string"
          }
        },
        "previewImages": {
          "type": "array",
          "description": "preview image file names. These will be taken from the solution artifacts",
          "items": {
            "type": "string"
          }
        },
        "previewImagesDark": {
          "type": "array",
          "description": "preview image file names. These will be taken from the solution artifacts. used for dark theme support",
          "items": {
            "type": "string"
          }
        },
        "packageId": {
          "type": "string",
          "description": "the package Id contains this template"
        },
        "packageKind": {
          "$ref": "#/definitions/PackageKind",
          "description": "the packageKind of the package contains this template"
        },
        "packageName": {
          "type": "string",
          "description": "the name of the package contains this template"
        },
        "isDeprecated": {
          "$ref": "#/definitions/Flag",
          "description": "Flag indicates if this template is deprecated",
          "readOnly": true
        },
        "mainTemplate": {
          "description": "The JSON of the ARM template to deploy active content. Expandable."
        },
        "dependantTemplates": {
          "type": "array",
          "description": "Dependant templates. Expandable.",
          "items": {
            "$ref": "#/definitions/TemplateProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "contentId"
          ]
        }
      }
    },
    "TemplateStatus": {
      "type": "string",
      "description": "The alert rule template status.",
      "enum": [
        "Installed",
        "Available",
        "NotAvailable"
      ],
      "x-ms-enum": {
        "name": "TemplateStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Installed",
            "value": "Installed",
            "description": "Alert rule template installed. and can not use more then once"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Alert rule template is available."
          },
          {
            "name": "NotAvailable",
            "value": "NotAvailable",
            "description": "Alert rule template is not available"
          }
        ]
      }
    },
    "ThreatIntelligence": {
      "type": "object",
      "description": "ThreatIntelligence property bag.",
      "properties": {
        "confidence": {
          "type": "number",
          "format": "double",
          "description": "Confidence (must be between 0 and 1)",
          "readOnly": true
        },
        "providerName": {
          "type": "string",
          "description": "Name of the provider from whom this Threat Intelligence information was received",
          "readOnly": true
        },
        "reportLink": {
          "type": "string",
          "description": "Report link",
          "readOnly": true
        },
        "threatDescription": {
          "type": "string",
          "description": "Threat description (free text)",
          "readOnly": true
        },
        "threatName": {
          "type": "string",
          "description": "Threat name (e.g. \"Jedobot malware\")",
          "readOnly": true
        },
        "threatType": {
          "type": "string",
          "description": "Threat type (e.g. \"Botnet\")",
          "readOnly": true
        }
      }
    },
    "ThreatIntelligenceAppendTags": {
      "type": "object",
      "description": "Array of tags to be appended to the threat intelligence indicator.",
      "properties": {
        "threatIntelligenceTags": {
          "type": "array",
          "description": "List of tags to be appended.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ThreatIntelligenceExternalReference": {
      "type": "object",
      "description": "Describes external reference",
      "properties": {
        "description": {
          "type": "string",
          "description": "External reference description"
        },
        "externalId": {
          "type": "string",
          "description": "External reference ID"
        },
        "sourceName": {
          "type": "string",
          "description": "External reference source name"
        },
        "url": {
          "type": "string",
          "description": "External reference URL"
        },
        "hashes": {
          "type": "object",
          "description": "External reference hashes",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ThreatIntelligenceFilteringCriteria": {
      "type": "object",
      "description": "Filtering criteria for querying threat intelligence indicators.",
      "properties": {
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Page size"
        },
        "minConfidence": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum confidence."
        },
        "maxConfidence": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum confidence."
        },
        "minValidUntil": {
          "type": "string",
          "description": "Start time for ValidUntil filter."
        },
        "maxValidUntil": {
          "type": "string",
          "description": "End time for ValidUntil filter."
        },
        "includeDisabled": {
          "type": "boolean",
          "description": "Parameter to include/exclude disabled indicators."
        },
        "sortBy": {
          "type": "array",
          "description": "Columns to sort by and sorting order",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceSortingCriteria"
          },
          "x-ms-identifiers": []
        },
        "sources": {
          "type": "array",
          "description": "Sources of threat intelligence indicators",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "patternTypes": {
          "type": "array",
          "description": "Pattern types",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "threatTypes": {
          "type": "array",
          "description": "Threat types of threat intelligence indicators",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "ids": {
          "type": "array",
          "description": "Ids of threat intelligence indicators",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "keywords": {
          "type": "array",
          "description": "Keywords for searching threat intelligence indicators",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "skipToken": {
          "type": "string",
          "description": "Skip token."
        }
      }
    },
    "ThreatIntelligenceGranularMarkingModel": {
      "type": "object",
      "description": "Describes threat granular marking model entity",
      "properties": {
        "language": {
          "type": "string",
          "description": "Language granular marking model"
        },
        "markingRef": {
          "type": "integer",
          "format": "int32",
          "description": "marking reference granular marking model"
        },
        "selectors": {
          "type": "array",
          "description": "granular marking model selectors",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ThreatIntelligenceIndicatorModel": {
      "type": "object",
      "description": "Threat intelligence indicator entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ThreatIntelligenceIndicatorProperties",
          "description": "Threat Intelligence Entity properties",
          "x-ms-client-flatten": true
        },
        "kind": {
          "type": "string",
          "description": "The kind of the entity.",
          "enum": [
            "indicator"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ThreatIntelligenceInformation"
        }
      ]
    },
    "ThreatIntelligenceIndicatorProperties": {
      "type": "object",
      "description": "Describes threat intelligence entity properties",
      "properties": {
        "threatIntelligenceTags": {
          "type": "array",
          "description": "List of tags",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "lastUpdatedTimeUtc": {
          "type": "string",
          "description": "Last updated time in UTC"
        },
        "source": {
          "type": "string",
          "description": "Source of a threat intelligence entity"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of a threat intelligence entity"
        },
        "description": {
          "type": "string",
          "description": "Description of a threat intelligence entity"
        },
        "indicatorTypes": {
          "type": "array",
          "description": "Indicator types of threat intelligence entities",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "pattern": {
          "type": "string",
          "description": "Pattern of a threat intelligence entity"
        },
        "patternType": {
          "type": "string",
          "description": "Pattern type of a threat intelligence entity"
        },
        "patternVersion": {
          "type": "string",
          "description": "Pattern version of a threat intelligence entity"
        },
        "killChainPhases": {
          "type": "array",
          "description": "Kill chain phases",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceKillChainPhase"
          },
          "x-ms-identifiers": []
        },
        "parsedPattern": {
          "type": "array",
          "description": "Parsed patterns",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceParsedPattern"
          },
          "x-ms-identifiers": []
        },
        "externalId": {
          "type": "string",
          "description": "External ID of threat intelligence entity"
        },
        "createdByRef": {
          "type": "string",
          "description": "Created by reference of threat intelligence entity"
        },
        "defanged": {
          "type": "boolean",
          "description": "Is threat intelligence entity defanged"
        },
        "externalLastUpdatedTimeUtc": {
          "type": "string",
          "description": "External last updated time in UTC"
        },
        "externalReferences": {
          "type": "array",
          "description": "External References",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceExternalReference"
          },
          "x-ms-identifiers": []
        },
        "granularMarkings": {
          "type": "array",
          "description": "Granular Markings",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceGranularMarkingModel"
          },
          "x-ms-identifiers": []
        },
        "labels": {
          "type": "array",
          "description": "Labels  of threat intelligence entity",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "revoked": {
          "type": "boolean",
          "description": "Is threat intelligence entity revoked"
        },
        "confidence": {
          "type": "integer",
          "format": "int32",
          "description": "Confidence of threat intelligence entity"
        },
        "objectMarkingRefs": {
          "type": "array",
          "description": "Threat intelligence entity object marking references",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "language": {
          "type": "string",
          "description": "Language of threat intelligence entity"
        },
        "threatTypes": {
          "type": "array",
          "description": "Threat types",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "validFrom": {
          "type": "string",
          "description": "Valid from"
        },
        "validUntil": {
          "type": "string",
          "description": "Valid until"
        },
        "created": {
          "type": "string",
          "description": "Created by"
        },
        "modified": {
          "type": "string",
          "description": "Modified by"
        },
        "extensions": {
          "type": "object",
          "description": "Extensions map",
          "additionalProperties": {}
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "ThreatIntelligenceInformation": {
      "type": "object",
      "description": "Threat intelligence information object.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "kind": {
          "$ref": "#/definitions/ThreatIntelligenceResourceInnerKind",
          "description": "The kind of the entity."
        }
      },
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ThreatIntelligenceInformationList": {
      "type": "object",
      "description": "List of all the threat intelligence information objects.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ThreatIntelligenceInformation items on this page",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceInformation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ThreatIntelligenceKillChainPhase": {
      "type": "object",
      "description": "Describes threat kill chain phase entity",
      "properties": {
        "killChainName": {
          "type": "string",
          "description": "Kill chainName name"
        },
        "phaseName": {
          "type": "string",
          "description": "Phase name"
        }
      }
    },
    "ThreatIntelligenceMetric": {
      "type": "object",
      "description": "Describes threat intelligence metric",
      "properties": {
        "lastUpdatedTimeUtc": {
          "type": "string",
          "description": "Last updated indicator metric"
        },
        "threatTypeMetrics": {
          "type": "array",
          "description": "Threat type metrics",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceMetricEntity"
          },
          "x-ms-identifiers": []
        },
        "patternTypeMetrics": {
          "type": "array",
          "description": "Pattern type metrics",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceMetricEntity"
          },
          "x-ms-identifiers": []
        },
        "sourceMetrics": {
          "type": "array",
          "description": "Source metrics",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceMetricEntity"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ThreatIntelligenceMetricEntity": {
      "type": "object",
      "description": "Describes threat intelligence metric entity",
      "properties": {
        "metricName": {
          "type": "string",
          "description": "Metric name"
        },
        "metricValue": {
          "type": "integer",
          "format": "int32",
          "description": "Metric value"
        }
      }
    },
    "ThreatIntelligenceMetrics": {
      "type": "object",
      "description": "Threat intelligence metrics.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ThreatIntelligenceMetric",
          "description": "Threat intelligence metrics."
        }
      }
    },
    "ThreatIntelligenceMetricsList": {
      "type": "object",
      "description": "List of all the threat intelligence metric fields (type/threat type/source).",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of threat intelligence metric fields (type/threat type/source).",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceMetrics"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "ThreatIntelligenceParsedPattern": {
      "type": "object",
      "description": "Describes parsed pattern entity",
      "properties": {
        "patternTypeKey": {
          "type": "string",
          "description": "Pattern type key"
        },
        "patternTypeValues": {
          "type": "array",
          "description": "Pattern type keys",
          "items": {
            "$ref": "#/definitions/ThreatIntelligenceParsedPatternTypeValue"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ThreatIntelligenceParsedPatternTypeValue": {
      "type": "object",
      "description": "Describes threat kill chain phase entity",
      "properties": {
        "valueType": {
          "type": "string",
          "description": "Type of the value"
        },
        "value": {
          "type": "string",
          "description": "Value of parsed pattern"
        }
      }
    },
    "ThreatIntelligenceResourceInnerKind": {
      "type": "string",
      "description": "The kind of the threat intelligence entity",
      "enum": [
        "indicator"
      ],
      "x-ms-enum": {
        "name": "ThreatIntelligenceResourceInnerKind",
        "modelAsString": true,
        "values": [
          {
            "name": "indicator",
            "value": "indicator",
            "description": "Entity represents threat intelligence indicator in the system."
          }
        ]
      }
    },
    "ThreatIntelligenceSortingCriteria": {
      "type": "object",
      "description": "List of available columns for sorting",
      "properties": {
        "itemKey": {
          "type": "string",
          "description": "Column name"
        },
        "sortOrder": {
          "$ref": "#/definitions/ThreatIntelligenceSortingOrder",
          "description": "Sorting order (ascending/descending/unsorted)."
        }
      }
    },
    "ThreatIntelligenceSortingOrder": {
      "type": "string",
      "description": "Sorting order (ascending/descending/unsorted).",
      "enum": [
        "unsorted",
        "ascending",
        "descending"
      ],
      "x-ms-enum": {
        "name": "ThreatIntelligenceSortingOrder",
        "modelAsString": true,
        "values": [
          {
            "name": "unsorted",
            "value": "unsorted"
          },
          {
            "name": "ascending",
            "value": "ascending"
          },
          {
            "name": "descending",
            "value": "descending"
          }
        ]
      }
    },
    "TriggerOperator": {
      "type": "string",
      "description": "The operation against the threshold that triggers alert rule.",
      "enum": [
        "GreaterThan",
        "LessThan",
        "Equal",
        "NotEqual"
      ],
      "x-ms-enum": {
        "name": "TriggerOperator",
        "modelAsString": false
      }
    },
    "TriggersOn": {
      "type": "string",
      "enum": [
        "Incidents",
        "Alerts"
      ],
      "x-ms-enum": {
        "name": "TriggersOn",
        "modelAsString": true,
        "values": [
          {
            "name": "Incidents",
            "value": "Incidents",
            "description": "Trigger on Incidents"
          },
          {
            "name": "Alerts",
            "value": "Alerts",
            "description": "Trigger on Alerts"
          }
        ]
      }
    },
    "TriggersWhen": {
      "type": "string",
      "enum": [
        "Created",
        "Updated"
      ],
      "x-ms-enum": {
        "name": "TriggersWhen",
        "modelAsString": true,
        "values": [
          {
            "name": "Created",
            "value": "Created",
            "description": "Trigger on created objects"
          },
          {
            "name": "Updated",
            "value": "Updated",
            "description": "Trigger on updated objects"
          }
        ]
      }
    },
    "UrlEntity": {
      "type": "object",
      "description": "Represents a url entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UrlEntityProperties",
          "description": "Url entity properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "x-ms-discriminator-value": "Url"
    },
    "UrlEntityProperties": {
      "type": "object",
      "description": "Url entity property bag.",
      "properties": {
        "url": {
          "type": "string",
          "description": "A full URL the entity points to",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ]
    },
    "UserInfo": {
      "type": "object",
      "description": "User information that made some action",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email of the user.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the user.",
          "readOnly": true
        },
        "objectId": {
          "type": "string",
          "format": "uuid",
          "description": "The object id of the user."
        }
      }
    },
    "Version": {
      "type": "string",
      "description": "The version of the source control.",
      "enum": [
        "V1",
        "V2"
      ],
      "x-ms-enum": {
        "name": "Version",
        "modelAsString": true,
        "values": [
          {
            "name": "V1",
            "value": "V1"
          },
          {
            "name": "V2",
            "value": "V2"
          }
        ]
      }
    },
    "Warning": {
      "type": "object",
      "description": "Warning response structure.",
      "properties": {
        "warning": {
          "$ref": "#/definitions/WarningBody",
          "description": "Warning data.",
          "readOnly": true
        }
      }
    },
    "WarningBody": {
      "type": "object",
      "description": "Warning details.",
      "properties": {
        "code": {
          "$ref": "#/definitions/WarningCode",
          "description": "An identifier for the warning. Codes are invariant and are intended to be consumed programmatically.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A message describing the warning, intended to be suitable for display in a user interface.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WarningBody"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "WarningCode": {
      "type": "string",
      "description": "The type of repository.",
      "enum": [
        "SourceControlWarning_DeleteServicePrincipal",
        "SourceControlWarning_DeletePipelineFromAzureDevOps",
        "SourceControlWarning_DeleteWorkflowAndSecretFromGitHub",
        "SourceControlWarning_DeleteRoleAssignment",
        "SourceControl_DeletedWithWarnings"
      ],
      "x-ms-enum": {
        "name": "WarningCode",
        "modelAsString": true,
        "values": [
          {
            "name": "SourceControlWarning_DeleteServicePrincipal",
            "value": "SourceControlWarning_DeleteServicePrincipal"
          },
          {
            "name": "SourceControlWarning_DeletePipelineFromAzureDevOps",
            "value": "SourceControlWarning_DeletePipelineFromAzureDevOps"
          },
          {
            "name": "SourceControlWarning_DeleteWorkflowAndSecretFromGitHub",
            "value": "SourceControlWarning_DeleteWorkflowAndSecretFromGitHub"
          },
          {
            "name": "SourceControlWarning_DeleteRoleAssignment",
            "value": "SourceControlWarning_DeleteRoleAssignment"
          },
          {
            "name": "SourceControl_DeletedWithWarnings",
            "value": "SourceControl_DeletedWithWarnings"
          }
        ]
      }
    },
    "Watchlist": {
      "type": "object",
      "description": "Represents a Watchlist in Azure Security Insights.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WatchlistProperties",
          "description": "Watchlist properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WatchlistItem": {
      "type": "object",
      "description": "Represents a Watchlist Item in Azure Security Insights.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WatchlistItemProperties",
          "description": "Watchlist Item properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WatchlistItemList": {
      "type": "object",
      "description": "List all the watchlist items.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WatchlistItem items on this page",
          "items": {
            "$ref": "#/definitions/WatchlistItem"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WatchlistItemProperties": {
      "type": "object",
      "description": "Describes watchlist item properties",
      "properties": {
        "watchlistItemType": {
          "type": "string",
          "description": "The type of the watchlist item"
        },
        "watchlistItemId": {
          "type": "string",
          "description": "The id (a Guid) of the watchlist item"
        },
        "tenantId": {
          "type": "string",
          "description": "The tenantId to which the watchlist item belongs to"
        },
        "isDeleted": {
          "type": "boolean",
          "description": "A flag that indicates if the watchlist item is deleted or not"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time the watchlist item was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The last time the watchlist item was updated"
        },
        "createdBy": {
          "$ref": "#/definitions/UserInfo",
          "description": "Describes a user that created the watchlist item"
        },
        "updatedBy": {
          "$ref": "#/definitions/UserInfo",
          "description": "Describes a user that updated the watchlist item"
        },
        "itemsKeyValue": {
          "description": "key-value pairs for a watchlist item"
        },
        "entityMapping": {
          "description": "key-value pairs for a watchlist item entity mapping"
        }
      },
      "required": [
        "itemsKeyValue"
      ]
    },
    "WatchlistList": {
      "type": "object",
      "description": "List all the watchlists.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Watchlist items on this page",
          "items": {
            "$ref": "#/definitions/Watchlist"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WatchlistProperties": {
      "type": "object",
      "description": "Describes watchlist properties",
      "properties": {
        "watchlistId": {
          "type": "string",
          "description": "The id (a Guid) of the watchlist"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the watchlist"
        },
        "provider": {
          "type": "string",
          "description": "The provider of the watchlist"
        },
        "source": {
          "type": "string",
          "description": "The filename of the watchlist, called 'source'"
        },
        "sourceType": {
          "$ref": "#/definitions/SourceType",
          "description": "The sourceType of the watchlist"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time the watchlist was created"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The last time the watchlist was updated"
        },
        "createdBy": {
          "$ref": "#/definitions/UserInfo",
          "description": "Describes a user that created the watchlist"
        },
        "updatedBy": {
          "$ref": "#/definitions/UserInfo",
          "description": "Describes a user that updated the watchlist"
        },
        "description": {
          "type": "string",
          "description": "A description of the watchlist"
        },
        "watchlistType": {
          "type": "string",
          "description": "The type of the watchlist"
        },
        "watchlistAlias": {
          "type": "string",
          "description": "The alias of the watchlist"
        },
        "isDeleted": {
          "type": "boolean",
          "description": "A flag that indicates if the watchlist is deleted or not"
        },
        "labels": {
          "type": "array",
          "description": "List of labels relevant to this watchlist",
          "items": {
            "type": "string"
          }
        },
        "defaultDuration": {
          "type": "string",
          "format": "duration",
          "description": "The default duration of a watchlist (in ISO 8601 duration format)"
        },
        "tenantId": {
          "type": "string",
          "description": "The tenantId where the watchlist belongs to"
        },
        "numberOfLinesToSkip": {
          "type": "integer",
          "format": "int32",
          "description": "The number of lines in a csv/tsv content to skip before the header"
        },
        "rawContent": {
          "type": "string",
          "description": "The raw content that represents to watchlist items to create. In case of csv/tsv content type, it's the content of the file that will parsed by the endpoint"
        },
        "itemsSearchKey": {
          "type": "string",
          "description": "The search key is used to optimize query performance when using watchlists for joins with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use this field as the key field when joining to other event data by IP address."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the raw content. Example : text/csv or text/tsv"
        },
        "uploadStatus": {
          "type": "string",
          "description": "The status of the Watchlist upload : New, InProgress or Complete. **Note** : When a Watchlist upload status is InProgress, the Watchlist cannot be deleted"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Describes provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "displayName",
        "provider",
        "itemsSearchKey"
      ]
    },
    "Webhook": {
      "type": "object",
      "description": "Detail about the webhook object.",
      "properties": {
        "webhookId": {
          "type": "string",
          "description": "Unique identifier for the webhook.",
          "readOnly": true
        },
        "webhookUrl": {
          "type": "string",
          "description": "URL that gets invoked by the webhook.",
          "readOnly": true
        },
        "webhookSecretUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the webhook secret was updated.",
          "readOnly": true
        },
        "rotateWebhookSecret": {
          "type": "boolean",
          "description": "A flag to instruct the backend service to rotate webhook secret."
        }
      }
    },
    "WorkloadIdentityFederation": {
      "type": "object",
      "description": "Workload Identity Federation metadata.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of Workload Identity Federation.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant id of Workload Identity Federation.",
          "readOnly": true
        },
        "appId": {
          "type": "string",
          "description": "App id of Workload Identity Federation.",
          "readOnly": true
        },
        "subject": {
          "type": "string",
          "description": "Subject of Workload Identity Federation.",
          "readOnly": true
        },
        "issuer": {
          "type": "string",
          "description": "Issuer of Workload Identity Federation.",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {}
}
