{
  "swagger": "2.0",
  "info": {
    "title": "Security Insights",
    "description": "API spec for Microsoft.SecurityInsights (Azure Security Insights) resource provider",
    "version": "2022-12-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentTemplates": {
      "get": {
        "x-ms-examples": {
          "Get all installed templates.": {
            "$ref": "./examples/ContentTemplates/GetTemplates.json"
          }
        },
        "tags": [
          "ContentTemplates"
        ],
        "description": "Gets all installed templates.",
        "operationId": "ContentTemplates_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./common/ContentCommonTypes.json#/definitions/WorkspaceName"
          },
          {
            "$ref": "../../../common/2.0/types.json#/parameters/ODataFilter"
          },
          {
            "$ref": "../../../common/2.0/types.json#/parameters/ODataOrderBy"
          },
          {
            "$ref": "../../../common/2.0/types.json#/parameters/ODataTop"
          },
          {
            "$ref": "../../../common/2.0/types.json#/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/templateList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/contentTemplates/{templateId}": {
      "get": {
        "x-ms-examples": {
          "Get a template.": {
            "$ref": "./examples/ContentTemplates/GetTemplateById.json"
          }
        },
        "tags": [
          "ContentTemplate"
        ],
        "description": "Gets a template byt its identifier.",
        "operationId": "ContentTemplate_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./common/ContentCommonTypes.json#/definitions/WorkspaceName"
          },
          {
            "$ref": "#/parameters/templateIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/template"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete metadata.": {
            "$ref": "./examples/ContentTemplates/DeleteTemplate.json"
          }
        },
        "tags": [
          "ContentTemplate"
        ],
        "description": "Delete an installed template.",
        "operationId": "ContentTemplate_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./common/ContentCommonTypes.json#/definitions/WorkspaceName"
          },
          {
            "$ref": "#/parameters/templateIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/2.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "templateList": {
      "description": "List of all the template.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of templates.",
          "items": {
            "$ref": "#/definitions/template"
          },
          "type": "array"
        },
        "nextLink": {
          "description": "URL to fetch the next page of template.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "template": {
      "allOf": [
        {
          "$ref": "../../../common/2.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "Template resource definition.",
      "properties": {
        "properties": {
          "description": "template properties",
          "$ref": "#/definitions/templateProperties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "templateProperties": {
      "description": "Template property bag.",
      "required": [
        "contentId",
        "version",
        "displayName",
        "contentKind",
        "source"
      ],
      "type": "object",
      "properties": {
        "contentId": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataContentId",
          "description": "Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name"
        },
        "displayName": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataDisplayName",
          "description": "The display name of the template"
        },
        "contentKind": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataKind",
          "description": "The kind of content the template is for."
        },
        "version": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataVersion",
          "description": "Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM metadata best practices.  Can also be any string, but then we cannot guarantee any version checks"
        },
        "source": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataSource",
          "description": "Source of the content.  This is where/how it was created."
        },
        "author": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataAuthor",
          "description": "The creator of the content item."
        },
        "support": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataSupport",
          "description": "Support information for the template - type, name, contact information"
        },
        "providers": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataProviders",
          "description": "Providers for the content item"
        },
        "categories": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataCategories",
          "description": "Categories for the  item"
        },
        "firstPublishDate": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataFirstPublishDate",
          "description": "first publish date content item"
        },
        "lastPublishDate": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataLastPublishDate",
          "description": "last publish date for the content item"
        },
        "threatAnalysisTactics": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataThreatAnalysisTactics",
          "description": "the tactics the resource covers"
        },
        "threatAnalysisTechniques": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataThreatAnalysisTechniques",
          "description": "the techniques the resource covers, these have to be aligned with the tactics being used"
        },
        "previewImages": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataPreviewImages",
          "description": "preview image file names. These will be taken from the solution artifacts"
        },
        "previewImagesDark": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataPreviewImagesDark",
          "description": "preview image file names. These will be taken from the solution artifacts. used for dark theme support"
        },
        "icon": {
          "$ref": "./common/ContentCommonTypes.json#/definitions/contentMetadataIcon",
          "description": "the icon identifier. this id can later be fetched from the content metadata"
        },
        "dependantTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/templateProperties"
          },
          "x-ms-identifiers": [
            "contentId"
          ],
          "description": "Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats."
        },
        "mainTemplate": {
          "description": "The JSON string of the template",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "templateIdParameter": {
      "description": "template Id",
      "in": "path",
      "name": "templateId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
