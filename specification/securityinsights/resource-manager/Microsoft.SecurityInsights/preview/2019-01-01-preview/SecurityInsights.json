{
  "swagger": "2.0",
  "info": {
    "title": "Security Insights",
    "description": "API spec for Microsoft.SecurityInsights (Azure Security Insights) resource provider",
    "version": "2019-01-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.SecurityInsights/operations": {
      "get": {
        "operationId": "Operations_List",
        "description": "Lists all operations available Azure Security Insights Resource Provider.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully retrieved operations list.",
            "schema": {
              "$ref": "#/definitions/operationsList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules": {
      "get": {
        "x-ms-examples": {
          "Get all scheduled alert rules.": {
            "$ref": "./examples/alertRules/GetScheduledAlertRules.json"
          }
        },
        "tags": [
          "Alert Rules"
        ],
        "description": "Gets all alert rules.",
        "operationId": "AlertRules_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertRulesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}": {
      "get": {
        "x-ms-examples": {
          "Get a scheduled alert rule.": {
            "$ref": "./examples/alertRules/GetScheduledAlertRuleById.json"
          }
        },
        "tags": [
          "Alert Rules"
        ],
        "description": "Gets the alert rule.",
        "operationId": "AlertRules_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates a scheduled alert rule.": {
            "$ref": "./examples/alertRules/CreateScheduledAlertRule.json"
          }
        },
        "tags": [
          "Alert Rules"
        ],
        "description": "Creates or updates the alert rule.",
        "operationId": "AlertRules_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          },
          {
            "$ref": "#/parameters/AlertRule"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertRule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AlertRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete a scheduled alert rule.": {
            "$ref": "./examples/alertRules/DeleteScheduledAlertRule.json"
          }
        },
        "tags": [
          "Alert Rules"
        ],
        "description": "Delete the alert rule.",
        "operationId": "AlertRules_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}/actions": {
      "get": {
        "x-ms-examples": {
          "Get all actions of alert rule.": {
            "$ref": "./examples/actions/GetAllActionsByAlertRule.json"
          }
        },
        "tags": [
          "Actions"
        ],
        "description": "Gets all actions of alert rule.",
        "operationId": "Actions_ListByAlertRule",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActionsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}/actions/{actionId}": {
      "get": {
        "x-ms-examples": {
          "Get an action of alert rule.": {
            "$ref": "./examples/actions/GetActionOfAlertRuleById.json"
          }
        },
        "tags": [
          "Actions"
        ],
        "description": "Gets the action of alert rule.",
        "operationId": "AlertRules_GetAction",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          },
          {
            "$ref": "#/parameters/ActionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Action"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates an action of alert rule.": {
            "$ref": "./examples/actions/CreateActionOfAlertRule.json"
          }
        },
        "tags": [
          "Actions"
        ],
        "description": "Creates or updates the action of alert rule.",
        "operationId": "AlertRules_CreateOrUpdateAction",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          },
          {
            "$ref": "#/parameters/ActionId"
          },
          {
            "$ref": "#/parameters/Action"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Action"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Action"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete an action of alert rule.": {
            "$ref": "./examples/actions/DeleteActionOfAlertRule.json"
          }
        },
        "tags": [
          "Actions"
        ],
        "description": "Delete the action of alert rule.",
        "operationId": "AlertRules_DeleteAction",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/RuleId"
          },
          {
            "$ref": "#/parameters/ActionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRuleTemplates": {
      "get": {
        "x-ms-examples": {
          "Get all alert rule templates.": {
            "$ref": "./examples/alertRuleTemplates/GetAlertRuleTemplates.json"
          }
        },
        "tags": [
          "Alert Rule Templates"
        ],
        "description": "Gets all alert rule templates.",
        "operationId": "AlertRuleTemplates_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertRuleTemplatesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRuleTemplates/{alertRuleTemplateId}": {
      "get": {
        "x-ms-examples": {
          "Get alert rule template by Id.": {
            "$ref": "./examples/alertRuleTemplates/GetAlertRuleTemplateById.json"
          }
        },
        "tags": [
          "Alert Rule Templates"
        ],
        "description": "Gets the alert rule template.",
        "operationId": "AlertRuleTemplates_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/AlertRuleTemplateId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertRuleTemplate"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/cases": {
      "get": {
        "x-ms-examples": {
          "Get all cases.": {
            "$ref": "./examples/cases/GetCases.json"
          }
        },
        "tags": [
          "Cases"
        ],
        "description": "Gets all cases.",
        "operationId": "Cases_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataOrderBy"
          },
          {
            "$ref": "#/parameters/ODataTop"
          },
          {
            "$ref": "#/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CaseList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/cases/{caseId}": {
      "get": {
        "x-ms-examples": {
          "Get a case.": {
            "$ref": "./examples/cases/GetCaseById.json"
          }
        },
        "tags": [
          "Cases"
        ],
        "description": "Gets a case.",
        "operationId": "Cases_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/CaseId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates a case.": {
            "$ref": "./examples/cases/CreateCase.json"
          }
        },
        "tags": [
          "Cases"
        ],
        "description": "Creates or updates the case.",
        "operationId": "Cases_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/CaseId"
          },
          {
            "$ref": "#/parameters/Case"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Case"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete a case.": {
            "$ref": "./examples/cases/DeleteCase.json"
          }
        },
        "tags": [
          "Cases"
        ],
        "description": "Delete the case.",
        "operationId": "Cases_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/CaseId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/cases/{caseId}/comments": {
      "get": {
        "x-ms-examples": {
          "Get all case comments.": {
            "$ref": "./examples/cases/comments/GetAllCaseComments.json"
          }
        },
        "tags": [
          "CaseComments"
        ],
        "description": "Gets all case comments.",
        "operationId": "Comments_ListByCase",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/CaseId"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataOrderBy"
          },
          {
            "$ref": "#/parameters/ODataTop"
          },
          {
            "$ref": "#/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CaseCommentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-odata": "#/definitions/CaseComment",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/cases/{caseId}/comments/{caseCommentId}": {
      "get": {
        "x-ms-examples": {
          "Get a case comment.": {
            "$ref": "./examples/cases/comments/GetCaseCommentById.json"
          }
        },
        "tags": [
          "CaseComments"
        ],
        "description": "Gets a case comment.",
        "operationId": "Cases_GetComment",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/CaseId"
          },
          {
            "$ref": "#/parameters/CaseCommentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CaseComment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates a case comment.": {
            "$ref": "./examples/cases/comments/CreateCaseComment.json"
          }
        },
        "tags": [
          "CaseComments"
        ],
        "description": "Creates the case comment.",
        "operationId": "CaseComments_CreateComment",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/CaseId"
          },
          {
            "$ref": "#/parameters/CaseCommentId"
          },
          {
            "$ref": "#/parameters/CaseComment"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CaseComment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/bookmarks": {
      "get": {
        "x-ms-examples": {
          "Get all bookmarks.": {
            "$ref": "./examples/bookmarks/GetBookmarks.json"
          }
        },
        "tags": [
          "Bookmarks"
        ],
        "description": "Gets all bookmarks.",
        "operationId": "Bookmarks_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BookmarkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/bookmarks/{bookmarkId}": {
      "get": {
        "x-ms-examples": {
          "Get a bookmark.": {
            "$ref": "./examples/bookmarks/GetBookmarkById.json"
          }
        },
        "tags": [
          "Bookmarks"
        ],
        "description": "Gets a bookmark.",
        "operationId": "Bookmarks_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/BookmarkId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Bookmark"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates a bookmark.": {
            "$ref": "./examples/bookmarks/CreateBookmark.json"
          }
        },
        "tags": [
          "Bookmarks"
        ],
        "description": "Creates or updates the bookmark.",
        "operationId": "Bookmarks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/BookmarkId"
          },
          {
            "$ref": "#/parameters/Bookmark"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Bookmark"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Bookmark"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete a bookmark.": {
            "$ref": "./examples/bookmarks/DeleteBookmark.json"
          }
        },
        "tags": [
          "Bookmarks"
        ],
        "description": "Delete the bookmark.",
        "operationId": "Bookmarks_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/BookmarkId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectors": {
      "get": {
        "x-ms-examples": {
          "Get all data connectors.": {
            "$ref": "./examples/dataConnectors/GetDataConnectors.json"
          }
        },
        "tags": [
          "Data Connectors"
        ],
        "description": "Gets all data connectors.",
        "operationId": "DataConnectors_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataConnectorList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectors/{dataConnectorId}": {
      "get": {
        "x-ms-examples": {
          "Get an Office365 data connector.": {
            "$ref": "./examples/dataConnectors/GetOfficeDataConnetorById.json"
          },
          "Get a TI data connector.": {
            "$ref": "./examples/dataConnectors/GetThreatIntelligenceById.json"
          },
          "Get a MCAS data connector.": {
            "$ref": "./examples/dataConnectors/GetMicrosoftCloudAppSecurityById.json"
          },
          "Get a ASC data connector.": {
            "$ref": "./examples/dataConnectors/GetAzureSecurityCenterById.json"
          },
          "Get an AAD data connector.": {
            "$ref": "./examples/dataConnectors/GetAzureActiveDirectoryById.json"
          },
          "Get an AwsCloudTrail data connector.": {
            "$ref": "./examples/dataConnectors/GetAmazonWebServicesCloudTrailById.json"
          },
          "Get an AATP data connector.": {
            "$ref": "./examples/dataConnectors/GetAzureAdvancedThreatProtectionById.json"
          },
          "Get a MDATP data connector": {
            "$ref": "./examples/dataConnectors/GetMicrosoftDefenderAdvancedThreatProtectionById.json"
          }
        },
        "tags": [
          "Data Connectors"
        ],
        "description": "Gets a data connector.",
        "operationId": "DataConnectors_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/DataConnectorId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Creates or updates an Office365 data connector.": {
            "$ref": "./examples/dataConnectors/CreateOfficeDataConnetor.json"
          }
        },
        "tags": [
          "Data Connectors"
        ],
        "description": "Creates or updates the data connector.",
        "operationId": "DataConnectors_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/DataConnectorId"
          },
          {
            "$ref": "#/parameters/DataConnector"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataConnector"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete an Office365 data connector.": {
            "$ref": "./examples/dataConnectors/DeleteOfficeDataConnetor.json"
          }
        },
        "tags": [
          "Data Connectors"
        ],
        "description": "Delete the data connector.",
        "operationId": "DataConnectors_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/DataConnectorId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/entities": {
      "get": {
        "x-ms-examples": {
          "Get all entities.": {
            "$ref": "./examples/entities/GetEntities.json"
          }
        },
        "tags": [
          "Entities"
        ],
        "description": "Gets all entities.",
        "operationId": "Entities_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/entities/{entityId}": {
      "get": {
        "x-ms-examples": {
          "Get an account entity.": {
            "$ref": "./examples/entities/GetAccountEntityById.json"
          },
          "Get a host entity.": {
            "$ref": "./examples/entities/GetHostEntityById.json"
          },
          "Get a file entity.": {
            "$ref": "./examples/entities/GetFileEntityById.json"
          },
          "Get a security alert entity.": {
            "$ref": "./examples/entities/GetSecurityAlertEntityById.json"
          },
          "Get a file hash entity.": {
            "$ref": "./examples/entities/GetFileHashEntityById.json"
          },
          "Get a malware entity.": {
            "$ref": "./examples/entities/GetMalwareEntityById.json"
          },
          "Get a security group entity.": {
            "$ref": "./examples/entities/GetSecurityGroupEntityById.json"
          },
          "Get an azure resource entity.": {
            "$ref": "./examples/entities/GetAzureResourceEntityById.json"
          },
          "Get a cloud application entity.": {
            "$ref": "./examples/entities/GetCloudApplicationEntityById.json"
          },
          "Get a process entity.": {
            "$ref": "./examples/entities/GetProcessEntityById.json"
          },
          "Get a dns entity.": {
            "$ref": "./examples/entities/GetDnsEntityById.json"
          },
          "Get an ip entity.": {
            "$ref": "./examples/entities/GetIpEntityById.json"
          },
          "Get a registry key entity.": {
            "$ref": "./examples/entities/GetRegistryKeyEntityById.json"
          },
          "Get a registry value entity.": {
            "$ref": "./examples/entities/GetRegistryValueEntityById.json"
          },
          "Get a url entity.": {
            "$ref": "./examples/entities/GetUrlEntityById.json"
          }
        },
        "tags": [
          "Entities"
        ],
        "description": "Gets an entity.",
        "operationId": "Entities_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/EntityId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Entity"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/entities/{entityId}/expand": {
      "post": {
        "x-ms-examples": {
          "Expand an entity": {
            "$ref": "./examples/entities/expand/PostExpandEntity.json"
          }
        },
        "tags": [
          "Entities"
        ],
        "description": "Expands an entity.",
        "operationId": "Entities_Expand",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/EntityId"
          },
          {
            "$ref": "#/parameters/EntityExpandRequestBody"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityExpandResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/officeConsents": {
      "get": {
        "x-ms-examples": {
          "Get all office consents.": {
            "$ref": "./examples/officeConsents/GetOfficeConsents.json"
          }
        },
        "tags": [
          "Office Consents"
        ],
        "description": "Gets all office365 consents.",
        "operationId": "OfficeConsents_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OfficeConsentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/officeConsents/{consentId}": {
      "get": {
        "x-ms-examples": {
          "Get an office consent.": {
            "$ref": "./examples/officeConsents/GetOfficeConsentsById.json"
          }
        },
        "tags": [
          "Office Consents"
        ],
        "description": "Gets an office365 consent.",
        "operationId": "OfficeConsents_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ConsentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OfficeConsent"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete an office consent.": {
            "$ref": "./examples/officeConsents/DeleteOfficeConsents.json"
          }
        },
        "tags": [
          "Office Consents"
        ],
        "description": "Delete the office365 consent.",
        "operationId": "OfficeConsents_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/ConsentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/settings/{settingsName}": {
      "get": {
        "x-ms-examples": {
          "Get UEBA settings.": {
            "$ref": "./examples/settings/GetUebaSettings.json"
          },
          "Get Fusion settings.": {
            "$ref": "./examples/settings/GetFusionSettings.json"
          }
        },
        "tags": [
          "Settings"
        ],
        "description": "Gets a setting.",
        "operationId": "ProductSettings_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/SettingsName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Settings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Update UEBA settings.": {
            "$ref": "./examples/settings/UpdateUebaSettings.json"
          }
        },
        "tags": [
          "Settings"
        ],
        "description": "Updates the setting.",
        "operationId": "ProductSettings_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/SettingsName"
          },
          {
            "$ref": "#/parameters/Settings"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Settings"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/aggregations/{aggregationsName}": {
      "get": {
        "x-ms-examples": {
          "Get aggregative data for all cases under the defined workspace, between the time range if specified.": {
            "$ref": "./examples/aggregations/GetCasesAggregations.json"
          }
        },
        "tags": [
          "Aggregations"
        ],
        "description": "Get aggregative result for the given resources under the defined workspace",
        "operationId": "CasesAggregations_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/AggregationsName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Aggregations"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/entityQueries": {
      "get": {
        "x-ms-examples": {
          "Get all entity queries.": {
            "$ref": "./examples/entityQueries/GetEntityQueries.json"
          }
        },
        "tags": [
          "EntityQueries"
        ],
        "description": "Gets all entity queries.",
        "operationId": "EntityQueries_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityQueryList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/entityQueries/{entityQueryId}": {
      "get": {
        "x-ms-examples": {
          "Get an entity query.": {
            "$ref": "./examples/entityQueries/GetEntityQueryById.json"
          }
        },
        "tags": [
          "EntityQueries"
        ],
        "description": "Gets an entity query.",
        "operationId": "EntityQueries_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/EntityQueryId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityQuery"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "operation": {
      "description": "Operation provided by provider",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation"
        },
        "display": {
          "type": "object",
          "description": "Properties of the operation",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Provider name"
            },
            "resource": {
              "type": "string",
              "description": "Resource name"
            },
            "operation": {
              "type": "string",
              "description": "Operation name"
            },
            "description": {
              "type": "string",
              "description": "Description of the operation"
            }
          }
        }
      }
    },
    "operationsList": {
      "description": "Lists the operations available in the SecurityInsights RP.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of operations.",
          "type": "string"
        },
        "value": {
          "description": "Array of operations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/operation"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "CloudError": {
      "x-ms-external": true,
      "type": "object",
      "description": "Error response structure.",
      "properties": {
        "error": {
          "x-ms-client-flatten": true,
          "description": "Error data",
          "$ref": "#/definitions/CloudErrorBody"
        }
      }
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "type": "object",
      "description": "Error details.",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        }
      }
    },
    "AlertRulesList": {
      "description": "List all the alert rules.",
      "properties": {
        "nextLink": {
          "readOnly": true,
          "description": "URL to fetch the next set of alert rules.",
          "type": "string"
        },
        "value": {
          "description": "Array of alert rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertRule"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "AlertRule": {
      "type": "object",
      "description": "Alert rule.",
      "discriminator": "kind",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/AlertRuleKind"
        }
      ],
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of the alert rule."
        }
      }
    },
    "AlertRuleKind": {
      "type": "object",
      "description": "Describes an Azure resource with kind.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the alert rule",
          "enum": [
            "Scheduled",
            "Filter",
            "Fusion"
          ],
          "x-ms-enum": {
            "name": "AlertRuleKind",
            "modelAsString": true,
            "values": [
              {
                "value": "Scheduled"
              },
              {
                "value": "Filter"
              },
              {
                "value": "Fusion"
              }
            ]
          }
        }
      }
    },
    "AlertRuleTriggerOperator": {
      "type": "string",
      "enum": [
        "GreaterThan",
        "LessThan",
        "Equal",
        "NotEqual"
      ],
      "x-ms-enum": {
        "name": "TriggerOperator",
        "modelAsString": false
      },
      "description": "The operation against the threshold that triggers alert rule."
    },
    "AttackTactic": {
      "type": "string",
      "enum": [
        "InitialAccess",
        "Execution",
        "Persistence",
        "PrivilegeEscalation",
        "DefenseEvasion",
        "CredentialAccess",
        "Discovery",
        "LateralMovement",
        "Collection",
        "Exfiltration",
        "CommandAndControl"
      ],
      "x-ms-enum": {
        "name": "AttackTactic",
        "modelAsString": false
      },
      "description": "The severity for alerts created by this alert rule."
    },
    "DataConnectorStatus": {
      "type": "object",
      "description": "alert rule template data connector status",
      "properties": {
        "connectorId": {
          "type": "string",
          "description": "the connector id"
        },
        "dataTypes": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "enum": [
              "Exist",
              "NotExist"
            ],
            "x-ms-enum": {
              "name": "DataTypeStatus",
              "modelAsString": false
            }
          },
          "description": "The data types availability map"
        }
      }
    },
    "ScheduledAlertRule": {
      "x-ms-discriminator-value": "Scheduled",
      "type": "object",
      "description": "Represents scheduled alert rule.",
      "allOf": [
        {
          "$ref": "#/definitions/AlertRule"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Scheduled alert rule properties",
          "$ref": "#/definitions/ScheduledAlertRuleProperties"
        }
      }
    },
    "ScheduledAlertRuleProperties": {
      "type": "object",
      "description": "Alert rule property bag.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name for alerts created by this alert rule."
        },
        "description": {
          "type": "string",
          "description": "The description of the alert rule."
        },
        "severity": {
          "$ref": "#/definitions/AlertSeverity",
          "description": "The severity for alerts created by this alert rule."
        },
        "enabled": {
          "type": "boolean",
          "description": "Determines whether this alert rule is enabled or disabled."
        },
        "query": {
          "type": "string",
          "description": "The query that creates alerts for this rule."
        },
        "queryFrequency": {
          "type": "string",
          "format": "duration",
          "description": "The frequency (in ISO 8601 duration format) for this alert rule to run."
        },
        "queryPeriod": {
          "type": "string",
          "format": "duration",
          "description": "The period (in ISO 8601 duration format) that this alert rule looks at."
        },
        "triggerOperator": {
          "$ref": "#/definitions/AlertRuleTriggerOperator",
          "description": "The operation against the threshold that triggers alert rule."
        },
        "triggerThreshold": {
          "type": "integer",
          "description": "The threshold triggers this alert rule."
        },
        "suppressionEnabled": {
          "type": "boolean",
          "description": "Determines whether the suppression for this alert rule is enabled or disabled."
        },
        "suppressionDuration": {
          "type": "string",
          "format": "duration",
          "description": "The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered."
        },
        "lastModifiedUtc": {
          "type": "string",
          "readOnly": true,
          "description": "The last time that this alert has been modified."
        }
      },
      "required": [
        "displayName",
        "description",
        "severity",
        "enabled",
        "query",
        "queryFrequency",
        "queryPeriod",
        "triggerOperator",
        "triggerThreshold",
        "suppressionEnabled",
        "suppressionDuration"
      ]
    },
    "AlertRuleTemplatesList": {
      "description": "List all the alert rule templates.",
      "properties": {
        "nextLink": {
          "readOnly": true,
          "description": "URL to fetch the next set of alert rule templates.",
          "type": "string"
        },
        "value": {
          "description": "Array of alert rule templates.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertRuleTemplate"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "AlertRuleTemplate": {
      "type": "object",
      "description": "Alert rule template.",
      "discriminator": "kind",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/AlertRuleKind"
        }
      ],
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of the alert rule."
        }
      }
    },
    "ScheduledAlertRuleTemplate": {
      "x-ms-discriminator-value": "Scheduled",
      "type": "object",
      "description": "Represents scheduled alert rule template.",
      "allOf": [
        {
          "$ref": "#/definitions/AlertRuleTemplate"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Scheduled alert rule template properties",
          "allOf": [
            {
              "$ref": "#/definitions/BaseAlertRuleTemplateProperties"
            },
            {
              "$ref": "#/definitions/ScheduledAlertRuleTemplateProperties"
            }
          ],
          "required": [
            "displayName",
            "description",
            "createdDateUTC",
            "status",
            "requiredDataConnectors",
            "alertRulesCreatedByTemplateCount",
            "severity",
            "query",
            "queryFrequency",
            "queryPeriod",
            "triggerOperator",
            "triggerThreshold"
          ]
        }
      }
    },
    "BaseAlertRuleTemplateProperties": {
      "type": "object",
      "description": "Base alert rule template property bag.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name for alert rule template."
        },
        "description": {
          "type": "string",
          "description": "The description of the alert rule template."
        },
        "tactics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttackTactic"
          },
          "description": "The tactics of the alert rule template"
        },
        "createdDateUTC": {
          "type": "string",
          "readOnly": true,
          "description": "The time that this alert rule template has been added."
        },
        "status": {
          "type": "string",
          "enum": [
            "Installed",
            "Available",
            "NotAvailable"
          ],
          "x-ms-enum": {
            "name": "TemplateStatus",
            "modelAsString": false,
            "values": [
              {
                "value": "Installed",
                "description": "Alert rule template installed. and can not use more then once"
              },
              {
                "value": "Available",
                "description": "Alert rule template is available."
              },
              {
                "value": "NotAvailable",
                "description": "Alert rule template is not available"
              }
            ]
          },
          "description": "The alert rule template status."
        },
        "requiredDataConnectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataConnectorStatus"
          },
          "description": "The required data connectors for this template"
        },
        "alertRulesCreatedByTemplateCount": {
          "type": "integer",
          "description": "the number of alert rules that were created by this template"
        }
      }
    },
    "ScheduledAlertRuleTemplateProperties": {
      "type": "object",
      "description": "Schedule alert rule template property bag.",
      "properties": {
        "severity": {
          "$ref": "#/definitions/AlertSeverity",
          "description": "The severity for alerts created by this alert rule."
        },
        "query": {
          "type": "string",
          "description": "The query that creates alerts for this rule."
        },
        "queryFrequency": {
          "type": "string",
          "format": "duration",
          "description": "The frequency (in ISO 8601 duration format) for this alert rule to run."
        },
        "queryPeriod": {
          "type": "string",
          "format": "duration",
          "description": "The period (in ISO 8601 duration format) that this alert rule looks at."
        },
        "triggerOperator": {
          "$ref": "#/definitions/AlertRuleTriggerOperator",
          "description": "The operation against the threshold that triggers alert rule."
        },
        "triggerThreshold": {
          "type": "integer",
          "description": "The threshold triggers this alert rule."
        }
      }
    },
    "FilterAlertRuleTemplate": {
      "x-ms-discriminator-value": "Filter",
      "type": "object",
      "description": "Represents filter alert rule template.",
      "allOf": [
        {
          "$ref": "#/definitions/AlertRuleTemplate"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Filter alert rule template properties",
          "allOf": [
            {
              "$ref": "#/definitions/BaseAlertRuleTemplateProperties"
            },
            {
              "$ref": "#/definitions/FilterAlertRuleTemplateProperties"
            }
          ],
          "required": [
            "displayName",
            "description",
            "createdDateUTC",
            "status",
            "alertRulesCreatedByTemplateCount",
            "filterProduct"
          ]
        }
      }
    },
    "FilterAlertRuleTemplateProperties": {
      "type": "object",
      "description": "Filter alert rule template property bag.",
      "properties": {
        "filterProduct": {
          "type": "string",
          "description": "The filter product name for this template rule."
        },
        "filterSeverities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertSeverity"
          },
          "description": "the alert’s severities on which the cases will be generated"
        },
        "filterTitles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the alert’s titles on which the cases will be generated"
        }
      }
    },
    "FusionAlertRuleTemplate": {
      "x-ms-discriminator-value": "Fusion",
      "type": "object",
      "description": "Represents fusion alert rule template.",
      "allOf": [
        {
          "$ref": "#/definitions/AlertRuleTemplate"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Fusion alert rule template properties",
          "allOf": [
            {
              "$ref": "#/definitions/BaseAlertRuleTemplateProperties"
            },
            {
              "$ref": "#/definitions/FusionAlertRuleTemplateProperties"
            }
          ],
          "required": [
            "displayName",
            "description",
            "createdDateUTC",
            "status",
            "alertRulesCreatedByTemplateCount"
          ]
        }
      }
    },
    "FusionAlertRuleTemplateProperties": {
      "type": "object",
      "description": "Filter alert rule template property bag.",
      "properties": {
        "severity": {
          "$ref": "#/definitions/AlertSeverity",
          "description": "The severity for alerts created by this alert rule."
        }
      }
    },
    "AlertSeverity": {
      "type": "string",
      "description": "The severity of the alert",
      "enum": [
        "High",
        "Medium",
        "Low",
        "Informational"
      ],
      "x-ms-enum": {
        "name": "AlertSeverity",
        "modelAsString": false,
        "values": [
          {
            "value": "High",
            "description": "High severity"
          },
          {
            "value": "Medium",
            "description": "Medium severity"
          },
          {
            "value": "Low",
            "description": "Low severity"
          },
          {
            "value": "Informational",
            "description": "Informational severity"
          }
        ]
      }
    },
    "ActionsList": {
      "description": "List all the actions.",
      "properties": {
        "nextLink": {
          "readOnly": true,
          "description": "URL to fetch the next set of actions.",
          "type": "string"
        },
        "value": {
          "description": "Array of actions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "Action": {
      "type": "object",
      "description": "Action for alert rule.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of the action."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Action properties",
          "$ref": "#/definitions/ActionProperties"
        }
      }
    },
    "ActionProperties": {
      "type": "object",
      "description": "Action property bag.",
      "properties": {
        "triggerUri": {
          "type": "string",
          "description": "The uri for the action to trigger."
        }
      }
    },
    "CaseList": {
      "description": "List all the cases.",
      "properties": {
        "nextLink": {
          "readOnly": true,
          "description": "URL to fetch the next set of cases.",
          "type": "string"
        },
        "value": {
          "description": "Array of cases.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Case"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "Case": {
      "type": "object",
      "description": "Represents a case in Azure Security Insights.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of the alert rule."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Case properties",
          "$ref": "#/definitions/CaseProperties"
        }
      }
    },
    "CaseProperties": {
      "type": "object",
      "description": "Describes case properties",
      "properties": {
        "lastUpdatedTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The last time the case was updated",
          "readOnly": true
        },
        "createdTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The time the case was created",
          "readOnly": true
        },
        "endTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the case"
        },
        "startTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the case"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          },
          "description": "List of labels relevant to this case"
        },
        "description": {
          "type": "string",
          "description": "The description of the case"
        },
        "title": {
          "type": "string",
          "description": "The title of the case"
        },
        "owner": {
          "type": "object",
          "description": "Describes a user that the case is assigned to",
          "$ref": "#/definitions/UserInfo"
        },
        "severity": {
          "type": "string",
          "description": "The severity of the case",
          "enum": [
            "Critical",
            "High",
            "Medium",
            "Low",
            "Informational"
          ],
          "x-ms-enum": {
            "name": "CaseSeverity",
            "modelAsString": true,
            "values": [
              {
                "value": "Critical",
                "description": "Critical severity"
              },
              {
                "value": "High",
                "description": "High severity"
              },
              {
                "value": "Medium",
                "description": "Medium severity"
              },
              {
                "value": "Low",
                "description": "Low severity"
              },
              {
                "value": "Informational",
                "description": "Informational severity"
              }
            ]
          }
        },
        "status": {
          "type": "string",
          "description": "The status of the case",
          "enum": [
            "Draft",
            "New",
            "InProgress",
            "Closed"
          ],
          "x-ms-enum": {
            "name": "CaseStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Draft",
                "description": "Case that wasn't promoted yet to active"
              },
              {
                "value": "New",
                "description": "An active case which isn't handled currently"
              },
              {
                "value": "InProgress",
                "description": "An active case which is handled"
              },
              {
                "value": "Closed",
                "description": "A non active case"
              }
            ]
          }
        },
        "closeReason": {
          "type": "string",
          "description": "The reason the case was closed",
          "enum": [
            "Resolved",
            "Dismissed",
            "TruePositive",
            "FalsePositive",
            "Other"
          ],
          "x-ms-enum": {
            "name": "CloseReason",
            "modelAsString": true,
            "values": [
              {
                "value": "Resolved",
                "description": "Case was resolved"
              },
              {
                "value": "Dismissed",
                "description": "Case was dismissed"
              },
              {
                "value": "TruePositive",
                "description": "Case was true positive"
              },
              {
                "value": "FalsePositive",
                "description": "Case was false positive"
              },
              {
                "value": "Other",
                "description": "Case was closed for another reason"
              }
            ]
          }
        },
        "closedReasonText": {
          "type": "string",
          "description": "the case close reason details"
        },
        "relatedAlertIds": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "related alert id"
          },
          "description": "List of related alert identifiers",
          "readOnly": true
        },
        "caseNumber": {
          "type": "integer",
          "description": "a sequential number",
          "readOnly": true
        },
        "lastComment": {
          "type": "string",
          "description": "the last comment in the case",
          "readOnly": true
        },
        "totalComments": {
          "type": "integer",
          "description": "the number of total comments in the case",
          "readOnly": true
        }
      },
      "required": [
        "title",
        "severity",
        "status",
        "startTimeUtc"
      ]
    },
    "CaseCommentList": {
      "description": "List of case comments.",
      "properties": {
        "nextLink": {
          "readOnly": true,
          "description": "URL to fetch the next set of comments.",
          "type": "string"
        },
        "value": {
          "description": "Array of comments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CaseComment"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "CaseComment": {
      "type": "object",
      "description": "Represents a case comment",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Case comment properties",
          "$ref": "#/definitions/CaseCommentProperties"
        }
      }
    },
    "CaseCommentProperties": {
      "type": "object",
      "description": "Case comment property bag.",
      "properties": {
        "message": {
          "type": "string",
          "description": "The comment message"
        },
        "createdTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The time the comment was created",
          "readOnly": true
        },
        "userInfo": {
          "type": "object",
          "description": "Describes the user that created the comment",
          "$ref": "#/definitions/UserInfo",
          "readOnly": true
        }
      },
      "required": [
        "message"
      ]
    },
    "BookmarkList": {
      "description": "List all the bookmarks.",
      "properties": {
        "nextLink": {
          "readOnly": true,
          "description": "URL to fetch the next set of cases.",
          "type": "string"
        },
        "value": {
          "description": "Array of bookmarks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Bookmark"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "Bookmark": {
      "type": "object",
      "description": "Represents a bookmark in Azure Security Insights.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of the bookmark."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Bookmark properties",
          "$ref": "#/definitions/BookmarkProperties"
        }
      }
    },
    "BookmarkProperties": {
      "type": "object",
      "description": "Describes bookmark properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of the bookmark"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The last time the bookmark was updated"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time the bookmark was created"
        },
        "createdBy": {
          "type": "object",
          "description": "Describes a user that created the bookmark",
          "$ref": "#/definitions/UserInfo"
        },
        "updatedBy": {
          "type": "object",
          "description": "Describes a user that updated the bookmark",
          "$ref": "#/definitions/UserInfo"
        },
        "notes": {
          "type": "string",
          "description": "The notes of the bookmark"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          },
          "description": "List of labels relevant to this bookmark"
        },
        "query": {
          "type": "string",
          "description": "The query of the bookmark."
        },
        "queryResult": {
          "type": "string",
          "description": "The query result of the bookmark."
        }
      },
      "required": [
        "displayName",
        "query"
      ]
    },
    "UserInfo": {
      "type": "object",
      "description": "User information that made some action",
      "properties": {
        "objectId": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "description": "The object id of the user."
        },
        "email": {
          "type": "string",
          "description": "The email of the user.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the user.",
          "readOnly": true
        }
      },
      "required": [
        "objectId"
      ]
    },
    "Label": {
      "description": "Label that will be used to tag and filter on.",
      "type": "string"
    },
    "DataConnectorList": {
      "description": "List all the data connectors.",
      "properties": {
        "nextLink": {
          "readOnly": true,
          "description": "URL to fetch the next set of data connectors.",
          "type": "string"
        },
        "value": {
          "description": "Array of data connectors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataConnector"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "DataConnector": {
      "type": "object",
      "description": "Data connector.",
      "discriminator": "kind",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/DataConnectorKind"
        }
      ],
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of the data connector."
        }
      }
    },
    "DataConnectorKind": {
      "type": "object",
      "description": "Describes an Azure resource with kind.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the data connector",
          "enum": [
            "AzureActiveDirectory",
            "AzureSecurityCenter",
            "MicrosoftCloudAppSecurity",
            "ThreatIntelligence",
            "Office365",
            "AmazonWebServicesCloudTrail",
            "AzureAdvancedThreatProtection",
            "MicrosoftDefenderAdvancedThreatProtection"
          ],
          "x-ms-enum": {
            "name": "DataConnectorKind",
            "modelAsString": true,
            "values": [
              {
                "value": "AzureActiveDirectory"
              },
              {
                "value": "AzureSecurityCenter"
              },
              {
                "value": "MicrosoftCloudAppSecurity"
              },
              {
                "value": "ThreatIntelligence"
              },
              {
                "value": "Office365"
              },
              {
                "value": "AmazonWebServicesCloudTrail"
              },
              {
                "value": "AzureAdvancedThreatProtection"
              },
              {
                "value": "MicrosoftDefenderAdvancedThreatProtection"
              }
            ]
          }
        }
      }
    },
    "DataConnectorTenantId": {
      "type": "object",
      "description": "Properties data connector on tenant level.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant id to connect to, and get the data from."
        }
      }
    },
    "OfficeDataConnector": {
      "x-ms-discriminator-value": "Office365",
      "type": "object",
      "description": "Represents office data connector.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Office data connector properties.",
          "$ref": "#/definitions/OfficeDataConnectorProperties"
        }
      }
    },
    "OfficeDataConnectorProperties": {
      "type": "object",
      "description": "Office data connector properties.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorTenantId"
        }
      ],
      "properties": {
        "dataTypes": {
          "description": "The available data types for the connector.",
          "$ref": "#/definitions/OfficeDataConnectorDataTypes"
        }
      }
    },
    "OfficeDataConnectorDataTypes": {
      "type": "object",
      "description": "The available data types for office data connector.",
      "properties": {
        "sharePoint": {
          "type": "object",
          "description": "SharePoint data type connection.",
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ]
        },
        "exchange": {
          "type": "object",
          "description": "Exchange data type connection.",
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ]
        }
      }
    },
    "TIDataConnector": {
      "x-ms-discriminator-value": "ThreatIntelligence",
      "type": "object",
      "description": "Represents threat intelligence data connector.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "TI (Threat Intelligence) data connector properties.",
          "$ref": "#/definitions/TIDataConnectorProperties"
        }
      }
    },
    "TIDataConnectorProperties": {
      "type": "object",
      "description": "TI (Threat Intelligence) data connector properties.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorTenantId"
        }
      ],
      "properties": {
        "dataTypes": {
          "description": "The available data types for the connector.",
          "$ref": "#/definitions/TIDataConnectorDataTypes"
        }
      }
    },
    "TIDataConnectorDataTypes": {
      "type": "object",
      "description": "The available data types for TI (Threat Intelligence) data connector.",
      "properties": {
        "indicators": {
          "type": "object",
          "description": "Data type for indicators connection.",
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ]
        }
      }
    },
    "AwsCloudTrailDataConnector": {
      "x-ms-discriminator-value": "AmazonWebServicesCloudTrail",
      "type": "object",
      "description": "Represents Amazon Web Services CloudTrail data connector.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Amazon Web Services CloudTrail data connector properties.",
          "$ref": "#/definitions/AwsCloudTrailDataConnectorProperties"
        }
      }
    },
    "AwsCloudTrailDataConnectorProperties": {
      "type": "object",
      "description": "Amazon Web Services CloudTrail data connector properties.",
      "properties": {
        "awsRoleArn": {
          "type": "string",
          "description": "The Aws Role Arn (with CloudTrailReadOnly policy) that is used to access the Aws account."
        },
        "dataTypes": {
          "description": "The available data types for the connector.",
          "$ref": "#/definitions/AwsCloudTrailDataConnectorDataTypes"
        }
      }
    },
    "AwsCloudTrailDataConnectorDataTypes": {
      "type": "object",
      "description": "The available data types for Amazon Web Services CloudTrail data connector.",
      "properties": {
        "logs": {
          "type": "object",
          "description": "Logs data type.",
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ]
        }
      }
    },
    "AADDataConnector": {
      "x-ms-discriminator-value": "AzureActiveDirectory",
      "type": "object",
      "description": "Represents AAD (Azure Active Directory) data connector.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "AAD (Azure Active Directory) data connector properties.",
          "$ref": "#/definitions/AADDataConnectorProperties"
        }
      }
    },
    "AADDataConnectorProperties": {
      "type": "object",
      "description": "AAD (Azure Active Directory) data connector properties.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorTenantId"
        },
        {
          "$ref": "#/definitions/DataConnectorWithAlertsProperties"
        }
      ]
    },
    "ASCDataConnector": {
      "x-ms-discriminator-value": "AzureSecurityCenter",
      "type": "object",
      "description": "Represents ASC (Azure Security Center) data connector.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "ASC (Azure Security Center) data connector properties.",
          "$ref": "#/definitions/ASCDataConnectorProperties"
        }
      }
    },
    "ASCDataConnectorProperties": {
      "type": "object",
      "description": "MCAS (Microsoft Cloud App Security) data connector properties.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorWithAlertsProperties"
        }
      ],
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "The subscription id to connect to, and get the data from."
        }
      }
    },
    "MCASDataConnector": {
      "x-ms-discriminator-value": "MicrosoftCloudAppSecurity",
      "type": "object",
      "description": "Represents MCAS (Microsoft Cloud App Security) data connector.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "MCAS (Microsoft Cloud App Security) data connector properties.",
          "$ref": "#/definitions/MCASDataConnectorProperties"
        }
      }
    },
    "MCASDataConnectorProperties": {
      "type": "object",
      "description": "MCAS (Microsoft Cloud App Security) data connector properties.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorTenantId"
        }
      ],
      "properties": {
        "dataTypes": {
          "description": "The available data types for the connector.",
          "$ref": "#/definitions/MCASDataConnectorDataTypes"
        }
      }
    },
    "MCASDataConnectorDataTypes": {
      "type": "object",
      "description": "The available data types for MCAS (Microsoft Cloud App Security) data connector.",
      "allOf": [
        {
          "$ref": "#/definitions/AlertsDataTypeOfDataConnector"
        }
      ],
      "properties": {
        "discoveryLogs": {
          "type": "object",
          "description": "Discovery log data type connection.",
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ]
        }
      }
    },
    "AATPDataConnector": {
      "x-ms-discriminator-value": "AzureAdvancedThreatProtection",
      "type": "object",
      "description": "Represents AATP (Azure Advanced Threat Protection) data connector.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "AATP (Azure Advanced Threat Protection) data connector properties.",
          "$ref": "#/definitions/AATPDataConnectorProperties"
        }
      }
    },
    "AATPDataConnectorProperties": {
      "type": "object",
      "description": "AATP (Azure Advanced Threat Protection) data connector properties.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorTenantId"
        },
        {
          "$ref": "#/definitions/DataConnectorWithAlertsProperties"
        }
      ]
    },
    "MDATPDataConnector": {
      "x-ms-discriminator-value": "MicrosoftDefenderAdvancedThreatProtection",
      "type": "object",
      "description": "Represents MDATP (Microsoft Defender Advanced Threat Protection) data connector.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnector"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "MDATP (Microsoft Defender Advanced Threat Protection) data connector properties.",
          "$ref": "#/definitions/MDATPDataConnectorProperties"
        }
      }
    },
    "MDATPDataConnectorProperties": {
      "type": "object",
      "description": "MDATP (Microsoft Defender Advanced Threat Protection) data connector properties.",
      "allOf": [
        {
          "$ref": "#/definitions/DataConnectorTenantId"
        },
        {
          "$ref": "#/definitions/DataConnectorWithAlertsProperties"
        }
      ]
    },
    "DataConnectorWithAlertsProperties": {
      "type": "object",
      "description": "Data connector properties.",
      "properties": {
        "dataTypes": {
          "description": "The available data types for the connector.",
          "$ref": "#/definitions/AlertsDataTypeOfDataConnector"
        }
      }
    },
    "AlertsDataTypeOfDataConnector": {
      "type": "object",
      "description": "Alerts data type for data connectors.",
      "properties": {
        "alerts": {
          "type": "object",
          "description": "Alerts data type connection.",
          "allOf": [
            {
              "$ref": "#/definitions/DataConnectorDataTypeCommon"
            }
          ]
        }
      }
    },
    "DataConnectorDataTypeCommon": {
      "type": "object",
      "description": "Common field for data type in data connectors.",
      "properties": {
        "state": {
          "type": "string",
          "description": "Describe whether this data type connection is enabled or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DataTypeState",
            "modelAsString": true
          }
        }
      }
    },
    "EntityList": {
      "description": "List of all the entities.",
      "properties": {
        "nextLink": {
          "readOnly": true,
          "description": "URL to fetch the next set of entities.",
          "type": "string"
        },
        "value": {
          "description": "Array of entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "Entity": {
      "type": "object",
      "description": "Specific entity.",
      "discriminator": "kind",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/EntityKind"
        }
      ]
    },
    "EntityKind": {
      "type": "object",
      "description": "Describes an entity with kind.",
      "properties": {
        "kind": {
          "description": "The kind of the entity.",
          "$ref": "#/definitions/EntityInnerKind"
        }
      }
    },
    "EntityInnerKind": {
      "type": "string",
      "description": "The kind of the entity",
      "enum": [
        "Account",
        "Host",
        "File",
        "AzureResource",
        "CloudApplication",
        "DnsResolution",
        "FileHash",
        "Ip",
        "Malware",
        "Process",
        "RegistryKey",
        "RegistryValue",
        "SecurityGroup",
        "Url",
        "SecurityAlert",
        "Bookmark"
      ],
      "x-ms-enum": {
        "name": "EntityKind",
        "modelAsString": true,
        "values": [
          {
            "value": "Account",
            "description": "Entity represents account in the system."
          },
          {
            "value": "Host",
            "description": "Entity represents host in the system."
          },
          {
            "value": "File",
            "description": "Entity represents file in the system."
          },
          {
            "value": "AzureResource",
            "description": "Entity represents azure resource in the system."
          },
          {
            "value": "CloudApplication",
            "description": "Entity represents cloud application in the system."
          },
          {
            "value": "DnsResolution",
            "description": "Entity represents dns resolution in the system."
          },
          {
            "value": "FileHash",
            "description": "Entity represents file hash in the system."
          },
          {
            "value": "Ip",
            "description": "Entity represents ip in the system."
          },
          {
            "value": "Malware",
            "description": "Entity represents malware in the system."
          },
          {
            "value": "Process",
            "description": "Entity represents process in the system."
          },
          {
            "value": "RegistryKey",
            "description": "Entity represents registry key in the system."
          },
          {
            "value": "RegistryValue",
            "description": "Entity represents registry value in the system."
          },
          {
            "value": "SecurityGroup",
            "description": "Entity represents security group in the system."
          },
          {
            "value": "Url",
            "description": "Entity represents url in the system."
          },
          {
            "value": "SecurityAlert",
            "description": "Entity represents security alert in the system."
          },
          {
            "value": "Bookmark",
            "description": "Entity represents bookmark in the system."
          }
        ]
      }
    },
    "EntityCommonProperties": {
      "type": "object",
      "description": "Entity common property bag.",
      "properties": {
        "friendlyName": {
          "type": "string",
          "readOnly": true,
          "description": "The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated."
        },
        "additionalData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "description": "A bag of custom fields that should be part of the entity and will be presented to the user."
        }
      }
    },
    "AccountEntity": {
      "x-ms-discriminator-value": "Account",
      "type": "object",
      "description": "Represents an account entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Account entity properties",
          "$ref": "#/definitions/AccountEntityProperties"
        }
      }
    },
    "AccountEntityProperties": {
      "type": "object",
      "description": "Account entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "accountName": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the account. This field should hold only the name without any domain added to it, i.e. administrator."
        },
        "ntDomain": {
          "type": "string",
          "readOnly": true,
          "description": "The NetBIOS domain name as it appears in the alert format – domain\\username. Examples: NT AUTHORITY."
        },
        "upnSuffix": {
          "type": "string",
          "readOnly": true,
          "description": "The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com."
        },
        "sid": {
          "type": "string",
          "readOnly": true,
          "description": "The account security identifier, e.g. S-1-5-18."
        },
        "aadTenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The Azure Active Directory tenant id."
        },
        "aadUserId": {
          "type": "string",
          "readOnly": true,
          "description": "The Azure Active Directory user id."
        },
        "puid": {
          "type": "string",
          "readOnly": true,
          "description": "The Azure Active Directory Passport User ID."
        },
        "isDomainJoined": {
          "type": "boolean",
          "readOnly": true,
          "description": "Determines whether this is a domain account."
        },
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "The display name of the account."
        },
        "objectGuid": {
          "type": "string",
          "readOnly": true,
          "format": "uuid",
          "description": "The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active directory."
        },
        "hostEntityId": {
          "type": "string",
          "readOnly": true,
          "description": "The Host entity id that contains the account in case it is a local account (not domain joined)"
        }
      }
    },
    "HostEntity": {
      "x-ms-discriminator-value": "Host",
      "type": "object",
      "description": "Represents a host entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Host entity properties",
          "$ref": "#/definitions/HostEntityProperties"
        }
      }
    },
    "HostEntityProperties": {
      "type": "object",
      "description": "Host entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "dnsDomain": {
          "type": "string",
          "readOnly": true,
          "description": "The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain"
        },
        "ntDomain": {
          "type": "string",
          "readOnly": true,
          "description": "The NT domain that this host belongs to."
        },
        "hostName": {
          "type": "string",
          "readOnly": true,
          "description": "The hostname without the domain suffix."
        },
        "netBiosName": {
          "type": "string",
          "readOnly": true,
          "description": "The host name (pre-windows2000)."
        },
        "azureID": {
          "type": "string",
          "readOnly": true,
          "description": "The azure resource id of the VM."
        },
        "omsAgentID": {
          "type": "string",
          "readOnly": true,
          "description": "The OMS agent id, if the host has OMS agent installed."
        },
        "osFamily": {
          "type": "string",
          "enum": [
            "Linux",
            "Windows",
            "Android",
            "IOS"
          ],
          "x-ms-enum": {
            "name": "OSFamily",
            "modelAsString": false,
            "values": [
              {
                "value": "Linux",
                "description": "Host with Linux operating system."
              },
              {
                "value": "Windows",
                "description": "Host with Windows operating system."
              },
              {
                "value": "Android",
                "description": "Host with Android operating system."
              },
              {
                "value": "IOS",
                "description": "Host with IOS operating system."
              }
            ]
          },
          "description": "The operating system type."
        },
        "osVersion": {
          "type": "string",
          "readOnly": true,
          "description": "A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained than OSFamily or future values not supported by OSFamily enumeration"
        },
        "isDomainJoined": {
          "type": "boolean",
          "readOnly": true,
          "description": "Determines whether this host belongs to a domain."
        }
      }
    },
    "FileEntity": {
      "x-ms-discriminator-value": "File",
      "type": "object",
      "description": "Represents a file entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "File entity properties",
          "$ref": "#/definitions/FileEntityProperties"
        }
      }
    },
    "FileEntityProperties": {
      "type": "object",
      "description": "File entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "directory": {
          "type": "string",
          "readOnly": true,
          "description": "The full path to the file."
        },
        "fileName": {
          "type": "string",
          "readOnly": true,
          "description": "The file name without path (some alerts might not include path)."
        },
        "hostEntityId": {
          "type": "string",
          "readOnly": true,
          "description": "The Host entity id which the file belongs to"
        },
        "fileHashEntityIds": {
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "file hash id",
            "type": "string"
          },
          "description": "The file hash entity identifiers associated with this file"
        }
      }
    },
    "SecurityAlert": {
      "x-ms-discriminator-value": "SecurityAlert",
      "type": "object",
      "description": "Represents a security alert entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "SecurityAlert entity properties",
          "$ref": "#/definitions/SecurityAlertProperties"
        }
      }
    },
    "SecurityAlertProperties": {
      "type": "object",
      "description": "SecurityAlert entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "systemAlertId": {
          "type": "string",
          "readOnly": true,
          "description": "Holds the product identifier of the alert for the product."
        },
        "confidenceReasons": {
          "type": "array",
          "readOnly": true,
          "description": "The confidence reasons",
          "items": {
            "type": "object",
            "description": "confidence reason item",
            "properties": {
              "reasonType": {
                "type": "string",
                "readOnly": true,
                "description": "The type (category) of the reason"
              },
              "reason": {
                "type": "string",
                "readOnly": true,
                "description": "The reason's description"
              }
            }
          }
        },
        "confidenceScoreStatus": {
          "type": "string",
          "description": "The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final.",
          "readOnly": true,
          "enum": [
            "NotApplicable",
            "InProcess",
            "NotFinal",
            "Final"
          ],
          "x-ms-enum": {
            "name": "ConfidenceScoreStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "NotApplicable",
                "description": "Score will not be calculated for this alert as it is not supported by virtual analyst"
              },
              {
                "value": "InProcess",
                "description": "No score was set yet and calculation is in progress"
              },
              {
                "value": "NotFinal",
                "description": "Score is calculated and shown as part of the alert, but may be updated again at a later time following the processing of additional data"
              },
              {
                "value": "Final",
                "description": "Final score was calculated and available"
              }
            ]
          }
        },
        "intent": {
          "type": "string",
          "description": "Holds the alert intent stage(s) mapping for this alert.",
          "readOnly": true,
          "enum": [
            "Unknown",
            "Probing",
            "Exploitation",
            "Persistence",
            "PrivilegeEscalation",
            "DefenseEvasion",
            "CredentialAccess",
            "Discovery",
            "LateralMovement",
            "Execution",
            "Collection",
            "Exfiltration",
            "CommandAndControl",
            "Impact"
          ],
          "x-ms-enum": {
            "name": "KillChainIntent",
            "modelAsString": true,
            "values": [
              {
                "value": "Unknown",
                "description": "The default value."
              },
              {
                "value": "Probing",
                "description": "Probing could be an attempt to access a certain resource regardless of a malicious intent or a failed attempt to gain access to a target system to gather information prior to exploitation. This step is usually detected as an attempt originating from outside the network in attempt to scan the target system and find a way in."
              },
              {
                "value": "Exploitation",
                "description": "Exploitation is the stage where an attacker manage to get foothold on the attacked resource. This stage is applicable not only for compute hosts, but also for resources such as user accounts, certificates etc. Adversaries will often be able to control the resource after this stage."
              },
              {
                "value": "Persistence",
                "description": "Persistence is any access, action, or configuration change to a system that gives an adversary a persistent presence on that system. Adversaries will often need to maintain access to systems through interruptions such as system restarts, loss of credentials, or other failures that would require a remote access tool to restart or alternate backdoor for them to regain access."
              },
              {
                "value": "PrivilegeEscalation",
                "description": "Privilege escalation is the result of actions that allow an adversary to obtain a higher level of permissions on a system or network. Certain tools or actions require a higher level of privilege to work and are likely necessary at many points throughout an operation. User accounts with permissions to access specific systems or perform specific functions necessary for adversaries to achieve their objective may also be considered an escalation of privilege."
              },
              {
                "value": "DefenseEvasion",
                "description": "Defense evasion consists of techniques an adversary may use to evade detection or avoid other defenses. Sometimes these actions are the same as or variations of techniques in other categories that have the added benefit of subverting a particular defense or mitigation. "
              },
              {
                "value": "CredentialAccess",
                "description": "Credential access represents techniques resulting in access to or control over system, domain, or service credentials that are used within an enterprise environment. Adversaries will likely attempt to obtain legitimate credentials from users or administrator accounts (local system administrator or domain users with administrator access) to use within the network. With sufficient access within a network, an adversary can create accounts for later use within the environment."
              },
              {
                "value": "Discovery",
                "description": "Discovery consists of techniques that allow the adversary to gain knowledge about the system and internal network. When adversaries gain access to a new system, they must orient themselves to what they now have control of and what benefits operating from that system give to their current objective or overall goals during the intrusion. The operating system provides many native tools that aid in this post-compromise information-gathering phase."
              },
              {
                "value": "LateralMovement",
                "description": "Lateral movement consists of techniques that enable an adversary to access and control remote systems on a network and could, but does not necessarily, include execution of tools on remote systems. The lateral movement techniques could allow an adversary to gather information from a system without needing additional tools, such as a remote access tool. An adversary can use lateral movement for many purposes, including remote Execution of tools, pivoting to additional systems, access to specific information or files, access to additional credentials, or to cause an effect."
              },
              {
                "value": "Execution",
                "description": "The execution tactic represents techniques that result in execution of adversary-controlled code on a local or remote system. This tactic is often used in conjunction with lateral movement to expand access to remote systems on a network."
              },
              {
                "value": "Collection",
                "description": "Collection consists of techniques used to identify and gather information, such as sensitive files, from a target network prior to exfiltration. This category also covers locations on a system or network where the adversary may look for information to exfiltrate."
              },
              {
                "value": "Exfiltration",
                "description": "Exfiltration refers to techniques and attributes that result or aid in the adversary removing files and information from a target network. This category also covers locations on a system or network where the adversary may look for information to exfiltrate."
              },
              {
                "value": "CommandAndControl",
                "description": "The command and control tactic represents how adversaries communicate with systems under their control within a target network."
              },
              {
                "value": "Impact",
                "description": "The impact intent primary objective is to directly reduce the availability or integrity of a system, service, or network; including manipulation of data to impact a business or operational process. This would often refer to techniques such as ransom-ware, defacement, data manipulation and others."
              }
            ]
          }
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "readOnly": true,
          "description": "The confidence score of the alert."
        },
        "alertDisplayName": {
          "type": "string",
          "readOnly": true,
          "description": "The display name of the alert."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Alert description."
        },
        "remediationSteps": {
          "type": "array",
          "readOnly": true,
          "description": "Manual action items to take to remediate the alert.",
          "items": {
            "type": "string"
          }
        },
        "confidenceLevel": {
          "type": "string",
          "description": "The confidence level of this alert.",
          "readOnly": true,
          "enum": [
            "Unknown",
            "Low",
            "High"
          ],
          "x-ms-enum": {
            "name": "ConfidenceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Unknown",
                "description": "Unknown confidence, the is the default value"
              },
              {
                "value": "Low",
                "description": "Low confidence, meaning we have some doubts this is indeed malicious or part of an attack"
              },
              {
                "value": "High",
                "description": "High confidence that the alert is true positive malicious"
              }
            ]
          }
        },
        "severity": {
          "$ref": "#/definitions/AlertSeverity",
          "description": "The severity of the alert"
        },
        "vendorName": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the vendor that raise the alert."
        },
        "productName": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the product which published this alert."
        },
        "productComponentName": {
          "type": "string",
          "readOnly": true,
          "description": "The name of a component inside the product which generated the alert."
        },
        "alertType": {
          "type": "string",
          "readOnly": true,
          "description": "The type name of the alert."
        },
        "productVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The version of the product generating the alert."
        },
        "processingEndTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the alert was made available for consumption."
        },
        "status": {
          "type": "string",
          "description": "The lifecycle status of the alert.",
          "readOnly": true,
          "enum": [
            "Unknown",
            "New",
            "Resolved",
            "Dismissed",
            "InProgress"
          ],
          "x-ms-enum": {
            "name": "AlertStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Unknown",
                "description": "Unknown value"
              },
              {
                "value": "New",
                "description": "New alert"
              },
              {
                "value": "Resolved",
                "description": "Alert closed after handling"
              },
              {
                "value": "Dismissed",
                "description": "Alert dismissed as false positive"
              },
              {
                "value": "InProgress",
                "description": "Alert is being handled"
              }
            ]
          }
        },
        "endTimeUtc": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The impact end time of the alert (the time of the last event contributing to the alert)."
        },
        "startTimeUtc": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The impact start time of the alert (the time of the first event contributing to the alert)."
        },
        "timeGenerated": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time the alert was generated."
        },
        "compromisedEntity": {
          "type": "string",
          "readOnly": true,
          "description": "Display name of the main entity being reported on."
        }
      }
    },
    "FileHashEntity": {
      "x-ms-discriminator-value": "FileHash",
      "type": "object",
      "description": "Represents a file hash entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "FileHash entity properties",
          "$ref": "#/definitions/FileHashEntityProperties"
        }
      }
    },
    "FileHashEntityProperties": {
      "type": "object",
      "description": "FileHash entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "hashValue": {
          "type": "string",
          "readOnly": true,
          "description": "The file hash value."
        },
        "algorithm": {
          "type": "string",
          "description": "The hash algorithm type.",
          "readOnly": true,
          "enum": [
            "Unknown",
            "MD5",
            "SHA1",
            "SHA256",
            "SHA256AC"
          ],
          "x-ms-enum": {
            "name": "FileHashAlgorithm",
            "modelAsString": true,
            "values": [
              {
                "value": "Unknown",
                "description": "Unknown hash algorithm"
              },
              {
                "value": "MD5",
                "description": "MD5 hash type"
              },
              {
                "value": "SHA1",
                "description": "SHA1 hash type"
              },
              {
                "value": "SHA256",
                "description": "SHA256 hash type"
              },
              {
                "value": "SHA256AC",
                "description": "SHA256 Authenticode hash type"
              }
            ]
          }
        }
      }
    },
    "MalwareEntity": {
      "x-ms-discriminator-value": "Malware",
      "type": "object",
      "description": "Represents a malware entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "File entity properties",
          "$ref": "#/definitions/MalwareEntityProperties"
        }
      }
    },
    "MalwareEntityProperties": {
      "type": "object",
      "description": "Malware entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "malwareName": {
          "type": "string",
          "readOnly": true,
          "description": "The malware name by the vendor, e.g. Win32/Toga!rfn"
        },
        "category": {
          "type": "string",
          "readOnly": true,
          "description": "The malware category by the vendor, e.g. Trojan"
        },
        "fileEntityIds": {
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "file entity id",
            "type": "string"
          },
          "description": "List of linked file entity identifiers on which the malware was found"
        },
        "processEntityIds": {
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "process entity id",
            "type": "string"
          },
          "description": "List of linked process entity identifiers on which the malware was found."
        }
      }
    },
    "SecurityGroupEntity": {
      "x-ms-discriminator-value": "SecurityGroup",
      "type": "object",
      "description": "Represents a security group entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "SecurityGroup entity properties",
          "$ref": "#/definitions/SecurityGroupEntityProperties"
        }
      }
    },
    "SecurityGroupEntityProperties": {
      "type": "object",
      "description": "SecurityGroup entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "distinguishedName": {
          "type": "string",
          "readOnly": true,
          "description": "The group distinguished name"
        },
        "sid": {
          "type": "string",
          "readOnly": true,
          "description": "The SID attribute is a single-value attribute that specifies the security identifier (SID) of the group"
        },
        "objectGuid": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "A single-value attribute that is the unique identifier for the object, assigned by active directory."
        }
      }
    },
    "AzureResourceEntity": {
      "x-ms-discriminator-value": "AzureResource",
      "type": "object",
      "description": "Represents an azure resource entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "AzureResource entity properties",
          "$ref": "#/definitions/AzureResourceEntityProperties"
        }
      }
    },
    "AzureResourceEntityProperties": {
      "type": "object",
      "description": "AzureResource entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "resourceId": {
          "type": "string",
          "readOnly": true,
          "description": "The azure resource id of the resource"
        }
      }
    },
    "CloudApplicationEntity": {
      "x-ms-discriminator-value": "CloudApplication",
      "type": "object",
      "description": "Represents a cloud application entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "CloudApplication entity properties",
          "$ref": "#/definitions/CloudApplicationEntityProperties"
        }
      }
    },
    "CloudApplicationEntityProperties": {
      "type": "object",
      "description": "CloudApplication entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "appId": {
          "type": "integer",
          "readOnly": true,
          "description": "The technical identifier of the application."
        },
        "appName": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the related cloud application."
        },
        "instanceName": {
          "type": "string",
          "readOnly": true,
          "description": "The user defined instance name of the cloud application. It is often used to distinguish between several applications of the same type that a customer has."
        }
      }
    },
    "ProcessEntity": {
      "x-ms-discriminator-value": "Process",
      "type": "object",
      "description": "Represents a process entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Process entity properties",
          "$ref": "#/definitions/ProcessEntityProperties"
        }
      }
    },
    "ProcessEntityProperties": {
      "type": "object",
      "description": "Process entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "processId": {
          "type": "string",
          "readOnly": true,
          "description": "The process ID"
        },
        "commandLine": {
          "type": "string",
          "readOnly": true,
          "description": "The command line used to create the process"
        },
        "elevationToken": {
          "type": "string",
          "enum": [
            "Default",
            "Full",
            "Limited"
          ],
          "x-ms-enum": {
            "name": "ElevationToken",
            "modelAsString": false,
            "values": [
              {
                "value": "Default",
                "description": "Default elevation token"
              },
              {
                "value": "Full",
                "description": "Full elevation token"
              },
              {
                "value": "Limited",
                "description": "Limited elevation token"
              }
            ]
          },
          "description": "The elevation token associated with the process."
        },
        "creationTimeUtc": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The time when the process started to run"
        },
        "imageFileEntityId": {
          "type": "string",
          "readOnly": true,
          "description": "Image file entity id"
        },
        "accountEntityId": {
          "type": "string",
          "readOnly": true,
          "description": "The account entity id running the processes."
        },
        "parentProcessEntityId": {
          "type": "string",
          "readOnly": true,
          "description": "The parent process entity id."
        },
        "hostEntityId": {
          "type": "string",
          "readOnly": true,
          "description": "The host entity id on which the process was running"
        },
        "hostLogonSessionEntityId": {
          "type": "string",
          "readOnly": true,
          "description": "The session entity id in which the process was running"
        }
      }
    },
    "DnsEntity": {
      "x-ms-discriminator-value": "DnsResolution",
      "type": "object",
      "description": "Represents a dns entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Dns entity properties",
          "$ref": "#/definitions/DnsEntityProperties"
        }
      }
    },
    "DnsEntityProperties": {
      "type": "object",
      "description": "Dns entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "domainName": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the dns record associated with the alert"
        },
        "ipAddressEntityIds": {
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "Ip entity id",
            "type": "string"
          },
          "description": "Ip entity identifiers for the resolved ip address."
        },
        "dnsServerIpEntityId": {
          "type": "string",
          "readOnly": true,
          "description": "An ip entity id for the dns server resolving the request"
        },
        "hostIpAddressEntityId": {
          "type": "string",
          "readOnly": true,
          "description": "An ip entity id for the dns request client"
        }
      }
    },
    "IpEntity": {
      "x-ms-discriminator-value": "Ip",
      "type": "object",
      "description": "Represents an ip entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Ip entity properties",
          "$ref": "#/definitions/IpEntityProperties"
        }
      }
    },
    "IpEntityProperties": {
      "type": "object",
      "description": "Ip entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "address": {
          "type": "string",
          "readOnly": true,
          "description": "The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6)"
        },
        "location": {
          "$ref": "#/definitions/GeoLocation",
          "description": "The geo-location context attached to the ip entity"
        },
        "threatIntelligence": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ThreatIntelligence"
          },
          "description": "A list of TI contexts attached to the ip entity."
        }
      }
    },
    "GeoLocation": {
      "type": "object",
      "readOnly": true,
      "description": "The geo-location context attached to the ip entity",
      "properties": {
        "countryCode": {
          "type": "string",
          "readOnly": true,
          "description": "The country code according to ISO 3166 format"
        },
        "countryName": {
          "type": "string",
          "readOnly": true,
          "description": "Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name"
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "State name"
        },
        "city": {
          "type": "string",
          "readOnly": true,
          "description": "City name"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "readOnly": true,
          "description": "The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or postal code."
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "readOnly": true,
          "description": "The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or postal code."
        },
        "asn": {
          "type": "integer",
          "readOnly": true,
          "description": "Autonomous System Number"
        }
      }
    },
    "ThreatIntelligence": {
      "type": "object",
      "description": "ThreatIntelligence property bag.",
      "properties": {
        "providerName": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the provider from whom this Threat Intelligence information was received"
        },
        "threatType": {
          "type": "string",
          "readOnly": true,
          "description": "Threat type (e.g. \"Botnet\")"
        },
        "threatName": {
          "type": "string",
          "readOnly": true,
          "description": "Threat name (e.g. \"Jedobot malware\")"
        },
        "confidence": {
          "type": "number",
          "format": "double",
          "readOnly": true,
          "description": "Confidence (must be between 0 and 1)"
        },
        "reportLink": {
          "type": "string",
          "readOnly": true,
          "description": "Report link"
        },
        "threatDescription": {
          "type": "string",
          "readOnly": true,
          "description": "Threat description (free text)"
        }
      }
    },
    "RegistryKeyEntity": {
      "x-ms-discriminator-value": "RegistryKey",
      "type": "object",
      "description": "Represents a registry key entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "RegistryKey entity properties",
          "$ref": "#/definitions/RegistryKeyEntityProperties"
        }
      }
    },
    "RegistryKeyEntityProperties": {
      "type": "object",
      "description": "RegistryKey entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "hive": {
          "type": "string",
          "description": "the hive that holds the registry key.",
          "readOnly": true,
          "enum": [
            "HKEY_LOCAL_MACHINE",
            "HKEY_CLASSES_ROOT",
            "HKEY_CURRENT_CONFIG",
            "HKEY_USERS",
            "HKEY_CURRENT_USER_LOCAL_SETTINGS",
            "HKEY_PERFORMANCE_DATA",
            "HKEY_PERFORMANCE_NLSTEXT",
            "HKEY_PERFORMANCE_TEXT",
            "HKEY_A",
            "HKEY_CURRENT_USER"
          ],
          "x-ms-enum": {
            "name": "RegistryHive",
            "modelAsString": true,
            "values": [
              {
                "value": "HKEY_LOCAL_MACHINE",
                "description": "HKEY_LOCAL_MACHINE"
              },
              {
                "value": "HKEY_CLASSES_ROOT",
                "description": "HKEY_CLASSES_ROOT"
              },
              {
                "value": "HKEY_CURRENT_CONFIG",
                "description": "HKEY_CURRENT_CONFIG"
              },
              {
                "value": "HKEY_USERS",
                "description": "HKEY_USERS"
              },
              {
                "value": "HKEY_CURRENT_USER_LOCAL_SETTINGS",
                "description": "HKEY_CURRENT_USER_LOCAL_SETTINGS"
              },
              {
                "value": "HKEY_PERFORMANCE_DATA",
                "description": "HKEY_PERFORMANCE_DATA"
              },
              {
                "value": "HKEY_PERFORMANCE_NLSTEXT",
                "description": "HKEY_PERFORMANCE_NLSTEXT"
              },
              {
                "value": "HKEY_PERFORMANCE_TEXT",
                "description": "HKEY_PERFORMANCE_TEXT"
              },
              {
                "value": "HKEY_A",
                "description": "HKEY_A"
              },
              {
                "value": "HKEY_CURRENT_USER",
                "description": "HKEY_CURRENT_USER"
              }
            ]
          }
        },
        "key": {
          "type": "string",
          "readOnly": true,
          "description": "The registry key path."
        }
      }
    },
    "RegistryValueEntity": {
      "x-ms-discriminator-value": "RegistryValue",
      "type": "object",
      "description": "Represents a registry value entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "RegistryKey entity properties",
          "$ref": "#/definitions/RegistryValueEntityProperties"
        }
      }
    },
    "RegistryValueEntityProperties": {
      "type": "object",
      "description": "RegistryValue entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "valueName": {
          "type": "string",
          "readOnly": true,
          "description": "The registry value name."
        },
        "valueData": {
          "type": "string",
          "readOnly": true,
          "description": "String formatted representation of the value data."
        },
        "valueType": {
          "type": "string",
          "description": "Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry.",
          "readOnly": true,
          "enum": [
            "None",
            "Unknown",
            "String",
            "ExpandString",
            "Binary",
            "DWord",
            "MultiString",
            "QWord"
          ],
          "x-ms-enum": {
            "name": "RegistryValueKind",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "None"
              },
              {
                "value": "Unknown",
                "description": "Unknown value type"
              },
              {
                "value": "String",
                "description": "String value type"
              },
              {
                "value": "ExpandString",
                "description": "ExpandString value type"
              },
              {
                "value": "Binary",
                "description": "Binary value type"
              },
              {
                "value": "DWord",
                "description": "DWord value type"
              },
              {
                "value": "MultiString",
                "description": "MultiString value type"
              },
              {
                "value": "QWord",
                "description": "QWord value type"
              }
            ]
          }
        },
        "keyEntityId": {
          "type": "string",
          "readOnly": true,
          "description": "The registry key entity id."
        }
      }
    },
    "UrlEntity": {
      "x-ms-discriminator-value": "Url",
      "type": "object",
      "description": "Represents a url entity.",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Url entity properties",
          "$ref": "#/definitions/UrlEntityProperties"
        }
      }
    },
    "UrlEntityProperties": {
      "type": "object",
      "description": "Url entity property bag.",
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "properties": {
        "url": {
          "type": "string",
          "readOnly": true,
          "description": "A full URL the entity points to"
        }
      }
    },
    "EntityExpandParameters": {
      "description": "The parameters required to execute an expand operation on the given entity.",
      "properties": {
        "expansionId": {
          "type": "string",
          "format": "uuid",
          "description": "The Id of the expansion to perform."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start date filter, so the only expansion results returned are after this date."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end date filter, so the only expansion results returned are before this date."
        }
      }
    },
    "EntityExpandResponse": {
      "properties": {
        "value": {
          "type": "object",
          "description": "The expansion result values.",
          "properties": {
            "entities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Entity"
              },
              "description": "Array of the expansion result entities."
            }
          }
        },
        "metaData": {
          "$ref": "#/definitions/ExpansionResultsMetadata",
          "description": "The metadata from the expansion operation results."
        }
      },
      "description": "The entity expansion result operation response."
    },
    "ExpansionResultsMetadata": {
      "type": "object",
      "description": "Expansion result metadata.",
      "properties": {
        "aggregations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpansionResultAggregation"
          },
          "description": "Information of the aggregated nodes in the expansion result."
        }
      }
    },
    "ExpansionResultAggregation": {
      "type": "object",
      "description": "Information of a specific aggregation in the expansion result.",
      "properties": {
        "entityKind": {
          "description": "The kind of the aggregated entity.",
          "$ref": "#/definitions/EntityInnerKind"
        },
        "count": {
          "type": "integer",
          "description": "Total number of aggregations of the given kind (and aggregationType if given) in the expansion result."
        },
        "aggregationType": {
          "type": "string",
          "description": "The common type of the aggregation. (for e.g. entity field name)"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the aggregation by type."
        }
      },
      "required": [
        "entityKind",
        "count"
      ]
    },
    "OfficeConsentList": {
      "description": "List of all the office365 consents.",
      "properties": {
        "nextLink": {
          "readOnly": true,
          "description": "URL to fetch the next set of office consents.",
          "type": "string"
        },
        "value": {
          "description": "Array of the consents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeConsent"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "OfficeConsent": {
      "type": "object",
      "description": "Consent for Office365 tenant that already made.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Office consent properties",
          "$ref": "#/definitions/OfficeConsentProperties"
        }
      }
    },
    "OfficeConsentProperties": {
      "type": "object",
      "description": "Consent property bag.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenantId of the Office365 with the consent."
        },
        "tenantName": {
          "type": "string",
          "readOnly": true,
          "description": "The tenant name of the Office365 with the consent."
        }
      }
    },
    "Resource": {
      "x-ms-azure-resource": true,
      "description": "An azure resource object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource Id"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource type"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource name"
        }
      }
    },
    "Settings": {
      "type": "object",
      "description": "The Setting.",
      "discriminator": "kind",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/SettingsKind"
        }
      ],
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of the alert rule."
        }
      }
    },
    "SettingsKind": {
      "type": "object",
      "description": "Describes an Azure resource with kind.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the setting",
          "enum": [
            "UebaSettings",
            "ToggleSettings"
          ],
          "x-ms-enum": {
            "name": "SettingKind",
            "modelAsString": true
          }
        }
      }
    },
    "UebaSettings": {
      "x-ms-discriminator-value": "UebaSettings",
      "type": "object",
      "description": "Represents settings for User and Entity Behavior Analytics enablement.",
      "allOf": [
        {
          "$ref": "#/definitions/Settings"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "User and Entity Behavior Analytics settings properties",
          "$ref": "#/definitions/UebaSettingsProperties"
        }
      }
    },
    "UebaSettingsProperties": {
      "type": "object",
      "description": "User and Entity Behavior Analytics settings property bag.",
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "description": "Determines whether User and Entity Behavior Analytics is enabled for this workspace."
        },
        "statusInMcas": {
          "type": "string",
          "readOnly": true,
          "description": "Determines whether User and Entity Behavior Analytics is enabled from MCAS (Microsoft Cloud App Security).",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "StatusInMcas",
            "modelAsString": true
          }
        },
        "atpLicenseStatus": {
          "type": "string",
          "readOnly": true,
          "description": "Determines whether the tenant has ATP (Advanced Threat Protection) license.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "LicenseStatus",
            "modelAsString": true
          }
        }
      }
    },
    "ToggleSettings": {
      "x-ms-discriminator-value": "ToggleSettings",
      "type": "object",
      "description": "Settings with single toggle.",
      "allOf": [
        {
          "$ref": "#/definitions/Settings"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "toggle properties",
          "$ref": "#/definitions/ToggleSettingsProperties"
        }
      }
    },
    "ToggleSettingsProperties": {
      "type": "object",
      "description": "toggle property bag.",
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "description": "Determines whether the setting is enable or disabled."
        }
      }
    },
    "Aggregations": {
      "type": "object",
      "description": "The aggregation.",
      "discriminator": "kind",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/AggregationsKind"
        }
      ]
    },
    "AggregationsKind": {
      "type": "object",
      "description": "Describes an Azure resource with kind.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the setting",
          "enum": [
            "CasesAggregation"
          ],
          "x-ms-enum": {
            "name": "AggregationsKind",
            "modelAsString": true
          }
        }
      }
    },
    "CasesAggregation": {
      "x-ms-discriminator-value": "CasesAggregation",
      "type": "object",
      "description": "Represents aggregations results for cases.",
      "allOf": [
        {
          "$ref": "#/definitions/Aggregations"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of aggregations results of cases.",
          "$ref": "#/definitions/CasesAggregationProperties"
        }
      }
    },
    "CasesAggregationProperties": {
      "type": "object",
      "description": "Aggregative results of cases property bag.",
      "properties": {
        "aggregationBySeverity": {
          "description": "Aggregations results by case severity.",
          "$ref": "#/definitions/CasesAggregationBySeverityProperties"
        },
        "aggregationByStatus": {
          "description": "Aggregations results by case status.",
          "$ref": "#/definitions/CasesAggregationByStatusProperties"
        }
      }
    },
    "CasesAggregationBySeverityProperties": {
      "type": "object",
      "description": "Aggregative results of cases by severity property bag.",
      "properties": {
        "totalCriticalSeverity": {
          "type": "integer",
          "readOnly": true,
          "description": "Total amount of open cases with severity Critical"
        },
        "totalHighSeverity": {
          "type": "integer",
          "readOnly": true,
          "description": "Total amount of open cases with severity High"
        },
        "totalMediumSeverity": {
          "type": "integer",
          "readOnly": true,
          "description": "Total amount of open cases with severity medium"
        },
        "totalLowSeverity": {
          "type": "integer",
          "readOnly": true,
          "description": "Total amount of open cases with severity Low"
        },
        "totalInformationalSeverity": {
          "type": "integer",
          "readOnly": true,
          "description": "Total amount of open cases with severity Informational"
        }
      }
    },
    "CasesAggregationByStatusProperties": {
      "type": "object",
      "description": "Aggregative results of cases by status property bag.",
      "properties": {
        "totalNewStatus": {
          "type": "integer",
          "readOnly": true,
          "description": "Total amount of open cases with status New"
        },
        "totalInProgressStatus": {
          "type": "integer",
          "readOnly": true,
          "description": "Total amount of open cases with status InProgress"
        },
        "totalResolvedStatus": {
          "type": "integer",
          "readOnly": true,
          "description": "Total amount of open cases with status Resolved"
        },
        "totalDismissedStatus": {
          "type": "integer",
          "readOnly": true,
          "description": "Total amount of open cases with status Dismissed"
        }
      }
    },
    "EntityQueryList": {
      "description": "List of all the entity queries.",
      "properties": {
        "nextLink": {
          "readOnly": true,
          "description": "URL to fetch the next set of entity queries.",
          "type": "string"
        },
        "value": {
          "description": "Array of entity queries.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityQuery"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "EntityQuery": {
      "type": "object",
      "description": "Specific entity query.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Entity query properties",
          "$ref": "#/definitions/EntityQueryProperties"
        }
      }
    },
    "EntityQueryProperties": {
      "type": "object",
      "description": "Describes entity query properties",
      "properties": {
        "queryTemplate": {
          "type": "string",
          "description": "The template query string to be parsed and formatted"
        },
        "inputEntityType": {
          "$ref": "#/definitions/EntityInnerType",
          "description": "The type of the query's source entity"
        },
        "inputFields": {
          "type": "array",
          "items": {
            "description": "input field",
            "type": "string"
          },
          "description": "List of the fields of the source entity that are required to run the query"
        },
        "outputEntityTypes": {
          "type": "array",
          "items": {
            "description": "output entity type",
            "$ref": "#/definitions/EntityInnerType"
          },
          "description": "List of the desired output types to be constructed from the result"
        },
        "dataSources": {
          "type": "array",
          "items": {
            "description": "data source",
            "type": "string"
          },
          "description": "List of the data sources that are required to run the query"
        },
        "displayName": {
          "type": "string",
          "description": "The query display name"
        }
      }
    },
    "EntityInnerType": {
      "type": "string",
      "description": "The type of the entity",
      "enum": [
        "Account",
        "Host",
        "File",
        "AzureResource",
        "CloudApplication",
        "DNS",
        "FileHash",
        "IP",
        "Malware",
        "Process",
        "RegistryKey",
        "RegistryValue",
        "SecurityGroup",
        "URL",
        "SecurityAlert",
        "HuntingBookmark"
      ],
      "x-ms-enum": {
        "name": "EntityType",
        "modelAsString": true,
        "values": [
          {
            "value": "Account",
            "description": "Entity represents account in the system."
          },
          {
            "value": "Host",
            "description": "Entity represents host in the system."
          },
          {
            "value": "File",
            "description": "Entity represents file in the system."
          },
          {
            "value": "AzureResource",
            "description": "Entity represents azure resource in the system."
          },
          {
            "value": "CloudApplication",
            "description": "Entity represents cloud application in the system."
          },
          {
            "value": "DNS",
            "description": "Entity represents dns in the system."
          },
          {
            "value": "FileHash",
            "description": "Entity represents file hash in the system."
          },
          {
            "value": "IP",
            "description": "Entity represents ip in the system."
          },
          {
            "value": "Malware",
            "description": "Entity represents malware in the system."
          },
          {
            "value": "Process",
            "description": "Entity represents process in the system."
          },
          {
            "value": "RegistryKey",
            "description": "Entity represents registry key in the system."
          },
          {
            "value": "RegistryValue",
            "description": "Entity represents registry value in the system."
          },
          {
            "value": "SecurityGroup",
            "description": "Entity represents security group in the system."
          },
          {
            "value": "URL",
            "description": "Entity represents url in the system."
          },
          {
            "value": "SecurityAlert",
            "description": "Entity represents security alert in the system."
          },
          {
            "value": "HuntingBookmark",
            "description": "Entity represents HuntingBookmark in the system."
          }
        ]
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
      "type": "string",
      "description": "Azure subscription ID"
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [
        "2019-01-01-preview"
      ],
      "description": "API version for the operation"
    },
    "OperationalInsightsResourceProvider": {
      "name": "operationalInsightsResourceProvider",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The namespace of workspaces resource provider- Microsoft.OperationalInsights.",
      "x-ms-parameter-location": "method"
    },
    "WorkspaceName": {
      "name": "workspaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the workspace.",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "RuleId": {
      "name": "ruleId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Alert rule ID",
      "x-ms-parameter-location": "method"
    },
    "AlertRule": {
      "name": "alertRule",
      "in": "body",
      "description": "The alert rule",
      "required": true,
      "schema": {
        "$ref": "#/definitions/AlertRule"
      },
      "x-ms-parameter-location": "method"
    },
    "AlertRuleTemplateId": {
      "name": "alertRuleTemplateId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Alert rule template ID",
      "x-ms-parameter-location": "method"
    },
    "ActionId": {
      "name": "actionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Action ID",
      "x-ms-parameter-location": "method"
    },
    "Action": {
      "name": "action",
      "in": "body",
      "description": "The action",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Action"
      },
      "x-ms-parameter-location": "method"
    },
    "CaseId": {
      "name": "caseId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Case ID",
      "x-ms-parameter-location": "method"
    },
    "Case": {
      "name": "case",
      "in": "body",
      "description": "The case",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Case"
      },
      "x-ms-parameter-location": "method"
    },
    "CaseCommentId": {
      "name": "caseCommentId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Case comment ID",
      "x-ms-parameter-location": "method"
    },
    "CaseComment": {
      "name": "caseComment",
      "in": "body",
      "description": "The case comment",
      "required": true,
      "schema": {
        "$ref": "#/definitions/CaseComment"
      },
      "x-ms-parameter-location": "method"
    },
    "BookmarkId": {
      "name": "bookmarkId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Bookmark ID",
      "x-ms-parameter-location": "method"
    },
    "Bookmark": {
      "name": "bookmark",
      "in": "body",
      "description": "The bookmark",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Bookmark"
      },
      "x-ms-parameter-location": "method"
    },
    "DataConnectorId": {
      "name": "dataConnectorId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Connector ID",
      "x-ms-parameter-location": "method"
    },
    "DataConnector": {
      "name": "dataConnector",
      "in": "body",
      "description": "The data connector",
      "required": true,
      "schema": {
        "$ref": "#/definitions/DataConnector"
      },
      "x-ms-parameter-location": "method"
    },
    "EntityId": {
      "name": "entityId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "entity ID",
      "x-ms-parameter-location": "method"
    },
    "EntityExpandRequestBody": {
      "name": "parameters",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/EntityExpandParameters"
      },
      "description": "The parameters required to execute an expand operation on the given entity.",
      "x-ms-parameter-location": "method"
    },
    "ConsentId": {
      "name": "consentId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "consent ID",
      "x-ms-parameter-location": "method"
    },
    "SettingsName": {
      "name": "settingsName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The setting name. Supports- Fusion, UEBA",
      "x-ms-parameter-location": "method"
    },
    "Settings": {
      "name": "settings",
      "in": "body",
      "description": "The setting",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Settings"
      },
      "x-ms-parameter-location": "method"
    },
    "AggregationsName": {
      "name": "aggregationsName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The aggregation name. Supports - Cases",
      "x-ms-parameter-location": "method"
    },
    "EntityQueryId": {
      "name": "entityQueryId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "entity query ID",
      "x-ms-parameter-location": "method"
    },
    "ODataFilter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Filters the results, based on a Boolean condition. Optional.",
      "x-ms-parameter-location": "method"
    },
    "ODataOrderBy": {
      "name": "$orderby",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Sorts the results. Optional.",
      "x-ms-parameter-location": "method"
    },
    "ODataTop": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "Returns only the first n results. Optional.",
      "x-ms-parameter-location": "method"
    },
    "ODataSkipToken": {
      "name": "$skipToken",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
      "x-ms-parameter-location": "method"
    }
  }
}
