{
  "swagger": "2.0",
  "info": {
    "title": "Security Insights",
    "description": "API spec for Microsoft.SecurityInsights (Azure Security Insights) resource provider",
    "version": "2021-03-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/metadata": {
      "get": {
        "x-ms-examples": {
          "Get all metadata.": {
            "$ref": "./examples/metadata/GetAllMetadata.json"
          }
        },
        "tags": [
          "Metadata"
        ],
        "description": "List of all the metadata",
        "operationId": "ProductMetadata_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/1.0/types.json#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "../../../common/1.0/types.json#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SettingList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/1.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/metadata/{metadataName}": {
      "get": {
        "x-ms-examples": {
          "Get EyesOn metadata.": {
            "$ref": "./examples/metadata/GetEyesOnSetting.json"
          }
        },
        "tags": [
          "Metadata"
        ],
        "description": "Gets a setting.",
        "operationId": "ProductMetadata_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/1.0/types.json#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "../../../common/1.0/types.json#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/MetadataName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Metadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/1.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "x-ms-examples": {
          "Delete EyesOn metadata.": {
            "$ref": "./examples/metadata/DeleteEyesOnSetting.json"
          }
        },
        "tags": [
          "Metadata"
        ],
        "description": "Delete setting of the product.",
        "operationId": "ProductMetadata_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/1.0/types.json#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "../../../common/1.0/types.json#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/MetadataName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/1.0/types.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "x-ms-examples": {
          "Update EyesOn metadata.": {
            "$ref": "./examples/metadata/UpdateEyesOnSetting.json"
          }
        },
        "tags": [
          "Metadata"
        ],
        "description": "Updates setting.",
        "operationId": "ProductMetadata_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/1.0/types.json#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "../../../common/1.0/types.json#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/MetadataName"
          },
          {
            "$ref": "#/parameters/Metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Metadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/1.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/metadata/onboard": {
      "post": {
        "x-ms-examples": {
          "Onboard workspace": {
            "$ref": "./examples/metadata/Onboard.json"
          }
        },
        "tags": [
          "Metadata"
        ],
        "description": "Onboards workspace to sentinel.",
        "operationId": "ProductMetadata_OnboardWorkspace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/1.0/types.json#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "../../../common/1.0/types.json#/parameters/WorkspaceName"
          },
          {
            "$ref": "#/parameters/OnboardingRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OnboardingRequest"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/1.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/metadata/offboard": {
      "post": {
        "x-ms-examples": {
          "Onboard workspace": {
            "$ref": "./examples/metadata/Offboard.json"
          }
        },
        "tags": [
          "Metadata"
        ],
        "description": "Offboards workspace from sentinel.",
        "operationId": "ProductMetadata_OffboardWorkspace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/1.0/types.json#/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "../../../common/1.0/types.json#/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/1.0/types.json#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SettingList": {
      "description": "List of all the metadata.",
      "properties": {
        "value": {
          "description": "Array of metadata.",
          "items": {
            "$ref": "#/definitions/Metadata"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "Metadata": {
      "allOf": [
        {
          "$ref": "../../../common/1.0/types.json#/definitions/ResourceWithEtag"
        }
      ],
      "description": "The Setting.",
      "properties": {
        "kind": {
          "description": "The kind of the setting",
          "enum": [
            "EyesOn",
            "EntityAnalytics",
            "Ueba"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SettingKind"
          }
        }
      },
      "required": [
        "kind"
      ],
      "discriminator": "kind",
      "type": "object"
    },
    "EyesOn": {
      "allOf": [
        {
          "$ref": "#/definitions/Metadata"
        }
      ],
      "description": "Metadata with single toggle.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EyesOnMetadataProperties",
          "description": "EyesOn properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "EyesOn"
    },
    "EyesOnMetadataProperties": {
      "description": "EyesOn property bag.",
      "properties": {
        "isEnabled": {
          "description": "Determines whether the setting is enable or disabled.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "EntityAnalytics": {
      "allOf": [
        {
          "$ref": "#/definitions/Metadata"
        }
      ],
      "description": "Metadata with single toggle.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EntityAnalyticsProperties",
          "description": "EntityAnalytics properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "EntityAnalytics"
    },
    "EntityAnalyticsProperties": {
      "description": "EntityAnalytics property bag.",
      "properties": {
        "isEnabled": {
          "description": "Determines whether the setting is enable or disabled.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Ueba": {
      "allOf": [
        {
          "$ref": "#/definitions/Metadata"
        }
      ],
      "description": "Metadata with single toggle.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UebaProperties",
          "description": "Ueba properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Ueba"
    },
    "UebaProperties": {
      "description": "Ueba property bag.",
      "properties": {
        "dataSources": {
          "description": "The relevant data sources that enriched by ueba",
          "items": {
            "$ref": "#/definitions/UebaDataSources"
          },
          "type": "array"
        }
      }
    },
    "UebaDataSources": {
      "description": "The data source that enriched by ueba.",
      "enum": [
        "AuditLogs",
        "AzureActivity",
        "SecurityEvent",
        "SigninLogs"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "UebaDataSources"
      }
    },
    "OnboardingRequest": {
      "description": "Onboarding request properties",
      "properties": {
        "customerManagedKey": {
          "description": "Flag that indicates if the user wants CMK",
          "type": "boolean"
        },
        "eyesOn": {
          "description": "Flag that indicates if the user wants EyesOn",
          "type": "boolean"
        },
        "sku": {
          "description": "The pricing tier of the solution",
          "$ref": "#/definitions/Sku"
        },
        "entityAnalytics": {
          "description": "flag that indicates if the user wants EntityAnalytics",
          "$ref": "#/definitions/EntityAnalyticsOnboardingParameters",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "The pricing tier of the solution",
      "properties": {
        "name": {
          "description": "The kind of the tier",
          "enum": [
            "PerGB",
            "CapacityReservation"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SkuKind"
          }
        },
        "capacityReservationLevel": {
          "description": "The amount of reservation level",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EntityAnalyticsOnboardingParameters": {
      "description": "The onboarding request entity analytics parameters",
      "properties": {
        "enabled": {
          "description": "A flag indicates that the user wants entity analytics",
          "type": "boolean"
        },
        "uebaDataSources": {
          "description": "The data source be profiled by ueba engine",
          "$ref": "#/definitions/UebaProperties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "Metadata": {
      "description": "The setting",
      "in": "body",
      "name": "metadata",
      "required": true,
      "schema": {
        "$ref": "#/definitions/Metadata"
      },
      "x-ms-parameter-location": "method"
    },
    "MetadataName": {
      "description": "The setting name. Supports - EyesOn, EntityAnalytics, Ueba",
      "in": "path",
      "name": "metadataName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionId": {
      "description": "Azure subscription ID",
      "in": "path",
      "name": "subscriptionId",
      "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
      "required": true,
      "type": "string"
    },
    "ResourceGroupName": {
      "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
      "in": "path",
      "maxLength": 90,
      "minLength": 1,
      "name": "resourceGroupName",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "WorkspaceName": {
      "description": "The name of the workspace.",
      "in": "path",
      "name": "workspaceName",
      "maxLength": 90,
      "minLength": 1,
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OperationalInsightsResourceProvider": {
      "description": "The namespace of workspaces resource provider- Microsoft.OperationalInsights.",
      "in": "path",
      "name": "operationalInsightsResourceProvider",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "OnboardingRequest": {
      "description": "The onboarding request parameters",
      "in": "body",
      "name": "onboardingRequest",
      "required": true,
      "schema": {
        "$ref": "#/definitions/OnboardingRequest"
      },
      "x-ms-parameter-location": "method"
    }
  }
}
