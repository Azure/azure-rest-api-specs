{
  "swagger": "2.0",
  "info": {
    "version": "2023-05-01-preview",
    "title": "Common Entity types"
  },
  "paths": {},
  "definitions": {
    "AccountEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents an account entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccountEntityProperties",
          "description": "Account entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Account"
    },
    "AccountEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Account entity property bag.",
      "properties": {
        "aadTenantId": {
          "description": "The Azure Active Directory tenant id.",
          "readOnly": true,
          "type": "string"
        },
        "aadUserId": {
          "description": "The Azure Active Directory user id.",
          "readOnly": true,
          "type": "string"
        },
        "accountName": {
          "description": "The name of the account. This field should hold only the name without any domain added to it, i.e. administrator.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the account.",
          "readOnly": true,
          "type": "string"
        },
        "hostEntityId": {
          "description": "The Host entity id that contains the account in case it is a local account (not domain joined)",
          "readOnly": true,
          "type": "string"
        },
        "isDomainJoined": {
          "description": "Determines whether this is a domain account.",
          "readOnly": true,
          "type": "boolean"
        },
        "ntDomain": {
          "description": "The NetBIOS domain name as it appears in the alert format domain/username. Examples: NT AUTHORITY.",
          "readOnly": true,
          "type": "string"
        },
        "objectGuid": {
          "description": "The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active directory.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "puid": {
          "description": "The Azure Active Directory Passport User ID.",
          "readOnly": true,
          "type": "string"
        },
        "sid": {
          "description": "The account security identifier, e.g. S-1-5-18.",
          "readOnly": true,
          "type": "string"
        },
        "upnSuffix": {
          "description": "The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com.",
          "readOnly": true,
          "type": "string"
        },
        "dnsDomain": {
          "description": "The fully qualified domain DNS name.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureResourceEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents an azure resource entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureResourceEntityProperties",
          "description": "AzureResource entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AzureResource"
    },
    "AzureResourceEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "AzureResource entity property bag.",
      "properties": {
        "resourceId": {
          "description": "The azure resource id of the resource",
          "readOnly": true,
          "type": "string"
        },
        "subscriptionId": {
          "description": "The subscription id of the resource",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudApplicationEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a cloud application entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloudApplicationEntityProperties",
          "description": "CloudApplication entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "CloudApplication"
    },
    "CloudApplicationEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "CloudApplication entity property bag.",
      "properties": {
        "appId": {
          "description": "The technical identifier of the application.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "appName": {
          "description": "The name of the related cloud application.",
          "readOnly": true,
          "type": "string"
        },
        "instanceName": {
          "description": "The user defined instance name of the cloud application. It is often used to distinguish between several applications of the same type that a customer has.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "DnsEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a dns entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsEntityProperties",
          "description": "Dns entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "DnsResolution"
    },
    "DnsEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Dns entity property bag.",
      "properties": {
        "dnsServerIpEntityId": {
          "description": "An ip entity id for the dns server resolving the request",
          "readOnly": true,
          "type": "string"
        },
        "domainName": {
          "description": "The name of the dns record associated with the alert",
          "readOnly": true,
          "type": "string"
        },
        "hostIpAddressEntityId": {
          "description": "An ip entity id for the dns request client",
          "readOnly": true,
          "type": "string"
        },
        "ipAddressEntityIds": {
          "description": "Ip entity identifiers for the resolved ip address.",
          "items": {
            "description": "Ip entity id",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "Entity": {
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/EntityInnerKind",
          "description": "The kind of the entity."
        }
      },
      "description": "Specific entity.",
      "discriminator": "kind",
      "type": "object",
      "required": [
        "kind"
      ]
    },
    "EntityCommonProperties": {
      "description": "Entity common property bag.",
      "properties": {
        "additionalData": {
          "additionalProperties": true,
          "description": "A bag of custom fields that should be part of the entity and will be presented to the user.",
          "readOnly": true,
          "type": "object"
        },
        "friendlyName": {
          "description": "The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "EntityInnerKind": {
      "description": "The kind of the entity",
      "enum": [
        "Account",
        "Host",
        "File",
        "AzureResource",
        "CloudApplication",
        "DnsResolution",
        "FileHash",
        "Ip",
        "Malware",
        "Process",
        "RegistryKey",
        "RegistryValue",
        "SecurityGroup",
        "Url",
        "IoTDevice",
        "SecurityAlert",
        "Bookmark",
        "Mailbox",
        "MailCluster",
        "MailMessage",
        "SubmissionMail",
        "Nic"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "EntityKindEnum",
        "values": [
          {
            "description": "Entity represents account in the system.",
            "value": "Account"
          },
          {
            "description": "Entity represents host in the system.",
            "value": "Host"
          },
          {
            "description": "Entity represents file in the system.",
            "value": "File"
          },
          {
            "description": "Entity represents azure resource in the system.",
            "value": "AzureResource"
          },
          {
            "description": "Entity represents cloud application in the system.",
            "value": "CloudApplication"
          },
          {
            "description": "Entity represents dns resolution in the system.",
            "value": "DnsResolution"
          },
          {
            "description": "Entity represents file hash in the system.",
            "value": "FileHash"
          },
          {
            "description": "Entity represents ip in the system.",
            "value": "Ip"
          },
          {
            "description": "Entity represents malware in the system.",
            "value": "Malware"
          },
          {
            "description": "Entity represents process in the system.",
            "value": "Process"
          },
          {
            "description": "Entity represents registry key in the system.",
            "value": "RegistryKey"
          },
          {
            "description": "Entity represents registry value in the system.",
            "value": "RegistryValue"
          },
          {
            "description": "Entity represents security group in the system.",
            "value": "SecurityGroup"
          },
          {
            "description": "Entity represents url in the system.",
            "value": "Url"
          },
          {
            "description": "Entity represents IoT device in the system.",
            "value": "IoTDevice"
          },
          {
            "description": "Entity represents security alert in the system.",
            "value": "SecurityAlert"
          },
          {
            "description": "Entity represents bookmark in the system.",
            "value": "Bookmark"
          },
          {
            "description": "Entity represents mail cluster in the system.",
            "value": "MailCluster"
          },
          {
            "description": "Entity represents mail message in the system.",
            "value": "MailMessage"
          },
          {
            "description": "Entity represents mailbox in the system.",
            "value": "Mailbox"
          },
          {
            "description": "Entity represents submission mail in the system.",
            "value": "SubmissionMail"
          },
          {
            "description": "Entity represents network interface in the system.",
            "value": "Nic"
          }
        ]
      }
    },
    "EntityInnerType": {
      "description": "The type of the entity",
      "enum": [
        "Account",
        "Host",
        "File",
        "AzureResource",
        "CloudApplication",
        "DNS",
        "FileHash",
        "IP",
        "Malware",
        "Process",
        "RegistryKey",
        "RegistryValue",
        "SecurityGroup",
        "URL",
        "IoTDevice",
        "SecurityAlert",
        "HuntingBookmark",
        "MailCluster",
        "MailMessage",
        "Mailbox",
        "SubmissionMail",
        "Nic"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "EntityType",
        "values": [
          {
            "description": "Entity represents account in the system.",
            "value": "Account"
          },
          {
            "description": "Entity represents host in the system.",
            "value": "Host"
          },
          {
            "description": "Entity represents file in the system.",
            "value": "File"
          },
          {
            "description": "Entity represents azure resource in the system.",
            "value": "AzureResource"
          },
          {
            "description": "Entity represents cloud application in the system.",
            "value": "CloudApplication"
          },
          {
            "description": "Entity represents dns in the system.",
            "value": "DNS"
          },
          {
            "description": "Entity represents file hash in the system.",
            "value": "FileHash"
          },
          {
            "description": "Entity represents ip in the system.",
            "value": "IP"
          },
          {
            "description": "Entity represents malware in the system.",
            "value": "Malware"
          },
          {
            "description": "Entity represents process in the system.",
            "value": "Process"
          },
          {
            "description": "Entity represents registry key in the system.",
            "value": "RegistryKey"
          },
          {
            "description": "Entity represents registry value in the system.",
            "value": "RegistryValue"
          },
          {
            "description": "Entity represents security group in the system.",
            "value": "SecurityGroup"
          },
          {
            "description": "Entity represents url in the system.",
            "value": "URL"
          },
          {
            "description": "Entity represents IoT device in the system.",
            "value": "IoTDevice"
          },
          {
            "description": "Entity represents security alert in the system.",
            "value": "SecurityAlert"
          },
          {
            "description": "Entity represents HuntingBookmark in the system.",
            "value": "HuntingBookmark"
          },
          {
            "description": "Entity represents mail cluster in the system.",
            "value": "MailCluster"
          },
          {
            "description": "Entity represents mail message in the system.",
            "value": "MailMessage"
          },
          {
            "description": "Entity represents mailbox in the system.",
            "value": "Mailbox"
          },
          {
            "description": "Entity represents submission mail in the system.",
            "value": "SubmissionMail"
          },
          {
            "description": "Entity represents network interface in the system.",
            "value": "Nic"
          }
        ]
      }
    },
    "EntityQueryKind": {
      "description": "The kind of the entity query",
      "enum": [
        "Expansion",
        "Insight",
        "Activity"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "EntityQueryKind",
        "values": [
          {
            "value": "Expansion"
          },
          {
            "value": "Insight"
          },
          {
            "value": "Activity"
          }
        ]
      }
    },
    "ExpansionResultAggregation": {
      "description": "Information of a specific aggregation in the expansion result.",
      "properties": {
        "aggregationType": {
          "description": "The common type of the aggregation. (for e.g. entity field name)",
          "type": "string"
        },
        "count": {
          "description": "Total number of aggregations of the given kind (and aggregationType if given) in the expansion result.",
          "type": "integer",
          "format": "int32"
        },
        "displayName": {
          "description": "The display name of the aggregation by type.",
          "type": "string"
        },
        "entityKind": {
          "$ref": "#/definitions/EntityInnerKind",
          "description": "The kind of the aggregated entity."
        }
      },
      "required": [
        "entityKind",
        "count"
      ],
      "type": "object"
    },
    "ExpansionResultsMetadata": {
      "description": "Expansion result metadata.",
      "properties": {
        "aggregations": {
          "description": "Information of the aggregated nodes in the expansion result.",
          "items": {
            "$ref": "#/definitions/ExpansionResultAggregation"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "FileEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a file entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileEntityProperties",
          "description": "File entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "File"
    },
    "FileEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "File entity property bag.",
      "properties": {
        "directory": {
          "description": "The full path to the file.",
          "readOnly": true,
          "type": "string"
        },
        "fileHashEntityIds": {
          "description": "The file hash entity identifiers associated with this file",
          "items": {
            "description": "file hash id",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "fileName": {
          "description": "The file name without path (some alerts might not include path).",
          "readOnly": true,
          "type": "string"
        },
        "hostEntityId": {
          "description": "The Host entity id which the file belongs to",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "FileHashEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a file hash entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FileHashEntityProperties",
          "description": "FileHash entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "FileHash"
    },
    "FileHashEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "FileHash entity property bag.",
      "properties": {
        "algorithm": {
          "description": "The hash algorithm type.",
          "enum": [
            "Unknown",
            "MD5",
            "SHA1",
            "SHA256",
            "SHA256AC"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "FileHashAlgorithm",
            "values": [
              {
                "description": "Unknown hash algorithm",
                "value": "Unknown"
              },
              {
                "description": "MD5 hash type",
                "value": "MD5"
              },
              {
                "description": "SHA1 hash type",
                "value": "SHA1"
              },
              {
                "description": "SHA256 hash type",
                "value": "SHA256"
              },
              {
                "description": "SHA256 Authenticode hash type",
                "value": "SHA256AC"
              }
            ]
          }
        },
        "hashValue": {
          "description": "The file hash value.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "HostEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a host entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HostEntityProperties",
          "description": "Host entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Host"
    },
    "HostEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Host entity property bag.",
      "properties": {
        "azureID": {
          "description": "The azure resource id of the VM.",
          "readOnly": true,
          "type": "string"
        },
        "dnsDomain": {
          "description": "The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain",
          "readOnly": true,
          "type": "string"
        },
        "hostName": {
          "description": "The hostname without the domain suffix.",
          "readOnly": true,
          "type": "string"
        },
        "isDomainJoined": {
          "description": "Determines whether this host belongs to a domain.",
          "readOnly": true,
          "type": "boolean"
        },
        "netBiosName": {
          "description": "The host name (pre-windows2000).",
          "readOnly": true,
          "type": "string"
        },
        "ntDomain": {
          "description": "The NT domain that this host belongs to.",
          "readOnly": true,
          "type": "string"
        },
        "omsAgentID": {
          "description": "The OMS agent id, if the host has OMS agent installed.",
          "readOnly": true,
          "type": "string"
        },
        "osFamily": {
          "description": "The operating system type.",
          "enum": [
            "Linux",
            "Windows",
            "Android",
            "IOS",
            "Unknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "OSFamily",
            "values": [
              {
                "description": "Host with Linux operating system.",
                "value": "Linux"
              },
              {
                "description": "Host with Windows operating system.",
                "value": "Windows"
              },
              {
                "description": "Host with Android operating system.",
                "value": "Android"
              },
              {
                "description": "Host with IOS operating system.",
                "value": "IOS"
              },
              {
                "description": "Host with Unknown operating system.",
                "value": "Unknown"
              }
            ]
          }
        },
        "osVersion": {
          "description": "A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained than OSFamily or future values not supported by OSFamily enumeration",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "HuntingBookmark": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a Hunting bookmark entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HuntingBookmarkProperties",
          "description": "HuntingBookmark entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Bookmark"
    },
    "HuntingBookmarkProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Describes bookmark properties",
      "properties": {
        "created": {
          "description": "The time the bookmark was created",
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "$ref": "../../../../common/2.0/types.json#/definitions/UserInfo",
          "description": "Describes a user that created the bookmark",
          "type": "object"
        },
        "displayName": {
          "description": "The display name of the bookmark",
          "type": "string"
        },
        "eventTime": {
          "description": "The time of the event",
          "format": "date-time",
          "type": "string"
        },
        "labels": {
          "description": "List of labels relevant to this bookmark",
          "items": {
            "$ref": "../../../../common/2.0/types.json#/definitions/Label"
          },
          "type": "array",
          "x-ms-identifiers": []
        },
        "notes": {
          "description": "The notes of the bookmark",
          "type": "string"
        },
        "query": {
          "description": "The query of the bookmark.",
          "type": "string"
        },
        "queryResult": {
          "description": "The query result of the bookmark.",
          "type": "string"
        },
        "updated": {
          "description": "The last time the bookmark was updated",
          "format": "date-time",
          "type": "string"
        },
        "updatedBy": {
          "$ref": "../../../../common/2.0/types.json#/definitions/UserInfo",
          "description": "Describes a user that updated the bookmark",
          "type": "object"
        },
        "incidentInfo": {
          "$ref": "IncidentTypes.json#/definitions/IncidentInfo",
          "description": "Describes an incident that relates to bookmark",
          "type": "object"
        }
      },
      "required": [
        "displayName",
        "query"
      ],
      "type": "object"
    },
    "IoTDeviceEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents an IoT device entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IoTDeviceEntityProperties",
          "description": "IoTDevice entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "IoTDevice"
    },
    "IoTDeviceEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "IoTDevice entity property bag.",
      "properties": {
        "deviceId": {
          "description": "The ID of the IoT Device in the IoT Hub",
          "readOnly": true,
          "type": "string"
        },
        "deviceName": {
          "description": "The friendly name of the device",
          "readOnly": true,
          "type": "string"
        },
        "source": {
          "description": "The source of the device",
          "readOnly": true,
          "type": "string"
        },
        "iotSecurityAgentId": {
          "description": "The ID of the security agent running on the device",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "deviceType": {
          "description": "The type of the device",
          "readOnly": true,
          "type": "string"
        },
        "vendor": {
          "description": "The vendor of the device",
          "readOnly": true,
          "type": "string"
        },
        "edgeId": {
          "description": "The ID of the edge device",
          "readOnly": true,
          "type": "string"
        },
        "macAddress": {
          "description": "The MAC address of the device",
          "readOnly": true,
          "type": "string"
        },
        "model": {
          "description": "The model of the device",
          "readOnly": true,
          "type": "string"
        },
        "serialNumber": {
          "description": "The serial number of the device",
          "readOnly": true,
          "type": "string"
        },
        "firmwareVersion": {
          "description": "The firmware version of the device",
          "readOnly": true,
          "type": "string"
        },
        "operatingSystem": {
          "description": "The operating system of the device",
          "readOnly": true,
          "type": "string"
        },
        "iotHubEntityId": {
          "description": "The AzureResource entity id of the IoT Hub",
          "readOnly": true,
          "type": "string"
        },
        "hostEntityId": {
          "description": "The Host entity id of this device",
          "readOnly": true,
          "type": "string"
        },
        "ipAddressEntityId": {
          "description": "The IP entity if of this device",
          "readOnly": true,
          "type": "string"
        },
        "threatIntelligence": {
          "description": "A list of TI contexts attached to the IoTDevice entity.",
          "items": {
            "$ref": "ThreatIntelligenceTypes.json#/definitions/ThreatIntelligence"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "protocols": {
          "description": "A list of protocols of the IoTDevice entity.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "owners": {
          "description": "A list of owners of the IoTDevice entity.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "nicEntityIds": {
          "description": "A list of Nic entity ids of the IoTDevice entity.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "site": {
          "description": "The site of the device",
          "readOnly": true,
          "type": "string"
        },
        "zone": {
          "description": "The zone location of the device within a site",
          "readOnly": true,
          "type": "string"
        },
        "sensor": {
          "description": "The sensor the device is monitored by",
          "readOnly": true,
          "type": "string"
        },
        "deviceSubType": {
          "description": "The subType of the device ('PLC', 'HMI', 'EWS', etc.)",
          "readOnly": true,
          "type": "string"
        },
        "importance": {
          "description": "Device importance, determines if the device classified as 'crown jewel'",
          "enum": [
            "Unknown",
            "Low",
            "Normal",
            "High"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DeviceImportance",
            "values": [
              {
                "description": "Unknown - Default value",
                "value": "Unknown"
              },
              {
                "description": "Low",
                "value": "Low"
              },
              {
                "description": "Normal",
                "value": "Normal"
              },
              {
                "description": "High",
                "value": "High"
              }
            ]
          }
        },
        "purdueLayer": {
          "description": "The Purdue Layer of the device",
          "readOnly": true,
          "type": "string"
        },
        "isAuthorized": {
          "description": "Determines whether the device classified as authorized device",
          "readOnly": true,
          "type": "boolean"
        },
        "isProgramming": {
          "description": "Determines whether the device classified as programming device",
          "readOnly": true,
          "type": "boolean"
        },
        "isScanner": {
          "description": "Is the device classified as a scanner device",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "IpEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents an ip entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IpEntityProperties",
          "description": "Ip entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Ip"
    },
    "IpEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Ip entity property bag.",
      "properties": {
        "address": {
          "description": "The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6)",
          "readOnly": true,
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/GeoLocation",
          "description": "The geo-location context attached to the ip entity"
        },
        "threatIntelligence": {
          "description": "A list of TI contexts attached to the ip entity.",
          "items": {
            "$ref": "ThreatIntelligenceTypes.json#/definitions/ThreatIntelligence"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "GeoLocation": {
      "description": "The geo-location context attached to the ip entity",
      "properties": {
        "asn": {
          "description": "Autonomous System Number",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "city": {
          "description": "City name",
          "readOnly": true,
          "type": "string"
        },
        "countryCode": {
          "description": "The country code according to ISO 3166 format",
          "readOnly": true,
          "type": "string"
        },
        "countryName": {
          "description": "Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name",
          "readOnly": true,
          "type": "string"
        },
        "latitude": {
          "description": "The latitude of the identified location, expressed as a floating point number with range of - 90 to 90. Latitude and longitude are derived from the city or postal code.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "longitude": {
          "description": "The longitude of the identified location, expressed as a floating point number with range of -180 to 180. Latitude and longitude are derived from the city or postal code.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "state": {
          "description": "State name",
          "readOnly": true,
          "type": "string"
        }
      },
      "readOnly": true,
      "type": "object"
    },
    "MailboxEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a mailbox entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MailboxEntityProperties",
          "description": "Mailbox entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Mailbox"
    },
    "MailboxEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Mailbox entity property bag.",
      "properties": {
        "mailboxPrimaryAddress": {
          "description": "The mailbox's primary address",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "The mailbox's display name",
          "readOnly": true,
          "type": "string"
        },
        "upn": {
          "description": "The mailbox's UPN",
          "readOnly": true,
          "type": "string"
        },
        "externalDirectoryObjectId": {
          "description": "The AzureAD identifier of mailbox. Similar to AadUserId in account entity but this property is specific to mailbox object on office side",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MailClusterEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a mail cluster entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MailClusterEntityProperties",
          "description": "Mail cluster entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "MailCluster"
    },
    "MailClusterEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Mail cluster entity property bag.",
      "properties": {
        "networkMessageIds": {
          "description": "The mail message IDs that are part of the mail cluster",
          "items": {
            "description": "A mail message ID",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "countByDeliveryStatus": {
          "description": "Count of mail messages by DeliveryStatus string representation",
          "readOnly": true,
          "type": "object"
        },
        "countByThreatType": {
          "description": "Count of mail messages by ThreatType string representation",
          "readOnly": true,
          "type": "object"
        },
        "countByProtectionStatus": {
          "description": "Count of mail messages by ProtectionStatus string representation",
          "readOnly": true,
          "type": "object"
        },
        "threats": {
          "description": "The threats of mail messages that are part of the mail cluster",
          "items": {
            "description": "A threat",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "query": {
          "description": "The query that was used to identify the messages of the mail cluster",
          "readOnly": true,
          "type": "string"
        },
        "queryTime": {
          "description": "The query time",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "mailCount": {
          "description": "The number of mail messages that are part of the mail cluster",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "isVolumeAnomaly": {
          "description": "Is this a volume anomaly mail cluster",
          "readOnly": true,
          "type": "boolean"
        },
        "source": {
          "description": "The source of the mail cluster (default is 'O365 ATP')",
          "readOnly": true,
          "type": "string"
        },
        "clusterSourceIdentifier": {
          "description": "The id of the cluster source",
          "readOnly": true,
          "type": "string"
        },
        "clusterSourceType": {
          "description": "The type of the cluster source",
          "readOnly": true,
          "type": "string"
        },
        "clusterQueryStartTime": {
          "description": "The cluster query start time",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "clusterQueryEndTime": {
          "description": "The cluster query end time",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "clusterGroup": {
          "description": "The cluster group",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "MailMessageEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a mail message entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MailMessageEntityProperties",
          "description": "Mail message entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "MailMessage"
    },
    "MailMessageEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Mail message entity property bag.",
      "properties": {
        "fileEntityIds": {
          "description": "The File entity ids of this mail message's attachments",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "recipient": {
          "description": "The recipient of this mail message. Note that in case of multiple recipients the mail message is forked and each copy has one recipient",
          "readOnly": true,
          "type": "string"
        },
        "urls": {
          "description": "The Urls contained in this mail message",
          "items": {
            "description": "A Url contained in this mail message",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "threats": {
          "description": "The threats of this mail message",
          "items": {
            "description": "A threat of the mail message",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "p1Sender": {
          "description": "The p1 sender's email address",
          "readOnly": true,
          "type": "string"
        },
        "p1SenderDisplayName": {
          "description": "The p1 sender's display name",
          "readOnly": true,
          "type": "string"
        },
        "p1SenderDomain": {
          "description": "The p1 sender's domain",
          "readOnly": true,
          "type": "string"
        },
        "senderIP": {
          "description": "The sender's IP address",
          "readOnly": true,
          "type": "string"
        },
        "p2Sender": {
          "description": "The p2 sender's email address",
          "readOnly": true,
          "type": "string"
        },
        "p2SenderDisplayName": {
          "description": "The p2 sender's display name",
          "readOnly": true,
          "type": "string"
        },
        "p2SenderDomain": {
          "description": "The p2 sender's domain",
          "readOnly": true,
          "type": "string"
        },
        "receiveDate": {
          "description": "The receive date of this message",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "networkMessageId": {
          "description": "The network message id of this mail message",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "internetMessageId": {
          "description": "The internet message id of this mail message",
          "readOnly": true,
          "type": "string"
        },
        "subject": {
          "description": "The subject of this mail message",
          "readOnly": true,
          "type": "string"
        },
        "language": {
          "description": "The language of this mail message",
          "readOnly": true,
          "type": "string"
        },
        "threatDetectionMethods": {
          "description": "The threat detection methods",
          "items": {
            "description": "A threat detection method",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "bodyFingerprintBin1": {
          "description": "The bodyFingerprintBin1",
          "type": "integer",
          "format": "int32"
        },
        "bodyFingerprintBin2": {
          "description": "The bodyFingerprintBin2",
          "type": "integer",
          "format": "int32"
        },
        "bodyFingerprintBin3": {
          "description": "The bodyFingerprintBin3",
          "type": "integer",
          "format": "int32"
        },
        "bodyFingerprintBin4": {
          "description": "The bodyFingerprintBin4",
          "type": "integer",
          "format": "int32"
        },
        "bodyFingerprintBin5": {
          "description": "The bodyFingerprintBin5",
          "type": "integer",
          "format": "int32"
        },
        "antispamDirection": {
          "description": "The directionality of this mail message",
          "enum": [
            "Unknown",
            "Inbound",
            "Outbound",
            "Intraorg"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "AntispamMailDirection",
            "values": [
              {
                "description": "Unknown",
                "value": "Unknown"
              },
              {
                "description": "Inbound",
                "value": "Inbound"
              },
              {
                "description": "Outbound",
                "value": "Outbound"
              },
              {
                "description": "Intraorg",
                "value": "Intraorg"
              }
            ]
          }
        },
        "deliveryAction": {
          "description": "The delivery action of this mail message like Delivered, Blocked, Replaced etc",
          "enum": [
            "Unknown",
            "DeliveredAsSpam",
            "Delivered",
            "Blocked",
            "Replaced"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "DeliveryAction",
            "values": [
              {
                "description": "Unknown",
                "value": "Unknown"
              },
              {
                "description": "DeliveredAsSpam",
                "value": "DeliveredAsSpam"
              },
              {
                "description": "Delivered",
                "value": "Delivered"
              },
              {
                "description": "Blocked",
                "value": "Blocked"
              },
              {
                "description": "Replaced",
                "value": "Replaced"
              }
            ]
          }
        },
        "deliveryLocation": {
          "description": "The delivery location of this mail message like Inbox, JunkFolder etc",
          "enum": [
            "Unknown",
            "Inbox",
            "JunkFolder",
            "DeletedFolder",
            "Quarantine",
            "External",
            "Failed",
            "Dropped",
            "Forwarded"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "DeliveryLocation",
            "values": [
              {
                "description": "Unknown",
                "value": "Unknown"
              },
              {
                "description": "Inbox",
                "value": "Inbox"
              },
              {
                "description": "JunkFolder",
                "value": "JunkFolder"
              },
              {
                "description": "DeletedFolder",
                "value": "DeletedFolder"
              },
              {
                "description": "Quarantine",
                "value": "Quarantine"
              },
              {
                "description": "External",
                "value": "External"
              },
              {
                "description": "Failed",
                "value": "Failed"
              },
              {
                "description": "Dropped",
                "value": "Dropped"
              },
              {
                "description": "Forwarded",
                "value": "Forwarded"
              }
            ]
          }
        }
      },
      "type": "object"
    },
    "MalwareEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a malware entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MalwareEntityProperties",
          "description": "File entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Malware"
    },
    "MalwareEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Malware entity property bag.",
      "properties": {
        "category": {
          "description": "The malware category by the vendor, e.g. Trojan",
          "readOnly": true,
          "type": "string"
        },
        "fileEntityIds": {
          "description": "List of linked file entity identifiers on which the malware was found",
          "items": {
            "description": "file entity id",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "malwareName": {
          "description": "The malware name by the vendor, e.g. Win32/Toga!rfn",
          "readOnly": true,
          "type": "string"
        },
        "processEntityIds": {
          "description": "List of linked process entity identifiers on which the malware was found.",
          "items": {
            "description": "process entity id",
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "ProcessEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a process entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProcessEntityProperties",
          "description": "Process entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Process"
    },
    "ProcessEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Process entity property bag.",
      "properties": {
        "accountEntityId": {
          "description": "The account entity id running the processes.",
          "readOnly": true,
          "type": "string"
        },
        "commandLine": {
          "description": "The command line used to create the process",
          "readOnly": true,
          "type": "string"
        },
        "creationTimeUtc": {
          "description": "The time when the process started to run",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "elevationToken": {
          "description": "The elevation token associated with the process.",
          "enum": [
            "Default",
            "Full",
            "Limited"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "ElevationToken",
            "values": [
              {
                "description": "Default elevation token",
                "value": "Default"
              },
              {
                "description": "Full elevation token",
                "value": "Full"
              },
              {
                "description": "Limited elevation token",
                "value": "Limited"
              }
            ]
          }
        },
        "hostEntityId": {
          "description": "The host entity id on which the process was running",
          "readOnly": true,
          "type": "string"
        },
        "hostLogonSessionEntityId": {
          "description": "The session entity id in which the process was running",
          "readOnly": true,
          "type": "string"
        },
        "imageFileEntityId": {
          "description": "Image file entity id",
          "readOnly": true,
          "type": "string"
        },
        "parentProcessEntityId": {
          "description": "The parent process entity id.",
          "readOnly": true,
          "type": "string"
        },
        "processId": {
          "description": "The process ID",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistryKeyEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a registry key entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RegistryKeyEntityProperties",
          "description": "RegistryKey entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "RegistryKey"
    },
    "RegistryKeyEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "RegistryKey entity property bag.",
      "properties": {
        "hive": {
          "description": "the hive that holds the registry key.",
          "enum": [
            "HKEY_LOCAL_MACHINE",
            "HKEY_CLASSES_ROOT",
            "HKEY_CURRENT_CONFIG",
            "HKEY_USERS",
            "HKEY_CURRENT_USER_LOCAL_SETTINGS",
            "HKEY_PERFORMANCE_DATA",
            "HKEY_PERFORMANCE_NLSTEXT",
            "HKEY_PERFORMANCE_TEXT",
            "HKEY_A",
            "HKEY_CURRENT_USER"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RegistryHive",
            "values": [
              {
                "description": "HKEY_LOCAL_MACHINE",
                "value": "HKEY_LOCAL_MACHINE"
              },
              {
                "description": "HKEY_CLASSES_ROOT",
                "value": "HKEY_CLASSES_ROOT"
              },
              {
                "description": "HKEY_CURRENT_CONFIG",
                "value": "HKEY_CURRENT_CONFIG"
              },
              {
                "description": "HKEY_USERS",
                "value": "HKEY_USERS"
              },
              {
                "description": "HKEY_CURRENT_USER_LOCAL_SETTINGS",
                "value": "HKEY_CURRENT_USER_LOCAL_SETTINGS"
              },
              {
                "description": "HKEY_PERFORMANCE_DATA",
                "value": "HKEY_PERFORMANCE_DATA"
              },
              {
                "description": "HKEY_PERFORMANCE_NLSTEXT",
                "value": "HKEY_PERFORMANCE_NLSTEXT"
              },
              {
                "description": "HKEY_PERFORMANCE_TEXT",
                "value": "HKEY_PERFORMANCE_TEXT"
              },
              {
                "description": "HKEY_A",
                "value": "HKEY_A"
              },
              {
                "description": "HKEY_CURRENT_USER",
                "value": "HKEY_CURRENT_USER"
              }
            ]
          }
        },
        "key": {
          "description": "The registry key path.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistryValueEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a registry value entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RegistryValueEntityProperties",
          "description": "RegistryKey entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "RegistryValue"
    },
    "RegistryValueEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "RegistryValue entity property bag.",
      "properties": {
        "keyEntityId": {
          "description": "The registry key entity id.",
          "readOnly": true,
          "type": "string"
        },
        "valueData": {
          "description": "String formatted representation of the value data.",
          "readOnly": true,
          "type": "string"
        },
        "valueName": {
          "description": "The registry value name.",
          "readOnly": true,
          "type": "string"
        },
        "valueType": {
          "description": "Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry.",
          "enum": [
            "None",
            "Unknown",
            "String",
            "ExpandString",
            "Binary",
            "DWord",
            "MultiString",
            "QWord"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RegistryValueKind",
            "values": [
              {
                "description": "None",
                "value": "None"
              },
              {
                "description": "Unknown value type",
                "value": "Unknown"
              },
              {
                "description": "String value type",
                "value": "String"
              },
              {
                "description": "ExpandString value type",
                "value": "ExpandString"
              },
              {
                "description": "Binary value type",
                "value": "Binary"
              },
              {
                "description": "DWord value type",
                "value": "DWord"
              },
              {
                "description": "MultiString value type",
                "value": "MultiString"
              },
              {
                "description": "QWord value type",
                "value": "QWord"
              }
            ]
          }
        }
      },
      "type": "object"
    },
    "SecurityAlert": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a security alert entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecurityAlertProperties",
          "description": "SecurityAlert entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "SecurityAlert"
    },
    "SecurityAlertProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "SecurityAlert entity property bag.",
      "properties": {
        "alertDisplayName": {
          "description": "The display name of the alert.",
          "readOnly": true,
          "type": "string"
        },
        "alertType": {
          "description": "The type name of the alert.",
          "readOnly": true,
          "type": "string"
        },
        "compromisedEntity": {
          "description": "Display name of the main entity being reported on.",
          "readOnly": true,
          "type": "string"
        },
        "confidenceLevel": {
          "description": "The confidence level of this alert.",
          "enum": [
            "Unknown",
            "Low",
            "High"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ConfidenceLevel",
            "values": [
              {
                "description": "Unknown confidence, the is the default value",
                "value": "Unknown"
              },
              {
                "description": "Low confidence, meaning we have some doubts this is indeed malicious or part of an attack",
                "value": "Low"
              },
              {
                "description": "High confidence that the alert is true positive malicious",
                "value": "High"
              }
            ]
          }
        },
        "confidenceReasons": {
          "description": "The confidence reasons",
          "items": {
            "description": "confidence reason item",
            "properties": {
              "reason": {
                "description": "The reason's description",
                "readOnly": true,
                "type": "string"
              },
              "reasonType": {
                "description": "The type (category) of the reason",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "confidenceScore": {
          "description": "The confidence score of the alert.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "confidenceScoreStatus": {
          "description": "The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final.",
          "enum": [
            "NotApplicable",
            "InProcess",
            "NotFinal",
            "Final"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ConfidenceScoreStatus",
            "values": [
              {
                "description": "Score will not be calculated for this alert as it is not supported by virtual analyst",
                "value": "NotApplicable"
              },
              {
                "description": "No score was set yet and calculation is in progress",
                "value": "InProcess"
              },
              {
                "description": "Score is calculated and shown as part of the alert, but may be updated again at a later time following the processing of additional data",
                "value": "NotFinal"
              },
              {
                "description": "Final score was calculated and available",
                "value": "Final"
              }
            ]
          }
        },
        "description": {
          "description": "Alert description.",
          "readOnly": true,
          "type": "string"
        },
        "endTimeUtc": {
          "description": "The impact end time of the alert (the time of the last event contributing to the alert).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "intent": {
          "description": "Holds the alert intent stage(s) mapping for this alert.",
          "enum": [
            "Unknown",
            "Probing",
            "Exploitation",
            "Persistence",
            "PrivilegeEscalation",
            "DefenseEvasion",
            "CredentialAccess",
            "Discovery",
            "LateralMovement",
            "Execution",
            "Collection",
            "Exfiltration",
            "CommandAndControl",
            "Impact"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "KillChainIntent",
            "values": [
              {
                "description": "The default value.",
                "value": "Unknown"
              },
              {
                "description": "Probing could be an attempt to access a certain resource regardless of a malicious intent or a failed attempt to gain access to a target system to gather information prior to exploitation. This step is usually detected as an attempt originating from outside the network in attempt to scan the target system and find a way in.",
                "value": "Probing"
              },
              {
                "description": "Exploitation is the stage where an attacker manage to get foothold on the attacked resource. This stage is applicable not only for compute hosts, but also for resources such as user accounts, certificates etc. Adversaries will often be able to control the resource after this stage.",
                "value": "Exploitation"
              },
              {
                "description": "Persistence is any access, action, or configuration change to a system that gives an adversary a persistent presence on that system. Adversaries will often need to maintain access to systems through interruptions such as system restarts, loss of credentials, or other failures that would require a remote access tool to restart or alternate backdoor for them to regain access.",
                "value": "Persistence"
              },
              {
                "description": "Privilege escalation is the result of actions that allow an adversary to obtain a higher level of permissions on a system or network. Certain tools or actions require a higher level of privilege to work and are likely necessary at many points throughout an operation. User accounts with permissions to access specific systems or perform specific functions necessary for adversaries to achieve their objective may also be considered an escalation of privilege.",
                "value": "PrivilegeEscalation"
              },
              {
                "description": "Defense evasion consists of techniques an adversary may use to evade detection or avoid other defenses. Sometimes these actions are the same as or variations of techniques in other categories that have the added benefit of subverting a particular defense or mitigation. ",
                "value": "DefenseEvasion"
              },
              {
                "description": "Credential access represents techniques resulting in access to or control over system, domain, or service credentials that are used within an enterprise environment. Adversaries will likely attempt to obtain legitimate credentials from users or administrator accounts (local system administrator or domain users with administrator access) to use within the network. With sufficient access within a network, an adversary can create accounts for later use within the environment.",
                "value": "CredentialAccess"
              },
              {
                "description": "Discovery consists of techniques that allow the adversary to gain knowledge about the system and internal network. When adversaries gain access to a new system, they must navigate themselves to what they now have control of and what benefits operating from that system give to their current objective or overall goals during the intrusion. The operating system provides many native tools that aid in this post-compromise information-gathering phase.",
                "value": "Discovery"
              },
              {
                "description": "Lateral movement consists of techniques that enable an adversary to access and control remote systems on a network and could, but does not necessarily, include execution of tools on remote systems. The lateral movement techniques could allow an adversary to gather information from a system without needing additional tools, such as a remote access tool. An adversary can use lateral movement for many purposes, including remote Execution of tools, pivoting to additional systems, access to specific information or files, access to additional credentials, or to cause an effect.",
                "value": "LateralMovement"
              },
              {
                "description": "The execution tactic represents techniques that result in execution of adversary-controlled code on a local or remote system. This tactic is often used in conjunction with lateral movement to expand access to remote systems on a network.",
                "value": "Execution"
              },
              {
                "description": "Collection consists of techniques used to identify and gather information, such as sensitive files, from a target network prior to exfiltration. This category also covers locations on a system or network where the adversary may look for information to exfiltrate.",
                "value": "Collection"
              },
              {
                "description": "Exfiltration refers to techniques and attributes that result or aid in the adversary removing files and information from a target network. This category also covers locations on a system or network where the adversary may look for information to exfiltrate.",
                "value": "Exfiltration"
              },
              {
                "description": "The command and control tactic represents how adversaries communicate with systems under their control within a target network.",
                "value": "CommandAndControl"
              },
              {
                "description": "The impact intent primary objective is to directly reduce the availability or integrity of a system, service, or network; including manipulation of data to impact a business or operational process. This would often refer to techniques such as ransom-ware, defacement, data manipulation and others.",
                "value": "Impact"
              }
            ]
          }
        },
        "providerAlertId": {
          "description": "The identifier of the alert inside the product which generated the alert.",
          "readOnly": true,
          "type": "string"
        },
        "processingEndTime": {
          "description": "The time the alert was made available for consumption.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "productComponentName": {
          "description": "The name of a component inside the product which generated the alert.",
          "readOnly": true,
          "type": "string"
        },
        "productName": {
          "description": "The name of the product which published this alert.",
          "readOnly": true,
          "type": "string"
        },
        "productVersion": {
          "description": "The version of the product generating the alert.",
          "readOnly": true,
          "type": "string"
        },
        "remediationSteps": {
          "description": "Manual action items to take to remediate the alert.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "severity": {
          "$ref": "AlertTypes.json#/definitions/AlertSeverityEnum",
          "description": "The severity of the alert",
          "type": "string"
        },
        "startTimeUtc": {
          "description": "The impact start time of the alert (the time of the first event contributing to the alert).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The lifecycle status of the alert.",
          "enum": [
            "Unknown",
            "New",
            "Resolved",
            "Dismissed",
            "InProgress"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "AlertStatus",
            "values": [
              {
                "description": "Unknown value",
                "value": "Unknown"
              },
              {
                "description": "New alert",
                "value": "New"
              },
              {
                "description": "Alert closed after handling",
                "value": "Resolved"
              },
              {
                "description": "Alert dismissed as false positive",
                "value": "Dismissed"
              },
              {
                "description": "Alert is being handled",
                "value": "InProgress"
              }
            ]
          }
        },
        "systemAlertId": {
          "description": "Holds the product identifier of the alert for the product.",
          "readOnly": true,
          "type": "string"
        },
        "tactics": {
          "description": "The tactics of the alert",
          "items": {
            "$ref": "AlertTypes.json#/definitions/AttackTactic"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        },
        "timeGenerated": {
          "description": "The time the alert was generated.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "vendorName": {
          "description": "The name of the vendor that raise the alert.",
          "readOnly": true,
          "type": "string"
        },
        "alertLink": {
          "description": "The uri link of the alert.",
          "readOnly": true,
          "type": "string"
        },
        "resourceIdentifiers": {
          "description": "The list of resource identifiers of the alert.",
          "items": {
            "type": "object"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    },
    "SecurityGroupEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a security group entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecurityGroupEntityProperties",
          "description": "SecurityGroup entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "SecurityGroup"
    },
    "SecurityGroupEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "SecurityGroup entity property bag.",
      "properties": {
        "distinguishedName": {
          "description": "The group distinguished name",
          "readOnly": true,
          "type": "string"
        },
        "objectGuid": {
          "description": "A single-value attribute that is the unique identifier for the object, assigned by active directory.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "sid": {
          "description": "The SID attribute is a single-value attribute that specifies the security identifier (SID) of the group",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubmissionMailEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a submission mail entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SubmissionMailEntityProperties",
          "description": "Submission mail entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "SubmissionMail"
    },
    "SubmissionMailEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Submission mail entity property bag.",
      "properties": {
        "networkMessageId": {
          "description": "The network message id of email to which submission belongs",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "submissionId": {
          "description": "The submission id",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "submitter": {
          "description": "The submitter",
          "readOnly": true,
          "type": "string"
        },
        "submissionDate": {
          "description": "The submission date",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "timestamp": {
          "description": "The Time stamp when the message is received (Mail)",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "recipient": {
          "description": "The recipient of the mail",
          "readOnly": true,
          "type": "string"
        },
        "sender": {
          "description": "The sender of the mail",
          "readOnly": true,
          "type": "string"
        },
        "senderIp": {
          "description": "The sender's IP",
          "readOnly": true,
          "type": "string"
        },
        "subject": {
          "description": "The subject of submission mail",
          "readOnly": true,
          "type": "string"
        },
        "reportType": {
          "description": "The submission type for the given instance. This maps to Junk, Phish, Malware or NotJunk.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "UrlEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents a url entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UrlEntityProperties",
          "description": "Url entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Url"
    },
    "UrlEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Url entity property bag.",
      "properties": {
        "url": {
          "description": "A full URL the entity points to",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NicEntity": {
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        }
      ],
      "description": "Represents an network interface entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NicEntityProperties",
          "description": "Network interface entity properties",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Nic"
    },
    "NicEntityProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/EntityCommonProperties"
        }
      ],
      "description": "Nic entity property bag.",
      "properties": {
        "macAddress": {
          "description": "The MAC address of this network interface",
          "readOnly": true,
          "type": "string"
        },
        "ipAddressEntityId": {
          "description": "The IP entity id of this network interface",
          "readOnly": true,
          "type": "string"
        },
        "vlans": {
          "description": "A list of VLANs of the network interface entity.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object"
    }
  },
  "parameters": {}
}
