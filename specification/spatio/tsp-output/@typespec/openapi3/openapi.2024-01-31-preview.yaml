openapi: 3.0.0
info:
  title: MPCPro Ingestion and Management API
  version: 2024-01-31-preview
tags:
  - name: Ingestion Management
  - name: SpatioTemporal Asset Catalog (STAC) API
  - name: Ingestion Sources
  - name: STAC Collection Configuration
  - name: GeoCatalog Instance Configuration
  - name: Tiles for STAC Items
  - name: Tiles for STAC Collections Mosaics
  - name: Map Legends
  - name: Image Exports for STAC Collections
  - name: Tile Matrix Sets
paths:
  /api/:
    get:
      operationId: LandingPages_get
      summary: Landing Page
      description: Endpoint.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandingPage'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
  /api/collections:
    get:
      operationId: CollectionOperations_getAll
      summary: Get Collections
      description: Endpoint.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: sign
          in: query
          required: false
          description: 'TODO: add description for "sign"?'
          schema:
            type: boolean
          explode: false
        - name: duration
          in: query
          required: false
          description: 'TODO: add description for "duration"?'
          schema:
            type: integer
            format: int32
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collections'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
    post:
      operationId: CollectionOperations_create
      summary: Create Collection
      description: |-
        Add a new collection to the GeoCatalog instance

        Args:
        collection: the collection to create.

        Returns:
        The collection that was created.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCatalogCollection'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoCatalogCollection'
  /api/collections/{collectionId}:
    get:
      operationId: CollectionOperations_get
      summary: Get Collection
      description: Endpoint.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: Collection ID
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: sign
          in: query
          required: false
          description: 'TODO: add description for "sign"?'
          schema:
            type: boolean
          explode: false
        - name: duration
          in: query
          required: false
          description: 'TODO: add description for "duration"?'
          schema:
            type: integer
            format: int32
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
    put:
      operationId: CollectionOperations_createOrReplace
      summary: Update Collection
      description: |-
        Update a collection in the GeoCatalog instance

        Args:
        collection: the collection to update.

        Returns:
        The collection that was updated.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCatalogCollection'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoCatalogCollection'
        description: 'TODO: add description for "body"'
    delete:
      operationId: CollectionOperations_delete
      summary: Delete Collection
      description: |-
        Delete a collection from the GeoCatalog instance

        Args:
        collection_id: the collection id to delete.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
  /api/collections/{collectionId}/assets:
    post:
      operationId: CollectionAssets_create
      summary: Create Collection Asset
      description: |-
        Create a new asset in the Collection metadata and write the associated
        file to managed storage.

        Args:
        request: The incoming request.
        asset: The Asset object to write, without a valid href to the asset.
        file: The file to write.
        collection_id: The ID of the collection to write the asset to.
        content_type: The content type of the request.

        Returns:
        A Response object containing the newly created asset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection ID
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCatalogCollection'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                data:
                  type: string
                  description: 'TODO: add description for data'
              required:
                - file
                - data
  /api/collections/{collectionId}/assets/{assetId}:
    put:
      operationId: CollectionAssets_createOrReplace
      summary: Update Collection Asset
      description: |-
        Update an existing asset in a given collection.

        Args:
        request: The incoming request.
        asset: The Asset object to update.
        file: The file to update (optional).
        collection_id: The ID of the collection to update the asset in.
        asset_id: The ID of the asset to update.
        content_type: The content type of the request.

        Returns:
        A Response object containing the updated asset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection ID
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: assetId
          in: path
          required: true
          description: STAC Asset ID
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCatalogCollection'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                data:
                  type: string
                  description: 'TODO: add description for data'
              required:
                - data
    delete:
      operationId: CollectionAssets_delete
      summary: Delete Collection Asset
      description: |-
        Delete an asset from a given collection.

        Args:
        request: The incoming request.
        collection_id: The ID of the collection to delete the asset from.
        asset_id: The ID of the asset to delete.

        Returns:
        A Response object indicating the success of the deletion.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection ID
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: assetId
          in: path
          required: true
          description: STAC Asset ID
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCatalogCollection'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
  /api/collections/{collectionId}/config:
    get:
      operationId: Config_get
      summary: Get Config
      description: Get the complete user configuration for a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollectionSettings'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
  /api/collections/{collectionId}/config/mosaics:
    get:
      operationId: CollectionMosaics_getAll
      summary: Get Collection Mosaics
      description: Get the mosaic definitions for a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
    post:
      operationId: CollectionMosaics_add
      summary: Add Collection Mosaic
      description: Add a mosaic definition to a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mosaic'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mosaic'
        description: 'TODO: add description for "body"'
  /api/collections/{collectionId}/config/mosaics/{mosaicId}:
    get:
      operationId: CollectionMosaics_get
      summary: Get Collection Mosaic
      description: Get a mosaic definition from a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: mosaicId
          in: path
          required: true
          description: 'TODO: add description for "mosaicId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mosaic'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
    put:
      operationId: CollectionMosaics_createOrReplace
      summary: Update Collection Mosaic
      description: Update a mosaic definition from a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: mosaicId
          in: path
          required: true
          description: 'TODO: add description for "mosaicId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mosaic'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mosaic'
        description: 'TODO: add description for "body"'
    delete:
      operationId: CollectionMosaics_delete
      summary: Delete Collection Mosaic
      description: Delete a mosaic definition from a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: mosaicId
          in: path
          required: true
          description: 'TODO: add description for "mosaicId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
  /api/collections/{collectionId}/config/partition-type:
    get:
      operationId: PartitionTypes_get
      summary: Get Partitiontype
      description: |-
        Get the partitiontype for a GeoCatalog Collection.

        Args:
        collection_id: the collection id to get the partitiontype for.

        Returns:
        The partitiontype for the collection.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionType'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
    put:
      operationId: PartitionTypes_createOrUpdate
      summary: Create Partitiontype
      description: |-
        Updates partition type for a GeoCatalog Collection. This will
        determine the partitioning scheme for items within the database,
        and can only be set before any items are loaded.

        Ideal partitioning schemes result in partitions of roughly 100k items each.

        The default partitioning scheme is "none" which does not partition items.

        Args:
        collection_id: the collection id to add the partitiontype to.
        partitiontype: the partitiontype to add.

        Returns:
        None
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionType'
        description: 'TODO: add description for "body"'
  /api/collections/{collectionId}/config/render-options:
    get:
      operationId: CollectionRenderOptions_getAll
      summary: Get Collection Render Options
      description: Get all render options for a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
    post:
      operationId: CollectionRenderOptions_create
      summary: Add Collection Render Option
      description: Add a render option for a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderOption'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenderOption'
        description: 'TODO: add description for "body"'
  /api/collections/{collectionId}/config/render-options/{renderOptionId}:
    get:
      operationId: CollectionRenderOptions_get
      summary: Get Collection Render Option
      description: Get a render option for a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: renderOptionId
          in: path
          required: true
          description: 'TODO: add description for "renderOptionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderOption'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
    put:
      operationId: CollectionRenderOptions_createOrReplace
      summary: Update Collection Render Option
      description: Update a render option for a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: renderOptionId
          in: path
          required: true
          description: 'TODO: add description for "renderOptionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenderOption'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenderOption'
        description: 'TODO: add description for "body"'
    delete:
      operationId: CollectionRenderOptions_delete
      summary: Delete Collection Render Option
      description: Delete a render option for a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: renderOptionId
          in: path
          required: true
          description: 'TODO: add description for "renderOptionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
  /api/collections/{collectionId}/config/tile-settings:
    get:
      operationId: CollectionTileSettings_getAll
      summary: Get Collection Tile Settings
      description: Get the tile settings for a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TileSettings'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
    put:
      operationId: CollectionTileSettings_createOrReplace
      summary: Update Collection Tile Settings
      description: Update the tile settings for a given collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TileSettings'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TileSettings'
        description: 'TODO: add description for "body"'
  /api/collections/{collectionId}/image/static:
    post:
      operationId: StaticImages_create
      summary: Create Static Image
      description: Create a new image export.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection ID
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Image Exports for STAC Collections
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageRequest'
        description: 'TODO: add description for "body"'
  /api/collections/{collectionId}/image/static/{id}:
    get:
      operationId: StaticImages_get
      summary: Get Static Image
      description: Fetch an existing image export by ID
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: id
          in: path
          required: true
          description: Image export ID
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: collectionId
          in: path
          required: true
          description: STAC Collection ID
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Image Exports for STAC Collections
  /api/collections/{collectionId}/ingestions:
    get:
      operationId: Ingestions_getAll
      description: Get ingestions of a catalog
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - $ref: '#/components/parameters/OdataQuery.top'
        - $ref: '#/components/parameters/OdataQuery.skip'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingestions.IngestionDefinition'
      tags:
        - Ingestion Management
    post:
      operationId: Ingestions_create
      description: Create a new ingestion
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          headers:
            location:
              required: true
              description: Url of the created ingestion
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingestions.IngestionDefinition'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
      tags:
        - Ingestion Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingestions.IngestionDefinitionCreation'
        description: Definition of the ingestion
  /api/collections/{collectionId}/ingestions/{ingestionId}:
    get:
      operationId: Ingestions_get
      description: Get the definition of an ingestion
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - $ref: '#/components/parameters/Ingestions.IngestionParameters.ingestionId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingestions.IngestionDefinition'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - Ingestion Management
    patch:
      operationId: Ingestions_update
      description: Update an existing ingestion
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - $ref: '#/components/parameters/Ingestions.IngestionParameters.ingestionId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingestions.IngestionDefinition'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - Ingestion Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingestions.PatchRequest'
        description: Ingestion properties to update
    delete:
      operationId: Ingestions_delete
      description: Delete an ingestion from a catalog. All runs of the ingestion will be deleted. Ingestion must not have any runs in progress or queued.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - $ref: '#/components/parameters/Ingestions.IngestionParameters.ingestionId'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            location:
              required: true
              description: Url used to monitor the background operation
              schema:
                type: string
                format: uri
            operation-location:
              required: true
              description: Url used to monitor the background operation
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - Ingestion Management
  /api/collections/{collectionId}/ingestions/{ingestionId}/runs:
    get:
      operationId: Runs_getAll
      description: Get the runs of an ingestion
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - $ref: '#/components/parameters/Ingestions.IngestionParameters.ingestionId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingestions.Runs.IngestionRun'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - Ingestion Management
    post:
      operationId: Runs_create
      description: Create a new run of an ingestion
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - $ref: '#/components/parameters/Ingestions.IngestionParameters.ingestionId'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          headers:
            location:
              required: true
              description: Url of the created ingestion run
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingestions.Runs.IngestionRun'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - Ingestion Management
  /api/collections/{collectionId}/ingestions/{ingestionId}/runs/{runId}:
    get:
      operationId: Runs_get
      description: Get a run of an ingestion
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - $ref: '#/components/parameters/Ingestions.IngestionParameters.ingestionId'
        - $ref: '#/components/parameters/Ingestions.Runs.IngestionRunParameters.runId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingestions.Runs.IngestionRun'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - Ingestion Management
  /api/collections/{collectionId}/items:
    get:
      operationId: Items_getFeatures
      description: |-
        Fetch features of the feature collection with id `collectionId`.

        Every feature in a dataset belongs to a collection. A dataset may
        consist of multiple feature collections. A feature collection is often a
        collection of features of a similar type, based on a common schema.")
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - name: limit
          in: query
          required: false
          description: |-
            The optional limit parameter recommends the number of items that should be present in the response document.

            If the limit parameter value is greater than advertised limit maximum, the server must return the
            maximum possible number of items, rather than responding with an error.

            Only items are counted that are on the first level of the collection in the response document.
            Nested objects contained within the explicitly requested items must not be counted.

            Minimum = 1. Maximum = 10000. Default = 10.
          schema:
            type: integer
            format: int64
          explode: false
        - name: bbox
          in: query
          required: false
          description: |-
            Only features that have a geometry that intersects the bounding box are selected.
            The bounding box is provided as four or six numbers, depending on whether the
            coordinate reference system includes a vertical axis (height or depth):

            - Lower left corner, coordinate axis 1
            - Lower left corner, coordinate axis 2
            - Minimum value, coordinate axis 3 (optional)
            - Upper right corner, coordinate axis 1
            - Upper right corner, coordinate axis 2
            - Maximum value, coordinate axis 3 (optional)

            The coordinate reference system of the values is WGS 84 longitude/latitude
            (http://www.opengis.net/def/crs/OGC/1.3/CRS84).

            For WGS 84 longitude/latitude the values are in most cases the sequence of
            minimum longitude, minimum latitude, maximum longitude and maximum latitude.
            However, in cases where the box spans the antimeridian the first value
            (west-most box edge) is larger than the third value (east-most box edge).

            If the vertical axis is included, the third and the sixth number are
            the bottom and the top of the 3-dimensional bounding box.

            If a feature has multiple spatial geometry properties, it is the decision of the
            server whether only a single spatial geometry property is used to determine
            the extent or all relevant geometries.
          schema:
            type: array
            items:
              type: number
              format: double
        - name: datetime
          in: query
          required: false
          description: |-
            Either a date-time or an interval, open or closed. Date and time expressions
            adhere to RFC 3339. Open intervals are expressed using double-dots.

            Examples:

            - A date-time: "2018-02-12T23:20:50Z"
            - A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
            - Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

            Only features that have a temporal property that intersects the value of
            `datetime` are selected.

            If a feature has multiple temporal properties, it is the decision of the
            server whether only a single temporal property is used to determine
            the extent or all relevant temporal properties.
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Items.StacItemCollection'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
    post:
      operationId: Items_create
      description: Create a new STAC item or a set of items in a collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            location:
              required: true
              description: Url used to monitor the background operation
              schema:
                type: string
                format: uri
            operation-location:
              required: true
              description: Url used to monitor the background operation
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/Items.StacPostOrPutItem'
                - $ref: '#/components/schemas/Items.StacPostOrPutItemCollection'
        description: STAC Item or ItemCollection
  /api/collections/{collectionId}/items/{itemId}:
    get:
      operationId: Items_get
      description: Fetch a single STAC Item
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - name: itemId
          in: path
          required: true
          description: STAC Item id
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Items.StacItem'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
    put:
      operationId: Items_update
      description: Update a STAC item in a collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - name: itemId
          in: path
          required: true
          description: 'TODO: add description for itemId'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            location:
              required: true
              description: Url used to monitor the background operation
              schema:
                type: string
                format: uri
            operation-location:
              required: true
              description: Url used to monitor the background operation
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Items.StacPostOrPutItem'
        description: STAC Item
    patch:
      operationId: Items_patch
      description: Update a STAC item in a collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - name: itemId
          in: path
          required: true
          description: 'TODO: add description for itemId'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            location:
              required: true
              description: Url used to monitor the background operation
              schema:
                type: string
                format: uri
            operation-location:
              required: true
              description: Url used to monitor the background operation
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Items.StacPostOrPutItemUpdate'
        description: STAC Item
    delete:
      operationId: Items_delete
      description: Delete a STAC item from a collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - name: itemId
          in: path
          required: true
          description: 'TODO: add description for itemId'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            location:
              required: true
              description: Url used to monitor the background operation
              schema:
                type: string
                format: uri
            operation-location:
              required: true
              description: Url used to monitor the background operation
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
  /api/collections/{collectionId}/items/{itemId}/WMTSCapabilities.xml:
    get:
      operationId: Wmts_getCapabilitiesXml
      summary: Wmts
      description: OGC WMTS endpoint.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: tileFormat
          in: query
          required: false
          description: Output image type. Default is png.
          schema:
            $ref: '#/components/schemas/ImageType'
            default: png
          explode: false
        - name: tileScale
          in: query
          required: false
          description: 'Tile size scale. 1=256x256, 2=512x512...TODO: add description for "tileScale"?'
          schema:
            type: integer
            format: int32
            maximum: 4
            exclusiveMaximum: true
            default: 1
          explode: false
        - name: minzoom
          in: query
          required: false
          description: Overwrite default minzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: maxzoom
          in: query
          required: false
          description: Overwrite default maxzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: accept
          in: header
          required: true
          description: Accept header
          schema:
            type: string
            enum:
              - application/xml
      responses:
        '200':
          description: Successful Response
          content:
            application/xml:
              schema:
                type: string
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/asset_statistics:
    get:
      operationId: AssetStatistics_getAll
      summary: Asset Statistics
      description: Per Asset statistics
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes
          schema:
            type: array
            items:
              type: string
        - name: assetExpression
          in: query
          required: false
          description: Per asset band expression
          schema:
            type: array
            items:
              type: string
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: maxSize
          in: query
          required: false
          description: 'TODO: add description for "maxSize"?'
          schema:
            type: integer
            format: int32
            default: 1024
          explode: false
        - name: height
          in: query
          required: false
          description: 'TODO: add description for "height"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: width
          in: query
          required: false
          description: 'TODO: add description for "width"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: categorical
          in: query
          required: false
          description: Return statistics for categorical dataset.
          schema:
            type: boolean
          explode: false
        - name: c
          in: query
          required: false
          description: List of values for which to report counts.
          schema:
            type: array
            items:
              type: string
        - name: p
          in: query
          required: false
          description: List of percentile values (default to [2, 98]).
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: histogramBins
          in: query
          required: false
          description: |-
            Defines the number of equal-width bins in the given range (10, by default).

            If bins is a sequence (comma `,` delimited values), it defines a monotonically
            increasing array of bin edges, including the rightmost edge, allowing for
            non-uniform bin widths.

            link: https://numpy.org/doc/stable/reference/generated/numpy.histogram.html
          schema:
            type: string
          explode: false
        - name: histogramRange
          in: query
          required: false
          description: |-
            Comma `,` delimited range of the bins.

            The lower and upper range of the bins. If not provided, range is simply
            (a.min(), a.max()).

            Values outside the range are ignored. The first element of the range must be
            less than or equal to the second.
            range affects the automatic bin computation as well.

            link: https://numpy.org/doc/stable/reference/generated/numpy.histogram.html
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: Return dataset's statistics.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/StatisticsInGeoJson'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/assets:
    get:
      operationId: AvailableAssets_getAll
      summary: Available Assets
      description: Return a list of supported assets.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: Return a list of supported assets.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/bounds:
    get:
      operationId: Bound_getAll
      summary: Bounds
      description: Bounds
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bounds'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/crop:
    post:
      operationId: GeoJsons_cropPost
      summary: Geojson Crop
      description: Create image from a geojson feature.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: format
          in: query
          required: false
          description: 'TODO: add description for "format"?'
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: coord-crs
          in: query
          required: false
          description: Coordinate Reference System of the input coords. Default to `epsg:4326`.
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: maxSize
          in: query
          required: false
          description: 'TODO: add description for "maxSize"?'
          schema:
            type: integer
            format: int32
            default: 1024
          explode: false
        - name: height
          in: query
          required: false
          description: 'TODO: add description for "height"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: width
          in: query
          required: false
          description: 'TODO: add description for "width"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Geojson'
        description: 'TODO: add description for "body"'
  /api/collections/{collectionId}/items/{itemId}/crop.{format}:
    post:
      operationId: GeoJsons_cropFormat
      summary: Geojson Crop
      description: Create image from a geojson feature.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: coord-crs
          in: query
          required: false
          description: Coordinate Reference System of the input coords. Default to `epsg:4326`.
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: maxSize
          in: query
          required: false
          description: 'TODO: add description for "maxSize"?'
          schema:
            type: integer
            format: int32
            default: 1024
          explode: false
        - name: height
          in: query
          required: false
          description: 'TODO: add description for "height"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: width
          in: query
          required: false
          description: 'TODO: add description for "width"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Geojson'
        description: 'TODO: add description for "body"'
  /api/collections/{collectionId}/items/{itemId}/crop/{minx},{miny},{maxx},{maxy}.{format}:
    get:
      operationId: Parts_getMinxMinyMaxxMaxyFormat
      summary: Part
      description: Create image from part of a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: minx
          in: path
          required: true
          description: Bounding box min X
          schema:
            type: string
            pattern: '[+-]?([0-9]*[.])?[0-9]+'
            maxLength: 500
        - name: miny
          in: path
          required: true
          description: Bounding box min Y
          schema:
            type: string
            pattern: '[+-]?([0-9]*[.])?[0-9]+'
            maxLength: 500
        - name: maxx
          in: path
          required: true
          description: Bounding box max X
          schema:
            type: string
            pattern: '[+-]?([0-9]*[.])?[0-9]+'
            maxLength: 500
        - name: maxy
          in: path
          required: true
          description: Bounding box max Y
          schema:
            type: string
            pattern: '[+-]?([0-9]*[.])?[0-9]+'
            maxLength: 500
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: dst-crs
          in: query
          required: false
          description: Output Coordinate Reference System.
          schema:
            type: string
          explode: false
        - name: coord-crs
          in: query
          required: false
          description: Coordinate Reference System of the input coords. Default to `epsg:4326`.
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: maxSize
          in: query
          required: false
          description: 'TODO: add description for "maxSize"?'
          schema:
            type: integer
            format: int32
            default: 1024
          explode: false
        - name: height
          in: query
          required: false
          description: 'TODO: add description for "height"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: width
          in: query
          required: false
          description: 'TODO: add description for "width"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/crop/{minx},{miny},{maxx},{maxy}/{width}x{height}.{format}:
    get:
      operationId: Parts_getMinxMinyMaxxMaxyWidthxHeightFormat
      summary: Part
      description: Create image from part of a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: minx
          in: path
          required: true
          description: Bounding box min X
          schema:
            type: string
            pattern: '[+-]?([0-9]*[.])?[0-9]+'
            maxLength: 500
        - name: miny
          in: path
          required: true
          description: Bounding box min Y
          schema:
            type: string
            pattern: '[+-]?([0-9]*[.])?[0-9]+'
            maxLength: 500
        - name: maxx
          in: path
          required: true
          description: Bounding box max X
          schema:
            type: string
            pattern: '[+-]?([0-9]*[.])?[0-9]+'
            maxLength: 500
        - name: maxy
          in: path
          required: true
          description: Bounding box max Y
          schema:
            type: string
            pattern: '[+-]?([0-9]*[.])?[0-9]+'
            maxLength: 500
        - name: width
          in: path
          required: true
          description: 'TODO: add description for "width"'
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: height
          in: path
          required: true
          description: 'TODO: add description for "height"'
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: dst-crs
          in: query
          required: false
          description: Output Coordinate Reference System.
          schema:
            type: string
          explode: false
        - name: coord-crs
          in: query
          required: false
          description: Coordinate Reference System of the input coords. Default to `epsg:4326`.
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: maxSize
          in: query
          required: false
          description: 'TODO: add description for "maxSize"?'
          schema:
            type: integer
            format: int32
            default: 1024
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/crop/{width}x{height}.{format}:
    post:
      operationId: GeoJsons_cropWidthxHeightFormat
      summary: Geojson Crop
      description: Create image from a geojson feature.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: width
          in: path
          required: true
          description: 'TODO: add description for "width"'
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: height
          in: path
          required: true
          description: 'TODO: add description for "height"'
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: coord-crs
          in: query
          required: false
          description: Coordinate Reference System of the input coords. Default to `epsg:4326`.
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: maxSize
          in: query
          required: false
          description: 'TODO: add description for "maxSize"?'
          schema:
            type: integer
            format: int32
            default: 1024
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Geojson'
        description: 'TODO: add description for "body"'
  /api/collections/{collectionId}/items/{itemId}/info:
    get:
      operationId: InfoOperations_get
      summary: Info
      description: Return dataset's basic info.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Return dataset's basic info or the list of available assets.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/TilerInfo'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/info.geojson:
    get:
      operationId: InfoGeoJsonOperations_get
      summary: Info Geojson
      description: Info Geojson
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: accept
          in: header
          required: true
          description: Accept header
          schema:
            type: string
            enum:
              - application/geo+json
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturePolygonDictStrRioTilerModelsInfo'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/point/{lon},{lat}:
    get:
      operationId: Points_getLonLat
      summary: Point
      description: Get Point value for a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: lon
          in: path
          required: true
          description: Longitude
          schema:
            type: string
            pattern: '[+-]?([0-9]*[.])?[0-9]+'
            maxLength: 500
        - name: lat
          in: path
          required: true
          description: Latitude
          schema:
            type: string
            pattern: '[+-]?([0-9]*[.])?[0-9]+'
            maxLength: 500
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: coord-crs
          in: query
          required: false
          description: Coordinate Reference System of the input coords. Default to `epsg:4326`.
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TitilerCoreModelsResponsesPoint'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/preview:
    get:
      operationId: Previews_get
      summary: Preview
      description: Create preview of a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: format
          in: query
          required: false
          description: 'TODO: add description for "format"?'
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: dst-crs
          in: query
          required: false
          description: Output Coordinate Reference System.
          schema:
            type: string
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: maxSize
          in: query
          required: false
          description: 'TODO: add description for "maxSize"?'
          schema:
            type: integer
            format: int32
            default: 1024
          explode: false
        - name: height
          in: query
          required: false
          description: 'TODO: add description for "height"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: width
          in: query
          required: false
          description: 'TODO: add description for "width"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/preview.{format}:
    get:
      operationId: Previews_getFormat
      summary: Preview
      description: Create preview of a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: dst-crs
          in: query
          required: false
          description: Output Coordinate Reference System.
          schema:
            type: string
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: maxSize
          in: query
          required: false
          description: 'TODO: add description for "maxSize"?'
          schema:
            type: integer
            format: int32
            default: 1024
          explode: false
        - name: height
          in: query
          required: false
          description: 'TODO: add description for "height"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: width
          in: query
          required: false
          description: 'TODO: add description for "width"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/statistics:
    get:
      operationId: Statistics_getAll
      summary: Statistics
      description: Merged assets statistics.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: maxSize
          in: query
          required: false
          description: 'TODO: add description for "maxSize"?'
          schema:
            type: integer
            format: int32
            default: 1024
          explode: false
        - name: height
          in: query
          required: false
          description: 'TODO: add description for "height"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: width
          in: query
          required: false
          description: 'TODO: add description for "width"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: categorical
          in: query
          required: false
          description: Return statistics for categorical dataset.
          schema:
            type: boolean
          explode: false
        - name: c
          in: query
          required: false
          description: List of values for which to report counts.
          schema:
            type: array
            items:
              type: string
        - name: p
          in: query
          required: false
          description: List of percentile values (default to [2, 98]).
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: histogramBins
          in: query
          required: false
          description: |-
            Defines the number of equal-width bins in the given range (10, by default).

            If bins is a sequence (comma `,` delimited values), it defines a monotonically
            increasing array of bin edges, including the rightmost edge, allowing for
            non-uniform bin widths.

            link: https://numpy.org/doc/stable/reference/generated/numpy.histogram.html
          schema:
            type: string
          explode: false
        - name: histogramRange
          in: query
          required: false
          description: |-
            Comma `,` delimited range of the bins.

            The lower and upper range of the bins. If not provided, range is simply
            (a.min(), a.max()).

            Values outside the range are ignored. The first element of the range must be
            less than or equal to the second.
            range affects the automatic bin computation as well.

            link: https://numpy.org/doc/stable/reference/generated/numpy.histogram.html
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: Return dataset's statistics.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/BandStatistics'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
    post:
      operationId: GeoJsonStatistics_getAll
      summary: Geojson Statistics
      description: Get Statistics from a geojson feature or featureCollection.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: coord-crs
          in: query
          required: false
          description: Coordinate Reference System of the input coords. Default to `epsg:4326`.
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: maxSize
          in: query
          required: false
          description: 'TODO: add description for "maxSize"?'
          schema:
            type: integer
            format: int32
            default: 1024
          explode: false
        - name: height
          in: query
          required: false
          description: 'TODO: add description for "height"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: width
          in: query
          required: false
          description: 'TODO: add description for "width"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: categorical
          in: query
          required: false
          description: Return statistics for categorical dataset.
          schema:
            type: boolean
          explode: false
        - name: c
          in: query
          required: false
          description: List of values for which to report counts.
          schema:
            type: array
            items:
              type: string
        - name: p
          in: query
          required: false
          description: List of percentile values (default to [2, 98]).
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: histogramBins
          in: query
          required: false
          description: |-
            Defines the number of equal-width bins in the given range (10, by default).

            If bins is a sequence (comma `,` delimited values), it defines a monotonically
            increasing array of bin edges, including the rightmost edge, allowing for
            non-uniform bin widths.

            link: https://numpy.org/doc/stable/reference/generated/numpy.histogram.html
          schema:
            type: string
          explode: false
        - name: histogramRange
          in: query
          required: false
          description: |-
            Comma `,` delimited range of the bins.

            The lower and upper range of the bins. If not provided, range is simply
            (a.min(), a.max()).

            Values outside the range are ignored. The first element of the range must be
            less than or equal to the second.
            range affects the automatic bin computation as well.

            link: https://numpy.org/doc/stable/reference/generated/numpy.histogram.html
          schema:
            type: string
          explode: false
        - name: accept
          in: header
          required: true
          description: Accept header
          schema:
            type: string
            enum:
              - application/geo+json, application/json
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Geojson'
        description: 'TODO: add description for "body"'
  /api/collections/{collectionId}/items/{itemId}/tilejson.json:
    get:
      operationId: TileJsonOperations_get
      summary: Tilejson
      description: Tilejson
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: tileFormat
          in: query
          required: false
          description: |-
            Default will be automatically defined if the output image needs a mask (png) or
            not (jpeg).
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: tileScale
          in: query
          required: false
          description: 'Tile size scale. 1=256x256, 2=512x512...TODO: add description for "tileScale"?'
          schema:
            type: integer
            format: int32
            maximum: 4
            exclusiveMaximum: true
            default: 1
          explode: false
        - name: minzoom
          in: query
          required: false
          description: Overwrite default minzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: maxzoom
          in: query
          required: false
          description: Overwrite default maxzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TileJson'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/tiles/{tileMatrixSetId}/{z}/{x}/{y}:
    get:
      operationId: TileMatrixSets_getZxy
      summary: Tile Tilematrixsetid As Path
      description: Create map tile from a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: scale
          in: query
          required: false
          description: 'TODO: add description for "scale"?'
          schema:
            type: integer
            format: int32
            default: 1
          explode: false
        - name: format
          in: query
          required: false
          description: 'TODO: add description for "format"?'
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: subdatasetName
          in: query
          required: false
          description: The name of a subdataset within the asset.
          schema:
            type: string
          explode: false
        - name: subdatasetBands
          in: query
          required: false
          description: The index of a subdataset band within the asset.
          schema:
            type: array
            items:
              type: string
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/tiles/{tileMatrixSetId}/{z}/{x}/{y}.{format}:
    get:
      operationId: TileMatrixSets_getZxyFormat
      summary: Tile Tilematrixsetid As Path
      description: Create map tile from a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: scale
          in: query
          required: false
          description: 'TODO: add description for "scale"?'
          schema:
            type: integer
            format: int32
            default: 1
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: subdatasetName
          in: query
          required: false
          description: The name of a subdataset within the asset.
          schema:
            type: string
          explode: false
        - name: subdatasetBands
          in: query
          required: false
          description: The index of a subdataset band within the asset.
          schema:
            type: array
            items:
              type: string
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/tiles/{tileMatrixSetId}/{z}/{x}/{y}@{scale}x:
    get:
      operationId: TileMatrixSets_getZxyScalex
      summary: Tile Tilematrixsetid As Path
      description: Create map tile from a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: scale
          in: path
          required: true
          description: 'TODO: add description for "scale"'
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: format
          in: query
          required: false
          description: 'TODO: add description for "format"?'
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: subdatasetName
          in: query
          required: false
          description: The name of a subdataset within the asset.
          schema:
            type: string
          explode: false
        - name: subdatasetBands
          in: query
          required: false
          description: The index of a subdataset band within the asset.
          schema:
            type: array
            items:
              type: string
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/tiles/{tileMatrixSetId}/{z}/{x}/{y}@{scale}x.{format}:
    get:
      operationId: TileMatrixSets_getZxyScalexFormat
      summary: Tile Tilematrixsetid As Path
      description: Create map tile from a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: scale
          in: path
          required: true
          description: 'TODO: add description for "scale"'
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: subdatasetName
          in: query
          required: false
          description: The name of a subdataset within the asset.
          schema:
            type: string
          explode: false
        - name: subdatasetBands
          in: query
          required: false
          description: The index of a subdataset band within the asset.
          schema:
            type: array
            items:
              type: string
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/tiles/{z}/{x}/{y}:
    get:
      operationId: Tiles_getZxy
      summary: Tile
      description: Create map tile from a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: scale
          in: query
          required: false
          description: 'TODO: add description for "scale"?'
          schema:
            type: integer
            format: int32
            default: 1
          explode: false
        - name: format
          in: query
          required: false
          description: 'TODO: add description for "format"?'
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: subdatasetName
          in: query
          required: false
          description: The name of a subdataset within the asset.
          schema:
            type: string
          explode: false
        - name: subdatasetBands
          in: query
          required: false
          description: The index of a subdataset band within the asset.
          schema:
            type: array
            items:
              type: string
          explode: false
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/tiles/{z}/{x}/{y}.{format}:
    get:
      operationId: Tiles_getZxyFormat
      summary: Tile
      description: Create map tile from a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: scale
          in: query
          required: false
          description: 'TODO: add description for "scale"?'
          schema:
            type: integer
            format: int32
            default: 1
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: subdatasetName
          in: query
          required: false
          description: The name of a subdataset within the asset.
          schema:
            type: string
          explode: false
        - name: subdatasetBands
          in: query
          required: false
          description: The index of a subdataset band within the asset.
          schema:
            type: array
            items:
              type: string
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/tiles/{z}/{x}/{y}@{scale}x:
    get:
      operationId: Tiles_getZxyScalex
      summary: Tile
      description: Create map tile from a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: scale
          in: path
          required: true
          description: 'TODO: add description for "scale"'
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: format
          in: query
          required: false
          description: 'TODO: add description for "format"?'
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: subdatasetName
          in: query
          required: false
          description: The name of a subdataset within the asset.
          schema:
            type: string
          explode: false
        - name: subdatasetBands
          in: query
          required: false
          description: The index of a subdataset band within the asset.
          schema:
            type: array
            items:
              type: string
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/tiles/{z}/{x}/{y}@{scale}x.{format}:
    get:
      operationId: Tiles_getZxyScalexFormat
      summary: Tile
      description: Create map tile from a dataset.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: scale
          in: path
          required: true
          description: 'TODO: add description for "scale"'
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: subdatasetName
          in: query
          required: false
          description: The name of a subdataset within the asset.
          schema:
            type: string
          explode: false
        - name: subdatasetBands
          in: query
          required: false
          description: The index of a subdataset band within the asset.
          schema:
            type: array
            items:
              type: string
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/{tileMatrixSetId}/WMTSCapabilities.xml:
    get:
      operationId: WmtsTileMatrixSets_getCapabilitiesXml
      summary: Wmts Tilematrixsetid As Path
      description: OGC WMTS endpoint.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: tileFormat
          in: query
          required: false
          description: Output image type. Default is png.
          schema:
            $ref: '#/components/schemas/ImageType'
            default: png
          explode: false
        - name: tileScale
          in: query
          required: false
          description: 'Tile size scale. 1=256x256, 2=512x512...TODO: add description for "tileScale"?'
          schema:
            type: integer
            format: int32
            maximum: 4
            exclusiveMaximum: true
            default: 1
          explode: false
        - name: minzoom
          in: query
          required: false
          description: Overwrite default minzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: maxzoom
          in: query
          required: false
          description: Overwrite default maxzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: accept
          in: header
          required: true
          description: Accept header
          schema:
            type: string
            enum:
              - application/xml
      responses:
        '200':
          description: Successful Response
          content:
            application/xml:
              schema:
                type: string
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/items/{itemId}/{tileMatrixSetId}/tilejson.json:
    get:
      operationId: TileJsonTileMatrixSets_get
      summary: Tilejson Tilematrixsetid As Path
      description: Tilejson Tilematrixsetid As Path
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: itemId
          in: path
          required: true
          description: STAC Item Identifier
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: tileFormat
          in: query
          required: false
          description: |-
            Default will be automatically defined if the output image needs a mask (png) or
            not (jpeg).
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: tileScale
          in: query
          required: false
          description: 'Tile size scale. 1=256x256, 2=512x512...TODO: add description for "tileScale"?'
          schema:
            type: integer
            format: int32
            maximum: 4
            exclusiveMaximum: true
            default: 1
          explode: false
        - name: minzoom
          in: query
          required: false
          description: Overwrite default minzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: maxzoom
          in: query
          required: false
          description: Overwrite default maxzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TileJson'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Items
  /api/collections/{collectionId}/operations:
    get:
      operationId: Operations_getAll
      description: Get operations of a geo-catalog collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - $ref: '#/components/parameters/OdataQuery.top'
        - $ref: '#/components/parameters/OdataQuery.skip'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Operation'
      tags:
        - Ingestion Management
    delete:
      operationId: Operations_deleteAll
      description: Cancel all running operations of a geo-catalog collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
      responses:
        '200':
          description: The request has succeeded.
      tags:
        - Ingestion Management
  /api/collections/{collectionId}/operations/{operationId}:
    get:
      operationId: Operations_get
      description: Get an operation of a geo-catalog collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - name: operationId
          in: path
          required: true
          description: Operation id
          schema:
            type: string
            pattern: ^[a-zA-Za0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      tags:
        - Ingestion Management
    delete:
      operationId: Operations_delete
      description: Cancel a running operation of a geo-catalog collection
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - name: operationId
          in: path
          required: true
          description: Operation id
          schema:
            type: string
            pattern: ^[a-zA-Za0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
      tags:
        - Ingestion Management
  /api/collections/{collectionId}/operations/{operationId}/logs:
    get:
      operationId: Operations_getLogs
      description: Get operation logs
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/CollectionParameters.collectionId'
        - name: operationId
          in: path
          required: true
          description: Operation id
          schema:
            type: string
            pattern: ^[a-zA-Za0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: string
                format: byte
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - Ingestion Management
  /api/collections/{collectionId}/queryables:
    get:
      operationId: Queryables_getAllByCollection
      summary: Collection Queryables
      description: Endpoint.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: Collection ID
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
    post:
      operationId: Queryables_create
      summary: Set Collection Queryables
      description: Set queryables for a collection given a list of queryable definitions
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/QueryableDefinition'
        description: 'TODO: add description for "body"'
  /api/collections/{collectionId}/queryables/{queryableName}:
    delete:
      operationId: Queryables_delete
      summary: Delete Queryables
      description: Delete queryables by name for specified collection.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: queryableName
          in: path
          required: true
          description: 'TODO: add description for "queryableName"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
    put:
      operationId: Queryables_createOrReplace
      summary: Update Collection Queryables
      description: |-
        Updates a queryable given a queryable definition and
        corresponding collection id.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: 'TODO: add description for "collectionId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: queryableName
          in: path
          required: true
          description: 'TODO: add description for "queryableName"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryableDefinition'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryableDefinition'
        description: 'TODO: add description for "body"'
  /api/collections/{collectionId}/thumbnail:
    get:
      operationId: CollectionThumbnails_get
      summary: Get Collection Thumbnail
      description: |-
        Get thumbnail for given collection.

        Args:
        request: The incoming request.
        collection_id: The ID of the collection to retrieve assets for.

        Returns:
        thumbnail image
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collectionId
          in: path
          required: true
          description: STAC Collection ID
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - STAC Collection Configuration
  /api/config/auth:
    get:
      operationId: AuthConfigOperations_get
      summary: Get Auth Config
      description: |-
        Get the app id and tenant id information to make a MSAL request for this
        GeoCatalog instance.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthConfig'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - GeoCatalog Instance Configuration
  /api/config/map/id:
    get:
      operationId: AzmapsClient_getId
      summary: Get Azmaps Client Id
      description: |-
        Fetch the client id for the Azure Maps API service based on the current
        on the current identity. This client id is used for the Explorer to
        authenticate with the Azure Maps API service.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzMapsClientId'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - GeoCatalog Instance Configuration
  /api/config/map/token:
    get:
      operationId: AzmapsToken_get
      summary: Get Azmaps Token
      description: |-
        Fetch a token for the Azure Maps API service based on the current
        service identity. This token is used for the Explorer to authenticate
        with the Azure Maps API service.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzMapsToken'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - GeoCatalog Instance Configuration
  /api/conformance:
    get:
      operationId: ConformanceClass_get
      summary: Conformance Classes
      description: Endpoint.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConformanceClasses'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
  /api/ingestion-sources:
    get:
      operationId: IngestionSources_getAll
      description: Get ingestion sources in a geo-catalog
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - $ref: '#/components/parameters/OdataQuery.top'
        - $ref: '#/components/parameters/OdataQuery.skip'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IngestionSources.IngestionSourceSummary'
      tags:
        - Ingestion Sources
    post:
      operationId: IngestionSources_create
      description: Create a new ingestion source in a geo-catalog
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          headers:
            location:
              required: true
              description: Url of the created ingestion source
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestionSources.IngestionSourceSummary'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
      tags:
        - Ingestion Sources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestionSources.IngestionSource'
        description: Definition of the ingestion source
  /api/ingestion-sources/managed-identities:
    get:
      operationId: IngestionSources_getManagedIdentities
      description: Get all managed identities with access to storage accounts configured for a geo-catalog
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IngestionSources.ManagedIdentityMetadata'
      tags:
        - Ingestion Sources
  /api/ingestion-sources/{id}:
    get:
      operationId: IngestionSources_get
      description: Get an ingestion source in a geo-catalog
      parameters:
        - $ref: '#/components/parameters/IngestionSources.IngestionSourceParameters'
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestionSources.IngestionSourceSummary'
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - Ingestion Sources
    put:
      operationId: IngestionSources_createOrReplace
      description: Update an existing ingestion source in a geo-catalog
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: id
          in: path
          required: true
          description: Ingestion source id
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          headers:
            location:
              required: true
              description: Url of the created ingestion source
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestionSources.IngestionSourceSummary'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
      tags:
        - Ingestion Sources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestionSources.IngestionSource'
        description: Definition of the ingestion source
    delete:
      operationId: IngestionSources_delete
      description: Delete an ingestion source from a geo-catalog
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: id
          in: path
          required: true
          description: 'TODO: add description for id'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
        '404':
          description: 'TODO: add description for NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
      tags:
        - Ingestion Sources
  /api/legend/classmap/{classmapName}:
    get:
      operationId: ClassmapLegends_get
      summary: Get Classmap Legend
      description: |-
        Generate values and color swatches mapping for a given classmap.

        Args:
        trim_start (int, optional): Number of items to trim
        from the start of the cmap
        trim_end (int, optional): Number of items to trim from the end of the cmap
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: classmapName
          in: path
          required: true
          description: 'TODO: add description for "classmapName"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: trimStart
          in: query
          required: false
          description: 'TODO: add description for "trimStart"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: trimEnd
          in: query
          required: false
          description: 'TODO: add description for "trimEnd"?'
          schema:
            type: integer
            format: int32
          explode: false
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Map Legends
  /api/legend/colormap/{cmapName}:
    get:
      operationId: Legends_get
      summary: Get Legend
      description: |-
        Generate a legend image for a given colormap.

        If the colormap has non-contiguous values at the beginning or end,
        which aren't desired in the output image, they can be trimmed by specifying
        the number of values to trim.

        Args:
        cmap_name (string): The name of the registered colormap to generate
        a legend for
        height (float, optional): The output height of the legend image
        width (float, optional): The output width of the legend image
        trim_start (int, optional): Number of items to trim from
        the start of the cmap
        trim_end (int, optional): Number of items to trim from the end of the cmap

        Returns:
        HTTP response with jpeg encoded image data
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: cmapName
          in: path
          required: true
          description: 'TODO: add description for "cmapName"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: height
          in: query
          required: false
          description: 'TODO: add description for "height"?'
          schema:
            type: number
            format: double
            default: 0.15
          explode: false
        - name: width
          in: query
          required: false
          description: 'TODO: add description for "width"?'
          schema:
            type: number
            format: float
            default: 5
          explode: false
        - name: trimStart
          in: query
          required: false
          description: 'TODO: add description for "trimStart"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: trimEnd
          in: query
          required: false
          description: 'TODO: add description for "trimEnd"?'
          schema:
            type: integer
            format: int32
          explode: false
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Map Legends
  /api/legend/interval/{classmapName}:
    get:
      operationId: IntervalLegends_getByClassmapName
      summary: Get Interval Legend
      description: |-
        Generate values and color swatches mapping for a given interval classmap.

        Args:
        trim_start (int, optional): Number of items to trim from
        the start of the cmap
        trim_end (int, optional): Number of items to trim from the end of the cmap
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: classmapName
          in: path
          required: true
          description: 'TODO: add description for "classmapName"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: trimStart
          in: query
          required: false
          description: 'TODO: add description for "trimStart"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: trimEnd
          in: query
          required: false
          description: 'TODO: add description for "trimEnd"?'
          schema:
            type: integer
            format: int32
          explode: false
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Map Legends
  /api/mosaic/register:
    post:
      operationId: RegisterSearch_register
      summary: Register Search
      description: Register a Search query.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterMosaic'
  /api/mosaic/{searchid}/WMTSCapabilities.xml:
    get:
      operationId: WmtsMosaics_getCapabilitiesXml
      summary: Wmts
      description: OGC WMTS endpoint.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: tileFormat
          in: query
          required: false
          description: Output image type. Default is png.
          schema:
            $ref: '#/components/schemas/ImageType'
            default: png
          explode: false
        - name: tileScale
          in: query
          required: false
          description: 'Tile size scale. 1=256x256, 2=512x512...TODO: add description for "tileScale"?'
          schema:
            type: integer
            format: int32
            maximum: 4
            exclusiveMaximum: true
            default: 1
          explode: false
        - name: minzoom
          in: query
          required: false
          description: Overwrite default minzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: maxzoom
          in: query
          required: false
          description: Overwrite default maxzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: accept
          in: header
          required: true
          description: Accept header
          schema:
            type: string
            enum:
              - application/xml
      responses:
        '200':
          description: Successful Response
          content:
            application/xml:
              schema:
                type: string
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/info:
    get:
      operationId: InfoSearch_get
      summary: Info Search
      description: Get Search query metadata.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TitilerPgstacModelInfo'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/tilejson.json:
    get:
      operationId: MosaicsTileJsonOperations_get
      summary: Tilejson
      description: Return TileJSON document for a SearchId.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: tileFormat
          in: query
          required: false
          description: |-
            Default will be automatically defined if the output image needs a mask (png) or
            not (jpeg).
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: tileScale
          in: query
          required: false
          description: Tile size scale. 1=256x256, 2=512x512...
          schema:
            type: integer
            format: int32
            maximum: 4
            exclusiveMaximum: true
          explode: false
        - name: minzoom
          in: query
          required: false
          description: Overwrite default minzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: maxzoom
          in: query
          required: false
          description: Overwrite default maxzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: collection
          in: query
          required: false
          description: STAC Collection ID
          schema:
            type: string
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: pixelSelection
          in: query
          required: false
          description: Pixel selection method.
          schema:
            $ref: '#/components/schemas/PixelSelection'
            default: first
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TileJson'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/tiles/{tileMatrixSetId}/{z}/{x}/{y}:
    get:
      operationId: MosaicsTileMatrixSets_getZxy
      summary: Tile Tilematrixsetid As Path
      description: Create map tile.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: scale
          in: query
          required: false
          description: 'TODO: add description for "scale"?'
          schema:
            type: integer
            format: int32
            maximum: 4
          explode: false
        - name: format
          in: query
          required: false
          description: 'TODO: add description for "format"?'
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: collection
          in: query
          required: false
          description: STAC Collection ID
          schema:
            type: string
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: pixelSelection
          in: query
          required: false
          description: Pixel selection method.
          schema:
            $ref: '#/components/schemas/PixelSelection'
            default: first
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/tiles/{tileMatrixSetId}/{z}/{x}/{y}.{format}:
    get:
      operationId: MosaicsTileMatrixSets_getZxyFormat
      summary: Tile Tilematrixsetid As Path
      description: Create map tile.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: scale
          in: query
          required: false
          description: 'TODO: add description for "scale"?'
          schema:
            type: integer
            format: int32
            maximum: 4
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: collection
          in: query
          required: false
          description: STAC Collection ID
          schema:
            type: string
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: pixelSelection
          in: query
          required: false
          description: Pixel selection method.
          schema:
            $ref: '#/components/schemas/PixelSelection'
            default: first
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/tiles/{tileMatrixSetId}/{z}/{x}/{y}/assets:
    get:
      operationId: AssetsForTileMatrixSets_getZxyAssets
      summary: Assets For Tile Tilematrixsetid As Path
      description: Return a list of assets which overlap a given tile
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: Return list of assets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/tiles/{tileMatrixSetId}/{z}/{x}/{y}@{scale}x:
    get:
      operationId: MosaicsTileMatrixSets_getZxyScalex
      summary: Tile Tilematrixsetid As Path
      description: Create map tile.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: scale
          in: path
          required: true
          description: 'TODO: add description for "scale"'
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: format
          in: query
          required: false
          description: 'TODO: add description for "format"?'
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: collection
          in: query
          required: false
          description: STAC Collection ID
          schema:
            type: string
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: pixelSelection
          in: query
          required: false
          description: Pixel selection method.
          schema:
            $ref: '#/components/schemas/PixelSelection'
            default: first
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/tiles/{tileMatrixSetId}/{z}/{x}/{y}@{scale}x.{format}:
    get:
      operationId: MosaicsTileMatrixSets_getZxyScalexFormat
      summary: Tile Tilematrixsetid As Path
      description: Create map tile.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: scale
          in: path
          required: true
          description: 'TODO: add description for "scale"'
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: collection
          in: query
          required: false
          description: STAC Collection ID
          schema:
            type: string
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: pixelSelection
          in: query
          required: false
          description: Pixel selection method.
          schema:
            $ref: '#/components/schemas/PixelSelection'
            default: first
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/tiles/{z}/{x}/{y}:
    get:
      operationId: MosaicsTiles_getZxy
      summary: Tile
      description: Create map tile.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: scale
          in: query
          required: false
          description: 'TODO: add description for "scale"?'
          schema:
            type: integer
            format: int32
            maximum: 4
          explode: false
        - name: format
          in: query
          required: false
          description: 'TODO: add description for "format"?'
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: collection
          in: query
          required: false
          description: STAC Collection ID
          schema:
            type: string
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: pixelSelection
          in: query
          required: false
          description: Pixel selection method.
          schema:
            $ref: '#/components/schemas/PixelSelection'
            default: first
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/tiles/{z}/{x}/{y}.{format}:
    get:
      operationId: MosaicsTiles_getZxyFormat
      summary: Tile
      description: Create map tile.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: scale
          in: query
          required: false
          description: 'TODO: add description for "scale"?'
          schema:
            type: integer
            format: int32
            maximum: 4
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: collection
          in: query
          required: false
          description: STAC Collection ID
          schema:
            type: string
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: pixelSelection
          in: query
          required: false
          description: Pixel selection method.
          schema:
            $ref: '#/components/schemas/PixelSelection'
            default: first
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/tiles/{z}/{x}/{y}/assets:
    get:
      operationId: AssetsForTiles_getZxyAssets
      summary: Assets For Tile
      description: Return a list of assets which overlap a given tile
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: Return list of assets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/tiles/{z}/{x}/{y}@{scale}x:
    get:
      operationId: MosaicsTiles_getZxyScalex
      summary: Tile
      description: Create map tile.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: scale
          in: path
          required: true
          description: 'TODO: add description for "scale"'
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: format
          in: query
          required: false
          description: 'TODO: add description for "format"?'
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: collection
          in: query
          required: false
          description: STAC Collection ID
          schema:
            type: string
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: pixelSelection
          in: query
          required: false
          description: Pixel selection method.
          schema:
            $ref: '#/components/schemas/PixelSelection'
            default: first
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/tiles/{z}/{x}/{y}@{scale}x.{format}:
    get:
      operationId: MosaicsTiles_getZxyScalexFormat
      summary: Tile
      description: Create map tile.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: scale
          in: path
          required: true
          description: 'TODO: add description for "scale"'
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: format
          in: path
          required: true
          description: 'TODO: add description for "format"'
          schema:
            $ref: '#/components/schemas/ImageType'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: z
          in: path
          required: true
          description: |-
            Identifier (Z) selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: x
          in: path
          required: true
          description: |-
            Column (X) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixHeight-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: 'y'
          in: path
          required: true
          description: |-
            Row (Y) index of the tile on the selected TileMatrix. It cannot exceed the
            MatrixWidth-1 for the selected TileMatrix.
          schema:
            type: string
            pattern: ^[-+]?[0-9]+$
            maxLength: 500
        - name: tileMatrixSetId
          in: query
          required: false
          description: |-
            Identifier selecting one of the TileMatrixSetId supported (default:
            'WebMercatorQuad')
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
            default: WebMercatorQuad
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: collection
          in: query
          required: false
          description: STAC Collection ID
          schema:
            type: string
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: pixelSelection
          in: query
          required: false
          description: Pixel selection method.
          schema:
            $ref: '#/components/schemas/PixelSelection'
            default: first
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: Return an image.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            image/jp2:
              schema:
                type: string
                format: binary
            image/tiff; application=geotiff:
              schema:
                type: string
                format: binary
            application/x-binary:
              schema:
                type: string
                format: binary
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/{lon},{lat}/assets:
    get:
      operationId: AssetsForPoints_getLonLatAssets
      summary: Assets For Point
      description: Return a list of assets for a given point.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: lon
          in: path
          required: true
          description: Longitude
          schema:
            type: string
            pattern: '[+-]?([0-9]*[.])?[0-9]+'
            maxLength: 500
        - name: lat
          in: path
          required: true
          description: Latitude
          schema:
            type: string
            pattern: '[+-]?([0-9]*[.])?[0-9]+'
            maxLength: 500
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: coord-crs
          in: query
          required: false
          description: Coordinate Reference System of the input coords. Default to `epsg:4326`.
          schema:
            type: string
          explode: false
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: Return list of assets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/{tileMatrixSetId}/WMTSCapabilities.xml:
    get:
      operationId: WmtsMosaicsTileMatrixSets_getCapabilitiesXml
      summary: Wmts Tilematrixsetid As Path
      description: OGC WMTS endpoint.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: tileFormat
          in: query
          required: false
          description: Output image type. Default is png.
          schema:
            $ref: '#/components/schemas/ImageType'
            default: png
          explode: false
        - name: tileScale
          in: query
          required: false
          description: 'Tile size scale. 1=256x256, 2=512x512...TODO: add description for "tileScale"?'
          schema:
            type: integer
            format: int32
            maximum: 4
            exclusiveMaximum: true
            default: 1
          explode: false
        - name: minzoom
          in: query
          required: false
          description: Overwrite default minzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: maxzoom
          in: query
          required: false
          description: Overwrite default maxzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: accept
          in: header
          required: true
          description: Accept header
          schema:
            type: string
            enum:
              - application/xml
      responses:
        '200':
          description: Successful Response
          content:
            application/xml:
              schema:
                type: string
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/mosaic/{searchid}/{tileMatrixSetId}/tilejson.json:
    get:
      operationId: TileJsonMosaicsTileMatrixSets_get
      summary: Tilejson Tilematrixsetid As Path
      description: Return TileJSON document for a SearchId.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: tileMatrixSetId
          in: path
          required: true
          description: Identifier selecting one of the TileMatrixSetId supported
          schema:
            $ref: '#/components/schemas/Tilematrixsetid'
        - name: searchid
          in: path
          required: true
          description: Search Id (pgSTAC Search Hash)
          schema:
            type: string
            pattern: .*
            maxLength: 500
        - name: tileFormat
          in: query
          required: false
          description: |-
            Default will be automatically defined if the output image needs a mask (png) or
            not (jpeg).
          schema:
            $ref: '#/components/schemas/ImageType'
          explode: false
        - name: tileScale
          in: query
          required: false
          description: 'Tile size scale. 1=256x256, 2=512x512...TODO: add description for "tileScale"?'
          schema:
            type: integer
            format: int32
            maximum: 4
            exclusiveMaximum: true
          explode: false
        - name: minzoom
          in: query
          required: false
          description: Overwrite default minzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: maxzoom
          in: query
          required: false
          description: Overwrite default maxzoom.
          schema:
            type: integer
            format: int32
          explode: false
        - name: buffer
          in: query
          required: false
          description: |-
            Buffer on each side of the given tile. It must be a multiple of `0.5`. Output
            **tilesize** will be expanded to `tilesize + 2 * buffer` (e.g 0.5 = 257x257,
            1.0 = 258x258).
          schema:
            type: number
            format: float
          explode: false
        - name: colorFormula
          in: query
          required: false
          description: 'rio-color formula (info: https://github.com/mapbox/rio-color)'
          schema:
            type: string
          explode: false
        - name: assets
          in: query
          required: false
          description: Asset's names.
          schema:
            type: array
            items:
              type: string
        - name: expression
          in: query
          required: false
          description: Band math expression between assets
          schema:
            type: string
          explode: false
        - name: assetBidx
          in: query
          required: false
          description: Per asset band indexes (coma separated indexes)
          schema:
            type: array
            items:
              type: string
        - name: assetAsBand
          in: query
          required: false
          description: Asset as Band
          schema:
            type: boolean
          explode: false
        - name: collection
          in: query
          required: false
          description: STAC Collection ID
          schema:
            type: string
          explode: false
        - name: nodata
          in: query
          required: false
          description: Overwrite internal Nodata value
          schema:
            type: string
          explode: false
        - name: unscale
          in: query
          required: false
          description: Apply internal Scale or Offset
          schema:
            type: boolean
          explode: false
        - name: resampling
          in: query
          required: false
          description: Resampling method.
          schema:
            $ref: '#/components/schemas/Resampling'
            default: nearest
          explode: false
        - name: pixelSelection
          in: query
          required: false
          description: Pixel selection method.
          schema:
            $ref: '#/components/schemas/PixelSelection'
            default: first
          explode: false
        - name: algorithm
          in: query
          required: false
          description: Algorithm name
          schema:
            $ref: '#/components/schemas/Algorithm'
          explode: false
        - name: algorithmParams
          in: query
          required: false
          description: Algorithm parameter
          schema:
            type: string
          explode: false
        - name: rescale
          in: query
          required: false
          description: comma (',') delimited Min,Max range. Can set multiple time for multiple bands.
          schema:
            type: array
            items:
              type: string
        - name: colormapName
          in: query
          required: false
          description: Colormap name
          schema:
            $ref: '#/components/schemas/ColorMapNames'
          explode: false
        - name: colormap
          in: query
          required: false
          description: JSON encoded custom Colormap
          schema:
            type: string
          explode: false
        - name: returnMask
          in: query
          required: false
          description: Add mask to the output data.
          schema:
            type: boolean
            default: true
          explode: false
        - name: scanLimit
          in: query
          required: false
          description: Return as soon as we scan N items (defaults to 10000 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: itemsLimit
          in: query
          required: false
          description: Return as soon as we have N items per geometry (defaults to 100 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: timeLimit
          in: query
          required: false
          description: Return after N seconds to avoid long requests (defaults to 5 in PgSTAC).
          schema:
            type: integer
            format: int32
          explode: false
        - name: exitwhenfull
          in: query
          required: false
          description: Return as soon as the geometry is fully covered (defaults to True in PgSTAC).
          schema:
            type: boolean
          explode: false
        - name: skipcovered
          in: query
          required: false
          description: |-
            Skip any items that would show up completely under the previous items (defaults
            to True in PgSTAC).
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TileJson'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tiles for STAC Collections Mosaics
  /api/queryables:
    get:
      operationId: Queryables_getAll
      summary: Queryables
      description: Endpoint.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
  /api/search:
    get:
      operationId: SearchOperations_get
      summary: Search
      description: Endpoint.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: collections
          in: query
          required: false
          description: 'TODO: add description for "collections"?'
          schema:
            type: string
          explode: false
        - name: ids
          in: query
          required: false
          description: 'TODO: add description for "ids"?'
          schema:
            type: string
          explode: false
        - name: bbox
          in: query
          required: false
          description: 'TODO: add description for "bbox"?'
          schema:
            type: string
          explode: false
        - name: intersects
          in: query
          required: false
          description: 'TODO: add description for "intersects"?'
          schema:
            type: string
          explode: false
        - name: datetime
          in: query
          required: false
          description: 'TODO: add description for "datetime"?'
          schema:
            type: string
          explode: false
        - name: limit
          in: query
          required: false
          description: 'TODO: add description for "limit"?'
          schema:
            type: integer
            format: int32
            default: 250
          explode: false
        - name: sign
          in: query
          required: false
          description: 'TODO: add description for "sign"?'
          schema:
            type: boolean
          explode: false
        - name: duration
          in: query
          required: false
          description: 'TODO: add description for "duration"?'
          schema:
            type: integer
            format: int32
          explode: false
        - name: query
          in: query
          required: false
          description: 'TODO: add description for "query"?'
          schema:
            type: string
          explode: false
        - name: sortby
          in: query
          required: false
          description: 'TODO: add description for "sortby"?'
          schema:
            type: string
          explode: false
        - name: fields
          in: query
          required: false
          description: 'TODO: add description for "fields"?'
          schema:
            type: string
          explode: false
        - name: filter
          in: query
          required: false
          description: 'TODO: add description for "filter"?'
          schema:
            type: string
          explode: false
        - name: token
          in: query
          required: false
          description: 'TODO: add description for "token"?'
          schema:
            type: string
          explode: false
        - name: accept
          in: header
          required: true
          description: Accept header
          schema:
            type: string
            enum:
              - application/geo+json
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
    post:
      operationId: SearchOperations_create
      summary: Search
      description: Endpoint.
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: accept
          in: header
          required: true
          description: Accept header
          schema:
            type: string
            enum:
              - application/geo+json
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - SpatioTemporal Asset Catalog (STAC) API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPostRequest'
        description: 'TODO: add description for "body"'
  /api/tile-matrix-sets:
    get:
      operationId: MatrixList_get
      summary: Matrix List
      description: Matrix List
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tile Matrix Sets
  /api/tile-matrix-sets/{tileMatrixSetId}:
    get:
      operationId: MatrixDefinitions_get
      summary: Matrix Definition
      description: Matrix Definition
      parameters:
        - $ref: '#/components/parameters/Azure.Core.Foundations.ApiVersionParameter'
        - name: tileMatrixSetId
          in: path
          required: true
          description: 'TODO: add description for "tileMatrixSetId"'
          schema:
            type: string
            pattern: .*
            maxLength: 500
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TileMatrixSet'
        default:
          description: An unexpected error response.
          headers:
            x-ms-error-code:
              required: false
              description: String error code indicating what went wrong.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Azure.Core.Foundations.ErrorResponse'
      tags:
        - Tile Matrix Sets
security:
  - BearerAuth: []
components:
  parameters:
    Azure.Core.Foundations.ApiVersionParameter:
      name: api-version
      in: query
      required: true
      description: The API version to use for this operation.
      schema:
        type: string
        minLength: 1
      explode: false
    CollectionParameters.collectionId:
      name: collectionId
      in: path
      required: true
      description: Catalog collection id
      schema:
        type: string
        pattern: .*
        maxLength: 500
    IngestionSources.IngestionSourceParameters:
      name: id
      in: path
      required: true
      description: Ingestion source id
      schema:
        type: string
        pattern: ^[a-zA-Za0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$
        maxLength: 500
    Ingestions.IngestionParameters.ingestionId:
      name: ingestionId
      in: path
      required: true
      description: Ingestion id
      schema:
        type: string
        pattern: ^[a-zA-Za0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$
        maxLength: 500
    Ingestions.Runs.IngestionRunParameters.runId:
      name: runId
      in: path
      required: true
      description: Run id
      schema:
        type: string
        pattern: ^[a-zA-Za0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$
        maxLength: 500
    OdataQuery.skip:
      name: $skip
      in: query
      required: false
      description: The number of items to skip
      schema:
        type: integer
        format: int64
      explode: false
    OdataQuery.top:
      name: $top
      in: query
      required: false
      description: The number of items to return
      schema:
        type: integer
        format: int64
      explode: false
  schemas:
    Algorithm:
      anyOf:
        - type: string
        - type: string
          enum:
            - hillshade
            - contours
            - normalizedIndex
            - terrarium
            - terrainrgb
      description: 'Algorithm nameTODO: add description for Algorithm'
    Asset:
      type: object
      required:
        - href
      properties:
        title:
          type: string
          description: 'TitleTODO: add description for title'
        description:
          type: string
          description: 'DescriptionTODO: add description for description'
        start_datetime:
          type: string
          format: date-time
          description: 'Start DatetimeTODO: add description for startDatetime'
        end_datetime:
          type: string
          format: date-time
          description: 'End DatetimeTODO: add description for endDatetime'
        created:
          type: string
          format: date-time
          description: 'CreatedTODO: add description for created'
        updated:
          type: string
          format: date-time
          description: 'UpdatedTODO: add description for updated'
        platform:
          type: string
          description: 'PlatformTODO: add description for platform'
        instruments:
          type: array
          items:
            type: string
          description: 'InstrumentsTODO: add description for instruments'
        constellation:
          type: string
          description: 'ConstellationTODO: add description for constellation'
        mission:
          type: string
          description: 'MissionTODO: add description for mission'
        providers:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
          description: 'ProvidersTODO: add description for providers'
        gsd:
          type: number
          format: float
          description: 'GsdTODO: add description for gsd'
        href:
          type: string
          minLength: 1
          description: 'HrefTODO: add description for href'
        type:
          type: string
          description: 'TypeTODO: add description for type'
        roles:
          type: array
          items:
            type: string
          description: 'RolesTODO: add description for roles'
      description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/item-spec/item-spec.md#asset-objectTODO: add description for Asset'
    AuthConfig:
      type: object
      required:
        - authn_app_id
        - tenant_id
        - instance
      properties:
        authn_app_id:
          type: string
          description: 'Authn App IdTODO: add description for authnAppId'
        tenant_id:
          type: string
          description: 'Tenant IdTODO: add description for tenantId'
        instance:
          type: string
          format: uri
          description: 'InstanceTODO: add description for instance'
        redirect_uri:
          type: string
          format: uri
          description: 'Redirect UriTODO: add description for redirectUri'
      description: 'Configuration for MSAL authentication in frontend application.TODO: add description for AuthConfig'
    AzMapsClientId:
      type: object
      required:
        - client_id
      properties:
        client_id:
          type: string
          description: 'Client IdTODO: add description for clientId'
      description: 'AzMapsClientIdTODO: add description for AzMapsClientId'
    AzMapsToken:
      type: object
      required:
        - token
        - expires_on
      properties:
        token:
          type: string
          description: 'TokenTODO: add description for token'
        expires_on:
          type: integer
          format: int32
          description: 'Expires OnTODO: add description for expiresOn'
      description: 'AzMapsTokenTODO: add description for AzMapsToken'
    Azure.Core.Foundations.Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        message:
          type: string
          description: A human-readable representation of the error.
        target:
          type: string
          description: The target of the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: An array of details about specific errors that led to this reported error.
        innererror:
          allOf:
            - $ref: '#/components/schemas/Azure.Core.Foundations.InnerError'
          description: An object containing more specific information than the current object about the error.
      description: The error object.
    Azure.Core.Foundations.ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          allOf:
            - $ref: '#/components/schemas/Azure.Core.Foundations.Error'
          description: The error object.
      description: A response containing error details.
    Azure.Core.Foundations.InnerError:
      type: object
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
        innererror:
          allOf:
            - $ref: '#/components/schemas/Azure.Core.Foundations.InnerError'
          description: Inner error.
      description: An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
    BadRequest:
      type: object
      required:
        - title
        - status
        - errors
      properties:
        title:
          type: string
          description: 'TODO: add description for type'
        detail:
          type: string
          description: 'TODO: add description for detail'
        status:
          type: integer
          format: int64
          description: 'TODO: add description for status'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: 'TODO: add description for errors'
      description: Validation error
    BandStatistics:
      type: object
      required:
        - min
        - max
        - mean
        - count
        - sum
        - std
        - median
        - majority
        - minority
        - unique
        - histogram
        - valid_percent
        - masked_pixels
        - valid_pixels
      properties:
        min:
          type: number
          format: float
          description: 'MinTODO: add description for min'
        max:
          type: number
          format: float
          description: 'MaxTODO: add description for max'
        mean:
          type: number
          format: float
          description: 'MeanTODO: add description for mean'
        count:
          type: number
          format: float
          description: 'CountTODO: add description for count'
        sum:
          type: number
          format: float
          description: 'SumTODO: add description for sum'
        std:
          type: number
          format: float
          description: 'StdTODO: add description for std'
        median:
          type: number
          format: float
          description: 'MedianTODO: add description for median'
        majority:
          type: number
          format: float
          description: 'MajorityTODO: add description for majority'
        minority:
          type: number
          format: float
          description: 'MinorityTODO: add description for minority'
        unique:
          type: number
          format: float
          description: 'UniqueTODO: add description for unique'
        histogram:
          type: array
          items:
            type: array
            items:
              type: string
          description: 'HistogramTODO: add description for histogram'
        valid_percent:
          type: number
          format: float
          description: 'Valid PercentTODO: add description for validPercent'
        masked_pixels:
          type: number
          format: float
          description: 'Masked PixelsTODO: add description for maskedPixels'
        valid_pixels:
          type: number
          format: float
          description: 'Valid PixelsTODO: add description for validPixels'
      description: 'Band statisticsTODO: add description for BandStatistics'
    BodyCreateCollectionAsset:
      type: object
      required:
        - file
        - data
      properties:
        file:
          type: string
          format: byte
          description: 'FileTODO: add description for file'
        data:
          type: string
          description: 'DataTODO: add description for data'
      description: 'Body_create_collection_assetTODO: add description for BodyCreateCollectionAsset'
    BodyUpdateCollectionAsset:
      type: object
      required:
        - data
      properties:
        file:
          type: string
          format: byte
          description: 'FileTODO: add description for file'
        data:
          type: string
          description: 'DataTODO: add description for data'
      description: 'Body_update_collection_assetTODO: add description for BodyUpdateCollectionAsset'
    BoundingBox:
      type: object
      required:
        - left
        - bottom
        - right
        - top
      properties:
        left:
          type: string
          description: 'LeftTODO: add description for left'
        bottom:
          type: string
          description: 'BottomTODO: add description for bottom'
        right:
          type: string
          description: 'RightTODO: add description for right'
        top:
          type: string
          description: 'TopTODO: add description for top'
      description: 'BoundingBoxTODO: add description for BoundingBox'
    Bounds:
      type: object
      required:
        - bounds
      properties:
        bounds:
          type: array
          items:
            type: string
          description: 'BoundsTODO: add description for bounds'
      description: 'Dataset Bounding boxTODO: add description for Bounds'
    Collection:
      type: object
      required:
        - id
        - description
        - links
        - license
        - extent
      properties:
        id:
          type: string
          minLength: 1
          description: 'IdTODO: add description for id'
        description:
          type: string
          minLength: 1
          description: 'DescriptionTODO: add description for description'
        stac_version:
          type: string
          minLength: 1
          description: Stac Version
          default: 1.0.0
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinksItem'
          description: 'LinksTODO: add description for links'
        stac_extensions:
          type: array
          items:
            type: string
            format: uri
          description: 'Stac ExtensionsTODO: add description for stacExtensions'
        title:
          type: string
          description: 'TitleTODO: add description for title'
        type:
          type: string
          minLength: 1
          description: Type
          default: Collection
        assets:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Asset'
          description: Assets
        license:
          type: string
          minLength: 1
          description: 'LicenseTODO: add description for license'
        extent:
          allOf:
            - $ref: '#/components/schemas/Extent'
          description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#extent-objectTODO: add description for extent'
        keywords:
          type: array
          items:
            type: string
          description: 'KeywordsTODO: add description for keywords'
        providers:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
          description: 'ProvidersTODO: add description for providers'
        summaries:
          type: object
          additionalProperties:
            type: string
          description: Summaries
      description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.mdTODO: add description for Collection'
    Collections:
      type: object
      required:
        - links
        - collections
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          description: 'LinksTODO: add description for links'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/Collection'
          description: 'CollectionsTODO: add description for collections'
      description: 'http://docs.opengeospatial.org/is/17-069r3/17-069r3.html#_feature_collections_rootcollectionsTODO: add description for Collections'
    ColorMapNames:
      anyOf:
        - type: string
        - type: string
          enum:
            - accent
            - accent_r
            - afmhot
            - afmhot_r
            - ai4g-lulc
            - alos-fnf
            - alos-palsar-mask
            - autumn
            - autumn_r
            - binary
            - binary_r
            - blues
            - blues_r
            - bone
            - bone_r
            - brbg
            - brbg_r
            - brg
            - brg_r
            - bugn
            - bugn_r
            - bupu
            - bupu_r
            - bwr
            - bwr_r
            - c-cap
            - cfastie
            - chesapeake-lc-13
            - chesapeake-lc-7
            - chesapeake-lu
            - chloris-biomass
            - cividis
            - cividis_r
            - cmrmap
            - cmrmap_r
            - cool
            - cool_r
            - coolwarm
            - coolwarm_r
            - copper
            - copper_r
            - cubehelix
            - cubehelix_r
            - dark2
            - dark2_r
            - drcog-lulc
            - esa-cci-lc
            - esa-worldcover
            - flag
            - flag_r
            - gap-lulc
            - gist_earth
            - gist_earth_r
            - gist_gray
            - gist_gray_r
            - gist_heat
            - gist_heat_r
            - gist_ncar
            - gist_ncar_r
            - gist_rainbow
            - gist_rainbow_r
            - gist_stern
            - gist_stern_r
            - gist_yarg
            - gist_yarg_r
            - gnbu
            - gnbu_r
            - gnuplot
            - gnuplot2
            - gnuplot2_r
            - gnuplot_r
            - gray
            - gray_r
            - greens
            - greens_r
            - greys
            - greys_r
            - hot
            - hot_r
            - hsv
            - hsv_r
            - inferno
            - inferno_r
            - io-bii
            - io-lulc
            - io-lulc-9-class
            - jet
            - jet_r
            - jrc-change
            - jrc-extent
            - jrc-occurrence
            - jrc-recurrence
            - jrc-seasonality
            - jrc-transitions
            - lidar-classification
            - lidar-hag
            - lidar-hag-alternative
            - lidar-intensity
            - lidar-returns
            - magma
            - magma_r
            - modis-10A1
            - modis-10A2
            - modis-13A1|Q1
            - modis-14A1|A2
            - modis-15A2H|A3H
            - modis-16A3GF-ET
            - modis-16A3GF-PET
            - modis-17A2H|A2HGF
            - modis-17A3HGF
            - modis-64A1
            - mtbs-severity
            - nipy_spectral
            - nipy_spectral_r
            - nrcan-lulc
            - ocean
            - ocean_r
            - oranges
            - oranges_r
            - orrd
            - orrd_r
            - paired
            - paired_r
            - pastel1
            - pastel1_r
            - pastel2
            - pastel2_r
            - pink
            - pink_r
            - piyg
            - piyg_r
            - plasma
            - plasma_r
            - prgn
            - prgn_r
            - prism
            - prism_r
            - pubu
            - pubu_r
            - pubugn
            - pubugn_r
            - puor
            - puor_r
            - purd
            - purd_r
            - purples
            - purples_r
            - qpe
            - rainbow
            - rainbow_r
            - rdbu
            - rdbu_r
            - rdgy
            - rdgy_r
            - rdpu
            - rdpu_r
            - rdylbu
            - rdylbu_r
            - rdylgn
            - rdylgn_r
            - reds
            - reds_r
            - rplumbo
            - schwarzwald
            - seismic
            - seismic_r
            - set1
            - set1_r
            - set2
            - set2_r
            - set3
            - set3_r
            - spectral
            - spectral_r
            - spring
            - spring_r
            - summer
            - summer_r
            - tab10
            - tab10_r
            - tab20
            - tab20_r
            - tab20b
            - tab20b_r
            - tab20c
            - tab20c_r
            - terrain
            - terrain_r
            - twilight
            - twilight_r
            - twilight_shifted
            - twilight_shifted_r
            - usda-cdl
            - usda-cdl-corn
            - usda-cdl-cotton
            - usda-cdl-soybeans
            - usda-cdl-wheat
            - usgs-lcmap
            - viirs-10a1
            - viirs-13a1
            - viirs-14a1
            - viirs-15a2H
            - viridis
            - viridis_r
            - winter
            - winter_r
            - wistia
            - wistia_r
            - ylgn
            - ylgn_r
            - ylgnbu
            - ylgnbu_r
            - ylorbr
            - ylorbr_r
            - ylorrd
            - ylorrd_r
      description: 'An enumeration.TODO: add description for ColorMapNames'
    ConformanceClasses:
      type: object
      required:
        - conformsTo
      properties:
        conformsTo:
          type: array
          items:
            type: string
            format: uri
          description: 'ConformstoTODO: add description for conformsTo'
      description: 'https://github.com/radiantearth/stac-api-spec/blob/master/api-spec.md#ogc-api---features-endpointsTODO: add description for ConformanceClasses'
    ContextExtension:
      type: object
      required:
        - returned
      properties:
        returned:
          type: integer
          format: int32
          description: 'ReturnedTODO: add description for returned'
        limit:
          type: integer
          format: int32
          description: 'LimitTODO: add description for limit'
        matched:
          type: integer
          format: int32
          description: 'MatchedTODO: add description for matched'
      description: 'https://github.com/radiantearth/stac-api-spec/tree/master/extensions/context#context-extension-specificationTODO: add description for ContextExtension'
    CrsUri:
      type: object
      required:
        - uri
      properties:
        uri:
          type: string
          format: uri
          description: 'Reference to one coordinate reference system (CRS) as URITODO: add description for uri'
      description: 'Coordinate Reference System (CRS) from URI.TODO: add description for CRSUri'
    Crswkt:
      type: object
      required:
        - wkt
      properties:
        wkt:
          type: string
          description: 'Reference to one coordinate reference system (CRS) as WKT stringTODO: add description for wkt'
      description: 'Coordinate Reference System (CRS) from WKT.TODO: add description for Crswkt'
    DataType:
      anyOf:
        - type: string
        - type: string
          enum:
            - number
            - float
            - text
            - array
      description: 'An enumeration.TODO: add description for DataType'
    DefaultLocation:
      type: object
      required:
        - zoom
        - coordinates
      properties:
        zoom:
          type: integer
          format: int32
          description: 'Zoom level at which to center the map.TODO: add description for zoom'
          maximum: 24
          exclusiveMaximum: true
        coordinates:
          type: array
          items:
            type: number
            format: float
          description: 'Coordinates at which to center the map, [latitude, longitude]TODO: add description for coordinates'
      description: 'Defines a default location for showcasing a collection.TODO: add description for DefaultLocation'
    ExportFormats:
      anyOf:
        - type: string
        - type: string
          enum:
            - png
            - cog
      description: |-
        Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')An enumeration.TODO: add description for ExportFormats
    Extent:
      type: object
      required:
        - spatial
        - temporal
      properties:
        spatial:
          allOf:
            - $ref: '#/components/schemas/SpatialExtent'
          description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#spatial-extent-objectTODO: add description for spatial'
        temporal:
          allOf:
            - $ref: '#/components/schemas/TimeInterval'
          description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#temporal-extent-objectTODO: add description for temporal'
      description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#extent-objectTODO: add description for Extent'
    Feature:
      type: object
      required:
        - type
        - geometry
        - properties
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/FeatureType'
          description: 'TypeTODO: add description for type'
        geometry:
          allOf:
            - $ref: '#/components/schemas/FeatureGeometry'
          description: 'GeometryTODO: add description for geometry'
        properties:
          allOf:
            - $ref: '#/components/schemas/FeatureProperties'
          description: 'PropertiesTODO: add description for properties'
        id:
          type: string
          description: 'IdTODO: add description for id'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
      description: 'Feature ModelTODO: add description for Feature'
    FeatureAnnotatedUnionGeojsonPydanticGeometriesPointGeojsonPydanticGeometriesMultiPointGeojsonPydanticGeometriesLineStringGeojsonPydanticGeometriesMultiLineStringGeojsonPydanticGeometriesPolygonGeojsonPydanticGeometriesMultiPolygonFieldInfoDefaultPydanticUndefinedDiscriminatorTypeExtraStatisticsInGeoJsonType:
      anyOf:
        - type: string
        - type: string
          enum:
            - Feature
      description: 'TypeTODO: add description for FeatureAnnotatedUnionGeojsonPydanticGeometriesPointGeojsonPydanticGeometriesMultiPointGeojsonPydanticGeometriesLineStringGeojsonPydanticGeometriesMultiLineStringGeojsonPydanticGeometriesPolygonGeojsonPydanticGeometriesMultiPolygonFieldInfoDefaultPydanticUndefinedDiscriminatorTypeExtraStatisticsInGeoJsonType'
    FeatureCollection:
      type: object
      required:
        - type
        - features
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/FeatureCollectionType'
          description: 'TypeTODO: add description for type'
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          description: 'FeaturesTODO: add description for features'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
      description: 'FeatureCollection ModelTODO: add description for FeatureCollection'
    FeatureCollectionAnnotatedUnionGeojsonPydanticGeometriesPointGeojsonPydanticGeometriesMultiPointGeojsonPydanticGeometriesLineStringGeojsonPydanticGeometriesMultiLineStringGeojsonPydanticGeometriesPolygonGeojsonPydanticGeometriesMultiPolygonFieldInfoDefaultPydanticUndefinedDiscriminatorTypeExtraStatisticsInGeoJsonType:
      anyOf:
        - type: string
        - type: string
          enum:
            - FeatureCollection
      description: 'TypeTODO: add description for FeatureCollectionAnnotatedUnionGeojsonPydanticGeometriesPointGeojsonPydanticGeometriesMultiPointGeojsonPydanticGeometriesLineStringGeojsonPydanticGeometriesMultiLineStringGeojsonPydanticGeometriesPolygonGeojsonPydanticGeometriesMultiPolygonFieldInfoDefaultPydanticUndefinedDiscriminatorTypeExtraStatisticsInGeoJsonType'
    FeatureCollectionType:
      anyOf:
        - type: string
        - type: string
          enum:
            - FeatureCollection
      description: 'TypeTODO: add description for FeatureCollectionType'
    FeatureGeometry:
      type: object
      description: 'GeometryTODO: add description for FeatureGeometry'
    FeaturePolygonDictStrRioTilerModelsInfo:
      type: object
      required:
        - type
        - geometry
        - properties
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/FeaturePolygonDictStrRioTilerModelsInfoType'
          description: 'TypeTODO: add description for type'
        geometry:
          allOf:
            - $ref: '#/components/schemas/Polygon'
          description: 'Polygon ModelTODO: add description for geometry'
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RioTilerModelsInfo'
          description: Properties
        id:
          type: string
          description: 'IdTODO: add description for id'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
      description: 'Feature ModelTODO: add description for FeaturePolygonDictStrRioTilerModelsInfo'
    FeaturePolygonDictStrRioTilerModelsInfoType:
      anyOf:
        - type: string
        - type: string
          enum:
            - Feature
      description: 'TypeTODO: add description for FeaturePolygonDictStrRioTilerModelsInfoType'
    FeatureProperties:
      type: object
      description: 'PropertiesTODO: add description for FeatureProperties'
    FeatureType:
      anyOf:
        - type: string
        - type: string
          enum:
            - Feature
      description: 'TypeTODO: add description for FeatureType'
    FilterLang:
      anyOf:
        - type: string
        - type: string
          enum:
            - cql-json
            - cql2-json
            - cql2-text
      description: |-
        Choices for filter-lang value in a POST request.

        Based on
        https://github.com/stac-api-extensions/filter#queryables

        Note the addition of cql2-json, which is used by the pgstac backend,
        but is not included in the spec above.TODO: add description for FilterLang
    GeoCatalogCollection:
      type: object
      required:
        - type
        - stac_version
        - id
        - description
        - links
        - license
        - extent
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/GeoCatalogCollectionType'
          description: 'TypeTODO: add description for type'
        stac_version:
          type: string
          description: 'Stac VersionTODO: add description for stacVersion'
        id:
          type: string
          description: 'IdTODO: add description for id'
        description:
          type: string
          description: 'DescriptionTODO: add description for description'
        links:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          description: Links
        license:
          type: string
          description: 'LicenseTODO: add description for license'
        extent:
          type: object
          additionalProperties:
            type: string
          description: Extent
        stac_extensions:
          type: array
          items:
            type: string
          description: 'Stac ExtensionsTODO: add description for stacExtensions'
        title:
          type: string
          description: 'TitleTODO: add description for title'
        keywords:
          type: array
          items:
            type: string
          description: 'KeywordsTODO: add description for keywords'
        providers:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          description: Providers
        assets:
          type: object
          additionalProperties:
            type: string
          description: Assets
        summaries:
          type: object
          additionalProperties:
            type: string
          description: Summaries
        msft:short_description:
          type: string
          maxLength: 300
          description: 'Msft:Short DescriptionTODO: add description for msftShortDescription'
      description: 'GeoCatalogCollectionTODO: add description for GeoCatalogCollection'
    GeoCatalogCollectionType:
      anyOf:
        - type: string
        - type: string
          enum:
            - Collection
      description: 'TypeTODO: add description for GeoCatalogCollectionType'
    Geojson:
      type: object
      description: 'GeoJSON Feature or FeatureCollection.TODO: add description for Geojson'
    GeojsonPydanticGeometriesPoint:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/GeojsonPydanticGeometriesPointType'
          description: 'TypeTODO: add description for type'
        coordinates:
          type: string
          description: 'CoordinatesTODO: add description for coordinates'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
      description: 'Point ModelTODO: add description for GeojsonPydanticGeometriesPoint'
    GeojsonPydanticGeometriesPointType:
      anyOf:
        - type: string
        - type: string
          enum:
            - Point
      description: 'TypeTODO: add description for GeojsonPydanticGeometriesPointType'
    GeometryCollection:
      type: object
      required:
        - type
        - geometries
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/GeometryCollectionType'
          description: 'TypeTODO: add description for type'
        geometries:
          type: array
          items:
            $ref: '#/components/schemas/GeometryCollectionGeometriesItem'
          description: 'GeometriesTODO: add description for geometries'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
      description: 'GeometryCollection ModelTODO: add description for GeometryCollection'
    GeometryCollectionGeometriesItem:
      type: object
      description: 'TODO: add description for GeometryCollectionGeometriesItem'
    GeometryCollectionType:
      anyOf:
        - type: string
        - type: string
          enum:
            - GeometryCollection
      description: 'TypeTODO: add description for GeometryCollectionType'
    Guid:
      type: string
      pattern: ^[a-zA-Za0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$
    ImageRequest:
      type: object
      required:
        - cql
        - render_params
        - cols
        - rows
      properties:
        cql:
          type: object
          additionalProperties:
            type: string
          description: Cql
        geometry:
          type: object
          additionalProperties:
            type: string
          description: Geometry
        render_params:
          type: string
          description: 'Render ParamsTODO: add description for renderParams'
        cols:
          type: integer
          format: int32
          description: 'ColsTODO: add description for cols'
        rows:
          type: integer
          format: int32
          description: 'RowsTODO: add description for rows'
        format:
          allOf:
            - $ref: '#/components/schemas/ImageRequestFormat'
          description: 'TODO: add description for format'
          default: png
        showBranding:
          type: boolean
          description: 'ShowbrandingTODO: add description for showBranding'
          default: true
        mask:
          type: boolean
          description: 'MaskTODO: add description for mask'
      description: 'ImageRequestTODO: add description for ImageRequest'
    ImageRequestFormat:
      anyOf:
        - type: string
        - type: string
          enum:
            - png
            - cog
      description: 'TODO: add description for ImageRequestFormat'
    ImageResponse:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: 'UrlTODO: add description for url'
      description: 'ImageResponseTODO: add description for ImageResponse'
    ImageType:
      anyOf:
        - type: string
        - type: string
          enum:
            - png
            - npy
            - tif
            - jpeg
            - jpg
            - jp2
            - webp
            - pngraw
      description: 'Available Output image type.TODO: add description for ImageType'
    IngestionSources.ConnectionInfo:
      type: object
      required:
        - containerUrl
      properties:
        containerUrl:
          type: string
          format: uri
          description: Azure Blob Storage container URL
        objectId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          description: Azure Managed Identity configured in the Geo-Catalog with access to the container
        expiration:
          type: string
          format: date-time
          description: Azure Blob Storage SAS token expiration in UTC format
      description: 'TODO: add description for ConnectionInfo'
    IngestionSources.IngestionSource:
      type: object
      properties:
        sourceType:
          allOf:
            - $ref: '#/components/schemas/IngestionSources.IngestionSourceType'
          description: Ingestion source type
        connectionInfo:
          allOf:
            - $ref: '#/components/schemas/IngestionSources.SasTokenConnectionCreation'
          description: SAS token connection information
        id:
          allOf:
            - $ref: '#/components/schemas/Guid'
          description: Ingestion source id
        created:
          type: string
          format: date-time
          description: Created time in UTC format
      description: 'TODO: add description for IngestionSource'
    IngestionSources.IngestionSourceSummary:
      type: object
      required:
        - id
        - sourceType
        - created
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/Guid'
          description: Ingestion source id
        sourceType:
          allOf:
            - $ref: '#/components/schemas/IngestionSources.IngestionSourceType'
          description: Ingestion source type
        created:
          type: string
          format: date-time
          description: Created time in UTC format
        connectionInfo:
          allOf:
            - $ref: '#/components/schemas/IngestionSources.ConnectionInfo'
          description: Managed identity connection information
      description: 'TODO: add description for IngestionSourceSummary'
    IngestionSources.IngestionSourceType:
      anyOf:
        - type: string
        - type: string
          enum:
            - SasToken
      description: 'TODO: add description for IngestionSourceType'
    IngestionSources.ManagedIdentityConnection:
      type: object
      required:
        - containerUrl
        - objectId
      properties:
        containerUrl:
          type: string
          format: uri
          description: Azure Blob Storage container URL
        objectId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          description: Azure Managed Identity configured in the Geo-Catalog with access to the container
      description: 'TODO: add description for ManagedIdentityConnection'
    IngestionSources.ManagedIdentityMetadata:
      type: object
      required:
        - objectId
        - recourceId
      properties:
        objectId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          description: Object id of the managed identity
        recourceId:
          type: string
          description: ARM path or resource id of the managed identity
      description: 'TODO: add description for ManagedIdentityMetadata'
    IngestionSources.SasTokenConnection:
      type: object
      required:
        - containerUrl
        - expiration
      properties:
        containerUrl:
          type: string
          format: uri
          description: Azure Blob Storage container URL
        expiration:
          type: string
          format: date-time
          description: Azure Blob Storage SAS token expiration in UTC format
      description: 'TODO: add description for SasTokenConnection'
    IngestionSources.SasTokenConnectionCreation:
      type: object
      required:
        - containerUrl
        - sasToken
      properties:
        containerUrl:
          type: string
          format: uri
          description: Azure Blob Storage container URL
        sasToken:
          type: string
          description: Azure Blob Storage SAS token SAS token
      description: 'TODO: add description for SasTokenConnectionCreation'
    IngestionSources.SasTokenIngestionSourceCreation:
      type: object
      required:
        - sourceType
        - connectionInfo
      properties:
        sourceType:
          allOf:
            - $ref: '#/components/schemas/IngestionSources.IngestionSourceType'
          description: Ingestion source type
        connectionInfo:
          allOf:
            - $ref: '#/components/schemas/IngestionSources.SasTokenConnectionCreation'
          description: SAS token connection information
      description: 'TODO: add description for SasTokenIngestionSourceCreation'
    Ingestions.IngestionDefinition:
      type: object
      required:
        - importType
        - ingestionId
        - creationTime
        - status
      properties:
        importType:
          allOf:
            - $ref: '#/components/schemas/Ingestions.IngestionType'
          description: Ingestion type
        displayName:
          type: string
          description: Ingestion name
        sourceCatalogUrl:
          type: string
          format: uri
          description: Source catalog URL. *Required for StaticCatalog ingestion type
        geoparquetUrl:
          type: string
          format: uri
          description: Parquet catalog URL. *Required for StacGeoparquet ingestion type
        skipExistingItems:
          type: boolean
          description: Skip processing existing items in the catalog
        keepOriginalAssets:
          type: boolean
          description: Keep original source assets
        ingestionId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          description: Ingestion id
        creationTime:
          type: string
          format: date-time
          description: Ingestion creation time
        status:
          allOf:
            - $ref: '#/components/schemas/Ingestions.IngestionStatus'
          description: Ingestion status
      description: Spatio geo-catalog ingestion definition
    Ingestions.IngestionDefinitionCreation:
      type: object
      required:
        - importType
      properties:
        importType:
          allOf:
            - $ref: '#/components/schemas/Ingestions.IngestionType'
          description: Ingestion type
        displayName:
          type: string
          description: Ingestion name
        sourceCatalogUrl:
          type: string
          format: uri
          description: Source catalog URL. *Required for StaticCatalog ingestion type
        geoparquetUrl:
          type: string
          format: uri
          description: Parquet catalog URL. *Required for StacGeoparquet ingestion type
        skipExistingItems:
          type: boolean
          description: Skip processing existing items in the catalog
        keepOriginalAssets:
          type: boolean
          description: Keep original source assets
      description: Spatio geo-catalog ingestion creation model
    Ingestions.IngestionStatus:
      anyOf:
        - type: string
        - type: string
          enum:
            - Ready
            - Deleting
      description: 'TODO: add description for IngestionStatus'
    Ingestions.IngestionType:
      anyOf:
        - type: string
        - type: string
          enum:
            - StaticCatalog
            - StacGeoparquet
      description: 'TODO: add description for IngestionType'
    Ingestions.PatchRequest:
      type: object
      properties:
        displayName:
          type: string
          description: Ingestion name
        sourceCatalogUrl:
          type: string
          format: uri
          description: Source catalog URL
        stacGeoparquetUrl:
          type: string
          format: uri
          description: Parquet catalog URL. *Required for StacGeoparquet ingestion type
        skipExistingItems:
          type: boolean
          description: Skip processing existing items in the catalog
        keepOriginalAssets:
          type: boolean
          description: Keep original source assets
      description: 'TODO: add description for PatchRequest'
    Ingestions.Runs.IngestionRun:
      type: object
      required:
        - runId
        - creationTime
        - sourceCatalogUrl
        - skipExistingItems
        - keepOriginalAssets
        - operation
      properties:
        runId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          description: Run id
        creationTime:
          type: string
          format: date-time
          description: Run creation time
        sourceCatalogUrl:
          type: string
          format: uri
          description: Source catalog URL
        skipExistingItems:
          type: boolean
          description: Skip existing items
        keepOriginalAssets:
          type: boolean
          description: Keep original assets
        operation:
          allOf:
            - $ref: '#/components/schemas/Operation'
          description: Operation
      description: Spatio geo-catalog ingestion run
    Item:
      type: object
      required:
        - type
        - geometry
        - properties
        - id
        - assets
        - links
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/ItemType'
          description: 'TypeTODO: add description for type'
        geometry:
          allOf:
            - $ref: '#/components/schemas/ItemGeometry'
          description: 'GeometryTODO: add description for geometry'
        properties:
          allOf:
            - $ref: '#/components/schemas/ItemProperties'
          description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/item-spec/item-spec.md#properties-objectTODO: add description for properties'
        id:
          type: string
          minLength: 1
          description: 'IdTODO: add description for id'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
        stac_version:
          type: string
          minLength: 1
          description: Stac Version
          default: 1.0.0
        assets:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Asset'
          description: Assets
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinksItem'
          description: 'LinksTODO: add description for links'
        stac_extensions:
          type: array
          items:
            type: string
            format: uri
          description: 'Stac ExtensionsTODO: add description for stacExtensions'
        collection:
          type: string
          description: 'CollectionTODO: add description for collection'
      description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/item-spec/item-spec.mdTODO: add description for Item'
    ItemCollection:
      type: object
      required:
        - type
        - features
        - links
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/ItemCollectionType'
          description: 'TypeTODO: add description for type'
        features:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          description: 'FeaturesTODO: add description for features'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
        stac_version:
          type: string
          minLength: 1
          description: Stac Version
          default: 1.0.0
        stac_extensions:
          type: array
          items:
            type: string
            format: uri
          description: 'Stac ExtensionsTODO: add description for stacExtensions'
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinksItem'
          description: 'LinksTODO: add description for links'
        context:
          allOf:
            - $ref: '#/components/schemas/ContextExtension'
          description: 'https://github.com/radiantearth/stac-api-spec/tree/master/extensions/context#context-extension-specificationTODO: add description for context'
      description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/item-spec/itemcollection-spec.mdTODO: add description for ItemCollection'
    ItemCollectionType:
      anyOf:
        - type: string
        - type: string
          enum:
            - FeatureCollection
      description: 'TypeTODO: add description for ItemCollectionType'
    ItemGeometry:
      type: object
      description: 'GeometryTODO: add description for ItemGeometry'
    ItemProperties:
      type: object
      required:
        - datetime
      properties:
        title:
          type: string
          description: 'TitleTODO: add description for title'
        description:
          type: string
          description: 'DescriptionTODO: add description for description'
        start_datetime:
          type: string
          format: date-time
          description: 'Start DatetimeTODO: add description for startDatetime'
        end_datetime:
          type: string
          format: date-time
          description: 'End DatetimeTODO: add description for endDatetime'
        created:
          type: string
          format: date-time
          description: 'CreatedTODO: add description for created'
        updated:
          type: string
          format: date-time
          description: 'UpdatedTODO: add description for updated'
        platform:
          type: string
          description: 'PlatformTODO: add description for platform'
        instruments:
          type: array
          items:
            type: string
          description: 'InstrumentsTODO: add description for instruments'
        constellation:
          type: string
          description: 'ConstellationTODO: add description for constellation'
        mission:
          type: string
          description: 'MissionTODO: add description for mission'
        providers:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
          description: 'ProvidersTODO: add description for providers'
        gsd:
          type: number
          format: float
          description: 'GsdTODO: add description for gsd'
        datetime:
          type: string
          description: 'DatetimeTODO: add description for datetime'
      description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/item-spec/item-spec.md#properties-objectTODO: add description for ItemProperties'
    ItemType:
      anyOf:
        - type: string
        - type: string
          enum:
            - Feature
      description: 'TypeTODO: add description for ItemType'
    Items.Link:
      type: object
      required:
        - rel
        - href
        - type
        - title
      properties:
        rel:
          type: string
          description: 'TODO: add description for rel'
        href:
          type: string
          description: 'TODO: add description for href'
        type:
          type: string
          description: 'TODO: add description for type'
        title:
          type: string
          description: 'TODO: add description for title'
      description: 'TODO: add description for Link'
    Items.Properties:
      type: object
      required:
        - datetime
      properties:
        datetime:
          type: string
          description: 'TODO: add description for datetime'
      description: 'TODO: add description for Properties'
    Items.PropertiesUpdate:
      type: object
      properties:
        datetime:
          type: string
          description: 'TODO: add description for datetime'
      description: 'TODO: add description for Properties'
    Items.StacItem:
      type: object
      required:
        - type
        - stacVersion
        - stacExtensions
        - id
        - geometry
        - bbox
        - properties
        - assets
        - links
        - collection
      properties:
        type:
          type: string
          description: 'TODO: add description for type'
        stacVersion:
          type: string
          description: 'TODO: add description for stacVersion'
        stacExtensions:
          type: array
          items:
            type: string
          description: 'TODO: add description for stacExtensions'
        id:
          type: string
          description: 'TODO: add description for id'
        geometry:
          type: string
          description: 'TODO: add description for geometry'
        bbox:
          type: array
          items:
            type: integer
            format: int32
          description: 'TODO: add description for bbox'
        properties:
          allOf:
            - $ref: '#/components/schemas/Items.Properties'
          description: 'TODO: add description for properties'
        assets:
          type: string
          description: 'TODO: add description for assets'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Items.Link'
          description: 'TODO: add description for links'
        collection:
          type: string
          description: 'TODO: add description for collection'
      description: 'TODO: add description for STACItem'
    Items.StacItemCollection:
      type: object
      required:
        - type
        - features
        - links
      properties:
        type:
          type: string
          description: 'TODO: add description for type'
        features:
          type: array
          items:
            $ref: '#/components/schemas/Items.StacItem'
          description: 'TODO: add description for features'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Items.Link'
          description: 'TODO: add description for links'
        stacVersion:
          type: string
          description: 'TODO: add description for stacVersion'
        numberMatched:
          type: integer
          format: int64
          description: 'TODO: add description for numberMatched'
        numberReturned:
          type: integer
          format: int64
          description: 'TODO: add description for numberReturned'
      description: 'TODO: add description for STACItemCollection'
    Items.StacPostOrPutItem:
      type: object
      required:
        - type
        - stacVersion
        - stacExtensions
        - id
        - geometry
        - bbox
        - properties
        - assets
        - links
        - collection
      properties:
        type:
          type: string
          description: 'TODO: add description for type'
        stacVersion:
          type: string
          description: 'TODO: add description for stacVersion'
        stacExtensions:
          type: array
          items:
            type: string
          description: 'TODO: add description for stacExtensions'
        id:
          type: string
          description: 'TODO: add description for id'
        geometry:
          type: string
          description: 'TODO: add description for geometry'
        bbox:
          type: array
          items:
            type: integer
            format: int32
          description: 'TODO: add description for bbox'
        properties:
          allOf:
            - $ref: '#/components/schemas/Items.Properties'
          description: 'TODO: add description for properties'
        assets:
          type: string
          description: 'TODO: add description for assets'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Items.Link'
          description: 'TODO: add description for links'
        collection:
          type: string
          description: 'TODO: add description for collection'
      description: 'TODO: add description for STACPostOrPutItem'
    Items.StacPostOrPutItemCollection:
      type: object
      required:
        - type
        - features
      properties:
        type:
          type: string
          description: 'TODO: add description for type'
        features:
          type: array
          items:
            $ref: '#/components/schemas/Items.StacItem'
          description: 'TODO: add description for features'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Items.Link'
          description: 'TODO: add description for links'
        stacVersion:
          type: string
          description: 'TODO: add description for stacVersion'
        numberMatched:
          type: integer
          format: int64
          description: 'TODO: add description for numberMatched'
        numberReturned:
          type: integer
          format: int64
          description: 'TODO: add description for numberReturned'
      description: 'TODO: add description for STACPostOrPutItemCollection'
    Items.StacPostOrPutItemUpdate:
      type: object
      properties:
        type:
          type: string
          description: 'TODO: add description for type'
        stacVersion:
          type: string
          description: 'TODO: add description for stacVersion'
        stacExtensions:
          type: array
          items:
            type: string
          description: 'TODO: add description for stacExtensions'
        id:
          type: string
          description: 'TODO: add description for id'
        geometry:
          type: string
          description: 'TODO: add description for geometry'
        bbox:
          type: array
          items:
            type: integer
            format: int32
          description: 'TODO: add description for bbox'
        properties:
          allOf:
            - $ref: '#/components/schemas/Items.PropertiesUpdate'
          description: 'TODO: add description for properties'
        assets:
          type: string
          description: 'TODO: add description for assets'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Items.Link'
          description: 'TODO: add description for links'
        collection:
          type: string
          description: 'TODO: add description for collection'
      description: 'TODO: add description for STACPostOrPutItem'
    LandingPage:
      type: object
      required:
        - id
        - description
        - conformsTo
        - links
      properties:
        id:
          type: string
          minLength: 1
          description: 'IdTODO: add description for id'
        description:
          type: string
          minLength: 1
          description: 'DescriptionTODO: add description for description'
        title:
          type: string
          description: 'TitleTODO: add description for title'
        stac_version:
          type: string
          description: Stac Version
          default: 1.0.0
        stac_extensions:
          type: array
          items:
            type: string
            format: uri
          description: 'Stac ExtensionsTODO: add description for stacExtensions'
        conformsTo:
          type: array
          items:
            type: string
            format: uri
          description: 'ConformstoTODO: add description for conformsTo'
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinksItem'
          description: 'LinksTODO: add description for links'
        type:
          type: string
          minLength: 1
          description: Type
          default: Catalog
      description: 'https://github.com/radiantearth/stac-api-spec/blob/master/api-spec.md#ogc-api---features-endpointsTODO: add description for LandingPage'
    LegendConfig:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/LegendConfigType'
          description: |-
            Legend type to make,
             one of: `continuous`,
             `classmap`,
             `interval` or `none`
            (note, `none` is a string literal).TODO: add description for type
        labels:
          type: array
          items:
            type: string
          description: 'List of string labels that will be flex spaced-between under the legend image.TODO: add description for labels'
        trimStart:
          type: integer
          format: int32
          description: |-
            The number of items to trim from the start of the legend definition. Used if
            there are values important for rendering (e.g. nodata) that aren't desirable in
            the legend.TODO: add description for trimStart
        trimEnd:
          type: integer
          format: int32
          description: 'Same as trim_start, but for the end of the legend definition.TODO: add description for trimEnd'
        scaleFactor:
          type: number
          format: float
          description: |-
            A factor to multiply interval legend labels by. Useful for scaled rasters whose
            colormap definitions map to unscaled values, effectively showing legend labels
            as scaled values.TODO: add description for scaleFactor
      description: 'Defines settings to customize legend generation.TODO: add description for LegendConfig'
    LegendConfigType:
      anyOf:
        - type: string
        - type: string
          enum:
            - continuous
            - classmap
            - interval
            - none
      description: |-
        Legend type to make,
         one of: `continuous`,
         `classmap`,
         `interval` or `none`
        (note, `none` is a string literal).TODO: add description for LegendConfigType
    LegendTypes:
      anyOf:
        - type: string
        - type: string
          enum:
            - continuous
            - classmap
            - interval
            - none
      description: 'An enumeration.TODO: add description for LegendTypes'
    LineString:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/LineStringType'
          description: 'TypeTODO: add description for type'
        coordinates:
          type: array
          items:
            type: string
          description: 'CoordinatesTODO: add description for coordinates'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
      description: 'LineString ModelTODO: add description for LineString'
    LineStringType:
      anyOf:
        - type: string
        - type: string
          enum:
            - LineString
      description: 'TypeTODO: add description for LineStringType'
    Link:
      type: object
      required:
        - href
      properties:
        rel:
          type: string
          description: 'RelTODO: add description for rel'
        title:
          type: string
          description: 'TitleTODO: add description for title'
        type:
          allOf:
            - $ref: '#/components/schemas/LinkType'
          description: 'TODO: add description for type'
          default: application/json
        href:
          type: string
          description: 'HrefTODO: add description for href'
        hreflang:
          type: string
          description: 'HreflangTODO: add description for hreflang'
        length:
          type: integer
          format: int32
          description: 'LengthTODO: add description for length'
      description: |-
        Link model.

        Ref:
        http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/schemas/link.yamlTODO: add description for Link
    LinkType:
      anyOf:
        - type: string
        - type: string
          enum:
            - image/tiff; application=geotiff
            - image/jp2
            - image/png
            - image/jpeg
            - image/jpg
            - image/webp
            - application/x-binary
            - application/xml
            - application/json
            - application/geo+json
            - text/html
            - text/plain
            - application/x-protobuf
      description: 'TODO: add description for LinkType'
    LinksItem:
      type: object
      description: 'TODO: add description for LinksItem'
    MediaType:
      anyOf:
        - type: string
        - type: string
          enum:
            - image/tiff; application=geotiff
            - image/jp2
            - image/png
            - image/jpeg
            - image/jpg
            - image/webp
            - application/x-binary
            - application/xml
            - application/json
            - application/geo+json
            - text/html
            - text/plain
            - application/x-protobuf
      description: 'Responses Media types formerly known as MIME types.TODO: add description for MediaType'
    Metadata:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/MetadataType'
          description: 'TypeTODO: add description for type'
          default: mosaic
        bounds:
          type: string
          description: 'BoundsTODO: add description for bounds'
        minzoom:
          type: integer
          format: int32
          description: 'MinzoomTODO: add description for minzoom'
        maxzoom:
          type: integer
          format: int32
          description: 'MaxzoomTODO: add description for maxzoom'
        name:
          type: string
          description: 'NameTODO: add description for name'
        assets:
          type: array
          items:
            type: string
          description: 'AssetsTODO: add description for assets'
        defaults:
          type: object
          additionalProperties:
            type: string
          description: Defaults
      description: 'Metadata Model.TODO: add description for Metadata'
    MetadataType:
      anyOf:
        - type: string
        - type: string
          enum:
            - mosaic
            - search
      description: 'TypeTODO: add description for MetadataType'
    Mosaic:
      type: object
      required:
        - id
        - name
        - cql
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 30
          pattern: ^(?!\-|_)[a-zA-Z0-9_-]*(?<!\-|_)$
          description: 'A unique identifier for this mosaic.TODO: add description for id'
        name:
          type: string
          maxLength: 30
          description: 'A short name for this mosaic that describes its content.TODO: add description for name'
        description:
          type: string
          description: 'A longer description of the mosaic contents.TODO: add description for description'
        cql:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          description: A list of valid CQL2-JSON expressions used to filter the collection to moasic.
      description: 'A single predefined CQL2-JSON query representing a named mosaic.TODO: add description for Mosaic'
    MosaicInfo:
      type: object
      required:
        - mosaics
        - renderOptions
      properties:
        mosaics:
          type: array
          items:
            $ref: '#/components/schemas/Mosaic'
          description: 'MosaicsTODO: add description for mosaics'
        renderOptions:
          type: array
          items:
            $ref: '#/components/schemas/RenderOption'
          description: 'RenderoptionsTODO: add description for renderOptions'
        defaultLocation:
          allOf:
            - $ref: '#/components/schemas/DefaultLocation'
          description: 'Defines a default location for showcasing a collection.TODO: add description for defaultLocation'
        defaultCustomQuery:
          type: object
          additionalProperties:
            type: string
          description: A list of CQL-JSON expressions to use as the default for  this collection.
      description: 'MosaicInfoTODO: add description for MosaicInfo'
    MultiLineString:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/MultiLineStringType'
          description: 'TypeTODO: add description for type'
        coordinates:
          type: array
          items:
            type: array
            items:
              type: string
          description: 'CoordinatesTODO: add description for coordinates'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
      description: 'MultiLineString ModelTODO: add description for MultiLineString'
    MultiLineStringType:
      anyOf:
        - type: string
        - type: string
          enum:
            - MultiLineString
      description: 'TypeTODO: add description for MultiLineStringType'
    MultiPoint:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/MultiPointType'
          description: 'TypeTODO: add description for type'
        coordinates:
          type: array
          items:
            type: string
          description: 'CoordinatesTODO: add description for coordinates'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
      description: 'MultiPoint ModelTODO: add description for MultiPoint'
    MultiPointType:
      anyOf:
        - type: string
        - type: string
          enum:
            - MultiPoint
      description: 'TypeTODO: add description for MultiPointType'
    MultiPolygon:
      type: object
      required:
        - coordinates
        - type
      properties:
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: string
          description: 'CoordinatesTODO: add description for coordinates'
        type:
          allOf:
            - $ref: '#/components/schemas/MultiPolygonType'
          description: 'TypeTODO: add description for type'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
      description: 'MultiPolygon ModelTODO: add description for MultiPolygon'
    MultiPolygonType:
      anyOf:
        - type: string
        - type: string
          enum:
            - MultiPolygon
      description: 'TypeTODO: add description for MultiPolygonType'
    NoDataType:
      anyOf:
        - type: string
        - type: string
          enum:
            - Alpha
            - Mask
            - Internal
            - Nodata
            - None
      description: NoDataType
    NodataTypes:
      anyOf:
        - type: string
        - type: string
          enum:
            - Alpha
            - Mask
            - Internal
            - Nodata
            - None
      description: 'rio-tiler Nodata types.TODO: add description for NodataTypes'
    NotFound:
      type: object
      required:
        - type
        - title
        - status
        - traceId
      properties:
        type:
          type: string
          enum:
            - https://tools.ietf.org/html/rfc9110#section-15.5.5
          description: 'TODO: add description for type'
        title:
          type: string
          enum:
            - Not Found
          description: 'TODO: add description for title'
        status:
          type: integer
          format: int64
          description: 'TODO: add description for status'
        traceId:
          type: string
          description: 'TODO: add description for detail'
      description: 'TODO: add description for NotFound'
    Operation:
      type: object
      required:
        - operationId
        - status
        - creationTime
        - statusHistory
        - totalItems
        - totalPendingItems
        - totalSuccessfulItems
        - totalFailedItems
      properties:
        operationId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          description: Operation id
        status:
          allOf:
            - $ref: '#/components/schemas/OperationStatus'
          description: Operation status
        creationTime:
          type: string
          format: date-time
          description: The UTC time at which the operation was created
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusHistoryItem'
          description: The history of the operation status in time
        startTime:
          type: string
          format: date-time
          description: The UTC time at which the operation was started
        finishTime:
          type: string
          format: date-time
          description: The UTC time at which the operation finished its execution
        totalItems:
          type: integer
          format: int64
          description: The number of total items to be processed
        totalPendingItems:
          type: integer
          format: int64
          description: The number of items pending to be processed
        totalSuccessfulItems:
          type: integer
          format: int64
          description: The number of items successfully processed
        totalFailedItems:
          type: integer
          format: int64
          description: The number of items that have failed to be processed
      description: Spatio geo-catalog operation
    OperationStatus:
      anyOf:
        - type: string
        - type: string
          enum:
            - Pending
            - Running
            - Finished
            - Canceled
            - Canceling
            - Succeeded
            - Failed
      description: 'TODO: add description for OperationStatus'
    OperationStatusHistoryItem:
      type: object
      required:
        - timestamp
        - status
      properties:
        timestamp:
          type: string
          format: date-time
          description: The UTC time at which the status was set
        status:
          allOf:
            - $ref: '#/components/schemas/OperationStatus'
          description: The status of the operation
        errorCode:
          type: string
          description: If the status is failed, the error code
        errorMessage:
          type: string
          description: If the status is failed, the error message
      description: 'TODO: add description for OperationStatusHistoryItem'
    OperationSummary:
      type: object
      required:
        - operationId
        - status
      properties:
        operationId:
          allOf:
            - $ref: '#/components/schemas/Guid'
          description: Operation id
        status:
          allOf:
            - $ref: '#/components/schemas/OperationStatus'
          description: Operation status
      description: Spatio geo-catalog operation summary
    PaginationLink:
      type: object
      required:
        - href
        - rel
        - method
      properties:
        href:
          type: string
          minLength: 1
          description: 'HrefTODO: add description for href'
        rel:
          allOf:
            - $ref: '#/components/schemas/PaginationRelations'
          description: 'https://github.com/radiantearth/stac-api-spec/blob/master/api-spec.md#paging-extensionTODO: add description for rel'
        type:
          type: string
          description: 'TypeTODO: add description for type'
        title:
          type: string
          description: 'TitleTODO: add description for title'
        label:assets:
          type: string
          description: 'Label:AssetsTODO: add description for labelAssets'
        method:
          allOf:
            - $ref: '#/components/schemas/PaginationMethods'
          description: 'https://github.com/radiantearth/stac-api-spec/blob/master/api-spec.md#paging-extensionTODO: add description for method'
        body:
          type: object
          additionalProperties:
            type: string
          description: Body
        merge:
          type: boolean
          description: 'MergeTODO: add description for merge'
      description: 'https://github.com/radiantearth/stac-api-spec/blob/master/api-spec.md#paging-extensionTODO: add description for PaginationLink'
    PaginationMethods:
      anyOf:
        - type: string
        - type: string
          enum:
            - GET
            - POST
      description: 'https://github.com/radiantearth/stac-api-spec/blob/master/api-spec.md#paging-extensionTODO: add description for PaginationMethods'
    PaginationRelations:
      anyOf:
        - type: string
        - type: string
          enum:
            - next
            - previous
      description: 'https://github.com/radiantearth/stac-api-spec/blob/master/api-spec.md#paging-extensionTODO: add description for PaginationRelations'
    PartitionType:
      type: object
      properties:
        scheme:
          allOf:
            - $ref: '#/components/schemas/PartitionTypeScheme'
          description: 'The type of partitioning to use.TODO: add description for scheme'
          default: none
      description: 'PartitionTypeTODO: add description for PartitionType'
    PartitionTypeScheme:
      anyOf:
        - type: string
        - type: string
          enum:
            - year
            - month
            - none
      description: 'The type of partitioning to use.TODO: add description for PartitionTypeScheme'
    PixelSelection:
      anyOf:
        - type: string
        - type: string
          enum:
            - first
            - highest
            - lowest
            - mean
            - median
            - stdev
            - lastbandlow
            - lastbandhight
      description: |-
        Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')Pixel selection method.TODO: add description for PixelSelection
    Point:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/PointType'
          description: 'TypeTODO: add description for type'
        coordinates:
          type: string
          description: 'CoordinatesTODO: add description for coordinates'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
      description: 'Point ModelTODO: add description for Point'
    PointType:
      anyOf:
        - type: string
        - type: string
          enum:
            - Point
      description: 'TypeTODO: add description for PointType'
    Polygon:
      type: object
      required:
        - coordinates
        - type
      properties:
        coordinates:
          type: array
          items:
            type: array
            items:
              type: string
          description: 'CoordinatesTODO: add description for coordinates'
        type:
          allOf:
            - $ref: '#/components/schemas/PolygonType'
          description: 'TypeTODO: add description for type'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
      description: 'Polygon ModelTODO: add description for Polygon'
    PolygonType:
      anyOf:
        - type: string
        - type: string
          enum:
            - Polygon
      description: 'TypeTODO: add description for PolygonType'
    PostFieldsExtension:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
          description: Include
          default: []
        exclude:
          type: array
          items:
            type: string
          description: Exclude
          default: []
      description: |-
        FieldsExtension.

        Attributes:
        include: set of fields to include.
        exclude: set of fields to exclude.TODO: add description for PostFieldsExtension
    Provider:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          description: 'NameTODO: add description for name'
        description:
          type: string
          description: 'DescriptionTODO: add description for description'
        roles:
          type: array
          items:
            type: string
          description: 'RolesTODO: add description for roles'
        url:
          type: string
          description: 'UrlTODO: add description for url'
      description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#provider-objectTODO: add description for Provider'
    QueryableDefinition:
      type: object
      required:
        - name
        - definition
      properties:
        name:
          type: string
          minLength: 1
          description: 'NameTODO: add description for name'
        definition:
          type: object
          additionalProperties:
            type: string
          description: Definition
        create_index:
          type: boolean
          description: 'Create IndexTODO: add description for createIndex'
        data_type:
          allOf:
            - $ref: '#/components/schemas/QueryableDefinitionDataType'
          description: 'TODO: add description for dataType'
          default: text
      description: 'QueryableDefinitionTODO: add description for QueryableDefinition'
    QueryableDefinitionDataType:
      anyOf:
        - type: string
        - type: string
          enum:
            - number
            - float
            - text
            - array
      description: 'TODO: add description for QueryableDefinitionDataType'
    Range:
      type: object
      required:
        - minimum
        - maximum
      properties:
        minimum:
          type: string
          description: 'MinimumTODO: add description for minimum'
        maximum:
          type: string
          description: 'MaximumTODO: add description for maximum'
      description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#stats-objectTODO: add description for Range'
    RegisterMosaic:
      type: object
      properties:
        collections:
          type: array
          items:
            type: string
          description: 'CollectionsTODO: add description for collections'
        ids:
          type: array
          items:
            type: string
          description: 'IdsTODO: add description for ids'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
        intersects:
          allOf:
            - $ref: '#/components/schemas/RegisterMosaicIntersects'
          description: 'IntersectsTODO: add description for intersects'
        query:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
          description: Query
        filter:
          type: object
          additionalProperties:
            type: string
          description: Filter
        datetime:
          type: string
          description: 'DatetimeTODO: add description for datetime'
        sortby:
          type: string
          description: 'SortbyTODO: add description for sortby'
        filter-lang:
          allOf:
            - $ref: '#/components/schemas/RegisterMosaicFilterLang'
          description: 'Filter-LangTODO: add description for filterLang'
        metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
          description: 'Metadata Model.TODO: add description for metadata'
      description: 'Model of /register endpoint input.TODO: add description for RegisterMosaic'
    RegisterMosaicFilterLang:
      anyOf:
        - type: string
        - type: string
          enum:
            - cql-json
            - cql-text
            - cql2-json
      description: |-
        Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')Filter-LangTODO: add description for RegisterMosaicFilterLang
    RegisterMosaicIntersects:
      type: object
      description: 'IntersectsTODO: add description for RegisterMosaicIntersects'
    RegisterResponse:
      type: object
      required:
        - searchid
      properties:
        searchid:
          type: string
          description: 'SearchidTODO: add description for searchid'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          description: 'LinksTODO: add description for links'
      description: 'Response model for /register endpoint.TODO: add description for RegisterResponse'
    RenderOption:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          minLength: 1
          maxLength: 30
          pattern: ^(?!\-|_)[a-zA-Z0-9_-]*(?<!\-|_)$
          description: 'A unique identifier for this render option.TODO: add description for id'
        name:
          type: string
          maxLength: 40
          description: 'A short name for this render option that describes its content.TODO: add description for name'
        description:
          type: string
          description: |-
            A longer description of the render option that can be used to explain its
            content.TODO: add description for description
        type:
          allOf:
            - $ref: '#/components/schemas/RenderOptionType'
          description: 'The type of render optionTODO: add description for type'
          default: raster-tile
        options:
          type: string
          description: |-
            A URL query-string encoded string of TiTiler rendering options. Valid only for
            `raster-tile` types.  See 'Query Parameters':
            https://developmentseed.org/titiler/endpoints/cog/#descriptionTODO: add description for options
        vectorOptions:
          allOf:
            - $ref: '#/components/schemas/RenderOptionVectorOptions'
          description: |-
            Options for rendering vector tiles. Valid only for `vt-polygon`  and `vt-line`
            types.TODO: add description for vectorOptions
        minZoom:
          type: integer
          format: int32
          maximum: 24
          description: 'Zoom level at which to start rendering the layer.TODO: add description for minZoom'
          default: 12
        legend:
          allOf:
            - $ref: '#/components/schemas/RenderOptionLegend'
          description: 'An optional legend configuration.TODO: add description for legend'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/RenderOptionCondition'
          description: |-
            A list of property/value conditions that must be in the active mosaic CQL for
            this render option to be enabledTODO: add description for conditions
      description: 'Defines a set of map-tile render options for a collection.TODO: add description for RenderOption'
    RenderOptionCondition:
      type: object
      required:
        - property
      properties:
        property:
          type: string
          description: 'The property attribute name to check.TODO: add description for property'
        value:
          type: string
          description: 'The value on which to perform an equality check.TODO: add description for value'
      description: 'Defines a property/value condition for a render config to be enabledTODO: add description for RenderOptionCondition'
    RenderOptionLegend:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/LegendConfigType'
          description: |-
            Legend type to make,
             one of: `continuous`,
             `classmap`,
             `interval` or `none`
            (note, `none` is a string literal).TODO: add description for type
        labels:
          type: array
          items:
            type: string
          description: 'List of string labels that will be flex spaced-between under the legend image.TODO: add description for labels'
        trimStart:
          type: integer
          format: int32
          description: |-
            The number of items to trim from the start of the legend definition. Used if
            there are values important for rendering (e.g. nodata) that aren't desirable in
            the legend.TODO: add description for trimStart
        trimEnd:
          type: integer
          format: int32
          description: 'Same as trim_start, but for the end of the legend definition.TODO: add description for trimEnd'
        scaleFactor:
          type: number
          format: float
          description: |-
            A factor to multiply interval legend labels by. Useful for scaled rasters whose
            colormap definitions map to unscaled values, effectively showing legend labels
            as scaled values.TODO: add description for scaleFactor
      description: 'An optional legend configuration.TODO: add description for RenderOptionLegend'
    RenderOptionType:
      anyOf:
        - type: string
        - type: string
          enum:
            - raster-tile
            - vt-polygon
            - vt-line
      description: 'The type of render optionTODO: add description for RenderOptionType'
    RenderOptionVectorOptions:
      type: object
      required:
        - tilejsonKey
        - sourceLayer
      properties:
        tilejsonKey:
          type: string
          description: 'The key in the collection-level assets which contains the tilejson URL.TODO: add description for tilejsonKey'
        sourceLayer:
          type: string
          description: 'The source layer name to render from the associated vector tiles.TODO: add description for sourceLayer'
        fillColor:
          type: string
          description: 'The css-style fill color for polygons. Can be hex or rgba()TODO: add description for fillColor'
        strokeColor:
          type: string
          description: 'The css-style stroke color for lines. Can be hex or rgba()TODO: add description for strokeColor'
        strokeWidth:
          type: integer
          format: int32
          description: 'The stroke width for lines.TODO: add description for strokeWidth'
        filter:
          type: array
          items:
            type: string
          description: 'MapBox Filter Expression to filter vector features by.TODO: add description for filter'
      description: |-
        Options for rendering vector tiles. Valid only for `vt-polygon`  and `vt-line`
        types.TODO: add description for RenderOptionVectorOptions
    Resampling:
      anyOf:
        - type: string
        - type: string
          enum:
            - nearest
            - bilinear
            - cubic
            - cubic_spline
            - lanczos
            - average
            - mode
            - gauss
            - rms
      description: 'Resampling method.TODO: add description for Resampling'
    ResponseSignedHrefApiSignGet:
      type: object
      description: Response Signed Href Api Sign Get
    RioTilerModelsInfo:
      type: object
      required:
        - bounds
        - minzoom
        - maxzoom
        - band_metadata
        - band_descriptions
        - dtype
        - nodata_type
      properties:
        bounds:
          type: array
          items:
            type: string
          description: 'BoundsTODO: add description for bounds'
        minzoom:
          type: integer
          format: int32
          description: 'MinzoomTODO: add description for minzoom'
        maxzoom:
          type: integer
          format: int32
          description: 'MaxzoomTODO: add description for maxzoom'
        band_metadata:
          type: array
          items:
            type: array
            items:
              type: string
          description: 'Band MetadataTODO: add description for bandMetadata'
        band_descriptions:
          type: array
          items:
            type: array
            items:
              type: string
          description: 'Band DescriptionsTODO: add description for bandDescriptions'
        dtype:
          type: string
          description: 'DtypeTODO: add description for dtype'
        nodata_type:
          allOf:
            - $ref: '#/components/schemas/NodataTypes'
          description: 'rio-tiler Nodata types.TODO: add description for nodataType'
        colorinterp:
          type: array
          items:
            type: string
          description: 'ColorinterpTODO: add description for colorinterp'
        scale:
          type: number
          format: float
          description: 'ScaleTODO: add description for scale'
        offset:
          type: number
          format: float
          description: 'OffsetTODO: add description for offset'
        colormap:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int32
          description: Colormap
      description: 'Dataset Info.TODO: add description for RioTilerModelsInfo'
    SasToken:
      type: object
      required:
        - msft:expiry
        - token
      properties:
        msft:expiry:
          type: string
          format: date-time
          description: Msft:Expiry
        token:
          type: string
          description: Token
      description: SAS Token response
    SchemeEnum:
      anyOf:
        - type: string
        - type: string
          enum:
            - xyz
            - tms
      description: |-
        Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')TileJSON scheme choice.TODO: add description for SchemeEnum
    Search:
      type: object
      required:
        - hash
        - search
        - _where
        - orderby
        - lastused
        - usecount
        - metadata
      properties:
        hash:
          type: string
          description: 'HashTODO: add description for hash'
        search:
          type: object
          additionalProperties:
            type: string
          description: Search
        _where:
          type: string
          description: 'WhereTODO: add description for where'
        orderby:
          type: string
          description: 'OrderbyTODO: add description for orderby'
        lastused:
          type: string
          format: date-time
          description: 'LastusedTODO: add description for lastused'
        usecount:
          type: integer
          format: int32
          description: 'UsecountTODO: add description for usecount'
        metadata:
          allOf:
            - $ref: '#/components/schemas/Metadata'
          description: 'Metadata Model.TODO: add description for metadata'
      description: |-
        PgSTAC Search entry.

        ref:
        https://github.com/stac-utils/pgstac/blob/3499daa2bfa700ae7bb07503795c169bf2ebafc7/sql/004_search.sql#L907-L915TODO: add description for Search
    SearchPostRequest:
      type: object
      properties:
        collections:
          type: array
          items:
            type: string
          description: 'CollectionsTODO: add description for collections'
        ids:
          type: array
          items:
            type: string
          description: 'IdsTODO: add description for ids'
        bbox:
          type: string
          description: 'BboxTODO: add description for bbox'
        intersects:
          allOf:
            - $ref: '#/components/schemas/SearchPostRequestIntersects'
          description: 'IntersectsTODO: add description for intersects'
        datetime:
          type: string
          description: 'DatetimeTODO: add description for datetime'
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          description: 'LimitTODO: add description for limit'
          default: 250
        conf:
          type: object
          additionalProperties:
            type: string
          description: Conf
        sign:
          type: boolean
          description: 'SignTODO: add description for sign'
        duration:
          type: integer
          format: int32
          description: 'DurationTODO: add description for duration'
        query:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StringRecord'
          description: Query
        sortby:
          type: array
          items:
            $ref: '#/components/schemas/SortExtension'
          description: 'SortbyTODO: add description for sortby'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/SearchPostRequestFields'
          description: 'FieldsTODO: add description for fields'
        filter:
          type: object
          additionalProperties:
            type: string
          description: Filter
        filter-crs:
          type: string
          description: 'Filter-CrsTODO: add description for filterCrs'
        filter-lang:
          allOf:
            - $ref: '#/components/schemas/SearchPostRequestFilterLang'
          description: 'TODO: add description for filterLang'
          default: cql-json
        token:
          type: string
          description: 'TokenTODO: add description for token'
      description: |-
        Search model.

        Overrides the validation for datetime from the base request model.TODO: add description for SearchPostRequest
    SearchPostRequestFields:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
          description: Include
          default: []
        exclude:
          type: array
          items:
            type: string
          description: Exclude
          default: []
      description: 'FieldsTODO: add description for SearchPostRequestFields'
    SearchPostRequestFilterLang:
      anyOf:
        - type: string
        - type: string
          enum:
            - cql-json
            - cql2-json
            - cql2-text
      description: 'TODO: add description for SearchPostRequestFilterLang'
    SearchPostRequestIntersects:
      type: object
      description: 'IntersectsTODO: add description for SearchPostRequestIntersects'
    SignedLink:
      type: object
      required:
        - msft:expiry
        - href
      properties:
        msft:expiry:
          type: string
          format: date-time
          description: Msft:Expiry
        href:
          type: string
          description: Href
      description: Signed SAS URL response
    SortDirections:
      anyOf:
        - type: string
        - type: string
          enum:
            - asc
            - desc
      description: 'An enumeration.TODO: add description for SortDirections'
    SortExtension:
      type: object
      required:
        - field
        - direction
      properties:
        field:
          type: string
          minLength: 1
          description: 'FieldTODO: add description for field'
        direction:
          allOf:
            - $ref: '#/components/schemas/SortDirections'
          description: 'An enumeration.TODO: add description for direction'
      description: 'https://github.com/radiantearth/stac-api-spec/tree/master/extensions/sort#sort-api-extensionTODO: add description for SortExtension'
    SpatialExtent:
      type: object
      required:
        - bbox
      properties:
        bbox:
          type: array
          items:
            type: array
            items:
              type: string
          description: 'BboxTODO: add description for bbox'
      description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#spatial-extent-objectTODO: add description for SpatialExtent'
    StatisticsInGeoJson:
      type: object
      required:
        - statistics
      properties:
        statistics:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BandStatistics'
          description: Statistics
      description: 'Statistics model in geojson response.TODO: add description for StatisticsInGeoJson'
    StringRecord:
      type: object
      additionalProperties:
        type: string
      description: String record.
    TileJson:
      type: object
      required:
        - tiles
      properties:
        tilejson:
          type: string
          description: Tilejson
          default: 2.2.0
        name:
          type: string
          description: 'NameTODO: add description for name'
        description:
          type: string
          description: 'DescriptionTODO: add description for description'
        version:
          type: string
          description: Version
          default: 1.0.0
        attribution:
          type: string
          description: 'AttributionTODO: add description for attribution'
        template:
          type: string
          description: 'TemplateTODO: add description for template'
        legend:
          type: string
          description: 'LegendTODO: add description for legend'
        scheme:
          allOf:
            - $ref: '#/components/schemas/TileJsonScheme'
          description: 'TODO: add description for scheme'
          default: xyz
        tiles:
          type: array
          items:
            type: string
          description: 'TilesTODO: add description for tiles'
        grids:
          type: array
          items:
            type: string
          description: 'GridsTODO: add description for grids'
        data:
          type: array
          items:
            type: string
          description: 'DataTODO: add description for data'
        minzoom:
          type: integer
          format: int32
          maximum: 30
          description: 'MinzoomTODO: add description for minzoom'
        maxzoom:
          type: integer
          format: int32
          maximum: 30
          description: 'MaxzoomTODO: add description for maxzoom'
          default: 30
        bounds:
          type: array
          items:
            type: number
            format: float
          description: Bounds
          default:
            - -180
            - -90
            - 180
            - 90
        center:
          type: array
          items:
            type: number
            format: float
          description: 'CenterTODO: add description for center'
      description: |-
        TileJSON model.

        Based on https://github.com/mapbox/tilejson-spec/tree/master/2.2.0TODO: add description for TileJson
    TileJsonScheme:
      anyOf:
        - type: string
        - type: string
          enum:
            - xyz
            - tms
      description: 'TODO: add description for TileJsonScheme'
    TileMatrix:
      type: object
      required:
        - id
        - scaleDenominator
        - cellSize
        - pointOfOrigin
        - tileWidth
        - tileHeight
        - matrixWidth
        - matrixHeight
      properties:
        title:
          type: string
          description: 'Title of this tile matrix, normally used for display to a humanTODO: add description for title'
        description:
          type: string
          description: |-
            Brief narrative description of this tile matrix set, normally available for
            display to a humanTODO: add description for description
        keywords:
          type: array
          items:
            type: string
          description: |-
            Unordered list of one or more commonly used or formalized word(s) or phrase(s)
            used to describe this datasetTODO: add description for keywords
        id:
          type: string
          pattern: ^[0-9]+$
          description: |-
            Identifier selecting one of the scales defined in the TileMatrixSet and
            representing the scaleDenominator the tile. Implementation of 'identifier'TODO: add description for id
        scaleDenominator:
          type: number
          format: float
          description: 'Scale denominator of this tile matrixTODO: add description for scaleDenominator'
        cellSize:
          type: number
          format: float
          description: 'Cell size of this tile matrixTODO: add description for cellSize'
        cornerOfOrigin:
          allOf:
            - $ref: '#/components/schemas/TileMatrixCornerOfOrigin'
          description: |-
            The corner of the tile matrix (_topLeft_ or _bottomLeft_) used as the origin
            for numbering tile rows and columns. This corner is also a corner of the (0, 0)
            tile.TODO: add description for cornerOfOrigin
        pointOfOrigin:
          type: array
          items:
            type: string
          description: |-
            Precise position in CRS coordinates of the corner of origin (e.g. the top-left
            corner) for this tile matrix. This position is also a corner of the (0, 0)
            tile. In previous version, this was 'topLeftCorner' and 'cornerOfOrigin' did
            not exist.TODO: add description for pointOfOrigin
        tileWidth:
          type: integer
          format: int32
          minimum: 1
          description: 'Width of each tile of this tile matrix in pixelsTODO: add description for tileWidth'
        tileHeight:
          type: integer
          format: int32
          minimum: 1
          description: 'Height of each tile of this tile matrix in pixelsTODO: add description for tileHeight'
        matrixWidth:
          type: integer
          format: int32
          minimum: 1
          description: 'Width of the matrix (number of tiles in width)TODO: add description for matrixWidth'
        matrixHeight:
          type: integer
          format: int32
          minimum: 1
          description: 'Height of the matrix (number of tiles in height)TODO: add description for matrixHeight'
      description: |-
        Tile Matrix Definition

        A tile matrix, usually corresponding to a particular zoom level of a
        TileMatrixSet.

        ref:
        https://github.com/opengeospatial/2D-Tile-Matrix-Set/blob/master/schemas/tms/2.0/json/tileMatrix.jsonTODO: add description for TileMatrix
    TileMatrixCornerOfOrigin:
      anyOf:
        - type: string
        - type: string
          enum:
            - topLeft
            - bottomLeft
      description: |-
        The corner of the tile matrix (_topLeft_ or _bottomLeft_) used as the origin
        for numbering tile rows and columns. This corner is also a corner of the (0, 0)
        tile.TODO: add description for TileMatrixCornerOfOrigin
    TileMatrixSet:
      type: object
      required:
        - crs
        - tileMatrices
      properties:
        title:
          type: string
          description: 'Title of this tile matrix set, normally used for display to a humanTODO: add description for title'
        description:
          type: string
          description: |-
            Brief narrative description of this tile matrix set, normally available for
            display to a humanTODO: add description for description
        keywords:
          type: array
          items:
            type: string
          description: |-
            Unordered list of one or more commonly used or formalized word(s) or phrase(s)
            used to describe this tile matrix setTODO: add description for keywords
        id:
          type: string
          pattern: ^[\w\d_\-]+$
          description: "Tile matrix set identifier. Implementation of 'identifier'TODO: add description for id"
        uri:
          type: string
          description: 'Reference to an official source for this tileMatrixSetTODO: add description for uri'
        orderedAxes:
          type: array
          items:
            type: string
          description: 'OrderedaxesTODO: add description for orderedAxes'
        crs:
          allOf:
            - $ref: '#/components/schemas/TileMatrixSetCrs'
          description: 'Coordinate Reference System (CRS)TODO: add description for crs'
        wellKnownScaleSet:
          type: string
          format: uri
          description: 'Reference to a well-known scale setTODO: add description for wellKnownScaleSet'
        boundingBox:
          allOf:
            - $ref: '#/components/schemas/TileMatrixSetBoundingBox'
          description: 'Minimum bounding rectangle surrounding the tile matrix set, in the supported CRSTODO: add description for boundingBox'
        tileMatrices:
          type: array
          items:
            $ref: '#/components/schemas/TileMatrix'
          description: 'Describes scale levels and its tile matricesTODO: add description for tileMatrices'
      description: |-
        Tile Matrix Set Definition

        A definition of a tile matrix set following the Tile Matrix Set standard.
        For tileset metadata, such a description (in `tileMatrixSet` property) is only
        required for offline use,
        as an alternative to a link with a
        `http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme` relation type.

        ref:
        https://github.com/opengeospatial/2D-Tile-Matrix-Set/blob/master/schemas/tms/2.0/json/tileMatrixSet.jsonTODO: add description for TileMatrixSet
    TileMatrixSetBoundingBox:
      type: object
      required:
        - lowerLeft
        - upperRight
      properties:
        lowerLeft:
          type: array
          items:
            type: string
          description: 'A 2D Point in the CRS indicated elsewhereTODO: add description for lowerLeft'
        upperRight:
          type: array
          items:
            type: string
          description: 'A 2D Point in the CRS indicated elsewhereTODO: add description for upperRight'
        crs:
          type: string
          description: |-
            CRS model.

            Ref:
            https://github.com/opengeospatial/ogcapi-tiles/blob/master/openapi/schemas/common-geodata/crs.yaml

            Code generated using https://github.com/koxudaxi/datamodel-code-generator/TODO: add description for crs
        orderedAxes:
          type: array
          items:
            type: string
          description: 'OrderedaxesTODO: add description for orderedAxes'
      description: 'Minimum bounding rectangle surrounding the tile matrix set, in the supported CRSTODO: add description for TileMatrixSetBoundingBox'
    TileMatrixSetCrs:
      type: object
      description: 'Coordinate Reference System (CRS)TODO: add description for TileMatrixSetCrs'
    TileSettings:
      type: object
      required:
        - minZoom
        - maxItemsPerTile
      properties:
        minZoom:
          type: integer
          format: int32
          maximum: 24
          description: |-
            The minimum zoom level that can be requested for this collection. Provides a
            hard limit for the tile servers to ensure they don't get requests for low zoom
            levels, which would cause many files to be fetched and the tile servers to
            hang.TODO: add description for minZoom
        maxItemsPerTile:
          type: integer
          format: int32
          description: 'The maximum number of items that will be fetched while generating a raster tile.TODO: add description for maxItemsPerTile'
        defaultLocation:
          allOf:
            - $ref: '#/components/schemas/DefaultLocation'
          description: 'Defines a default location for showcasing a collection.TODO: add description for defaultLocation'
      description: 'TileSettingsTODO: add description for TileSettings'
    Tilematrixsetid:
      anyOf:
        - type: string
        - type: string
          enum:
            - CanadianNAD83_LCC
            - EuropeanETRS89_LAEAQuad
            - LINZAntarticaMapTilegrid
            - NZTM2000Quad
            - UPSAntarcticWGS84Quad
            - UPSArcticWGS84Quad
            - UTM31WGS84Quad
            - WGS1984Quad
            - WebMercatorQuad
            - WorldCRS84Quad
            - WorldMercatorWGS84Quad
      description: |-
        Identifier selecting one of the TileMatrixSetId supported (default:
        'WebMercatorQuad')TODO: add description for Tilematrixsetid
    TilerInfo:
      type: object
      required:
        - bounds
        - bandMetadata
        - bandDescriptions
        - dtype
        - nodataType
      properties:
        bounds:
          type: array
          items:
            type: string
          minItems: 4
          maxItems: 4
          description: Bounds
          title: Bounds
        bandMetadata:
          type: array
          items:
            type: array
            items:
              type: string
          description: Band Metadata
          title: Band Metadata
        bandDescriptions:
          type: array
          items:
            type: array
            items:
              type: string
          description: Band Descriptions
          title: Band Descriptions
        dtype:
          type: string
          description: Band Names
          title: Dtype
        nodataType:
          allOf:
            - $ref: '#/components/schemas/NoDataType'
          description: Band Names
          title: Nodata Type
        colorinterp:
          type: array
          items:
            type: string
          description: Band Names
          title: Colorinterp
        scales:
          type: array
          items:
            type: integer
            format: int64
          description: Band Names
          title: Scales
        offsets:
          type: array
          items:
            type: integer
            format: int64
          description: Band Names
          title: Offsets
        colormap:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Band Names
          title: Colormap
        minzoom:
          type: integer
          format: int64
          description: Band Names
          title: Minzoom
        maxzoom:
          type: integer
          format: int64
          description: Band Names
          title: Maxzoom
      description: Dataset Info.
      title: TilerInfo
    TimeInterval:
      type: object
      required:
        - interval
      properties:
        interval:
          type: array
          items:
            type: array
            items:
              type: string
          description: 'IntervalTODO: add description for interval'
      description: 'https://github.com/radiantearth/stac-spec/blob/v1.0.0/collection-spec/collection-spec.md#temporal-extent-objectTODO: add description for TimeInterval'
    TitilerCoreModelsResponsesPoint:
      type: object
      required:
        - coordinates
        - values
        - band_names
      properties:
        coordinates:
          type: array
          items:
            type: number
            format: float
          description: 'CoordinatesTODO: add description for coordinates'
        values:
          type: array
          items:
            type: number
            format: float
          description: 'ValuesTODO: add description for values'
        band_names:
          type: array
          items:
            type: string
          description: 'Band NamesTODO: add description for bandNames'
      description: |-
        Point model.

        response model for `/point` endpointsTODO: add description for TitilerCoreModelsResponsesPoint
    TitilerPgstacModelInfo:
      type: object
      required:
        - search
      properties:
        search:
          allOf:
            - $ref: '#/components/schemas/Search'
          description: |-
            PgSTAC Search entry.

            ref:
            https://github.com/stac-utils/pgstac/blob/3499daa2bfa700ae7bb07503795c169bf2ebafc7/sql/004_search.sql#L907-L915TODO: add description for search
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          description: 'LinksTODO: add description for links'
      description: 'Response model for /info endpoint.TODO: add description for TitilerPgstacModelInfo'
    TmsBoundingBox:
      type: object
      required:
        - lowerLeft
        - upperRight
      properties:
        lowerLeft:
          type: array
          items:
            type: string
          description: 'A 2D Point in the CRS indicated elsewhereTODO: add description for lowerLeft'
        upperRight:
          type: array
          items:
            type: string
          description: 'A 2D Point in the CRS indicated elsewhereTODO: add description for upperRight'
        crs:
          type: string
          description: |-
            CRS model.

            Ref:
            https://github.com/opengeospatial/ogcapi-tiles/blob/master/openapi/schemas/common-geodata/crs.yaml

            Code generated using https://github.com/koxudaxi/datamodel-code-generator/TODO: add description for crs
        orderedAxes:
          type: array
          items:
            type: string
          description: 'OrderedaxesTODO: add description for orderedAxes'
      description: |-
        Bounding box

        ref:
        https://github.com/opengeospatial/2D-Tile-Matrix-Set/blob/master/schemas/tms/2.0/json/2DBoundingBox.jsonTODO: add description for TMSBoundingBox
    UnsignedLink:
      type: object
      required:
        - href
      properties:
        msft:expiry:
          type: string
          format: date-time
          description: Msft:Expiry
        href:
          type: string
          description: Href
      description: Link that was not signed. Will include a null expiry
    UserCollectionSettings:
      type: object
      required:
        - tileSettings
        - mosaicInfo
      properties:
        tileSettings:
          allOf:
            - $ref: '#/components/schemas/TileSettings'
          description: 'TileSettingsTODO: add description for tileSettings'
        mosaicInfo:
          allOf:
            - $ref: '#/components/schemas/MosaicInfo'
          description: 'MosaicInfoTODO: add description for mosaicInfo'
      description: 'UserCollectionSettingsTODO: add description for UserCollectionSettings'
    VectorTileOptions:
      type: object
      required:
        - tilejsonKey
        - sourceLayer
      properties:
        tilejsonKey:
          type: string
          description: 'The key in the collection-level assets which contains the tilejson URL.TODO: add description for tilejsonKey'
        sourceLayer:
          type: string
          description: 'The source layer name to render from the associated vector tiles.TODO: add description for sourceLayer'
        fillColor:
          type: string
          description: 'The css-style fill color for polygons. Can be hex or rgba()TODO: add description for fillColor'
        strokeColor:
          type: string
          description: 'The css-style stroke color for lines. Can be hex or rgba()TODO: add description for strokeColor'
        strokeWidth:
          type: integer
          format: int32
          description: 'The stroke width for lines.TODO: add description for strokeWidth'
        filter:
          type: array
          items:
            type: string
          description: 'MapBox Filter Expression to filter vector features by.TODO: add description for filter'
      description: 'Defines a set of vector tile render options for a collection.TODO: add description for VectorTileOptions'
    Versions:
      type: string
      enum:
        - 2024-01-31-preview
      description: Versions info.
    longString:
      type: string
      pattern: ^[a-zA-Z0-9-]{3,256}$
    shortString:
      type: string
      pattern: ^[a-zA-Z0-9-]{3,64}$
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
