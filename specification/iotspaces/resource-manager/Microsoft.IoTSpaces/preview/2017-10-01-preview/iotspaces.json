{
  "swagger": "2.0",
  "info": {
    "version": "2017-10-01-preview",
    "title": "IoTSpacesClient",
    "description": "Use this API to manage the IoTSpaces service instances in your Azure subscription.",
    "x-ms-code-generation-settings": {
      "header": "MICROSOFT_MIT_NO_VERSION"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTSpaces/Graph/{resourceName}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "description": "Get the metadata of a IoTSpaces instance.",
        "operationId": "IoTSpaces_Get",
        "x-ms-examples": {
          "Get a IoT spaces service": {
            "$ref": "./examples/IoTSpacesGet_example.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/resourceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The body contains all the non-security properties of the IoTSpaces instance. Security-related properties are set to null.",
            "schema": {
              "$ref": "#/definitions/IoTSpacesDescription"
            }
          },
          "default": {
            "description": "Default error response",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Resource"
        ],
        "description": "Create or update the metadata of an IoTSpaces instance. The usual pattern to modify a property is to retrieve the IoTSpaces instance metadata and security metadata, and then combine them with the modified values in a new body to update the IoTSpaces instance.",
        "operationId": "IoTSpaces_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Put an IoT spaces service": {
            "$ref": "./examples/IoTSpacesPut_example.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/resourceName"
          },
          {
            "name": "iotSpaceDescription",
            "in": "body",
            "description": "The IoTSpaces instance metadata and security metadata.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IoTSpacesDescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state.",
            "schema": {
              "$ref": "#/definitions/IoTSpacesDescription"
            }
          },
          "202": {
            "description": "Accepted - Put request accepted; the operation will complete asynchronously."
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Resource"
        ],
        "description": "Update the metadata of a IoTSpaces instance.",
        "operationId": "IoTSpaces_Update",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Patch an IoT spaces service": {
            "$ref": "./examples/IoTSpacesPatch_example.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/resourceName"
          },
          {
            "name": "iotSpacePatchDescription",
            "in": "body",
            "description": "The IoTSpaces instance metadata and security metadata.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IoTSpacesPatchDescription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state.",
            "schema": {
              "$ref": "#/definitions/IoTSpacesDescription"
            }
          },
          "202": {
            "description": "Accepted - Put request accepted; the operation will complete asynchronously."
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Resource"
        ],
        "description": "Delete an IoTSpaces instance.",
        "operationId": "IoTSpaces_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete an IoT spaces service": {
            "$ref": "./examples/IoTSpacesDelete_example.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/resourceName"
          }
        ],
        "responses": {
          "200": {
            "description": "This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state.",
            "schema": {
              "$ref": "#/definitions/IoTSpacesDescription"
            }
          },
          "202": {
            "description": "Accepted - Delete request accepted; the operation will complete asynchronously."
          },
          "204": {
            "description": "Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the IoTSpaces service metadata in the service and the status of the delete operation is set to a completed state."
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.IoTSpaces/Graph": {
      "get": {
        "tags": [
          "Collection"
        ],
        "description": "Get all the IoTSpaces instances in a subscription.",
        "operationId": "IoTSpaces_List",
        "x-ms-examples": {
          "Get IoT spaces services by subscription": {
            "$ref": "./examples/IoTSpacesList_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the IoTSpaces instances in the subscription.",
            "schema": {
              "$ref": "#/definitions/IoTSpacesDescriptionListResult"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTSpaces/Graph": {
      "get": {
        "tags": [
          "Collection"
        ],
        "description": "Get all the IoTSpaces instances in a resource group.",
        "operationId": "IoTSpaces_ListByResourceGroup",
        "x-ms-examples": {
          "Get IoT spaces services by resource group": {
            "$ref": "./examples/IoTSpacesListByResourceGroup_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the IoTSpaces instances in the resource group.",
            "schema": {
              "$ref": "#/definitions/IoTSpacesDescriptionListResult"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    },
    "/providers/Microsoft.IoTSpaces/operations": {
      "get": {
        "tags": [
          "Proxy"
        ],
        "description": "Lists all of the available IoTSpaces service REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Get available operations": {
            "$ref": "./examples/IoTSpacesOperationsList_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.IoTSpaces/checkNameAvailability": {
      "post": {
        "tags": [
          "Proxy"
        ],
        "description": "Check if an IoTSpaces instance name is available.",
        "operationId": "IoTSpaces_CheckNameAvailability",
        "x-ms-examples": {
          "Check name Availability": {
            "$ref": "./examples/IoTSpacesCheckNameAvailability_example.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "operationInputs",
            "in": "body",
            "description": "Set the name parameter in the OperationInputs structure to the name of the IoTSpaces instance to check.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperationInputs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the IoTSpaces service name is available. If the name is not available, the body contains the reason.",
            "schema": {
              "$ref": "#/definitions/IoTSpacesNameAvailabilityInfo"
            }
          },
          "default": {
            "description": "DefaultErrorResponse",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "IoTSpacesProperties": {
      "description": "The properties of an IoTSpaces instance.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state.",
          "enum": [
            "Provisioning",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        },
        "managementApiUrl": {
          "description": "The management Api endpoint.",
          "type": "string",
          "readOnly": true
        },
        "webPortalUrl": {
          "description": "The management UI endpoint.",
          "type": "string",
          "readOnly": true
        },
        "storageContainer": {
          "description": "The properties of the designated storage container.",
          "$ref": "#/definitions/StorageContainerProperties"
        }
      }
    },
    "StorageContainerProperties": {
      "description": "The properties of the Azure Storage Container for file archive.",
      "type": "object",
      "properties": {
        "connectionString": {
          "description": "The connection string of the storage account.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "The subscription identifier of the storage account.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "The name of the resource group of the storage account.",
          "type": "string"
        },
        "containerName": {
          "description": "The name of storage container in the storage account.",
          "type": "string"
        }
      }
    },
    "IoTSpacesSkuInfo": {
      "description": "Information about the SKU of the IoTSpaces instance.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the SKU.",
          "enum": [
            "F1",
            "S1",
            "S2",
            "S3"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IoTSpacesSku",
            "modelAsString": true
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "IoTSpacesDescription": {
      "description": "The description of the IoTSpaces service.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The common properties of a IoTSpaces service.",
          "$ref": "#/definitions/IoTSpacesProperties"
        },
        "sku": {
          "description": "A valid instance SKU.",
          "$ref": "#/definitions/IoTSpacesSkuInfo"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "sku"
      ]
    },
    "IoTSpacesPatchDescription": {
      "description": "The description of the IoTSpaces service.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Instance tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The common properties of an IoTSpaces service.",
          "$ref": "#/definitions/IoTSpacesProperties"
        }
      }
    },
    "Resource": {
      "description": "The common properties of an IoTSpaces service.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The resource identifier."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The resource name.",
          "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create", 
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        }
      },
      "x-ms-azure-resource": true,
      "required": [
        "location"
      ]
    },
    "ErrorDetails": {
      "description": "Error details.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The error message.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "The target of the particular error.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IoTSpacesDescriptionListResult": {
      "description": "A list of IoTSpaces description objects with a next link.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of IoTSpaces description objects.",
          "type": "string"
        },
        "value": {
          "description": "A list of IoTSpaces description objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IoTSpacesDescription"
          }
        }
      }
    },
    "OperationListResult": {
      "description": "A list of IoTSpaces service operations. It contains a list of operations and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of IoTSpaces description objects.",
          "type": "string"
        },
        "value": {
          "description": "A list of IoT spaces operations supported by the Microsoft.IoTSpaces resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        }
      }
    },
    "Operation": {
      "description": "IoTSpaces service REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{read | write | action | delete}"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay"
        }
      }
    },
    "OperationDisplay": {
      "description": "The object that represents the operation.",
      "type": "object",
      "properties": {
        "provider": {
          "readOnly": true,
          "type": "string",
          "description": "Service provider: Microsoft IoTSpaces"
        },
        "resource": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Type: IoTSpaces"
        },
        "operation": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the operation"
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Friendly description for the operation,"
        }
      }
    },
    "OperationInputs": {
      "description": "Input values.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the IoTSpaces service instance to check.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "IoTSpacesNameAvailabilityInfo": {
      "description": "The properties indicating whether a given IoTSpaces service name is available.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "The value which indicates whether the provided name is available.",
          "type": "boolean",
          "readOnly": true
        },
        "reason": {
          "description": "The reason for unavailability.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "IoTSpacesNameUnavailabilityReason",
            "modelAsString": false
          }
        },
        "message": {
          "description": "The detailed reason message.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription identifier.",
      "required": true,
      "type": "string",
      "format": "uuid"
    },
    "api-version": {
      "name": "api-version",
      "enum": [
        "2017-10-01-preview"
      ],
      "in": "query",
      "description": "The version of the API.",
      "required": true,
      "type": "string",
      "minLength": 10
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group that contains the IoTSpaces instance.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "minLength": 1,
      "maxLength": 64
    },
    "resourceName": {
      "name": "resourceName",
      "in": "path",
      "description": "The name of the IoTSpaces instance.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "minLength": 1,
      "maxLength": 64
    }
  }
}