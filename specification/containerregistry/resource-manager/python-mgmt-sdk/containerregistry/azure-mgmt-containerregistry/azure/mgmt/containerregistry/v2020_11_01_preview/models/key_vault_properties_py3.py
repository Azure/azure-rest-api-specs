# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class KeyVaultProperties(Model):
    """KeyVaultProperties.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    :param key_identifier: Key vault uri to access the encryption key.
    :type key_identifier: str
    :ivar versioned_key_identifier: The fully qualified key identifier that
     includes the version of the key that is actually used for encryption.
    :vartype versioned_key_identifier: str
    :param identity: The client id of the identity which will be used to
     access key vault.
    :type identity: str
    :ivar key_rotation_enabled: Auto key rotation status for a CMK enabled
     registry.
    :vartype key_rotation_enabled: bool
    :ivar last_key_rotation_timestamp: Timestamp of the last successful key
     rotation.
    :vartype last_key_rotation_timestamp: datetime
    """

    _validation = {
        'versioned_key_identifier': {'readonly': True},
        'key_rotation_enabled': {'readonly': True},
        'last_key_rotation_timestamp': {'readonly': True},
    }

    _attribute_map = {
        'key_identifier': {'key': 'keyIdentifier', 'type': 'str'},
        'versioned_key_identifier': {'key': 'versionedKeyIdentifier', 'type': 'str'},
        'identity': {'key': 'identity', 'type': 'str'},
        'key_rotation_enabled': {'key': 'keyRotationEnabled', 'type': 'bool'},
        'last_key_rotation_timestamp': {'key': 'lastKeyRotationTimestamp', 'type': 'iso-8601'},
    }

    def __init__(self, *, key_identifier: str=None, identity: str=None, **kwargs) -> None:
        super(KeyVaultProperties, self).__init__(**kwargs)
        self.key_identifier = key_identifier
        self.versioned_key_identifier = None
        self.identity = identity
        self.key_rotation_enabled = None
        self.last_key_rotation_timestamp = None
