{
  "swagger": "2.0",
  "info": {
    "version": "2018-02-01-preview",
    "title": "ContainerRegistryManagementClient"
  },
  "host": "management.azure.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildDefinitions": {
      "get": {
        "tags": [
          "BuildDefinitions"
        ],
        "summary": "Lists all the build definitions for a specified container registry.",
        "operationId": "BuildDefinitions_List",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/BuildDefinitionListResult"
            }
          }
        },
        "x-ms-odata": "#/definitions/BuildDefinitionFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BuildDefinitions_List": {
            "$ref": "./examples/BuildDefinitionsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildDefinitions/{buildDefinitionName}/builds": {
      "get": {
        "tags": [
          "BuildDefinitions"
        ],
        "summary": "Get all the builds for a given build definition.",
        "operationId": "BuildDefinitions_ListBuilds",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/buildDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/BuildListResult"
            }
          }
        },
        "x-ms-odata": "#/definitions/BuildFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BuildDefinitions_ListBuilds": {
            "$ref": "./examples/BuildDefinitionsListBuilds.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildDefinitions/{buildDefinitionName}": {
      "get": {
        "tags": [
          "BuildDefinitions"
        ],
        "summary": "Get the properties of a specified build definition.",
        "operationId": "BuildDefinitions_Get",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/buildDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/BuildDefinition"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "BuildDefinitions_Get": {
            "$ref": "./examples/BuildDefinitionsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "BuildDefinitions"
        ],
        "summary": "Creates a build definition for a container registry with the specified parameters.",
        "operationId": "BuildDefinitions_Create",
        "parameters": [
          {
            "name": "buildDefinitionCreateParameters",
            "in": "body",
            "description": "The parameters for creating a build definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildDefinitionCreateParameters"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/buildDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/BuildDefinition"
            }
          },
          "201": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/BuildDefinition"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BuildDefinitions_Create": {
            "$ref": "./examples/BuildDefinitionsCreate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "BuildDefinitions"
        ],
        "summary": "Deletes a specified build definition.",
        "operationId": "BuildDefinitions_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/buildDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BuildDefinitions_Delete": {
            "$ref": "./examples/BuildDefinitionsDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "BuildDefinitions"
        ],
        "summary": "Updates a build definition with the specified parameters.",
        "operationId": "BuildDefinitions_Update",
        "parameters": [
          {
            "name": "buildDefinitionUpdateParameters",
            "in": "body",
            "description": "The parameters for updating a build definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildDefinitionUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/buildDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/BuildDefinition"
            }
          },
          "201": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/BuildDefinition"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BuildDefinitions_Update": {
            "$ref": "./examples/BuildDefinitionsUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildDefinitions/{buildDefinitionName}/queue": {
      "post": {
        "tags": [
          "BuildDefinitions"
        ],
        "summary": "Creates a new build against the given build definition and adds it to the build queue.",
        "operationId": "BuildDefinitions_QueueBuild",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/buildDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BuildDefinitions_QueueBuild": {
            "$ref": "./examples/BuildDefinitionsQueueBuild.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildDefinitions/{buildDefinitionName}/addTrigger": {
      "post": {
        "tags": [
          "BuildDefinitions"
        ],
        "summary": "Adds a build trigger to a build definition.",
        "operationId": "BuildDefinitions_AddTrigger",
        "parameters": [
          {
            "name": "buildTriggerParameters",
            "in": "body",
            "description": "The parameters for adding a build trigger.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildTriggerParameters"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/buildDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/BuildTrigger"
            }
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BuildDefinitions_AddTrigger": {
            "$ref": "./examples/BuildDefinitionsAddTrigger.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Gets all the builds for a registry.",
        "operationId": "Builds_List",
        "parameters": [
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/BuildListResult"
            }
          }
        },
        "x-ms-odata": "#/definitions/BuildFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Builds_List": {
            "$ref": "./examples/BuildsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds/{buildId}": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Gets the detailed information for a given build.",
        "operationId": "Builds_Get",
        "parameters": [
          {
            "name": "buildId",
            "in": "path",
            "description": "The build ID.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "Builds_Get": {
            "$ref": "./examples/BuildsGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Builds"
        ],
        "summary": "Patch the build properties.",
        "operationId": "Builds_Update",
        "parameters": [
          {
            "name": "buildId",
            "in": "path",
            "description": "The build ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildUpdateParameters",
            "in": "body",
            "description": "The build update properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Builds_Update": {
            "$ref": "./examples/BuildsUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds/{buildId}/getLogLink": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Get the links to the various build logs.",
        "operationId": "Builds_GetLogLink",
        "parameters": [
          {
            "name": "buildId",
            "in": "path",
            "description": "The build ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "logParameters",
            "in": "body",
            "description": "The build log parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildLogParameters"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/BuildLogResult"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "Builds_GetLogLink": {
            "$ref": "./examples/BuildsGetLogLink.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds/queue": {
      "post": {
        "tags": [
          "Builds"
        ],
        "summary": "Creates a new build based on the request parameters and add it to the build queue.",
        "operationId": "Builds_Queue",
        "parameters": [
          {
            "name": "buildRequest",
            "in": "body",
            "description": "The parameters of a build that needs to queued.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueueBuildRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Builds_Queue": {
            "$ref": "./examples/BuildsQueue.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds/{buildId}/cancel": {
      "post": {
        "tags": [
          "Builds"
        ],
        "summary": "Cancel an existing build.",
        "operationId": "Builds_Cancel",
        "parameters": [
          {
            "name": "buildId",
            "in": "path",
            "description": "The build ID.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Builds_Cancel": {
            "$ref": "./examples/BuildsCancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildDefinitions/{buildDefinitionName}/steps/{stepName}": {
      "post": {
        "tags": [
          "BuildSteps"
        ],
        "summary": "Gets the build step configuration that includes all sensitive properties.",
        "operationId": "BuildSteps_Get",
        "parameters": [
          {
            "name": "stepName",
            "in": "path",
            "description": "The name of the build item.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/buildDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/BuildStep"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "BuildSteps_Get": {
            "$ref": "./examples/BuildStepsGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "BuildSteps"
        ],
        "summary": "Updates a build step in a build definition.",
        "operationId": "BuildSteps_Update",
        "parameters": [
          {
            "name": "stepName",
            "in": "path",
            "description": "The name of the build step.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildStepUpdateParameters",
            "in": "body",
            "description": "The parameters for updating a build step.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BuildStepUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/buildDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/BuildStep"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-examples": {
          "BuildSteps_Update": {
            "$ref": "./examples/BuildStepsUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildDefinitions/{buildDefinitionName}/steps": {
      "get": {
        "tags": [
          "BuildSteps"
        ],
        "summary": "List all the build steps for a given build definition.",
        "operationId": "BuildSteps_List",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/buildDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/BuildStepList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BuildSteps_List": {
            "$ref": "./examples/BuildStepsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildDefinitions/{buildDefinitionName}/triggers": {
      "get": {
        "tags": [
          "BuildTriggers"
        ],
        "summary": "List all the build triggers configured for a given build definition.",
        "operationId": "BuildTriggers_List",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/buildDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/BuildTriggerList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BuildTriggers_List": {
            "$ref": "./examples/BuildTriggersList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildDefinitions/{buildDefinitionName}/triggers/{triggerId}": {
      "delete": {
        "tags": [
          "BuildTriggers"
        ],
        "summary": "Deletes a build trigger from the build definition.",
        "operationId": "BuildTriggers_Delete",
        "parameters": [
          {
            "name": "triggerId",
            "in": "path",
            "description": "The trigger identifier.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/registryNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/buildDefinitionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "Success"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BuildTriggers_Delete": {
            "$ref": "./examples/BuildTriggersDelete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "BuildDefinitionListResult": {
      "description": "The collection of build definitions.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildDefinition"
          }
        },
        "nextLink": {
          "description": "The full NextLink used for paging.",
          "type": "string"
        }
      }
    },
    "BuildDefinition": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BuildDefinitionProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "BuildDefinitionProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "creationDate": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "alias": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BuildDefinitionStatus",
            "modelAsString": true
          }
        },
        "sourceRepository": {
          "$ref": "#/definitions/SourceRepositoryProperties"
        },
        "timeout": {
          "format": "int32",
          "type": "integer"
        },
        "isBaseImageTriggersEnabled": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "SourceRepositoryProperties": {
      "required": [
        "sourceControlType",
        "repositoryUrl"
      ],
      "type": "object",
      "properties": {
        "sourceControlType": {
          "enum": [
            "Github",
            "VisualStudioTeamService"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SourceControlTypes",
            "modelAsString": true
          }
        },
        "repositoryUrl": {
          "type": "string"
        },
        "isCommitTriggerEnabled": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "BuildDefinitionFilter": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        }
      }
    },
    "BuildListResult": {
      "description": "Collection of builds.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildBase"
          }
        },
        "nextLink": {
          "description": "The full NextLink used for paging.",
          "type": "string"
        }
      }
    },
    "BuildBase": {
      "type": "object",
      "properties": {
        "buildId": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Queued",
            "Started",
            "Running",
            "Succeeded",
            "Failed",
            "Cancelled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BuildStatus",
            "modelAsString": true
          }
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "BuildFilter": {
      "type": "object",
      "properties": {
        "buildId": {
          "type": "string"
        },
        "buildType": {
          "enum": [
            "AutoBuild",
            "QuickBuild"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BuildType",
            "modelAsString": true
          }
        },
        "status": {
          "enum": [
            "Queued",
            "Started",
            "Running",
            "Succeeded",
            "Failed",
            "Cancelled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BuildStatus",
            "modelAsString": true
          }
        },
        "createTime": {
          "format": "date-time",
          "type": "string"
        },
        "finishTime": {
          "format": "date-time",
          "type": "string"
        },
        "outputImageNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isArchiveEnabled": {
          "type": "boolean"
        }
      }
    },
    "BuildDefinitionCreateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BuildDefinitionPropertiesCreateParameters",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BuildDefinitionPropertiesCreateParameters": {
      "required": [
        "steps"
      ],
      "type": "object",
      "properties": {
        "sourceRepository": {
          "$ref": "#/definitions/SourceRepositoryCreateParameters"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildStepCreateParameters"
          }
        },
        "triggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildTriggerParameters"
          }
        },
        "alias": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BuildDefinitionStatus",
            "modelAsString": true
          }
        },
        "timeout": {
          "format": "int32",
          "type": "integer"
        },
        "isBaseImageTriggersEnabled": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "SourceRepositoryCreateParameters": {
      "required": [
        "sourceControlType",
        "repositoryUrl"
      ],
      "type": "object",
      "properties": {
        "sourceControlType": {
          "enum": [
            "Github",
            "VisualStudioTeamService"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SourceControlTypes",
            "modelAsString": true
          }
        },
        "repositoryUrl": {
          "type": "string"
        },
        "sourceControlAuthProperties": {
          "$ref": "#/definitions/SourceControlAuthInfo"
        },
        "isCommitTriggerEnabled": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "BuildStepCreateParameters": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "Docker"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "BuildStepTypes",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string"
        }
      },
      "discriminator": "type"
    },
    "BuildTriggerParameters": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "ImageTrigger"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "TriggerType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "type"
    },
    "SourceControlAuthInfo": {
      "required": [
        "token"
      ],
      "type": "object",
      "properties": {
        "tokenType": {
          "enum": [
            "PAT",
            "OAuth"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TokenType",
            "modelAsString": true
          }
        },
        "token": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "expiresIn": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BuildDefinitionUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BuildDefinitionPropertiesUpdateParameters",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BuildDefinitionPropertiesUpdateParameters": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BuildDefinitionStatus",
            "modelAsString": true
          }
        },
        "timeout": {
          "format": "int32",
          "type": "integer"
        },
        "isBaseImageTriggersEnabled": {
          "default": false,
          "type": "boolean"
        },
        "sourceRepository": {
          "$ref": "#/definitions/SourceRepositoryUpdateParameters"
        }
      }
    },
    "SourceRepositoryUpdateParameters": {
      "type": "object",
      "properties": {
        "sourceControlAuthProperties": {
          "$ref": "#/definitions/SourceControlAuthInfo"
        },
        "isCommitTriggerEnabled": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "Build": {
      "type": "object",
      "properties": {
        "buildId": {
          "type": "string"
        },
        "status": {
          "enum": [
            "Queued",
            "Started",
            "Running",
            "Succeeded",
            "Failed",
            "Cancelled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BuildStatus",
            "modelAsString": true
          }
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "type": "string"
        },
        "buildType": {
          "enum": [
            "AutoBuild",
            "QuickBuild"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BuildType",
            "modelAsString": true
          }
        },
        "createTime": {
          "format": "date-time",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "finishTime": {
          "format": "date-time",
          "type": "string"
        },
        "outputImages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageDescriptor"
          }
        },
        "buildDefinition": {
          "type": "string"
        },
        "trigger": {
          "type": "string"
        },
        "isArchiveEnabled": {
          "type": "boolean"
        },
        "platform": {
          "$ref": "#/definitions/PlatformProperties"
        }
      }
    },
    "ImageDescriptor": {
      "required": [
        "imageName",
        "digest"
      ],
      "type": "object",
      "properties": {
        "imageName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "digest": {
          "type": "string"
        }
      }
    },
    "PlatformProperties": {
      "required": [
        "osType"
      ],
      "type": "object",
      "properties": {
        "osType": {
          "enum": [
            "Windows",
            "Linux"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OsTypes",
            "modelAsString": true
          }
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BuildTrigger": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "ImageTrigger"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "TriggerType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "type"
    },
    "BuildUpdateParameters": {
      "type": "object",
      "properties": {
        "isArchiveEnabled": {
          "type": "boolean"
        }
      }
    },
    "BuildLogParameters": {
      "required": [
        "logType"
      ],
      "type": "object",
      "properties": {
        "logType": {
          "enum": [
            "RawText"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BuildLogType",
            "modelAsString": true
          }
        }
      }
    },
    "BuildLogResult": {
      "required": [
        "logType",
        "logLink"
      ],
      "type": "object",
      "properties": {
        "logType": {
          "enum": [
            "RawText"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BuildLogType",
            "modelAsString": true
          }
        },
        "logLink": {
          "type": "string"
        }
      }
    },
    "QueueBuildRequest": {
      "required": [
        "imageName",
        "sourceLocation",
        "buildParameters"
      ],
      "type": "object",
      "properties": {
        "imageName": {
          "type": "string"
        },
        "sourceLocation": {
          "type": "string"
        },
        "buildArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildArgument"
          }
        },
        "isPushEnabled": {
          "default": false,
          "type": "boolean"
        },
        "timeout": {
          "format": "int32",
          "type": "integer"
        },
        "platform": {
          "$ref": "#/definitions/PlatformProperties"
        },
        "buildParameters": {
          "$ref": "#/definitions/QueueBuildParameters"
        }
      }
    },
    "BuildArgument": {
      "required": [
        "type",
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "DockerBuildArgument"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BuildArgumentType",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "isSecret": {
          "type": "boolean"
        }
      }
    },
    "QueueBuildParameters": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "type"
    },
    "BuildStep": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "Docker"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "BuildStepTypes",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string"
        }
      },
      "discriminator": "type"
    },
    "BuildStepUpdateParameters": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "type"
    },
    "BuildStepList": {
      "description": "The collection of build items.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildStep"
          }
        },
        "nextLink": {
          "description": "The full NextLink used for paging.",
          "type": "string"
        }
      }
    },
    "BuildTriggerList": {
      "description": "The collection of build triggers.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The collection value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildTrigger"
          }
        },
        "nextLink": {
          "description": "The full NextLink used for paging.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "An Azure resource.",
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The location of the resource. This cannot be changed after the resource is created.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "The tags of the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "DockerBuildParameters": {
      "required": [
        "type",
        "dockerFilePath"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/QueueBuildParameters"
        }
      ],
      "properties": {
        "dockerFilePath": {
          "type": "string"
        },
        "contextPath": {
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Docker"
    },
    "DockerBuildStep": {
      "required": [
        "branch",
        "imageName",
        "name"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BuildStep"
        }
      ],
      "properties": {
        "branch": {
          "type": "string"
        },
        "imageName": {
          "type": "string"
        },
        "isPushEnabled": {
          "default": false,
          "type": "boolean"
        },
        "dockerFilePath": {
          "type": "string"
        },
        "contextPath": {
          "type": "string"
        },
        "buildArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildArgument"
          }
        },
        "baseImageDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageDescriptor"
          },
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "Docker"
    },
    "DockerBuildStepUpdateParameters": {
      "required": [
        "type"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BuildStepUpdateParameters"
        }
      ],
      "properties": {
        "imageName": {
          "type": "string"
        },
        "isPushEnabled": {
          "default": false,
          "type": "boolean"
        },
        "dockerFilePath": {
          "type": "string"
        },
        "contextPath": {
          "type": "string"
        },
        "buildArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildArgument"
          }
        }
      },
      "x-ms-discriminator-value": "Docker"
    },
    "DockerBuildStepCreateParameters": {
      "required": [
        "type",
        "branch",
        "imageName",
        "name"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BuildStepCreateParameters"
        }
      ],
      "properties": {
        "branch": {
          "type": "string"
        },
        "imageName": {
          "type": "string"
        },
        "isPushEnabled": {
          "default": false,
          "type": "boolean"
        },
        "dockerFilePath": {
          "type": "string"
        },
        "contextPath": {
          "type": "string"
        },
        "buildArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildArgument"
          }
        }
      },
      "x-ms-discriminator-value": "Docker"
    },
    "ImageTrigger": {
      "required": [
        "id",
        "imageName"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BuildTrigger"
        }
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "imageName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ImageTrigger"
    },
    "ImageTriggerParameters": {
      "required": [
        "type",
        "imageName"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BuildTriggerParameters"
        }
      ],
      "properties": {
        "imageName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ImageTrigger"
    }
  },
  "parameters": {
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The Microsoft Azure subscription ID.",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group to which the container registry belongs.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "registryNameParameter": {
      "name": "registryName",
      "in": "path",
      "description": "The name of the container registry.",
      "required": true,
      "type": "string",
      "maxLength": 50,
      "minLength": 5,
      "pattern": "^[a-zA-Z0-9]*$",
      "x-ms-parameter-location": "method"
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The client API version.",
      "required": true,
      "type": "string"
    },
    "buildDefinitionNameParameter": {
      "name": "buildDefinitionName",
      "in": "path",
      "description": "The name of the container registry build definition.",
      "required": true,
      "type": "string",
      "maxLength": 50,
      "minLength": 5,
      "pattern": "^[a-zA-Z0-9]*$",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}