{
  "swagger": "2.0",
  "info": {
    "title": "ContainerRegistryManagementClient",
    "version": "2025-05-01-preview",
    "description": "The Microsoft Azure Container Registry management API provides create, read, update, and delete functionality for Azure Container Registry resources including registries, replications, webhooks, tasks, runs, and other registry components."
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/providers/microsoft.ContainerRegistry/operations": {
      "get": {
        "operationId": "Operations_List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationList": {
            "$ref": "./examples/OperationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.ContainerRegistry/checkNameAvailability": {
      "post": {
        "operationId": "Registries_CheckNameAvailability",
        "parameters": [
          {
            "name": "registryNameCheckRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryNameCheckRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryNameStatus"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryCheckNameAvailable": {
            "$ref": "./examples/RegistryCheckNameAvailable.json"
          },
          "RegistryCheckNameNotAvailable": {
            "$ref": "./examples/RegistryCheckNameNotAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.ContainerRegistry/registries": {
      "get": {
        "operationId": "Registries_List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryList": {
            "$ref": "./examples/RegistryList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries": {
      "get": {
        "operationId": "Registries_ListByResourceGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryListByResourceGroup": {
            "$ref": "./examples/RegistryListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}": {
      "get": {
        "operationId": "Registries_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Registry"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryGet": {
            "$ref": "./examples/RegistryGet.json"
          }
        }
      },
      "put": {
        "operationId": "Registries_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "registry",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Registry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Registry"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Registry"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryCreate": {
            "$ref": "./examples/RegistryCreate.json"
          },
          "RegistryCreateAbac": {
            "$ref": "./examples/RegistryCreateAbac.json"
          },
          "RegistryCreateDomainNameLabelScope": {
            "$ref": "./examples/RegistryCreateDomainNameLabelScope.json"
          },
          "RegistryCreateZoneRedundant": {
            "$ref": "./examples/RegistryCreateZoneRedundant.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Registry"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Registries_Update",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "registryUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Registry"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Registry"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryUpdate": {
            "$ref": "./examples/RegistryUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Registry"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Registries_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryDelete": {
            "$ref": "./examples/RegistryDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/cacheRules": {
      "get": {
        "operationId": "CacheRules_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CacheRulesListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CacheRuleList": {
            "$ref": "./examples/CacheRuleList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/cacheRules/{cacheRuleName}": {
      "get": {
        "operationId": "CacheRules_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "cacheRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CacheRule"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CacheRuleGet": {
            "$ref": "./examples/CacheRuleGet.json"
          }
        }
      },
      "put": {
        "operationId": "CacheRules_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "cacheRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "cacheRuleCreateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CacheRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CacheRule"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CacheRule"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CacheRuleCreate": {
            "$ref": "./examples/CacheRuleCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/CacheRule"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CacheRules_Update",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "cacheRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "cacheRuleUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CacheRuleUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CacheRule"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CacheRule"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CacheRuleUpdate": {
            "$ref": "./examples/CacheRuleUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/CacheRule"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CacheRules_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "cacheRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CacheRuleDelete": {
            "$ref": "./examples/CacheRuleDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/connectedRegistries": {
      "get": {
        "operationId": "ConnectedRegistries_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "$filter",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ConnectedRegistryListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConnectedRegistryList": {
            "$ref": "./examples/ConnectedRegistryList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/connectedRegistries/{connectedRegistryName}": {
      "get": {
        "operationId": "ConnectedRegistries_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "connectedRegistryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ConnectedRegistry"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConnectedRegistryGet": {
            "$ref": "./examples/ConnectedRegistryGet.json"
          }
        }
      },
      "put": {
        "operationId": "ConnectedRegistries_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "connectedRegistryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "connectedRegistryCreateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectedRegistry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ConnectedRegistry"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ConnectedRegistry"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConnectedRegistryCreate": {
            "$ref": "./examples/ConnectedRegistryCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ConnectedRegistry"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ConnectedRegistries_Update",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "connectedRegistryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "connectedRegistryUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectedRegistryUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ConnectedRegistry"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ConnectedRegistry"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConnectedRegistryUpdate": {
            "$ref": "./examples/ConnectedRegistryUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ConnectedRegistry"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ConnectedRegistries_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "connectedRegistryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConnectedRegistryDelete": {
            "$ref": "./examples/ConnectedRegistryDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/connectedRegistries/{connectedRegistryName}/deactivate": {
      "post": {
        "operationId": "ConnectedRegistries_Deactivate",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "connectedRegistryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConnectedRegistryDeactivate": {
            "$ref": "./examples/ConnectedRegistryDeactivate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/credentialSets": {
      "get": {
        "operationId": "CredentialSets_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CredentialSetListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CredentialSetList": {
            "$ref": "./examples/CredentialSetList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/credentialSets/{credentialSetName}": {
      "get": {
        "operationId": "CredentialSets_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "credentialSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CredentialSet"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CredentialSetGet": {
            "$ref": "./examples/CredentialSetGet.json"
          }
        }
      },
      "put": {
        "operationId": "CredentialSets_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "credentialSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "credentialSetCreateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CredentialSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CredentialSet"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CredentialSet"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CredentialSetCreate": {
            "$ref": "./examples/CredentialSetCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/CredentialSet"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CredentialSets_Update",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "credentialSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "credentialSetUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CredentialSetUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CredentialSet"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CredentialSet"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CredentialSetUpdate": {
            "$ref": "./examples/CredentialSetUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/CredentialSet"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CredentialSets_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "credentialSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CredentialSetDelete": {
            "$ref": "./examples/CredentialSetDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/exportPipelines": {
      "get": {
        "operationId": "ExportPipelines_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ExportPipelineListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExportPipelineList": {
            "$ref": "./examples/ExportPipelineList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/exportPipelines/{exportPipelineName}": {
      "get": {
        "operationId": "ExportPipelines_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "exportPipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ExportPipeline"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExportPipelineGet": {
            "$ref": "./examples/ExportPipelineGet.json"
          }
        }
      },
      "put": {
        "operationId": "ExportPipelines_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "exportPipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "exportPipelineCreateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportPipeline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ExportPipeline"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ExportPipeline"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExportPipelineCreate": {
            "$ref": "./examples/ExportPipelineCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ExportPipeline"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ExportPipelines_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "exportPipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ExportPipelineDelete": {
            "$ref": "./examples/ExportPipelineDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/generateCredentials": {
      "post": {
        "operationId": "Registries_GenerateCredentials",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "generateCredentialsParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateCredentialsParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/GenerateCredentialsResult"
            }
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryGenerateCredentials": {
            "$ref": "./examples/RegistryGenerateCredentials.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/importImage": {
      "post": {
        "operationId": "Registries_ImportImage",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportImageParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImportImageByManifestDigest": {
            "$ref": "./examples/ImportImageByManifestDigest.json"
          },
          "ImportImageByTag": {
            "$ref": "./examples/ImportImageByTag.json"
          },
          "ImportImageFromPublicRegistry": {
            "$ref": "./examples/ImportImageFromPublicRegistry.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/importPipelines": {
      "get": {
        "operationId": "ImportPipelines_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ImportPipelineListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImportPipelineList": {
            "$ref": "./examples/ImportPipelineList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/importPipelines/{importPipelineName}": {
      "get": {
        "operationId": "ImportPipelines_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "importPipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ImportPipeline"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImportPipelineGet": {
            "$ref": "./examples/ImportPipelineGet.json"
          }
        }
      },
      "put": {
        "operationId": "ImportPipelines_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "importPipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "importPipelineCreateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportPipeline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ImportPipeline"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ImportPipeline"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImportPipelineCreate": {
            "$ref": "./examples/ImportPipelineCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ImportPipeline"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ImportPipelines_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "importPipelineName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImportPipelineDelete": {
            "$ref": "./examples/ImportPipelineDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/listCredentials": {
      "post": {
        "operationId": "Registries_ListCredentials",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryListCredentialsResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryListCredentials": {
            "$ref": "./examples/RegistryListCredentials.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/listUsages": {
      "get": {
        "operationId": "Registries_ListUsages",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryUsageListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryListUsages": {
            "$ref": "./examples/RegistryListUsages.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/packages/{packageType}/archives": {
      "get": {
        "operationId": "Archives_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "packageType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-zA-Z]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ArchiveListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ArchiveList": {
            "$ref": "./examples/ArchiveList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/packages/{packageType}/archives/{archiveName}": {
      "get": {
        "operationId": "Archives_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "packageType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-zA-Z]*$"
          },
          {
            "name": "archiveName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 200,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Archive"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ArchiveGet": {
            "$ref": "./examples/ArchiveGet.json"
          }
        }
      },
      "put": {
        "operationId": "Archives_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "packageType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-zA-Z]*$"
          },
          {
            "name": "archiveName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 200,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "archiveCreateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Archive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Archive"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Archive"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ArchiveCreate": {
            "$ref": "./examples/ArchiveCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Archive"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Archives_Update",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "packageType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-zA-Z]*$"
          },
          {
            "name": "archiveName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 200,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "archiveUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArchiveUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Archive"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ArchiveUpdate": {
            "$ref": "./examples/ArchiveUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Archives_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "packageType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-zA-Z]*$"
          },
          {
            "name": "archiveName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 200,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ArchiveDelete": {
            "$ref": "./examples/ArchiveDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/packages/{packageType}/archives/{archiveName}/versions": {
      "get": {
        "operationId": "ArchiveVersions_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "packageType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-zA-Z]*$"
          },
          {
            "name": "archiveName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 200,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ArchiveVersionListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ArchiveVersionList": {
            "$ref": "./examples/ArchiveVersionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/packages/{packageType}/archives/{archiveName}/versions/{archiveVersionName}": {
      "get": {
        "operationId": "ArchiveVersions_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "packageType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-zA-Z]*$"
          },
          {
            "name": "archiveName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 200,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "archiveVersionName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 200,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ArchiveVersion"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ArchiveVersionGet": {
            "$ref": "./examples/ArchiveVersionGet.json"
          }
        }
      },
      "put": {
        "operationId": "ArchiveVersions_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "packageType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-zA-Z]*$"
          },
          {
            "name": "archiveName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 200,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "archiveVersionName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 200,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ArchiveVersion"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ArchiveVersion"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ArchiveVersionCreate": {
            "$ref": "./examples/ArchiveVersionCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ArchiveVersion"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ArchiveVersions_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "packageType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-zA-Z]*$"
          },
          {
            "name": "archiveName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 200,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "archiveVersionName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 200,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ArchiveVersionDelete": {
            "$ref": "./examples/ArchiveVersionDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/pipelineRuns": {
      "get": {
        "operationId": "PipelineRuns_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PipelineRunListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PipelineRunList": {
            "$ref": "./examples/PipelineRunList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/pipelineRuns/{pipelineRunName}": {
      "get": {
        "operationId": "PipelineRuns_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "pipelineRunName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PipelineRun"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PipelineRunGet": {
            "$ref": "./examples/PipelineRunGet.json"
          }
        }
      },
      "put": {
        "operationId": "PipelineRuns_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "pipelineRunName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "pipelineRunCreateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PipelineRun"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PipelineRun"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PipelineRun"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PipelineRunCreate_Export": {
            "$ref": "./examples/PipelineRunCreate_Export.json"
          },
          "PipelineRunCreate_Import": {
            "$ref": "./examples/PipelineRunCreate_Import.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/PipelineRun"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PipelineRuns_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "pipelineRunName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PipelineRunDelete": {
            "$ref": "./examples/PipelineRunDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnectionList": {
            "$ref": "./examples/PrivateEndpointConnectionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnectionGet": {
            "$ref": "./examples/PrivateEndpointConnectionGet.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnectionCreateOrUpdate": {
            "$ref": "./examples/PrivateEndpointConnectionCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/PrivateEndpointConnection"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnectionDelete": {
            "$ref": "./examples/PrivateEndpointConnectionDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/privateLinkResources": {
      "get": {
        "operationId": "Registries_ListPrivateLinkResources",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryListPrivateLinkResources": {
            "$ref": "./examples/RegistryListPrivateLinkResources.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/privateLinkResources/{groupName}": {
      "get": {
        "operationId": "Registries_GetPrivateLinkResource",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "groupName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryGetPrivateLinkResource": {
            "$ref": "./examples/RegistryGetPrivateLinkResource.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/regenerateCredential": {
      "post": {
        "operationId": "Registries_RegenerateCredential",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "regenerateCredentialParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateCredentialParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/RegistryListCredentialsResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryRegenerateCredential": {
            "$ref": "./examples/RegistryRegenerateCredential.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/replications": {
      "get": {
        "operationId": "Replications_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ReplicationListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReplicationList": {
            "$ref": "./examples/ReplicationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/replications/{replicationName}": {
      "get": {
        "operationId": "Replications_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Replication"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReplicationGet": {
            "$ref": "./examples/ReplicationGet.json"
          }
        }
      },
      "put": {
        "operationId": "Replications_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replication",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Replication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Replication"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Replication"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReplicationCreate": {
            "$ref": "./examples/ReplicationCreate.json"
          },
          "ReplicationCreateZoneRedundant": {
            "$ref": "./examples/ReplicationCreateZoneRedundant.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Replication"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Replications_Update",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplicationUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Replication"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Replication"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReplicationUpdate": {
            "$ref": "./examples/ReplicationUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Replication"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Replications_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReplicationDelete": {
            "$ref": "./examples/ReplicationDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/scopeMaps": {
      "get": {
        "operationId": "ScopeMaps_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ScopeMapListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScopeMapList": {
            "$ref": "./examples/ScopeMapList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}": {
      "get": {
        "operationId": "ScopeMaps_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "scopeMapName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ScopeMap"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScopeMapGet": {
            "$ref": "./examples/ScopeMapGet.json"
          }
        }
      },
      "put": {
        "operationId": "ScopeMaps_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "scopeMapName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          },
          {
            "name": "scopeMapCreateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScopeMap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ScopeMap"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ScopeMap"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScopeMapCreate": {
            "$ref": "./examples/ScopeMapCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ScopeMap"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ScopeMaps_Update",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "scopeMapName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          },
          {
            "name": "scopeMapUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScopeMapUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ScopeMap"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ScopeMap"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScopeMapUpdate": {
            "$ref": "./examples/ScopeMapUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ScopeMap"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ScopeMaps_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "scopeMapName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScopeMapDelete": {
            "$ref": "./examples/ScopeMapDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/tokens": {
      "get": {
        "operationId": "Tokens_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/TokenListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TokenList": {
            "$ref": "./examples/TokenList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}": {
      "get": {
        "operationId": "Tokens_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "tokenName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TokenGet": {
            "$ref": "./examples/TokenGet.json"
          }
        }
      },
      "put": {
        "operationId": "Tokens_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "tokenName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "tokenCreateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Token"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TokenCreate": {
            "$ref": "./examples/TokenCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Token"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Tokens_Update",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "tokenName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "tokenUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Token"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TokenUpdate": {
            "$ref": "./examples/TokenUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Token"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Tokens_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "tokenName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TokenDelete": {
            "$ref": "./examples/TokenDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/webhooks": {
      "get": {
        "operationId": "Webhooks_List",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/WebhookListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookList": {
            "$ref": "./examples/WebhookList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}": {
      "get": {
        "operationId": "Webhooks_Get",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookGet": {
            "$ref": "./examples/WebhookGet.json"
          }
        }
      },
      "put": {
        "operationId": "Webhooks_Create",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookCreateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookCreateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Webhook"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookCreate": {
            "$ref": "./examples/WebhookCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Webhook"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Webhooks_Update",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/Webhook"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookUpdate": {
            "$ref": "./examples/WebhookUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Webhook"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Webhooks_Delete",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookDelete": {
            "$ref": "./examples/WebhookDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/getCallbackConfig": {
      "post": {
        "operationId": "Webhooks_GetCallbackConfig",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/CallbackConfig"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookGetCallbackConfig": {
            "$ref": "./examples/WebhookGetCallbackConfig.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/listEvents": {
      "post": {
        "operationId": "Webhooks_ListEvents",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EventListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookListEvents": {
            "$ref": "./examples/WebhookListEvents.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/ping": {
      "post": {
        "operationId": "Webhooks_Ping",
        "parameters": [
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/EventInfo"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookPing": {
            "$ref": "./examples/WebhookPing.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ActivationProperties": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ],
          "x-ms-enum": {
            "name": "ActivationStatus",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "Actor": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Archive": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArchiveProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ArchiveListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Archive"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "ArchivePackageSourceProperties": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "remote"
          ],
          "x-ms-enum": {
            "name": "PackageSourceType",
            "modelAsString": true
          }
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ArchiveProperties": {
      "type": "object",
      "properties": {
        "packageSource": {
          "$ref": "#/definitions/ArchivePackageSourceProperties"
        },
        "publishedVersion": {
          "type": "string"
        },
        "repositoryEndpointPrefix": {
          "type": "string"
        },
        "repositoryEndpoint": {
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "ArchiveUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArchiveUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ArchiveUpdateProperties": {
      "type": "object",
      "properties": {
        "publishedVersion": {
          "type": "string"
        }
      }
    },
    "ArchiveVersion": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArchiveVersionProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ArchiveVersionListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ArchiveVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "ArchiveVersionProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "archiveVersionErrorMessage": {
          "type": "string"
        }
      }
    },
    "AuthCredential": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "Credential1"
          ],
          "x-ms-enum": {
            "name": "CredentialName",
            "modelAsString": true
          }
        },
        "usernameSecretIdentifier": {
          "type": "string"
        },
        "passwordSecretIdentifier": {
          "type": "string"
        },
        "credentialHealth": {
          "$ref": "#/definitions/CredentialHealth",
          "readOnly": true
        }
      }
    },
    "AzureADAuthenticationAsArmPolicy": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "default": "enabled",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "AzureADAuthenticationAsArmPolicyStatus",
            "modelAsString": true
          }
        }
      }
    },
    "CacheRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CacheRuleProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CacheRuleProperties": {
      "type": "object",
      "properties": {
        "credentialSetResourceId": {
          "type": "string"
        },
        "sourceRepository": {
          "type": "string"
        },
        "targetRepository": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "CacheRuleUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CacheRuleUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "CacheRuleUpdateProperties": {
      "type": "object",
      "properties": {
        "credentialSetResourceId": {
          "type": "string"
        }
      }
    },
    "CacheRulesListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/CacheRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "CallbackConfig": {
      "type": "object",
      "properties": {
        "serviceUri": {
          "type": "string"
        },
        "customHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "serviceUri"
      ]
    },
    "ConnectedRegistry": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConnectedRegistryProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConnectedRegistryListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ConnectedRegistry"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "ConnectedRegistryProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "mode": {
          "type": "string",
          "enum": [
            "ReadWrite",
            "ReadOnly",
            "Registry",
            "Mirror"
          ],
          "x-ms-enum": {
            "name": "ConnectedRegistryMode",
            "modelAsString": true
          }
        },
        "version": {
          "type": "string",
          "readOnly": true
        },
        "connectionState": {
          "type": "string",
          "enum": [
            "Online",
            "Offline",
            "Syncing",
            "Unhealthy"
          ],
          "x-ms-enum": {
            "name": "ConnectionState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "lastActivityTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "activation": {
          "$ref": "#/definitions/ActivationProperties",
          "readOnly": true
        },
        "parent": {
          "$ref": "#/definitions/ParentProperties"
        },
        "clientTokenIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "loginServer": {
          "$ref": "#/definitions/LoginServerProperties"
        },
        "logging": {
          "$ref": "#/definitions/LoggingProperties"
        },
        "statusDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StatusDetailProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "correlationId"
          ]
        },
        "notificationsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "garbageCollection": {
          "$ref": "#/definitions/GarbageCollectionProperties"
        }
      },
      "required": [
        "mode",
        "parent"
      ]
    },
    "ConnectedRegistryUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConnectedRegistryUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ConnectedRegistryUpdateProperties": {
      "type": "object",
      "properties": {
        "syncProperties": {
          "$ref": "#/definitions/SyncUpdateProperties"
        },
        "logging": {
          "$ref": "#/definitions/LoggingProperties"
        },
        "clientTokenIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notificationsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "garbageCollection": {
          "$ref": "#/definitions/GarbageCollectionProperties"
        }
      }
    },
    "CredentialHealth": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "Healthy",
            "Unhealthy"
          ],
          "x-ms-enum": {
            "name": "CredentialHealthStatus",
            "modelAsString": true
          }
        },
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "CredentialSet": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CredentialSetProperties",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/IdentityProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CredentialSetListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/CredentialSet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "CredentialSetProperties": {
      "type": "object",
      "properties": {
        "loginServer": {
          "type": "string"
        },
        "authCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthCredential"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "CredentialSetUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CredentialSetUpdateProperties",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/IdentityProperties"
        }
      }
    },
    "CredentialSetUpdateProperties": {
      "type": "object",
      "properties": {
        "authCredentials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthCredential"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "DebianArchivePackageSourceProperties": {
      "type": "object",
      "properties": {
        "distributionName": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ArchivePackageSourceProperties"
        }
      ]
    },
    "DebianArchiveProperties": {
      "type": "object",
      "properties": {
        "distributionName": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ArchiveProperties"
        }
      ]
    },
    "EncryptionProperty": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": true
          }
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "eventRequestMessage": {
          "$ref": "#/definitions/EventRequestMessage"
        },
        "eventResponseMessage": {
          "$ref": "#/definitions/EventResponseMessage"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EventInfo"
        }
      ]
    },
    "EventContent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "action": {
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/Target"
        },
        "request": {
          "$ref": "#/definitions/Request"
        },
        "actor": {
          "$ref": "#/definitions/Actor"
        },
        "source": {
          "$ref": "#/definitions/Source"
        }
      }
    },
    "EventInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "EventListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "EventRequestMessage": {
      "type": "object",
      "properties": {
        "content": {
          "$ref": "#/definitions/EventContent"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "method": {
          "type": "string"
        },
        "requestUri": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "EventResponseMessage": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reasonPhrase": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ExportPipeline": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExportPipelineProperties",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/IdentityProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ExportPipelineListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ExportPipeline"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "ExportPipelineProperties": {
      "type": "object",
      "properties": {
        "target": {
          "$ref": "#/definitions/ExportPipelineTargetProperties"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "OverwriteTags",
              "OverwriteBlobs",
              "DeleteSourceBlobOnSuccess",
              "ContinueOnErrors"
            ],
            "x-ms-enum": {
              "name": "PipelineOptions",
              "modelAsString": true
            }
          }
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "required": [
        "target"
      ]
    },
    "ExportPipelineTargetProperties": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "keyVaultUri": {
          "type": "string"
        }
      },
      "required": [
        "keyVaultUri"
      ]
    },
    "ExportPolicy": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "default": "enabled",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "ExportPolicyStatus",
            "modelAsString": true
          }
        }
      }
    },
    "GarbageCollectionProperties": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "schedule": {
          "type": "string"
        }
      }
    },
    "GenerateCredentialsParameters": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string"
        },
        "expiry": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string",
          "enum": [
            "password1",
            "password2"
          ],
          "x-ms-enum": {
            "name": "TokenPasswordName",
            "modelAsString": true
          }
        }
      }
    },
    "GenerateCredentialsResult": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "passwords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenPassword"
          }
        }
      }
    },
    "IPRule": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "Allow",
          "enum": [
            "Allow"
          ],
          "x-ms-enum": {
            "name": "Action",
            "modelAsString": true
          }
        },
        "value": {
          "type": "string",
          "x-ms-client-name": "IPAddressOrRange"
        }
      },
      "required": [
        "value"
      ]
    },
    "IdentityProperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserIdentityProperties"
          }
        }
      }
    },
    "ImportImageParameters": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/ImportSource"
        },
        "targetTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "untaggedTargetRepositories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mode": {
          "type": "string",
          "default": "NoForce",
          "enum": [
            "NoForce",
            "Force"
          ],
          "x-ms-enum": {
            "name": "ImportMode",
            "modelAsString": true
          }
        }
      },
      "required": [
        "source"
      ]
    },
    "ImportPipeline": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ImportPipelineProperties",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/IdentityProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ImportPipelineListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ImportPipeline"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "ImportPipelineProperties": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/ImportPipelineSourceProperties"
        },
        "trigger": {
          "$ref": "#/definitions/PipelineTriggerProperties"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "OverwriteTags",
              "OverwriteBlobs",
              "DeleteSourceBlobOnSuccess",
              "ContinueOnErrors"
            ],
            "x-ms-enum": {
              "name": "PipelineOptions",
              "modelAsString": true
            }
          }
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "required": [
        "source"
      ]
    },
    "ImportPipelineSourceProperties": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "AzureStorageBlobContainer",
          "enum": [
            "AzureStorageBlobContainer"
          ],
          "x-ms-enum": {
            "name": "PipelineSourceType",
            "modelAsString": true
          }
        },
        "uri": {
          "type": "string"
        },
        "keyVaultUri": {
          "type": "string"
        }
      },
      "required": [
        "keyVaultUri"
      ]
    },
    "ImportSource": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "registryUri": {
          "type": "string"
        },
        "credentials": {
          "$ref": "#/definitions/ImportSourceCredentials"
        },
        "sourceImage": {
          "type": "string"
        }
      },
      "required": [
        "sourceImage"
      ]
    },
    "ImportSourceCredentials": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "password"
      ]
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string"
        },
        "versionedKeyIdentifier": {
          "type": "string",
          "readOnly": true
        },
        "identity": {
          "type": "string"
        },
        "keyRotationEnabled": {
          "type": "boolean",
          "readOnly": true
        },
        "lastKeyRotationTimestamp": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "LoggingProperties": {
      "type": "object",
      "properties": {
        "logLevel": {
          "type": "string",
          "default": "Information",
          "enum": [
            "Debug",
            "Information",
            "Warning",
            "Error",
            "None"
          ],
          "x-ms-enum": {
            "name": "LogLevel",
            "modelAsString": true
          }
        },
        "auditLogStatus": {
          "type": "string",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "AuditLogStatus",
            "modelAsString": true
          }
        }
      }
    },
    "LoginServerProperties": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "readOnly": true
        },
        "tls": {
          "$ref": "#/definitions/TlsProperties",
          "readOnly": true
        }
      }
    },
    "NetworkRuleSet": {
      "type": "object",
      "properties": {
        "defaultAction": {
          "type": "string",
          "default": "Allow",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "DefaultAction",
            "modelAsString": true
          }
        },
        "ipRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPRule"
          }
        }
      },
      "required": [
        "defaultAction"
      ]
    },
    "ParentProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id"
        },
        "syncProperties": {
          "$ref": "#/definitions/SyncProperties"
        }
      },
      "required": [
        "syncProperties"
      ]
    },
    "PipelineRun": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PipelineRunProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PipelineRunListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/PipelineRun"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "PipelineRunProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "request": {
          "$ref": "#/definitions/PipelineRunRequest"
        },
        "response": {
          "$ref": "#/definitions/PipelineRunResponse",
          "readOnly": true
        },
        "forceUpdateTag": {
          "type": "string"
        }
      }
    },
    "PipelineRunRequest": {
      "type": "object",
      "properties": {
        "pipelineResourceId": {
          "type": "string"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source": {
          "$ref": "#/definitions/PipelineRunSourceProperties"
        },
        "target": {
          "$ref": "#/definitions/PipelineRunTargetProperties"
        },
        "catalogDigest": {
          "type": "string"
        }
      }
    },
    "PipelineRunResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "importedArtifacts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "progress": {
          "$ref": "#/definitions/ProgressProperties"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "source": {
          "$ref": "#/definitions/ImportPipelineSourceProperties"
        },
        "target": {
          "$ref": "#/definitions/ExportPipelineTargetProperties"
        },
        "catalogDigest": {
          "type": "string"
        },
        "trigger": {
          "$ref": "#/definitions/PipelineTriggerDescriptor"
        },
        "pipelineRunErrorMessage": {
          "type": "string"
        }
      }
    },
    "PipelineRunSourceProperties": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "AzureStorageBlob",
          "enum": [
            "AzureStorageBlob"
          ],
          "x-ms-enum": {
            "name": "PipelineRunSourceType",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PipelineRunTargetProperties": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "AzureStorageBlob",
          "enum": [
            "AzureStorageBlob"
          ],
          "x-ms-enum": {
            "name": "PipelineRunTargetType",
            "modelAsString": true
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PipelineSourceTriggerDescriptor": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PipelineSourceTriggerProperties": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "TriggerStatus",
            "modelAsString": true
          }
        }
      },
      "required": [
        "status"
      ]
    },
    "PipelineTriggerDescriptor": {
      "type": "object",
      "properties": {
        "sourceTrigger": {
          "$ref": "#/definitions/PipelineSourceTriggerDescriptor"
        }
      }
    },
    "PipelineTriggerProperties": {
      "type": "object",
      "properties": {
        "sourceTrigger": {
          "$ref": "#/definitions/PipelineSourceTriggerProperties"
        }
      }
    },
    "Policies": {
      "type": "object",
      "properties": {
        "quarantinePolicy": {
          "$ref": "#/definitions/QuarantinePolicy"
        },
        "trustPolicy": {
          "$ref": "#/definitions/TrustPolicy"
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy"
        },
        "exportPolicy": {
          "$ref": "#/definitions/ExportPolicy"
        },
        "azureADAuthenticationAsArmPolicy": {
          "$ref": "#/definitions/AzureADAuthenticationAsArmPolicy"
        },
        "softDeletePolicy": {
          "$ref": "#/definitions/SoftDeletePolicy"
        }
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint"
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "requiredMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "Approved",
            "Pending",
            "Rejected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "ConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "type": "string"
        },
        "actionsRequired": {
          "type": "string",
          "enum": [
            "None",
            "Recreate"
          ],
          "x-ms-enum": {
            "name": "ActionsRequired",
            "modelAsString": true
          }
        }
      }
    },
    "ProgressProperties": {
      "type": "object",
      "properties": {
        "percentage": {
          "type": "string"
        }
      }
    },
    "QuarantinePolicy": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "PolicyStatus",
            "modelAsString": true
          }
        }
      }
    },
    "RegenerateCredentialParameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "password",
            "password2"
          ],
          "x-ms-enum": {
            "name": "PasswordName",
            "modelAsString": false
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "Registry": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RegistryProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "identity": {
          "$ref": "#/definitions/IdentityProperties"
        }
      },
      "required": [
        "sku"
      ],
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "RegistryListCredentialsResult": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "passwords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegistryPassword"
          }
        }
      }
    },
    "RegistryListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Registry"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "RegistryNameCheckRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 5,
          "maxLength": 50,
          "pattern": "^[a-zA-Z0-9]*$"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ContainerRegistry/registries"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "resourceGroupName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 90
        },
        "autoGeneratedDomainNameLabelScope": {
          "type": "string",
          "enum": [
            "Unsecure",
            "TenantReuse",
            "SubscriptionReuse",
            "ResourceGroupReuse",
            "NoReuse"
          ],
          "x-ms-enum": {
            "name": "AutoGeneratedDomainNameLabelScope",
            "modelAsString": true
          }
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "RegistryNameStatus": {
      "type": "object",
      "properties": {
        "availableLoginServerName": {
          "type": "string"
        },
        "nameAvailable": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "RegistryPassword": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "password",
            "password2"
          ],
          "x-ms-enum": {
            "name": "PasswordName",
            "modelAsString": false
          }
        },
        "value": {
          "type": "string"
        }
      }
    },
    "RegistryProperties": {
      "type": "object",
      "properties": {
        "loginServer": {
          "type": "string",
          "readOnly": true
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/Status",
          "readOnly": true
        },
        "adminUserEnabled": {
          "type": "boolean"
        },
        "networkRuleSet": {
          "$ref": "#/definitions/NetworkRuleSet"
        },
        "policies": {
          "$ref": "#/definitions/Policies"
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperty"
        },
        "dataEndpointEnabled": {
          "type": "boolean"
        },
        "dataEndpointHostNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "publicNetworkAccess": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        },
        "networkRuleBypassOptions": {
          "type": "string",
          "enum": [
            "AzureServices",
            "None"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleBypassOptions",
            "modelAsString": true
          }
        },
        "networkRuleBypassAllowedForTasks": {
          "type": "boolean"
        },
        "zoneRedundancy": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ZoneRedundancy",
            "modelAsString": true
          }
        },
        "anonymousPullEnabled": {
          "type": "boolean"
        },
        "metadataSearch": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "MetadataSearch",
            "modelAsString": true
          }
        },
        "autoGeneratedDomainNameLabelScope": {
          "type": "string",
          "enum": [
            "Unsecure",
            "TenantReuse",
            "SubscriptionReuse",
            "ResourceGroupReuse",
            "NoReuse"
          ],
          "x-ms-enum": {
            "name": "AutoGeneratedDomainNameLabelScope",
            "modelAsString": true
          }
        },
        "roleAssignmentMode": {
          "type": "string",
          "enum": [
            "AbacRepositoryPermissions",
            "LegacyRegistryPermissions"
          ],
          "x-ms-enum": {
            "name": "RoleAssignmentMode",
            "modelAsString": true
          }
        }
      }
    },
    "RegistryPropertiesUpdateParameters": {
      "type": "object",
      "properties": {
        "adminUserEnabled": {
          "type": "boolean"
        },
        "networkRuleSet": {
          "$ref": "#/definitions/NetworkRuleSet"
        },
        "policies": {
          "$ref": "#/definitions/Policies"
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperty"
        },
        "dataEndpointEnabled": {
          "type": "boolean"
        },
        "publicNetworkAccess": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        },
        "networkRuleBypassOptions": {
          "type": "string",
          "enum": [
            "AzureServices",
            "None"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleBypassOptions",
            "modelAsString": true
          }
        },
        "networkRuleBypassAllowedForTasks": {
          "type": "boolean"
        },
        "anonymousPullEnabled": {
          "type": "boolean"
        },
        "metadataSearch": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "MetadataSearch",
            "modelAsString": true
          }
        },
        "roleAssignmentMode": {
          "type": "string",
          "enum": [
            "AbacRepositoryPermissions",
            "LegacyRegistryPermissions"
          ],
          "x-ms-enum": {
            "name": "RoleAssignmentMode",
            "modelAsString": true
          }
        }
      }
    },
    "RegistryUpdateParameters": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/IdentityProperties"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "properties": {
          "$ref": "#/definitions/RegistryPropertiesUpdateParameters",
          "x-ms-client-flatten": true
        }
      }
    },
    "RegistryUsage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int64"
        },
        "currentValue": {
          "type": "integer",
          "format": "int64"
        },
        "unit": {
          "type": "string",
          "enum": [
            "Count",
            "Bytes"
          ],
          "x-ms-enum": {
            "name": "RegistryUsageUnit",
            "modelAsString": true
          }
        }
      }
    },
    "RegistryUsageListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegistryUsage"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "Replication": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReplicationProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ReplicationListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Replication"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "ReplicationProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/Status",
          "readOnly": true
        },
        "regionEndpointEnabled": {
          "type": "boolean",
          "default": true
        },
        "zoneRedundancy": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ZoneRedundancy",
            "modelAsString": true
          }
        }
      }
    },
    "ReplicationUpdateParameters": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ReplicationUpdateParametersProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ReplicationUpdateParametersProperties": {
      "type": "object",
      "properties": {
        "regionEndpointEnabled": {
          "type": "boolean"
        }
      }
    },
    "Request": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "addr": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "useragent": {
          "type": "string"
        }
      }
    },
    "RetentionPolicy": {
      "type": "object",
      "properties": {
        "days": {
          "type": "integer",
          "format": "int32",
          "default": 7
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "PolicyStatus",
            "modelAsString": true
          }
        }
      }
    },
    "ScopeMap": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScopeMapProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScopeMapListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ScopeMap"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "ScopeMapProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "actions"
      ]
    },
    "ScopeMapPropertiesUpdateParameters": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ScopeMapUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScopeMapPropertiesUpdateParameters",
          "x-ms-client-flatten": true
        }
      }
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "Classic",
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "enum": [
            "Classic",
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "SoftDeletePolicy": {
      "type": "object",
      "properties": {
        "retentionDays": {
          "type": "integer",
          "format": "int32",
          "default": 7
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "PolicyStatus",
            "modelAsString": true
          }
        }
      }
    },
    "Source": {
      "type": "object",
      "properties": {
        "addr": {
          "type": "string"
        },
        "instanceID": {
          "type": "string"
        }
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "displayStatus": {
          "type": "string",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "StatusDetailProperties": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": true
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SyncProperties": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string"
        },
        "schedule": {
          "type": "string"
        },
        "syncWindow": {
          "type": "string",
          "format": "duration"
        },
        "messageTtl": {
          "type": "string",
          "format": "duration"
        },
        "lastSyncTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "gatewayEndpoint": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "messageTtl",
        "tokenId"
      ]
    },
    "SyncUpdateProperties": {
      "type": "object",
      "properties": {
        "schedule": {
          "type": "string"
        },
        "syncWindow": {
          "type": "string",
          "format": "duration"
        },
        "messageTtl": {
          "type": "string",
          "format": "duration"
        }
      }
    },
    "Target": {
      "type": "object",
      "properties": {
        "mediaType": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "digest": {
          "type": "string"
        },
        "length": {
          "type": "integer",
          "format": "int64"
        },
        "repository": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "TlsCertificateProperties": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "LocalDirectory"
          ],
          "x-ms-enum": {
            "name": "CertificateType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "location": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TlsProperties": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "TlsStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "certificate": {
          "$ref": "#/definitions/TlsCertificateProperties",
          "readOnly": true
        }
      }
    },
    "Token": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TokenProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TokenCertificate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "certificate1",
            "certificate2"
          ],
          "x-ms-enum": {
            "name": "TokenCertificateName",
            "modelAsString": true
          }
        },
        "expiry": {
          "type": "string",
          "format": "date-time"
        },
        "thumbprint": {
          "type": "string"
        },
        "encodedPemCertificate": {
          "type": "string"
        }
      }
    },
    "TokenCredentialsProperties": {
      "type": "object",
      "properties": {
        "certificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenCertificate"
          },
          "x-ms-identifiers": [
            "thumbprint"
          ]
        },
        "passwords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenPassword"
          }
        }
      }
    },
    "TokenListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Token"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "TokenPassword": {
      "type": "object",
      "properties": {
        "creationTime": {
          "type": "string",
          "format": "date-time"
        },
        "expiry": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string",
          "enum": [
            "password1",
            "password2"
          ],
          "x-ms-enum": {
            "name": "TokenPasswordName",
            "modelAsString": true
          }
        },
        "value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TokenProperties": {
      "type": "object",
      "properties": {
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "scopeMapId": {
          "type": "string"
        },
        "credentials": {
          "$ref": "#/definitions/TokenCredentialsProperties"
        },
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "TokenStatus",
            "modelAsString": true
          }
        }
      }
    },
    "TokenUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TokenUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "TokenUpdateProperties": {
      "type": "object",
      "properties": {
        "scopeMapId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "TokenStatus",
            "modelAsString": true
          }
        },
        "credentials": {
          "$ref": "#/definitions/TokenCredentialsProperties"
        }
      }
    },
    "TrustPolicy": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "Notary",
          "enum": [
            "Notary"
          ],
          "x-ms-enum": {
            "name": "TrustPolicyType",
            "modelAsString": true
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "PolicyStatus",
            "modelAsString": true
          }
        }
      }
    },
    "TypeSpec.Http.OkResponse": {
      "type": "object"
    },
    "UserIdentityProperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Webhook": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebhookProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WebhookCreateParameters": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/WebhookPropertiesCreateParameters",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location"
      ]
    },
    "WebhookListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/Webhook"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      }
    },
    "WebhookProperties": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "WebhookStatus",
            "modelAsString": true
          }
        },
        "scope": {
          "type": "string"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "push",
              "delete",
              "quarantine",
              "chart_push",
              "chart_delete"
            ],
            "x-ms-enum": {
              "name": "WebhookAction",
              "modelAsString": true
            }
          }
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      },
      "required": [
        "actions"
      ]
    },
    "WebhookPropertiesCreateParameters": {
      "type": "object",
      "properties": {
        "serviceUri": {
          "type": "string"
        },
        "customHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "WebhookStatus",
            "modelAsString": true
          }
        },
        "scope": {
          "type": "string"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "push",
              "delete",
              "quarantine",
              "chart_push",
              "chart_delete"
            ],
            "x-ms-enum": {
              "name": "WebhookAction",
              "modelAsString": true
            }
          }
        }
      },
      "required": [
        "actions",
        "serviceUri"
      ]
    },
    "WebhookPropertiesUpdateParameters": {
      "type": "object",
      "properties": {
        "serviceUri": {
          "type": "string"
        },
        "customHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "WebhookStatus",
            "modelAsString": true
          }
        },
        "scope": {
          "type": "string"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "push",
              "delete",
              "quarantine",
              "chart_push",
              "chart_delete"
            ],
            "x-ms-enum": {
              "name": "WebhookAction",
              "modelAsString": true
            }
          }
        }
      }
    },
    "WebhookUpdateParameters": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/WebhookPropertiesUpdateParameters",
          "x-ms-client-flatten": true
        }
      }
    }
  },
  "parameters": {}
}