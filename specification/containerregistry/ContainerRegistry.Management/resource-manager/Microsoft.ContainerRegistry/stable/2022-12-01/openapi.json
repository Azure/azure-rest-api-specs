{
  "swagger": "2.0",
  "info": {
    "title": "ContainerRegistryManagementClient",
    "version": "2022-12-01",
    "description": "// FIXME: (missing-service-description) Add service description",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "AadOauth2Auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "AadOauth2Auth": {
      "type": "oauth2",
      "description": "The Azure Active Directory OAuth2 Flow",
      "flow": "accessCode",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": ""
      },
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token"
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Registries"
    },
    {
      "name": "PrivateLinkResources"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "Replications"
    },
    {
      "name": "ScopeMaps"
    },
    {
      "name": "Tokens"
    },
    {
      "name": "Webhooks"
    },
    {
      "name": "AgentPools"
    },
    {
      "name": "Runs"
    },
    {
      "name": "TaskRuns"
    },
    {
      "name": "Tasks"
    }
  ],
  "paths": {
    "/providers/Microsoft.ContainerRegistry/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability": {
      "post": {
        "operationId": "Registries_CheckNameAvailability",
        "tags": [
          "Registries"
        ],
        "description": "Checks whether the container registry name is available for use. The name must contain only alphanumeric characters, be globally unique, and between 5 and 50 characters in length.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The CheckAvailability request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryNameCheckRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RegistryNameStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryCheckNameAvailable": {
            "$ref": "./examples/Registries_CheckNameAvailability_Registry_Check_Name_Available.json"
          },
          "RegistryCheckNameNotAvailable": {
            "$ref": "./examples/Registries_CheckNameAvailability_Registry_Check_Name_Not_Available.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries": {
      "get": {
        "operationId": "Registries_List",
        "tags": [
          "Registries"
        ],
        "description": "Lists all the container registries under the specified subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegistryListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryList": {
            "$ref": "./examples/Registries_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries": {
      "get": {
        "operationId": "Registries_ListByResourceGroup",
        "tags": [
          "Registries"
        ],
        "description": "Lists all the container registries under the specified resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegistryListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryListByResourceGroup": {
            "$ref": "./examples/Registries_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}": {
      "get": {
        "operationId": "Registries_Get",
        "tags": [
          "Registries"
        ],
        "description": "Gets the properties of the specified container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Registry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryGet": {
            "$ref": "./examples/Registries_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Registries_Create",
        "tags": [
          "Registries"
        ],
        "description": "Creates a container registry with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "registry",
            "in": "body",
            "description": "The parameters for creating a container registry.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Registry"
            },
            "x-ms-client-name": "registry"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Registry' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Registry"
            }
          },
          "201": {
            "description": "Resource 'Registry' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Registry"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryCreate": {
            "$ref": "./examples/Registries_Create_Registry_Create.json"
          },
          "RegistryCreateZoneRedundant": {
            "$ref": "./examples/Registries_Create_Registry_Create_Zone_Redundant.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Registries_Update",
        "tags": [
          "Registries"
        ],
        "description": "Updates a container registry with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "registryUpdateParameters",
            "in": "body",
            "description": "The parameters for updating a container registry.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryUpdateParameters"
            },
            "x-ms-client-name": "registryUpdateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Registry"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryUpdate": {
            "$ref": "./examples/Registries_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Registries_Delete",
        "tags": [
          "Registries"
        ],
        "description": "Deletes a container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryDelete": {
            "$ref": "./examples/Registries_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/agentPools": {
      "get": {
        "operationId": "AgentPools_List",
        "tags": [
          "AgentPools"
        ],
        "description": "Lists all the agent pools for a specified container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AgentPoolListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AgentPools_List": {
            "$ref": "./examples/AgentPools_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/agentPools/{agentPoolName}": {
      "get": {
        "operationId": "AgentPools_Get",
        "tags": [
          "AgentPools"
        ],
        "description": "Gets the detailed information for a given agent pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "description": "The name of the agent pool.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 20,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AgentPool"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AgentPools_Get": {
            "$ref": "./examples/AgentPools_Get.json"
          }
        }
      },
      "put": {
        "operationId": "AgentPools_Create",
        "tags": [
          "AgentPools"
        ],
        "description": "Creates an agent pool for a container registry with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "description": "The name of the agent pool.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 20,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "agentPool",
            "in": "body",
            "description": "The parameters of an agent pool that needs to scheduled.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgentPool"
            },
            "x-ms-client-name": "agentPool"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AgentPool' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AgentPool"
            }
          },
          "201": {
            "description": "Resource 'AgentPool' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AgentPool"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AgentPools_Create": {
            "$ref": "./examples/AgentPools_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "AgentPools_Update",
        "tags": [
          "AgentPools"
        ],
        "description": "Updates an agent pool with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "description": "The name of the agent pool.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 20,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "updateParameters",
            "in": "body",
            "description": "The parameters for updating an agent pool.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgentPoolUpdateParameters"
            },
            "x-ms-client-name": "updateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AgentPool"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AgentPools_Update": {
            "$ref": "./examples/AgentPools_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AgentPools_Delete",
        "tags": [
          "AgentPools"
        ],
        "description": "Deletes a specified agent pool resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "description": "The name of the agent pool.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 20,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AgentPools_Delete": {
            "$ref": "./examples/AgentPools_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/agentPools/{agentPoolName}/getQueueStatus": {
      "post": {
        "operationId": "AgentPools_GetQueueStatus",
        "tags": [
          "AgentPools"
        ],
        "description": "Gets the count of queued runs for a given agent pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "description": "The name of the agent pool.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 20,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AgentPoolQueueStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AgentPools_GetQueueStatus": {
            "$ref": "./examples/AgentPools_GetQueueStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/generateCredentials": {
      "post": {
        "operationId": "Registries_GenerateCredentials",
        "tags": [
          "Registries"
        ],
        "description": "Generate keys for a token of a specified container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "generateCredentialsParameters",
            "in": "body",
            "description": "The parameters for generating credentials.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateCredentialsParameters"
            },
            "x-ms-client-name": "generateCredentialsParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GenerateCredentialsResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryGenerateCredentials": {
            "$ref": "./examples/Registries_GenerateCredentials.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getBuildSourceUploadUrl": {
      "post": {
        "operationId": "Builds_GetBuildSourceUploadUrl",
        "tags": [
          "Registries"
        ],
        "description": "Get the upload location for the user to be able to upload the source.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SourceUploadDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Registries_GetBuildSourceUploadUrl": {
            "$ref": "./examples/Builds_GetBuildSourceUploadUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/importImage": {
      "post": {
        "operationId": "Registries_ImportImage",
        "tags": [
          "Registries"
        ],
        "description": "Copies an image to this container registry from the specified container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters specifying the image to copy and the source container registry.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportImageParameters"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ImportImageByManifestDigest": {
            "$ref": "./examples/Registries_ImportImage_Import_Image_By_Manifest_Digest.json"
          },
          "ImportImageByTag": {
            "$ref": "./examples/Registries_ImportImage_Import_Image_By_Tag.json"
          },
          "ImportImageFromPublicRegistry": {
            "$ref": "./examples/Registries_ImportImage_Import_Image_From_Public_Registry.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/listCredentials": {
      "post": {
        "operationId": "Registries_ListCredentials",
        "tags": [
          "Registries"
        ],
        "description": "Lists the login credentials for the specified container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegistryListCredentialsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryListCredentials": {
            "$ref": "./examples/Registries_ListCredentials.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/listUsages/{subscriptionId}/{resourceGroupName}/{registryName}": {
      "get": {
        "operationId": "Registries_ListUsages",
        "tags": [
          "Registries"
        ],
        "description": "Gets the quota usages for the specified container registry.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RegistryUsageListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "RegistryListUsages": {
            "$ref": "./examples/Registries_ListUsages.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_List",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "List all private endpoint connections in a container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnectionList": {
            "$ref": "./examples/PrivateEndpointConnections_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Get the specified private endpoint connection associated with the container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnectionGet": {
            "$ref": "./examples/PrivateEndpointConnections_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Update the state of specified private endpoint connection associated with the container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "privateEndpointConnection",
            "in": "body",
            "description": "The parameters for creating a private endpoint connection.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "x-ms-client-name": "privateEndpointConnection"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnectionCreateOrUpdate": {
            "$ref": "./examples/PrivateEndpointConnections_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes the specified private endpoint connection associated with the container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnectionDelete": {
            "$ref": "./examples/PrivateEndpointConnections_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/privateLinkResources": {
      "get": {
        "operationId": "Registries_ListPrivateLinkResources",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Lists the private link resources for a container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryListPrivateLinkResources": {
            "$ref": "./examples/Registries_ListPrivateLinkResources.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/privateLinkResources/{groupName}": {
      "get": {
        "operationId": "Registries_GetPrivateLinkResource",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets a private link resource by a specified group name for a container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryGetPrivateLinkResource": {
            "$ref": "./examples/Registries_GetPrivateLinkResource.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredential": {
      "post": {
        "operationId": "Registries_RegenerateCredential",
        "tags": [
          "Registries"
        ],
        "description": "Regenerates one of the login credentials for the specified container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "regenerateCredentialParameters",
            "in": "body",
            "description": "Specifies name of the password which should be regenerated -- password or password2.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateCredentialParameters"
            },
            "x-ms-client-name": "regenerateCredentialParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RegistryListCredentialsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RegistryRegenerateCredential": {
            "$ref": "./examples/Registries_RegenerateCredential.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications": {
      "get": {
        "operationId": "Replications_List",
        "tags": [
          "Replications"
        ],
        "description": "Lists all the replications for the specified container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReplicationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReplicationList": {
            "$ref": "./examples/Replications_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications/{replicationName}": {
      "get": {
        "operationId": "Replications_Get",
        "tags": [
          "Replications"
        ],
        "description": "Gets the properties of the specified replication.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationName",
            "in": "path",
            "description": "The name of the replication.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Replication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReplicationGet": {
            "$ref": "./examples/Replications_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Replications_Create",
        "tags": [
          "Replications"
        ],
        "description": "Creates a replication for a container registry with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationName",
            "in": "path",
            "description": "The name of the replication.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replication",
            "in": "body",
            "description": "The parameters for creating a replication.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Replication"
            },
            "x-ms-client-name": "replication"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Replication' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Replication"
            }
          },
          "201": {
            "description": "Resource 'Replication' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Replication"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReplicationCreate": {
            "$ref": "./examples/Replications_Create_Replication_Create.json"
          },
          "ReplicationCreateZoneRedundant": {
            "$ref": "./examples/Replications_Create_Replication_Create_Zone_Redundant.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Replications_Update",
        "tags": [
          "Replications"
        ],
        "description": "Updates a replication for a container registry with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationName",
            "in": "path",
            "description": "The name of the replication.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationUpdateParameters",
            "in": "body",
            "description": "The parameters for updating a replication.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplicationUpdateParameters"
            },
            "x-ms-client-name": "replicationUpdateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Replication"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReplicationUpdate": {
            "$ref": "./examples/Replications_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Replications_Delete",
        "tags": [
          "Replications"
        ],
        "description": "Deletes a replication from a container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "replicationName",
            "in": "path",
            "description": "The name of the replication.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReplicationDelete": {
            "$ref": "./examples/Replications_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs": {
      "get": {
        "operationId": "Runs_List",
        "tags": [
          "Runs"
        ],
        "description": "Gets all the runs for a registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The runs filter to apply on the operation. Arithmetic operators are not supported. The allowed string function is 'contains'. All logical operators except 'Not', 'Has', 'All' are allowed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "$top is supported for get list of runs, which limits the maximum number of runs to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RunListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Runs_List": {
            "$ref": "./examples/Runs_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}": {
      "get": {
        "operationId": "Runs_Get",
        "tags": [
          "Runs"
        ],
        "description": "Gets the detailed information for a given run.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "runId",
            "in": "path",
            "description": "The run ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Run"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Runs_Get": {
            "$ref": "./examples/Runs_Get.json"
          }
        }
      },
      "patch": {
        "operationId": "Runs_Update",
        "tags": [
          "Runs"
        ],
        "description": "Patch the run properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "runId",
            "in": "path",
            "description": "The run ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "runUpdateParameters",
            "in": "body",
            "description": "The run update properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunUpdateParameters"
            },
            "x-ms-client-name": "runUpdateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Run"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Runs_Update": {
            "$ref": "./examples/Runs_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}/cancel": {
      "post": {
        "operationId": "Runs_Cancel",
        "tags": [
          "Runs"
        ],
        "description": "Cancel an existing run.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "runId",
            "in": "path",
            "description": "The run ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Runs_Cancel": {
            "$ref": "./examples/Runs_Cancel.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/runs/{runId}/getLogSasUrl": {
      "post": {
        "operationId": "Runs_GetLogSasUrl",
        "tags": [
          "Runs"
        ],
        "description": "Gets a link to download the run logs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "runId",
            "in": "path",
            "description": "The run ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RunGetLogResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Runs_GetLogSasUrl": {
            "$ref": "./examples/Runs_GetLogSasUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scheduleRun": {
      "post": {
        "operationId": "Schedules_ScheduleRun",
        "tags": [
          "Registries"
        ],
        "description": "Schedules a new run based on the request parameters and add it to the run queue.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "runRequest",
            "in": "body",
            "description": "The parameters of a run that needs to scheduled.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunRequest"
            },
            "x-ms-client-name": "runRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Run"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Registries_ScheduleRun": {
            "$ref": "./examples/Schedules_ScheduleRun_Registries_Schedule_Run.json"
          },
          "Registries_ScheduleRun_EncodedTaskRun": {
            "$ref": "./examples/Schedules_ScheduleRun_Registries_Schedule_Run_Encoded_Task_Run.json"
          },
          "Registries_ScheduleRun_FileTaskRun": {
            "$ref": "./examples/Schedules_ScheduleRun_Registries_Schedule_Run_File_Task_Run.json"
          },
          "Registries_ScheduleRun_Task": {
            "$ref": "./examples/Schedules_ScheduleRun_Registries_Schedule_Run_Task.json"
          },
          "Registries_ScheduleRun_Task_WithCustomCredentials": {
            "$ref": "./examples/Schedules_ScheduleRun_Registries_Schedule_Run_Task_With_Custom_Credentials.json"
          },
          "Registries_ScheduleRun_WithCustomCredentials": {
            "$ref": "./examples/Schedules_ScheduleRun_Registries_Schedule_Run_With_Custom_Credentials.json"
          },
          "Registries_ScheduleRun_WithLogTemplate": {
            "$ref": "./examples/Schedules_ScheduleRun_Registries_Schedule_Run_With_Log_Template.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps": {
      "get": {
        "operationId": "ScopeMaps_List",
        "tags": [
          "ScopeMaps"
        ],
        "description": "Lists all the scope maps for the specified container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScopeMapListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScopeMapList": {
            "$ref": "./examples/ScopeMaps_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}": {
      "get": {
        "operationId": "ScopeMaps_Get",
        "tags": [
          "ScopeMaps"
        ],
        "description": "Gets the properties of the specified scope map.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "scopeMapName",
            "in": "path",
            "description": "The name of the scope map.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScopeMap"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScopeMapGet": {
            "$ref": "./examples/ScopeMaps_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ScopeMaps_Create",
        "tags": [
          "ScopeMaps"
        ],
        "description": "Creates a scope map for a container registry with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "scopeMapName",
            "in": "path",
            "description": "The name of the scope map.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          },
          {
            "name": "scopeMapCreateParameters",
            "in": "body",
            "description": "The parameters for creating a scope map.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScopeMap"
            },
            "x-ms-client-name": "scopeMapCreateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ScopeMap' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScopeMap"
            }
          },
          "201": {
            "description": "Resource 'ScopeMap' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScopeMap"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScopeMapCreate": {
            "$ref": "./examples/ScopeMaps_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ScopeMaps_Update",
        "tags": [
          "ScopeMaps"
        ],
        "description": "Updates a scope map with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "scopeMapName",
            "in": "path",
            "description": "The name of the scope map.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          },
          {
            "name": "scopeMapUpdateParameters",
            "in": "body",
            "description": "The parameters for updating a scope map.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScopeMapUpdateParameters"
            },
            "x-ms-client-name": "scopeMapUpdateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScopeMap"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScopeMapUpdate": {
            "$ref": "./examples/ScopeMaps_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ScopeMaps_Delete",
        "tags": [
          "ScopeMaps"
        ],
        "description": "Deletes a scope map from a container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "scopeMapName",
            "in": "path",
            "description": "The name of the scope map.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScopeMapDelete": {
            "$ref": "./examples/ScopeMaps_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns": {
      "get": {
        "operationId": "TaskRuns_List",
        "tags": [
          "TaskRuns"
        ],
        "description": "Lists all the task runs for a specified container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TaskRunListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TaskRuns_List": {
            "$ref": "./examples/TaskRuns_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}": {
      "get": {
        "operationId": "TaskRuns_Get",
        "tags": [
          "TaskRuns"
        ],
        "description": "Gets the detailed information for a given task run.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "taskRunName",
            "in": "path",
            "description": "The name of the task run.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TaskRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TaskRuns_Get": {
            "$ref": "./examples/TaskRuns_Get.json"
          }
        }
      },
      "put": {
        "operationId": "TaskRuns_Create",
        "tags": [
          "TaskRuns"
        ],
        "description": "Creates a task run for a container registry with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "taskRunName",
            "in": "path",
            "description": "The name of the task run.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "taskRun",
            "in": "body",
            "description": "The parameters of a run that needs to scheduled.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskRun"
            },
            "x-ms-client-name": "taskRun"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TaskRun' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TaskRun"
            }
          },
          "201": {
            "description": "Resource 'TaskRun' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/TaskRun"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TaskRuns_Create": {
            "$ref": "./examples/TaskRuns_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "TaskRuns_Update",
        "tags": [
          "TaskRuns"
        ],
        "description": "Updates a task run with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "taskRunName",
            "in": "path",
            "description": "The name of the task run.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "updateParameters",
            "in": "body",
            "description": "The parameters for updating a task run.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskRunUpdateParameters"
            },
            "x-ms-client-name": "updateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TaskRun"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TaskRuns_Update": {
            "$ref": "./examples/TaskRuns_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "TaskRuns_Delete",
        "tags": [
          "TaskRuns"
        ],
        "description": "Deletes a specified task run resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "taskRunName",
            "in": "path",
            "description": "The name of the task run.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TaskRuns_Delete": {
            "$ref": "./examples/TaskRuns_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}/getDetails": {
      "post": {
        "operationId": "TaskRuns_GetDetails",
        "tags": [
          "TaskRuns"
        ],
        "description": "Gets the detailed information for a given task run that includes all secrets.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "taskRunName",
            "in": "path",
            "description": "The name of the task run.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TaskRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TaskRuns_GetDetails": {
            "$ref": "./examples/TaskRuns_GetDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks": {
      "get": {
        "operationId": "Tasks_List",
        "tags": [
          "Tasks"
        ],
        "description": "Lists all the tasks for a specified container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TaskListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Tasks_List": {
            "$ref": "./examples/Tasks_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}": {
      "get": {
        "operationId": "Tasks_Get",
        "tags": [
          "Tasks"
        ],
        "description": "Get the properties of a specified task.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "taskName",
            "in": "path",
            "description": "The name of the container registry task.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Tasks_Get": {
            "$ref": "./examples/Tasks_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Tasks_Create",
        "tags": [
          "Tasks"
        ],
        "description": "Creates a task for a container registry with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "taskName",
            "in": "path",
            "description": "The name of the container registry task.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          },
          {
            "name": "taskCreateParameters",
            "in": "body",
            "description": "The parameters for creating a task.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            },
            "x-ms-client-name": "taskCreateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Task' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "201": {
            "description": "Resource 'Task' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Task"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Tasks_Create": {
            "$ref": "./examples/Tasks_Create.json"
          },
          "Tasks_Create_QuickTask": {
            "$ref": "./examples/Tasks_Create_QuickTask.json"
          },
          "Tasks_Create_WithSystemAndUserIdentities": {
            "$ref": "./examples/Tasks_Create_WithSystemAndUserIdentities.json"
          },
          "Tasks_Create_WithUserIdentities": {
            "$ref": "./examples/Tasks_Create_WithUserIdentities.json"
          },
          "Tasks_Create_WithUserIdentities_WithSystemIdentity": {
            "$ref": "./examples/Tasks_Create_WithUserIdentities_WithSystemIdentity.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Tasks_Update",
        "tags": [
          "Tasks"
        ],
        "description": "Updates a task with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "taskName",
            "in": "path",
            "description": "The name of the container registry task.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          },
          {
            "name": "taskUpdateParameters",
            "in": "body",
            "description": "The parameters for updating a task.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskUpdateParameters"
            },
            "x-ms-client-name": "taskUpdateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Tasks_Update": {
            "$ref": "./examples/Tasks_Update.json"
          },
          "Tasks_Update_QuickTask": {
            "$ref": "./examples/Tasks_Update_QuickTask.json"
          },
          "Tasks_Update_WithKeyVaultCustomCredentials": {
            "$ref": "./examples/Tasks_Update_WithKeyVaultCustomCredentials.json"
          },
          "Tasks_Update_WithMSICustomCredentials": {
            "$ref": "./examples/Tasks_Update_WithMSICustomCredentials.json"
          },
          "Tasks_Update_WithOpaqueCustomCredentials": {
            "$ref": "./examples/Tasks_Update_WithOpaqueCustomCredentials.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Tasks_Delete",
        "tags": [
          "Tasks"
        ],
        "description": "Deletes a specified task.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "taskName",
            "in": "path",
            "description": "The name of the container registry task.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Tasks_Delete": {
            "$ref": "./examples/Tasks_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}/getDetails": {
      "post": {
        "operationId": "Tasks_GetDetails",
        "tags": [
          "Tasks"
        ],
        "description": "Returns a task with extended information that includes all secrets.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "taskName",
            "in": "path",
            "description": "The name of the container registry task.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-_]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Tasks_GetDetails": {
            "$ref": "./examples/Tasks_GetDetails.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens": {
      "get": {
        "operationId": "Tokens_List",
        "tags": [
          "Tokens"
        ],
        "description": "Lists all the tokens for the specified container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TokenListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TokenList": {
            "$ref": "./examples/Tokens_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}": {
      "get": {
        "operationId": "Tokens_Get",
        "tags": [
          "Tokens"
        ],
        "description": "Gets the properties of the specified token.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "tokenName",
            "in": "path",
            "description": "The name of the token.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TokenGet": {
            "$ref": "./examples/Tokens_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Tokens_Create",
        "tags": [
          "Tokens"
        ],
        "description": "Creates a token for a container registry with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "tokenName",
            "in": "path",
            "description": "The name of the token.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "tokenCreateParameters",
            "in": "body",
            "description": "The parameters for creating a token.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Token"
            },
            "x-ms-client-name": "tokenCreateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Token' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "201": {
            "description": "Resource 'Token' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Token"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TokenCreate": {
            "$ref": "./examples/Tokens_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Tokens_Update",
        "tags": [
          "Tokens"
        ],
        "description": "Updates a token with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "tokenName",
            "in": "path",
            "description": "The name of the token.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          },
          {
            "name": "tokenUpdateParameters",
            "in": "body",
            "description": "The parameters for updating a token.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenUpdateParameters"
            },
            "x-ms-client-name": "tokenUpdateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TokenUpdate": {
            "$ref": "./examples/Tokens_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Tokens_Delete",
        "tags": [
          "Tokens"
        ],
        "description": "Deletes a token from a container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "tokenName",
            "in": "path",
            "description": "The name of the token.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TokenDelete": {
            "$ref": "./examples/Tokens_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks": {
      "get": {
        "operationId": "Webhooks_List",
        "tags": [
          "Webhooks"
        ],
        "description": "Lists all the webhooks for the specified container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WebhookListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookList": {
            "$ref": "./examples/Webhooks_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}": {
      "get": {
        "operationId": "Webhooks_Get",
        "tags": [
          "Webhooks"
        ],
        "description": "Gets the properties of the specified webhook.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "description": "The name of the webhook.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookGet": {
            "$ref": "./examples/Webhooks_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Webhooks_Create",
        "tags": [
          "Webhooks"
        ],
        "description": "Creates a webhook for a container registry with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "description": "The name of the webhook.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookCreateParameters",
            "in": "body",
            "description": "The parameters for creating a webhook.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webhook"
            },
            "x-ms-client-name": "webhookCreateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Webhook' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "201": {
            "description": "Resource 'Webhook' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Webhook"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookCreate": {
            "$ref": "./examples/Webhooks_Create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Webhooks_Update",
        "tags": [
          "Webhooks"
        ],
        "description": "Updates a webhook with the specified parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "description": "The name of the webhook.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookUpdateParameters",
            "in": "body",
            "description": "The parameters for updating a webhook.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookUpdateParameters"
            },
            "x-ms-client-name": "webhookUpdateParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookUpdate": {
            "$ref": "./examples/Webhooks_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Webhooks_Delete",
        "tags": [
          "Webhooks"
        ],
        "description": "Deletes a webhook from a container registry.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "description": "The name of the webhook.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookDelete": {
            "$ref": "./examples/Webhooks_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/getCallbackConfig": {
      "post": {
        "operationId": "Webhooks_GetCallbackConfig",
        "tags": [
          "Webhooks"
        ],
        "description": "Gets the configuration of service URI and custom headers for the webhook.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "description": "The name of the webhook.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CallbackConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookGetCallbackConfig": {
            "$ref": "./examples/Webhooks_GetCallbackConfig.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/listEvents": {
      "post": {
        "operationId": "Webhooks_ListEvents",
        "tags": [
          "Webhooks"
        ],
        "description": "Lists recent events for the specified webhook.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "description": "The name of the webhook.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PagedEvent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookListEvents": {
            "$ref": "./examples/Webhooks_ListEvents.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/ping": {
      "post": {
        "operationId": "Webhooks_Ping",
        "tags": [
          "Webhooks"
        ],
        "description": "Triggers a ping event to be sent to the webhook.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "registryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          },
          {
            "name": "webhookName",
            "in": "path",
            "description": "The name of the webhook.",
            "required": true,
            "type": "string",
            "minLength": 5,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/EventInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "WebhookPing": {
            "$ref": "./examples/Webhooks_Ping.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Action": {
      "type": "string",
      "description": "The action of IP ACL rule.",
      "enum": [
        "Allow"
      ],
      "x-ms-enum": {
        "name": "Action",
        "modelAsString": true
      }
    },
    "ActionsRequired": {
      "type": "string",
      "description": "A message indicating if changes on the service provider require any updates on the consumer.",
      "enum": [
        "None",
        "Recreate"
      ],
      "x-ms-enum": {
        "name": "ActionsRequired",
        "modelAsString": true
      }
    },
    "ActiveDirectoryObject": {
      "type": "object",
      "description": "The Active Directory Object that will be used for authenticating the token of a container registry.",
      "properties": {
        "objectId": {
          "type": "string",
          "description": "The user/group/application object ID for Active Directory Object that will be used for authenticating the token of a container registry."
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of user/group/application object Active Directory Object that will be used for authenticating the token of a container registry."
        }
      }
    },
    "Actor": {
      "type": "object",
      "description": "The agent that initiated the event. For most situations, this could be from the authorization context of the request.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The subject or username associated with the request context that generated the event."
        }
      }
    },
    "AgentPool": {
      "type": "object",
      "description": "The agentpool that has the ARM resource and properties.\nThe agentpool will have all information to create an agent pool.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AgentPoolProperties",
          "description": "The properties associated with the agent pool",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AgentPoolListResult": {
      "type": "object",
      "description": "The response of a AgentPool list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AgentPool items on this page",
          "items": {
            "$ref": "#/definitions/AgentPool"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AgentPoolProperties": {
      "type": "object",
      "description": "The properties of agent pool.",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The count of agent machine"
        },
        "tier": {
          "type": "string",
          "description": "The Tier of agent machine"
        },
        "os": {
          "$ref": "#/definitions/OS",
          "description": "The OS of agent machine"
        },
        "virtualNetworkSubnetResourceId": {
          "type": "string",
          "description": "The Virtual Network Subnet Resource Id of the agent machine"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of this agent pool",
          "readOnly": true
        }
      }
    },
    "AgentPoolPropertiesUpdateParameters": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The count of agent machine"
        }
      }
    },
    "AgentPoolQueueStatus": {
      "type": "object",
      "description": "The QueueStatus of Agent Pool",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of pending runs in the queue"
        }
      }
    },
    "AgentPoolUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating an agent pool.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AgentPoolPropertiesUpdateParameters",
          "description": "The properties associated with the agent pool",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "The ARM resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AgentProperties": {
      "type": "object",
      "description": "The properties that determine the run agent configuration.",
      "properties": {
        "cpu": {
          "type": "integer",
          "format": "int32",
          "description": "The CPU configuration in terms of number of cores required for the run."
        }
      }
    },
    "Architecture": {
      "type": "string",
      "description": "The OS architecture.",
      "enum": [
        "amd64",
        "x86",
        "386",
        "arm",
        "arm64"
      ],
      "x-ms-enum": {
        "name": "Architecture",
        "modelAsString": true
      }
    },
    "Argument": {
      "type": "object",
      "description": "The properties of a run argument.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the argument."
        },
        "value": {
          "type": "string",
          "description": "The value of the argument."
        },
        "isSecret": {
          "type": "boolean",
          "description": "Flag to indicate whether the argument represents a secret and want to be removed from build logs."
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "AuthInfo": {
      "type": "object",
      "description": "The authorization properties for accessing the source code repository.",
      "properties": {
        "tokenType": {
          "$ref": "#/definitions/TokenType",
          "description": "The type of Auth token."
        },
        "token": {
          "type": "string",
          "description": "The access token used to access the source control provider."
        },
        "refreshToken": {
          "type": "string",
          "description": "The refresh token used to refresh the access token."
        },
        "scope": {
          "type": "string",
          "description": "The scope of the access token."
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32",
          "description": "Time in seconds that the token remains valid"
        }
      },
      "required": [
        "tokenType",
        "token"
      ]
    },
    "AuthInfoUpdateParameters": {
      "type": "object",
      "description": "The authorization properties for accessing the source code repository.",
      "properties": {
        "tokenType": {
          "$ref": "#/definitions/TokenType",
          "description": "The type of Auth token."
        },
        "token": {
          "type": "string",
          "description": "The access token used to access the source control provider."
        },
        "refreshToken": {
          "type": "string",
          "description": "The refresh token used to refresh the access token."
        },
        "scope": {
          "type": "string",
          "description": "The scope of the access token."
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32",
          "description": "Time in seconds that the token remains valid"
        }
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.Foundations.SkuTier": {
      "type": "string",
      "description": "Available service tiers for the SKU.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Free",
            "value": "Free",
            "description": "The Free service tier."
          },
          {
            "name": "Basic",
            "value": "Basic",
            "description": "The Basic service tier."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "The Standard service tier."
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "The Premium service tier."
          }
        ]
      }
    },
    "BaseImageDependency": {
      "type": "object",
      "description": "Properties that describe a base image dependency.",
      "properties": {
        "type": {
          "$ref": "#/definitions/BaseImageDependencyType",
          "description": "The type of the base image dependency."
        },
        "registry": {
          "type": "string",
          "description": "The registry login server."
        },
        "repository": {
          "type": "string",
          "description": "The repository name."
        },
        "tag": {
          "type": "string",
          "description": "The tag name."
        },
        "digest": {
          "type": "string",
          "description": "The sha256-based digest of the image manifest."
        }
      }
    },
    "BaseImageDependencyType": {
      "type": "string",
      "description": "The type of the base image dependency.",
      "enum": [
        "BuildTime",
        "RunTime"
      ],
      "x-ms-enum": {
        "name": "BaseImageDependencyType",
        "modelAsString": true
      }
    },
    "BaseImageTrigger": {
      "type": "object",
      "description": "The trigger based on base image dependency.",
      "properties": {
        "baseImageTriggerType": {
          "$ref": "#/definitions/BaseImageTriggerType",
          "description": "The type of the auto trigger for base image dependency updates."
        },
        "updateTriggerEndpoint": {
          "type": "string",
          "description": "The endpoint URL for receiving update triggers."
        },
        "updateTriggerPayloadType": {
          "$ref": "#/definitions/UpdateTriggerPayloadType",
          "description": "Type of Payload body for Base image update triggers."
        },
        "status": {
          "$ref": "#/definitions/TriggerStatus",
          "description": "The current status of trigger."
        },
        "name": {
          "type": "string",
          "description": "The name of the trigger."
        }
      },
      "required": [
        "baseImageTriggerType",
        "name"
      ]
    },
    "BaseImageTriggerType": {
      "type": "string",
      "description": "The type of the auto trigger for base image dependency updates.",
      "enum": [
        "All",
        "Runtime"
      ],
      "x-ms-enum": {
        "name": "BaseImageTriggerType",
        "modelAsString": true
      }
    },
    "BaseImageTriggerUpdateParameters": {
      "type": "object",
      "description": "The properties for updating base image dependency trigger.",
      "properties": {
        "baseImageTriggerType": {
          "$ref": "#/definitions/BaseImageTriggerType",
          "description": "The type of the auto trigger for base image dependency updates."
        },
        "updateTriggerEndpoint": {
          "type": "string",
          "description": "The endpoint URL for receiving update triggers."
        },
        "updateTriggerPayloadType": {
          "$ref": "#/definitions/UpdateTriggerPayloadType",
          "description": "Type of Payload body for Base image update triggers."
        },
        "status": {
          "$ref": "#/definitions/TriggerStatus",
          "description": "The current status of trigger."
        },
        "name": {
          "type": "string",
          "description": "The name of the trigger."
        }
      },
      "required": [
        "name"
      ]
    },
    "CallbackConfig": {
      "type": "object",
      "description": "The configuration of service URI and custom headers for the webhook.",
      "properties": {
        "serviceUri": {
          "type": "string",
          "description": "The service URI for the webhook to post notifications."
        },
        "customHeaders": {
          "type": "object",
          "description": "Custom headers that will be added to the webhook notifications.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "serviceUri"
      ]
    },
    "ConnectionStatus": {
      "type": "string",
      "description": "The private link service connection status.",
      "enum": [
        "Approved",
        "Pending",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "ConnectionStatus",
        "modelAsString": true
      }
    },
    "Credentials": {
      "type": "object",
      "description": "The parameters that describes a set of credentials that will be used when a run is invoked.",
      "properties": {
        "sourceRegistry": {
          "$ref": "#/definitions/SourceRegistryCredentials",
          "description": "Describes the credential parameters for accessing the source registry."
        },
        "customRegistries": {
          "type": "object",
          "description": "Describes the credential parameters for accessing other custom registries. The key\nfor the dictionary item will be the registry login server (myregistry.azurecr.io) and\nthe value of the item will be the registry credentials for accessing the registry.",
          "additionalProperties": {
            "$ref": "#/definitions/CustomRegistryCredentials"
          }
        }
      }
    },
    "CustomRegistryCredentials": {
      "type": "object",
      "description": "Describes the credentials that will be used to access a custom registry during a run.",
      "properties": {
        "userName": {
          "$ref": "#/definitions/SecretObject",
          "description": "The username for logging into the custom registry."
        },
        "password": {
          "$ref": "#/definitions/SecretObject",
          "description": "The password for logging into the custom registry. The password is a secret\nobject that allows multiple ways of providing the value for it."
        },
        "identity": {
          "type": "string",
          "description": "Indicates the managed identity assigned to the custom credential. If a user-assigned identity\nthis value is the Client ID. If a system-assigned identity, the value will be `system`. In\nthe case of a system-assigned identity, the Client ID will be determined by the runner. This\nidentity may be used to authenticate to key vault to retrieve credentials or it may be the only\nsource of authentication used for accessing the registry."
        }
      }
    },
    "DefaultAction": {
      "type": "string",
      "description": "The default action of allow or deny when no other rules match.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "DefaultAction",
        "modelAsString": true
      }
    },
    "DockerBuildRequest": {
      "type": "object",
      "description": "The parameters for a docker quick build.",
      "properties": {
        "imageNames": {
          "type": "array",
          "description": "The fully qualified image names including the repository and tag.",
          "items": {
            "type": "string"
          }
        },
        "isPushEnabled": {
          "type": "boolean",
          "description": "The value of this property indicates whether the image built should be pushed to the registry or not.",
          "default": true
        },
        "noCache": {
          "type": "boolean",
          "description": "The value of this property indicates whether the image cache is enabled or not."
        },
        "dockerFilePath": {
          "type": "string",
          "description": "The Docker file path relative to the source location."
        },
        "target": {
          "type": "string",
          "description": "The name of the target build stage for the docker build."
        },
        "arguments": {
          "type": "array",
          "description": "The collection of override arguments to be used when executing the run.",
          "items": {
            "$ref": "#/definitions/Argument"
          },
          "x-ms-identifiers": []
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Run timeout in seconds.",
          "default": 3600,
          "minimum": 300,
          "maximum": 28800
        },
        "platform": {
          "$ref": "#/definitions/PlatformProperties",
          "description": "The platform properties against which the run has to happen."
        },
        "agentConfiguration": {
          "$ref": "#/definitions/AgentProperties",
          "description": "The machine configuration of the run agent."
        },
        "sourceLocation": {
          "type": "string",
          "description": "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API."
        },
        "credentials": {
          "$ref": "#/definitions/Credentials",
          "description": "The properties that describes a set of credentials that will be used when this run is invoked."
        }
      },
      "required": [
        "dockerFilePath",
        "platform"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RunRequest"
        }
      ],
      "x-ms-discriminator-value": "DockerBuildRequest"
    },
    "DockerBuildStep": {
      "type": "object",
      "description": "The Docker build step.",
      "properties": {
        "imageNames": {
          "type": "array",
          "description": "The fully qualified image names including the repository and tag.",
          "items": {
            "type": "string"
          }
        },
        "isPushEnabled": {
          "type": "boolean",
          "description": "The value of this property indicates whether the image built should be pushed to the registry or not.",
          "default": true
        },
        "noCache": {
          "type": "boolean",
          "description": "The value of this property indicates whether the image cache is enabled or not."
        },
        "dockerFilePath": {
          "type": "string",
          "description": "The Docker file path relative to the source context."
        },
        "target": {
          "type": "string",
          "description": "The name of the target build stage for the docker build."
        },
        "arguments": {
          "type": "array",
          "description": "The collection of override arguments to be used when executing this build step.",
          "items": {
            "$ref": "#/definitions/Argument"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "dockerFilePath"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TaskStepProperties"
        }
      ],
      "x-ms-discriminator-value": "Docker"
    },
    "DockerBuildStepUpdateParameters": {
      "type": "object",
      "description": "The properties for updating a docker build step.",
      "properties": {
        "imageNames": {
          "type": "array",
          "description": "The fully qualified image names including the repository and tag.",
          "items": {
            "type": "string"
          }
        },
        "isPushEnabled": {
          "type": "boolean",
          "description": "The value of this property indicates whether the image built should be pushed to the registry or not."
        },
        "noCache": {
          "type": "boolean",
          "description": "The value of this property indicates whether the image cache is enabled or not."
        },
        "dockerFilePath": {
          "type": "string",
          "description": "The Docker file path relative to the source context."
        },
        "arguments": {
          "type": "array",
          "description": "The collection of override arguments to be used when executing this build step.",
          "items": {
            "$ref": "#/definitions/Argument"
          },
          "x-ms-identifiers": []
        },
        "target": {
          "type": "string",
          "description": "The name of the target build stage for the docker build."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaskStepUpdateParameters"
        }
      ],
      "x-ms-discriminator-value": "Docker"
    },
    "EncodedTaskRunRequest": {
      "type": "object",
      "description": "The parameters for a quick task run request.",
      "properties": {
        "encodedTaskContent": {
          "type": "string",
          "description": "Base64 encoded value of the template/definition file content."
        },
        "encodedValuesContent": {
          "type": "string",
          "description": "Base64 encoded value of the parameters/values file content."
        },
        "values": {
          "type": "array",
          "description": "The collection of overridable values that can be passed when running a task.",
          "items": {
            "$ref": "#/definitions/SetValue"
          },
          "x-ms-identifiers": []
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Run timeout in seconds.",
          "default": 3600,
          "minimum": 300,
          "maximum": 28800
        },
        "platform": {
          "$ref": "#/definitions/PlatformProperties",
          "description": "The platform properties against which the run has to happen."
        },
        "agentConfiguration": {
          "$ref": "#/definitions/AgentProperties",
          "description": "The machine configuration of the run agent."
        },
        "sourceLocation": {
          "type": "string",
          "description": "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API."
        },
        "credentials": {
          "$ref": "#/definitions/Credentials",
          "description": "The properties that describes a set of credentials that will be used when this run is invoked."
        }
      },
      "required": [
        "encodedTaskContent",
        "platform"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RunRequest"
        }
      ],
      "x-ms-discriminator-value": "EncodedTaskRunRequest"
    },
    "EncodedTaskStep": {
      "type": "object",
      "description": "The properties of a encoded task step.",
      "properties": {
        "encodedTaskContent": {
          "type": "string",
          "description": "Base64 encoded value of the template/definition file content."
        },
        "encodedValuesContent": {
          "type": "string",
          "description": "Base64 encoded value of the parameters/values file content."
        },
        "values": {
          "type": "array",
          "description": "The collection of overridable values that can be passed when running a task.",
          "items": {
            "$ref": "#/definitions/SetValue"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "encodedTaskContent"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TaskStepProperties"
        }
      ],
      "x-ms-discriminator-value": "EncodedTask"
    },
    "EncodedTaskStepUpdateParameters": {
      "type": "object",
      "description": "The properties for updating encoded task step.",
      "properties": {
        "encodedTaskContent": {
          "type": "string",
          "description": "Base64 encoded value of the template/definition file content."
        },
        "encodedValuesContent": {
          "type": "string",
          "description": "Base64 encoded value of the parameters/values file content."
        },
        "values": {
          "type": "array",
          "description": "The collection of overridable values that can be passed when running a task.",
          "items": {
            "$ref": "#/definitions/SetValue"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaskStepUpdateParameters"
        }
      ],
      "x-ms-discriminator-value": "EncodedTask"
    },
    "EncryptionProperty": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/EncryptionStatus",
          "description": "Indicates whether or not the encryption is enabled for container registry."
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key vault properties."
        }
      }
    },
    "EncryptionStatus": {
      "type": "string",
      "description": "Indicates whether or not the encryption is enabled for container registry.",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "EncryptionStatus",
        "modelAsString": true
      }
    },
    "ErrorResponseBody": {
      "type": "object",
      "description": "An error response from the Azure Container Registry service.",
      "properties": {
        "code": {
          "type": "string",
          "description": "error code."
        },
        "message": {
          "type": "string",
          "description": "error message."
        },
        "target": {
          "type": "string",
          "description": "target of the particular error."
        },
        "details": {
          "type": "array",
          "description": "an array of additional nested error response info objects, as described by this contract.",
          "items": {
            "$ref": "#/definitions/InnerErrorDescription"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Event": {
      "type": "object",
      "description": "The event for a webhook.",
      "properties": {
        "eventRequestMessage": {
          "$ref": "#/definitions/EventRequestMessage",
          "description": "The event request message sent to the service URI."
        },
        "eventResponseMessage": {
          "$ref": "#/definitions/EventResponseMessage",
          "description": "The event response message received from the service URI."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EventInfo"
        }
      ]
    },
    "EventContent": {
      "type": "object",
      "description": "The content of the event request message.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The event ID."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the event occurred."
        },
        "action": {
          "type": "string",
          "description": "The action that encompasses the provided event."
        },
        "target": {
          "$ref": "#/definitions/Target",
          "description": "The target of the event."
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "The request that generated the event."
        },
        "actor": {
          "$ref": "#/definitions/Actor",
          "description": "The agent that initiated the event. For most situations, this could be from the authorization context of the request."
        },
        "source": {
          "$ref": "#/definitions/Source",
          "description": "The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it."
        }
      }
    },
    "EventInfo": {
      "type": "object",
      "description": "The basic information of an event.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The event ID."
        }
      }
    },
    "EventRequestMessage": {
      "type": "object",
      "description": "The event request message sent to the service URI.",
      "properties": {
        "content": {
          "$ref": "#/definitions/EventContent",
          "description": "The content of the event request message."
        },
        "headers": {
          "type": "object",
          "description": "The headers of the event request message.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "method": {
          "type": "string",
          "description": "The HTTP method used to send the event request message."
        },
        "requestUri": {
          "type": "string",
          "description": "The URI used to send the event request message."
        },
        "version": {
          "type": "string",
          "description": "The HTTP message version."
        }
      }
    },
    "EventResponseMessage": {
      "type": "object",
      "description": "The event response message received from the service URI.",
      "properties": {
        "content": {
          "type": "string",
          "description": "The content of the event response message."
        },
        "headers": {
          "type": "object",
          "description": "The headers of the event response message.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reasonPhrase": {
          "type": "string",
          "description": "The reason phrase of the event response message."
        },
        "statusCode": {
          "type": "string",
          "description": "The status code of the event response message."
        },
        "version": {
          "type": "string",
          "description": "The HTTP message version."
        }
      }
    },
    "ExportPolicy": {
      "type": "object",
      "description": "The export policy for a container registry.",
      "properties": {
        "status": {
          "$ref": "#/definitions/ExportPolicyStatus",
          "description": "The value that indicates whether the policy is enabled or not.",
          "default": "enabled"
        }
      }
    },
    "ExportPolicyStatus": {
      "type": "string",
      "description": "The value that indicates whether the policy is enabled or not.",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "ExportPolicyStatus",
        "modelAsString": true
      }
    },
    "FileTaskRunRequest": {
      "type": "object",
      "description": "The request parameters for a scheduling run against a task file.",
      "properties": {
        "taskFilePath": {
          "type": "string",
          "description": "The template/definition file path relative to the source."
        },
        "valuesFilePath": {
          "type": "string",
          "description": "The values/parameters file path relative to the source."
        },
        "values": {
          "type": "array",
          "description": "The collection of overridable values that can be passed when running a task.",
          "items": {
            "$ref": "#/definitions/SetValue"
          },
          "x-ms-identifiers": []
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Run timeout in seconds.",
          "default": 3600,
          "minimum": 300,
          "maximum": 28800
        },
        "platform": {
          "$ref": "#/definitions/PlatformProperties",
          "description": "The platform properties against which the run has to happen."
        },
        "agentConfiguration": {
          "$ref": "#/definitions/AgentProperties",
          "description": "The machine configuration of the run agent."
        },
        "sourceLocation": {
          "type": "string",
          "description": "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API."
        },
        "credentials": {
          "$ref": "#/definitions/Credentials",
          "description": "The properties that describes a set of credentials that will be used when this run is invoked."
        }
      },
      "required": [
        "taskFilePath",
        "platform"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RunRequest"
        }
      ],
      "x-ms-discriminator-value": "FileTaskRunRequest"
    },
    "FileTaskStep": {
      "type": "object",
      "description": "The properties of a task step.",
      "properties": {
        "taskFilePath": {
          "type": "string",
          "description": "The task template/definition file path relative to the source context."
        },
        "valuesFilePath": {
          "type": "string",
          "description": "The task values/parameters file path relative to the source context."
        },
        "values": {
          "type": "array",
          "description": "The collection of overridable values that can be passed when running a task.",
          "items": {
            "$ref": "#/definitions/SetValue"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "taskFilePath"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TaskStepProperties"
        }
      ],
      "x-ms-discriminator-value": "FileTask"
    },
    "FileTaskStepUpdateParameters": {
      "type": "object",
      "description": "The properties of updating a task step.",
      "properties": {
        "taskFilePath": {
          "type": "string",
          "description": "The task template/definition file path relative to the source context."
        },
        "valuesFilePath": {
          "type": "string",
          "description": "The values/parameters file path relative to the source context."
        },
        "values": {
          "type": "array",
          "description": "The collection of overridable values that can be passed when running a task.",
          "items": {
            "$ref": "#/definitions/SetValue"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TaskStepUpdateParameters"
        }
      ],
      "x-ms-discriminator-value": "FileTask"
    },
    "GenerateCredentialsParameters": {
      "type": "object",
      "description": "The parameters used to generate credentials for a specified token or user of a container registry.",
      "properties": {
        "tokenId": {
          "type": "string",
          "description": "The resource ID of the token for which credentials have to be generated."
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The expiry date of the generated credentials after which the credentials become invalid.",
          "x-ms-client-name": "expireOn"
        },
        "name": {
          "$ref": "#/definitions/TokenPasswordName",
          "description": "Specifies name of the password which should be regenerated if any -- password1 or password2."
        }
      }
    },
    "GenerateCredentialsResult": {
      "type": "object",
      "description": "The response from the GenerateCredentials operation.",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username for a container registry."
        },
        "passwords": {
          "type": "array",
          "description": "The list of passwords for a container registry.",
          "items": {
            "$ref": "#/definitions/TokenPassword"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IPRule": {
      "type": "object",
      "description": "IP rule with specific IP or IP range in CIDR format.",
      "properties": {
        "action": {
          "$ref": "#/definitions/Action",
          "description": "The action of IP ACL rule.",
          "default": "Allow"
        },
        "value": {
          "type": "string",
          "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
          "x-ms-client-name": "IPAddressOrRange"
        }
      },
      "required": [
        "value"
      ]
    },
    "IdentityProperties": {
      "type": "object",
      "description": "Managed identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ResourceIdentityType",
          "description": "The identity type."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The list of user identities associated with the resource. The user identity\ndictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\nproviders/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "additionalProperties": {
            "$ref": "#/definitions/UserIdentityProperties"
          }
        }
      }
    },
    "ImageDescriptor": {
      "type": "object",
      "description": "Properties for a registry image.",
      "properties": {
        "registry": {
          "type": "string",
          "description": "The registry login server."
        },
        "repository": {
          "type": "string",
          "description": "The repository name."
        },
        "tag": {
          "type": "string",
          "description": "The tag name."
        },
        "digest": {
          "type": "string",
          "description": "The sha256-based digest of the image manifest."
        }
      }
    },
    "ImageUpdateTrigger": {
      "type": "object",
      "description": "The image update trigger that caused a build.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the trigger."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the image update happened."
        },
        "images": {
          "type": "array",
          "description": "The list of image updates that caused the build.",
          "items": {
            "$ref": "#/definitions/ImageDescriptor"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ImportImageParameters": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/ImportSource",
          "description": "The source of the image."
        },
        "targetTags": {
          "type": "array",
          "description": "List of strings of the form repo[:tag]. When tag is omitted the source will be used (or 'latest' if source tag is also omitted).",
          "items": {
            "type": "string"
          }
        },
        "untaggedTargetRepositories": {
          "type": "array",
          "description": "List of strings of repository names to do a manifest only copy. No tag will be created.",
          "items": {
            "type": "string"
          }
        },
        "mode": {
          "$ref": "#/definitions/ImportMode",
          "description": "When Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins.",
          "default": "NoForce"
        }
      },
      "required": [
        "source"
      ]
    },
    "ImportMode": {
      "type": "string",
      "description": "When Force, any existing target tags will be overwritten. When NoForce, any existing target tags will fail the operation before any copying begins.",
      "enum": [
        "NoForce",
        "Force"
      ],
      "x-ms-enum": {
        "name": "ImportMode",
        "modelAsString": true
      }
    },
    "ImportSource": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource identifier of the source Azure Container Registry."
        },
        "registryUri": {
          "type": "string",
          "description": "The address of the source registry (e.g. 'mcr.microsoft.com')."
        },
        "credentials": {
          "$ref": "#/definitions/ImportSourceCredentials",
          "description": "Credentials used when importing from a registry uri."
        },
        "sourceImage": {
          "type": "string",
          "description": "Repository name of the source image.\nSpecify an image by repository ('hello-world'). This will use the 'latest' tag.\nSpecify an image by tag ('hello-world:latest').\nSpecify an image by sha256-based manifest digest ('hello-world"
        }
      },
      "required": [
        "sourceImage"
      ]
    },
    "ImportSourceCredentials": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username to authenticate with the source registry."
        },
        "password": {
          "type": "string",
          "description": "The password used to authenticate with the source registry."
        }
      },
      "required": [
        "password"
      ]
    },
    "InnerErrorDescription": {
      "type": "object",
      "description": "inner error.",
      "properties": {
        "code": {
          "type": "string",
          "description": "error code."
        },
        "message": {
          "type": "string",
          "description": "error message."
        },
        "target": {
          "type": "string",
          "description": "target of the particular error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "versionedKeyIdentifier": {
          "type": "string",
          "description": "The fully qualified key identifier that includes the version of the key that is actually used for encryption.",
          "readOnly": true
        },
        "identity": {
          "type": "string",
          "description": "The client id of the identity which will be used to access key vault."
        },
        "keyRotationEnabled": {
          "type": "boolean",
          "description": "Auto key rotation status for a CMK enabled registry.",
          "readOnly": true
        },
        "lastKeyRotationTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the last successful key rotation.",
          "readOnly": true
        }
      }
    },
    "LastModifiedByType": {
      "type": "string",
      "description": "The type of identity that last modified the resource.",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "LastModifiedByType",
        "modelAsString": true
      }
    },
    "NetworkRuleBypassOptions": {
      "type": "string",
      "description": "Whether to allow trusted Azure services to access a network restricted registry.",
      "enum": [
        "AzureServices",
        "None"
      ],
      "x-ms-enum": {
        "name": "NetworkRuleBypassOptions",
        "modelAsString": true
      }
    },
    "NetworkRuleSet": {
      "type": "object",
      "description": "The network rule set for a container registry.",
      "properties": {
        "defaultAction": {
          "$ref": "#/definitions/DefaultAction",
          "description": "The default action of allow or deny when no other rules match.",
          "default": "Allow"
        },
        "ipRules": {
          "type": "array",
          "description": "The IP ACL rules.",
          "items": {
            "$ref": "#/definitions/IPRule"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "defaultAction"
      ]
    },
    "OS": {
      "type": "string",
      "description": "The OS of agent machine",
      "enum": [
        "Windows",
        "Linux"
      ],
      "x-ms-enum": {
        "name": "OS",
        "modelAsString": true
      }
    },
    "OperationDefinition": {
      "type": "object",
      "description": "The definition of a container registry operation.",
      "properties": {
        "origin": {
          "type": "string",
          "description": "The origin information of the container registry operation."
        },
        "name": {
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}."
        },
        "display": {
          "$ref": "#/definitions/OperationDisplayDefinition",
          "description": "The display information for the container registry operation."
        },
        "properties": {
          "$ref": "#/definitions/OperationPropertiesDefinition",
          "description": "The properties information for the container registry operation.",
          "x-ms-client-flatten": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "This property indicates if the operation is an action or a data action\nref: https://docs.microsoft.com/en-us/azure/role-based-access-control/role-definitions#management-and-data-operations"
        }
      }
    },
    "OperationDisplayDefinition": {
      "type": "object",
      "description": "The display information for a container registry operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "The resource provider name: Microsoft.ContainerRegistry."
        },
        "resource": {
          "type": "string",
          "description": "The resource on which the operation is performed."
        },
        "operation": {
          "type": "string",
          "description": "The operation that users can perform."
        },
        "description": {
          "type": "string",
          "description": "The description for the operation."
        }
      }
    },
    "OperationLogSpecificationDefinition": {
      "type": "object",
      "description": "The definition of Azure Monitoring log.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Log name."
        },
        "displayName": {
          "type": "string",
          "description": "Log display name."
        },
        "blobDuration": {
          "type": "string",
          "description": "Log blob duration."
        }
      }
    },
    "OperationMetricSpecificationDefinition": {
      "type": "object",
      "description": "The definition of Azure Monitoring metric.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Metric name."
        },
        "displayName": {
          "type": "string",
          "description": "Metric display name."
        },
        "displayDescription": {
          "type": "string",
          "description": "Metric description."
        },
        "unit": {
          "type": "string",
          "description": "Metric unit."
        },
        "aggregationType": {
          "type": "string",
          "description": "Metric aggregation type."
        },
        "internalMetricName": {
          "type": "string",
          "description": "Internal metric name."
        }
      }
    },
    "OperationPropertiesDefinition": {
      "type": "object",
      "description": "The definition of Azure Monitoring properties.",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/OperationServiceSpecificationDefinition",
          "description": "The definition of Azure Monitoring service."
        }
      }
    },
    "OperationServiceSpecificationDefinition": {
      "type": "object",
      "description": "The definition of Azure Monitoring list.",
      "properties": {
        "metricSpecifications": {
          "type": "array",
          "description": "A list of Azure Monitoring metrics definition.",
          "items": {
            "$ref": "#/definitions/OperationMetricSpecificationDefinition"
          },
          "x-ms-identifiers": []
        },
        "logSpecifications": {
          "type": "array",
          "description": "A list of Azure Monitoring log definitions.",
          "items": {
            "$ref": "#/definitions/OperationLogSpecificationDefinition"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "OverrideTaskStepProperties": {
      "type": "object",
      "properties": {
        "contextPath": {
          "type": "string",
          "description": "The source context against which run has to be queued."
        },
        "file": {
          "type": "string",
          "description": "The file against which run has to be queued."
        },
        "arguments": {
          "type": "array",
          "description": "Gets or sets the collection of override arguments to be used when\nexecuting a build step.",
          "items": {
            "$ref": "#/definitions/Argument"
          },
          "x-ms-identifiers": []
        },
        "target": {
          "type": "string",
          "description": "The name of the target build stage for the docker build."
        },
        "values": {
          "type": "array",
          "description": "The collection of overridable values that can be passed when running a Task.",
          "items": {
            "$ref": "#/definitions/SetValue"
          },
          "x-ms-identifiers": []
        },
        "updateTriggerToken": {
          "type": "string",
          "description": "Base64 encoded update trigger token that will be attached with the base image trigger webhook."
        }
      }
    },
    "PackageType": {
      "type": "object",
      "description": "The properties of a package type.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the package type."
        },
        "endpoint": {
          "type": "string",
          "description": "The endpoint of the package type.",
          "readOnly": true
        }
      }
    },
    "PagedEvent": {
      "type": "object",
      "description": "The result of a request to list events for a webhook.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Event items on this page",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PasswordName": {
      "type": "string",
      "description": "The password name.",
      "enum": [
        "password",
        "password2"
      ],
      "x-ms-enum": {
        "name": "PasswordName",
        "modelAsString": false
      }
    },
    "PlatformProperties": {
      "type": "object",
      "description": "The platform properties against which the run has to happen.",
      "properties": {
        "os": {
          "$ref": "#/definitions/OS",
          "description": "The operating system type required for the run."
        },
        "architecture": {
          "$ref": "#/definitions/Architecture",
          "description": "The OS architecture."
        },
        "variant": {
          "$ref": "#/definitions/Variant",
          "description": "Variant of the CPU."
        }
      },
      "required": [
        "os"
      ]
    },
    "PlatformUpdateParameters": {
      "type": "object",
      "description": "The properties for updating the platform configuration.",
      "properties": {
        "os": {
          "$ref": "#/definitions/OS",
          "description": "The operating system type required for the run."
        },
        "architecture": {
          "$ref": "#/definitions/Architecture",
          "description": "The OS architecture."
        },
        "variant": {
          "$ref": "#/definitions/Variant",
          "description": "Variant of the CPU."
        }
      }
    },
    "Policies": {
      "type": "object",
      "description": "The policies for a container registry.",
      "properties": {
        "quarantinePolicy": {
          "$ref": "#/definitions/QuarantinePolicy",
          "description": "The quarantine policy for a container registry."
        },
        "trustPolicy": {
          "$ref": "#/definitions/TrustPolicy",
          "description": "The content trust policy for a container registry."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "The retention policy for a container registry."
        },
        "exportPolicy": {
          "$ref": "#/definitions/ExportPolicy",
          "description": "The export policy for a container registry."
        }
      }
    },
    "PolicyStatus": {
      "type": "string",
      "description": "The value that indicates whether the policy is enabled or not.",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "PolicyStatus",
        "modelAsString": true
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "The Private Endpoint resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "This is private endpoint resource created with Microsoft.Network resource provider."
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "An object that represents a private endpoint connection for a container registry.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The properties of a private endpoint connection.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "The properties of a private endpoint connection.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private endpoint."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of private endpoint connection resource.",
          "readOnly": true
        }
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A resource that supports private link capabilities.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "A resource that supports private link capabilities.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "The response of a PrivateLinkResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateLinkResource items on this page",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "The properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id."
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "The state of a private link service connection.",
      "properties": {
        "status": {
          "$ref": "#/definitions/ConnectionStatus",
          "description": "The private link service connection status."
        },
        "description": {
          "type": "string",
          "description": "The description for connection status. For example if connection is rejected it can indicate reason for rejection."
        },
        "actionsRequired": {
          "$ref": "#/definitions/ActionsRequired",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of this agent pool",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Whether or not public network access is allowed for the container registry.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "QuarantinePolicy": {
      "type": "object",
      "description": "The quarantine policy for a container registry.",
      "properties": {
        "status": {
          "$ref": "#/definitions/PolicyStatus",
          "description": "The value that indicates whether the policy is enabled or not."
        }
      }
    },
    "RegenerateCredentialParameters": {
      "type": "object",
      "description": "The parameters used to regenerate the login credential.",
      "properties": {
        "name": {
          "$ref": "#/definitions/PasswordName",
          "description": "Specifies name of the password which should be regenerated -- password or password2."
        }
      },
      "required": [
        "name"
      ]
    },
    "Registry": {
      "type": "object",
      "description": "An object that represents a container registry.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RegistryProperties",
          "description": "The properties of the container registry.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "RegistryListCredentialsResult": {
      "type": "object",
      "description": "The response from the ListCredentials operation.",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username for a container registry."
        },
        "passwords": {
          "type": "array",
          "description": "The list of passwords for a container registry.",
          "items": {
            "$ref": "#/definitions/RegistryPassword"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RegistryListResult": {
      "type": "object",
      "description": "The response of a Registry list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Registry items on this page",
          "items": {
            "$ref": "#/definitions/Registry"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RegistryNameCheckRequest": {
      "type": "object",
      "description": "A request to check whether a container registry name is available.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the container registry.",
          "minLength": 5,
          "maxLength": 50,
          "pattern": "^[a-zA-Z0-9]*$"
        },
        "type": {
          "type": "string",
          "description": "The resource type of the container registry. This field must be set to 'Microsoft.ContainerRegistry/registries'.",
          "enum": [
            "Microsoft.ContainerRegistry/registries"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "RegistryNameStatus": {
      "type": "object",
      "description": "The result of a request to check the availability of a container registry name.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "The value that indicates whether the name is available."
        },
        "reason": {
          "type": "string",
          "description": "If any, the reason that the name is not available."
        },
        "message": {
          "type": "string",
          "description": "If any, the error message that provides more detail for the reason that the name is not available."
        }
      }
    },
    "RegistryPassword": {
      "type": "object",
      "description": "The login password for the container registry.",
      "properties": {
        "name": {
          "$ref": "#/definitions/PasswordName",
          "description": "The password name."
        },
        "value": {
          "type": "string",
          "description": "The password value."
        }
      }
    },
    "RegistryProperties": {
      "type": "object",
      "description": "The properties of a container registry.",
      "properties": {
        "loginServer": {
          "type": "string",
          "description": "The URL that can be used to log into the container registry.",
          "readOnly": true
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the container registry in ISO8601 format.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the container registry at the time the operation was called.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "The status of the container registry at the time the operation was called.",
          "readOnly": true
        },
        "adminUserEnabled": {
          "type": "boolean",
          "description": "The value that indicates whether the admin user is enabled."
        },
        "networkRuleSet": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "The network rule set for a container registry."
        },
        "policies": {
          "$ref": "#/definitions/Policies",
          "description": "The policies for a container registry."
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperty",
          "description": "The encryption settings of container registry."
        },
        "dataEndpointEnabled": {
          "type": "boolean",
          "description": "Enable a single data endpoint per region for serving data."
        },
        "dataEndpointHostNames": {
          "type": "array",
          "description": "List of host names that will serve data when dataEndpointEnabled is true.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connections for a container registry.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether or not public network access is allowed for the container registry."
        },
        "networkRuleBypassOptions": {
          "$ref": "#/definitions/NetworkRuleBypassOptions",
          "description": "Whether to allow trusted Azure services to access a network restricted registry."
        },
        "zoneRedundancy": {
          "$ref": "#/definitions/ZoneRedundancy",
          "description": "Whether or not zone redundancy is enabled for this container registry"
        }
      }
    },
    "RegistryPropertiesUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating the properties of a container registry.",
      "properties": {
        "adminUserEnabled": {
          "type": "boolean",
          "description": "The value that indicates whether the admin user is enabled."
        },
        "networkRuleSet": {
          "$ref": "#/definitions/NetworkRuleSet",
          "description": "The network rule set for a container registry."
        },
        "policies": {
          "$ref": "#/definitions/Policies",
          "description": "The policies for a container registry."
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionProperty",
          "description": "The encryption settings of container registry."
        },
        "dataEndpointEnabled": {
          "type": "boolean",
          "description": "Enable a single data endpoint per region for serving data."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether or not public network access is allowed for the container registry."
        },
        "networkRuleBypassOptions": {
          "$ref": "#/definitions/NetworkRuleBypassOptions",
          "description": "Whether to allow trusted Azure services to access a network restricted registry."
        }
      }
    },
    "RegistryUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating a container registry.",
      "properties": {
        "identity": {
          "$ref": "#/definitions/IdentityProperties",
          "description": "The identity of the container registry."
        },
        "tags": {
          "type": "object",
          "description": "The tags for the container registry.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU of the container registry."
        },
        "properties": {
          "$ref": "#/definitions/RegistryPropertiesUpdateParameters",
          "description": "The properties that the container registry will be updated with.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RegistryUsage": {
      "type": "object",
      "description": "The quota usage for a container registry.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the usage."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "The limit of the usage."
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "description": "The current value of the usage."
        },
        "unit": {
          "$ref": "#/definitions/RegistryUsageUnit",
          "description": "The unit of measurement."
        }
      }
    },
    "RegistryUsageListResult": {
      "type": "object",
      "description": "The result of a request to get container registry quota usages.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of container registry quota usages.",
          "items": {
            "$ref": "#/definitions/RegistryUsage"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RegistryUsageUnit": {
      "type": "string",
      "description": "The unit of measurement.",
      "enum": [
        "Count",
        "Bytes"
      ],
      "x-ms-enum": {
        "name": "RegistryUsageUnit",
        "modelAsString": true
      }
    },
    "Replication": {
      "type": "object",
      "description": "An object that represents a replication for a container registry.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReplicationProperties",
          "description": "The properties of the replication.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ReplicationListResult": {
      "type": "object",
      "description": "The response of a Replication list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Replication items on this page",
          "items": {
            "$ref": "#/definitions/Replication"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ReplicationProperties": {
      "type": "object",
      "description": "The properties of a replication.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the replication at the time the operation was called.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "The status of the replication at the time the operation was called.",
          "readOnly": true
        },
        "regionEndpointEnabled": {
          "type": "boolean",
          "description": "Specifies whether the replication's regional endpoint is enabled. Requests will not be routed to a replication whose regional endpoint is disabled, however its data will continue to be synced with other replications.",
          "default": true
        },
        "zoneRedundancy": {
          "$ref": "#/definitions/ZoneRedundancy",
          "description": "Whether or not zone redundancy is enabled for this container registry replication"
        }
      }
    },
    "ReplicationUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating a replication.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags for the replication.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ReplicationUpdateParametersProperties",
          "description": "The parameters for updating a replication's properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ReplicationUpdateParametersProperties": {
      "type": "object",
      "properties": {
        "regionEndpointEnabled": {
          "type": "boolean",
          "description": "Specifies whether the replication's regional endpoint is enabled. Requests will not be routed to a replication whose regional endpoint is disabled, however its data will continue to be synced with other replications."
        }
      }
    },
    "Request": {
      "type": "object",
      "description": "The request that generated the event.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the request that initiated the event."
        },
        "addr": {
          "type": "string",
          "description": "The IP or hostname and possibly port of the client connection that initiated the event. This is the RemoteAddr from the standard http request."
        },
        "host": {
          "type": "string",
          "description": "The externally accessible hostname of the registry instance, as specified by the http host header on incoming requests."
        },
        "method": {
          "type": "string",
          "description": "The request method that generated the event."
        },
        "useragent": {
          "type": "string",
          "description": "The user agent header of the request."
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "An Azure resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource ID.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource. This cannot be changed after the resource is created.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      },
      "required": [
        "location"
      ]
    },
    "ResourceIdentityType": {
      "type": "string",
      "description": "The identity type.",
      "enum": [
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ResourceIdentityType",
        "modelAsString": false
      }
    },
    "RetentionPolicy": {
      "type": "object",
      "description": "The retention policy for a container registry.",
      "properties": {
        "days": {
          "type": "integer",
          "format": "int32",
          "description": "The number of days to retain an untagged manifest after which it gets purged.",
          "default": 7
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the policy was last updated.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/PolicyStatus",
          "description": "The value that indicates whether the policy is enabled or not."
        }
      }
    },
    "Run": {
      "type": "object",
      "description": "Run resource properties",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RunProperties",
          "description": "The properties of a run.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RunFilter": {
      "type": "object",
      "description": "Properties that are enabled for Odata querying on runs.",
      "properties": {
        "runId": {
          "type": "string",
          "description": "The unique identifier for the run."
        },
        "runType": {
          "$ref": "#/definitions/RunType",
          "description": "The type of run."
        },
        "status": {
          "$ref": "#/definitions/RunStatus",
          "description": "The current status of the run."
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "The create time for a run."
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the run finished."
        },
        "outputImageManifests": {
          "type": "string",
          "description": "The list of comma-separated image manifests that were generated from the run. This is applicable if the run is of\nbuild type."
        },
        "isArchiveEnabled": {
          "type": "boolean",
          "description": "The value that indicates whether archiving is enabled or not."
        },
        "taskName": {
          "type": "string",
          "description": "The name of the task that the run corresponds to."
        },
        "agentPoolName": {
          "type": "string",
          "description": "The name of the agent pool that the run corresponds to."
        }
      }
    },
    "RunGetLogResult": {
      "type": "object",
      "description": "The result of get log link operation.",
      "properties": {
        "logLink": {
          "type": "string",
          "description": "The link to logs for a run on a azure container registry."
        },
        "logArtifactLink": {
          "type": "string",
          "description": "The link to logs in registry for a run on a azure container registry."
        }
      }
    },
    "RunListResult": {
      "type": "object",
      "description": "The response of a Run list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Run items on this page",
          "items": {
            "$ref": "#/definitions/Run"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RunProperties": {
      "type": "object",
      "description": "The properties for a run.",
      "properties": {
        "runId": {
          "type": "string",
          "description": "The unique identifier for the run."
        },
        "status": {
          "$ref": "#/definitions/RunStatus",
          "description": "The current status of the run."
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last updated time for the run."
        },
        "runType": {
          "$ref": "#/definitions/RunType",
          "description": "The type of run."
        },
        "agentPoolName": {
          "type": "string",
          "description": "The dedicated agent pool for the run."
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the run was scheduled."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the run started."
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the run finished."
        },
        "outputImages": {
          "type": "array",
          "description": "The list of all images that were generated from the run. This is applicable if the run generates base image dependencies.",
          "items": {
            "$ref": "#/definitions/ImageDescriptor"
          },
          "x-ms-identifiers": []
        },
        "task": {
          "type": "string",
          "description": "The task against which run was scheduled."
        },
        "imageUpdateTrigger": {
          "$ref": "#/definitions/ImageUpdateTrigger",
          "description": "The image update trigger that caused the run. This is applicable if the task has base image trigger configured."
        },
        "sourceTrigger": {
          "$ref": "#/definitions/SourceTriggerDescriptor",
          "description": "The source trigger that caused the run."
        },
        "timerTrigger": {
          "$ref": "#/definitions/TimerTriggerDescriptor",
          "description": "The timer trigger that caused the run."
        },
        "platform": {
          "$ref": "#/definitions/PlatformProperties",
          "description": "The platform properties against which the run will happen."
        },
        "agentConfiguration": {
          "$ref": "#/definitions/AgentProperties",
          "description": "The machine configuration of the run agent."
        },
        "sourceRegistryAuth": {
          "type": "string",
          "description": "The scope of the credentials that were used to login to the source registry during this run."
        },
        "customRegistries": {
          "type": "array",
          "description": "The list of custom registries that were logged in during this run.",
          "items": {
            "type": "string"
          }
        },
        "runErrorMessage": {
          "type": "string",
          "description": "The error message received from backend systems after the run is scheduled.",
          "readOnly": true
        },
        "updateTriggerToken": {
          "type": "string",
          "description": "The update trigger token passed for the Run."
        },
        "logArtifact": {
          "$ref": "#/definitions/ImageDescriptor",
          "description": "The image description for the log artifact.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of a run."
        },
        "isArchiveEnabled": {
          "type": "boolean",
          "description": "The value that indicates whether archiving is enabled or not."
        }
      }
    },
    "RunRequest": {
      "type": "object",
      "description": "The request parameters for scheduling a run.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for RunRequest."
        },
        "isArchiveEnabled": {
          "type": "boolean",
          "description": "The value that indicates whether archiving is enabled for the run or not."
        },
        "agentPoolName": {
          "type": "string",
          "description": "The dedicated agent pool for the run."
        },
        "logTemplate": {
          "type": "string",
          "description": "The template that describes the repository and tag information for run log artifact."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "RunStatus": {
      "type": "string",
      "description": "The current status of the run.",
      "enum": [
        "Queued",
        "Started",
        "Running",
        "Succeeded",
        "Failed",
        "Canceled",
        "Error",
        "Timeout"
      ],
      "x-ms-enum": {
        "name": "RunStatus",
        "modelAsString": true
      },
      "readOnly": true
    },
    "RunType": {
      "type": "string",
      "description": "The type of run.",
      "enum": [
        "QuickBuild",
        "QuickRun",
        "AutoBuild",
        "AutoRun"
      ],
      "x-ms-enum": {
        "name": "RunType",
        "modelAsString": true
      }
    },
    "RunUpdateParameters": {
      "type": "object",
      "description": "The set of run properties that can be updated.",
      "properties": {
        "isArchiveEnabled": {
          "type": "boolean",
          "description": "The value that indicates whether archiving is enabled or not."
        }
      }
    },
    "ScopeMap": {
      "type": "object",
      "description": "An object that represents a scope map for a container registry.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScopeMapProperties",
          "description": "The properties of the scope map.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScopeMapListResult": {
      "type": "object",
      "description": "The response of a ScopeMap list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScopeMap items on this page",
          "items": {
            "$ref": "#/definitions/ScopeMap"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScopeMapProperties": {
      "type": "object",
      "description": "The properties of a scope map.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The user friendly description of the scope map."
        },
        "type": {
          "type": "string",
          "description": "The type of the scope map. E.g. BuildIn scope map.",
          "readOnly": true
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of scope map.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "actions": {
          "type": "array",
          "description": "The list of scoped permissions for registry artifacts.\nE.g. repositories/repository-name/content/read,\nrepositories/repository-name/metadata/write",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "actions"
      ]
    },
    "ScopeMapPropertiesUpdateParameters": {
      "type": "object",
      "description": "The update parameters for scope map properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The user friendly description of the scope map."
        },
        "actions": {
          "type": "array",
          "description": "The list of scope permissions for registry artifacts.\nE.g. repositories/repository-name/pull,\nrepositories/repository-name/delete",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ScopeMapUpdateParameters": {
      "type": "object",
      "description": "The properties for updating the scope map.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScopeMapPropertiesUpdateParameters",
          "description": "The update parameters for scope map properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SecretObject": {
      "type": "object",
      "description": "Describes the properties of a secret object value.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the secret. The format of this value will be determined\nbased on the type of the secret object. If the type is Opaque, the value will be\nused as is without any modification."
        },
        "type": {
          "$ref": "#/definitions/SecretObjectType",
          "description": "The type of the secret object which determines how the value of the secret object has to be\ninterpreted."
        }
      }
    },
    "SecretObjectType": {
      "type": "string",
      "description": "The type of the secret object which determines how the value of the secret object has to be\ninterpreted.",
      "enum": [
        "Opaque",
        "Vaultsecret"
      ],
      "x-ms-enum": {
        "name": "SecretObjectType",
        "modelAsString": true
      }
    },
    "SetValue": {
      "type": "object",
      "description": "The properties of a overridable value that can be passed to a task template.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the overridable value."
        },
        "value": {
          "type": "string",
          "description": "The overridable value."
        },
        "isSecret": {
          "type": "boolean",
          "description": "Flag to indicate whether the value represents a secret or not."
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "Sku": {
      "type": "object",
      "description": "The SKU of a container registry.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "The SKU name of the container registry. Required for registry creation."
        },
        "tier": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.SkuTier",
          "description": "The SKU tier based on the SKU name.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "type": "string",
      "description": "The SKU name of the container registry. Required for registry creation.",
      "enum": [
        "Classic",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true
      }
    },
    "Source": {
      "type": "object",
      "description": "The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it.",
      "properties": {
        "addr": {
          "type": "string",
          "description": "The IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port."
        },
        "instanceID": {
          "type": "string",
          "description": "The running instance of an application. Changes after each restart."
        }
      }
    },
    "SourceControlType": {
      "type": "string",
      "description": "The type of source control service.",
      "enum": [
        "Github",
        "VisualStudioTeamService"
      ],
      "x-ms-enum": {
        "name": "SourceControlType",
        "modelAsString": true
      }
    },
    "SourceProperties": {
      "type": "object",
      "description": "The properties of the source code repository.",
      "properties": {
        "sourceControlType": {
          "$ref": "#/definitions/SourceControlType",
          "description": "The type of source control service."
        },
        "repositoryUrl": {
          "type": "string",
          "description": "The full URL to the source code repository"
        },
        "branch": {
          "type": "string",
          "description": "The branch name of the source code."
        },
        "sourceControlAuthProperties": {
          "$ref": "#/definitions/AuthInfo",
          "description": "The authorization properties for accessing the source code repository and to set up\nwebhooks for notifications."
        }
      },
      "required": [
        "sourceControlType",
        "repositoryUrl"
      ]
    },
    "SourceRegistryCredentials": {
      "type": "object",
      "description": "Describes the credential parameters for accessing the source registry.",
      "properties": {
        "loginMode": {
          "$ref": "#/definitions/SourceRegistryLoginMode",
          "description": "The authentication mode which determines the source registry login scope. The credentials for the source registry\nwill be generated using the given scope. These credentials will be used to login to\nthe source registry during the run."
        }
      }
    },
    "SourceRegistryLoginMode": {
      "type": "string",
      "description": "The authentication mode which determines the source registry login scope. The credentials for the source registry\nwill be generated using the given scope. These credentials will be used to login to\nthe source registry during the run.",
      "enum": [
        "None",
        "Default"
      ],
      "x-ms-enum": {
        "name": "SourceRegistryLoginMode",
        "modelAsString": true
      }
    },
    "SourceTrigger": {
      "type": "object",
      "description": "The properties of a source based trigger.",
      "properties": {
        "sourceRepository": {
          "$ref": "#/definitions/SourceProperties",
          "description": "The properties that describes the source(code) for the task."
        },
        "sourceTriggerEvents": {
          "type": "array",
          "description": "The source event corresponding to the trigger.",
          "items": {
            "$ref": "#/definitions/SourceTriggerEvent"
          }
        },
        "status": {
          "$ref": "#/definitions/TriggerStatus",
          "description": "The current status of trigger."
        },
        "name": {
          "type": "string",
          "description": "The name of the trigger."
        }
      },
      "required": [
        "sourceRepository",
        "sourceTriggerEvents",
        "name"
      ]
    },
    "SourceTriggerDescriptor": {
      "type": "object",
      "description": "The source trigger that caused a run.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID of the trigger."
        },
        "eventType": {
          "type": "string",
          "description": "The event type of the trigger."
        },
        "commitId": {
          "type": "string",
          "description": "The unique ID that identifies a commit."
        },
        "pullRequestId": {
          "type": "string",
          "description": "The unique ID that identifies pull request."
        },
        "repositoryUrl": {
          "type": "string",
          "description": "The repository URL."
        },
        "branchName": {
          "type": "string",
          "description": "The branch name in the repository."
        },
        "providerType": {
          "type": "string",
          "description": "The source control provider type."
        }
      }
    },
    "SourceTriggerEvent": {
      "type": "string",
      "enum": [
        "commit",
        "pullrequest"
      ],
      "x-ms-enum": {
        "name": "SourceTriggerEvent",
        "modelAsString": true
      }
    },
    "SourceTriggerUpdateParameters": {
      "type": "object",
      "description": "The properties for updating a source based trigger.",
      "properties": {
        "sourceRepository": {
          "$ref": "#/definitions/SourceUpdateParameters",
          "description": "The properties that describes the source(code) for the task."
        },
        "sourceTriggerEvents": {
          "type": "array",
          "description": "The source event corresponding to the trigger.",
          "items": {
            "$ref": "#/definitions/SourceTriggerEvent"
          }
        },
        "status": {
          "$ref": "#/definitions/TriggerStatus",
          "description": "The current status of trigger."
        },
        "name": {
          "type": "string",
          "description": "The name of the trigger."
        }
      },
      "required": [
        "name"
      ]
    },
    "SourceUpdateParameters": {
      "type": "object",
      "description": "The properties for updating the source code repository.",
      "properties": {
        "sourceControlType": {
          "$ref": "#/definitions/SourceControlType",
          "description": "The type of source control service."
        },
        "repositoryUrl": {
          "type": "string",
          "description": "The full URL to the source code repository"
        },
        "branch": {
          "type": "string",
          "description": "The branch name of the source code."
        },
        "sourceControlAuthProperties": {
          "$ref": "#/definitions/AuthInfoUpdateParameters",
          "description": "The authorization properties for accessing the source code repository and to set up\nwebhooks for notifications."
        }
      }
    },
    "SourceUploadDefinition": {
      "type": "object",
      "description": "The properties of a response to source upload request.",
      "properties": {
        "uploadUrl": {
          "type": "string",
          "description": "The URL where the client can upload the source."
        },
        "relativePath": {
          "type": "string",
          "description": "The relative path to the source. This is used to submit the subsequent queue build request."
        }
      }
    },
    "Status": {
      "type": "object",
      "description": "The status of an Azure resource at the time the operation was called.",
      "properties": {
        "displayStatus": {
          "type": "string",
          "description": "The short label for the status.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The detailed message for the status, including alerts and error messages.",
          "readOnly": true
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the status was changed to the current value.",
          "readOnly": true
        }
      }
    },
    "StepType": {
      "type": "string",
      "description": "The type of the step.",
      "enum": [
        "Docker",
        "FileTask",
        "EncodedTask"
      ],
      "x-ms-enum": {
        "name": "StepType",
        "modelAsString": true
      }
    },
    "StorageAccountProperties": {
      "type": "object",
      "description": "The properties of a storage account for a container registry. Only applicable to Classic SKU.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource ID of the storage account."
        }
      },
      "required": [
        "id"
      ]
    },
    "Target": {
      "type": "object",
      "description": "The target of the event.",
      "properties": {
        "mediaType": {
          "type": "string",
          "description": "The MIME type of the referenced object."
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "The number of bytes of the content. Same as Length field."
        },
        "digest": {
          "type": "string",
          "description": "The digest of the content, as defined by the Registry V2 HTTP API Specification."
        },
        "length": {
          "type": "integer",
          "format": "int64",
          "description": "The number of bytes of the content. Same as Size field."
        },
        "repository": {
          "type": "string",
          "description": "The repository name."
        },
        "url": {
          "type": "string",
          "description": "The direct URL to the content."
        },
        "tag": {
          "type": "string",
          "description": "The tag name."
        },
        "name": {
          "type": "string",
          "description": "The name of the artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the artifact."
        }
      }
    },
    "Task": {
      "type": "object",
      "description": "The task that has the ARM resource and task properties.\nThe task will have all information to schedule a run against it.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TaskProperties",
          "description": "The properties of a task.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "TaskListResult": {
      "type": "object",
      "description": "The response of a Task list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Task items on this page",
          "items": {
            "$ref": "#/definitions/Task"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TaskProperties": {
      "type": "object",
      "description": "The properties of a task.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the task.",
          "readOnly": true
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of task.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/TaskStatus",
          "description": "The current status of task."
        },
        "platform": {
          "$ref": "#/definitions/PlatformProperties",
          "description": "The platform properties against which the run has to happen."
        },
        "agentConfiguration": {
          "$ref": "#/definitions/AgentProperties",
          "description": "The machine configuration of the run agent."
        },
        "agentPoolName": {
          "type": "string",
          "description": "The dedicated agent pool for the task."
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Run timeout in seconds.",
          "default": 3600,
          "minimum": 300,
          "maximum": 28800
        },
        "step": {
          "$ref": "#/definitions/TaskStepProperties",
          "description": "The properties of a task step."
        },
        "trigger": {
          "$ref": "#/definitions/TriggerProperties",
          "description": "The properties that describe all triggers for the task."
        },
        "credentials": {
          "$ref": "#/definitions/Credentials",
          "description": "The properties that describes a set of credentials that will be used when this run is invoked."
        },
        "logTemplate": {
          "type": "string",
          "description": "The template that describes the repository and tag information for run log artifact."
        },
        "isSystemTask": {
          "type": "boolean",
          "description": "The value of this property indicates whether the task resource is system task or not."
        }
      }
    },
    "TaskPropertiesUpdateParameters": {
      "type": "object",
      "description": "The properties for updating a task.",
      "properties": {
        "status": {
          "$ref": "#/definitions/TaskStatus",
          "description": "The current status of task."
        },
        "platform": {
          "$ref": "#/definitions/PlatformUpdateParameters",
          "description": "The platform properties against which the run has to happen."
        },
        "agentConfiguration": {
          "$ref": "#/definitions/AgentProperties",
          "description": "The machine configuration of the run agent."
        },
        "agentPoolName": {
          "type": "string",
          "description": "The dedicated agent pool for the task."
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Run timeout in seconds."
        },
        "step": {
          "$ref": "#/definitions/TaskStepUpdateParameters",
          "description": "The properties for updating a task step."
        },
        "trigger": {
          "$ref": "#/definitions/TriggerUpdateParameters",
          "description": "The properties for updating trigger properties."
        },
        "credentials": {
          "$ref": "#/definitions/Credentials",
          "description": "The parameters that describes a set of credentials that will be used when this run is invoked."
        },
        "logTemplate": {
          "type": "string",
          "description": "The template that describes the repository and tag information for run log artifact."
        }
      }
    },
    "TaskRun": {
      "type": "object",
      "description": "The task run that has the ARM resource and properties.\nThe task run will have the information of request and result of a run.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TaskRunProperties",
          "description": "The properties associated with the task run, i.e., request and result of the run",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TaskRunListResult": {
      "type": "object",
      "description": "The response of a TaskRun list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TaskRun items on this page",
          "items": {
            "$ref": "#/definitions/TaskRun"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TaskRunProperties": {
      "type": "object",
      "description": "The properties of task run.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of this task run",
          "readOnly": true
        },
        "runRequest": {
          "$ref": "#/definitions/RunRequest",
          "description": "The request (parameters) for the run"
        },
        "runResult": {
          "$ref": "#/definitions/Run",
          "description": "The result of this task run",
          "readOnly": true
        },
        "forceUpdateTag": {
          "type": "string",
          "description": "How the run should be forced to rerun even if the run request configuration has not changed"
        }
      }
    },
    "TaskRunPropertiesUpdateParameters": {
      "type": "object",
      "description": "The properties of a task run update parameters.",
      "properties": {
        "runRequest": {
          "$ref": "#/definitions/RunRequest",
          "description": "The request (parameters) for the new run"
        },
        "forceUpdateTag": {
          "type": "string",
          "description": "How the run should be forced to rerun even if the run request configuration has not changed"
        }
      }
    },
    "TaskRunRequest": {
      "type": "object",
      "description": "The parameters for a task run request.",
      "properties": {
        "taskId": {
          "type": "string",
          "description": "The resource ID of task against which run has to be queued."
        },
        "overrideTaskStepProperties": {
          "$ref": "#/definitions/OverrideTaskStepProperties",
          "description": "Set of overridable parameters that can be passed when running a Task."
        }
      },
      "required": [
        "taskId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RunRequest"
        }
      ],
      "x-ms-discriminator-value": "TaskRunRequest"
    },
    "TaskRunUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating a task run.",
      "properties": {
        "identity": {
          "$ref": "#/definitions/IdentityProperties",
          "description": "Identity for the resource."
        },
        "properties": {
          "$ref": "#/definitions/TaskRunPropertiesUpdateParameters",
          "description": "The properties for updating a task run.",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource"
        },
        "tags": {
          "type": "object",
          "description": "The ARM resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TaskStatus": {
      "type": "string",
      "description": "The current status of task.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "TaskStatus",
        "modelAsString": true
      }
    },
    "TaskStepProperties": {
      "type": "object",
      "description": "Base properties for any task step.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for TaskStepProperties."
        },
        "baseImageDependencies": {
          "type": "array",
          "description": "List of base image dependencies for a step.",
          "items": {
            "$ref": "#/definitions/BaseImageDependency"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "contextPath": {
          "type": "string",
          "description": "The URL(absolute or relative) of the source context for the task step."
        },
        "contextAccessToken": {
          "type": "string",
          "description": "The token (git PAT or SAS token of storage account blob) associated with the context for a step."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "TaskStepUpdateParameters": {
      "type": "object",
      "description": "Base properties for updating any task step.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for TaskStepUpdateParameters."
        },
        "contextPath": {
          "type": "string",
          "description": "The URL(absolute or relative) of the source context for the task step."
        },
        "contextAccessToken": {
          "type": "string",
          "description": "The token (git PAT or SAS token of storage account blob) associated with the context for a step."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "TaskUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating a task.",
      "properties": {
        "identity": {
          "$ref": "#/definitions/IdentityProperties",
          "description": "Identity for the resource."
        },
        "properties": {
          "$ref": "#/definitions/TaskPropertiesUpdateParameters",
          "description": "The properties for updating a task.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "The ARM resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TimerTrigger": {
      "type": "object",
      "description": "The properties of a timer trigger.",
      "properties": {
        "schedule": {
          "type": "string",
          "description": "The CRON expression for the task schedule"
        },
        "status": {
          "$ref": "#/definitions/TriggerStatus",
          "description": "The current status of trigger."
        },
        "name": {
          "type": "string",
          "description": "The name of the trigger."
        }
      },
      "required": [
        "schedule",
        "name"
      ]
    },
    "TimerTriggerDescriptor": {
      "type": "object",
      "properties": {
        "timerTriggerName": {
          "type": "string",
          "description": "The timer trigger name that caused the run."
        },
        "scheduleOccurrence": {
          "type": "string",
          "description": "The occurrence that triggered the run."
        }
      }
    },
    "TimerTriggerUpdateParameters": {
      "type": "object",
      "description": "The properties for updating a timer trigger.",
      "properties": {
        "schedule": {
          "type": "string",
          "description": "The CRON expression for the task schedule"
        },
        "status": {
          "$ref": "#/definitions/TriggerStatus",
          "description": "The current status of trigger."
        },
        "name": {
          "type": "string",
          "description": "The name of the trigger."
        }
      },
      "required": [
        "name"
      ]
    },
    "Token": {
      "type": "object",
      "description": "An object that represents a token for a container registry.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TokenProperties",
          "description": "The properties of the token.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TokenCertificate": {
      "type": "object",
      "description": "The properties of a certificate used for authenticating a token.",
      "properties": {
        "name": {
          "$ref": "#/definitions/TokenCertificateName"
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The expiry datetime of the certificate.",
          "x-ms-client-name": "expireOn"
        },
        "thumbprint": {
          "type": "string",
          "description": "The thumbprint of the certificate."
        },
        "encodedPemCertificate": {
          "type": "string",
          "description": "Base 64 encoded string of the public certificate1 in PEM format that will be used for authenticating the token."
        }
      }
    },
    "TokenCertificateName": {
      "type": "string",
      "enum": [
        "certificate1",
        "certificate2"
      ],
      "x-ms-enum": {
        "name": "TokenCertificateName",
        "modelAsString": true
      }
    },
    "TokenCredentialsProperties": {
      "type": "object",
      "description": "The properties of the credentials that can be used for authenticating the token.",
      "properties": {
        "certificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenCertificate"
          },
          "x-ms-identifiers": []
        },
        "passwords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenPassword"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "TokenListResult": {
      "type": "object",
      "description": "The response of a Token list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Token items on this page",
          "items": {
            "$ref": "#/definitions/Token"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TokenPassword": {
      "type": "object",
      "description": "The password that will be used for authenticating the token of a container registry.",
      "properties": {
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation datetime of the password."
        },
        "expiry": {
          "type": "string",
          "format": "date-time",
          "description": "The expiry datetime of the password.",
          "x-ms-client-name": "expireOn"
        },
        "name": {
          "$ref": "#/definitions/TokenPasswordName",
          "description": "The password name \"password1\" or \"password2\""
        },
        "value": {
          "type": "string",
          "description": "The password value.",
          "readOnly": true
        }
      }
    },
    "TokenPasswordName": {
      "type": "string",
      "description": "The password name \"password1\" or \"password2\"",
      "enum": [
        "password1",
        "password2"
      ],
      "x-ms-enum": {
        "name": "TokenPasswordName",
        "modelAsString": true
      }
    },
    "TokenProperties": {
      "type": "object",
      "description": "The properties of a token.",
      "properties": {
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of scope map.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "scopeMapId": {
          "type": "string",
          "description": "The resource ID of the scope map to which the token will be associated with."
        },
        "credentials": {
          "$ref": "#/definitions/TokenCredentialsProperties",
          "description": "The credentials that can be used for authenticating the token."
        },
        "status": {
          "$ref": "#/definitions/TokenStatus",
          "description": "The status of the token example enabled or disabled."
        }
      }
    },
    "TokenStatus": {
      "type": "string",
      "description": "The status of the token example enabled or disabled.",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "TokenStatus",
        "modelAsString": true
      }
    },
    "TokenType": {
      "type": "string",
      "description": "The type of Auth token.",
      "enum": [
        "PAT",
        "OAuth"
      ],
      "x-ms-enum": {
        "name": "TokenType",
        "modelAsString": true
      }
    },
    "TokenUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating a token.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TokenUpdateProperties",
          "description": "The properties of the token update parameters.",
          "x-ms-client-flatten": true
        }
      }
    },
    "TokenUpdateProperties": {
      "type": "object",
      "description": "The parameters for updating token properties.",
      "properties": {
        "scopeMapId": {
          "type": "string",
          "description": "The resource ID of the scope map to which the token will be associated with."
        },
        "status": {
          "$ref": "#/definitions/TokenStatus",
          "description": "The status of the token example enabled or disabled."
        },
        "credentials": {
          "$ref": "#/definitions/TokenCredentialsProperties",
          "description": "The credentials that can be used for authenticating the token."
        }
      }
    },
    "TriggerProperties": {
      "type": "object",
      "description": "The properties of a trigger.",
      "properties": {
        "timerTriggers": {
          "type": "array",
          "description": "The collection of timer triggers.",
          "items": {
            "$ref": "#/definitions/TimerTrigger"
          },
          "x-ms-identifiers": []
        },
        "sourceTriggers": {
          "type": "array",
          "description": "The collection of triggers based on source code repository.",
          "items": {
            "$ref": "#/definitions/SourceTrigger"
          },
          "x-ms-identifiers": []
        },
        "baseImageTrigger": {
          "$ref": "#/definitions/BaseImageTrigger",
          "description": "The trigger based on base image dependencies."
        }
      }
    },
    "TriggerStatus": {
      "type": "string",
      "description": "The current status of trigger.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "TriggerStatus",
        "modelAsString": true
      }
    },
    "TriggerUpdateParameters": {
      "type": "object",
      "description": "The properties for updating triggers.",
      "properties": {
        "timerTriggers": {
          "type": "array",
          "description": "The collection of timer triggers.",
          "items": {
            "$ref": "#/definitions/TimerTriggerUpdateParameters"
          },
          "x-ms-identifiers": []
        },
        "sourceTriggers": {
          "type": "array",
          "description": "The collection of triggers based on source code repository.",
          "items": {
            "$ref": "#/definitions/SourceTriggerUpdateParameters"
          },
          "x-ms-identifiers": []
        },
        "baseImageTrigger": {
          "$ref": "#/definitions/BaseImageTriggerUpdateParameters",
          "description": "The trigger based on base image dependencies."
        }
      }
    },
    "TrustPolicy": {
      "type": "object",
      "description": "The content trust policy for a container registry.",
      "properties": {
        "type": {
          "$ref": "#/definitions/TrustPolicyType",
          "description": "The type of trust policy.",
          "default": "Notary"
        },
        "status": {
          "$ref": "#/definitions/PolicyStatus",
          "description": "The value that indicates whether the policy is enabled or not."
        }
      }
    },
    "TrustPolicyType": {
      "type": "string",
      "description": "The type of trust policy.",
      "enum": [
        "Notary"
      ],
      "x-ms-enum": {
        "name": "TrustPolicyType",
        "modelAsString": true
      }
    },
    "UpdateTriggerPayloadType": {
      "type": "string",
      "description": "Type of Payload body for Base image update triggers.",
      "enum": [
        "Default",
        "Token"
      ],
      "x-ms-enum": {
        "name": "UpdateTriggerPayloadType",
        "modelAsString": true
      }
    },
    "UserIdentityProperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal id of user assigned identity.",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "description": "The client id of user assigned identity.",
          "readOnly": true
        }
      }
    },
    "Variant": {
      "type": "string",
      "description": "Variant of the CPU.",
      "enum": [
        "v6",
        "v7",
        "v8"
      ],
      "x-ms-enum": {
        "name": "Variant",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2022-12-01",
        "2019-06-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_12_01",
            "value": "2022-12-01",
            "description": "The 2022-12-01 API version."
          },
          {
            "name": "v2019_06_01_preview",
            "value": "2019-06-01-preview",
            "description": "The 2019-06-01-preview API version."
          }
        ]
      }
    },
    "Webhook": {
      "type": "object",
      "description": "An object that represents a webhook for a container registry.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebhookProperties",
          "description": "The properties of the webhook.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WebhookAction": {
      "type": "string",
      "enum": [
        "push",
        "delete",
        "quarantine",
        "chart_push",
        "chart_delete"
      ],
      "x-ms-enum": {
        "name": "WebhookAction",
        "modelAsString": true
      }
    },
    "WebhookCreateParameters": {
      "type": "object",
      "description": "The parameters for creating a webhook.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags for the webhook.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The location of the webhook. This cannot be changed after the resource is created."
        },
        "properties": {
          "$ref": "#/definitions/WebhookPropertiesCreateParameters",
          "description": "The properties that the webhook will be created with.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "location"
      ]
    },
    "WebhookListResult": {
      "type": "object",
      "description": "The response of a Webhook list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Webhook items on this page",
          "items": {
            "$ref": "#/definitions/Webhook"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WebhookProperties": {
      "type": "object",
      "description": "The properties of a webhook.",
      "properties": {
        "status": {
          "$ref": "#/definitions/WebhookStatus",
          "description": "The status of the webhook at the time the operation was called."
        },
        "scope": {
          "type": "string",
          "description": "The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events."
        },
        "actions": {
          "type": "array",
          "description": "The list of actions that trigger the webhook to post notifications.",
          "items": {
            "$ref": "#/definitions/WebhookAction"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the webhook at the time the operation was called.",
          "readOnly": true
        }
      },
      "required": [
        "actions"
      ]
    },
    "WebhookPropertiesCreateParameters": {
      "type": "object",
      "description": "The parameters for creating the properties of a webhook.",
      "properties": {
        "serviceUri": {
          "type": "string",
          "description": "The service URI for the webhook to post notifications."
        },
        "customHeaders": {
          "type": "object",
          "description": "Custom headers that will be added to the webhook notifications.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/WebhookStatus",
          "description": "The status of the webhook at the time the operation was called."
        },
        "scope": {
          "type": "string",
          "description": "The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events."
        },
        "actions": {
          "type": "array",
          "description": "The list of actions that trigger the webhook to post notifications.",
          "items": {
            "$ref": "#/definitions/WebhookAction"
          }
        }
      },
      "required": [
        "serviceUri",
        "actions"
      ]
    },
    "WebhookPropertiesUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating the properties of a webhook.",
      "properties": {
        "serviceUri": {
          "type": "string",
          "description": "The service URI for the webhook to post notifications."
        },
        "customHeaders": {
          "type": "object",
          "description": "Custom headers that will be added to the webhook notifications.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/WebhookStatus",
          "description": "The status of the webhook at the time the operation was called."
        },
        "scope": {
          "type": "string",
          "description": "The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events."
        },
        "actions": {
          "type": "array",
          "description": "The list of actions that trigger the webhook to post notifications.",
          "items": {
            "$ref": "#/definitions/WebhookAction"
          }
        }
      }
    },
    "WebhookStatus": {
      "type": "string",
      "description": "The status of the webhook at the time the operation was called.",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "WebhookStatus",
        "modelAsString": true
      }
    },
    "WebhookUpdateParameters": {
      "type": "object",
      "description": "The parameters for updating a webhook.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags for the webhook.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/WebhookPropertiesUpdateParameters",
          "description": "The properties that the webhook will be updated with.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ZoneRedundancy": {
      "type": "string",
      "description": "Whether or not zone redundancy is enabled for this container registry",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ZoneRedundancy",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
