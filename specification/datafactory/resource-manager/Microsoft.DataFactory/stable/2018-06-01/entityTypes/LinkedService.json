{
  "swagger": "2.0",
  "info": {
    "title": "DataFactoryManagementClient",
    "version": "2017-09-01-preview"
  },
  "paths": {},
  "definitions": {
    "LinkedService": {
      "description": "The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource.",
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of linked service."
        },
        "connectVia": {
          "description": "The integration runtime reference.",
          "$ref": "../datafactory.json#/definitions/IntegrationRuntimeReference"
        },
        "description": {
          "description": "Linked service description.",
          "type": "string"
        },
        "parameters": {
          "$ref": "../datafactory.json#/definitions/ParameterDefinitionSpecification",
          "description": "Parameters for linked service."
        },
        "annotations": {
          "description": "List of tags that can be used for describing the Dataset.",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "AzureStorageLinkedService": {
      "x-ms-discriminator-value": "AzureStorage",
      "description": "The storage account linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Storage linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureStorageLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureStorageLinkedServiceTypeProperties": {
      "description": "Azure Storage linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "sasUri": {
          "description": "SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzureSqlDWLinkedService": {
      "x-ms-discriminator-value": "AzureSqlDW",
      "description": "Azure SQL Data Warehouse linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure SQL Data Warehouse linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureSqlDWLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureSqlDWLinkedServiceTypeProperties": {
      "description": "Azure SQL Data Warehouse linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "servicePrincipalId": {
          "type": "object",
          "description": "The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "$ref": "../datafactory.json#/definitions/SecretBase",
          "description": "The key of the service principal used to authenticate against Azure SQL Data Warehouse."
        },
        "tenant": {
          "type": "object",
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "SqlServerLinkedService": {
      "x-ms-discriminator-value": "SqlServer",
      "description": "SQL Server linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "SQL Server linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SqlServerLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SqlServerLinkedServiceTypeProperties": {
      "description": "SQL Server linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "userName": {
          "type": "object",
          "description": "The on-premises Windows authentication user name. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "The on-premises Windows authentication password.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "AzureSqlDatabaseLinkedService": {
      "x-ms-discriminator-value": "AzureSqlDatabase",
      "description": "Microsoft Azure SQL Database linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure SQL Database linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureSqlDatabaseLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureSqlDatabaseLinkedServiceTypeProperties": {
      "description": "Azure SQL Database linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "servicePrincipalId": {
          "type": "object",
          "description": "The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "$ref": "../datafactory.json#/definitions/SecretBase",
          "description": "The key of the service principal used to authenticate against Azure SQL Database."
        },
        "tenant": {
          "type": "object",
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "AzureBatchLinkedService": {
      "x-ms-discriminator-value": "AzureBatch",
      "description": "Azure Batch linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Batch linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureBatchLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureBatchLinkedServiceTypeProperties": {
      "description": "Azure Batch linked service properties.",
      "properties": {
        "accountName": {
          "type": "object",
          "description": "The Azure Batch account name. Type: string (or Expression with resultType string)."
        },
        "accessKey": {
          "description": "The Azure Batch account access key.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "batchUri": {
          "type": "object",
          "description": "The Azure Batch URI. Type: string (or Expression with resultType string)."
        },
        "poolName": {
          "type": "object",
          "description": "The Azure Batch pool name. Type: string (or Expression with resultType string)."
        },
        "linkedServiceName": {
          "description": "The Azure Storage linked service reference.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "accountName",
        "batchUri",
        "poolName",
        "linkedServiceName"
      ]
    },
    "AzureKeyVaultLinkedService": {
      "x-ms-discriminator-value": "AzureKeyVault",
      "description": "Azure Key Vault linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Key Vault linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureKeyVaultLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureKeyVaultLinkedServiceTypeProperties": {
      "description": "Azure Key Vault linked service properties.",
      "properties": {
        "baseUrl": {
          "type": "object",
          "description": "The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "baseUrl"
      ]
    },
    "CosmosDbLinkedService": {
      "x-ms-discriminator-value": "CosmosDb",
      "description": "Microsoft Azure Cosmos Database (CosmosDB) linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "CosmosDB linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CosmosDbLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "CosmosDbLinkedServiceTypeProperties": {
      "description": "CosmosDB linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "DynamicsLinkedService": {
      "x-ms-discriminator-value": "Dynamics",
      "description": "Dynamics linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Dynamics linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DynamicsLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "DynamicsLinkedServiceTypeProperties": {
      "description": "Dynamics linked service properties.",
      "properties": {
        "deploymentType": {
          "x-ms-enum": {
            "name": "DynamicsDeploymentType",
            "modelAsString": true
          },
          "enum": [
            "Online",
            "OnPremisesWithIfd"
          ],
          "type": "object",
          "description": "The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string)."
        },
        "hostName": {
          "type": "object",
          "description": "The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "description": "The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "serviceUri": {
           "type": "object",
           "description": "The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string)."
        },
        "organizationName": {
          "type": "object",
          "description": "The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "x-ms-enum": {
            "name": "DynamicsAuthenticationType",
            "modelAsString": true
          },
          "enum": [
            "Office365",
            "Ifd"
          ],
          "type": "object",
          "description": "The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "description": "User name to access the Dynamics instance. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password to access the Dynamics instance.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "deploymentType",
        "authenticationType",
        "username"
      ]
    },
    "HDInsightLinkedService": {
      "x-ms-discriminator-value": "HDInsight",
      "description": "HDInsight linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "HDInsight linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HDInsightLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightLinkedServiceTypeProperties": {
      "description": "HDInsight linked service properties.",
      "properties": {
        "clusterUri": {
          "type": "object",
          "description": "HDInsight cluster URI. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "description": "HDInsight cluster user name. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "HDInsight cluster password.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "linkedServiceName": {
          "description": "The Azure Storage linked service reference.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "hcatalogLinkedServiceName": {
          "description": "A reference to the Azure SQL linked service that points to the HCatalog database.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "clusterUri"
      ]
    },
    "FileServerLinkedService": {
      "x-ms-discriminator-value": "FileServer",
      "description": "File system linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "File system linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FileServerLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "FileServerLinkedServiceTypeProperties": {
      "description": "File system linked service properties.",
      "properties": {
        "host": {
          "type": "object",
          "description": "Host name of the server. Type: string (or Expression with resultType string)."
        },
        "userId": {
          "type": "object",
          "description": "User ID to logon the server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password to logon the server.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ]
    },
    "OracleLinkedService": {
      "x-ms-discriminator-value": "Oracle",
      "description": "Oracle database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Oracle database linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OracleLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "OracleLinkedServiceTypeProperties": {
      "description": "Oracle database linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "AzureMySqlLinkedService": {
      "x-ms-discriminator-value": "AzureMySql",
      "description": "Azure MySQL database linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure MySQL database linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureMySqlLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureMySqlLinkedServiceTypeProperties": {
      "description": "Azure MySQL database linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "MySqlLinkedService": {
      "x-ms-discriminator-value": "MySql",
      "description": "Linked service for MySQL data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "MySQL linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MySqlLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "MySqlLinkedServiceTypeProperties": {
      "description": "MySQL linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "PostgreSqlLinkedService": {
      "x-ms-discriminator-value": "PostgreSql",
      "description": "Linked service for PostgreSQL data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "PostgreSQL linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PostgreSqlLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "PostgreSqlLinkedServiceTypeProperties": {
      "description": "PostgreSQL linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The connection string.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "SybaseLinkedService": {
      "x-ms-discriminator-value": "Sybase",
      "description": "Linked service for Sybase data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Sybase linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SybaseLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SybaseLinkedServiceTypeProperties": {
      "description": "Sybase linked service properties.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "database": {
          "type": "object",
          "description": "Database name for connection. Type: string (or Expression with resultType string)."
        },
        "schema": {
          "type": "object",
          "description": "Schema name for connection. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "AuthenticationType to be used for connection.",
          "type": "string",
          "enum": [
            "Basic",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "SybaseAuthenticationType",
            "modelAsString": true
          }
        },
        "username": {
          "type": "object",
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "database"
      ]
    },
    "Db2LinkedService": {
      "x-ms-discriminator-value": "Db2",
      "description": "Linked service for DB2 data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "DB2 linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/Db2LinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "Db2LinkedServiceTypeProperties": {
      "description": "DB2 linked service properties.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "database": {
          "type": "object",
          "description": "Database name for connection. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "AuthenticationType to be used for connection.",
          "type": "string",
          "enum": [
            "Basic"
          ],
          "x-ms-enum": {
            "name": "Db2AuthenticationType",
            "modelAsString": true
          }
        },
        "username": {
          "type": "object",
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "database"
      ]
    },
    "TeradataLinkedService": {
      "x-ms-discriminator-value": "Teradata",
      "description": "Linked service for Teradata data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Teradata linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TeradataLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "TeradataLinkedServiceTypeProperties": {
      "description": "Teradata linked service properties.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Server name for connection. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "AuthenticationType to be used for connection.",
          "type": "string",
          "enum": [
            "Basic",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "TeradataAuthenticationType",
            "modelAsString": true
          }
        },
        "username": {
          "type": "object",
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server"
      ]
    },
    "AzureMLLinkedService": {
      "x-ms-discriminator-value": "AzureML",
      "description": "Azure ML Web Service linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure ML Web Service linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureMLLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureMLLinkedServiceTypeProperties": {
      "description": "Azure ML Web Service linked service properties.",
      "properties": {
        "mlEndpoint": {
          "type": "object",
          "description": "The Batch Execution REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string)."
        },
        "apiKey": {
          "description": "The API key for accessing the Azure ML model endpoint.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "updateResourceEndpoint": {
          "type": "object",
          "description": "The Update Resource REST URL for an Azure ML Web Service endpoint. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "description": "The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "$ref": "../datafactory.json#/definitions/SecretBase",
          "description": "The key of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML web service."
        },
        "tenant": {
          "type": "object",
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "mlEndpoint",
        "apiKey"
      ]
    },
    "OdbcLinkedService": {
      "x-ms-discriminator-value": "Odbc",
      "description": "Open Database Connectivity (ODBC) linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "ODBC linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OdbcLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "OdbcLinkedServiceTypeProperties": {
      "description": "ODBC linked service properties.",
      "properties": {
        "connectionString": {
          "description": "The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "authenticationType": {
          "type": "object",
          "description": "Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string)."
        },
        "credential": {
          "description": "The access credential portion of the connection string specified in driver-specific property-value format.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "userName": {
          "type": "object",
          "description": "User name for Basic authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for Basic authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "connectionString"
      ]
    },
    "HdfsLinkedService": {
      "x-ms-discriminator-value": "Hdfs",
      "description": "Hadoop Distributed File System (HDFS) linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "HDFS linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HdfsLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HdfsLinkedServiceTypeProperties": {
      "description": "HDFS linked service properties.",
      "properties": {
        "url": {
          "type": "object",
          "description": "The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "type": "object",
          "description": "Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "description": "User name for Windows authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for Windows authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        }
      },
      "required": [
        "url"
      ]
    },
    "ODataLinkedService": {
      "x-ms-discriminator-value": "OData",
      "description": "Open Data Protocol (OData) linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "OData linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ODataLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ODataLinkedServiceTypeProperties": {
      "description": "OData linked service properties.",
      "properties": {
        "url": {
          "type": "object",
          "description": "The URL of the OData service endpoint. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "Type of authentication used to connect to the OData service.",
          "type": "string",
          "enum": [
            "Basic",
            "Anonymous"
          ],
          "x-ms-enum": {
            "name": "ODataAuthenticationType",
            "modelAsString": true
          }
        },
        "userName": {
          "type": "object",
          "description": "User name of the OData service. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password of the OData service.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ]
    },
    "WebLinkedService": {
      "x-ms-discriminator-value": "Web",
      "description": "Web linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Web linked service properties.",
          "$ref": "#/definitions/WebLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "WebLinkedServiceTypeProperties": {
      "description": "Base definition of WebLinkedServiceTypeProperties, this typeProperties is polymorphic based on authenticationType, so not flattened in SDK models.",
      "discriminator": "authenticationType",
      "type": "object",
      "properties": {
        "url": {
          "type": "object",
          "description": "The URL of the web service endpoint, e.g. http://www.microsoft.com . Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "Type of authentication used to connect to the web table source.",
          "type": "string",
          "enum": [
            "Basic",
            "Anonymous",
            "ClientCertificate"
          ],
          "x-ms-enum": {
            "name": "WebAuthenticationType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "authenticationType",
        "url"
      ]
    },
    "WebAnonymousAuthentication": {
      "description": "A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint.",
      "x-ms-discriminator-value": "Anonymous",
      "allOf": [
        {
          "$ref": "#/definitions/WebLinkedServiceTypeProperties"
        }
      ]
    },
    "WebBasicAuthentication": {
      "description": "A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.",
      "x-ms-discriminator-value": "Basic",
      "allOf": [
        {
          "$ref": "#/definitions/WebLinkedServiceTypeProperties"
        }
      ],
      "properties": {
        "username": {
          "type": "object",
          "description": "User name for Basic authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "The password for Basic authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "WebClientCertificateAuthentication": {
      "description": "A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.",
      "x-ms-discriminator-value": "ClientCertificate",
      "allOf": [
        {
          "$ref": "#/definitions/WebLinkedServiceTypeProperties"
        }
      ],
      "properties": {
        "pfx": {
          "description": "Base64-encoded contents of a PFX file.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "password": {
          "description": "Password for the PFX file.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        }
      },
      "required": [
        "pfx",
        "password"
      ]
    },
    "CassandraLinkedService": {
      "x-ms-discriminator-value": "Cassandra",
      "description": "Linked service for Cassandra data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Cassandra linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CassandraLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "CassandraLinkedServiceTypeProperties": {
      "description": "Cassandra linked service properties.",
      "properties": {
        "host": {
          "type": "object",
          "description": "Host name for connection. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "type": "object",
          "description": "AuthenticationType to be used for connection. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "description": "The port for the connection. Type: integer (or Expression with resultType integer)."
        },
        "username": {
          "type": "object",
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ]
    },
    "MongoDbLinkedService": {
      "x-ms-discriminator-value": "MongoDb",
      "description": "Linked service for MongoDb data source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "MongoDB linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MongoDbLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "MongoDbLinkedServiceTypeProperties": {
      "description": "MongoDB linked service properties.",
      "properties": {
        "server": {
          "type": "object",
          "description": "The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "The authentication type to be used to connect to the MongoDB database.",
          "type": "string",
          "enum": [
            "Basic",
            "Anonymous"
          ],
          "x-ms-enum": {
            "name": "MongoDbAuthenticationType",
            "modelAsString": true
          }
        },
        "databaseName": {
          "type": "object",
          "description": "The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "description": "Username for authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "authSource": {
          "type": "object",
          "description": "Database to verify the username and password. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "description": "The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "enableSsl": {
          "type": "object",
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "allowSelfSignedServerCert": {
          "type": "object",
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "databaseName"
      ]
    },
    "AzureDataLakeStoreLinkedService": {
      "x-ms-discriminator-value": "AzureDataLakeStore",
      "description": "Azure Data Lake Store linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Data Lake Store linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureDataLakeStoreLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureDataLakeStoreLinkedServiceTypeProperties": {
      "description": "Azure Data Lake Store linked service properties.",
      "properties": {
        "dataLakeStoreUri": {
          "type": "object",
          "description": "Data Lake Store service URI. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "description": "The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "description": "The Key of the application used to authenticate against the Azure Data Lake Store account.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "tenant": {
          "type": "object",
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "accountName": {
          "type": "object",
          "description": "Data Lake Store account name. Type: string (or Expression with resultType string)."
        },
        "subscriptionId": {
          "type": "object",
          "description": "Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "resourceGroupName": {
          "type": "object",
          "description": "Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "dataLakeStoreUri"
      ]
    },
    "SalesforceLinkedService": {
      "x-ms-discriminator-value": "Salesforce",
      "description": "Linked service for Salesforce.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Salesforce linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SalesforceLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SalesforceLinkedServiceTypeProperties": {
      "description": "Salesforce linked service properties.",
      "properties": {
        "environmentUrl": {
          "type": "object",
          "description": "The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "description": "The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "The password for Basic authentication of the Salesforce instance.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "securityToken": {
          "description": "The security token is required to remotely access Salesforce instance.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      }
    },
    "SapCloudForCustomerLinkedService": {
      "x-ms-discriminator-value": "SapCloudForCustomer",
      "description": "Linked service for SAP Cloud for Customer.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "SAP Cloud for Customer linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SapCloudForCustomerLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SapCloudForCustomerLinkedServiceTypeProperties": {
      "description": "SAP Cloud for Customer linked service properties.",
      "properties": {
        "url": {
          "type": "object",
          "description": "The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "description": "The username for Basic authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "The password for Basic authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ]
    },
    "SapEccLinkedService": {
      "x-ms-discriminator-value": "SapEcc",
      "description": "Linked service for SAP ERP Central Component(SAP ECC).",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "SAP ECC linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SapEccLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SapEccLinkedServiceTypeProperties": {
      "description": "SAP ECC linked service properties.",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL of SAP ECC OData API. For example, '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "string",
          "description": "The username for Basic authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "The password for Basic authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "string",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ]
    },
	"AmazonS3LinkedService": {
      "x-ms-discriminator-value": "AmazonS3",
      "description": "Linked service for Amazon S3.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Amazon S3 linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AmazonS3LinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AmazonS3LinkedServiceTypeProperties": {
      "description": "Amazon S3 linked service properties.",
      "properties": {
        "accessKeyId": {
          "type": "object",
          "description": "The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string)."
        },
        "secretAccessKey": {
          "description": "The secret access key of the Amazon S3 Identity and Access Management (IAM) user.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AmazonRedshiftLinkedService": {
      "x-ms-discriminator-value": "AmazonRedshift",
      "description": "Linked service for Amazon Redshift.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Amazon Redshift linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AmazonRedshiftLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AmazonRedshiftLinkedServiceTypeProperties": {
      "description": "Amazon Redshift linked service properties.",
      "properties": {
        "server": {
          "type": "object",
          "description": "The name of the Amazon Redshift server. Type: string (or Expression with resultType string)."
        },
        "username": {
          "type": "object",
          "description": "The username of the Amazon Redshift source. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "The password of the Amazon Redshift source.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "database": {
          "type": "object",
          "description": "The database name of the Amazon Redshift source. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "description": "The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "database"
      ]
    },
    "CustomDataSourceLinkedService": {
      "x-ms-discriminator-value": "CustomDataSource",
      "description": "Custom linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Custom linked service properties.",
          "x-ms-client-flatten": true,
          "type": "object"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureSearchLinkedService": {
      "x-ms-discriminator-value": "AzureSearch",
      "description": "Linked service for Windows Azure Search Service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Windows Azure Search Service linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureSearchLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureSearchLinkedServiceTypeProperties": {
      "description": "Windows Azure Search Service linked service properties.",
      "properties": {
        "url": {
          "type": "object",
          "description": "URL for Azure Search service. Type: string (or Expression with resultType string)."
        },
        "key": {
          "description": "Admin Key for Azure Search service",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "url"
      ]
    },
    "HttpLinkedService": {
      "x-ms-discriminator-value": "HttpServer",
      "description": "Linked service for an HTTP source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Properties specific to this linked service type.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HttpLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HttpLinkedServiceTypeProperties": {
      "description": "Properties specific to this linked service type.",
      "properties": {
        "url": {
          "type": "object",
          "description": "The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "The authentication type to be used to connect to the HTTP server.",
          "type": "string",
          "enum": [
            "Basic",
            "Anonymous",
            "Digest",
            "Windows",
            "ClientCertificate"
          ],
          "x-ms-enum": {
            "name": "HttpAuthenticationType",
            "modelAsString": true
          }
        },
        "userName": {
          "type": "object",
          "description": "User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password for Basic, Digest, Windows, or ClientCertificate with EmbeddedCertData authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "embeddedCertData": {
          "type": "object",
          "description": "Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string)."
        },
        "certThumbprint": {
          "type": "object",
          "description": "Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "enableServerCertificateValidation": {
          "type": "object",
          "description": "If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "url"
      ]
    },
    "FtpServerLinkedService": {
      "x-ms-discriminator-value": "FtpServer",
      "description": "A FTP server Linked Service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Properties specific to this linked service type.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FtpServerLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "FtpServerLinkedServiceTypeProperties": {
      "description": "Properties specific to this linked service type.",
      "properties": {
        "host": {
          "type": "object",
          "description": "Host name of the FTP server. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "description": "The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "authenticationType": {
          "description": "The authentication type to be used to connect to the FTP server.",
          "type": "string",
          "enum": [
            "Basic",
            "Anonymous"
          ],
          "x-ms-enum": {
            "name": "FtpAuthenticationType",
            "modelAsString": true
          }
        },
        "userName": {
          "type": "object",
          "description": "Username to logon the FTP server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password to logon the FTP server.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "enableSsl": {
          "type": "object",
          "description": "If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "enableServerCertificateValidation": {
          "type": "object",
          "description": "If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "host"
      ]
    },
    "SftpServerLinkedService": {
      "x-ms-discriminator-value": "Sftp",
      "description": "A linked service for an SSH File Transfer Protocol (SFTP) server. ",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Properties specific to this linked service type.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SftpServerLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SftpServerLinkedServiceTypeProperties": {
      "description": "Properties specific to this linked service type.",
      "properties": {
        "host": {
          "type": "object",
          "description": "The SFTP server host name. Type: string (or Expression with resultType string)."
        },
        "port": {
          "type": "object",
          "description": "The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "authenticationType": {
          "description": "The authentication type to be used to connect to the FTP server.",
          "type": "string",
          "enum": [
            "Basic",
            "SshPublicKey"
          ],
          "x-ms-enum": {
            "name": "SftpAuthenticationType",
            "modelAsString": true
          }
        },
        "userName": {
          "type": "object",
          "description": "The username used to log on to the SFTP server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password to logon the SFTP server for Basic authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "privateKeyPath": {
          "type": "object",
          "description": "The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string)."
        },
        "privateKeyContent": {
          "description": "Base64 encoded SSH private key content for SshPublicKey authentication. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "passPhrase": {
          "description": "The password to decrypt the SSH private key if the SSH private key is encrypted.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "skipHostKeyValidation": {
          "type": "object",
          "description": "If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "hostKeyFingerprint": {
          "type": "object",
          "description": "The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "host"
      ]
    },
    "SapBWLinkedService": {
      "x-ms-discriminator-value": "SapBW",
      "description": "SAP Business Warehouse Linked Service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Properties specific to this linked service type.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SapBWLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SapBWLinkedServiceTypeProperties": {
      "description": "Properties specific to this linked service type.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Host name of the SAP BW instance. Type: string (or Expression with resultType string)."
        },
        "systemNumber": {
          "type": "object",
          "description": "System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string)."
        },
        "clientId": {
          "type": "object",
          "description": "Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "description": "Username to access the SAP BW server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password to access the SAP BW server.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server",
        "systemNumber",
        "clientId"
      ]
    },
    "SapHanaLinkedService": {
      "x-ms-discriminator-value": "SapHana",
      "description": "SAP HANA Linked Service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Properties specific to this linked service type.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SapHanaLinkedServiceProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SapHanaLinkedServiceProperties": {
      "description": "Properties specific to this linked service type.",
      "properties": {
        "server": {
          "type": "object",
          "description": "Host name of the SAP HANA server. Type: string (or Expression with resultType string)."
        },
        "authenticationType": {
          "description": "The authentication type to be used to connect to the SAP HANA server.",
          "type": "string",
          "enum": [
            "Basic",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "SapHanaAuthenticationType",
            "modelAsString": true
          }
        },
        "userName": {
          "type": "object",
          "description": "Username to access the SAP HANA server. Type: string (or Expression with resultType string)."
        },
        "password": {
          "description": "Password to access the SAP HANA server.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "server"
      ]
    },
    "AmazonMWSLinkedService": { 
      "x-ms-discriminator-value": "AmazonMWS", 
      "description": "Amazon Marketplace Web Service linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Amazon Marketplace Web Service linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/AmazonMWSLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "AmazonMWSLinkedServiceTypeProperties": { 
      "description": "Amazon Marketplace Web Service linked service properties.", 
      "properties": {
        "endpoint": {
          "description": "The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)",
          "type": "object"
        },
        "marketplaceID": {
          "description": "The Amazon Marketplace ID you want to retrieve data from. To retrive data from multiple Marketplace IDs, seperate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)",
          "type": "object"
        },
        "sellerID": {
          "description": "The Amazon seller ID.",
          "type": "object"
        },
        "mwsAuthToken": {
          "description": "The Amazon MWS authentication token.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "accessKeyId": {
          "description": "The access key id used to access data.",
          "type": "object"
        },
        "secretKey": {
          "description": "The secret key used to access data.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "endpoint",
        "marketplaceID",
        "sellerID",
        "accessKeyId"
      ] 
    },
    "AzurePostgreSqlLinkedService": { 
      "x-ms-discriminator-value": "AzurePostgreSql", 
      "description": "Azure PostgreSQL linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Azure PostgreSQL linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/AzurePostgreSqlLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "AzurePostgreSqlLinkedServiceTypeProperties": { 
      "description": "Azure PostgreSQL linked service properties.",
      "properties": {
        "connectionString": {
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "encryptedCredential": {
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).",
          "type": "object"
        }
      } 
    },
    "ConcurLinkedService": { 
      "x-ms-discriminator-value": "Concur", 
      "description": "Concur Serivce linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Concur Serivce linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/ConcurLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "ConcurLinkedServiceTypeProperties": { 
      "description": "Concur Serivce linked service properties.", 
      "properties": {
        "clientId": {
          "description": "Application client_id supplied by Concur App Management.",
          "type": "object"
        },
        "username": {
          "description": "The user name that you use to access Concur Service.",
          "type": "object"
        },
        "password": {
          "description": "The password corresponding to the user name that you provided in the username field.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "clientId",
        "username"
      ] 
    },
    "CouchbaseLinkedService": { 
      "x-ms-discriminator-value": "Couchbase", 
      "description": "Couchbase server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Couchbase server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/CouchbaseLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "CouchbaseLinkedServiceTypeProperties": { 
      "description": "Couchbase server linked service properties.",
      "properties": {
        "connectionString": {
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "encryptedCredential": {
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).",
          "type": "object"
        }
      } 
    },
    "DrillLinkedService": { 
      "x-ms-discriminator-value": "Drill", 
      "description": "Drill server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Drill server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/DrillLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "DrillLinkedServiceTypeProperties": { 
      "description": "Drill server linked service properties.",
      "properties": {
        "connectionString": {
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "encryptedCredential": {
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).",
          "type": "object"
        }
      } 
    },
    "EloquaLinkedService": { 
      "x-ms-discriminator-value": "Eloqua", 
      "description": "Eloqua server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Eloqua server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/EloquaLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "EloquaLinkedServiceTypeProperties": { 
      "description": "Eloqua server linked service properties.", 
      "properties": {
        "endpoint": {
          "description": "The endpoint of the Eloqua server. (i.e. eloqua.example.com)",
          "type": "object"
        },
        "username": {
          "description": "The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)",
          "type": "object"
        },
        "password": {
          "description": "The password corresponding to the user name.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "endpoint",
        "username"
      ] 
    },
    "GoogleBigQueryLinkedService": { 
      "x-ms-discriminator-value": "GoogleBigQuery", 
      "description": "Google BigQuery service linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Google BigQuery service linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/GoogleBigQueryLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "GoogleBigQueryLinkedServiceTypeProperties": { 
      "description": "Google BigQuery service linked service properties.", 
      "properties": {
        "project": {
          "description": "The default BigQuery project to query against.",
          "type": "object"
        },
        "additionalProjects": {
          "description": "A comma-separated list of public BigQuery projects to access.",
          "type": "object"
        },
        "requestGoogleDriveScope": {
          "description": "Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.",
          "type": "object"
        },
        "authenticationType": {
          "description": "The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.",
          "type": "string",
          "enum": [
            "ServiceAuthentication",
            "UserAuthentication"
          ],
          "x-ms-enum": {
            "name": "GoogleBigQueryAuthenticationType",
            "modelAsString": true
          }
        },
        "refreshToken": {
          "description": "The refresh token obtained from Google for authorizing access to BigQuery for UserAuthentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "clientId": {
          "description": "The client id of the google application used to acquire the refresh token.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "clientSecret": {
          "description": "The client secret of the google application used to acquire the refresh token.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "email": {
          "description": "The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.",
          "type": "object"
        },
        "keyFilePath": {
          "description": "The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.",
          "type": "object"
        },
        "trustedCertPath": {
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.",
          "type": "object"
        },
        "useSystemTrustStore": {
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "project",
        "authenticationType"
      ] 
    },
    "GreenplumLinkedService": { 
      "x-ms-discriminator-value": "Greenplum", 
      "description": "Greenplum Database linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Greenplum Database linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/GreenplumLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "GreenplumLinkedServiceTypeProperties": { 
      "description": "Greenplum Database linked service properties.",
      "properties": {
        "connectionString": {
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "encryptedCredential": {
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).",
          "type": "object"
        }
      } 
    },
    "HBaseLinkedService": { 
      "x-ms-discriminator-value": "HBase", 
      "description": "HBase server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "HBase server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/HBaseLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "HBaseLinkedServiceTypeProperties": { 
      "description": "HBase server linked service properties.", 
      "properties": {
        "host": {
          "description": "The IP address or host name of the HBase server. (i.e. 192.168.222.160)",
          "type": "object"
        },
        "port": {
          "description": "The TCP port that the HBase instance uses to listen for client connections. The default value is 9090.",
          "type": "object"
        },
        "httpPath": {
          "description": "The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)",
          "type": "object"
        },
        "authenticationType": {
          "description": "The authentication mechanism to use to connect to the HBase server.",
          "type": "string",
          "enum": [
            "Anonymous",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "HBaseAuthenticationType",
            "modelAsString": true
          }
        },
        "username": {
          "description": "The user name used to connect to the HBase instance.",
          "type": "object"
        },
        "password": {
          "description": "The password corresponding to the user name.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "enableSsl": {
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false.",
          "type": "object"
        },
        "trustedCertPath": {
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.",
          "type": "object"
        },
        "allowHostNameCNMismatch": {
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.",
          "type": "object"
        },
        "allowSelfSignedServerCert": {
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "host",
        "authenticationType"
      ] 
    },
    "HiveLinkedService": { 
      "x-ms-discriminator-value": "Hive", 
      "description": "Hive Server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Hive Server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/HiveLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "HiveLinkedServiceTypeProperties": { 
      "description": "Hive Server linked service properties.", 
      "properties": {
        "host": {
          "description": "IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable).",
          "type": "object"
        },
        "port": {
          "description": "The TCP port that the Hive server uses to listen for client connections.",
          "type": "object"
        },
        "serverType": {
          "description": "The type of Hive server.",
          "type": "string",
          "enum": [
            "HiveServer1",
            "HiveServer2",
            "HiveThriftServer"
          ],
          "x-ms-enum": {
            "name": "HiveServerType",
            "modelAsString": true
          }
        },
        "thriftTransportProtocol": {
          "description": "The transport protocol to use in the Thrift layer.",
          "type": "string",
          "enum": [
            "Binary",
            "SASL",
            "HTTP "
          ],
          "x-ms-enum": {
            "name": "HiveThriftTransportProtocol",
            "modelAsString": true
          }
        },
        "authenticationType": {
          "description": "The authentication method used to access the Hive server.",
          "type": "string",
          "enum": [
            "Anonymous",
            "Username",
            "UsernameAndPassword",
            "WindowsAzureHDInsightService"
          ],
          "x-ms-enum": {
            "name": "HiveAuthenticationType",
            "modelAsString": true
          }
        },
        "serviceDiscoveryMode": {
          "description": "true to indicate using the ZooKeeper service, false not.",
          "type": "object"
        },
        "zooKeeperNameSpace": {
          "description": "The namespace on ZooKeeper under which Hive Server 2 nodes are added.",
          "type": "object"
        },
        "useNativeQuery": {
          "description": "Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL.",
          "type": "object"
        },
        "username": {
          "description": "The user name that you use to access Hive Server.",
          "type": "object"
        },
        "password": {
          "description": "The password corresponding to the user name that you provided in the Username field",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "httpPath": {
          "description": "The partial URL corresponding to the Hive server.",
          "type": "object"
        },
        "enableSsl": {
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false.",
          "type": "object"
        },
        "trustedCertPath": {
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.",
          "type": "object"
        },
        "useSystemTrustStore": {
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.",
          "type": "object"
        },
        "allowHostNameCNMismatch": {
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.",
          "type": "object"
        },
        "allowSelfSignedServerCert": {
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "host",
        "authenticationType"
      ] 
    },
    "HubspotLinkedService": { 
      "x-ms-discriminator-value": "Hubspot", 
      "description": "Hubspot Serivce linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Hubspot Serivce linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/HubspotLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "HubspotLinkedServiceTypeProperties": { 
      "description": "Hubspot Serivce linked service properties.", 
      "properties": {
        "clientId": {
          "description": "The client ID associated with your Hubspot application.",
          "type": "object"
        },
        "clientSecret": {
          "description": "The client secret associated with your Hubspot application.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "accessToken": {
          "description": "The access token obtained when initially authenticating your OAuth integration.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "refreshToken": {
          "description": "The refresh token obtained when initially authenticating your OAuth integration.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "clientId"
      ] 
    },
    "ImpalaLinkedService": { 
      "x-ms-discriminator-value": "Impala", 
      "description": "Impala server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Impala server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/ImpalaLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "ImpalaLinkedServiceTypeProperties": { 
      "description": "Impala server linked service properties.", 
      "properties": {
        "host": {
          "description": "The IP address or host name of the Impala server. (i.e. 192.168.222.160)",
          "type": "object"
        },
        "port": {
          "description": "The TCP port that the Impala server uses to listen for client connections. The default value is 21050.",
          "type": "object"
        },
        "authenticationType": {
          "description": "The authentication type to use.",
          "type": "string",
          "enum": [
            "Anonymous",
            "SASLUsername",
            "UsernameAndPassword"
          ],
          "x-ms-enum": {
            "name": "ImpalaAuthenticationType",
            "modelAsString": true
          }
        },
        "username": {
          "description": "The user name used to access the Impala server. The default value is anonymous when using SASLUsername.",
          "type": "object"
        },
        "password": {
          "description": "The password corresponding to the user name when using UsernameAndPassword.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "enableSsl": {
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false.",
          "type": "object"
        },
        "trustedCertPath": {
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.",
          "type": "object"
        },
        "useSystemTrustStore": {
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.",
          "type": "object"
        },
        "allowHostNameCNMismatch": {
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.",
          "type": "object"
        },
        "allowSelfSignedServerCert": {
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "host",
        "authenticationType"
      ] 
    },
    "JiraLinkedService": { 
      "x-ms-discriminator-value": "Jira", 
      "description": "Jira Serivce linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Jira Serivce linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/JiraLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "JiraLinkedServiceTypeProperties": { 
      "description": "Jira Serivce linked service properties.", 
      "properties": {
        "host": {
          "description": "The IP address or host name of the Jira service. (e.g. jira.example.com)",
          "type": "object"
        },
        "port": {
          "description": "The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP.",
          "type": "object"
        },
        "username": {
          "description": "The user name that you use to access Jira Service.",
          "type": "object"
        },
        "password": {
          "description": "The password corresponding to the user name that you provided in the username field.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "host",
        "username"
      ] 
    },
    "MagentoLinkedService": { 
      "x-ms-discriminator-value": "Magento", 
      "description": "Magento server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Magento server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/MagentoLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "MagentoLinkedServiceTypeProperties": { 
      "description": "Magento server linked service properties.", 
      "properties": {
        "host": {
          "description": "The URL of the Magento instance. (i.e. 192.168.222.110/magento3)",
          "type": "object"
        },
        "accessToken": {
          "description": "The access token from Magento.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "host"
      ] 
    },
    "MariaDBLinkedService": { 
      "x-ms-discriminator-value": "MariaDB", 
      "description": "MariaDB server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "MariaDB server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/MariaDBLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "MariaDBLinkedServiceTypeProperties": { 
      "description": "MariaDB server linked service properties.",
      "properties": {
        "connectionString": {
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "encryptedCredential": {
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).",
          "type": "object"
        }
      } 
    },
    "MarketoLinkedService": { 
      "x-ms-discriminator-value": "Marketo", 
      "description": "Marketo server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Marketo server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/MarketoLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "MarketoLinkedServiceTypeProperties": { 
      "description": "Marketo server linked service properties.", 
      "properties": {
        "endpoint": {
          "description": "The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)",
          "type": "object"
        },
        "clientId": {
          "description": "The client Id of your Marketo service.",
          "type": "object"
        },
        "clientSecret": {
          "description": "The client secret of your Marketo service.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "endpoint",
        "clientId"
      ] 
    },
    "PaypalLinkedService": { 
      "x-ms-discriminator-value": "Paypal", 
      "description": "Paypal Serivce linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Paypal Serivce linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/PaypalLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "PaypalLinkedServiceTypeProperties": { 
      "description": "Paypal Serivce linked service properties.", 
      "properties": {
        "host": {
          "description": "The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)",
          "type": "object"
        },
        "clientId": {
          "description": "The client ID associated with your PayPal application.",
          "type": "object"
        },
        "clientSecret": {
          "description": "The client secret associated with your PayPal application.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "host",
        "clientId"
      ] 
    },
    "PhoenixLinkedService": { 
      "x-ms-discriminator-value": "Phoenix", 
      "description": "Phoenix server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Phoenix server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/PhoenixLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "PhoenixLinkedServiceTypeProperties": { 
      "description": "Phoenix server linked service properties.", 
      "properties": {
        "host": {
          "description": "The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)",
          "type": "object"
        },
        "port": {
          "description": "The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765.",
          "type": "object"
        },
        "httpPath": {
          "description": "The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService.",
          "type": "object"
        },
        "authenticationType": {
          "description": "The authentication mechanism used to connect to the Phoenix server.",
          "type": "string",
          "enum": [
            "Anonymous",
            "UsernameAndPassword",
            "WindowsAzureHDInsightService"
          ],
          "x-ms-enum": {
            "name": "PhoenixAuthenticationType",
            "modelAsString": true
          }
        },
        "username": {
          "description": "The user name used to connect to the Phoenix server.",
          "type": "object"
        },
        "password": {
          "description": "The password corresponding to the user name.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "enableSsl": {
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false.",
          "type": "object"
        },
        "trustedCertPath": {
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.",
          "type": "object"
        },
        "useSystemTrustStore": {
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.",
          "type": "object"
        },
        "allowHostNameCNMismatch": {
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.",
          "type": "object"
        },
        "allowSelfSignedServerCert": {
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "host",
        "authenticationType"
      ] 
    },
    "PrestoLinkedService": { 
      "x-ms-discriminator-value": "Presto", 
      "description": "Presto server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Presto server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/PrestoLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "PrestoLinkedServiceTypeProperties": { 
      "description": "Presto server linked service properties.", 
      "properties": {
        "host": {
          "description": "The IP address or host name of the Presto server. (i.e. 192.168.222.160)",
          "type": "object"
        },
        "serverVersion": {
          "description": "The version of the Presto server. (i.e. 0.148-t)",
          "type": "object"
        },
        "catalog": {
          "description": "The catalog context for all request against the server.",
          "type": "object"
        },
        "port": {
          "description": "The TCP port that the Presto server uses to listen for client connections. The default value is 8080.",
          "type": "object"
        },
        "authenticationType": {
          "description": "The authentication mechanism used to connect to the Presto server.",
          "type": "string",
          "enum": [
            "Anonymous",
            "LDAP"
          ],
          "x-ms-enum": {
            "name": "PrestoAuthenticationType",
            "modelAsString": true
          }
        },
        "username": {
          "description": "The user name used to connect to the Presto server.",
          "type": "object"
        },
        "password": {
          "description": "The password corresponding to the user name.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "enableSsl": {
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false.",
          "type": "object"
        },
        "trustedCertPath": {
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.",
          "type": "object"
        },
        "useSystemTrustStore": {
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.",
          "type": "object"
        },
        "allowHostNameCNMismatch": {
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.",
          "type": "object"
        },
        "allowSelfSignedServerCert": {
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false.",
          "type": "object"
        },
        "timeZoneID": {
          "description": "The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "host",
        "serverVersion",
        "catalog",
        "authenticationType"
      ] 
    },
    "QuickBooksLinkedService": { 
      "x-ms-discriminator-value": "QuickBooks", 
      "description": "QuickBooks server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "QuickBooks server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/QuickBooksLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "QuickBooksLinkedServiceTypeProperties": { 
      "description": "QuickBooks server linked service properties.",
      "properties": {
        "endpoint": {
          "description": "The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)",
          "type": "object"
        },
        "companyId": {
          "description": "The company ID of the QuickBooks company to authorize.",
          "type": "object"
        },
        "consumerKey": {
          "description": "The consumer key for OAuth 1.0 authentication.",
          "type": "object"
        },
        "consumerSecret": {
          "description": "The consumer secret for OAuth 1.0 authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "accessToken": {
          "description": "The access token for OAuth 1.0 authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "accessTokenSecret": {
          "description": "The access token secret for OAuth 1.0 authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": {
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).",
          "type": "object"
        }
      },
      "required": [
        "endpoint",
        "companyId",
        "consumerKey",
        "consumerSecret",
        "accessToken",
        "accessTokenSecret"
      ] 
    },
    "ServiceNowLinkedService": { 
      "x-ms-discriminator-value": "ServiceNow", 
      "description": "ServiceNow server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "ServiceNow server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/ServiceNowLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "ServiceNowLinkedServiceTypeProperties": { 
      "description": "ServiceNow server linked service properties.", 
      "properties": {
        "endpoint": {
          "description": "The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)",
          "type": "object"
        },
        "authenticationType": {
          "description": "The authentication type to use.",
          "type": "string",
          "enum": [
            "Basic",
            "OAuth2"
          ],
          "x-ms-enum": {
            "name": "ServiceNowAuthenticationType",
            "modelAsString": true
          }
        },
        "username": {
          "description": "The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.",
          "type": "object"
        },
        "password": {
          "description": "The password corresponding to the user name for Basic and OAuth2 authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "clientId": {
          "description": "The client id for OAuth2 authentication.",
          "type": "object"
        },
        "clientSecret": {
          "description": "The client secret for OAuth2 authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "endpoint",
        "authenticationType"
      ] 
    },
    "ShopifyLinkedService": { 
      "x-ms-discriminator-value": "Shopify", 
      "description": "Shopify Serivce linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Shopify Serivce linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/ShopifyLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "ShopifyLinkedServiceTypeProperties": { 
      "description": "Shopify Serivce linked service properties.", 
      "properties": {
        "host": {
          "description": "The endpoint of the Shopify server. (i.e. mystore.myshopify.com)",
          "type": "object"
        },
        "accessToken": {
          "description": "The API access token that can be used to access Shopify’s data. The token won't expire if it is offline mode.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "host"
      ] 
    },
    "SparkLinkedService": { 
      "x-ms-discriminator-value": "Spark", 
      "description": "Spark Server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Spark Server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/SparkLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "SparkLinkedServiceTypeProperties": { 
      "description": "Spark Server linked service properties.", 
      "properties": {
        "host": {
          "description": "IP address or host name of the Spark server",
          "type": "object"
        },
        "port": {
          "description": "The TCP port that the Spark server uses to listen for client connections.",
          "type": "object"
        },
        "serverType": {
          "description": "The type of Spark server.",
          "type": "string",
          "enum": [
            "SharkServer",
            "SharkServer2",
            "SparkThriftServer"
          ],
          "x-ms-enum": {
            "name": "SparkServerType",
            "modelAsString": true
          }
        },
        "thriftTransportProtocol": {
          "description": "The transport protocol to use in the Thrift layer.",
          "type": "string",
          "enum": [
            "Binary",
            "SASL",
            "HTTP "
          ],
          "x-ms-enum": {
            "name": "SparkThriftTransportProtocol",
            "modelAsString": true
          }
        },
        "authenticationType": {
          "description": "The authentication method used to access the Spark server.",
          "type": "string",
          "enum": [
            "Anonymous",
            "Username",
            "UsernameAndPassword",
            "WindowsAzureHDInsightService"
          ],
          "x-ms-enum": {
            "name": "SparkAuthenticationType",
            "modelAsString": true
          }
        },
        "username": {
          "description": "The user name that you use to access Spark Server.",
          "type": "object"
        },
        "password": {
          "description": "The password corresponding to the user name that you provided in the Username field",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "httpPath": {
          "description": "The partial URL corresponding to the Spark server.",
          "type": "object"
        },
        "enableSsl": {
          "description": "Specifies whether the connections to the server are encrypted using SSL. The default value is false.",
          "type": "object"
        },
        "trustedCertPath": {
          "description": "The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.",
          "type": "object"
        },
        "useSystemTrustStore": {
          "description": "Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.",
          "type": "object"
        },
        "allowHostNameCNMismatch": {
          "description": "Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.",
          "type": "object"
        },
        "allowSelfSignedServerCert": {
          "description": "Specifies whether to allow self-signed certificates from the server. The default value is false.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "host",
        "port",
        "authenticationType"
      ] 
    },
    "SquareLinkedService": { 
      "x-ms-discriminator-value": "Square", 
      "description": "Square Serivce linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Square Serivce linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/SquareLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "SquareLinkedServiceTypeProperties": { 
      "description": "Square Serivce linked service properties.", 
      "properties": {
        "host": {
          "description": "The URL of the Square instance. (i.e. mystore.mysquare.com)",
          "type": "object"
        },
        "clientId": {
          "description": "The client ID associated with your Square application.",
          "type": "object"
        },
        "clientSecret": {
          "description": "The client secret associated with your Square application.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "redirectUri": {
          "description": "The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)",
          "type": "object"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "host",
        "clientId",
        "redirectUri"
      ] 
    },
    "XeroLinkedService": { 
      "x-ms-discriminator-value": "Xero", 
      "description": "Xero Serivce linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Xero Serivce linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/XeroLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "XeroLinkedServiceTypeProperties": { 
      "description": "Xero Serivce linked service properties.", 
      "properties": {
        "host": {
          "description": "The endpoint of the Xero server. (i.e. api.xero.com)",
          "type": "object"
        },
        "consumerKey": {
          "description": "The consumer key associated with the Xero application.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "privateKey": {
          "description": "The private key from the .pem file that was generated for your Xero private application. You must include all the text from the .pem file, including the Unix line endings(\n).",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "host"
      ] 
    },
    "ZohoLinkedService": { 
      "x-ms-discriminator-value": "Zoho", 
      "description": "Zoho server linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Zoho server linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/ZohoLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "ZohoLinkedServiceTypeProperties": { 
      "description": "Zoho server linked service properties.", 
      "properties": {
        "endpoint": {
          "description": "The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)",
          "type": "object"
        },
        "accessToken": {
          "description": "The access token for Zoho authentication.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "endpoint"
      ] 
    },
    "VerticaLinkedService": { 
      "x-ms-discriminator-value": "Vertica", 
      "description": "Vertica linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Vertica linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/VerticaLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "VerticaLinkedServiceTypeProperties": { 
      "description": "Vertica linked service properties.",
      "properties": {
        "connectionString": {
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "encryptedCredential": {
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).",
          "type": "object"
        }
      } 
    },
    "NetezzaLinkedService": { 
      "x-ms-discriminator-value": "Netezza", 
      "description": "Netezza linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Netezza linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/NetezzaLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "NetezzaLinkedServiceTypeProperties": { 
      "description": "Netezza linked service properties.",
      "properties": {
        "connectionString": {
          "description": "An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.",
          "type": "object"
        },
        "encryptedCredential": {
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).",
          "type": "object"
        }
      } 
    },
    "SalesforceMarketingCloudLinkedService": { 
      "x-ms-discriminator-value": "SalesforceMarketingCloud", 
      "description": "Salesforce Marketing Cloud linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Salesforce Marketing Cloud linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/SalesforceMarketingCloudLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "SalesforceMarketingCloudLinkedServiceTypeProperties": { 
      "description": "Salesforce Marketing Cloud linked service properties.", 
      "properties": {
        "clientId": {
          "description": "The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "clientSecret": {
          "description": "The client secret associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "clientId"
      ] 
    },
    "HDInsightOnDemandLinkedService": {
      "x-ms-discriminator-value": "HDInsightOnDemand",
      "description": "HDInsight ondemand linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "HDInsight ondemand linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HDInsightOnDemandLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightOnDemandLinkedServiceTypeProperties": {
      "description": "HDInsight ondemand linked service properties.",
      "properties": {
        "clusterSize": {
          "type": "object",
          "description": "Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string)."
        },
        "timeToLive": {
          "type": "object",
          "description": "The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string)."
        },
        "version": {
          "type": "object",
          "description": "Version of the HDInsight cluster.  Type: string (or Expression with resultType string)."
        },
        "linkedServiceName": {
          "description": "Azure Storage linked service to be used by the on-demand cluster for storing and processing data.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "hostSubscriptionId": {
          "type": "object",
          "description": "The customer’s subscription to host the cluster. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "description": "The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "description": "The key for the service principal id.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "tenant": {
          "type": "object",
          "description": "The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "clusterResourceGroup": {
          "type": "object",
          "description": "The resource group where the cluster belongs. Type: string (or Expression with resultType string)."
        },
        "clusterNamePrefix": {
          "type": "object",
          "description": "The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string)."
        },
        "clusterUserName": {
          "type": "object",
          "description": "The username to access the cluster. Type: string (or Expression with resultType string)."
        },
        "clusterPassword": {
          "description": "The password to access the cluster.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "clusterSshUserName": {
          "type": "object",
          "description": "The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string)."
        },
        "clusterSshPassword": {
          "description": "The password to SSH remotely connect cluster’s node (for Linux).",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "additionalLinkedServiceNames": {
          "description": "Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.",
          "type": "array",
          "items": {
            "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
          }
        },
        "hcatalogLinkedServiceName": {
          "description": "The name of Azure SQL linked service that point to the HCatalog database. The on-demand HDInsight cluster is created by using the Azure SQL database as the metastore.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "clusterType": {
          "type": "object",
          "description": "The cluster type. Type: string (or Expression with resultType string)."
        },
        "sparkVersion": {
          "type": "object",
          "description": "The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string)."
        },
        "coreConfiguration": {
          "description": "Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.",
          "type": "object"
        },
        "hBaseConfiguration": {
          "description": "Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "hdfsConfiguration": {
          "description": "Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "hiveConfiguration": {
          "description": "Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "mapReduceConfiguration": {
          "description": "Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "oozieConfiguration": {
          "description": "Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "stormConfiguration": {
          "description": "Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "yarnConfiguration": {
          "description": "Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.",
          "type": "object"
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        },
        "headNodeSize": {
          "type": "object",
          "description": "Specifies the size of the head node for the HDInsight cluster."
        },
        "dataNodeSize": {
          "type": "object",
          "description": "Specifies the size of the data node for the HDInsight cluster."
        },
        "zookeeperNodeSize": {
          "type": "object",
          "description": "Specifies the size of the Zoo Keeper node for the HDInsight cluster."
        }
      },
      "required": [
        "clusterSize",
        "timeToLive",
        "version",
        "linkedServiceName",
        "hostSubscriptionId",
        "tenant",
        "clusterResourceGroup"
      ]
    },
    "AzureDataLakeAnalyticsLinkedService": {
      "x-ms-discriminator-value": "AzureDataLakeAnalytics",
      "description": "Azure Data Lake Analytics linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Data Lake Analytics linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureDataLakeAnalyticsLinkedServiceTypeProperties": {
      "description": "Azure Data Lake Analytics linked service properties.",
      "properties": {
        "accountName": {
          "type": "object",
          "description": "The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalId": {
          "type": "object",
          "description": "The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string)."
        },
        "servicePrincipalKey": {
          "description": "The Key of the application used to authenticate against the Azure Data Lake Analytics account.",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "tenant": {
          "type": "object",
          "description": "The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string)."
        },
        "subscriptionId": {
          "type": "object",
          "description": "Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "resourceGroupName": {
          "type": "object",
          "description": "Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string)."
        },
        "dataLakeAnalyticsUri": {
          "type": "object",
          "description": "Azure Data Lake Analytics URI Type: string (or Expression with resultType string)."
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "accountName",
        "tenant"
      ]
    },
    "AzureDatabricksLinkedService": {
      "x-ms-discriminator-value": "AzureDatabricks",
      "description": "Azure Databricks linked service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LinkedService"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Databricks linked service properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureDatabricksLinkedServiceTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureDatabricksLinkedServiceTypeProperties": {
      "description": "Azure Databricks linked service properties.",
      "properties": {
        "domain": {
          "type": "object",
          "description": "<REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string)."
        },
        "accessToken": {
          "description": "Access token for databricks REST API. Refer to https://docs.azuredatabricks.net/api/latest/authentication.html. Type: string (or Expression with resultType string).",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "existingClusterId": {
          "type": "object",
          "description": "The id of an existing cluster that will be used for all runs of this job. Type: string (or Expression with resultType string)."
        },
        "newClusterVersion": {
          "type": "object",
          "description": "The Spark version of new cluster. Type: string (or Expression with resultType string)."
        },
        "newClusterNumOfWorker": { 
          "type": "object",
          "description": "Number of worker nodes that new cluster should have. A string formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 as min and 10 as max. Type: string (or Expression with resultType string)."
        },
        "newClusterNodeType": {
          "type": "object",
          "description": "The node types of new cluster. Type: string (or Expression with resultType string)."
        },
        "newClusterSparkConf": {
          "description": "a set of optional, user-specified Spark configuration key-value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "encryptedCredential": {
          "type": "object",
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "domain",
        "accessToken"
      ]
    },
    "ResponsysLinkedService": { 
      "x-ms-discriminator-value": "Responsys", 
      "description": "Responsys linked service.", 
      "type": "object", 
      "allOf": [ 
        { 
          "$ref": "#/definitions/LinkedService" 
        } 
      ], 
      "properties": { 
        "typeProperties": { 
          "description": "Responsys linked service properties.", 
          "x-ms-client-flatten": true, 
          "$ref": "#/definitions/ResponsysLinkedServiceTypeProperties" 
        } 
      }, 
      "required": [ 
        "typeProperties" 
      ] 
    }, 
    "ResponsysLinkedServiceTypeProperties": { 
      "description": "Responsys linked service properties.", 
      "properties": {
        "endpoint": {
          "description": "The endpoint of the Responsys server.",
          "type": "object"
        },
        "clientId": {
          "description": "The client ID associated with the Responsys application. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "clientSecret": {
          "description": "The client secret associated with the Responsys application. Type: string (or Expression with resultType string).",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "useEncryptedEndpoints": {
          "description": "Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).",
          "type": "object"
        },
        "useHostVerification": {
          "description": "Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).",
          "type": "object"
        },
        "usePeerVerification": {
          "description": "Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).",
          "type": "object"
        },
        "encryptedCredential": { 
          "description": "The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).", 
          "type": "object"
        }
      },
      "required": [
        "endpoint",
        "clientId"
      ] 
    }
  }
}