{
  "swagger": "2.0",
  "info": {
    "title": "DataFactoryManagementClient",
    "version": "2018-06-01"
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {},
  "definitions": {
    "Pipeline": {
      "description": "A data factory pipeline.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the pipeline.",
          "type": "string"
        },
        "activities": {
          "type": "array",
          "description": "List of activities in pipeline.",
          "items": {
            "$ref": "#/definitions/Activity"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "parameters": {
          "$ref": "../datafactory.json#/definitions/ParameterDefinitionSpecification",
          "description": "List of parameters for pipeline."
        },
        "variables": {
          "$ref": "../datafactory.json#/definitions/VariableDefinitionSpecification",
          "description": "List of variables for pipeline."
        },
        "concurrency": {
          "type": "integer",
          "minimum": 1,
          "description": "The max number of concurrent runs for the pipeline."
        },
        "annotations": {
          "description": "List of tags that can be used for describing the Pipeline.",
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-ms-identifiers": []
        },
        "runDimensions": {
          "description": "Dimensions emitted by Pipeline.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "folder": {
          "description": "The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the folder that this Pipeline is in.",
              "type": "string"
            }
          }
        },
        "policy": {
          "$ref": "#/definitions/PipelinePolicy"
        }
      }
    },
    "PipelinePolicy": {
      "description": "Pipeline Policy.",
      "type": "object",
      "properties": {
        "elapsedTimeMetric": {
          "$ref": "#/definitions/PipelineElapsedTimeMetricPolicy"
        }
      }
    },
    "PipelineElapsedTimeMetricPolicy": {
      "description": "Pipeline ElapsedTime Metric Policy.",
      "type": "object",
      "properties": {
        "duration": {
          "description": "TimeSpan value, after which an Azure Monitoring Metric is fired.",
          "type": "object"
        }
      }
    },
    "Activity": {
      "discriminator": "type",
      "description": "A pipeline activity.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Activity name.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Type of activity."
        },
        "description": {
          "description": "Activity description.",
          "type": "string"
        },
        "state": {
          "description": "Activity state. This is an optional property and if not provided, the state will be Active by default.",
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ],
          "x-ms-enum": {
            "name": "ActivityState",
            "modelAsString": true
          }
        },
        "onInactiveMarkAs": {
          "description": "Status result of the activity when the state is set to Inactive. This is an optional property and if not provided when the activity is inactive, the status will be Succeeded by default.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Skipped"
          ],
          "x-ms-enum": {
            "name": "ActivityOnInactiveMarkAs",
            "modelAsString": true
          }
        },
        "dependsOn": {
          "type": "array",
          "description": "Activity depends on condition.",
          "items": {
            "$ref": "#/definitions/ActivityDependency"
          },
          "x-ms-identifiers": []
        },
        "userProperties": {
          "type": "array",
          "description": "Activity user properties.",
          "items": {
            "$ref": "#/definitions/UserProperty"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "name",
        "type"
      ]
    },
    "UserProperty": {
      "description": "User property.",
      "type": "object",
      "properties": {
        "name": {
          "description": "User property name.",
          "type": "string"
        },
        "value": {
          "x-ms-format": "dfe-string",
          "description": "User property value. Type: string (or Expression with resultType string).",
          "type": "object"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "ActivityDependency": {
      "description": "Activity dependency information.",
      "type": "object",
      "properties": {
        "activity": {
          "description": "Activity name.",
          "type": "string"
        },
        "dependencyConditions": {
          "type": "array",
          "description": "Match-Condition for the dependency.",
          "items": {
            "type": "string",
            "enum": [
              "Succeeded",
              "Failed",
              "Skipped",
              "Completed"
            ],
            "x-ms-enum": {
              "name": "DependencyCondition",
              "modelAsString": true
            }
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "activity",
        "dependencyConditions"
      ]
    },
    "ControlActivity": {
      "x-ms-discriminator-value": "Container",
      "description": "Base class for all control activities like IfCondition, ForEach , Until.",
      "allOf": [
        {
          "$ref": "#/definitions/Activity"
        }
      ],
      "properties": {}
    },
    "ExecutionActivity": {
      "x-ms-discriminator-value": "Execution",
      "description": "Base class for all execution activities.",
      "allOf": [
        {
          "$ref": "#/definitions/Activity"
        }
      ],
      "properties": {
        "linkedServiceName": {
          "description": "Linked service reference.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "policy": {
          "$ref": "#/definitions/ActivityPolicy",
          "description": "Activity policy."
        }
      }
    },
    "ActivityPolicy": {
      "description": "Execution policy for an activity.",
      "type": "object",
      "properties": {
        "timeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the timeout for the activity to run. The default timeout is 7 days. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "retry": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "retryIntervalInSeconds": {
          "type": "integer",
          "description": "Interval between each retry attempt (in seconds). The default is 30 sec.",
          "minimum": 30,
          "maximum": 86400
        },
        "secureInput": {
          "type": "boolean",
          "description": "When set to true, Input from activity is considered as secure and will not be logged to monitoring."
        },
        "secureOutput": {
          "type": "boolean",
          "description": "When set to true, Output from activity is considered as secure and will not be logged to monitoring."
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "StoreReadSettings": {
      "description": "Connector read setting.",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The read setting type."
        },
        "maxConcurrentConnections": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer)."
        },
        "disableMetricsCollection": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "AzureBlobStorageReadSettings": {
      "description": "Azure blob read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Azure blob wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Azure blob wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The prefix filter for the Azure Blob name. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzureBlobFSReadSettings": {
      "description": "Azure blobFS read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Azure blobFS wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Azure blobFS wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzureDataLakeStoreReadSettings": {
      "description": "Azure data lake store read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "ADLS wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "ADLS wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "listAfter": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Lists files after the value (exclusive) based on file/folder names’ lexicographical order. Applies under the folderPath in data set, and filter files/sub-folders under the folderPath. Type: string (or Expression with resultType string)."
        },
        "listBefore": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Lists files before the value (inclusive) based on file/folder names’ lexicographical order. Applies under the folderPath in data set, and filter files/sub-folders under the folderPath. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AmazonS3ReadSettings": {
      "description": "Amazon S3 read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "AmazonS3 wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "AmazonS3 wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The prefix filter for the S3 object name. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        }
      }
    },
    "FileServerReadSettings": {
      "description": "File server read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "FileServer wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "FileServer wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "fileFilter": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzureFileStorageReadSettings": {
      "description": "Azure File Storage read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Azure File Storage wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Azure File Storage wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The prefix filter for the Azure File name starting from root path. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        }
      }
    },
    "SftpWriteSettings": {
      "description": "Sftp write settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreWriteSettings"
        }
      ],
      "properties": {
        "operationTimeout": {
          "x-ms-format": "dfe-string",
          "description": "Specifies the timeout for writing each chunk to SFTP server. Default value: 01:00:00 (one hour). Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "useTempFileRename": {
          "x-ms-format": "dfe-bool",
          "description": "Upload to temporary file(s) and rename. Disable this option if your SFTP server doesn't support rename operation. Type: boolean (or Expression with resultType boolean).",
          "type": "object"
        }
      }
    },
    "AmazonS3CompatibleReadSettings": {
      "description": "Amazon S3 Compatible read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Amazon S3 Compatible wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Amazon S3 Compatible wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The prefix filter for the S3 Compatible object name. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        }
      }
    },
    "OracleCloudStorageReadSettings": {
      "description": "Oracle Cloud Storage read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Oracle Cloud Storage wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Oracle Cloud Storage wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The prefix filter for the Oracle Cloud Storage object name. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        }
      }
    },
    "GoogleCloudStorageReadSettings": {
      "description": "Google Cloud Storage read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Google Cloud Storage wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Google Cloud Storage wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "prefix": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The prefix filter for the Google Cloud Storage object name. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        }
      }
    },
    "FtpReadSettings": {
      "description": "Ftp read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Ftp wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Ftp wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "useBinaryTransfer": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Specify whether to use binary transfer mode for FTP stores. Type: boolean (or Expression with resultType boolean)."
        },
        "disableChunking": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, disable parallel reading within each file. Default is false. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "SftpReadSettings": {
      "description": "Sftp read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Sftp wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Sftp wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "disableChunking": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, disable parallel reading within each file. Default is false. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "HttpReadSettings": {
      "description": "Http read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "requestMethod": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string)."
        },
        "requestBody": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string)."
        },
        "additionalHeaders": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string)."
        },
        "requestTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the timeout for a HTTP client to get HTTP response from HTTP server. Type: string (or Expression with resultType string)."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "HdfsReadSettings": {
      "description": "HDFS read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "HDFS wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "HDFS wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "distcpSettings": {
          "description": "Specifies Distcp-related settings.",
          "$ref": "#/definitions/DistcpSettings"
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "LakeHouseReadSettings": {
      "description": "Microsoft Fabric LakeHouse Files read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreReadSettings"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "wildcardFolderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Microsoft Fabric LakeHouse Files wildcardFolderPath. Type: string (or Expression with resultType string)."
        },
        "wildcardFileName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Microsoft Fabric LakeHouse Files wildcardFileName. Type: string (or Expression with resultType string)."
        },
        "fileListPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string)."
        },
        "enablePartitionDiscovery": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether to enable partition discovery. Type: boolean (or Expression with resultType boolean)."
        },
        "partitionRootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string)."
        },
        "deleteFilesAfterCompletion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "modifiedDatetimeStart": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The start of file's modified datetime. Type: string (or Expression with resultType string)."
        },
        "modifiedDatetimeEnd": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The end of file's modified datetime. Type: string (or Expression with resultType string)."
        }
      }
    },
    "StoreWriteSettings": {
      "description": "Connector write settings.",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The write setting type."
        },
        "maxConcurrentConnections": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer)."
        },
        "disableMetricsCollection": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "copyBehavior": {
          "description": "The type of copy behavior for copy sink.",
          "type": "object",
          "x-ms-format": "dfe-string"
        },
        "metadata": {
          "type": "array",
          "description": "Specify the custom metadata to be added to sink data. Type: array of objects (or Expression with resultType array of objects).",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "AzureBlobStorageWriteSettings": {
      "description": "Azure blob write settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreWriteSettings"
        }
      ],
      "properties": {
        "blockSizeInMB": {
          "x-ms-format": "dfe-int",
          "description": "Indicates the block size(MB) when writing data to blob. Type: integer (or Expression with resultType integer).",
          "type": "object"
        }
      }
    },
    "AzureBlobFSWriteSettings": {
      "description": "Azure blobFS write settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreWriteSettings"
        }
      ],
      "properties": {
        "blockSizeInMB": {
          "x-ms-format": "dfe-int",
          "description": "Indicates the block size(MB) when writing data to blob. Type: integer (or Expression with resultType integer).",
          "type": "object"
        }
      }
    },
    "AzureDataLakeStoreWriteSettings": {
      "description": "Azure data lake store write settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreWriteSettings"
        }
      ],
      "properties": {
        "expiryDateTime": {
          "x-ms-format": "dfe-string",
          "description": "Specifies the expiry time of the written files. The time is applied to the UTC time zone in the format of \"2018-12-01T05:00:00Z\". Default value is NULL. Type: string (or Expression with resultType string).",
          "type": "object"
        }
      }
    },
    "FileServerWriteSettings": {
      "description": "File server write settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreWriteSettings"
        }
      ]
    },
    "AzureFileStorageWriteSettings": {
      "description": "Azure File Storage write settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreWriteSettings"
        }
      ]
    },
    "LakeHouseWriteSettings": {
      "description": "Microsoft Fabric LakeHouse Files write settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/StoreWriteSettings"
        }
      ]
    },
    "FormatReadSettings": {
      "description": "Format read settings.",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The read setting type."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "CompressionReadSettings": {
      "description": "Compression read settings.",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The Compression setting type."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "ZipDeflateReadSettings": {
      "description": "The ZipDeflate compression read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CompressionReadSettings"
        }
      ],
      "properties": {
        "preserveZipFileNameAsFolder": {
          "x-ms-format": "dfe-bool",
          "description": "Preserve the zip file name as folder path. Type: boolean (or Expression with resultType boolean).",
          "type": "object"
        }
      }
    },
    "TarReadSettings": {
      "description": "The Tar compression read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CompressionReadSettings"
        }
      ],
      "properties": {
        "preserveCompressionFileNameAsFolder": {
          "x-ms-format": "dfe-bool",
          "description": "Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean).",
          "type": "object"
        }
      }
    },
    "TarGZipReadSettings": {
      "description": "The TarGZip compression read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CompressionReadSettings"
        }
      ],
      "properties": {
        "preserveCompressionFileNameAsFolder": {
          "x-ms-format": "dfe-bool",
          "description": "Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean).",
          "type": "object"
        }
      }
    },
    "ParquetReadSettings": {
      "description": "Parquet read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FormatReadSettings"
        }
      ],
      "properties": {
        "compressionProperties": {
          "$ref": "#/definitions/CompressionReadSettings",
          "description": "Compression settings."
        }
      }
    },
    "DelimitedTextReadSettings": {
      "description": "Delimited text read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FormatReadSettings"
        }
      ],
      "properties": {
        "skipLineCount": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Indicates the number of non-empty rows to skip when reading data from input files. Type: integer (or Expression with resultType integer)."
        },
        "compressionProperties": {
          "$ref": "#/definitions/CompressionReadSettings",
          "description": "Compression settings."
        }
      }
    },
    "JsonReadSettings": {
      "description": "Json read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FormatReadSettings"
        }
      ],
      "properties": {
        "compressionProperties": {
          "$ref": "#/definitions/CompressionReadSettings",
          "description": "Compression settings."
        }
      }
    },
    "XmlReadSettings": {
      "description": "Xml read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FormatReadSettings"
        }
      ],
      "properties": {
        "compressionProperties": {
          "$ref": "#/definitions/CompressionReadSettings",
          "description": "Compression settings."
        },
        "validationMode": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Indicates what validation method is used when reading the xml files. Allowed values: 'none', 'xsd', or 'dtd'. Type: string (or Expression with resultType string)."
        },
        "detectDataType": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether type detection is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean)."
        },
        "namespaces": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether namespace is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean)."
        },
        "namespacePrefixes": {
          "type": "object",
          "x-ms-format": "dfe-key-value-pairs",
          "description": "Namespace uri to prefix mappings to override the prefixes in column names when namespace is enabled, if no prefix is defined for a namespace uri, the prefix of xml element/attribute name in the xml data file will be used. Example: \"{\"http://www.example.com/xml\":\"prefix\"}\" Type: object (or Expression with resultType object)."
        }
      }
    },
    "BinaryReadSettings": {
      "description": "Binary read settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FormatReadSettings"
        }
      ],
      "properties": {
        "compressionProperties": {
          "$ref": "#/definitions/CompressionReadSettings",
          "description": "Compression settings."
        }
      }
    },
    "FormatWriteSettings": {
      "description": "Format write settings.",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The write setting type."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "AvroWriteSettings": {
      "description": "Avro write settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FormatWriteSettings"
        }
      ],
      "properties": {
        "recordName": {
          "type": "string",
          "description": "Top level record name in write result, which is required in AVRO spec."
        },
        "recordNamespace": {
          "type": "string",
          "description": "Record namespace in the write result."
        },
        "maxRowsPerFile": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer)."
        },
        "fileNamePrefix": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string)."
        }
      }
    },
    "OrcWriteSettings": {
      "description": "Orc write settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FormatWriteSettings"
        }
      ],
      "properties": {
        "maxRowsPerFile": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer)."
        },
        "fileNamePrefix": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string)."
        }
      }
    },
    "ParquetWriteSettings": {
      "description": "Parquet write settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FormatWriteSettings"
        }
      ],
      "properties": {
        "maxRowsPerFile": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer)."
        },
        "fileNamePrefix": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string)."
        }
      }
    },
    "DelimitedTextWriteSettings": {
      "description": "Delimited text write settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FormatWriteSettings"
        }
      ],
      "properties": {
        "quoteAllText": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates whether string values should always be enclosed with quotes. Type: boolean (or Expression with resultType boolean)."
        },
        "fileExtension": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The file extension used to create the files. Type: string (or Expression with resultType string)."
        },
        "maxRowsPerFile": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer)."
        },
        "fileNamePrefix": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "fileExtension"
      ]
    },
    "JsonWriteSettings": {
      "description": "Json write settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FormatWriteSettings"
        }
      ],
      "properties": {
        "filePattern": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "File pattern of JSON. This setting controls the way a collection of JSON objects will be treated. The default value is 'setOfObjects'. It is case-sensitive."
        }
      }
    },
    "JsonWriteFilePattern": {
      "description": "All available filePatterns.",
      "type": "string",
      "enum": [
        "setOfObjects",
        "arrayOfObjects"
      ],
      "x-ms-enum": {
        "name": "JsonWriteFilePattern",
        "modelAsString": true
      }
    },
    "AvroSource": {
      "description": "A copy activity Avro source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreReadSettings",
          "description": "Avro store settings."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "ExcelSource": {
      "description": "A copy activity excel source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreReadSettings",
          "description": "Excel store settings."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "ParquetSource": {
      "description": "A copy activity Parquet source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreReadSettings",
          "description": "Parquet store settings."
        },
        "formatSettings": {
          "$ref": "#/definitions/ParquetReadSettings",
          "description": "Parquet format settings."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "DelimitedTextSource": {
      "description": "A copy activity DelimitedText source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreReadSettings",
          "description": "DelimitedText store settings."
        },
        "formatSettings": {
          "$ref": "#/definitions/DelimitedTextReadSettings",
          "description": "DelimitedText format settings."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "JsonSource": {
      "description": "A copy activity Json source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreReadSettings",
          "description": "Json store settings."
        },
        "formatSettings": {
          "$ref": "#/definitions/JsonReadSettings",
          "description": "Json format settings."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "XmlSource": {
      "description": "A copy activity Xml source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreReadSettings",
          "description": "Xml store settings."
        },
        "formatSettings": {
          "$ref": "#/definitions/XmlReadSettings",
          "description": "Xml format settings."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "OrcSource": {
      "description": "A copy activity ORC source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreReadSettings",
          "description": "ORC store settings."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "DelimitedTextSink": {
      "description": "A copy activity DelimitedText sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreWriteSettings",
          "description": "DelimitedText store settings."
        },
        "formatSettings": {
          "$ref": "#/definitions/DelimitedTextWriteSettings",
          "description": "DelimitedText format settings."
        }
      }
    },
    "JsonSink": {
      "description": "A copy activity Json sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreWriteSettings",
          "description": "Json store settings."
        },
        "formatSettings": {
          "$ref": "#/definitions/JsonWriteSettings",
          "description": "Json format settings."
        }
      }
    },
    "OrcSink": {
      "description": "A copy activity ORC sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreWriteSettings",
          "description": "ORC store settings."
        },
        "formatSettings": {
          "$ref": "#/definitions/OrcWriteSettings",
          "description": "ORC format settings."
        }
      }
    },
    "CopyActivity": {
      "x-ms-discriminator-value": "Copy",
      "description": "Copy activity.",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Copy activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CopyActivityTypeProperties"
        },
        "inputs": {
          "type": "array",
          "description": "List of inputs for the activity.",
          "items": {
            "$ref": "../datafactory.json#/definitions/DatasetReference"
          },
          "x-ms-identifiers": [
            "referenceName"
          ]
        },
        "outputs": {
          "type": "array",
          "description": "List of outputs for the activity.",
          "items": {
            "$ref": "../datafactory.json#/definitions/DatasetReference"
          },
          "x-ms-identifiers": [
            "referenceName"
          ]
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "CopyActivityTypeProperties": {
      "description": "Copy activity properties.",
      "properties": {
        "source": {
          "description": "Copy activity source.",
          "$ref": "#/definitions/CopySource"
        },
        "sink": {
          "description": "Copy activity sink.",
          "$ref": "#/definitions/CopySink"
        },
        "translator": {
          "description": "Copy activity translator. If not specified, tabular translator is used.",
          "type": "object"
        },
        "enableStaging": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "stagingSettings": {
          "description": "Specifies interim staging settings when EnableStaging is true.",
          "$ref": "#/definitions/StagingSettings"
        },
        "parallelCopies": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "dataIntegrationUnits": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Maximum number of data integration units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "enableSkipIncompatibleRow": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "redirectIncompatibleRowSettings": {
          "description": "Redirect incompatible row settings when EnableSkipIncompatibleRow is true.",
          "$ref": "#/definitions/RedirectIncompatibleRowSettings"
        },
        "logStorageSettings": {
          "description": "(Deprecated. Please use LogSettings) Log storage settings customer need to provide when enabling session log.",
          "$ref": "#/definitions/LogStorageSettings"
        },
        "logSettings": {
          "description": "Log settings customer needs provide when enabling log.",
          "$ref": "#/definitions/LogSettings"
        },
        "preserveRules": {
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "description": "Preserve Rules.",
          "x-ms-identifiers": []
        },
        "preserve": {
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "description": "Preserve rules.",
          "x-ms-identifiers": []
        },
        "validateDataConsistency": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to enable Data Consistency validation. Type: boolean (or Expression with resultType boolean)."
        },
        "skipErrorFile": {
          "description": "Specify the fault tolerance for data consistency.",
          "$ref": "#/definitions/SkipErrorFile"
        }
      },
      "required": [
        "source",
        "sink"
      ]
    },
    "CopySource": {
      "discriminator": "type",
      "description": "A copy activity source.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Copy source type."
        },
        "sourceRetryCount": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Source retry count. Type: integer (or Expression with resultType integer)."
        },
        "sourceRetryWait": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Source retry wait. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "maxConcurrentConnections": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "The maximum concurrent connection count for the source data store. Type: integer (or Expression with resultType integer)."
        },
        "disableMetricsCollection": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "BinarySource": {
      "description": "A copy activity Binary source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreReadSettings",
          "description": "Binary store settings."
        },
        "formatSettings": {
          "$ref": "#/definitions/BinaryReadSettings",
          "description": "Binary format settings."
        }
      }
    },
    "TabularSource": {
      "description": "Copy activity sources of tabular type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "queryTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "AzureTableSource": {
      "description": "A copy activity Azure Table source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "azureTableSourceQuery": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Azure Table source query. Type: string (or Expression with resultType string)."
        },
        "azureTableSourceIgnoreTableNotFound": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "BlobSource": {
      "description": "A copy activity Azure Blob source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "treatEmptyAsNull": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Treat empty as null. Type: boolean (or Expression with resultType boolean)."
        },
        "skipHeaderLineCount": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer)."
        },
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "DocumentDbCollectionSource": {
      "description": "A copy activity Document Database Collection source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Documents query. Type: string (or Expression with resultType string)."
        },
        "nestingSeparator": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Nested properties separator. Type: string (or Expression with resultType string)."
        },
        "queryTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "CosmosDbSqlApiSource": {
      "description": "A copy activity Azure CosmosDB (SQL API) Collection source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL API query. Type: string (or Expression with resultType string)."
        },
        "pageSize": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Page size of the result. Type: integer (or Expression with resultType integer)."
        },
        "preferredRegions": {
          "type": "object",
          "x-ms-format": "dfe-list-string",
          "description": "Preferred regions. Type: array of strings (or Expression with resultType array of strings)."
        },
        "detectDatetime": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether detect primitive values as datetime values. Type: boolean (or Expression with resultType boolean)."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "DynamicsSource": {
      "description": "A copy activity Dynamics source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string)."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "DynamicsCrmSource": {
      "description": "A copy activity Dynamics CRM source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "FetchXML is a proprietary query language that is used in Microsoft Dynamics CRM (online & on-premises). Type: string (or Expression with resultType string)."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "CommonDataServiceForAppsSource": {
      "description": "A copy activity Common Data Service for Apps source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "FetchXML is a proprietary query language that is used in Microsoft Common Data Service for Apps (online & on-premises). Type: string (or Expression with resultType string)."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "RelationalSource": {
      "description": "A copy activity source for various relational databases.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "InformixSource": {
      "description": "A copy activity source for Informix.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        }
      }
    },
    "MicrosoftAccessSource": {
      "description": "A copy activity source for Microsoft Access.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "Db2Source": {
      "description": "A copy activity source for Db2 databases.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        }
      }
    },
    "OdbcSource": {
      "description": "A copy activity source for ODBC databases.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        }
      }
    },
    "MySqlSource": {
      "description": "A copy activity source for MySQL databases.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        }
      }
    },
    "PostgreSqlSource": {
      "description": "A copy activity source for PostgreSQL databases.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        }
      }
    },
    "SybaseSource": {
      "description": "A copy activity source for Sybase databases.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        }
      }
    },
    "SapBwSource": {
      "description": "A copy activity source for SapBW server via MDX.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "MDX query. Type: string (or Expression with resultType string)."
        }
      }
    },
    "ODataSource": {
      "description": "A copy activity source for OData source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "OData query. For example, \"$top=1\". Type: string (or Expression with resultType string)."
        },
        "httpRequestTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "SalesforceSource": {
      "description": "A copy activity Salesforce source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "readBehavior": {
          "description": "The read behavior for the operation. Default is Query. Allowed values: Query/QueryAll. Type: string (or Expression with resultType string).",
          "type": "object",
          "x-ms-format": "dfe-string"
        }
      }
    },
    "SalesforceServiceCloudSource": {
      "description": "A copy activity Salesforce Service Cloud source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "readBehavior": {
          "description": "The read behavior for the operation. Default is Query. Allowed values: Query/QueryAll. Type: string (or Expression with resultType string).",
          "type": "object",
          "x-ms-format": "dfe-string"
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "SalesforceSourceReadBehavior": {
      "description": "The Salesforce read behavior for the operation",
      "type": "string",
      "enum": [
        "Query",
        "QueryAll"
      ],
      "x-ms-enum": {
        "name": "SalesforceSourceReadBehavior",
        "modelAsString": true
      }
    },
    "SapCloudForCustomerSource": {
      "description": "A copy activity source for SAP Cloud for Customer source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SAP Cloud for Customer OData query. For example, \"$top=1\". Type: string (or Expression with resultType string)."
        },
        "httpRequestTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      }
    },
    "SapEccSource": {
      "description": "A copy activity source for SAP ECC source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SAP ECC OData query. For example, \"$top=1\". Type: string (or Expression with resultType string)."
        },
        "httpRequestTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      }
    },
    "SapHanaSource": {
      "description": "A copy activity source for SAP HANA source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SAP HANA Sql query. Type: string (or Expression with resultType string)."
        },
        "packetSize": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "The packet size of data read from SAP HANA. Type: integer(or Expression with resultType integer)."
        },
        "partitionOption": {
          "description": "The partition mechanism that will be used for SAP HANA read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"SapHanaDynamicRange\". ",
          "type": "object",
          "x-ms-format": "dfe-string"
        },
        "partitionSettings": {
          "description": "The settings that will be leveraged for SAP HANA source partitioning.",
          "$ref": "#/definitions/SapHanaPartitionSettings"
        }
      }
    },
    "SapHanaPartitionSettings": {
      "description": "The settings that will be leveraged for SAP HANA source partitioning.",
      "type": "object",
      "properties": {
        "partitionColumnName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the column that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        }
      }
    },
    "SapOpenHubSource": {
      "description": "A copy activity source for SAP Business Warehouse Open Hub Destination source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "excludeLastRequest": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to exclude the records of the last request. The default value is true. Type: boolean (or Expression with resultType boolean)."
        },
        "baseRequestId": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "The ID of request for delta loading. Once it is set, only data with requestId larger than the value of this property will be retrieved. The default value is 0. Type: integer (or Expression with resultType integer )."
        },
        "customRfcReadTableFunctionModule": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string)."
        },
        "sapDataColumnDelimiter": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string)."
        }
      }
    },
    "SapOdpSource": {
      "description": "A copy activity source for SAP ODP source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "extractionMode": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The extraction mode. Allowed value include: Full, Delta and Recovery. The default value is Full. Type: string (or Expression with resultType string)."
        },
        "subscriberProcess": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The subscriber process to manage the delta process. Type: string (or Expression with resultType string)."
        },
        "selection": {
          "type": "object",
          "description": "Specifies the selection conditions from source data. Type: array of objects(selection) (or Expression with resultType array of objects)."
        },
        "projection": {
          "type": "object",
          "description": "Specifies the columns to be selected from source data. Type: array of objects(projection) (or Expression with resultType array of objects)."
        }
      }
    },
    "SapTableSource": {
      "description": "A copy activity source for SAP Table source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "rowCount": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "The number of rows to be retrieved. Type: integer(or Expression with resultType integer)."
        },
        "rowSkips": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "The number of rows that will be skipped. Type: integer (or Expression with resultType integer)."
        },
        "rfcTableFields": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The fields of the SAP table that will be retrieved. For example, column0, column1. Type: string (or Expression with resultType string)."
        },
        "rfcTableOptions": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The options for the filtering of the SAP Table. For example, COLUMN0 EQ SOME VALUE. Type: string (or Expression with resultType string)."
        },
        "batchSize": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Specifies the maximum number of rows that will be retrieved at a time when retrieving data from SAP Table. Type: integer (or Expression with resultType integer)."
        },
        "customRfcReadTableFunctionModule": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string)."
        },
        "sapDataColumnDelimiter": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string)."
        },
        "partitionOption": {
          "description": "The partition mechanism that will be used for SAP table read in parallel. Possible values include: \"None\", \"PartitionOnInt\", \"PartitionOnCalendarYear\", \"PartitionOnCalendarMonth\", \"PartitionOnCalendarDate\", \"PartitionOnTime\".",
          "type": "object"
        },
        "partitionSettings": {
          "description": "The settings that will be leveraged for SAP table source partitioning.",
          "$ref": "#/definitions/SapTablePartitionSettings"
        }
      }
    },
    "SapTablePartitionSettings": {
      "description": "The settings that will be leveraged for SAP table source partitioning.",
      "type": "object",
      "properties": {
        "partitionColumnName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the column that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionUpperBound": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionLowerBound": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "maxPartitionsNumber": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "The maximum value of partitions the table will be split into. Type: integer (or Expression with resultType string)."
        }
      }
    },
    "RestSink": {
      "description": "A copy activity Rest service Sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "requestMethod": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The HTTP method used to call the RESTful API. The default is POST. Type: string (or Expression with resultType string)."
        },
        "additionalHeaders": {
          "type": "object",
          "x-ms-format": "dfe-key-value-pairs",
          "description": "The additional HTTP headers in the request to the RESTful API. Type: key value pairs (value should be string type)."
        },
        "httpRequestTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "requestInterval": {
          "type": "object",
          "description": "The time to await before sending next request, in milliseconds "
        },
        "httpCompressionType": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Http Compression Type to Send data in compressed format with Optimal Compression Level, Default is None. And The Only Supported option is Gzip. Type: string (or Expression with resultType string)."
        }
      }
    },
    "RestSource": {
      "description": "A copy activity Rest service source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "requestMethod": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string)."
        },
        "requestBody": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string)."
        },
        "additionalHeaders": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string)."
        },
        "paginationRules": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The pagination rules to compose next page requests. Type: string (or Expression with resultType string)."
        },
        "httpRequestTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "requestInterval": {
          "type": "object",
          "description": "The time to await before sending next page request. "
        },
        "additionalColumns": {
          "type": "object",
          "x-ms-format": "dfe-key-value-pairs",
          "description": "Specifies the additional columns to be added to source data. Type: key value pairs (value should be string type)."
        }
      }
    },
    "SqlSource": {
      "description": "A copy activity SQL source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "sqlReaderQuery": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\".",
          "type": "object"
        },
        "isolationLevel": {
          "x-ms-format": "dfe-string",
          "description": "Specifies the transaction locking behavior for the SQL source. Allowed values: ReadCommitted/ReadUncommitted/RepeatableRead/Serializable/Snapshot. The default value is ReadCommitted. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "partitionOption": {
          "description": "The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\". Type: string (or Expression with resultType string).",
          "type": "object",
          "x-ms-format": "dfe-string"
        },
        "partitionSettings": {
          "description": "The settings that will be leveraged for Sql source partitioning.",
          "$ref": "#/definitions/SqlPartitionSettings"
        }
      }
    },
    "SqlServerSource": {
      "description": "A copy activity SQL server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "sqlReaderQuery": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\".",
          "type": "object"
        },
        "isolationLevel": {
          "x-ms-format": "dfe-string",
          "description": "Specifies the transaction locking behavior for the SQL source. Allowed values: ReadCommitted/ReadUncommitted/RepeatableRead/Serializable/Snapshot. The default value is ReadCommitted. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "produceAdditionalTypes": {
          "description": "Which additional types to produce.",
          "type": "object"
        },
        "partitionOption": {
          "description": "The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\". Type: string (or Expression with resultType string).",
          "type": "object",
          "x-ms-format": "dfe-string"
        },
        "partitionSettings": {
          "description": "The settings that will be leveraged for Sql source partitioning.",
          "$ref": "#/definitions/SqlPartitionSettings"
        }
      }
    },
    "AmazonRdsForSqlServerSource": {
      "description": "A copy activity Amazon RDS for SQL Server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "sqlReaderQuery": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\".",
          "type": "object"
        },
        "isolationLevel": {
          "x-ms-format": "dfe-string",
          "description": "Specifies the transaction locking behavior for the SQL source. Allowed values: ReadCommitted/ReadUncommitted/RepeatableRead/Serializable/Snapshot. The default value is ReadCommitted. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "produceAdditionalTypes": {
          "description": "Which additional types to produce.",
          "type": "object"
        },
        "partitionOption": {
          "description": "The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\".",
          "type": "object"
        },
        "partitionSettings": {
          "description": "The settings that will be leveraged for Sql source partitioning.",
          "$ref": "#/definitions/SqlPartitionSettings"
        }
      }
    },
    "AzureSqlSource": {
      "description": "A copy activity Azure SQL source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "sqlReaderQuery": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\".",
          "type": "object"
        },
        "isolationLevel": {
          "x-ms-format": "dfe-string",
          "description": "Specifies the transaction locking behavior for the SQL source. Allowed values: ReadCommitted/ReadUncommitted/RepeatableRead/Serializable/Snapshot. The default value is ReadCommitted. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "produceAdditionalTypes": {
          "description": "Which additional types to produce.",
          "type": "object"
        },
        "partitionOption": {
          "description": "The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\". Type: string (or Expression with resultType string).",
          "type": "object",
          "x-ms-format": "dfe-string"
        },
        "partitionSettings": {
          "description": "The settings that will be leveraged for Sql source partitioning.",
          "$ref": "#/definitions/SqlPartitionSettings"
        }
      }
    },
    "SqlMISource": {
      "description": "A copy activity Azure SQL Managed Instance source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "sqlReaderQuery": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Name of the stored procedure for a Azure SQL Managed Instance source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\".",
          "type": "object"
        },
        "isolationLevel": {
          "x-ms-format": "dfe-string",
          "description": "Specifies the transaction locking behavior for the SQL source. Allowed values: ReadCommitted/ReadUncommitted/RepeatableRead/Serializable/Snapshot. The default value is ReadCommitted. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "produceAdditionalTypes": {
          "description": "Which additional types to produce.",
          "type": "object"
        },
        "partitionOption": {
          "description": "The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\". Type: string (or Expression with resultType string).",
          "type": "object",
          "x-ms-format": "dfe-string"
        },
        "partitionSettings": {
          "description": "The settings that will be leveraged for Sql source partitioning.",
          "$ref": "#/definitions/SqlPartitionSettings"
        }
      }
    },
    "SqlDWSource": {
      "description": "A copy activity SQL Data Warehouse source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "sqlReaderQuery": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL Data Warehouse reader query. Type: string (or Expression with resultType string)."
        },
        "sqlReaderStoredProcedureName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "type": "object",
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter."
        },
        "isolationLevel": {
          "x-ms-format": "dfe-string",
          "description": "Specifies the transaction locking behavior for the SQL source. Allowed values: ReadCommitted/ReadUncommitted/RepeatableRead/Serializable/Snapshot. The default value is ReadCommitted. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "partitionOption": {
          "description": "The partition mechanism that will be used for Sql read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\". Type: string (or Expression with resultType string).",
          "type": "object",
          "x-ms-format": "dfe-string"
        },
        "partitionSettings": {
          "description": "The settings that will be leveraged for Sql source partitioning.",
          "$ref": "#/definitions/SqlPartitionSettings"
        }
      }
    },
    "SqlPartitionSettings": {
      "description": "The settings that will be leveraged for Sql source partitioning.",
      "type": "object",
      "properties": {
        "partitionColumnName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the column in integer or datetime type that will be used for proceeding partitioning. If not specified, the primary key of the table is auto-detected and used as the partition column. Type: string (or Expression with resultType string)."
        },
        "partitionUpperBound": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The maximum value of the partition column for partition range splitting. This value is used to decide the partition stride, not for filtering the rows in table. All rows in the table or query result will be partitioned and copied. Type: string (or Expression with resultType string)."
        },
        "partitionLowerBound": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The minimum value of the partition column for partition range splitting. This value is used to decide the partition stride, not for filtering the rows in table. All rows in the table or query result will be partitioned and copied. Type: string (or Expression with resultType string)."
        }
      }
    },
    "FileSystemSource": {
      "description": "A copy activity file system source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "HdfsSource": {
      "description": "A copy activity HDFS source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "distcpSettings": {
          "description": "Specifies Distcp-related settings.",
          "$ref": "#/definitions/DistcpSettings"
        }
      }
    },
    "DistcpSettings": {
      "description": "Distcp settings.",
      "type": "object",
      "properties": {
        "resourceManagerEndpoint": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string)."
        },
        "tempScriptPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string)."
        },
        "distcpOptions": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the Distcp options. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "resourceManagerEndpoint",
        "tempScriptPath"
      ]
    },
    "AzureMySqlSource": {
      "description": "A copy activity Azure MySQL source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzureDataExplorerSource": {
      "description": "A copy activity Azure Data Explorer (Kusto) source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Should be a Kusto Query Language (KQL) query. Type: string (or Expression with resultType string)."
        },
        "noTruncation": {
          "type": "object",
          "description": "The name of the Boolean option that controls whether truncation is applied to result-sets that go beyond a certain row-count limit."
        },
        "queryTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9])).."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      },
      "required": [
        "query"
      ]
    },
    "OracleSource": {
      "description": "A copy activity Oracle source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "oracleReaderQuery": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Oracle reader query. Type: string (or Expression with resultType string)."
        },
        "queryTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "partitionOption": {
          "description": "The partition mechanism that will be used for Oracle read in parallel. Possible values include: \"None\", \"PhysicalPartitionsOfTable\", \"DynamicRange\".",
          "type": "object",
          "x-ms-format": "dfe-string"
        },
        "partitionSettings": {
          "description": "The settings that will be leveraged for Oracle source partitioning.",
          "$ref": "#/definitions/OraclePartitionSettings"
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "OraclePartitionSettings": {
      "description": "The settings that will be leveraged for Oracle source partitioning.",
      "type": "object",
      "properties": {
        "partitionNames": {
          "type": "object",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "description": "Names of the physical partitions of Oracle table. "
        },
        "partitionColumnName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionUpperBound": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionLowerBound": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AmazonRdsForOracleSource": {
      "description": "A copy activity AmazonRdsForOracle source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "oracleReaderQuery": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "AmazonRdsForOracle reader query. Type: string (or Expression with resultType string)."
        },
        "queryTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "partitionOption": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The partition mechanism that will be used for AmazonRdsForOracle read in parallel. Type: string (or Expression with resultType string)."
        },
        "partitionSettings": {
          "description": "The settings that will be leveraged for AmazonRdsForOracle source partitioning.",
          "$ref": "#/definitions/AmazonRdsForOraclePartitionSettings"
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "AmazonRdsForOraclePartitionOption": {
      "type": "string",
      "enum": [
        "None",
        "PhysicalPartitionsOfTable",
        "DynamicRange"
      ],
      "x-ms-enum": {
        "name": "AmazonRdsForOraclePartitionOption",
        "modelAsString": true
      }
    },
    "AmazonRdsForOraclePartitionSettings": {
      "description": "The settings that will be leveraged for AmazonRdsForOracle source partitioning.",
      "type": "object",
      "properties": {
        "partitionNames": {
          "type": "object",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "description": "Names of the physical partitions of AmazonRdsForOracle table. "
        },
        "partitionColumnName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionUpperBound": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionLowerBound": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        }
      }
    },
    "TeradataSource": {
      "description": "A copy activity Teradata source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Teradata query. Type: string (or Expression with resultType string)."
        },
        "partitionOption": {
          "description": "The partition mechanism that will be used for teradata read in parallel. Possible values include: \"None\", \"Hash\", \"DynamicRange\".",
          "type": "object",
          "x-ms-format": "dfe-string"
        },
        "partitionSettings": {
          "description": "The settings that will be leveraged for teradata source partitioning.",
          "$ref": "#/definitions/TeradataPartitionSettings"
        }
      }
    },
    "TeradataPartitionSettings": {
      "description": "The settings that will be leveraged for teradata source partitioning.",
      "type": "object",
      "properties": {
        "partitionColumnName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the column that will be used for proceeding range or hash partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionUpperBound": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionLowerBound": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        }
      }
    },
    "WebSource": {
      "description": "A copy activity source for web page table.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "CassandraSource": {
      "description": "A copy activity source for a Cassandra database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string)."
        },
        "consistencyLevel": {
          "description": "The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive.",
          "type": "string",
          "enum": [
            "ALL",
            "EACH_QUORUM",
            "QUORUM",
            "LOCAL_QUORUM",
            "ONE",
            "TWO",
            "THREE",
            "LOCAL_ONE",
            "SERIAL",
            "LOCAL_SERIAL"
          ],
          "x-ms-enum": {
            "name": "CassandraSourceReadConsistencyLevels",
            "modelAsString": true
          }
        }
      }
    },
    "MongoDbSource": {
      "description": "A copy activity source for a MongoDB database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string)."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "MongoDbAtlasSource": {
      "description": "A copy activity source for a MongoDB Atlas database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "filter": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string)."
        },
        "cursorMethods": {
          "description": "Cursor methods for Mongodb query",
          "$ref": "#/definitions/MongoDbCursorMethodsProperties"
        },
        "batchSize": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Specifies the number of documents to return in each batch of the response from MongoDB Atlas instance. In most cases, modifying the batch size will not affect the user or the application. This property's main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer)."
        },
        "queryTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "MongoDbV2Source": {
      "description": "A copy activity source for a MongoDB database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "filter": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string)."
        },
        "cursorMethods": {
          "description": "Cursor methods for Mongodb query",
          "$ref": "#/definitions/MongoDbCursorMethodsProperties"
        },
        "batchSize": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Specifies the number of documents to return in each batch of the response from MongoDB instance. In most cases, modifying the batch size will not affect the user or the application. This property's main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer)."
        },
        "queryTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "CosmosDbMongoDbApiSource": {
      "description": "A copy activity source for a CosmosDB (MongoDB API) database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "filter": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string)."
        },
        "cursorMethods": {
          "description": "Cursor methods for Mongodb query.",
          "$ref": "#/definitions/MongoDbCursorMethodsProperties"
        },
        "batchSize": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Specifies the number of documents to return in each batch of the response from MongoDB instance. In most cases, modifying the batch size will not affect the user or the application. This property's main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer)."
        },
        "queryTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Query timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "MongoDbCursorMethodsProperties": {
      "description": "Cursor methods for Mongodb query",
      "type": "object",
      "properties": {
        "project": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the fields to return in the documents that match the query filter. To return all fields in the matching documents, omit this parameter. Type: string (or Expression with resultType string)."
        },
        "sort": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the order in which the query returns matching documents. Type: string (or Expression with resultType string). Type: string (or Expression with resultType string)."
        },
        "skip": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Specifies the how many documents skipped and where MongoDB begins returning results. This approach may be useful in implementing paginated results. Type: integer (or Expression with resultType integer)."
        },
        "limit": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Specifies the maximum number of documents the server returns. limit() is analogous to the LIMIT statement in a SQL database. Type: integer (or Expression with resultType integer)."
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "Office365Source": {
      "description": "A copy activity source for an Office 365 service.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "allowedGroups": {
          "type": "object",
          "x-ms-format": "dfe-list-string",
          "description": "The groups containing all the users. Type: array of strings (or Expression with resultType array of strings)."
        },
        "userScopeFilterUri": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The user scope uri. Type: string (or Expression with resultType string)."
        },
        "dateFilterColumn": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The Column to apply the <paramref name=\"StartTime\"/> and <paramref name=\"EndTime\"/>. Type: string (or Expression with resultType string)."
        },
        "startTime": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Start time of the requested range for this dataset. Type: string (or Expression with resultType string)."
        },
        "endTime": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "End time of the requested range for this dataset. Type: string (or Expression with resultType string)."
        },
        "outputColumns": {
          "type": "object",
          "x-ms-format": "dfe-list-generic",
          "x-ms-format-element-type": "OutputColumn",
          "description": "The columns to be read out from the Office 365 table. Type: array of objects (or Expression with resultType array of objects). itemType: OutputColumn. Example: [ { \"name\": \"Id\" }, { \"name\": \"CreatedDateTime\" } ]"
        }
      }
    },
    "OutputColumn": {
      "description": "The columns to be read out from the Office 365 table.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the table column. Type: string."
        }
      }
    },
    "AzureDataLakeStoreSource": {
      "description": "A copy activity Azure Data Lake source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "AzureBlobFSSource": {
      "description": "A copy activity Azure BlobFS source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "treatEmptyAsNull": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Treat empty as null. Type: boolean (or Expression with resultType boolean)."
        },
        "skipHeaderLineCount": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer)."
        },
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "HttpSource": {
      "description": "A copy activity source for an HTTP file.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "httpRequestTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      }
    },
    "AmazonMWSSource": {
      "description": "A copy activity Amazon Marketplace Web Service source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzurePostgreSqlSource": {
      "description": "A copy activity Azure PostgreSQL source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzurePostgreSqlSink": {
      "description": "A copy activity Azure PostgreSQL sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to execute before starting the copy. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzureMySqlSink": {
      "description": "A copy activity Azure MySql sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to execute before starting the copy. Type: string (or Expression with resultType string)."
        }
      }
    },
    "ConcurSource": {
      "description": "A copy activity Concur Service source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "CouchbaseSource": {
      "description": "A copy activity Couchbase server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "DrillSource": {
      "description": "A copy activity Drill server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "EloquaSource": {
      "description": "A copy activity Eloqua server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "GoogleBigQuerySource": {
      "description": "A copy activity Google BigQuery service source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "GreenplumSource": {
      "description": "A copy activity Greenplum Database source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "HBaseSource": {
      "description": "A copy activity HBase server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "HiveSource": {
      "description": "A copy activity Hive Server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "HubspotSource": {
      "description": "A copy activity Hubspot Service source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "ImpalaSource": {
      "description": "A copy activity Impala server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "JiraSource": {
      "description": "A copy activity Jira Service source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "MagentoSource": {
      "description": "A copy activity Magento server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "MariaDBSource": {
      "description": "A copy activity MariaDB server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzureMariaDBSource": {
      "description": "A copy activity Azure MariaDB source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "MarketoSource": {
      "description": "A copy activity Marketo server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "PaypalSource": {
      "description": "A copy activity Paypal Service source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "PhoenixSource": {
      "description": "A copy activity Phoenix server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "PrestoSource": {
      "description": "A copy activity Presto server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "QuickBooksSource": {
      "description": "A copy activity QuickBooks server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "ServiceNowSource": {
      "description": "A copy activity ServiceNow server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "ShopifySource": {
      "description": "A copy activity Shopify Service source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "SparkSource": {
      "description": "A copy activity Spark Server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "SquareSource": {
      "description": "A copy activity Square Service source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "XeroSource": {
      "description": "A copy activity Xero Service source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "ZohoSource": {
      "description": "A copy activity Zoho server source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "NetezzaSource": {
      "description": "A copy activity Netezza source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "partitionOption": {
          "description": "The partition mechanism that will be used for Netezza read in parallel. Possible values include: \"None\", \"DataSlice\", \"DynamicRange\".",
          "type": "object",
          "x-ms-format": "dfe-string"
        },
        "partitionSettings": {
          "description": "The settings that will be leveraged for Netezza source partitioning.",
          "$ref": "#/definitions/NetezzaPartitionSettings"
        }
      }
    },
    "NetezzaPartitionSettings": {
      "description": "The settings that will be leveraged for Netezza source partitioning.",
      "type": "object",
      "properties": {
        "partitionColumnName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionUpperBound": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        },
        "partitionLowerBound": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string)."
        }
      }
    },
    "VerticaSource": {
      "description": "A copy activity Vertica source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "SalesforceMarketingCloudSource": {
      "description": "A copy activity Salesforce Marketing Cloud source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "ResponsysSource": {
      "description": "A copy activity Responsys source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "DynamicsAXSource": {
      "description": "A copy activity Dynamics AX source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        },
        "httpRequestTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      }
    },
    "OracleServiceCloudSource": {
      "description": "A copy activity Oracle Service Cloud source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "GoogleAdWordsSource": {
      "description": "A copy activity Google AdWords service source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to retrieve data from source. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AmazonRedshiftSource": {
      "description": "A copy activity source for Amazon Redshift Source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "redshiftUnloadSettings": {
          "description": "The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.",
          "$ref": "#/definitions/RedshiftUnloadSettings"
        }
      }
    },
    "LakeHouseTableSource": {
      "description": "A copy activity source for Microsoft Fabric LakeHouse Table.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "timestampAsOf": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Query an older snapshot by timestamp. Type: string (or Expression with resultType string)."
        },
        "versionAsOf": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Query an older snapshot by version. Type: integer (or Expression with resultType integer)."
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "RedshiftUnloadSettings": {
      "description": "The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.",
      "type": "object",
      "properties": {
        "s3LinkedServiceName": {
          "description": "The name of the Amazon S3 linked service which will be used for the unload operation when copying from the Amazon Redshift source.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "bucketName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "s3LinkedServiceName",
        "bucketName"
      ]
    },
    "SnowflakeSource": {
      "description": "A copy activity snowflake source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Snowflake Sql query. Type: string (or Expression with resultType string)."
        },
        "exportSettings": {
          "$ref": "#/definitions/SnowflakeExportCopyCommand",
          "description": "Snowflake export settings."
        }
      },
      "required": [
        "exportSettings"
      ]
    },
    "ExportSettings": {
      "description": "Export command settings.",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The export setting type."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "SnowflakeExportCopyCommand": {
      "description": "Snowflake export command settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExportSettings"
        }
      ],
      "properties": {
        "additionalCopyOptions": {
          "type": "object",
          "x-ms-format": "dfe-key-value-pairs",
          "description": "Additional copy options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: \"additionalCopyOptions\": { \"DATE_FORMAT\": \"MM/DD/YYYY\", \"TIME_FORMAT\": \"'HH24:MI:SS.FF'\" }",
          "additionalProperties": {
            "type": "object"
          }
        },
        "additionalFormatOptions": {
          "type": "object",
          "x-ms-format": "dfe-key-value-pairs",
          "description": "Additional format options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: \"additionalFormatOptions\": { \"OVERWRITE\": \"TRUE\", \"MAX_FILE_SIZE\": \"'FALSE'\" }",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "AzureDatabricksDeltaLakeSource": {
      "description": "A copy activity Azure Databricks Delta Lake source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Azure Databricks Delta Lake Sql query. Type: string (or Expression with resultType string)."
        },
        "exportSettings": {
          "$ref": "#/definitions/AzureDatabricksDeltaLakeExportCommand",
          "description": "Azure Databricks Delta Lake export settings."
        }
      }
    },
    "AzureDatabricksDeltaLakeExportCommand": {
      "description": "Azure Databricks Delta Lake export command settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExportSettings"
        }
      ],
      "properties": {
        "dateFormat": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the date format for the csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string)."
        },
        "timestampFormat": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the timestamp format for the csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzureDatabricksDeltaLakeSink": {
      "description": "A copy activity Azure Databricks Delta Lake sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "importSettings": {
          "$ref": "#/definitions/AzureDatabricksDeltaLakeImportCommand",
          "description": "Azure Databricks Delta Lake import settings."
        }
      }
    },
    "AzureDatabricksDeltaLakeImportCommand": {
      "description": "Azure Databricks Delta Lake import command settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImportSettings"
        }
      ],
      "properties": {
        "dateFormat": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the date format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string)."
        },
        "timestampFormat": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specify the timestamp format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string)."
        }
      }
    },
    "StoredProcedureParameter": {
      "description": "SQL stored procedure parameter.",
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Stored procedure parameter value. Type: string (or Expression with resultType string)."
        },
        "type": {
          "description": "Stored procedure parameter type.",
          "$ref": "#/definitions/StoredProcedureParameterType"
        }
      }
    },
    "StoredProcedureParameterType": {
      "description": "Stored procedure parameter type.",
      "type": "string",
      "enum": [
        "String",
        "Int",
        "Int64",
        "Decimal",
        "Guid",
        "Boolean",
        "Date"
      ],
      "x-ms-enum": {
        "name": "StoredProcedureParameterType",
        "modelAsString": true
      }
    },
    "CopySink": {
      "discriminator": "type",
      "description": "A copy activity sink.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Copy sink type."
        },
        "writeBatchSize": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Write batch size. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "writeBatchTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Write batch timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "sinkRetryCount": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Sink retry count. Type: integer (or Expression with resultType integer)."
        },
        "sinkRetryWait": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Sink retry wait. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "maxConcurrentConnections": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "The maximum concurrent connection count for the sink data store. Type: integer (or Expression with resultType integer)."
        },
        "disableMetricsCollection": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, disable data store metrics collection. Default is false. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "SapCloudForCustomerSink": {
      "description": "A copy activity SAP Cloud for Customer sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "description": "The write behavior for the operation. Default is 'Insert'.",
          "type": "string",
          "enum": [
            "Insert",
            "Update"
          ],
          "x-ms-enum": {
            "name": "SapCloudForCustomerSinkWriteBehavior",
            "modelAsString": true
          }
        },
        "httpRequestTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      }
    },
    "AzureQueueSink": {
      "description": "A copy activity Azure Queue sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {}
    },
    "CopyBehaviorType": {
      "description": "All available types of copy behavior.",
      "type": "string",
      "enum": [
        "PreserveHierarchy",
        "FlattenHierarchy",
        "MergeFiles"
      ],
      "x-ms-enum": {
        "name": "CopyBehaviorType",
        "modelAsString": true
      }
    },
    "AzureTableSink": {
      "description": "A copy activity Azure Table sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "azureTableDefaultPartitionKeyValue": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Azure Table default partition key value. Type: string (or Expression with resultType string)."
        },
        "azureTablePartitionKeyName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Azure Table partition key name. Type: string (or Expression with resultType string)."
        },
        "azureTableRowKeyName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Azure Table row key name. Type: string (or Expression with resultType string)."
        },
        "azureTableInsertType": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Azure Table insert type. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AvroSink": {
      "description": "A copy activity Avro sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreWriteSettings",
          "description": "Avro store settings."
        },
        "formatSettings": {
          "$ref": "#/definitions/AvroWriteSettings",
          "description": "Avro format settings."
        }
      }
    },
    "ParquetSink": {
      "description": "A copy activity Parquet sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreWriteSettings",
          "description": "Parquet store settings."
        },
        "formatSettings": {
          "$ref": "#/definitions/ParquetWriteSettings",
          "description": "Parquet format settings."
        }
      }
    },
    "BinarySink": {
      "description": "A copy activity Binary sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "storeSettings": {
          "$ref": "#/definitions/StoreWriteSettings",
          "description": "Binary store settings."
        }
      }
    },
    "BlobSink": {
      "description": "A copy activity Azure Blob sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "blobWriterOverwriteFiles": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Blob writer overwrite files. Type: boolean (or Expression with resultType boolean)."
        },
        "blobWriterDateTimeFormat": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Blob writer date time format. Type: string (or Expression with resultType string)."
        },
        "blobWriterAddHeader": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Blob writer add header. Type: boolean (or Expression with resultType boolean)."
        },
        "copyBehavior": {
          "description": "The type of copy behavior for copy sink.",
          "type": "object"
        },
        "metadata": {
          "type": "array",
          "description": "Specify the custom metadata to be added to sink data. Type: array of objects (or Expression with resultType array of objects).",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "FileSystemSink": {
      "description": "A copy activity file system sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "copyBehavior": {
          "description": "The type of copy behavior for copy sink.",
          "type": "object",
          "x-ms-format": "dfe-string"
        }
      }
    },
    "DocumentDbCollectionSink": {
      "description": "A copy activity Document Database Collection sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "nestingSeparator": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string)."
        },
        "writeBehavior": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Describes how to write data to Azure Cosmos DB. Type: string (or Expression with resultType string). Allowed values: insert and upsert."
        }
      }
    },
    "CosmosDbSqlApiSink": {
      "description": "A copy activity Azure CosmosDB (SQL API) Collection sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Describes how to write data to Azure Cosmos DB. Type: string (or Expression with resultType string). Allowed values: insert and upsert."
        }
      }
    },
    "SqlSink": {
      "description": "A copy activity SQL sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "sqlWriterStoredProcedureName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL writer stored procedure name. Type: string (or Expression with resultType string)."
        },
        "sqlWriterTableType": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL writer table type. Type: string (or Expression with resultType string)."
        },
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "SQL stored procedure parameters.",
          "type": "object"
        },
        "storedProcedureTableTypeParameterName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The stored procedure parameter name of the table type. Type: string (or Expression with resultType string)."
        },
        "tableOption": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string)."
        },
        "sqlWriterUseTableLock": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean)."
        },
        "writeBehavior": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Write behavior when copying data into sql. Type: string (or Expression with resultType string)."
        },
        "upsertSettings": {
          "description": "SQL upsert settings.",
          "type": "object",
          "$ref": "#/definitions/SqlUpsertSettings"
        }
      }
    },
    "SqlServerSink": {
      "description": "A copy activity SQL server sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "sqlWriterStoredProcedureName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL writer stored procedure name. Type: string (or Expression with resultType string)."
        },
        "sqlWriterTableType": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL writer table type. Type: string (or Expression with resultType string)."
        },
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "SQL stored procedure parameters.",
          "type": "object"
        },
        "storedProcedureTableTypeParameterName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The stored procedure parameter name of the table type. Type: string (or Expression with resultType string)."
        },
        "tableOption": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string)."
        },
        "sqlWriterUseTableLock": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean)."
        },
        "writeBehavior": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Write behavior when copying data into sql server. Type: string (or Expression with resultType string)."
        },
        "upsertSettings": {
          "description": "SQL upsert settings.",
          "type": "object",
          "$ref": "#/definitions/SqlUpsertSettings"
        }
      }
    },
    "AzureSqlSink": {
      "description": "A copy activity Azure SQL sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "sqlWriterStoredProcedureName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL writer stored procedure name. Type: string (or Expression with resultType string)."
        },
        "sqlWriterTableType": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL writer table type. Type: string (or Expression with resultType string)."
        },
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "SQL stored procedure parameters.",
          "type": "object"
        },
        "storedProcedureTableTypeParameterName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The stored procedure parameter name of the table type. Type: string (or Expression with resultType string)."
        },
        "tableOption": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string)."
        },
        "sqlWriterUseTableLock": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean)."
        },
        "writeBehavior": {
          "type": "object",
          "description": "Write behavior when copying data into Azure SQL. Type: SqlWriteBehaviorEnum (or Expression with resultType SqlWriteBehaviorEnum)"
        },
        "upsertSettings": {
          "description": "SQL upsert settings.",
          "type": "object",
          "$ref": "#/definitions/SqlUpsertSettings"
        }
      }
    },
    "SqlMISink": {
      "description": "A copy activity Azure SQL Managed Instance sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "sqlWriterStoredProcedureName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL writer stored procedure name. Type: string (or Expression with resultType string)."
        },
        "sqlWriterTableType": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL writer table type. Type: string (or Expression with resultType string)."
        },
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "SQL stored procedure parameters.",
          "type": "object"
        },
        "storedProcedureTableTypeParameterName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The stored procedure parameter name of the table type. Type: string (or Expression with resultType string)."
        },
        "tableOption": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string)."
        },
        "sqlWriterUseTableLock": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean)."
        },
        "writeBehavior": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "White behavior when copying data into azure SQL MI. Type: string (or Expression with resultType string)"
        },
        "upsertSettings": {
          "description": "SQL upsert settings.",
          "type": "object",
          "$ref": "#/definitions/SqlUpsertSettings"
        }
      }
    },
    "SqlDWSink": {
      "description": "A copy activity SQL Data Warehouse sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "allowPolyBase": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean)."
        },
        "polyBaseSettings": {
          "description": "Specifies PolyBase-related settings when allowPolyBase is true.",
          "$ref": "#/definitions/PolybaseSettings"
        },
        "allowCopyCommand": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Indicates to use Copy Command to copy data into SQL Data Warehouse. Type: boolean (or Expression with resultType boolean)."
        },
        "copyCommandSettings": {
          "description": "Specifies Copy Command related settings when allowCopyCommand is true.",
          "$ref": "#/definitions/DWCopyCommandSettings"
        },
        "tableOption": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string)."
        },
        "sqlWriterUseTableLock": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to use table lock during bulk copy. Type: boolean (or Expression with resultType boolean)."
        },
        "writeBehavior": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Write behavior when copying data into azure SQL DW. Type: SqlDWWriteBehaviorEnum (or Expression with resultType SqlDWWriteBehaviorEnum)"
        },
        "upsertSettings": {
          "description": "SQL DW upsert settings.",
          "type": "object",
          "x-ms-format": "dfe-list-string",
          "$ref": "#/definitions/SqlDWUpsertSettings"
        }
      }
    },
    "PolybaseSettings": {
      "description": "PolyBase settings.",
      "type": "object",
      "properties": {
        "rejectType": {
          "$ref": "#/definitions/PolybaseSettingsRejectType",
          "description": "Reject type."
        },
        "rejectValue": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0."
        },
        "rejectSampleValue": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0."
        },
        "useTypeDefault": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "PolybaseSettingsRejectType": {
      "description": "Indicates whether the RejectValue property is specified as a literal value or a percentage.",
      "type": "string",
      "enum": [
        "value",
        "percentage"
      ],
      "x-ms-enum": {
        "name": "PolybaseSettingsRejectType",
        "modelAsString": true
      }
    },
    "DWCopyCommandSettings": {
      "description": "DW Copy Command settings.",
      "type": "object",
      "properties": {
        "defaultValues": {
          "type": "array",
          "description": "Specifies the default values for each target column in SQL DW. The default values in the property overwrite the DEFAULT constraint set in the DB, and identity column cannot have a default value. Type: array of objects (or Expression with resultType array of objects).",
          "items": {
            "$ref": "#/definitions/DWCopyCommandDefaultValue"
          },
          "x-ms-identifiers": [
            "columnName"
          ]
        },
        "additionalOptions": {
          "type": "object",
          "x-ms-format": "dfe-key-value-pairs",
          "description": "Additional options directly passed to SQL DW in Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: \"additionalOptions\": { \"MAXERRORS\": \"1000\", \"DATEFORMAT\": \"'ymd'\" }",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DWCopyCommandDefaultValue": {
      "description": "Default value.",
      "type": "object",
      "properties": {
        "columnName": {
          "type": "object",
          "description": "Column name. Type: object (or Expression with resultType string)."
        },
        "defaultValue": {
          "type": "object",
          "description": "The default value of the column. Type: object (or Expression with resultType string)."
        }
      }
    },
    "SqlUpsertSettings": {
      "description": "Sql upsert option settings",
      "type": "object",
      "properties": {
        "useTempDB": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Specifies whether to use temp db for upsert interim table. Type: boolean (or Expression with resultType boolean)."
        },
        "interimSchemaName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Schema name for interim table. Type: string (or Expression with resultType string)."
        },
        "keys": {
          "type": "object",
          "x-ms-format": "dfe-list-string",
          "description": "Key column names for unique row identification. Type: array of strings (or Expression with resultType array of strings)."
        }
      }
    },
    "SqlDWUpsertSettings": {
      "description": "Sql DW upsert option settings",
      "type": "object",
      "properties": {
        "interimSchemaName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Schema name for interim table. Type: string (or Expression with resultType string)."
        },
        "keys": {
          "type": "object",
          "x-ms-format": "dfe-list-string",
          "description": "Key column names for unique row identification. Type: array of strings (or Expression with resultType array of strings)."
        }
      }
    },
    "SqlWriteBehaviorEnum": {
      "description": "Specify the write behavior when copying data into sql.",
      "type": "string",
      "enum": [
        "Insert",
        "Upsert",
        "StoredProcedure"
      ],
      "x-ms-enum": {
        "name": "SqlWriteBehaviorEnum",
        "modelAsString": true
      }
    },
    "SqlDWWriteBehaviorEnum": {
      "description": "Specify the write behavior when copying data into sql dw.",
      "type": "string",
      "enum": [
        "Insert",
        "Upsert"
      ],
      "x-ms-enum": {
        "name": "SqlDWWriteBehaviorEnum",
        "modelAsString": true
      }
    },
    "SnowflakeSink": {
      "description": "A copy activity snowflake sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        },
        "importSettings": {
          "$ref": "#/definitions/SnowflakeImportCopyCommand",
          "description": "Snowflake import settings."
        }
      }
    },
    "ImportSettings": {
      "description": "Import command settings.",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The import setting type."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "SnowflakeImportCopyCommand": {
      "description": "Snowflake import command settings.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ImportSettings"
        }
      ],
      "properties": {
        "additionalCopyOptions": {
          "type": "object",
          "x-ms-format": "dfe-key-value-pairs",
          "description": "Additional copy options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: \"additionalCopyOptions\": { \"DATE_FORMAT\": \"MM/DD/YYYY\", \"TIME_FORMAT\": \"'HH24:MI:SS.FF'\" }",
          "additionalProperties": {
            "type": "object"
          }
        },
        "additionalFormatOptions": {
          "type": "object",
          "x-ms-format": "dfe-key-value-pairs",
          "description": "Additional format options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: \"additionalFormatOptions\": { \"FORCE\": \"TRUE\", \"LOAD_UNCERTAIN_FILES\": \"'FALSE'\" }",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "LogStorageSettings": {
      "description": "(Deprecated. Please use LogSettings) Log storage settings.",
      "type": "object",
      "properties": {
        "linkedServiceName": {
          "description": "Log storage linked service reference.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "path": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string)."
        },
        "logLevel": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string)."
        },
        "enableReliableLogging": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "linkedServiceName"
      ]
    },
    "LogSettings": {
      "description": "Log settings.",
      "type": "object",
      "properties": {
        "enableCopyActivityLog": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Specifies whether to enable copy activity log. Type: boolean (or Expression with resultType boolean)."
        },
        "copyActivityLogSettings": {
          "description": "Specifies settings for copy activity log.",
          "$ref": "#/definitions/CopyActivityLogSettings"
        },
        "logLocationSettings": {
          "description": "Log location settings customer needs to provide when enabling log.",
          "$ref": "#/definitions/LogLocationSettings"
        }
      },
      "required": [
        "logLocationSettings"
      ]
    },
    "LogLocationSettings": {
      "description": "Log location settings.",
      "type": "object",
      "properties": {
        "linkedServiceName": {
          "description": "Log storage linked service reference.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "path": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "linkedServiceName"
      ]
    },
    "CopyActivityLogSettings": {
      "description": "Settings for copy activity log.",
      "type": "object",
      "properties": {
        "logLevel": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string)."
        },
        "enableReliableLogging": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "StagingSettings": {
      "description": "Staging settings.",
      "type": "object",
      "properties": {
        "linkedServiceName": {
          "description": "Staging linked service reference.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "path": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The path to storage for storing the interim data. Type: string (or Expression with resultType string)."
        },
        "enableCompression": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "linkedServiceName"
      ]
    },
    "RedirectIncompatibleRowSettings": {
      "description": "Redirect incompatible row settings",
      "type": "object",
      "properties": {
        "linkedServiceName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string)."
        },
        "path": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string)."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "linkedServiceName"
      ]
    },
    "SkipErrorFile": {
      "description": "Skip error file.",
      "type": "object",
      "properties": {
        "fileMissing": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Skip if file is deleted by other client during copy. Default is true. Type: boolean (or Expression with resultType boolean)."
        },
        "dataInconsistency": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Skip if source/sink file changed by other concurrent write. Default is false. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "AdditionalColumns": {
      "description": "Specify the column name and value of additional columns.",
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Additional column name. Type: string (or Expression with resultType string)."
        },
        "value": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Additional column value. Type: string (or Expression with resultType string)."
        }
      }
    },
    "OracleSink": {
      "description": "A copy activity Oracle sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SQL pre-copy script. Type: string (or Expression with resultType string)."
        }
      }
    },
    "AzureDataLakeStoreSink": {
      "description": "A copy activity Azure Data Lake Store sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "copyBehavior": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The type of copy behavior for copy sink. Type: string (or Expression with resultType string)."
        },
        "enableAdlsSingleFileParallel": {
          "description": "Single File Parallel.",
          "type": "object",
          "x-ms-format": "dfe-bool"
        }
      }
    },
    "AzureBlobFSSink": {
      "description": "A copy activity Azure Data Lake Storage Gen2 sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "copyBehavior": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The type of copy behavior for copy sink. Type: string (or Expression with resultType string)."
        },
        "metadata": {
          "type": "array",
          "description": "Specify the custom metadata to be added to sink data. Type: array of objects (or Expression with resultType array of objects).",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "AzureSearchIndexSink": {
      "description": "A copy activity Azure Search Index sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "description": "Specify the write behavior when upserting documents into Azure Search Index.",
          "type": "string",
          "enum": [
            "Merge",
            "Upload"
          ],
          "x-ms-enum": {
            "name": "AzureSearchIndexWriteBehaviorType",
            "modelAsString": true
          }
        }
      }
    },
    "OdbcSink": {
      "description": "A copy activity ODBC sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to execute before starting the copy. Type: string (or Expression with resultType string)."
        }
      }
    },
    "InformixSink": {
      "description": "A copy activity Informix sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to execute before starting the copy. Type: string (or Expression with resultType string)."
        }
      }
    },
    "MicrosoftAccessSink": {
      "description": "A copy activity Microsoft Access sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "preCopyScript": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A query to execute before starting the copy. Type: string (or Expression with resultType string)."
        }
      }
    },
    "DynamicsSinkWriteBehavior": {
      "description": "Defines values for DynamicsSinkWriteBehavior.",
      "type": "string",
      "enum": [
        "Upsert"
      ],
      "x-ms-enum": {
        "name": "DynamicsSinkWriteBehavior",
        "modelAsString": true
      }
    },
    "DynamicsSink": {
      "description": "A copy activity Dynamics sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "description": "The write behavior for the operation.",
          "$ref": "#/definitions/DynamicsSinkWriteBehavior"
        },
        "ignoreNullValues": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "alternateKeyName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "writeBehavior"
      ]
    },
    "DynamicsCrmSink": {
      "description": "A copy activity Dynamics CRM sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "description": "The write behavior for the operation.",
          "$ref": "#/definitions/DynamicsSinkWriteBehavior"
        },
        "ignoreNullValues": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "The flag indicating whether to ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "alternateKeyName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "writeBehavior"
      ]
    },
    "CommonDataServiceForAppsSink": {
      "description": "A copy activity Common Data Service for Apps sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "description": "The write behavior for the operation.",
          "$ref": "#/definitions/DynamicsSinkWriteBehavior"
        },
        "ignoreNullValues": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "The flag indicating whether to ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "alternateKeyName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "writeBehavior"
      ]
    },
    "AzureDataExplorerSink": {
      "description": "A copy activity Azure Data Explorer sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "ingestionMappingName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A name of a pre-created csv mapping that was defined on the target Kusto table. Type: string."
        },
        "ingestionMappingAsJson": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "An explicit column mapping description provided in a json format. Type: string."
        },
        "flushImmediately": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If set to true, any aggregation will be skipped. Default is false. Type: boolean."
        }
      }
    },
    "SalesforceSink": {
      "description": "A copy activity Salesforce sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "description": "The write behavior for the operation. Default is Insert.",
          "type": "string",
          "enum": [
            "Insert",
            "Upsert"
          ],
          "x-ms-enum": {
            "name": "SalesforceSinkWriteBehavior",
            "modelAsString": true
          }
        },
        "externalIdFieldName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string)."
        },
        "ignoreNullValues": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "SalesforceServiceCloudSink": {
      "description": "A copy activity Salesforce Service Cloud sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "description": "The write behavior for the operation. Default is Insert.",
          "type": "string",
          "enum": [
            "Insert",
            "Upsert"
          ],
          "x-ms-enum": {
            "name": "SalesforceSinkWriteBehavior",
            "modelAsString": true
          }
        },
        "externalIdFieldName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string)."
        },
        "ignoreNullValues": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "MongoDbAtlasSink": {
      "description": "A copy activity MongoDB Atlas sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is \"insert\". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string)."
        }
      }
    },
    "MongoDbV2Sink": {
      "description": "A copy activity MongoDB sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is \"insert\". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string)."
        }
      }
    },
    "CosmosDbMongoDbApiSink": {
      "description": "A copy activity sink for a CosmosDB (MongoDB API) database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is \"insert\". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string)."
        }
      }
    },
    "LakeHouseTableSink": {
      "description": "A copy activity for Microsoft Fabric LakeHouse Table sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "tableActionOption": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The type of table action for LakeHouse Table sink. Possible values include: \"None\", \"Append\", \"Overwrite\"."
        },
        "partitionOption": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Create partitions in folder structure based on one or multiple columns. Each distinct column value (pair) will be a new partition. Possible values include: \"None\", \"PartitionByKey\"."
        },
        "partitionNameList": {
          "type": "object",
          "description": "Specify the partition column names from sink columns. Type: array of objects (or Expression with resultType array of objects)."
        }
      }
    },
    "CopyTranslator": {
      "discriminator": "type",
      "description": "A copy activity translator.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Copy translator type."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type"
      ]
    },
    "TabularTranslator": {
      "description": "A copy activity tabular translator.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopyTranslator"
        }
      ],
      "properties": {
        "columnMappings": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Column mappings. Example: \"UserId: MyUserId, Group: MyGroup, Name: MyName\" Type: string (or Expression with resultType string). This property will be retired. Please use mappings property."
        },
        "schemaMapping": {
          "type": "object",
          "description": "The schema mapping to map between tabular data and hierarchical data. Example: {\"Column1\": \"$.Column1\", \"Column2\": \"$.Column2.Property1\", \"Column3\": \"$.Column2.Property2\"}. Type: object (or Expression with resultType object). This property will be retired. Please use mappings property."
        },
        "collectionReference": {
          "type": "object",
          "description": "The JSON Path of the Nested Array that is going to do cross-apply. Type: object (or Expression with resultType object)."
        },
        "mapComplexValuesToString": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to map complex (array and object) values to simple strings in json format. Type: boolean (or Expression with resultType boolean)."
        },
        "mappings": {
          "type": "object",
          "description": "Column mappings with logical types. Tabular->tabular example: [{\"source\":{\"name\":\"CustomerName\",\"type\":\"String\"},\"sink\":{\"name\":\"ClientName\",\"type\":\"String\"}},{\"source\":{\"name\":\"CustomerAddress\",\"type\":\"String\"},\"sink\":{\"name\":\"ClientAddress\",\"type\":\"String\"}}].  Hierarchical->tabular example: [{\"source\":{\"path\":\"$.CustomerName\",\"type\":\"String\"},\"sink\":{\"name\":\"ClientName\",\"type\":\"String\"}},{\"source\":{\"path\":\"$.CustomerAddress\",\"type\":\"String\"},\"sink\":{\"name\":\"ClientAddress\",\"type\":\"String\"}}]. Type: object (or Expression with resultType object)."
        },
        "typeConversion": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to enable the advanced type conversion feature in the Copy activity. Type: boolean (or Expression with resultType boolean)."
        },
        "typeConversionSettings": {
          "description": "Type conversion settings",
          "$ref": "#/definitions/TypeConversionSettings"
        }
      }
    },
    "TypeConversionSettings": {
      "description": "Type conversion settings",
      "type": "object",
      "properties": {
        "allowDataTruncation": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to allow data truncation when converting the data. Type: boolean (or Expression with resultType boolean)."
        },
        "treatBooleanAsNumber": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to treat boolean values as numbers. Type: boolean (or Expression with resultType boolean)."
        },
        "dateTimeFormat": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The format for DateTime values. Type: string (or Expression with resultType string)."
        },
        "dateTimeOffsetFormat": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The format for DateTimeOffset values. Type: string (or Expression with resultType string)."
        },
        "timeSpanFormat": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The format for TimeSpan values. Type: string (or Expression with resultType string)."
        },
        "culture": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The culture used to convert data from/to string. Type: string (or Expression with resultType string)."
        }
      }
    },
    "HDInsightHiveActivity": {
      "description": "HDInsight Hive activity type.",
      "x-ms-discriminator-value": "HDInsightHive",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "HDInsight Hive activity properties.",
          "$ref": "#/definitions/HDInsightHiveActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightHiveActivityTypeProperties": {
      "description": "HDInsight Hive activity properties.",
      "properties": {
        "storageLinkedServices": {
          "description": "Storage linked service references.",
          "type": "array",
          "items": {
            "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
          },
          "x-ms-identifiers": [
            "referenceName"
          ]
        },
        "arguments": {
          "description": "User specified arguments to HDInsightActivity.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "getDebugInfo": {
          "$ref": "#/definitions/HDInsightActivityDebugInfoOption",
          "description": "Debug info option."
        },
        "scriptPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Script path. Type: string (or Expression with resultType string)."
        },
        "scriptLinkedService": {
          "description": "Script linked service reference.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "defines": {
          "description": "Allows user to specify defines for Hive job request.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "variables": {
          "description": "User specified arguments under hivevar namespace.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "queryTimeout": {
          "type": "integer",
          "description": "Query timeout value (in minutes).  Effective when the HDInsight cluster is with ESP (Enterprise Security Package)"
        }
      }
    },
    "HDInsightActivityDebugInfoOption": {
      "description": "The HDInsightActivityDebugInfoOption settings to use.",
      "type": "string",
      "enum": [
        "None",
        "Always",
        "Failure"
      ],
      "x-ms-enum": {
        "name": "HDInsightActivityDebugInfoOption",
        "modelAsString": true
      }
    },
    "HDInsightPigActivity": {
      "description": "HDInsight Pig activity type.",
      "x-ms-discriminator-value": "HDInsightPig",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "HDInsight Pig activity properties.",
          "$ref": "#/definitions/HDInsightPigActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightPigActivityTypeProperties": {
      "description": "HDInsight Pig activity properties.",
      "properties": {
        "storageLinkedServices": {
          "description": "Storage linked service references.",
          "type": "array",
          "items": {
            "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
          },
          "x-ms-identifiers": [
            "referenceName"
          ]
        },
        "arguments": {
          "type": "object",
          "x-ms-format": "dfe-list-string",
          "description": "User specified arguments to HDInsightActivity. Type: array (or Expression with resultType array)."
        },
        "getDebugInfo": {
          "$ref": "#/definitions/HDInsightActivityDebugInfoOption",
          "description": "Debug info option."
        },
        "scriptPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Script path. Type: string (or Expression with resultType string)."
        },
        "scriptLinkedService": {
          "description": "Script linked service reference.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "defines": {
          "description": "Allows user to specify defines for Pig job request.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      }
    },
    "HDInsightMapReduceActivity": {
      "description": "HDInsight MapReduce activity type.",
      "x-ms-discriminator-value": "HDInsightMapReduce",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "HDInsight MapReduce activity properties.",
          "$ref": "#/definitions/HDInsightMapReduceActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightMapReduceActivityTypeProperties": {
      "description": "HDInsight MapReduce activity properties.",
      "properties": {
        "storageLinkedServices": {
          "description": "Storage linked service references.",
          "type": "array",
          "items": {
            "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
          },
          "x-ms-identifiers": [
            "referenceName"
          ]
        },
        "arguments": {
          "description": "User specified arguments to HDInsightActivity.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "getDebugInfo": {
          "$ref": "#/definitions/HDInsightActivityDebugInfoOption",
          "description": "Debug info option."
        },
        "className": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Class name. Type: string (or Expression with resultType string)."
        },
        "jarFilePath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Jar path. Type: string (or Expression with resultType string)."
        },
        "jarLinkedService": {
          "description": "Jar linked service reference.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "jarLibs": {
          "description": "Jar libs.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "defines": {
          "description": "Allows user to specify defines for the MapReduce job request.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      },
      "required": [
        "className",
        "jarFilePath"
      ]
    },
    "HDInsightStreamingActivity": {
      "description": "HDInsight streaming activity type.",
      "x-ms-discriminator-value": "HDInsightStreaming",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "HDInsight streaming activity properties.",
          "$ref": "#/definitions/HDInsightStreamingActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightStreamingActivityTypeProperties": {
      "description": "HDInsight streaming activity properties.",
      "properties": {
        "storageLinkedServices": {
          "description": "Storage linked service references.",
          "type": "array",
          "items": {
            "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
          },
          "x-ms-identifiers": [
            "referenceName"
          ]
        },
        "arguments": {
          "description": "User specified arguments to HDInsightActivity.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "getDebugInfo": {
          "$ref": "#/definitions/HDInsightActivityDebugInfoOption",
          "description": "Debug info option."
        },
        "mapper": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Mapper executable name. Type: string (or Expression with resultType string)."
        },
        "reducer": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Reducer executable name. Type: string (or Expression with resultType string)."
        },
        "input": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Input blob path. Type: string (or Expression with resultType string)."
        },
        "output": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Output blob path. Type: string (or Expression with resultType string)."
        },
        "filePaths": {
          "description": "Paths to streaming job files. Can be directories.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "fileLinkedService": {
          "description": "Linked service reference where the files are located.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "combiner": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Combiner executable name. Type: string (or Expression with resultType string)."
        },
        "commandEnvironment": {
          "description": "Command line environment values.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "defines": {
          "description": "Allows user to specify defines for streaming job request.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      },
      "required": [
        "mapper",
        "reducer",
        "input",
        "output",
        "filePaths"
      ]
    },
    "HDInsightSparkActivity": {
      "description": "HDInsight Spark activity.",
      "x-ms-discriminator-value": "HDInsightSpark",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "HDInsight spark activity properties.",
          "$ref": "#/definitions/HDInsightSparkActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "HDInsightSparkActivityTypeProperties": {
      "description": "HDInsight spark activity properties.",
      "properties": {
        "rootPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The root path in 'sparkJobLinkedService' for all the job’s files. Type: string (or Expression with resultType string)."
        },
        "entryFilePath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string)."
        },
        "arguments": {
          "description": "The user-specified arguments to HDInsightSparkActivity.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "getDebugInfo": {
          "$ref": "#/definitions/HDInsightActivityDebugInfoOption",
          "description": "Debug info option."
        },
        "sparkJobLinkedService": {
          "description": "The storage linked service for uploading the entry file and dependencies, and for receiving logs.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "className": {
          "description": "The application's Java/Spark main class.",
          "type": "string"
        },
        "proxyUser": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The user to impersonate that will execute the job. Type: string (or Expression with resultType string)."
        },
        "sparkConfig": {
          "description": "Spark configuration property.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      },
      "required": [
        "rootPath",
        "entryFilePath"
      ]
    },
    "ExecuteSSISPackageActivity": {
      "description": "Execute SSIS package activity.",
      "x-ms-discriminator-value": "ExecuteSSISPackage",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Execute SSIS package activity properties.",
          "$ref": "#/definitions/ExecuteSSISPackageActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ExecuteSSISPackageActivityTypeProperties": {
      "description": "Execute SSIS package activity properties.",
      "properties": {
        "packageLocation": {
          "description": "SSIS package location.",
          "$ref": "#/definitions/SSISPackageLocation"
        },
        "runtime": {
          "x-ms-format": "dfe-string",
          "description": "Specifies the runtime to execute SSIS package. The value should be \"x86\" or \"x64\". Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "loggingLevel": {
          "x-ms-format": "dfe-string",
          "description": "The logging level of SSIS package execution. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "environmentPath": {
          "x-ms-format": "dfe-string",
          "description": "The environment path to execute the SSIS package. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "executionCredential": {
          "description": "The package execution credential.",
          "$ref": "#/definitions/SSISExecutionCredential"
        },
        "connectVia": {
          "description": "The integration runtime reference.",
          "$ref": "../datafactory.json#/definitions/IntegrationRuntimeReference"
        },
        "projectParameters": {
          "description": "The project level parameters to execute the SSIS package.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SSISExecutionParameter"
          }
        },
        "packageParameters": {
          "description": "The package level parameters to execute the SSIS package.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SSISExecutionParameter"
          }
        },
        "projectConnectionManagers": {
          "description": "The project level connection managers to execute the SSIS package.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SSISConnectionManager"
          }
        },
        "packageConnectionManagers": {
          "description": "The package level connection managers to execute the SSIS package.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SSISConnectionManager"
          }
        },
        "propertyOverrides": {
          "description": "The property overrides to execute the SSIS package.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SSISPropertyOverride"
          }
        },
        "logLocation": {
          "description": "SSIS package execution log location.",
          "$ref": "#/definitions/SSISLogLocation"
        }
      },
      "required": [
        "packageLocation",
        "connectVia"
      ]
    },
    "SSISPackageLocation": {
      "description": "SSIS package location.",
      "type": "object",
      "properties": {
        "packagePath": {
          "x-ms-format": "dfe-string",
          "description": "The SSIS package path. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "type": {
          "description": "The type of SSIS package location.",
          "type": "string",
          "enum": [
            "SSISDB",
            "File",
            "InlinePackage",
            "PackageStore"
          ],
          "x-ms-enum": {
            "name": "SsisPackageLocationType",
            "modelAsString": true
          }
        },
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "SSIS package location properties.",
          "$ref": "#/definitions/SSISPackageLocationTypeProperties"
        }
      }
    },
    "SSISPackageLocationTypeProperties": {
      "description": "SSIS package location properties.",
      "type": "object",
      "properties": {
        "packagePassword": {
          "$ref": "../datafactory.json#/definitions/SecretBase",
          "description": "Password of the package."
        },
        "accessCredential": {
          "description": "The package access credential.",
          "$ref": "#/definitions/SSISAccessCredential"
        },
        "configurationPath": {
          "x-ms-format": "dfe-string",
          "description": "The configuration file of the package execution. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "configurationAccessCredential": {
          "description": "The configuration file access credential.",
          "$ref": "#/definitions/SSISAccessCredential"
        },
        "packageName": {
          "description": "The package name.",
          "type": "string"
        },
        "packageContent": {
          "x-ms-format": "dfe-string",
          "description": "The embedded package content. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "packageLastModifiedDate": {
          "description": "The embedded package last modified date.",
          "type": "string"
        },
        "childPackages": {
          "description": "The embedded child package list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SSISChildPackage"
          },
          "x-ms-identifiers": [
            "packagePath",
            "packageName"
          ]
        }
      }
    },
    "SSISConnectionManager": {
      "description": "SSIS Connection Manager.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/SSISExecutionParameter"
      }
    },
    "SSISExecutionParameter": {
      "description": "SSIS execution parameter.",
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SSIS package execution parameter value. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "value"
      ]
    },
    "SSISPropertyOverride": {
      "description": "SSIS property override.",
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "SSIS package property override value. Type: string (or Expression with resultType string)."
        },
        "isSensitive": {
          "type": "boolean",
          "description": "Whether SSIS package property override value is sensitive data. Value will be encrypted in SSISDB if it is true"
        }
      },
      "required": [
        "value"
      ]
    },
    "SSISExecutionCredential": {
      "description": "SSIS package execution credential.",
      "type": "object",
      "properties": {
        "domain": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Domain for windows authentication. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "UseName for windows authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "$ref": "../datafactory.json#/definitions/SecureString",
          "description": "Password for windows authentication."
        }
      },
      "required": [
        "domain",
        "userName",
        "password"
      ]
    },
    "SSISAccessCredential": {
      "description": "SSIS access credential.",
      "type": "object",
      "properties": {
        "domain": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Domain for windows authentication. Type: string (or Expression with resultType string)."
        },
        "userName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "UseName for windows authentication. Type: string (or Expression with resultType string)."
        },
        "password": {
          "$ref": "../datafactory.json#/definitions/SecretBase",
          "description": "Password for windows authentication."
        }
      },
      "required": [
        "domain",
        "userName",
        "password"
      ]
    },
    "SSISChildPackage": {
      "description": "SSIS embedded child package.",
      "type": "object",
      "properties": {
        "packagePath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Path for embedded child package. Type: string (or Expression with resultType string)."
        },
        "packageName": {
          "type": "string",
          "description": "Name for embedded child package."
        },
        "packageContent": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Content for embedded child package. Type: string (or Expression with resultType string)."
        },
        "packageLastModifiedDate": {
          "type": "string",
          "description": "Last modified date for embedded child package."
        }
      },
      "required": [
        "packagePath",
        "packageContent"
      ]
    },
    "SSISLogLocation": {
      "description": "SSIS package execution log location",
      "type": "object",
      "properties": {
        "logPath": {
          "x-ms-format": "dfe-string",
          "description": "The SSIS package execution log path. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "type": {
          "description": "The type of SSIS log location.",
          "type": "string",
          "enum": [
            "File"
          ],
          "x-ms-enum": {
            "name": "SsisLogLocationType",
            "modelAsString": true
          }
        },
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "SSIS package execution log location properties.",
          "$ref": "#/definitions/SSISLogLocationTypeProperties"
        }
      },
      "required": [
        "logPath",
        "type",
        "typeProperties"
      ]
    },
    "SSISLogLocationTypeProperties": {
      "description": "SSIS package execution log location properties.",
      "type": "object",
      "properties": {
        "accessCredential": {
          "description": "The package execution log access credential.",
          "$ref": "#/definitions/SSISAccessCredential"
        },
        "logRefreshInterval": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      }
    },
    "CustomActivity": {
      "description": "Custom activity type.",
      "x-ms-discriminator-value": "Custom",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Custom activity properties.",
          "$ref": "#/definitions/CustomActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "CustomActivityTypeProperties": {
      "description": "Custom activity properties.",
      "properties": {
        "command": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Command for custom activity Type: string (or Expression with resultType string)."
        },
        "resourceLinkedService": {
          "description": "Resource linked service reference.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "folderPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Folder path for resource files Type: string (or Expression with resultType string)."
        },
        "referenceObjects": {
          "description": "Reference objects",
          "$ref": "#/definitions/CustomActivityReferenceObject"
        },
        "extendedProperties": {
          "description": "User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "retentionTimeInDays": {
          "type": "object",
          "x-ms-format": "dfe-double",
          "description": "The retention time for the files submitted for custom activity. Type: double (or Expression with resultType double)."
        },
        "autoUserSpecification": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Elevation level and scope for the user, default is nonadmin task. Type: string (or Expression with resultType double)."
        }
      },
      "required": [
        "command"
      ]
    },
    "CustomActivityReferenceObject": {
      "description": "Reference objects for custom activity",
      "properties": {
        "linkedServices": {
          "description": "Linked service references.",
          "type": "array",
          "items": {
            "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
          },
          "x-ms-identifiers": [
            "referenceName"
          ]
        },
        "datasets": {
          "description": "Dataset references.",
          "type": "array",
          "items": {
            "$ref": "../datafactory.json#/definitions/DatasetReference"
          },
          "x-ms-identifiers": [
            "referenceName"
          ]
        }
      }
    },
    "SqlServerStoredProcedureActivity": {
      "description": "SQL stored procedure activity type.",
      "x-ms-discriminator-value": "SqlServerStoredProcedure",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "SQL stored procedure activity properties.",
          "$ref": "#/definitions/SqlServerStoredProcedureActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties",
        "linkedServiceName"
      ]
    },
    "SqlServerStoredProcedureActivityTypeProperties": {
      "description": "SQL stored procedure activity properties.",
      "properties": {
        "storedProcedureName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Stored procedure name. Type: string (or Expression with resultType string)."
        },
        "storedProcedureParameters": {
          "description": "Value and type setting for stored procedure parameters. Example: \"{Parameter1: {value: \"1\", type: \"int\"}}\".",
          "type": "object"
        }
      },
      "required": [
        "storedProcedureName"
      ]
    },
    "ExecutePipelineActivity": {
      "x-ms-discriminator-value": "ExecutePipeline",
      "description": "Execute pipeline activity.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "policy": {
          "description": "Execute pipeline activity policy.",
          "$ref": "#/definitions/ExecutePipelineActivityPolicy"
        },
        "typeProperties": {
          "description": "Execute pipeline activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExecutePipelineActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ExecutePipelineActivityPolicy": {
      "description": "Execution policy for an execute pipeline activity.",
      "type": "object",
      "properties": {
        "secureInput": {
          "type": "boolean",
          "description": "When set to true, Input from activity is considered as secure and will not be logged to monitoring."
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "ExecutePipelineActivityTypeProperties": {
      "description": "Execute pipeline activity properties.",
      "properties": {
        "pipeline": {
          "description": "Pipeline reference.",
          "$ref": "../datafactory.json#/definitions/PipelineReference"
        },
        "parameters": {
          "description": "Pipeline parameters.",
          "$ref": "../datafactory.json#/definitions/ParameterValueSpecification"
        },
        "waitOnCompletion": {
          "description": "Defines whether activity execution will wait for the dependent pipeline execution to finish. Default is false.",
          "type": "boolean"
        }
      },
      "required": [
        "pipeline"
      ]
    },
    "DeleteActivity": {
      "x-ms-discriminator-value": "Delete",
      "description": "Delete activity.",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Delete activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DeleteActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "DeleteActivityTypeProperties": {
      "description": "Delete activity properties.",
      "properties": {
        "recursive": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "If true, files or sub-folders under current folder path will be deleted recursively. Default is false. Type: boolean (or Expression with resultType boolean)."
        },
        "maxConcurrentConnections": {
          "type": "integer",
          "minimum": 1,
          "description": "The max concurrent connections to connect data source at the same time."
        },
        "enableLogging": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to record detailed logs of delete-activity execution. Default value is false. Type: boolean (or Expression with resultType boolean)."
        },
        "logStorageSettings": {
          "description": "Log storage settings customer need to provide when enableLogging is true.",
          "$ref": "#/definitions/LogStorageSettings"
        },
        "dataset": {
          "description": "Delete activity dataset reference.",
          "$ref": "../datafactory.json#/definitions/DatasetReference"
        },
        "storeSettings": {
          "$ref": "#/definitions/StoreReadSettings",
          "description": "Delete activity store settings."
        }
      },
      "required": [
        "dataset"
      ]
    },
    "AzureDataExplorerCommandActivity": {
      "x-ms-discriminator-value": "AzureDataExplorerCommand",
      "description": "Azure Data Explorer command activity.",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Data Explorer command activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureDataExplorerCommandActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureDataExplorerCommandActivityTypeProperties": {
      "description": "Azure Data Explorer command activity properties.",
      "properties": {
        "command": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "A control command, according to the Azure Data Explorer command syntax. Type: string (or Expression with resultType string)."
        },
        "commandTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Control command timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..)"
        }
      },
      "required": [
        "command"
      ]
    },
    "LookupActivity": {
      "x-ms-discriminator-value": "Lookup",
      "description": "Lookup activity.",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Lookup activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LookupActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "LookupActivityTypeProperties": {
      "description": "Lookup activity properties.",
      "properties": {
        "source": {
          "description": "Dataset-specific source properties, same as copy activity source.",
          "$ref": "#/definitions/CopySource"
        },
        "dataset": {
          "description": "Lookup activity dataset reference.",
          "$ref": "../datafactory.json#/definitions/DatasetReference"
        },
        "firstRowOnly": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "source",
        "dataset"
      ]
    },
    "WebActivityMethod": {
      "description": "The list of HTTP methods supported by a WebActivity.",
      "type": "string",
      "enum": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "x-ms-enum": {
        "name": "WebActivityMethod",
        "modelAsString": true
      }
    },
    "WebActivity": {
      "x-ms-discriminator-value": "WebActivity",
      "description": "Web activity.",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Web activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WebActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "WebActivityAuthentication": {
      "description": "Web activity authentication properties.",
      "properties": {
        "type": {
          "description": "Web activity authentication (Basic/ClientCertificate/MSI/ServicePrincipal)",
          "type": "string"
        },
        "pfx": {
          "description": "Base64-encoded contents of a PFX file or Certificate when used for ServicePrincipal",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "username": {
          "x-ms-format": "dfe-string",
          "description": "Web activity authentication user name for basic authentication or ClientID when used for ServicePrincipal. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "password": {
          "description": "Password for the PFX file or basic authentication / Secret when used for ServicePrincipal",
          "$ref": "../datafactory.json#/definitions/SecretBase"
        },
        "resource": {
          "x-ms-format": "dfe-string",
          "description": "Resource for which Azure Auth token will be requested when using MSI Authentication. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "userTenant": {
          "x-ms-format": "dfe-string",
          "description": "TenantId for which Azure Auth token will be requested when using ServicePrincipal Authentication. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "credential": {
          "$ref": "../datafactory.json#/definitions/CredentialReference",
          "description": "The credential reference containing authentication information."
        }
      }
    },
    "WebActivityTypeProperties": {
      "description": "Web activity type properties.",
      "properties": {
        "method": {
          "description": "Rest API method for target endpoint.",
          "$ref": "#/definitions/WebActivityMethod"
        },
        "url": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Web activity target endpoint and path. Type: string (or Expression with resultType string)."
        },
        "headers": {
          "type": "object",
          "x-ms-format": "dfe-key-value-pairs",
          "description": "Represents the headers that will be sent to the request. For example, to set the language and type on a request: \"headers\" : { \"Accept-Language\": \"en-us\", \"Content-Type\": \"application/json\" }. Type: dictionary (or Expression with resultType dictionary)."
        },
        "body": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string)."
        },
        "authentication": {
          "description": "Authentication method used for calling the endpoint.",
          "$ref": "#/definitions/WebActivityAuthentication"
        },
        "disableCertValidation": {
          "type": "boolean",
          "description": "When set to true, Certificate validation will be disabled."
        },
        "httpRequestTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Timeout for the HTTP request to get a response. Format is in TimeSpan (hh:mm:ss). This value is the timeout to get a response, not the activity timeout. The default value is 00:01:00 (1 minute). The range is from 1 to 10 minutes"
        },
        "turnOffAsync": {
          "type": "boolean",
          "description": "Option to disable invoking HTTP GET on location given in response header of a HTTP 202 Response. If set true, it stops invoking HTTP GET on http location given in response header. If set false then continues to invoke HTTP GET call on location given in http response headers."
        },
        "datasets": {
          "type": "array",
          "description": "List of datasets passed to web endpoint.",
          "items": {
            "$ref": "../datafactory.json#/definitions/DatasetReference"
          },
          "x-ms-identifiers": [
            "referenceName"
          ]
        },
        "linkedServices": {
          "type": "array",
          "description": "List of linked services passed to web endpoint.",
          "items": {
            "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
          },
          "x-ms-identifiers": [
            "referenceName"
          ]
        },
        "connectVia": {
          "description": "The integration runtime reference.",
          "$ref": "../datafactory.json#/definitions/IntegrationRuntimeReference"
        }
      },
      "required": [
        "method",
        "url"
      ]
    },
    "GetMetadataActivity": {
      "x-ms-discriminator-value": "GetMetadata",
      "description": "Activity to get metadata of dataset",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "GetMetadata activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/GetMetadataActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "GetMetadataActivityTypeProperties": {
      "description": "GetMetadata activity properties.",
      "properties": {
        "dataset": {
          "description": "GetMetadata activity dataset reference.",
          "$ref": "../datafactory.json#/definitions/DatasetReference"
        },
        "fieldList": {
          "description": "Fields of metadata to get from dataset.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "storeSettings": {
          "$ref": "#/definitions/StoreReadSettings",
          "description": "GetMetadata activity store settings."
        },
        "formatSettings": {
          "$ref": "#/definitions/FormatReadSettings",
          "description": "GetMetadata activity format settings."
        }
      },
      "required": [
        "dataset"
      ]
    },
    "IfConditionActivity": {
      "x-ms-discriminator-value": "IfCondition",
      "description": "This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "IfCondition activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IfConditionActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "IfConditionActivityTypeProperties": {
      "description": "IfCondition activity properties.",
      "properties": {
        "expression": {
          "description": "An expression that would evaluate to Boolean. This is used to determine the block of activities (ifTrueActivities or ifFalseActivities) that will be executed.",
          "$ref": "../datafactory.json#/definitions/Expression"
        },
        "ifTrueActivities": {
          "type": "array",
          "description": "List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action.",
          "items": {
            "$ref": "#/definitions/Activity"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "ifFalseActivities": {
          "type": "array",
          "description": "List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action.",
          "items": {
            "$ref": "#/definitions/Activity"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "expression"
      ]
    },
    "SwitchActivity": {
      "x-ms-discriminator-value": "Switch",
      "description": "This activity evaluates an expression and executes activities under the cases property that correspond to the expression evaluation expected in the equals property.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Switch activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SwitchActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SwitchActivityTypeProperties": {
      "description": "Switch activity properties.",
      "properties": {
        "on": {
          "description": "An expression that would evaluate to a string or integer. This is used to determine the block of activities in cases that will be executed.",
          "$ref": "../datafactory.json#/definitions/Expression"
        },
        "cases": {
          "type": "array",
          "description": "List of cases that correspond to expected values of the 'on' property. This is an optional property and if not provided, the activity will execute activities provided in defaultActivities.",
          "items": {
            "x-ms-client-flatten": true,
            "$ref": "#/definitions/SwitchCase"
          },
          "x-ms-identifiers": [
            "value"
          ]
        },
        "defaultActivities": {
          "type": "array",
          "description": "List of activities to execute if no case condition is satisfied. This is an optional property and if not provided, the activity will exit without any action.",
          "items": {
            "$ref": "#/definitions/Activity"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "on"
      ]
    },
    "SwitchCase": {
      "description": "Switch cases with have a value and corresponding activities.",
      "properties": {
        "value": {
          "description": "Expected value that satisfies the expression result of the 'on' property.",
          "type": "string"
        },
        "activities": {
          "type": "array",
          "description": "List of activities to execute for satisfied case condition.",
          "items": {
            "$ref": "#/definitions/Activity"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ForEachActivity": {
      "x-ms-discriminator-value": "ForEach",
      "description": "This activity is used for iterating over a collection and execute given activities.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "ForEach activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ForEachActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ForEachActivityTypeProperties": {
      "description": "ForEach activity properties.",
      "properties": {
        "isSequential": {
          "description": "Should the loop be executed in sequence or in parallel (max 50)",
          "type": "boolean"
        },
        "batchCount": {
          "description": "Batch count to be used for controlling the number of parallel execution (when isSequential is set to false).",
          "type": "integer",
          "maximum": 50
        },
        "items": {
          "description": "Collection to iterate.",
          "$ref": "../datafactory.json#/definitions/Expression"
        },
        "activities": {
          "type": "array",
          "description": "List of activities to execute .",
          "items": {
            "$ref": "#/definitions/Activity"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "items",
        "activities"
      ]
    },
    "AzureMLBatchExecutionActivity": {
      "description": "Azure ML Batch Execution activity.",
      "x-ms-discriminator-value": "AzureMLBatchExecution",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Azure ML Batch Execution activity properties.",
          "$ref": "#/definitions/AzureMLBatchExecutionActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureMLBatchExecutionActivityTypeProperties": {
      "description": "Azure ML Batch Execution activity properties.",
      "properties": {
        "globalParameters": {
          "description": "Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "webServiceOutputs": {
          "description": "Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AzureMLWebServiceFile"
          }
        },
        "webServiceInputs": {
          "description": "Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AzureMLWebServiceFile"
          }
        }
      }
    },
    "AzureMLWebServiceFile": {
      "description": "Azure ML WebService Input/Output file",
      "type": "object",
      "properties": {
        "filePath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The relative file path, including container name, in the Azure Blob Storage specified by the LinkedService. Type: string (or Expression with resultType string)."
        },
        "linkedServiceName": {
          "description": "Reference to an Azure Storage LinkedService, where Azure ML WebService Input/Output file located.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        }
      },
      "required": [
        "linkedServiceName",
        "filePath"
      ]
    },
    "AzureMLUpdateResourceActivity": {
      "description": "Azure ML Update Resource management activity.",
      "x-ms-discriminator-value": "AzureMLUpdateResource",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Azure ML Update Resource management activity properties.",
          "$ref": "#/definitions/AzureMLUpdateResourceActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureMLUpdateResourceActivityTypeProperties": {
      "description": "Azure ML Update Resource activity properties.",
      "properties": {
        "trainedModelName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string)."
        },
        "trainedModelLinkedServiceName": {
          "description": "Name of Azure Storage linked service holding the .ilearner file that will be uploaded by the update operation.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "trainedModelFilePath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "trainedModelName",
        "trainedModelLinkedServiceName",
        "trainedModelFilePath"
      ]
    },
    "AzureMLExecutePipelineActivity": {
      "description": "Azure ML Execute Pipeline activity.",
      "x-ms-discriminator-value": "AzureMLExecutePipeline",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Azure ML Execute Pipeline activity properties.",
          "$ref": "#/definitions/AzureMLExecutePipelineActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureMLExecutePipelineActivityTypeProperties": {
      "description": "Azure ML Execute Pipeline activity properties.",
      "properties": {
        "mlPipelineId": {
          "x-ms-format": "dfe-string",
          "description": "ID of the published Azure ML pipeline. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "mlPipelineEndpointId": {
          "x-ms-format": "dfe-string",
          "description": "ID of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "version": {
          "x-ms-format": "dfe-string",
          "description": "Version of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "experimentName": {
          "x-ms-format": "dfe-string",
          "description": "Run history experiment name of the pipeline run. This information will be passed in the ExperimentName property of the published pipeline execution request. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "mlPipelineParameters": {
          "x-ms-format": "dfe-key-value-pairs",
          "description": "Key,Value pairs to be passed to the published Azure ML pipeline endpoint. Keys must match the names of pipeline parameters defined in the published pipeline. Values will be passed in the ParameterAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object).",
          "type": "object"
        },
        "dataPathAssignments": {
          "description": "Dictionary used for changing data path assignments without retraining. Values will be passed in the dataPathAssignments property of the published pipeline execution request. Type: object (or Expression with resultType object).",
          "type": "object"
        },
        "mlParentRunId": {
          "x-ms-format": "dfe-string",
          "description": "The parent Azure ML Service pipeline run id. This information will be passed in the ParentRunId property of the published pipeline execution request. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "continueOnStepFailure": {
          "x-ms-format": "dfe-bool",
          "description": "Whether to continue execution of other steps in the PipelineRun if a step fails. This information will be passed in the continueOnStepFailure property of the published pipeline execution request. Type: boolean (or Expression with resultType boolean).",
          "type": "object"
        }
      }
    },
    "AzureMLPipelineParameters": {
      "description": "Key,Value pairs to be passed to the published Azure ML pipeline endpoint. Keys must match the names of pipeline parameters defined in the published pipeline. Values will be passed in the ParameterAssignments property of the published pipeline execution request.",
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "x-ms-format": "dfe-string",
        "description": "Type: string (or Expression with resultType string)."
      }
    },
    "AzureDataPathAssignments": {
      "description": "Dictionary used for changing data path assignments without retraining. Values will be passed in the dataPathAssignments property of the published pipeline execution request.",
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "x-ms-format": "dfe-string",
        "description": "Type: string (or Expression with resultType string)."
      }
    },
    "DataLakeAnalyticsUSQLActivity": {
      "description": "Data Lake Analytics U-SQL activity.",
      "x-ms-discriminator-value": "DataLakeAnalyticsU-SQL",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Data Lake Analytics U-SQL activity properties.",
          "$ref": "#/definitions/DataLakeAnalyticsUSQLActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "DataLakeAnalyticsUSQLActivityTypeProperties": {
      "description": "DataLakeAnalyticsU-SQL activity properties.",
      "properties": {
        "scriptPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string)."
        },
        "scriptLinkedService": {
          "description": "Script linked service reference.",
          "$ref": "../datafactory.json#/definitions/LinkedServiceReference"
        },
        "degreeOfParallelism": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1."
        },
        "priority": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1."
        },
        "parameters": {
          "description": "Parameters for U-SQL job request.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "runtimeVersion": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string)."
        },
        "compilationMode": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "scriptPath",
        "scriptLinkedService"
      ]
    },
    "WaitActivity": {
      "x-ms-discriminator-value": "Wait",
      "description": "This activity suspends pipeline execution for the specified interval.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Wait activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WaitActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "WaitActivityTypeProperties": {
      "description": "Wait activity properties.",
      "properties": {
        "waitTimeInSeconds": {
          "description": "Duration in seconds. Type: integer (or Expression with resultType integer).",
          "type": "object",
          "x-ms-format": "dfe-int"
        }
      },
      "required": [
        "waitTimeInSeconds"
      ]
    },
    "FailActivity": {
      "x-ms-discriminator-value": "Fail",
      "type": "object",
      "description": "This activity will fail within its own scope and output a custom error message and error code. The error message and code can provided either as a string literal or as an expression that can be evaluated to a string at runtime. The activity scope can be the whole pipeline or a control activity (e.g. foreach, switch, until), if the fail activity is contained in it.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Fail activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FailActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "FailActivityTypeProperties": {
      "description": "Fail activity properties.",
      "type": "object",
      "properties": {
        "message": {
          "x-ms-format": "dfe-string",
          "description": "The error message that surfaced in the Fail activity. It can be dynamic content that's evaluated to a non empty/blank string at runtime. Type: string (or Expression with resultType string).",
          "type": "object"
        },
        "errorCode": {
          "x-ms-format": "dfe-string",
          "description": "The error code that categorizes the error type of the Fail activity. It can be dynamic content that's evaluated to a non empty/blank string at runtime. Type: string (or Expression with resultType string).",
          "type": "object"
        }
      },
      "required": [
        "message",
        "errorCode"
      ]
    },
    "UntilActivity": {
      "x-ms-discriminator-value": "Until",
      "description": "This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Until activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UntilActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "UntilActivityTypeProperties": {
      "description": "Until activity properties.",
      "properties": {
        "expression": {
          "description": "An expression that would evaluate to Boolean. The loop will continue until this expression evaluates to true",
          "$ref": "../datafactory.json#/definitions/Expression"
        },
        "timeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "activities": {
          "type": "array",
          "description": "List of activities to execute.",
          "items": {
            "$ref": "#/definitions/Activity"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "expression",
        "activities"
      ]
    },
    "ValidationActivity": {
      "x-ms-discriminator-value": "Validation",
      "description": "This activity verifies that an external resource exists.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Validation activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ValidationActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ValidationActivityTypeProperties": {
      "description": "Validation activity properties.",
      "properties": {
        "timeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "sleep": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "A delay in seconds between validation attempts. If no value is specified, 10 seconds will be used as the default. Type: integer (or Expression with resultType integer)."
        },
        "minimumSize": {
          "type": "object",
          "x-ms-format": "dfe-int",
          "description": "Can be used if dataset points to a file. The file must be greater than or equal in size to the value specified. Type: integer (or Expression with resultType integer)."
        },
        "childItems": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Can be used if dataset points to a folder. If set to true, the folder must have at least one file. If set to false, the folder must be empty. Type: boolean (or Expression with resultType boolean)."
        },
        "dataset": {
          "description": "Validation activity dataset reference.",
          "$ref": "../datafactory.json#/definitions/DatasetReference"
        }
      },
      "required": [
        "dataset"
      ]
    },
    "FilterActivity": {
      "x-ms-discriminator-value": "Filter",
      "description": "Filter and return results from input array based on the conditions.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Filter activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FilterActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "FilterActivityTypeProperties": {
      "description": "Filter activity properties.",
      "properties": {
        "items": {
          "description": "Input array on which filter should be applied.",
          "$ref": "../datafactory.json#/definitions/Expression"
        },
        "condition": {
          "description": "Condition to be used for filtering the input.",
          "$ref": "../datafactory.json#/definitions/Expression"
        }
      },
      "required": [
        "condition",
        "items"
      ]
    },
    "DatabricksNotebookActivity": {
      "description": "DatabricksNotebook activity.",
      "x-ms-discriminator-value": "DatabricksNotebook",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Databricks Notebook activity properties.",
          "$ref": "#/definitions/DatabricksNotebookActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "DatabricksNotebookActivityTypeProperties": {
      "description": "Databricks Notebook activity properties.",
      "properties": {
        "notebookPath": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string)."
        },
        "baseParameters": {
          "description": "Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        },
        "libraries": {
          "description": "A list of libraries to be installed on the cluster that will execute the job.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Databricks library definition.",
            "additionalProperties": {
              "type": "object"
            }
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "notebookPath"
      ]
    },
    "DatabricksSparkJarActivity": {
      "description": "DatabricksSparkJar activity.",
      "x-ms-discriminator-value": "DatabricksSparkJar",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Databricks SparkJar activity properties.",
          "$ref": "#/definitions/DatabricksSparkJarActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "DatabricksSparkJarActivityTypeProperties": {
      "description": "Databricks SparkJar activity properties.",
      "properties": {
        "mainClassName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The full name of the class containing the main method to be executed. This class must be contained in a JAR provided as a library. Type: string (or Expression with resultType string)."
        },
        "parameters": {
          "description": "Parameters that will be passed to the main method.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "libraries": {
          "description": "A list of libraries to be installed on the cluster that will execute the job.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Databricks library definition.",
            "additionalProperties": {
              "type": "object"
            }
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "mainClassName"
      ]
    },
    "DatabricksSparkPythonActivity": {
      "description": "DatabricksSparkPython activity.",
      "x-ms-discriminator-value": "DatabricksSparkPython",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Databricks SparkPython activity properties.",
          "$ref": "#/definitions/DatabricksSparkPythonActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "DatabricksSparkPythonActivityTypeProperties": {
      "description": "Databricks SparkPython activity properties.",
      "properties": {
        "pythonFile": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The URI of the Python file to be executed. DBFS paths are supported. Type: string (or Expression with resultType string)."
        },
        "parameters": {
          "description": "Command line parameters that will be passed to the Python file.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "libraries": {
          "description": "A list of libraries to be installed on the cluster that will execute the job.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Databricks library definition.",
            "additionalProperties": {
              "type": "object"
            }
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "pythonFile"
      ]
    },
    "SetVariableActivity": {
      "x-ms-discriminator-value": "SetVariable",
      "description": "Set value for a Variable.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Set Variable activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SetVariableActivityTypeProperties"
        },
        "policy": {
          "$ref": "#/definitions/SecureInputOutputPolicy",
          "description": "Activity policy."
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SetVariableActivityTypeProperties": {
      "description": "SetVariable activity properties.",
      "properties": {
        "variableName": {
          "description": "Name of the variable whose value needs to be set.",
          "type": "string"
        },
        "value": {
          "description": "Value to be set. Could be a static value or Expression.",
          "type": "object",
          "x-ms-format": "dfe-object"
        },
        "setSystemVariable": {
          "description": "If set to true, it sets the pipeline run return value.",
          "type": "boolean"
        }
      }
    },
    "SecureInputOutputPolicy": {
      "description": "Execution policy for an activity that supports secure input and output.",
      "type": "object",
      "properties": {
        "secureInput": {
          "type": "boolean",
          "description": "When set to true, Input from activity is considered as secure and will not be logged to monitoring."
        },
        "secureOutput": {
          "type": "boolean",
          "description": "When set to true, Output from activity is considered as secure and will not be logged to monitoring."
        }
      }
    },
    "AppendVariableActivity": {
      "x-ms-discriminator-value": "AppendVariable",
      "description": "Append value for a Variable of type Array.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Append Variable activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AppendVariableActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AppendVariableActivityTypeProperties": {
      "description": "AppendVariable activity properties.",
      "properties": {
        "variableName": {
          "description": "Name of the variable whose value needs to be appended to.",
          "type": "string"
        },
        "value": {
          "description": "Value to be appended. Type: could be a static value matching type of the variable item or Expression with resultType matching type of the variable item",
          "type": "object",
          "x-ms-format": "dfe-object"
        }
      }
    },
    "AzureFunctionActivityMethod": {
      "description": "The list of HTTP methods supported by a AzureFunctionActivity.",
      "type": "string",
      "enum": [
        "GET",
        "POST",
        "PUT",
        "DELETE",
        "OPTIONS",
        "HEAD",
        "TRACE"
      ],
      "x-ms-enum": {
        "name": "AzureFunctionActivityMethod",
        "modelAsString": true
      }
    },
    "AzureFunctionActivity": {
      "x-ms-discriminator-value": "AzureFunctionActivity",
      "description": "Azure Function activity.",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "Azure Function activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AzureFunctionActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "AzureFunctionActivityTypeProperties": {
      "description": "Azure Function activity type properties.",
      "properties": {
        "method": {
          "description": "Rest API method for target endpoint.",
          "$ref": "#/definitions/AzureFunctionActivityMethod"
        },
        "functionName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Name of the Function that the Azure Function Activity will call. Type: string (or Expression with resultType string)"
        },
        "headers": {
          "type": "object",
          "x-ms-format": "dfe-key-value-pairs",
          "description": "Represents the headers that will be sent to the request. For example, to set the language and type on a request: \"headers\" : { \"Accept-Language\": \"en-us\", \"Content-Type\": \"application/json\" }. Type: dictionary (or Expression with resultType dictionary)."
        },
        "body": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "method",
        "functionName"
      ]
    },
    "WebHookActivity": {
      "x-ms-discriminator-value": "WebHook",
      "description": "WebHook activity.",
      "allOf": [
        {
          "$ref": "#/definitions/ControlActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "description": "WebHook activity properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/WebHookActivityTypeProperties"
        },
        "policy": {
          "$ref": "#/definitions/SecureInputOutputPolicy",
          "description": "Activity policy."
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "WebHookActivityMethod": {
      "description": "The list of HTTP methods supported by a WebHook activity.",
      "type": "string",
      "enum": [
        "POST"
      ],
      "x-ms-enum": {
        "name": "WebHookActivityMethod",
        "modelAsString": true
      }
    },
    "WebHookActivityTypeProperties": {
      "description": "WebHook activity type properties.",
      "properties": {
        "method": {
          "description": "Rest API method for target endpoint.",
          "$ref": "#/definitions/WebHookActivityMethod"
        },
        "url": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "WebHook activity target endpoint and path. Type: string (or Expression with resultType string)."
        },
        "timeout": {
          "type": "string",
          "description": "The timeout within which the webhook should be called back. If there is no value specified, it defaults to 10 minutes. Type: string. Pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "headers": {
          "type": "object",
          "x-ms-format": "dfe-key-value-pairs",
          "description": "Represents the headers that will be sent to the request. For example, to set the language and type on a request: \"headers\" : { \"Accept-Language\": \"en-us\", \"Content-Type\": \"application/json\" }. Type: dictionary (or Expression with resultType dictionary)."
        },
        "body": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string)."
        },
        "authentication": {
          "description": "Authentication method used for calling the endpoint.",
          "$ref": "#/definitions/WebActivityAuthentication"
        },
        "reportStatusOnCallBack": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "When set to true, statusCode, output and error in callback request body will be consumed by activity. The activity can be marked as failed by setting statusCode >= 400 in callback request. Default is false. Type: boolean (or Expression with resultType boolean)."
        }
      },
      "required": [
        "method",
        "url"
      ]
    },
    "ExecuteDataFlowActivity": {
      "description": "Execute data flow activity.",
      "x-ms-discriminator-value": "ExecuteDataFlow",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Execute data flow activity properties.",
          "$ref": "#/definitions/ExecuteDataFlowActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ExecuteWranglingDataflowActivity": {
      "description": "Execute power query activity.",
      "type": "object",
      "x-ms-discriminator-value": "ExecuteWranglingDataflow",
      "allOf": [
        {
          "$ref": "#/definitions/Activity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Execute power query activity properties.",
          "$ref": "#/definitions/ExecutePowerQueryActivityTypeProperties"
        },
        "policy": {
          "$ref": "#/definitions/ActivityPolicy",
          "description": "Activity policy."
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "ExecuteDataFlowActivityTypeProperties": {
      "description": "Execute data flow activity properties.",
      "properties": {
        "dataFlow": {
          "description": "Data flow reference.",
          "$ref": "../datafactory.json#/definitions/DataFlowReference"
        },
        "staging": {
          "description": "Staging info for execute data flow activity.",
          "$ref": "../datafactory.json#/definitions/DataFlowStagingInfo"
        },
        "integrationRuntime": {
          "description": "The integration runtime reference.",
          "$ref": "../datafactory.json#/definitions/IntegrationRuntimeReference"
        },
        "compute": {
          "description": "Compute properties for data flow activity.",
          "type": "object",
          "properties": {
            "computeType": {
              "x-ms-format": "dfe-string",
              "description": "Compute type of the cluster which will execute data flow job. Possible values include: 'General', 'MemoryOptimized', 'ComputeOptimized'. Type: string (or Expression with resultType string)",
              "type": "object"
            },
            "coreCount": {
              "x-ms-format": "dfe-int",
              "description": "Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272. Type: integer (or Expression with resultType integer)",
              "type": "object"
            }
          }
        },
        "traceLevel": {
          "x-ms-format": "dfe-string",
          "description": "Trace level setting used for data flow monitoring output. Supported values are: 'coarse', 'fine', and 'none'. Type: string (or Expression with resultType string)",
          "type": "object"
        },
        "continueOnError": {
          "x-ms-format": "dfe-bool",
          "description": "Continue on error setting used for data flow execution. Enables processing to continue if a sink fails. Type: boolean (or Expression with resultType boolean)",
          "type": "object"
        },
        "runConcurrently": {
          "x-ms-format": "dfe-bool",
          "description": "Concurrent run setting used for data flow execution. Allows sinks with the same save order to be processed concurrently. Type: boolean (or Expression with resultType boolean)",
          "type": "object"
        },
        "sourceStagingConcurrency": {
          "x-ms-format": "dfe-int",
          "description": "Specify number of parallel staging for sources applicable to the sink. Type: integer (or Expression with resultType integer)",
          "type": "object"
        }
      },
      "required": [
        "dataFlow"
      ]
    },
    "ExecutePowerQueryActivityTypeProperties": {
      "description": "Execute power query data flow activity properties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExecuteDataFlowActivityTypeProperties"
        }
      ],
      "properties": {
        "sinks": {
          "type": "object",
          "description": "(Deprecated. Please use Queries). List of Power Query activity sinks mapped to a queryName.",
          "additionalProperties": {
            "$ref": "./DataFlow.json#/definitions/PowerQuerySink"
          }
        },
        "queries": {
          "type": "array",
          "description": "List of mapping for Power Query mashup query to sink dataset(s).",
          "items": {
            "$ref": "#/definitions/PowerQuerySinkMapping"
          },
          "x-ms-identifiers": [
            "queryName"
          ]
        }
      }
    },
    "PowerQuerySinkMapping": {
      "description": "Map Power Query mashup query to sink dataset(s).",
      "type": "object",
      "properties": {
        "queryName": {
          "description": "Name of the query in Power Query mashup document.",
          "type": "string"
        },
        "dataflowSinks": {
          "type": "array",
          "description": "List of sinks mapped to Power Query mashup query.",
          "items": {
            "$ref": "./DataFlow.json#/definitions/PowerQuerySink"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ScriptActivity": {
      "description": "Script activity type.",
      "x-ms-discriminator-value": "Script",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Script activity properties.",
          "$ref": "#/definitions/ScriptActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties",
        "linkedServiceName"
      ]
    },
    "ScriptActivityTypeProperties": {
      "description": "Script activity properties.",
      "type": "object",
      "properties": {
        "scriptBlockExecutionTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "ScriptBlock execution timeout. Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        },
        "scripts": {
          "type": "array",
          "description": "Array of script blocks. Type: array.",
          "items": {
            "$ref": "#/definitions/ScriptActivityScriptBlock"
          },
          "x-ms-identifiers": []
        },
        "logSettings": {
          "description": "Log settings of script activity.",
          "type": "object",
          "properties": {
            "logDestination": {
              "x-ms-enum": {
                "name": "ScriptActivityLogDestination",
                "modelAsString": true
              },
              "enum": [
                "ActivityOutput",
                "ExternalStore"
              ],
              "type": "string",
              "description": "The destination of logs. Type: string."
            },
            "logLocationSettings": {
              "description": "Log location settings customer needs to provide when enabling log.",
              "$ref": "#/definitions/LogLocationSettings"
            }
          },
          "required": [
            "logDestination"
          ]
        }
      }
    },
    "ScriptActivityScriptBlock": {
      "description": "Script block of scripts.",
      "type": "object",
      "properties": {
        "text": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The query text. Type: string (or Expression with resultType string)."
        },
        "type": {
          "x-ms-enum": {
            "name": "ScriptType",
            "modelAsString": true
          },
          "enum": [
            "Query",
            "NonQuery"
          ],
          "type": "string",
          "description": "The type of the query. Type: string."
        },
        "parameters": {
          "type": "array",
          "description": "Array of script parameters. Type: array.",
          "items": {
            "$ref": "#/definitions/ScriptActivityParameter"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "text",
        "type"
      ]
    },
    "ScriptActivityParameter": {
      "description": "Parameters of a script block.",
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the parameter. Type: string (or Expression with resultType string)."
        },
        "type": {
          "description": "The type of the parameter.",
          "type": "string",
          "enum": [
            "Boolean",
            "DateTime",
            "DateTimeOffset",
            "Decimal",
            "Double",
            "Guid",
            "Int16",
            "Int32",
            "Int64",
            "Single",
            "String",
            "Timespan"
          ],
          "x-ms-enum": {
            "name": "ScriptActivityParameterType",
            "modelAsString": true
          }
        },
        "value": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The value of the parameter. Type: string (or Expression with resultType string)."
        },
        "direction": {
          "description": "The direction of the parameter.",
          "type": "string",
          "enum": [
            "Input",
            "Output",
            "InputOutput"
          ],
          "x-ms-enum": {
            "name": "ScriptActivityParameterDirection",
            "modelAsString": true
          }
        },
        "size": {
          "description": "The size of the output direction parameter.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SharePointOnlineListSource": {
      "description": "A copy activity source for sharePoint online list source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "query": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The OData query to filter the data in SharePoint Online list. For example, \"$top=1\". Type: string (or Expression with resultType string)."
        },
        "httpRequestTimeout": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The wait time to get a response from SharePoint Online. Default value is 5 minutes (00:05:00). Type: string (or Expression with resultType string), pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
        }
      }
    },
    "SqlPartitionOption": {
      "description": "The partition mechanism that will be used for Sql read in parallel.",
      "type": "string",
      "enum": [
        "None",
        "PhysicalPartitionsOfTable",
        "DynamicRange"
      ],
      "x-ms-enum": {
        "name": "SqlPartitionOption",
        "modelAsString": true
      }
    },
    "SapHanaPartitionOption": {
      "description": "The partition mechanism that will be used for SAP HANA read in parallel.",
      "type": "string",
      "enum": [
        "None",
        "PhysicalPartitionsOfTable",
        "SapHanaDynamicRange"
      ],
      "x-ms-enum": {
        "name": "SapHanaPartitionOption",
        "modelAsString": true
      }
    },
    "SapTablePartitionOption": {
      "description": "The partition mechanism that will be used for SAP table read in parallel.",
      "type": "string",
      "enum": [
        "None",
        "PartitionOnInt",
        "PartitionOnCalendarYear",
        "PartitionOnCalendarMonth",
        "PartitionOnCalendarDate",
        "PartitionOnTime"
      ],
      "x-ms-enum": {
        "name": "SapTablePartitionOption",
        "modelAsString": true
      }
    },
    "OraclePartitionOption": {
      "description": "The partition mechanism that will be used for Oracle read in parallel.",
      "type": "string",
      "enum": [
        "None",
        "PhysicalPartitionsOfTable",
        "DynamicRange"
      ],
      "x-ms-enum": {
        "name": "OraclePartitionOption",
        "modelAsString": true
      }
    },
    "TeradataPartitionOption": {
      "description": "The partition mechanism that will be used for teradata read in parallel.",
      "type": "string",
      "enum": [
        "None",
        "Hash",
        "DynamicRange"
      ],
      "x-ms-enum": {
        "name": "TeradataPartitionOption",
        "modelAsString": true
      }
    },
    "NetezzaPartitionOption": {
      "description": "The partition mechanism that will be used for Netezza read in parallel.",
      "type": "string",
      "enum": [
        "None",
        "DataSlice",
        "DynamicRange"
      ],
      "x-ms-enum": {
        "name": "NetezzaPartitionOption",
        "modelAsString": true
      }
    },
    "MetadataItem": {
      "description": "Specify the name and value of custom metadata item.",
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Metadata item key name. Type: string (or Expression with resultType string)."
        },
        "value": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Metadata item value. Type: string (or Expression with resultType string)."
        }
      }
    },
    "SynapseNotebookActivity": {
      "description": "Execute Synapse notebook activity.",
      "type": "object",
      "x-ms-discriminator-value": "SynapseNotebook",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Execute Synapse notebook activity properties.",
          "$ref": "#/definitions/SynapseNotebookActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SynapseNotebookActivityTypeProperties": {
      "description": "Execute Synapse notebook activity properties.",
      "type": "object",
      "properties": {
        "notebook": {
          "description": "Synapse notebook reference.",
          "$ref": "#/definitions/SynapseNotebookReference"
        },
        "sparkPool": {
          "description": "The name of the big data pool which will be used to execute the notebook.",
          "$ref": "#/definitions/BigDataPoolParametrizationReference"
        },
        "parameters": {
          "description": "Notebook parameters.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/NotebookParameter"
          }
        },
        "executorSize": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Number of core and memory to be used for executors allocated in the specified Spark pool for the session, which will be used for overriding 'executorCores' and 'executorMemory' of the notebook you provide. Type: string (or Expression with resultType string)."
        },
        "conf": {
          "type": "object",
          "description": "Spark configuration properties, which will override the 'conf' of the notebook you provide."
        },
        "driverSize": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Number of core and memory to be used for driver allocated in the specified Spark pool for the session, which will be used for overriding 'driverCores' and 'driverMemory' of the notebook you provide. Type: string (or Expression with resultType string)."
        },
        "numExecutors": {
          "description": "Number of executors to launch for this session, which will override the 'numExecutors' of the notebook you provide. Type: integer (or Expression with resultType integer).",
          "type": "object",
          "x-ms-format": "dfe-int"
        },
        "configurationType": {
          "enum": [
            "Default",
            "Customized",
            "Artifact"
          ],
          "type": "string",
          "description": "The type of the spark config.",
          "x-ms-enum": {
            "name": "ConfigurationType",
            "modelAsString": true
          }
        },
        "targetSparkConfiguration": {
          "description": "The spark configuration of the spark job.",
          "$ref": "#/definitions/SparkConfigurationParametrizationReference"
        },
        "sparkConfig": {
          "description": "Spark configuration property.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      },
      "required": [
        "notebook"
      ]
    },
    "SynapseNotebookReference": {
      "description": "Synapse notebook reference type.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Synapse notebook reference type.",
          "enum": [
            "NotebookReference"
          ],
          "x-ms-enum": {
            "name": "NotebookReferenceType",
            "modelAsString": true
          }
        },
        "referenceName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Reference notebook name. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "BigDataPoolParametrizationReference": {
      "description": "Big data pool reference type.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Big data pool reference type.",
          "enum": [
            "BigDataPoolReference"
          ],
          "x-ms-enum": {
            "name": "BigDataPoolReferenceType",
            "modelAsString": true
          }
        },
        "referenceName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Reference big data pool name. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "NotebookParameter": {
      "description": "Notebook parameter.",
      "type": "object",
      "properties": {
        "value": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Notebook parameter value. Type: string (or Expression with resultType string).",
          "x-nullable": true
        },
        "type": {
          "description": "Notebook parameter type.",
          "$ref": "#/definitions/NotebookParameterType"
        }
      }
    },
    "NotebookParameterType": {
      "description": "Notebook parameter type.",
      "type": "string",
      "enum": [
        "string",
        "int",
        "float",
        "bool"
      ],
      "x-ms-enum": {
        "name": "NotebookParameterType",
        "modelAsString": true
      }
    },
    "SynapseSparkJobDefinitionActivity": {
      "description": "Execute spark job activity.",
      "type": "object",
      "x-ms-discriminator-value": "SparkJob",
      "allOf": [
        {
          "$ref": "#/definitions/ExecutionActivity"
        }
      ],
      "properties": {
        "typeProperties": {
          "x-ms-client-flatten": true,
          "description": "Execute spark job activity properties.",
          "$ref": "#/definitions/SynapseSparkJobActivityTypeProperties"
        }
      },
      "required": [
        "typeProperties"
      ]
    },
    "SynapseSparkJobActivityTypeProperties": {
      "description": "Execute spark job activity properties.",
      "type": "object",
      "properties": {
        "sparkJob": {
          "description": "Synapse spark job reference.",
          "$ref": "#/definitions/SynapseSparkJobReference"
        },
        "args": {
          "x-ms-client-name": "arguments",
          "description": "User specified arguments to SynapseSparkJobDefinitionActivity.",
          "type": "array",
          "items": {
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "file": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The main file used for the job, which will override the 'file' of the spark job definition you provide. Type: string (or Expression with resultType string)."
        },
        "scanFolder": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "Scanning subfolders from the root folder of the main definition file, these files will be added as reference files. The folders named 'jars', 'pyFiles', 'files' or 'archives' will be scanned, and the folders name are case sensitive. Type: boolean (or Expression with resultType boolean)."
        },
        "className": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The fully-qualified identifier or the main class that is in the main definition file, which will override the 'className' of the spark job definition you provide. Type: string (or Expression with resultType string)."
        },
        "files": {
          "description": "(Deprecated. Please use pythonCodeReference and filesV2) Additional files used for reference in the main definition file, which will override the 'files' of the spark job definition you provide.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "pythonCodeReference": {
          "description": "Additional python code files used for reference in the main definition file, which will override the 'pyFiles' of the spark job definition you provide.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "filesV2": {
          "description": "Additional files used for reference in the main definition file, which will override the 'jars' and 'files' of the spark job definition you provide.",
          "type": "array",
          "items": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          },
          "x-ms-identifiers": []
        },
        "targetBigDataPool": {
          "$ref": "#/definitions/BigDataPoolParametrizationReference",
          "description": "The name of the big data pool which will be used to execute the spark batch job, which will override the 'targetBigDataPool' of the spark job definition you provide."
        },
        "executorSize": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Number of core and memory to be used for executors allocated in the specified Spark pool for the job, which will be used for overriding 'executorCores' and 'executorMemory' of the spark job definition you provide. Type: string (or Expression with resultType string)."
        },
        "conf": {
          "type": "object",
          "description": "Spark configuration properties, which will override the 'conf' of the spark job definition you provide."
        },
        "driverSize": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Number of core and memory to be used for driver allocated in the specified Spark pool for the job, which will be used for overriding 'driverCores' and 'driverMemory' of the spark job definition you provide. Type: string (or Expression with resultType string)."
        },
        "numExecutors": {
          "x-ms-format": "dfe-int",
          "description": "Number of executors to launch for this job, which will override the 'numExecutors' of the spark job definition you provide. Type: integer (or Expression with resultType integer).",
          "type": "object"
        },
        "configurationType": {
          "enum": [
            "Default",
            "Customized",
            "Artifact"
          ],
          "type": "string",
          "description": "The type of the spark config.",
          "x-ms-enum": {
            "name": "ConfigurationType",
            "modelAsString": true
          }
        },
        "targetSparkConfiguration": {
          "description": "The spark configuration of the spark job.",
          "$ref": "#/definitions/SparkConfigurationParametrizationReference"
        },
        "sparkConfig": {
          "description": "Spark configuration property.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-ms-format": "dfe-string",
            "description": "Type: string (or Expression with resultType string)."
          }
        }
      },
      "required": [
        "sparkJob"
      ]
    },
    "SynapseSparkJobReference": {
      "description": "Synapse spark job reference type.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Synapse spark job reference type.",
          "enum": [
            "SparkJobDefinitionReference"
          ],
          "x-ms-enum": {
            "name": "SparkJobReferenceType",
            "modelAsString": true
          }
        },
        "referenceName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Reference spark job name. Expression with resultType string."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "SparkConfigurationParametrizationReference": {
      "description": "Spark configuration reference.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Spark configuration reference type.",
          "type": "string",
          "enum": [
            "SparkConfigurationReference"
          ],
          "x-ms-enum": {
            "name": "SparkConfigurationReferenceType",
            "modelAsString": true
          }
        },
        "referenceName": {
          "x-ms-format": "dfe-string",
          "description": "Reference spark configuration name. Type: string (or Expression with resultType string).",
          "type": "object"
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "SalesforceV2Source": {
      "description": "A copy activity Salesforce V2 source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TabularSource"
        }
      ],
      "properties": {
        "SOQLQuery": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "readBehavior": {
          "description": "The read behavior for the operation. Default is query. Allowed values: query/queryAll. Type: string (or Expression with resultType string).",
          "type": "object",
          "x-ms-format": "dfe-string"
        }
      }
    },
    "SalesforceServiceCloudV2Source": {
      "description": "A copy activity Salesforce Service Cloud V2 source.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySource"
        }
      ],
      "properties": {
        "SOQLQuery": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "Database query. Type: string (or Expression with resultType string)."
        },
        "readBehavior": {
          "description": "The read behavior for the operation. Default is query. Allowed values: query/queryAll. Type: string (or Expression with resultType string).",
          "type": "object",
          "x-ms-format": "dfe-string"
        },
        "additionalColumns": {
          "type": "object",
          "description": "Specifies the additional columns to be added to source data. Type: array of objects(AdditionalColumns) (or Expression with resultType array of objects)."
        }
      }
    },
    "SalesforceV2SourceReadBehavior": {
      "description": "The Salesforce read behavior for the operation",
      "type": "string",
      "enum": [
        "query",
        "queryAll"
      ],
      "x-ms-enum": {
        "name": "SalesforceV2SourceReadBehavior",
        "modelAsString": true
      }
    },
    "SalesforceV2Sink": {
      "description": "A copy activity Salesforce V2 sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "description": "The write behavior for the operation. Default is Insert.",
          "type": "string",
          "enum": [
            "Insert",
            "Upsert"
          ],
          "x-ms-enum": {
            "name": "SalesforceV2SinkWriteBehavior",
            "modelAsString": true
          }
        },
        "externalIdFieldName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string)."
        },
        "ignoreNullValues": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean)."
        }
      }
    },
    "SalesforceServiceCloudV2Sink": {
      "description": "A copy activity Salesforce Service Cloud V2 sink.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopySink"
        }
      ],
      "properties": {
        "writeBehavior": {
          "description": "The write behavior for the operation. Default is Insert.",
          "type": "string",
          "enum": [
            "Insert",
            "Upsert"
          ],
          "x-ms-enum": {
            "name": "SalesforceV2SinkWriteBehavior",
            "modelAsString": true
          }
        },
        "externalIdFieldName": {
          "type": "object",
          "x-ms-format": "dfe-string",
          "description": "The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string)."
        },
        "ignoreNullValues": {
          "type": "object",
          "x-ms-format": "dfe-bool",
          "description": "The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean)."
        }
      }
    }
  }
}
