{
  "swagger": "2.0",
  "info": {
    "title": "DataFactoryManagementClient",
    "version": "2018-06-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.DataFactory/operations": {
      "get": {
        "tags": [
          "operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "description": "Lists the available Azure Data Factory API operations.",
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/OperationListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/factories": {
      "get": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_List",
        "x-ms-examples": {
          "Factories_List": {
            "$ref": "./examples/Factories_List.json"
          }
        },
        "description": "Lists factories under the specified subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/FactoryListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/configureFactoryRepo": {
      "post": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_ConfigureFactoryRepo",
        "x-ms-examples": {
          "Factories_ConfigureFactoryRepo": {
            "$ref": "./examples/Factories_ConfigureFactoryRepo.json"
          }
        },
        "description": "Updates a factory's repo information.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/locationId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "factoryRepoUpdate",
            "description": "Update factory repo request definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FactoryRepoUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Factory"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/getFeatureValue": {
      "post": {
        "tags": [
          "exposureControl"
        ],
        "operationId": "ExposureControl_GetFeatureValue",
        "x-ms-examples": {
          "ExposureControl_GetFeatureValue": {
            "$ref": "./examples/ExposureControl_GetFeatureValue.json"
          }
        },
        "description": "Get exposure control feature for specific location.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/locationId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "exposureControlRequest",
            "description": "The exposure control request.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExposureControlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ExposureControlResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getFeatureValue": {
      "post": {
        "tags": [
          "exposureControl"
        ],
        "operationId": "ExposureControl_GetFeatureValueByFactory",
        "x-ms-examples": {
          "ExposureControl_GetFeatureValueByFactory": {
            "$ref": "./examples/ExposureControl_GetFeatureValueByFactory.json"
          }
        },
        "description": "Get exposure control feature for specific factory.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "exposureControlRequest",
            "description": "The exposure control request.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExposureControlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ExposureControlResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryFeaturesValue": {
      "post": {
        "tags": [
          "exposureControl"
        ],
        "operationId": "ExposureControl_QueryFeatureValuesByFactory",
        "x-ms-examples": {
          "ExposureControl_QueryFeatureValuesByFactory": {
            "$ref": "./examples/ExposureControl_QueryFeatureValuesByFactory.json"
          }
        },
        "description": "Get list of exposure control features for specific factory.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "exposureControlBatchRequest",
            "description": "The exposure control request for list of features.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExposureControlBatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ExposureControlBatchResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories": {
      "get": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_ListByResourceGroup",
        "x-ms-examples": {
          "Factories_ListByResourceGroup": {
            "$ref": "./examples/Factories_ListByResourceGroup.json"
          }
        },
        "description": "Lists factories.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/FactoryListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}": {
      "put": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_CreateOrUpdate",
        "x-ms-examples": {
          "Factories_CreateOrUpdate": {
            "$ref": "./examples/Factories_CreateOrUpdate.json"
          }
        },
        "description": "Creates or updates a factory.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "factory",
            "description": "Factory resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Factory"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the factory entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Factory"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_Update",
        "x-ms-examples": {
          "Factories_Update": {
            "$ref": "./examples/Factories_Update.json"
          }
        },
        "description": "Updates a factory.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "factoryUpdateParameters",
            "description": "The parameters for updating a factory.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FactoryUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Factory"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_Get",
        "x-ms-examples": {
          "Factories_Get": {
            "$ref": "./examples/Factories_Get.json"
          }
        },
        "description": "Gets a factory.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the factory entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/Factory"
            }
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_Delete",
        "x-ms-examples": {
          "Factories_Delete": {
            "$ref": "./examples/Factories_Delete.json"
          }
        },
        "description": "Deletes a factory.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getGitHubAccessToken": {
      "post": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_GetGitHubAccessToken",
        "x-ms-examples": {
          "Factories_GetGitHubAccessToken": {
            "$ref": "./examples/Factories_GetGitHubAccessToken.json"
          }
        },
        "description": "Get GitHub Access Token.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "gitHubAccessTokenRequest",
            "description": "Get GitHub access token request definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubAccessTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/GitHubAccessTokenResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getDataPlaneAccess": {
      "post": {
        "tags": [
          "factories"
        ],
        "operationId": "Factories_GetDataPlaneAccess",
        "x-ms-examples": {
          "Factories_GetDataPlaneAccess": {
            "$ref": "./examples/Factories_GetDataPlaneAccess.json"
          }
        },
        "description": "Get Data Plane access.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "policy",
            "description": "Data Plane user access policy definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAccessPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/AccessPolicyResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes": {
      "get": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_ListByFactory",
        "x-ms-examples": {
          "IntegrationRuntimes_ListByFactory": {
            "$ref": "./examples/IntegrationRuntimes_ListByFactory.json"
          }
        },
        "description": "Lists integration runtimes.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}": {
      "put": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_CreateOrUpdate",
        "x-ms-examples": {
          "IntegrationRuntimes_Create": {
            "$ref": "./examples/IntegrationRuntimes_Create.json"
          }
        },
        "description": "Creates or updates an integration runtime.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the integration runtime entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "integrationRuntime",
            "description": "Integration runtime resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeResource"
            }
          },
          "default": {
            "description": "An error response received from PUT integration runtime operation.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_Get",
        "x-ms-examples": {
          "IntegrationRuntimes_Get": {
            "$ref": "./examples/IntegrationRuntimes_Get.json"
          }
        },
        "description": "Gets an integration runtime.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeResource"
            }
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "description": "An error response received from GET integration runtime operation.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_Update",
        "x-ms-examples": {
          "IntegrationRuntimes_Update": {
            "$ref": "./examples/IntegrationRuntimes_Update.json"
          }
        },
        "description": "Updates an integration runtime.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "updateIntegrationRuntimeRequest",
            "description": "The parameters for updating an integration runtime.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateIntegrationRuntimeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeResource"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_Delete",
        "x-ms-examples": {
          "IntegrationRuntimes_Delete": {
            "$ref": "./examples/IntegrationRuntimes_Delete.json"
          }
        },
        "description": "Deletes an integration runtime.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "An error response received from DELETE integration runtime operation.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getStatus": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_GetStatus",
        "x-ms-examples": {
          "IntegrationRuntimes_GetStatus": {
            "$ref": "./examples/IntegrationRuntimes_GetStatus.json"
          }
        },
        "description": "Gets detailed status information for an integration runtime.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeStatusResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getConnectionInfo": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_GetConnectionInfo",
        "x-ms-examples": {
          "IntegrationRuntimes_GetConnectionInfo": {
            "$ref": "./examples/IntegrationRuntimes_GetConnectionInfo.json"
          }
        },
        "description": "Gets the on-premises integration runtime connection information for encrypting the on-premises data source credentials.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeConnectionInfo"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/regenerateAuthKey": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_RegenerateAuthKey",
        "x-ms-examples": {
          "IntegrationRuntimes_RegenerateAuthKey": {
            "$ref": "./examples/IntegrationRuntimes_RegenerateAuthKey.json"
          }
        },
        "description": "Regenerates the authentication key for an integration runtime.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "regenerateKeyParameters",
            "description": "The parameters for regenerating integration runtime authentication key.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeRegenerateKeyParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeAuthKeys"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/listAuthKeys": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_ListAuthKeys",
        "x-ms-examples": {
          "IntegrationRuntimes_ListAuthKeys": {
            "$ref": "./examples/IntegrationRuntimes_ListAuthKeys.json"
          }
        },
        "description": "Retrieves the authentication keys for an integration runtime.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeAuthKeys"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/start": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_Start",
        "x-ms-examples": {
          "IntegrationRuntimes_Start": {
            "$ref": "./examples/IntegrationRuntimes_Start.json"
          }
        },
        "description": "Starts a ManagedReserved type integration runtime.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeStatusResponse"
            }
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/stop": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_Stop",
        "x-ms-examples": {
          "IntegrationRuntimes_Stop": {
            "$ref": "./examples/IntegrationRuntimes_Stop.json"
          }
        },
        "description": "Stops a ManagedReserved type integration runtime.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/syncCredentials": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_SyncCredentials",
        "x-ms-examples": {
          "IntegrationRuntimes_SyncCredentials": {
            "$ref": "./examples/IntegrationRuntimes_SyncCredentials.json"
          }
        },
        "description": "Force the integration runtime to synchronize credentials across integration runtime nodes, and this will override the credentials across all worker nodes with those available on the dispatcher node. If you already have the latest credential backup file, you should manually import it (preferred) on any self-hosted integration runtime node than using this API directly.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/monitoringData": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_GetMonitoringData",
        "x-ms-examples": {
          "IntegrationRuntimes_GetMonitoringData": {
            "$ref": "./examples/IntegrationRuntimes_GetMonitoringData.json"
          }
        },
        "description": "Get the integration runtime monitoring data, which includes the monitor data for all the nodes under this integration runtime.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeMonitoringData"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/upgrade": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_Upgrade",
        "x-ms-examples": {
          "IntegrationRuntimes_Upgrade": {
            "$ref": "./examples/IntegrationRuntimes_Upgrade.json"
          }
        },
        "description": "Upgrade self-hosted integration runtime to latest version if availability.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/removeLinks": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_RemoveLinks",
        "x-ms-examples": {
          "IntegrationRuntimes_Upgrade": {
            "$ref": "./examples/IntegrationRuntimes_RemoveLinks.json"
          }
        },
        "description": "Remove all linked integration runtimes under specific data factory in a self-hosted integration runtime.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "linkedIntegrationRuntimeRequest",
            "description": "The data factory name for the linked integration runtime.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkedIntegrationRuntimeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/linkedIntegrationRuntime": {
      "post": {
        "tags": [
          "integrationRuntimes"
        ],
        "operationId": "IntegrationRuntimes_CreateLinkedIntegrationRuntime",
        "x-ms-examples": {
          "IntegrationRuntimes_CreateLinkedIntegrationRuntime": {
            "$ref": "./examples/IntegrationRuntimes_CreateLinkedIntegrationRuntime.json"
          }
        },
        "description": "Create a linked integration runtime entry in a shared integration runtime.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "createLinkedIntegrationRuntimeRequest",
            "description": "The linked integration runtime properties.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateLinkedIntegrationRuntimeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeStatusResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/refreshObjectMetadata": {
      "post": {
        "tags": [
          "integrationRuntimeObjectMetadata"
        ],
        "operationId": "IntegrationRuntimeObjectMetadata_Refresh",
        "x-ms-examples": {
          "IntegrationRuntimeObjectMetadata_Refresh": {
            "$ref": "./examples/IntegrationRuntimeObjectMetadata_Refresh.json"
          }
        },
        "description": "Refresh a SSIS integration runtime object metadata.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/SsisObjectMetadataStatusResponse"
            }
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getObjectMetadata": {
      "post": {
        "tags": [
          "integrationRuntimeObjectMetadata"
        ],
        "operationId": "IntegrationRuntimeObjectMetadata_Get",
        "x-ms-examples": {
          "IntegrationRuntimeObjectMetadata_Get": {
            "$ref": "./examples/IntegrationRuntimeObjectMetadata_Get.json"
          }
        },
        "description": "Get a SSIS integration runtime object metadata by specified path. The return is pageable metadata list.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "name": "getMetadataRequest",
            "description": "The parameters for getting a SSIS object metadata.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GetSsisObjectMetadataRequest"
            }
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/SsisObjectMetadataListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}": {
      "get": {
        "tags": [
          "integrationRuntimeNodes"
        ],
        "operationId": "IntegrationRuntimeNodes_Get",
        "x-ms-examples": {
          "IntegrationRuntimeNodes_Get": {
            "$ref": "./examples/IntegrationRuntimeNodes_Get.json"
          }
        },
        "description": "Gets a self-hosted integration runtime node.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/nodeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/SelfHostedIntegrationRuntimeNode"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "integrationRuntimeNodes"
        ],
        "operationId": "IntegrationRuntimeNodes_Delete",
        "x-ms-examples": {
          "IntegrationRuntimesNodes_Delete": {
            "$ref": "./examples/IntegrationRuntimeNodes_Delete.json"
          }
        },
        "description": "Deletes a self-hosted integration runtime node.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/nodeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "integrationRuntimeNodes"
        ],
        "operationId": "IntegrationRuntimeNodes_Update",
        "x-ms-examples": {
          "IntegrationRuntimeNodes_Update": {
            "$ref": "./examples/IntegrationRuntimeNodes_Update.json"
          }
        },
        "description": "Updates a self-hosted integration runtime node.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/nodeName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "updateIntegrationRuntimeNodeRequest",
            "description": "The parameters for updating an integration runtime node.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateIntegrationRuntimeNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/SelfHostedIntegrationRuntimeNode"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}/ipAddress": {
      "post": {
        "tags": [
          "integrationRuntimeNodes"
        ],
        "operationId": "IntegrationRuntimeNodes_GetIpAddress",
        "x-ms-examples": {
          "IntegrationRuntimeNodes_GetIpAddress": {
            "$ref": "./examples/IntegrationRuntimeNodes_GetIpAddress.json"
          }
        },
        "description": "Get the IP address of self-hosted integration runtime node.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/parameters/nodeName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeNodeIpAddress"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices": {
      "get": {
        "tags": [
          "linkedServices"
        ],
        "operationId": "LinkedServices_ListByFactory",
        "x-ms-examples": {
          "LinkedServices_ListByFactory": {
            "$ref": "./examples/LinkedServices_ListByFactory.json"
          }
        },
        "description": "Lists linked services.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/LinkedServiceListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices/{linkedServiceName}": {
      "put": {
        "tags": [
          "linkedServices"
        ],
        "operationId": "LinkedServices_CreateOrUpdate",
        "x-ms-examples": {
          "LinkedServices_Create": {
            "$ref": "./examples/LinkedServices_Create.json"
          },
          "LinkedServices_Update": {
            "$ref": "./examples/LinkedServices_Update.json"
          }
        },
        "description": "Creates or updates a linked service.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/linkedServiceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the linkedService entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "linkedService",
            "description": "Linked service resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkedServiceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/LinkedServiceResource"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "linkedServices"
        ],
        "operationId": "LinkedServices_Get",
        "x-ms-examples": {
          "LinkedServices_Get": {
            "$ref": "./examples/LinkedServices_Get.json"
          }
        },
        "description": "Gets a linked service.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/linkedServiceName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the linked service entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/LinkedServiceResource"
            }
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "linkedServices"
        ],
        "operationId": "LinkedServices_Delete",
        "x-ms-examples": {
          "LinkedServices_Delete": {
            "$ref": "./examples/LinkedServices_Delete.json"
          }
        },
        "description": "Deletes a linked service.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/linkedServiceName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets": {
      "get": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_ListByFactory",
        "x-ms-examples": {
          "Datasets_ListByFactory": {
            "$ref": "./examples/Datasets_ListByFactory.json"
          }
        },
        "description": "Lists datasets.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/DatasetListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets/{datasetName}": {
      "put": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_CreateOrUpdate",
        "x-ms-examples": {
          "Datasets_Create": {
            "$ref": "./examples/Datasets_Create.json"
          },
          "Datasets_Update": {
            "$ref": "./examples/Datasets_Update.json"
          }
        },
        "description": "Creates or updates a dataset.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/datasetName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the dataset entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "dataset",
            "description": "Dataset resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatasetResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/DatasetResource"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_Get",
        "x-ms-examples": {
          "Datasets_Get": {
            "$ref": "./examples/Datasets_Get.json"
          }
        },
        "description": "Gets a dataset.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/datasetName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the dataset entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/DatasetResource"
            }
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "operationId": "Datasets_Delete",
        "x-ms-examples": {
          "Datasets_Delete": {
            "$ref": "./examples/Datasets_Delete.json"
          }
        },
        "description": "Deletes a dataset.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/datasetName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_ListByFactory",
        "x-ms-examples": {
          "Pipelines_ListByFactory": {
            "$ref": "./examples/Pipelines_ListByFactory.json"
          }
        },
        "description": "Lists pipelines.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/PipelineListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}": {
      "put": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_CreateOrUpdate",
        "x-ms-examples": {
          "Pipelines_Create": {
            "$ref": "./examples/Pipelines_Create.json"
          },
          "Pipelines_Update": {
            "$ref": "./examples/Pipelines_Update.json"
          }
        },
        "description": "Creates or updates a pipeline.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/pipelineName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the pipeline entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "pipeline",
            "description": "Pipeline resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PipelineResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/PipelineResource"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_Get",
        "x-ms-examples": {
          "Pipelines_Get": {
            "$ref": "./examples/Pipelines_Get.json"
          }
        },
        "description": "Gets a pipeline.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/pipelineName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the pipeline entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/PipelineResource"
            }
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_Delete",
        "x-ms-examples": {
          "Pipelines_Delete": {
            "$ref": "./examples/Pipelines_Delete.json"
          }
        },
        "description": "Deletes a pipeline.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/pipelineName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}/createRun": {
      "post": {
        "tags": [
          "pipelines"
        ],
        "operationId": "Pipelines_CreateRun",
        "x-ms-examples": {
          "Pipelines_CreateRun": {
            "$ref": "./examples/Pipelines_CreateRun.json"
          }
        },
        "description": "Creates a run of a pipeline.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/pipelineName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "referencePipelineRunId",
            "description": "The pipeline run identifier. If run ID is specified the parameters of the specified run will be used to create a new run.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "isRecovery",
            "description": "Recovery mode flag. If recovery mode is set to true, the specified referenced pipeline run and the new run will be grouped under the same groupId.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "startActivityName",
            "description": "In recovery mode, the rerun will start from this activity. If not specified, all activities will run.",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "startFromFailure",
            "description": "In recovery mode, if set to true, the rerun will start from failed activities. The property will be used only if startActivityName is not specified.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "Parameters of the pipeline run. These parameters will be used only if the runId is not specified.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ParameterValueSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/CreateRunResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryPipelineRuns": {
      "post": {
        "operationId": "PipelineRuns_QueryByFactory",
        "x-ms-examples": {
          "PipelineRuns_QueryByFactory": {
            "$ref": "./examples/PipelineRuns_QueryByFactory.json"
          }
        },
        "description": "Query pipeline runs in the factory based on input filter conditions.",
        "tags": [
          "pipelineruns"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "filterParameters",
            "description": "Parameters to filter the pipeline run.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunFilterParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/PipelineRunsQueryResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}": {
      "get": {
        "operationId": "PipelineRuns_Get",
        "x-ms-examples": {
          "PipelineRuns_Get": {
            "$ref": "./examples/PipelineRuns_Get.json"
          }
        },
        "description": "Get a pipeline run by its run ID.",
        "tags": [
          "pipelineruns"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/runId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/PipelineRun"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/queryActivityruns": {
      "post": {
        "operationId": "ActivityRuns_QueryByPipelineRun",
        "x-ms-examples": {
          "ActivityRuns_QueryByPipelineRun": {
            "$ref": "./examples/ActivityRuns_QueryByPipelineRun.json"
          }
        },
        "description": "Query activity runs based on input filter conditions.",
        "tags": [
          "activityruns"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/runId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "filterParameters",
            "description": "Parameters to filter the activity runs.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunFilterParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ActivityRunsQueryResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/cancel": {
      "post": {
        "operationId": "PipelineRuns_Cancel",
        "x-ms-examples": {
          "PipelineRuns_Cancel": {
            "$ref": "./examples/PipelineRuns_Cancel.json"
          }
        },
        "description": "Cancel a pipeline run by its run ID.",
        "tags": [
          "pipelineruns"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/runId"
          },
          {
            "name": "isRecursive",
            "description": "If true, cancel all the Child pipelines that are triggered by the current pipeline.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Pipeline run has been canceled successfully. "
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers": {
      "get": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_ListByFactory",
        "x-ms-examples": {
          "Triggers_ListByFactory": {
            "$ref": "./examples/Triggers_ListByFactory.json"
          }
        },
        "description": "Lists triggers.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/TriggerListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/querytriggers": {
      "post": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_QueryByFactory",
        "x-ms-examples": {
          "Triggers_QueryByFactory": {
            "$ref": "./examples/Triggers_QueryByFactory.json"
          }
        },
        "description": "Query triggers.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "filterParameters",
            "description": "Parameters to filter the triggers.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriggerFilterParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/TriggerQueryResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}": {
      "put": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_CreateOrUpdate",
        "x-ms-examples": {
          "Triggers_Create": {
            "$ref": "./examples/Triggers_Create.json"
          },
          "Triggers_Update": {
            "$ref": "./examples/Triggers_Update.json"
          }
        },
        "description": "Creates or updates a trigger.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/triggerName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the trigger entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "trigger",
            "description": "Trigger resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriggerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/TriggerResource"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "trigger"
        ],
        "operationId": "Triggers_Get",
        "x-ms-examples": {
          "Triggers_Get": {
            "$ref": "./examples/Triggers_Get.json"
          }
        },
        "description": "Gets a trigger.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/triggerName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the trigger entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/TriggerResource"
            }
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_Delete",
        "x-ms-examples": {
          "Triggers_Delete": {
            "$ref": "./examples/Triggers_Delete.json"
          }
        },
        "description": "Deletes a trigger.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/triggerName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/subscribeToEvents": {
      "post": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_SubscribeToEvents",
        "x-ms-examples": {
          "Triggers_SubscribeToEvents": {
            "$ref": "./examples/Triggers_SubscribeToEvents.json"
          }
        },
        "description": "Subscribe event trigger to events.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/triggerName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger is subscribed to events.",
            "schema": {
              "$ref": "#/definitions/TriggerSubscriptionOperationStatus"
            }
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/getEventSubscriptionStatus": {
      "post": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_GetEventSubscriptionStatus",
        "x-ms-examples": {
          "Triggers_GetEventSubscriptionStatus": {
            "$ref": "./examples/Triggers_GetEventSubscriptionStatus.json"
          }
        },
        "description": "Get a trigger's event subscription status.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/triggerName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger event subscription state.",
            "schema": {
              "$ref": "#/definitions/TriggerSubscriptionOperationStatus"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/unsubscribeFromEvents": {
      "post": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_UnsubscribeFromEvents",
        "x-ms-examples": {
          "Triggers_UnsubscribeFromEvents": {
            "$ref": "./examples/Triggers_UnsubscribeFromEvents.json"
          }
        },
        "description": "Unsubscribe event trigger from events.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/triggerName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger is unsubscribed from events.",
            "schema": {
              "$ref": "#/definitions/TriggerSubscriptionOperationStatus"
            }
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/start": {
      "post": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_Start",
        "x-ms-examples": {
          "Triggers_Start": {
            "$ref": "./examples/Triggers_Start.json"
          }
        },
        "description": "Starts a trigger.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/triggerName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger has been started successfully."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/stop": {
      "post": {
        "tags": [
          "triggers"
        ],
        "operationId": "Triggers_Stop",
        "x-ms-examples": {
          "Triggers_Stop": {
            "$ref": "./examples/Triggers_Stop.json"
          }
        },
        "description": "Stops a trigger.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/triggerName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger has been stopped successfully."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/triggerRuns/{runId}/rerun": {
      "post": {
        "tags": [
          "triggerruns"
        ],
        "operationId": "TriggerRuns_Rerun",
        "x-ms-examples": {
          "Triggers_Rerun": {
            "$ref": "./examples/TriggerRuns_Rerun.json"
          }
        },
        "description": "Rerun single trigger instance by runId.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/triggerName"
          },
          {
            "$ref": "#/parameters/runId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "TriggerRun has been restarted."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/triggerRuns/{runId}/cancel": {
      "post": {
        "tags": [
          "triggerruns"
        ],
        "operationId": "TriggerRuns_Cancel",
        "x-ms-examples": {
          "Triggers_Cancel": {
            "$ref": "./examples/TriggerRuns_Cancel.json"
          }
        },
        "description": "Cancel a single trigger instance by runId.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/triggerName"
          },
          {
            "$ref": "#/parameters/runId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "TriggerRun has been cancelled."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryTriggerRuns": {
      "post": {
        "tags": [
          "triggerruns"
        ],
        "operationId": "TriggerRuns_QueryByFactory",
        "x-ms-examples": {
          "TriggerRuns_QueryByFactory": {
            "$ref": "./examples/TriggerRuns_QueryByFactory.json"
          }
        },
        "description": "Query trigger runs.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "filterParameters",
            "description": "Parameters to filter the pipeline run.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RunFilterParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/TriggerRunsQueryResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows/{dataFlowName}": {
      "put": {
        "tags": [
          "dataFlows"
        ],
        "operationId": "DataFlows_CreateOrUpdate",
        "x-ms-examples": {
          "DataFlows_Create": {
            "$ref": "./examples/DataFlows_Create.json"
          },
          "DataFlows_Update": {
            "$ref": "./examples/DataFlows_Update.json"
          }
        },
        "description": "Creates or updates a data flow.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/dataFlowName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the data flow entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "dataFlow",
            "description": "Data flow resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataFlowResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/DataFlowResource"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "dataFlows"
        ],
        "operationId": "DataFlows_Get",
        "x-ms-examples": {
          "DataFlows_Get": {
            "$ref": "./examples/DataFlows_Get.json"
          }
        },
        "description": "Gets a data flow.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/dataFlowName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the data flow entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/DataFlowResource"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dataFlows"
        ],
        "operationId": "DataFlows_Delete",
        "x-ms-examples": {
          "DataFlows_Delete": {
            "$ref": "./examples/DataFlows_Delete.json"
          }
        },
        "description": "Deletes a data flow.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/dataFlowName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows": {
      "get": {
        "tags": [
          "dataFlows"
        ],
        "operationId": "DataFlows_ListByFactory",
        "x-ms-examples": {
          "DataFlows_ListByFactory": {
            "$ref": "./examples/DataFlows_ListByFactory.json"
          }
        },
        "description": "Lists data flows.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/DataFlowListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/createDataFlowDebugSession": {
      "post": {
        "tags": [
          "dataFlowDebugSession"
        ],
        "operationId": "DataFlowDebugSession_Create",
        "x-ms-examples": {
          "DataFlowDebugSession_Create": {
            "$ref": "./examples/DataFlowDebugSession_Create.json"
          }
        },
        "description": "Creates a data flow debug session.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "request",
            "description": "Data flow debug session definition",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDataFlowDebugSessionRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "location": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/CreateDataFlowDebugSessionResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryDataFlowDebugSessions": {
      "post": {
        "tags": [
          "dataFlowDebugSession"
        ],
        "operationId": "DataFlowDebugSession_QueryByFactory",
        "x-ms-examples": {
          "DataFlowDebugSession_QueryByFactory": {
            "$ref": "./examples/DataFlowDebugSession_QueryByFactory.json"
          }
        },
        "description": "Query all active data flow debug sessions.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/QueryDataFlowDebugSessionsResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/addDataFlowToDebugSession": {
      "post": {
        "tags": [
          "dataFlowDebugSession"
        ],
        "operationId": "DataFlowDebugSession_AddDataFlow",
        "x-ms-examples": {
          "DataFlowDebugSession_AddDataFlow": {
            "$ref": "./examples/DataFlowDebugSession_AddDataFlow.json"
          }
        },
        "description": "Add a data flow into debug session.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "request",
            "description": "Data flow debug session definition with debug content.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataFlowDebugPackage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/AddDataFlowToDebugSessionResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/deleteDataFlowDebugSession": {
      "post": {
        "tags": [
          "dataFlowDebugSession"
        ],
        "operationId": "DataFlowDebugSession_Delete",
        "x-ms-examples": {
          "DataFlowDebugSession_Delete": {
            "$ref": "./examples/DataFlowDebugSession_Delete.json"
          }
        },
        "description": "Deletes a data flow debug session.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "request",
            "description": "Data flow debug session definition for deletion",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteDataFlowDebugSessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/executeDataFlowDebugCommand": {
      "post": {
        "tags": [
          "dataFlowDebugSession"
        ],
        "operationId": "DataFlowDebugSession_ExecuteCommand",
        "x-ms-examples": {
          "DataFlowDebugSession_ExecuteCommand": {
            "$ref": "./examples/DataFlowDebugSession_ExecuteCommand.json"
          }
        },
        "description": "Execute a data flow debug command.",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "request",
            "description": "Data flow debug command definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataFlowDebugCommandRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "location": {
                "description": "URI to poll for asynchronous operation status.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/DataFlowDebugCommandResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks": {
      "get": {
        "tags": [
          "managedVirtualNetworks"
        ],
        "operationId": "ManagedVirtualNetworks_ListByFactory",
        "x-ms-examples": {
          "ManagedVirtualNetworks_ListByFactory": {
            "$ref": "./examples/ManagedVirtualNetworks_ListByFactory.json"
          }
        },
        "description": "Lists managed Virtual Networks.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ManagedVirtualNetworkListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}": {
      "put": {
        "tags": [
          "managedVirtualNetworks"
        ],
        "operationId": "ManagedVirtualNetworks_CreateOrUpdate",
        "x-ms-examples": {
          "ManagedVirtualNetworks_Create": {
            "$ref": "./examples/ManagedVirtualNetworks_Create.json"
          }
        },
        "description": "Creates or updates a managed Virtual Network.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the managed Virtual Network entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "managedVirtualNetwork",
            "description": "Managed Virtual Network resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedVirtualNetworkResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ManagedVirtualNetworkResource"
            }
          },
          "default": {
            "description": "An error response received from PUT managed Virtual Network operation.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "managedVirtualNetworks"
        ],
        "operationId": "ManagedVirtualNetworks_Get",
        "x-ms-examples": {
          "ManagedVirtualNetworks_Get": {
            "$ref": "./examples/ManagedVirtualNetworks_Get.json"
          }
        },
        "description": "Gets a managed Virtual Network.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the managed Virtual Network entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ManagedVirtualNetworkResource"
            }
          },
          "default": {
            "description": "An error response received from GET managed Virtual Network operation.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}/managedPrivateEndpoints": {
      "get": {
        "tags": [
          "managedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_ListByFactory",
        "x-ms-examples": {
          "ManagedPrivateEndpoints_ListByFactory": {
            "$ref": "./examples/ManagedPrivateEndpoints_ListByFactory.json"
          }
        },
        "description": "Lists managed private endpoints.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/managedPrivateEndpointListResponse"
            }
          },
          "default": {
            "description": "An error response received from the Azure Data Factory service.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}/managedPrivateEndpoints/{managedPrivateEndpointName}": {
      "put": {
        "tags": [
          "managedPrivateEndpoints"
        ],
        "operationId": "managedPrivateEndpoints_CreateOrUpdate",
        "x-ms-examples": {
          "ManagedVirtualNetworks_Create": {
            "$ref": "./examples/ManagedPrivateEndpoints_Create.json"
          }
        },
        "description": "Creates or updates a managed private endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/parameters/managedPrivateEndpointName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the managed private endpoint entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."
          },
          {
            "name": "managedPrivateEndpoint",
            "description": "Managed private endpoint resource definition.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedPrivateEndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ManagedPrivateEndpointResource"
            }
          },
          "default": {
            "description": "An error response received from PUT managed private endpoint operation.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "managedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_Get",
        "x-ms-examples": {
          "ManagedPrivateEndpoints_Get": {
            "$ref": "./examples/ManagedPrivateEndpoints_Get.json"
          }
        },
        "description": "Gets a managed private endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/parameters/managedPrivateEndpointName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "ETag of the managed private endpoint entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "$ref": "#/definitions/ManagedPrivateEndpointResource"
            }
          },
          "default": {
            "description": "An error response received from GET managed private endpoint operation.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "managedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_Delete",
        "x-ms-examples": {
          "ManagedVirtualNetworks_Delete": {
            "$ref": "./examples/ManagedPrivateEndpoints_Delete.json"
          }
        },
        "description": "Deletes a managed private endpoint.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/factoryName"
          },
          {
            "$ref": "#/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/parameters/managedPrivateEndpointName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "An error response received from DELETE managed private endpoint operation.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Resource": {
      "x-ms-azure-resource": true,
      "description": "Azure Data Factory top-level resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "eTag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        }
      }
    },
    "SubResource": {
      "description": "Azure Data Factory nested resource, which belongs to a factory.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Etag identifies change in the resource.",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "SubResourceDebugResource": {
      "description": "Azure Data Factory nested debug resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name."
        }
      }
    },
    "Expression": {
      "description": "Azure Data Factory expression definition.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Expression type.",
          "enum": [
            "Expression"
          ]
        },
        "value": {
          "type": "string",
          "description": "Expression value."
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "SecureString": {
      "x-ms-discriminator-value": "SecureString",
      "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SecretBase"
        }
      ],
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of secure string."
        }
      },
      "required": [
        "value"
      ]
    },
    "AzureKeyVaultSecretReference": {
      "x-ms-discriminator-value": "AzureKeyVaultSecret",
      "description": "Azure Key Vault secret reference.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SecretBase"
        }
      ],
      "properties": {
        "store": {
          "description": "The Azure Key Vault linked service reference.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "secretName": {
          "type": "object",
          "description": "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string)."
        },
        "secretVersion": {
          "type": "object",
          "description": "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string)."
        }
      },
      "required": [
        "store",
        "secretName"
      ]
    },
    "SecretBase": {
      "description": "The base definition of a secret type.",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the secret."
        }
      },
      "required": [
        "type"
      ]
    },
    "FactoryListResponse": {
      "description": "A list of factory resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of factories.",
          "items": {
            "$ref": "#/definitions/Factory"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "IntegrationRuntimeListResponse": {
      "description": "A list of integration runtime resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of integration runtimes.",
          "items": {
            "$ref": "#/definitions/IntegrationRuntimeResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "IntegrationRuntimeReference": {
      "description": "Integration runtime reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of integration runtime.",
          "enum": [
            "IntegrationRuntimeReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference integration runtime name."
        },
        "parameters": {
          "$ref": "#/definitions/ParameterValueSpecification",
          "description": "Arguments for integration runtime."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "IntegrationRuntimeResource": {
      "description": "Integration runtime resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntime",
          "description": "Integration runtime properties."
        }
      },
      "required": [
        "properties"
      ]
    },
    "IntegrationRuntimeDebugResource": {
      "description": "Integration runtime debug resource.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResourceDebugResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntime",
          "description": "Integration runtime properties."
        }
      },
      "required": [
        "properties"
      ]
    },
    "IntegrationRuntimeStatusResponse": {
      "description": "Integration runtime status response.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The integration runtime name.",
          "readOnly": true
        },
        "properties": {
          "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeStatus",
          "description": "Integration runtime properties."
        }
      },
      "required": [
        "properties"
      ]
    },
    "IntegrationRuntimeStatusListResponse": {
      "description": "A list of integration runtime status.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of integration runtime status.",
          "items": {
            "$ref": "#/definitions/IntegrationRuntimeStatusResponse"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "UpdateIntegrationRuntimeRequest": {
      "description": "Update integration runtime request.",
      "type": "object",
      "properties": {
        "autoUpdate": {
          "description": "Enables or disables the auto-update feature of the self-hosted integration runtime. See https://go.microsoft.com/fwlink/?linkid=854189.",
          "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeAutoUpdate"
        },
        "updateDelayOffset": {
          "description": "The time offset (in hours) in the day, e.g., PT03H is 3 hours. The integration runtime auto update will happen on that time.",
          "type": "string"
        }
      }
    },
    "UpdateIntegrationRuntimeNodeRequest": {
      "description": "Update integration runtime node request.",
      "type": "object",
      "properties": {
        "concurrentJobsLimit": {
          "description": "The number of concurrent jobs permitted to run on the integration runtime node. Values between 1 and maxConcurrentJobs(inclusive) are allowed.",
          "type": "integer",
          "minimum": 1
        }
      }
    },
    "LinkedIntegrationRuntimeRequest": {
      "description": "Data factory name for linked integration runtime request.",
      "type": "object",
      "properties": {
        "factoryName": {
          "description": "The data factory name for linked integration runtime.",
          "type": "string",
          "x-ms-client-name": "linkedFactoryName"
        }
      },
      "required": [
        "factoryName"
      ]
    },
    "CreateLinkedIntegrationRuntimeRequest": {
      "description": "The linked integration runtime information.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the linked integration runtime.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "The ID of the subscription that the linked integration runtime belongs to.",
          "type": "string"
        },
        "dataFactoryName": {
          "description": "The name of the data factory that the linked integration runtime belongs to.",
          "type": "string"
        },
        "dataFactoryLocation": {
          "description": "The location of the data factory that the linked integration runtime belongs to.",
          "type": "string"
        }
      }
    },
    "LinkedServiceListResponse": {
      "description": "A list of linked service resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of linked services.",
          "items": {
            "$ref": "#/definitions/LinkedServiceResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "DatasetListResponse": {
      "description": "A list of dataset resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of datasets.",
          "items": {
            "$ref": "#/definitions/DatasetResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "PipelineListResponse": {
      "description": "A list of pipeline resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of pipelines.",
          "items": {
            "$ref": "#/definitions/PipelineResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "TriggerQueryResponse": {
      "description": "A query of triggers.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of triggers.",
          "items": {
            "$ref": "#/definitions/TriggerResource"
          }
        },
        "continuationToken": {
          "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
          "type": "string"
        }
      }
    },
    "TriggerListResponse": {
      "description": "A list of trigger resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of triggers.",
          "items": {
            "$ref": "#/definitions/TriggerResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "CreateRunResponse": {
      "description": "Response body with a run identifier.",
      "type": "object",
      "properties": {
        "runId": {
          "description": "Identifier of a run.",
          "type": "string"
        }
      },
      "required": [
        "runId"
      ]
    },
    "CloudError": {
      "x-ms-external": true,
      "description": "The object that defines the structure of an Azure Data Factory error response.",
      "type": "object",
      "properties": {
        "error": {
          "x-ms-client-flatten": true,
          "description": "Error data",
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "required": [
        "error"
      ]
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "description": "The object that defines the structure of an Azure Data Factory error.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message.",
          "type": "string"
        },
        "target": {
          "description": "Property name/path in request associated with error.",
          "type": "string"
        },
        "details": {
          "description": "Array with additional error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudError"
          }
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "TriggerSubscriptionOperationStatus": {
      "description": "Defines the response of a trigger subscription operation.",
      "type": "object",
      "properties": {
        "triggerName": {
          "description": "Trigger name.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "Enabled",
            "Provisioning",
            "Deprovisioning",
            "Disabled",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "EventSubscriptionStatus",
            "modelAsString": true
          },
          "description": "Event Subscription Status.",
          "readOnly": true
        }
      }
    },
    "VariableDefinitionSpecification": {
      "description": "Definition of variable for a Pipeline.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/VariableSpecification"
      }
    },
    "VariableSpecification": {
      "description": "Definition of a single variable for a Pipeline.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Variable type.",
          "enum": [
            "String",
            "Bool",
            "Array"
          ],
          "x-ms-enum": {
            "name": "VariableType",
            "modelAsString": true
          }
        },
        "defaultValue": {
          "type": "object",
          "description": "Default value of variable."
        }
      },
      "required": [
        "type"
      ]
    },
    "ParameterDefinitionSpecification": {
      "description": "Definition of all parameters for an entity.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ParameterSpecification"
      }
    },
    "ParameterSpecification": {
      "description": "Definition of a single parameter for an entity.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Parameter type.",
          "enum": [
            "Object",
            "String",
            "Int",
            "Float",
            "Bool",
            "Array",
            "SecureString"
          ],
          "x-ms-enum": {
            "name": "ParameterType",
            "modelAsString": true
          }
        },
        "defaultValue": {
          "type": "object",
          "description": "Default value of parameter."
        }
      },
      "required": [
        "type"
      ]
    },
    "ParameterValueSpecification": {
      "description": "An object mapping parameter names to argument values.",
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "FactoryRepoConfiguration": {
      "description": "Factory's git repo information.",
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of repo configuration."
        },
        "accountName": {
          "description": "Account name.",
          "type": "string"
        },
        "repositoryName": {
          "description": "Repository name.",
          "type": "string"
        },
        "collaborationBranch": {
          "description": "Collaboration branch.",
          "type": "string"
        },
        "rootFolder": {
          "description": "Root folder.",
          "type": "string"
        },
        "lastCommitId": {
          "description": "Last commit id.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "accountName",
        "repositoryName",
        "collaborationBranch",
        "rootFolder"
      ]
    },
    "FactoryVSTSConfiguration": {
      "x-ms-discriminator-value": "FactoryVSTSConfiguration",
      "description": "Factory's VSTS repo information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FactoryRepoConfiguration"
        }
      ],
      "properties": {
        "projectName": {
          "description": "VSTS project name.",
          "type": "string"
        },
        "tenantId": {
          "description": "VSTS tenant id.",
          "type": "string"
        }
      },
      "required": [
        "projectName"
      ]
    },
    "FactoryGitHubConfiguration": {
      "x-ms-discriminator-value": "FactoryGitHubConfiguration",
      "description": "Factory's GitHub repo information.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FactoryRepoConfiguration"
        }
      ],
      "properties": {
        "hostName": {
          "description": "GitHub Enterprise host name. For example: https://github.mydomain.com",
          "type": "string"
        }
      }
    },
    "FactoryRepoUpdate": {
      "description": "Factory's git repo information.",
      "properties": {
        "factoryResourceId": {
          "description": "The factory resource id.",
          "type": "string"
        },
        "repoConfiguration": {
          "$ref": "#/definitions/FactoryRepoConfiguration",
          "description": "Git repo information of the factory."
        }
      }
    },
    "GitHubAccessTokenRequest": {
      "description": "Get GitHub access token request definition.",
      "properties": {
        "gitHubAccessCode": {
          "description": "GitHub access code.",
          "type": "string"
        },
        "gitHubClientId": {
          "description": "GitHub application client ID.",
          "type": "string"
        },
        "gitHubAccessTokenBaseUrl": {
          "description": "GitHub access token base URL.",
          "type": "string"
        }
      },
      "required": [
        "gitHubAccessCode",
        "gitHubAccessTokenBaseUrl"
      ]
    },
    "GitHubAccessTokenResponse": {
      "description": "Get GitHub access token response definition.",
      "properties": {
        "gitHubAccessToken": {
          "description": "GitHub access token.",
          "type": "string"
        }
      }
    },
    "UserAccessPolicy": {
      "description": "Get Data Plane read only token request definition.",
      "properties": {
        "permissions": {
          "description": "The string with permissions for Data Plane access. Currently only 'r' is supported which grants read only access.",
          "type": "string"
        },
        "accessResourcePath": {
          "description": "The resource path to get access relative to factory. Currently only empty string is supported which corresponds to the factory resource.",
          "type": "string"
        },
        "profileName": {
          "description": "The name of the profile. Currently only the default is supported. The default value is DefaultProfile.",
          "type": "string"
        },
        "startTime": {
          "description": "Start time for the token. If not specified the current time will be used.",
          "type": "string"
        },
        "expireTime": {
          "description": "Expiration time for the token. Maximum duration for the token is eight hours and by default the token will expire in eight hours.",
          "type": "string"
        }
      }
    },
    "AccessPolicyResponse": {
      "description": "Get Data Plane read only token response definition.",
      "properties": {
        "policy": {
          "description": "The user access policy.",
          "$ref": "#/definitions/UserAccessPolicy"
        },
        "accessToken": {
          "description": "Data Plane read only access token.",
          "type": "string"
        },
        "dataPlaneUrl": {
          "description": "Data Plane service base URL.",
          "type": "string"
        }
      }
    },
    "FactoryProperties": {
      "description": "Factory resource properties.",
      "properties": {
        "provisioningState": {
          "description": "Factory provisioning state, example Succeeded.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "Time the factory was created in ISO8601 format.",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "version": {
          "description": "Version of the factory.",
          "type": "string",
          "readOnly": true
        },
        "repoConfiguration": {
          "$ref": "#/definitions/FactoryRepoConfiguration",
          "description": "Git repo information of the factory."
        },
        "globalParameters": {
          "$ref": "#/definitions/GlobalParameterDefinitionSpecification",
          "description": "List of parameters for factory."
        },
        "encryption": {
          "$ref": "#/definitions/EncryptionConfiguration",
          "description": "Properties to enable Customer Managed Key for the factory."
        },
        "publicNetworkAccess": {
          "description": "Whether or not public network access is allowed for the data factory.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          }
        }
      }
    },
    "EncryptionConfiguration": {
      "description": "Definition of CMK for the factory.",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "The name of the key in Azure Key Vault to use as Customer Managed Key."
        },
        "vaultBaseUrl": {
          "type": "string",
          "description": "The url of the Azure Key Vault used for CMK."
        },
        "keyVersion": {
          "type": "string",
          "description": "The version of the key used for CMK. If not provided, latest version will be used."
        },
        "identity": {
          "$ref": "#/definitions/CMKIdentityDefinition",
          "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used."
        }
      },
      "required": [
        "keyName",
        "vaultBaseUrl"
      ]
    },
    "CMKIdentityDefinition": {
      "description": "Managed Identity used for CMK.",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "The resource id of the user assigned identity to authenticate to customer's key vault."
        }
      }
    },
    "GlobalParameterDefinitionSpecification": {
      "description": "Definition of all parameters for an entity.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/GlobalParameterSpecification"
      }
    },
    "GlobalParameterSpecification": {
      "description": "Definition of a single parameter for an entity.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Global Parameter type.",
          "enum": [
            "Object",
            "String",
            "Int",
            "Float",
            "Bool",
            "Array"
          ],
          "x-ms-enum": {
            "name": "GlobalParameterType",
            "modelAsString": true
          }
        },
        "value": {
          "type": "object",
          "description": "Value of parameter."
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "PipelineResource": {
      "description": "Pipeline resource type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "./entityTypes/Pipeline.json#/definitions/Pipeline",
          "description": "Properties of the pipeline."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "properties"
      ]
    },
    "PipelineReference": {
      "description": "Pipeline reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Pipeline reference type.",
          "enum": [
            "PipelineReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference pipeline name."
        },
        "name": {
          "type": "string",
          "description": "Reference name."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "TriggerPipelineReference": {
      "description": "Pipeline that needs to be triggered with the given parameters.",
      "properties": {
        "pipelineReference": {
          "description": "Pipeline reference.",
          "$ref": "#/definitions/PipelineReference"
        },
        "parameters": {
          "description": "Pipeline parameters.",
          "$ref": "#/definitions/ParameterValueSpecification"
        }
      }
    },
    "TriggerResource": {
      "description": "Trigger resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/Trigger.json#/definitions/Trigger",
          "description": "Properties of the trigger."
        }
      },
      "required": [
        "properties"
      ]
    },
    "Factory": {
      "description": "Factory resource type.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "identity": {
          "$ref": "#/definitions/FactoryIdentity",
          "description": "Managed service identity of the factory."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FactoryProperties",
          "description": "Properties of the factory."
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "FactoryUpdateParameters": {
      "description": "Parameters for updating a factory resource.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        },
        "identity": {
          "$ref": "#/definitions/FactoryIdentity",
          "description": "Managed service identity of the factory."
        }
      }
    },
    "FactoryIdentity": {
      "description": "Identity properties of the factory resource.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "FactoryIdentityType",
            "modelAsString": false
          }
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The principal id of the identity."
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The client tenant id of the identity."
        },
        "userAssignedIdentities": {
          "$ref": "#/definitions/UserAssignedIdentitiesDefinitionSpecification",
          "description": "List of user assigned identities for the factory."
        }
      },
      "required": [
        "type"
      ]
    },
    "UserAssignedIdentitiesDefinitionSpecification": {
      "description": "Definition of all user assigned identities for a factory.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/UserAssignedIdentitySpecification"
      }
    },
    "UserAssignedIdentitySpecification": {
      "description": "Definition of a single user assigned identity for a factory.",
      "type": "object",
      "properties": {}
    },
    "DatasetReference": {
      "description": "Dataset reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Dataset reference type.",
          "enum": [
            "DatasetReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference dataset name."
        },
        "parameters": {
          "$ref": "#/definitions/ParameterValueSpecification",
          "description": "Arguments for dataset."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "DatasetResource": {
      "description": "Dataset resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/Dataset.json#/definitions/Dataset",
          "description": "Dataset properties."
        }
      },
      "required": [
        "properties"
      ]
    },
    "DatasetDebugResource": {
      "description": "Dataset debug resource.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResourceDebugResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/Dataset.json#/definitions/Dataset",
          "description": "Dataset properties."
        }
      },
      "required": [
        "properties"
      ]
    },
    "LinkedServiceReference": {
      "description": "Linked service reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Linked service reference type.",
          "enum": [
            "LinkedServiceReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference LinkedService name."
        },
        "parameters": {
          "$ref": "#/definitions/ParameterValueSpecification",
          "description": "Arguments for LinkedService."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "LinkedServiceResource": {
      "description": "Linked service resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/LinkedService.json#/definitions/LinkedService",
          "description": "Properties of linked service."
        }
      },
      "required": [
        "properties"
      ]
    },
    "LinkedServiceDebugResource": {
      "description": "Linked service debug resource.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResourceDebugResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/LinkedService.json#/definitions/LinkedService",
          "description": "Properties of linked service."
        }
      },
      "required": [
        "properties"
      ]
    },
    "TriggerFilterParameters": {
      "description": "Query parameters for triggers.",
      "type": "object",
      "properties": {
        "continuationToken": {
          "description": "The continuation token for getting the next page of results. Null for first page.",
          "type": "string"
        },
        "parentTriggerName": {
          "description": "The name of the parent TumblingWindowTrigger to get the child rerun triggers",
          "type": "string"
        }
      }
    },
    "RunFilterParameters": {
      "description": "Query parameters for listing runs.",
      "type": "object",
      "properties": {
        "continuationToken": {
          "description": "The continuation token for getting the next page of results. Null for first page.",
          "type": "string"
        },
        "lastUpdatedAfter": {
          "description": "The time at or after which the run event was updated in 'ISO 8601' format.",
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedBefore": {
          "description": "The time at or before which the run event was updated in 'ISO 8601' format.",
          "type": "string",
          "format": "date-time"
        },
        "filters": {
          "type": "array",
          "description": "List of filters.",
          "items": {
            "$ref": "#/definitions/RunQueryFilter"
          }
        },
        "orderBy": {
          "type": "array",
          "description": "List of OrderBy option.",
          "items": {
            "$ref": "#/definitions/RunQueryOrderBy"
          }
        }
      },
      "required": [
        "lastUpdatedAfter",
        "lastUpdatedBefore"
      ]
    },
    "RunQueryFilter": {
      "description": "Query filter option for listing runs.",
      "type": "object",
      "properties": {
        "operand": {
          "description": "Parameter name to be used for filter. The allowed operands to query pipeline runs are PipelineName, RunStart, RunEnd and Status; to query activity runs are ActivityName, ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query trigger runs are TriggerName, TriggerRunTimestamp and Status.",
          "type": "string",
          "enum": [
            "PipelineName",
            "Status",
            "RunStart",
            "RunEnd",
            "ActivityName",
            "ActivityRunStart",
            "ActivityRunEnd",
            "ActivityType",
            "TriggerName",
            "TriggerRunTimestamp",
            "RunGroupId",
            "LatestOnly"
          ],
          "x-ms-enum": {
            "name": "RunQueryFilterOperand",
            "modelAsString": true
          }
        },
        "operator": {
          "description": "Operator to be used for filter.",
          "type": "string",
          "enum": [
            "Equals",
            "NotEquals",
            "In",
            "NotIn"
          ],
          "x-ms-enum": {
            "name": "RunQueryFilterOperator",
            "modelAsString": true
          }
        },
        "values": {
          "type": "array",
          "description": "List of filter values.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "operand",
        "operator",
        "values"
      ]
    },
    "RunQueryOrderBy": {
      "description": "An object to provide order by options for listing runs.",
      "type": "object",
      "properties": {
        "orderBy": {
          "description": "Parameter name to be used for order by. The allowed parameters to order by for pipeline runs are PipelineName, RunStart, RunEnd and Status; for activity runs are ActivityName, ActivityRunStart, ActivityRunEnd and Status; for trigger runs are TriggerName, TriggerRunTimestamp and Status.",
          "type": "string",
          "enum": [
            "RunStart",
            "RunEnd",
            "PipelineName",
            "Status",
            "ActivityName",
            "ActivityRunStart",
            "ActivityRunEnd",
            "TriggerName",
            "TriggerRunTimestamp"
          ],
          "x-ms-enum": {
            "name": "RunQueryOrderByField",
            "modelAsString": true
          }
        },
        "order": {
          "description": "Sorting order of the parameter.",
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ],
          "x-ms-enum": {
            "name": "RunQueryOrder",
            "modelAsString": true
          }
        }
      },
      "required": [
        "orderBy",
        "order"
      ]
    },
    "PipelineRunsQueryResponse": {
      "description": "A list pipeline runs.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of pipeline runs.",
          "items": {
            "$ref": "#/definitions/PipelineRun"
          }
        },
        "continuationToken": {
          "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
          "type": "string"
        }
      }
    },
    "PipelineRun": {
      "description": "Information about a pipeline run.",
      "type": "object",
      "properties": {
        "runId": {
          "description": "Identifier of a run.",
          "type": "string",
          "readOnly": true
        },
        "runGroupId": {
          "description": "Identifier that correlates all the recovery runs of a pipeline run.",
          "type": "string",
          "readOnly": true
        },
        "isLatest": {
          "description": "Indicates if the recovered pipeline run is the latest in its group.",
          "type": "boolean",
          "readOnly": true
        },
        "pipelineName": {
          "description": "The pipeline name.",
          "type": "string",
          "readOnly": true
        },
        "parameters": {
          "description": "The full or partial list of parameter name, value pair used in the pipeline run.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "runDimensions": {
          "description": "Run dimensions emitted by Pipeline run.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "invokedBy": {
          "description": "Entity that started the pipeline run.",
          "$ref": "#/definitions/PipelineRunInvokedBy",
          "readOnly": true
        },
        "lastUpdated": {
          "description": "The last updated timestamp for the pipeline run event in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "runStart": {
          "description": "The start time of a pipeline run in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "runEnd": {
          "description": "The end time of a pipeline run in ISO8601 format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "durationInMs": {
          "description": "The duration of a pipeline run.",
          "type": "integer",
          "readOnly": true
        },
        "status": {
          "description": "The status of a pipeline run.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The message from a pipeline run.",
          "type": "string",
          "readOnly": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "PipelineRunInvokedBy": {
      "description": "Provides entity name and id that started the pipeline run.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the entity that started the pipeline run.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "The ID of the entity that started the run.",
          "type": "string",
          "readOnly": true
        },
        "invokedByType": {
          "description": "The type of the entity that started the run.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ActivityRunsQueryResponse": {
      "description": "A list activity runs.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of activity runs.",
          "items": {
            "$ref": "#/definitions/ActivityRun"
          }
        },
        "continuationToken": {
          "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
          "type": "string"
        }
      }
    },
    "ActivityRun": {
      "description": "Information about an activity run in a pipeline.",
      "type": "object",
      "properties": {
        "pipelineName": {
          "description": "The name of the pipeline.",
          "type": "string",
          "readOnly": true
        },
        "pipelineRunId": {
          "description": "The id of the pipeline run.",
          "type": "string",
          "readOnly": true
        },
        "activityName": {
          "description": "The name of the activity.",
          "type": "string",
          "readOnly": true
        },
        "activityType": {
          "description": "The type of the activity.",
          "type": "string",
          "readOnly": true
        },
        "activityRunId": {
          "description": "The id of the activity run.",
          "type": "string",
          "readOnly": true
        },
        "linkedServiceName": {
          "description": "The name of the compute linked service.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The status of the activity run.",
          "type": "string",
          "readOnly": true
        },
        "activityRunStart": {
          "description": "The start time of the activity run in 'ISO 8601' format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "activityRunEnd": {
          "description": "The end time of the activity run in 'ISO 8601' format.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "durationInMs": {
          "description": "The duration of the activity run.",
          "type": "integer",
          "readOnly": true
        },
        "input": {
          "description": "The input for the activity.",
          "type": "object",
          "readOnly": true
        },
        "output": {
          "description": "The output for the activity.",
          "type": "object",
          "readOnly": true
        },
        "error": {
          "description": "The error if any from the activity run.",
          "type": "object",
          "readOnly": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "TriggerRunsQueryResponse": {
      "description": "A list of trigger runs.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of trigger runs.",
          "items": {
            "$ref": "#/definitions/TriggerRun"
          }
        },
        "continuationToken": {
          "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
          "type": "string"
        }
      }
    },
    "TriggerRun": {
      "description": "Trigger runs.",
      "type": "object",
      "properties": {
        "triggerRunId": {
          "type": "string",
          "description": "Trigger run id.",
          "readOnly": true
        },
        "triggerName": {
          "type": "string",
          "description": "Trigger name.",
          "readOnly": true
        },
        "triggerType": {
          "type": "string",
          "description": "Trigger type.",
          "readOnly": true
        },
        "triggerRunTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Trigger run start time.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Inprogress"
          ],
          "x-ms-enum": {
            "name": "TriggerRunStatus",
            "modelAsString": true
          },
          "description": "Trigger run status.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Trigger error message.",
          "readOnly": true
        },
        "properties": {
          "description": "List of property name and value related to trigger run. Name, value pair depends on type of trigger.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "triggeredPipelines": {
          "description": "List of pipeline name and run Id triggered by the trigger run.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "runDimension": {
          "description": "Run dimension for which trigger was fired.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "dependencyStatus": {
          "description": "Status of the upstream pipelines.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "OperationListResponse": {
      "description": "A list of operations that can be performed by the Data Factory service.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of Data Factory operations supported by the Data Factory resource provider."
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of results, if any remaining results exist."
        }
      }
    },
    "Operation": {
      "description": "Azure Data Factory API operation definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "origin": {
          "description": "The intended executor of the operation.",
          "type": "string"
        },
        "display": {
          "description": "Metadata associated with the operation.",
          "properties": {
            "description": {
              "description": "The description of the operation.",
              "type": "string"
            },
            "provider": {
              "description": "The name of the provider.",
              "type": "string"
            },
            "resource": {
              "description": "The name of the resource type on which the operation is performed.",
              "type": "string"
            },
            "operation": {
              "description": "The type of operation: get, read, delete, etc.",
              "type": "string"
            }
          }
        },
        "properties": {
          "description": "Additional details about the operation.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationProperties"
        }
      }
    },
    "OperationProperties": {
      "description": "Additional details about an operation.",
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "serviceSpecification": {
          "description": "Details about a service operation.",
          "$ref": "#/definitions/OperationServiceSpecification"
        }
      }
    },
    "OperationServiceSpecification": {
      "description": "Details about a service operation.",
      "type": "object",
      "properties": {
        "logSpecifications": {
          "description": "Details about operations related to logs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationLogSpecification"
          }
        },
        "metricSpecifications": {
          "description": "Details about operations related to metrics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationMetricSpecification"
          }
        }
      }
    },
    "OperationLogSpecification": {
      "description": "Details about an operation related to logs.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the log category.",
          "type": "string"
        },
        "displayName": {
          "description": "Localized display name.",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blobs created in the customer storage account, per hour.",
          "type": "string"
        }
      }
    },
    "OperationMetricSpecification": {
      "description": "Details about an operation related to metrics.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the metric.",
          "type": "string"
        },
        "displayName": {
          "description": "Localized display name of the metric.",
          "type": "string"
        },
        "displayDescription": {
          "description": "The description of the metric.",
          "type": "string"
        },
        "unit": {
          "description": "The unit that the metric is measured in.",
          "type": "string"
        },
        "aggregationType": {
          "description": "The type of metric aggregation.",
          "type": "string"
        },
        "enableRegionalMdmAccount": {
          "description": "Whether or not the service is using regional MDM accounts.",
          "type": "string"
        },
        "sourceMdmAccount": {
          "description": "The name of the MDM account.",
          "type": "string"
        },
        "sourceMdmNamespace": {
          "description": "The name of the MDM namespace.",
          "type": "string"
        },
        "availabilities": {
          "description": "Defines how often data for metrics becomes available.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationMetricAvailability"
          }
        },
        "dimensions": {
          "description": "Defines the metric dimension.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationMetricDimension"
          }
        }
      }
    },
    "OperationMetricAvailability": {
      "description": "Defines how often data for a metric becomes available.",
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "The granularity for the metric.",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blob created in the customer storage account, per hour.",
          "type": "string"
        }
      }
    },
    "OperationMetricDimension": {
      "description": "Defines the metric dimension.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the dimension for the metric.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the metric dimension.",
          "type": "string"
        },
        "toBeExportedForShoebox": {
          "description": "Whether the dimension should be exported to Azure Monitor.",
          "type": "boolean"
        }
      }
    },
    "GetSsisObjectMetadataRequest": {
      "type": "object",
      "description": "The request payload of get SSIS object metadata.",
      "properties": {
        "metadataPath": {
          "type": "string",
          "description": "Metadata path."
        }
      }
    },
    "SsisObjectMetadataStatusResponse": {
      "type": "object",
      "description": "The status of the operation.",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "name": {
          "type": "string",
          "description": "The operation name."
        },
        "properties": {
          "type": "string",
          "description": "The operation properties."
        },
        "error": {
          "type": "string",
          "description": "The operation error message."
        }
      }
    },
    "ExposureControlBatchRequest": {
      "description": "A list of exposure control features.",
      "type": "object",
      "required": [
        "exposureControlRequests"
      ],
      "properties": {
        "exposureControlRequests": {
          "type": "array",
          "description": "List of exposure control features.",
          "items": {
            "$ref": "#/definitions/ExposureControlRequest"
          }
        }
      }
    },
    "ExposureControlRequest": {
      "type": "object",
      "description": "The exposure control request.",
      "properties": {
        "featureName": {
          "type": "string",
          "description": "The feature name."
        },
        "featureType": {
          "type": "string",
          "description": "The feature type."
        }
      }
    },
    "ExposureControlBatchResponse": {
      "description": "A list of exposure control feature values.",
      "type": "object",
      "required": [
        "exposureControlResponses"
      ],
      "properties": {
        "exposureControlResponses": {
          "type": "array",
          "description": "List of exposure control feature values.",
          "items": {
            "$ref": "#/definitions/ExposureControlResponse"
          }
        }
      }
    },
    "ExposureControlResponse": {
      "type": "object",
      "description": "The exposure control response.",
      "properties": {
        "featureName": {
          "type": "string",
          "description": "The feature name.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "The feature value.",
          "readOnly": true
        }
      }
    },
    "DataFlowListResponse": {
      "description": "A list of data flow resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of data flows.",
          "items": {
            "$ref": "#/definitions/DataFlowResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "CreateDataFlowDebugSessionRequest": {
      "description": "Request body structure for creating data flow debug session.",
      "type": "object",
      "properties": {
        "computeType": {
          "description": "Compute type of the cluster. The value will be overwritten by the same setting in integration runtime if provided.",
          "type": "string"
        },
        "coreCount": {
          "description": "Core count of the cluster. The value will be overwritten by the same setting in integration runtime if provided.",
          "type": "integer"
        },
        "timeToLive": {
          "description": "Time to live setting of the cluster in minutes.",
          "type": "integer"
        },
        "integrationRuntime": {
          "description": "Set to use integration runtime setting for data flow debug session.",
          "$ref": "#/definitions/IntegrationRuntimeDebugResource"
        }
      }
    },
    "CreateDataFlowDebugSessionResponse": {
      "description": "Response body structure for creating data flow debug session.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The state of the debug session.",
          "type": "string"
        },
        "sessionId": {
          "description": "The ID of data flow debug session.",
          "type": "string"
        }
      }
    },
    "DataFlowSourceSetting": {
      "description": "Definition of data flow source setting for debug.",
      "type": "object",
      "properties": {
        "sourceName": {
          "description": "The data flow source name.",
          "type": "string"
        },
        "rowLimit": {
          "description": "Defines the row limit of data flow source in debug.",
          "type": "integer"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "DataFlowStagingInfo": {
      "description": "Staging info for execute data flow activity.",
      "properties": {
        "linkedService": {
          "description": "Staging linked service reference.",
          "$ref": "#/definitions/LinkedServiceReference"
        },
        "folderPath": {
          "description": "Folder path for staging blob. Type: string (or Expression with resultType string)",
          "type": "object"
        }
      }
    },
    "DataFlowDebugPackage": {
      "description": "Request body structure for starting data flow debug session.",
      "type": "object",
      "properties": {
        "sessionId": {
          "description": "The ID of data flow debug session.",
          "type": "string"
        },
        "dataFlow": {
          "description": "Data flow instance.",
          "$ref": "#/definitions/DataFlowDebugResource"
        },
        "datasets": {
          "type": "array",
          "description": "List of datasets.",
          "items": {
            "$ref": "#/definitions/DatasetDebugResource"
          }
        },
        "linkedServices": {
          "type": "array",
          "description": "List of linked services.",
          "items": {
            "$ref": "#/definitions/LinkedServiceDebugResource"
          }
        },
        "staging": {
          "description": "Staging info for debug session.",
          "$ref": "#/definitions/DataFlowStagingInfo"
        },
        "debugSettings": {
          "description": "Data flow debug settings.",
          "type": "object",
          "properties": {
            "sourceSettings": {
              "type": "array",
              "description": "Source setting for data flow debug.",
              "items": {
                "$ref": "#/definitions/DataFlowSourceSetting"
              }
            },
            "parameters": {
              "description": "Data flow parameters.",
              "$ref": "#/definitions/ParameterValueSpecification"
            },
            "datasetParameters": {
              "description": "Parameters for dataset.",
              "type": "object"
            }
          }
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "AddDataFlowToDebugSessionResponse": {
      "description": "Response body structure for starting data flow debug session.",
      "type": "object",
      "properties": {
        "jobVersion": {
          "description": "The ID of data flow debug job version.",
          "type": "string"
        }
      }
    },
    "DeleteDataFlowDebugSessionRequest": {
      "description": "Request body structure for deleting data flow debug session.",
      "type": "object",
      "properties": {
        "sessionId": {
          "description": "The ID of data flow debug session.",
          "type": "string"
        }
      }
    },
    "DataFlowDebugCommandPayload": {
      "description": "Structure of command payload.",
      "type": "object",
      "properties": {
        "streamName": {
          "description": "The stream name which is used for preview.",
          "type": "string"
        },
        "rowLimits": {
          "description": "Row limits for preview response.",
          "type": "integer"
        },
        "columns": {
          "description": "Array of column names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "description": "The expression which is used for preview.",
          "type": "string"
        }
      },
      "required": [
        "streamName"
      ]
    },
    "DataFlowDebugCommandRequest": {
      "description": "Request body structure for data flow debug command.",
      "type": "object",
      "properties": {
        "sessionId": {
          "description": "The ID of data flow debug session.",
          "type": "string"
        },
        "command": {
          "description": "The command type.",
          "type": "string",
          "enum": [
            "executePreviewQuery",
            "executeStatisticsQuery",
            "executeExpressionQuery"
          ],
          "x-ms-enum": {
            "name": "DataFlowDebugCommandType",
            "modelAsString": true
          }
        },
        "commandPayload": {
          "description": "The command payload object.",
          "$ref": "#/definitions/DataFlowDebugCommandPayload"
        }
      }
    },
    "DataFlowDebugCommandResponse": {
      "description": "Response body structure of data flow result for data preview, statistics or expression preview.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The run status of data preview, statistics or expression preview.",
          "type": "string"
        },
        "data": {
          "description": "The result data of data preview, statistics or expression preview.",
          "type": "string"
        }
      }
    },
    "QueryDataFlowDebugSessionsResponse": {
      "description": "A list of active debug sessions.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array with all active debug sessions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataFlowDebugSessionInfo"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "DataFlowDebugSessionInfo": {
      "description": "Data flow debug session info.",
      "type": "object",
      "properties": {
        "dataFlowName": {
          "description": "The name of the data flow.",
          "type": "string"
        },
        "computeType": {
          "description": "Compute type of the cluster.",
          "type": "string"
        },
        "coreCount": {
          "description": "Core count of the cluster.",
          "type": "integer"
        },
        "nodeCount": {
          "description": "Node count of the cluster. (deprecated property)",
          "type": "integer"
        },
        "integrationRuntimeName": {
          "description": "Attached integration runtime name of data flow debug session.",
          "type": "string"
        },
        "sessionId": {
          "description": "The ID of data flow debug session.",
          "type": "string"
        },
        "startTime": {
          "description": "Start time of data flow debug session.",
          "type": "string"
        },
        "timeToLiveInMinutes": {
          "description": "Compute type of the cluster.",
          "type": "integer"
        },
        "lastActivityTime": {
          "description": "Last activity time of data flow debug session.",
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "GetDataFactoryOperationStatusResponse": {
      "description": "Response body structure for get data factory operation status.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the operation.",
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "DataFlowResource": {
      "description": "Data flow resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/DataFlow.json#/definitions/DataFlow",
          "description": "Data flow properties."
        }
      },
      "required": [
        "properties"
      ]
    },
    "DataFlowDebugResource": {
      "description": "Data flow debug resource.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResourceDebugResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/DataFlow.json#/definitions/DataFlow",
          "description": "Data flow properties."
        }
      },
      "required": [
        "properties"
      ]
    },
    "DataFlowReference": {
      "description": "Data flow reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Data flow reference type.",
          "enum": [
            "DataFlowReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference data flow name."
        },
        "datasetParameters": {
          "type": "object",
          "description": "Reference data flow parameters from dataset."
        }
      },
      "additionalProperties": {
        "type": "object"
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "managedPrivateEndpointListResponse": {
      "description": "A list of managed private endpoint resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of managed private endpoints.",
          "items": {
            "$ref": "#/definitions/ManagedPrivateEndpointResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "ManagedPrivateEndpointResource": {
      "description": "Managed private endpoint resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/ManagedPrivateEndpoint.json#/definitions/ManagedPrivateEndpoint",
          "description": "Managed private endpoint properties."
        }
      },
      "required": [
        "properties"
      ]
    },
    "ManagedVirtualNetworkListResponse": {
      "description": "A list of managed Virtual Network resources.",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of managed Virtual Networks.",
          "items": {
            "$ref": "#/definitions/ManagedVirtualNetworkResource"
          }
        },
        "nextLink": {
          "description": "The link to the next page of results, if any remaining results exist.",
          "type": "string"
        }
      }
    },
    "ManagedVirtualNetworkReference": {
      "description": "Managed Virtual Network reference type.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Managed Virtual Network reference type.",
          "enum": [
            "ManagedVirtualNetworkReference"
          ]
        },
        "referenceName": {
          "type": "string",
          "description": "Reference ManagedVirtualNetwork name."
        }
      },
      "required": [
        "type",
        "referenceName"
      ]
    },
    "ManagedVirtualNetworkResource": {
      "description": "Managed Virtual Network resource type.",
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "./entityTypes/ManagedVirtualNetwork.json#/definitions/ManagedVirtualNetwork",
          "description": "Managed Virtual Network properties."
        }
      },
      "required": [
        "properties"
      ]
    }
  },
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "description": "The subscription identifier.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "description": "The resource group name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "factoryName": {
      "name": "factoryName",
      "description": "The factory name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "locationId": {
      "name": "locationId",
      "description": "The location identifier.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "linkedServiceName": {
      "name": "linkedServiceName",
      "description": "The linked service name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "datasetName": {
      "name": "datasetName",
      "description": "The dataset name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "pipelineName": {
      "name": "pipelineName",
      "description": "The pipeline name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "triggerName": {
      "name": "triggerName",
      "description": "The trigger name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "runId": {
      "name": "runId",
      "description": "The pipeline run identifier.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "integrationRuntimeName": {
      "name": "integrationRuntimeName",
      "description": "The integration runtime name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "nodeName": {
      "name": "nodeName",
      "description": "The integration runtime node name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
      "minLength": 1,
      "maxLength": 150,
      "x-ms-parameter-location": "method"
    },
    "dataFlowName": {
      "name": "dataFlowName",
      "description": "The data flow name.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
      "minLength": 1,
      "maxLength": 260,
      "x-ms-parameter-location": "method"
    },
    "managedVirtualNetworkName": {
      "name": "managedVirtualNetworkName",
      "description": "Managed virtual network name",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
      "minLength": 1,
      "maxLength": 127,
      "x-ms-parameter-location": "method"
    },
    "managedPrivateEndpointName": {
      "name": "managedPrivateEndpointName",
      "description": "Managed private endpoint name",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
      "minLength": 1,
      "maxLength": 127,
      "x-ms-parameter-location": "method"
    },
    "api-version": {
      "name": "api-version",
      "description": "The API version.",
      "in": "query",
      "required": true,
      "type": "string"
    }
  }
}
